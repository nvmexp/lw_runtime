//
// DO NOT EDIT - generated by simspec!
//

#ifndef ___ARISP_H_INC_
#define ___ARISP_H_INC_
// --------------------------------------------------------------------------
// 
// Copyright (c) 2004, LWPU Corp.
// All Rights Reserved.
// 
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of LWPU Corp.;
// the contents of this file may not be disclosed to third parties, copied or
// duplicated in any form, in whole or in part, without the prior written
// permission of LWPU Corp.
// 
// RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to restrictions
// as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
// and Computer Software clause at DFARS 252.227-7013, and/or in similar or
// successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
// rights reserved under the Copyright Laws of the United States.
// 
// --------------------------------------------------------------------------
// 
// ISP (Image Signal Processor) register definition
//
// The ISP takes digital image signal from CMOS imagers and colwerts to YUV444 signal.
//
// Colwentional CMOS/CCD imagers (or sensors) are built with Bayer color filter array (CFA) 
// and their output image signal is an alternating series of image lines, one with interleaved 
// R and G, and another one with interleaved G and B. 
// Another type of CMOS imagers, namely stacked pixel type, shall be accepted by the ISP in the
// future. The stacked pixel type imagers have three layers of sensors for R, G, anf B stucked
// on top of others, and are capable of producing three color signals at every pixel position
// in the imaging area.
// 
// An imager that supplies pixel stream to the ISP is the master of timing, and also supplies
// pixel clock, H and V sync timing pulses.
// The ISP is a slave to the imager, and locally regenerates line and frame timing based on the
// H and V input sync pulses.
// A variety of imagers from CIF size to 5+ mega-pixel are acceptable. Overall frame timing is
// defined by the input V and H pulses. Within the frame period, positions of optical black
// lines at the top and active image lines are specified by the host through control parameter
// registers.
// Likewise, positions of optical black pixels at the left and right, and active image pixels 
// within the line period are specified through control parameter registers.
// 
// In AP15, The ISP receives sensor's raw data via "VI2ISP" data bus.  VI2ISP is a SVD bus
// (please refer arvideo.spec for the definition of SVD),  The bayer data is on the lower 16 bits
// of the 24-bit VI2ISP bus, and it's in the format called "BAYER3D".  BAYER3D assumes the 
// raw data has 14 effective bits, and it puts 7 bits on the LSBs of each of the two bytes.
// ISP needs to grab the 10 "effective" most significant bits from VI2ISP bus to feed into its
// data processing pipe.  The following shows where the 10 "effective" MSBs are:
//
// vi2isp bits    fedcba98 76543210
// isp receives   -dcba987 -6543210
// isp takes:     -dcba987 -654----
// isp names:     -9876543 -210----
//  
// The ISP outputs processed pixel data in YUV444 format.  The output bus "ISP2VI" is also 
// a SVD bus.    
// The sensor's output data pins need to be aligned with VI's input pins at MSB to ensure  
// ISP's function correctness. 
// In bypass mode (demosaic_enable=0), ISP just forwards the data on vi2isp bus to isp2vi bus
// without any change.
//                22221111 111111
// isp2vi bits    32109876 54321098 76543210
// isp received:  -------- -dcba987 -6543210
// isp sends:     *dcba987 *dcba987 *6543210
// 
// Note that * means "0" (low level).
// Note that bits [23:16] carry a copy of bits [15:8].
//
// There are 3 kinds of output images selectable with "DEMOSAIC_ENABLE" and "OUT_IMAGE_TYPE".
// Notice that "DEMOSAIC_ENABLE" means "pixel-processing-enable" and not narrow sense of 
//   enable for the demosaic (color-interpolation) section.
//   "DEMOSAIC_ENABLE" "OUT_IMAGE_TYPE"     kind of output image
//   --------------------------------------------------------------
//         0                0               input Bayer image (bypassed)
//         0                1               input Bayer image (bypassed)
//         1                0               demosaiced YUV or RGB image
//         1                1               processed Bayer image
//  
//
// Using 2D interpolation, input image frames in R/G/B mosaic pattern are demosaiced and
// colwerted to Y/U/V format.
// A number of line delay buffers are used in the demosaicing. For example, 2 line-buffers are
// used for the simplest configuration, and 2 groups of line buffers of 4-line and 2-line each 
// are used for the preferred configuration.
// These line buffers are allocated in the display memory. Multiple write and read ports 
// logically required for the line buffers are to be mapped to physical memory of 1
// bidirectional port.
// A stream of pixels (10-bit per pixel for example) are parallelized to fit into 128 bits of
// a memory word, and appropriately interleaved for the most efficient memory access operation.
//
// There are a number of operation modes for demosaicing and related pixel processing, in which
// 2D datapath, demosaicing method, image enhancement processing and so on are pre-arranged.
// By selecting one operation mode, all the related elements are setup as pre-arranged.
// 
// The first operation to be applied to the input pixel signal is to establish "black" level.
// This is to anchor signal activities to the black reference level, or "zero" level. Optical
// black pixels, which are arranged to surround the active imaging area, are used to determine
// the input signal level of reference black, which is mapped to "zero" level in the following
// pixel processing. CMOS imagers tend to show a small fractuation of black level by the column 
// position along every image line, so "fixed column noise pattern" will be axtracted and then
// used for cancellation. The input signal level of reference black may vary line by line within
// an image frame, so the optical black pixels on every line are referred to to detect and 
// compensate the fluctuations.
// Stacked pixel type imagers do not have fixed column noise, but they show cross-talk 
// (or leakagea) of one pixel to the next one, due to their readout circuit arrangement. So 
// there must be a "column filter" that reverses the cross-talk.
//
// Imagers tend to show some non-linearity in their light-to-electric transfer characteristics.
// There is a logical LUT provided to linearize the transfer characteristics, which is
// implemented in a multi-segment piecewise linear line generator. 
//
// The optical lens placed in front of the imager show some degree of shading. Cheaper lens
// tends to show larger shading. To compensate the lens shading, a varying "gain factor" as a
// function of location in the image frame is multiplied to ever pixel. 
//
// Two blocks of memory space are reserved for ISP
//   1. Sampled pixel values result from M3 statistics gathering (see M3_MEM_START_ADDR)
//   2. Sampled pixel values for detection of flicker bands (see FB_MEM_START_ADDR)
// 
// 
// Memory address width
// Input resolution
// Horizontal input resolution (# of bits)
#define LW_ISP_H_IN     14
// Vertical   input resolution (# of bits)
#define LW_ISP_V_IN     14
// Width or height of optical black (# of bits)
#define LW_ISP_OB_IN    4
// Number of sensor pixels (# of bits)
#define LW_ISP_PIXEL_IN 25
// Number of bits per "BAYER3D" pixels
#define LW_ISP_PIXEL_BAYER3D    14
// Memory size of the Fixed Column Noise pattern
// Number of words (pixels)
#define LW_ISP_FCN_MEM_SIZE     1200
// Pixel input from imagers
// Sensor data bus width
#define LW_ISP_SENSOR_DIBIT     12
// Bayer CFA type imager (number of bits/pixel)
#define LW_ISP_BAYER_DIBIT      10
#define LW_ISP_BAYER_DIMAX      1023
// Pixel stack type imager (number of bits/pixel)
#define LW_ISP_STACK_DIBIT      12
// Chose a type of imager
#define LW_ISP_PIXEL_DIMAX      1023
#define LW_ISP_PIXEL_DIBIT      10
// Pixel resolution in gain/white balance and demosaic
// Number of bits per pixel
#define LW_ISP_DEM_DPBIT        10
// Optical Black and Fixed Column Noise Processing
// OB acquisition, bit width of filter coefficient (coded)
#define LW_ISP_OB_KBIT  4
// OB processing (number of bits/pixel)
// ISP_OB_DBIT is obsolete and to be removed in next project, 
// refer to ISP_OBR_DBIT instead.
#define LW_ISP_OB_DBIT  6
#define LW_ISP_OBR_DBIT 10
// OB filter, fraction bits (number of bits)
#define LW_ISP_OB_FBIT  5
// Additional bits for LOB callwlation
#define LW_ISP_LOB_ADD  3
// LOB column width 
#define LW_ISP_LOB_WIDTH        2
// FCN acquisition, bit width of filter coefficient (coded)
#define LW_ISP_FCN_KBIT 4
// Column filter, bit width of coefficient (coded)
#define LW_ISP_CF_KBIT  4
// Common gain applied after OB restoration
#define LW_ISP_CG_DBIT  10
#define LW_ISP_CG_FBIT  5
// De-Knee, Input Linearization Processing
// This is implemented as piecewise linear approximation of equally spaced segments
// Maximum number of line segments for the piecewise linear approximation
#define LW_ISP_DEKNEE_NSEG      16
// Number of bits for input and output
#define LW_ISP_DEKNEE_DBIT      10
// U2.10, slope value of a de-knee line segment
#define LW_ISP_DEKNEE_SBIT      12
// Nubmer of fraction bits for the de-knee line segment slope values
#define LW_ISP_DEKNEE_FBIT      10
// Lens Shading Compensation Processing (legacy)
// U3.6  coefficient of 2nd-order term
#define LW_ISP_SHADING_K2BIT    9
// S2.6  coefficient of 1st-order term, signed magnitude (planned)
// U3.6  positive only (actual)
#define LW_ISP_SHADING_K1BIT    9
// Lens Shading Compensation Processing (new)
// Number of control points per patch (row and column)
#define LW_ISP_LS_CTRL_PT_PER_PATCH_COLUMN      4
#define LW_ISP_LS_CTRL_PT_PER_PATCH_ROW 4
// Number of patches per image row and column
#define LW_ISP_LS_PATCH_PER_COLUMN      3
#define LW_ISP_LS_PATCH_PER_ROW 3
// Number of control points per image row and column 
#define LW_ISP_LS_CTRL_PT_PER_COLUMN    10
#define LW_ISP_LS_CTRL_PT_PER_ROW       10
// Number of stored control points total (for all 4 colors)
#define LW_ISP_LS_NUM_ST_CTRL_PT        480
#define LW_ISP_LS_NUM_ST_CTRL_PT_LOG2   9
// S4.13  Control points for Bezier patch surfaces
#define LW_ISP_LS_SIGN_CBIT     1
#define LW_ISP_LS_INT_CBIT      4
#define LW_ISP_LS_FRAC_CBIT     13
#define LW_ISP_LS_CBIT  18
// U1.34  1 / ( PATCH_WIDTH/2 ) where PATCH_WIDTH >= 12 and is even
#define LW_ISP_LS_SIGN_DELTAUBIT        0
#define LW_ISP_LS_INT_DELTAUBIT 1
#define LW_ISP_LS_FRAC_DELTAUBIT        34
#define LW_ISP_LS_DELTAUBIT     35
// U1.34  1 / ( PATCH_HEIGHT/2 ) where PATCH_HEIGHT >= 4 and is even
#define LW_ISP_LS_SIGN_DELTAVBIT        0
#define LW_ISP_LS_INT_DELTAVBIT 1
#define LW_ISP_LS_FRAC_DELTAVBIT        34
#define LW_ISP_LS_DELTAVBIT     35
// U1.22  Normalized horizontal coordinate (aclwmulation of delta u)
#define LW_ISP_LS_SIGN_UBIT     0
#define LW_ISP_LS_INT_UBIT      1
#define LW_ISP_LS_FRAC_UBIT     22
#define LW_ISP_LS_UBIT  23
// U1.22  Normalized horizontal coordinate (aclwmulation of delta v)
#define LW_ISP_LS_SIGN_VBIT     0
#define LW_ISP_LS_INT_VBIT      1
#define LW_ISP_LS_FRAC_VBIT     22
#define LW_ISP_LS_VBIT  23
// S5.17  Precision of mul in vertical interpolation
//        Truncated ( ( S4.13 - S4.13 ) * U1.22 = S5.13 * U1.22 = S5.25 )
//        If we assume U1.22 <= 1.0, prod should be max S5.25
#define LW_ISP_LS_SIGN_V_PRODBIT        1
#define LW_ISP_LS_INT_V_PRODBIT 5
#define LW_ISP_LS_FRAC_V_PRODBIT        17
#define LW_ISP_LS_V_PRODBIT     23
// S4.17  Precision of add in vertical interpolation
//        Truncated S5.17 + S4.13 = S4.17
//        If we assume U1.22 is max 1.0, sum is the average
//        so should be max S4.17
#define LW_ISP_LS_SIGN_V_SUMBIT 1
#define LW_ISP_LS_INT_V_SUMBIT  4
#define LW_ISP_LS_FRAC_V_SUMBIT 17
#define LW_ISP_LS_V_SUMBIT      22
// S5.16  Precision of mul in horizontal interpolation
//        Truncated ( ( S4.13 - S4.13 ) * U1.22 = S5.13 * U1.22 = S5.25 )
//        If we assume U1.22 <= 1.0, prod should be max S5.25
#define LW_ISP_LS_SIGN_H_PRODBIT        1
#define LW_ISP_LS_INT_H_PRODBIT 5
#define LW_ISP_LS_FRAC_H_PRODBIT        16
#define LW_ISP_LS_H_PRODBIT     22
// S4.16  Precision of add in horizontal interpolation
//        Truncated S5.16 + S4.13 = S4.16
//        If we assume U1.22 is max 1.0, sum is the average
//        so should be max S4.16
#define LW_ISP_LS_SIGN_H_SUMBIT 1
#define LW_ISP_LS_INT_H_SUMBIT  4
#define LW_ISP_LS_FRAC_H_SUMBIT 16
#define LW_ISP_LS_H_SUMBIT      21
// U4.12  Final lens shading gain
#define LW_ISP_LS_SIGN_QBIT     0
#define LW_ISP_LS_INT_QBIT      4
#define LW_ISP_LS_FRAC_QBIT     12
#define LW_ISP_LS_QBIT  16
// Gain and White Balance 
// # of fraction bits for the temporal filters
#define LW_ISP_WB_FBIT  6
// U3.7  balancing gain factor
//   total bit count of KBIT
//   including KFBIT bits of fraction part
//#define ISP_WB_KBIT           10
#define LW_ISP_WB_KBIT  10
#define LW_ISP_WB_KFBIT 7
// Bit length of frequency counter
#define LW_ISP_WB_HBIT  10
// Selection of temporal filter coefficients (coded)
#define LW_ISP_WB_FKBIT 3
// Max limit for the peak detect (MSP 8-bit), 8'b1111_1100 
#define LW_ISP_WB_SMAX8 252
// Bit length of sample counter
#define LW_ISP_WB_SPLBIT        6
// Bad pixel
#define LW_ISP_BADPIXEL_LT_FBITS        3
#define LW_ISP_BADPIXEL_UT_FBITS        3
#define LW_ISP_BADPIXEL_LT_CBITS        4
#define LW_ISP_BADPIXEL_UT_CBITS        4
// Edge Enhancement and noise reduction
// Number of bits to specify coring threshold level
#define LW_ISP_CORE_DBIT        6
// Number of bits to represent coefficient for edge enhancement
#define LW_ISP_EENHANCE_CBIT    5
// Number of fraction bits used by the coefficient              
#define LW_ISP_EENHANCE_FBIT    3
// Color Correction
// Number of bits for positive only (unsigned) factors
#define LW_ISP_CC_PKBIT 11
// Number of bits for pos/neg (signed) factors
#define LW_ISP_CC_NKBIT 12
// Number of bits for fraction for the coefficients
#define LW_ISP_CC_FBIT  8
// Number of bits for fraction for the products
#define LW_ISP_CC_FPBIT 4
// Gamma Correction
// This is implemented as piecewise linear approximation of arbitrarily spaced segments
// Number of line segments for the piecewise linear approximation
#define LW_ISP_GAMMA_NSEG       32
// Number of bits per pixel for input pixel
#define LW_ISP_GAMMA_DIBIT      10
// Number of bits per pixel for output pixel
#define LW_ISP_GAMMA_DOBIT      8
// S3.8, slope value of a gamma correction line segment
#define LW_ISP_GAMMA_SBIT       12
// S3.8, slope value of a gamma correction line segment
#define LW_ISP_GAMMA_SFBIT      8
// RGB2YUV and Color Adjuster
// This is implemented as 3x3 matrix with Y and C gains
//   Max Y and C gains of 2.0
//   Hue rotation of full 360 degree
// U0.8 Red-to-Y
#define LW_ISP_CSC_R2Y_KBIT     8
// U1.8 Green-to-Y
#define LW_ISP_CSC_G2Y_KBIT     9
// U0.8 Blue-to-Y
#define LW_ISP_CSC_B2Y_KBIT     8
// 8.0 2's complement Y Offset Gain
#define LW_ISP_CSC_YOFF_KBIT    8
// S0.8 Red-to-U
#define LW_ISP_CSC_R2U_KBIT     9
// S0.8 Green-to-U
#define LW_ISP_CSC_G2U_KBIT     9
// S0.8 Blue-to-U
#define LW_ISP_CSC_B2U_KBIT     9
// S0.8 Red-to-V
#define LW_ISP_CSC_R2V_KBIT     9
// S0.8 Green-to-V
#define LW_ISP_CSC_G2V_KBIT     9
// S0.8 Blue-to-V
#define LW_ISP_CSC_B2V_KBIT     9
// Number of bits per pixel
#define LW_ISP_CSC_DBIT 8
// Number of fractional bits of the coefficients
#define LW_ISP_CSC_FBIT 8
// Number of fractional bits of the products
#define LW_ISP_CSC_FPBIT        4
// Pixel resolution in the ISP output
// Number of bits per ISP output pixel
#define LW_ISP_OUT_DPBIT        8
// Statistics gathering
// Bit-width of aclwmulators for auto-focus measurement
#define LW_ISP_DW4ACCBIT        32
// Flicker Band Detection
// Bit width to represent max number of elements in column vector
#define LW_ISP_FB_COL_VEC_BIT   8
// Bit width of low pass coefficients
#define LW_ISP_FB_KBIT  4
// Number of fractional bits of the coefficients
#define LW_ISP_FB_FBIT  5
// some macros used by sw
// isp timing window constraints
#define LW_ISP_MIN_HBLANK_PERIOD        19
#define LW_ISP_MIN_HACTIVE_END_TO_HSCAN_END_WIDTH       9
#define LW_ISP_MIN_VACTIVE_END_TO_VSCAN_END_HEIGHT      5
// align 256;
#define LW_ISP_INCR_SYNCPT_NB_CONDS     9
// --------------------------------------------------------------------------
// 
// Copyright (c) 2004, LWPU Corp.
// All Rights Reserved.
// 
// This is UNPUBLISHED PROPRIETARY SOURCE CODE of LWPU Corp.;
// the contents of this file may not be disclosed to third parties, copied or
// duplicated in any form, in whole or in part, without the prior written
// permission of LWPU Corp.
// 
// RESTRICTED RIGHTS LEGEND:
// Use, duplication or disclosure by the Government is subject to restrictions
// as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
// and Computer Software clause at DFARS 252.227-7013, and/or in similar or
// successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
// rights reserved under the Copyright Laws of the United States.
// 
// --------------------------------------------------------------------------
// 

// Register ISP_INCR_SYNCPT_0  
#define ISP_INCR_SYNCPT_0                       _MK_ADDR_CONST(0x0)
#define ISP_INCR_SYNCPT_0_SELWRE                        0x0
#define ISP_INCR_SYNCPT_0_WORD_COUNT                    0x1
#define ISP_INCR_SYNCPT_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_RESET_MASK                    _MK_MASK_CONST(0xffff)
#define ISP_INCR_SYNCPT_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_READ_MASK                     _MK_MASK_CONST(0xffff)
#define ISP_INCR_SYNCPT_0_WRITE_MASK                    _MK_MASK_CONST(0xffff)
// Condition mapped from raise/wait
#define ISP_INCR_SYNCPT_0_COND_SHIFT                    _MK_SHIFT_CONST(8)
#define ISP_INCR_SYNCPT_0_COND_FIELD                    (_MK_MASK_CONST(0xff) << ISP_INCR_SYNCPT_0_COND_SHIFT)
#define ISP_INCR_SYNCPT_0_COND_RANGE                    15:8
#define ISP_INCR_SYNCPT_0_COND_WOFFSET                  0x0
#define ISP_INCR_SYNCPT_0_COND_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_COND_DEFAULT_MASK                     _MK_MASK_CONST(0xff)
#define ISP_INCR_SYNCPT_0_COND_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_COND_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_COND_IMMEDIATE                        _MK_ENUM_CONST(0)
#define ISP_INCR_SYNCPT_0_COND_OP_DONE                  _MK_ENUM_CONST(1)
#define ISP_INCR_SYNCPT_0_COND_RD_DONE                  _MK_ENUM_CONST(2)
#define ISP_INCR_SYNCPT_0_COND_REG_WR_SAFE                      _MK_ENUM_CONST(3)
#define ISP_INCR_SYNCPT_0_COND_FRAME_START                      _MK_ENUM_CONST(4)
#define ISP_INCR_SYNCPT_0_COND_OUTPUT_END                       _MK_ENUM_CONST(5)
#define ISP_INCR_SYNCPT_0_COND_FRAME_END                        _MK_ENUM_CONST(6)
#define ISP_INCR_SYNCPT_0_COND_STATS                    _MK_ENUM_CONST(7)
#define ISP_INCR_SYNCPT_0_COND_FB_STATS                 _MK_ENUM_CONST(8)
#define ISP_INCR_SYNCPT_0_COND_COND_9                   _MK_ENUM_CONST(9)
#define ISP_INCR_SYNCPT_0_COND_COND_10                  _MK_ENUM_CONST(10)
#define ISP_INCR_SYNCPT_0_COND_COND_11                  _MK_ENUM_CONST(11)
#define ISP_INCR_SYNCPT_0_COND_COND_12                  _MK_ENUM_CONST(12)
#define ISP_INCR_SYNCPT_0_COND_COND_13                  _MK_ENUM_CONST(13)
#define ISP_INCR_SYNCPT_0_COND_COND_14                  _MK_ENUM_CONST(14)
#define ISP_INCR_SYNCPT_0_COND_COND_15                  _MK_ENUM_CONST(15)

// syncpt index value
#define ISP_INCR_SYNCPT_0_INDX_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_INCR_SYNCPT_0_INDX_FIELD                    (_MK_MASK_CONST(0xff) << ISP_INCR_SYNCPT_0_INDX_SHIFT)
#define ISP_INCR_SYNCPT_0_INDX_RANGE                    7:0
#define ISP_INCR_SYNCPT_0_INDX_WOFFSET                  0x0
#define ISP_INCR_SYNCPT_0_INDX_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_INDX_DEFAULT_MASK                     _MK_MASK_CONST(0xff)
#define ISP_INCR_SYNCPT_0_INDX_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_0_INDX_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_INCR_SYNCPT_CNTRL_0  
#define ISP_INCR_SYNCPT_CNTRL_0                 _MK_ADDR_CONST(0x1)
#define ISP_INCR_SYNCPT_CNTRL_0_SELWRE                  0x0
#define ISP_INCR_SYNCPT_CNTRL_0_WORD_COUNT                      0x1
#define ISP_INCR_SYNCPT_CNTRL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_RESET_MASK                      _MK_MASK_CONST(0x101)
#define ISP_INCR_SYNCPT_CNTRL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_READ_MASK                       _MK_MASK_CONST(0x101)
#define ISP_INCR_SYNCPT_CNTRL_0_WRITE_MASK                      _MK_MASK_CONST(0x101)
// If NO_STALL is 1, then when fifos are full,
// INCR_SYNCPT methods will be dropped and the
// INCR_SYNCPT_ERROR[COND] bit will be set.
// If NO_STALL is 0, then when fifos are full,
// the client host interface will be stalled.
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_SHIFT                      _MK_SHIFT_CONST(8)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_FIELD                      (_MK_MASK_CONST(0x1) << ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_SHIFT)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_RANGE                      8:8
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_WOFFSET                    0x0
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_NO_STALL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// If SOFT_RESET is set, then all internal state
// of the client syncpt block will be reset.
// To do soft reset, first set SOFT_RESET of
// all host1x clients affected, then clear all
// SOFT_RESETs.
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_FIELD                    (_MK_MASK_CONST(0x1) << ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_SHIFT)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_RANGE                    0:0
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_WOFFSET                  0x0
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_CNTRL_0_INCR_SYNCPT_SOFT_RESET_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_INCR_SYNCPT_ERROR_0  
#define ISP_INCR_SYNCPT_ERROR_0                 _MK_ADDR_CONST(0x2)
#define ISP_INCR_SYNCPT_ERROR_0_SELWRE                  0x0
#define ISP_INCR_SYNCPT_ERROR_0_WORD_COUNT                      0x1
#define ISP_INCR_SYNCPT_ERROR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_INCR_SYNCPT_ERROR_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
// COND_STATUS[COND] is set if the fifo for COND overflows.
// This bit is sticky and will remain set until cleared.
// Cleared by writing 1.
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_SHIFT)
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_RANGE                       31:0
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_WOFFSET                     0x0
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_INCR_SYNCPT_ERROR_0_COND_STATUS_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// reserve locations for future expansion

// Reserved address 3 [0x3] 

// Reserved address 4 [0x4] 

// Reserved address 5 [0x5] 

// Reserved address 6 [0x6] 

// Reserved address 7 [0x7] 
// just in case names were redefined using macros

// Register ISP_CONT_SYNCPT_FB_STATS_0  
#define ISP_CONT_SYNCPT_FB_STATS_0                      _MK_ADDR_CONST(0x8)
#define ISP_CONT_SYNCPT_FB_STATS_0_SELWRE                       0x0
#define ISP_CONT_SYNCPT_FB_STATS_0_WORD_COUNT                   0x1
#define ISP_CONT_SYNCPT_FB_STATS_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_RESET_MASK                   _MK_MASK_CONST(0x100)
#define ISP_CONT_SYNCPT_FB_STATS_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_READ_MASK                    _MK_MASK_CONST(0x1ff)
#define ISP_CONT_SYNCPT_FB_STATS_0_WRITE_MASK                   _MK_MASK_CONST(0x1ff)
// return INDX (set HOST_CLRD packet TYPE field to SYNCPT)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_FIELD                  (_MK_MASK_CONST(0xff) << ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_SHIFT)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_RANGE                  7:0
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_WOFFSET                        0x0
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_INDX_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// on host read bus every time FB_STATS condition is true and FB_STATS_EN is set
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_SHIFT                    _MK_SHIFT_CONST(8)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_FIELD                    (_MK_MASK_CONST(0x1) << ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_SHIFT)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_RANGE                    8:8
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_WOFFSET                  0x0
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_CONT_SYNCPT_FB_STATS_0_FB_STATS_EN_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// For host interface
// Context switch register.  Should be common to all modules.  Includes the
// current channel/class (which is writable by SW) and the next channel/class
// (which the hardware sets when it receives a context switch).
// Context switch works like this:
// Any context switch request triggers an interrupt to the host and causes the
// new channel/class to be stored in NEXT_CHANNEL/NEXT_CLASS (see
// vmod/chexample).  SW sees that there is a context switch interrupt and does
// the necessary operations to make the module ready to receive traffic from
// the new context.  It clears the context switch interrupt and writes
// LWRR_CHANNEL/CLASS to the same value as NEXT_CHANNEL/CLASS, which causes a
// context switch acknowledge packet to be sent to the host.  This completes
// the context switch and allows the host to continue sending data to the
// module.
// Context switches can also be pre-loaded.  If LWRR_CLASS/CHANNEL are written
// and updated to the next CLASS/CHANNEL before the context switch request
// oclwrs, an acknowledge will be generated by the module and no interrupt will
// be triggered.  This is one way for software to avoid dealing with context
// switch interrupts.
// Another way to avoid context switch interrupts is to set the AUTO_ACK bit.
// This bit tells the module to automatically acknowledge any incoming context
// switch requests without triggering an interrupt.  LWRR_* and NEXT_* will be
// updated by the module so they will always be current.

// Register ISP_CTXSW_0  
#define ISP_CTXSW_0                     _MK_ADDR_CONST(0x9)
#define ISP_CTXSW_0_SELWRE                      0x0
#define ISP_CTXSW_0_WORD_COUNT                  0x1
#define ISP_CTXSW_0_RESET_VAL                   _MK_MASK_CONST(0xf000f800)
#define ISP_CTXSW_0_RESET_MASK                  _MK_MASK_CONST(0xf3fffbff)
#define ISP_CTXSW_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_READ_MASK                   _MK_MASK_CONST(0xf3fffbff)
#define ISP_CTXSW_0_WRITE_MASK                  _MK_MASK_CONST(0xfbff)
// Current working class
#define ISP_CTXSW_0_LWRR_CLASS_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_CTXSW_0_LWRR_CLASS_FIELD                    (_MK_MASK_CONST(0x3ff) << ISP_CTXSW_0_LWRR_CLASS_SHIFT)
#define ISP_CTXSW_0_LWRR_CLASS_RANGE                    9:0
#define ISP_CTXSW_0_LWRR_CLASS_WOFFSET                  0x0
#define ISP_CTXSW_0_LWRR_CLASS_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_LWRR_CLASS_DEFAULT_MASK                     _MK_MASK_CONST(0x3ff)
#define ISP_CTXSW_0_LWRR_CLASS_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_LWRR_CLASS_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Automatically acknowledge any incoming context switch requests
#define ISP_CTXSW_0_AUTO_ACK_SHIFT                      _MK_SHIFT_CONST(11)
#define ISP_CTXSW_0_AUTO_ACK_FIELD                      (_MK_MASK_CONST(0x1) << ISP_CTXSW_0_AUTO_ACK_SHIFT)
#define ISP_CTXSW_0_AUTO_ACK_RANGE                      11:11
#define ISP_CTXSW_0_AUTO_ACK_WOFFSET                    0x0
#define ISP_CTXSW_0_AUTO_ACK_DEFAULT                    _MK_MASK_CONST(0x1)
#define ISP_CTXSW_0_AUTO_ACK_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_CTXSW_0_AUTO_ACK_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_AUTO_ACK_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_AUTO_ACK_MANUAL                     _MK_ENUM_CONST(0)
#define ISP_CTXSW_0_AUTO_ACK_AUTOACK                    _MK_ENUM_CONST(1)

// Current working channel, reset to 'invalid'
#define ISP_CTXSW_0_LWRR_CHANNEL_SHIFT                  _MK_SHIFT_CONST(12)
#define ISP_CTXSW_0_LWRR_CHANNEL_FIELD                  (_MK_MASK_CONST(0xf) << ISP_CTXSW_0_LWRR_CHANNEL_SHIFT)
#define ISP_CTXSW_0_LWRR_CHANNEL_RANGE                  15:12
#define ISP_CTXSW_0_LWRR_CHANNEL_WOFFSET                        0x0
#define ISP_CTXSW_0_LWRR_CHANNEL_DEFAULT                        _MK_MASK_CONST(0xf)
#define ISP_CTXSW_0_LWRR_CHANNEL_DEFAULT_MASK                   _MK_MASK_CONST(0xf)
#define ISP_CTXSW_0_LWRR_CHANNEL_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_LWRR_CHANNEL_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Next requested class
#define ISP_CTXSW_0_NEXT_CLASS_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_CTXSW_0_NEXT_CLASS_FIELD                    (_MK_MASK_CONST(0x3ff) << ISP_CTXSW_0_NEXT_CLASS_SHIFT)
#define ISP_CTXSW_0_NEXT_CLASS_RANGE                    25:16
#define ISP_CTXSW_0_NEXT_CLASS_WOFFSET                  0x0
#define ISP_CTXSW_0_NEXT_CLASS_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_NEXT_CLASS_DEFAULT_MASK                     _MK_MASK_CONST(0x3ff)
#define ISP_CTXSW_0_NEXT_CLASS_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_NEXT_CLASS_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Next requested channel
#define ISP_CTXSW_0_NEXT_CHANNEL_SHIFT                  _MK_SHIFT_CONST(28)
#define ISP_CTXSW_0_NEXT_CHANNEL_FIELD                  (_MK_MASK_CONST(0xf) << ISP_CTXSW_0_NEXT_CHANNEL_SHIFT)
#define ISP_CTXSW_0_NEXT_CHANNEL_RANGE                  31:28
#define ISP_CTXSW_0_NEXT_CHANNEL_WOFFSET                        0x0
#define ISP_CTXSW_0_NEXT_CHANNEL_DEFAULT                        _MK_MASK_CONST(0xf)
#define ISP_CTXSW_0_NEXT_CHANNEL_DEFAULT_MASK                   _MK_MASK_CONST(0xf)
#define ISP_CTXSW_0_NEXT_CHANNEL_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_CTXSW_0_NEXT_CHANNEL_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Interrupt registers

// Register ISP_ISP_INT_STATUS_0  // ISP Interrupt Status
//  This reflects status of all pending
//  interrupts which is valid as long as
//  the interrupt is not cleared even if the
//  interrupt is masked. A pending interrupt
//  can be cleared by writing a '1' to this
//  the corresponding interrupt status bit
//  in this register.
#define ISP_ISP_INT_STATUS_0                    _MK_ADDR_CONST(0xa)
#define ISP_ISP_INT_STATUS_0_SELWRE                     0x0
#define ISP_ISP_INT_STATUS_0_WORD_COUNT                         0x1
#define ISP_ISP_INT_STATUS_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_READ_MASK                  _MK_MASK_CONST(0x3f)
#define ISP_ISP_INT_STATUS_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Context switch interrupt status
//  (this is cleared on write)
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_CTXSW_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_RANGE                    0:0
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_WOFFSET                  0x0
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_CTXSW_INT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Frame End Interrupt status
// This interrupt is generated when line
//  reaches V_SCAN_SIZE value.
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_SHIFT                        _MK_SHIFT_CONST(1)
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_FRAME_END_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_RANGE                        1:1
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_WOFFSET                      0x0
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FRAME_END_INT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Vertical Blank Interrupt status
// This interrupt is generated during
//  vertical blank period.
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_SHIFT                  _MK_SHIFT_CONST(2)
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_V_BLANK_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_RANGE                  2:2
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_WOFFSET                        0x0
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_V_BLANK_INT_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Horizontal Blank Interrupt status
// This interrupt is generated during
//  horizontal blank period.
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_SHIFT                  _MK_SHIFT_CONST(3)
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_H_BLANK_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_RANGE                  3:3
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_WOFFSET                        0x0
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_H_BLANK_INT_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// M2/M3/M4 Statistics Interrupt status
// This interrupt is generated at the end of
//  M2/M3/M4 statistic gathering command.
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_STATS_INT_SHIFT                    _MK_SHIFT_CONST(4)
#define ISP_ISP_INT_STATUS_0_STATS_INT_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_STATS_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_STATS_INT_RANGE                    4:4
#define ISP_ISP_INT_STATUS_0_STATS_INT_WOFFSET                  0x0
#define ISP_ISP_INT_STATUS_0_STATS_INT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_STATS_INT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_STATS_INT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_STATS_INT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// FB Statistics Interrupt status
// This interrupt is generated at the end of
//  FB statistic gathering command.
//  0 = interrupt not pending
//  1 = interrupt pending
#define ISP_ISP_INT_STATUS_0_FB_INT_SHIFT                       _MK_SHIFT_CONST(5)
#define ISP_ISP_INT_STATUS_0_FB_INT_FIELD                       (_MK_MASK_CONST(0x1) << ISP_ISP_INT_STATUS_0_FB_INT_SHIFT)
#define ISP_ISP_INT_STATUS_0_FB_INT_RANGE                       5:5
#define ISP_ISP_INT_STATUS_0_FB_INT_WOFFSET                     0x0
#define ISP_ISP_INT_STATUS_0_FB_INT_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FB_INT_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FB_INT_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_STATUS_0_FB_INT_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_INT_MASK_0  // ISP Interrupt Mask
// Setting bits in this register masked the
//  corresponding interrupt but does not
//  clear a pending interrupt and does not
//  prevent a pending interrupt to be generated.
//  Masking an interrupt also does not clear
//  a pending interrupt status and does not
//  prevent interrupt status to be generated.
#define ISP_ISP_INT_MASK_0                      _MK_ADDR_CONST(0xb)
#define ISP_ISP_INT_MASK_0_SELWRE                       0x0
#define ISP_ISP_INT_MASK_0_WORD_COUNT                   0x1
#define ISP_ISP_INT_MASK_0_RESET_VAL                    _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_RESET_MASK                   _MK_MASK_CONST(0x3f)
#define ISP_ISP_INT_MASK_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_READ_MASK                    _MK_MASK_CONST(0x3f)
#define ISP_ISP_INT_MASK_0_WRITE_MASK                   _MK_MASK_CONST(0x3f)
// Context Switch Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_RANGE                 0:0
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_WOFFSET                       0x0
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_DEFAULT                       _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_MASKED                        _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_CTXSW_INT_MASK_NOTMASKED                     _MK_ENUM_CONST(1)

// Frame End Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_SHIFT                     _MK_SHIFT_CONST(1)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_RANGE                     1:1
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_WOFFSET                   0x0
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_MASKED                    _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_FRAME_END_INT_MASK_NOTMASKED                 _MK_ENUM_CONST(1)

// Vertical Blank Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_SHIFT                       _MK_SHIFT_CONST(2)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_FIELD                       (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_RANGE                       2:2
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_WOFFSET                     0x0
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_MASKED                      _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_V_BLANK_INT_MASK_NOTMASKED                   _MK_ENUM_CONST(1)

// Horizontal Blank Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_SHIFT                       _MK_SHIFT_CONST(3)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_FIELD                       (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_RANGE                       3:3
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_WOFFSET                     0x0
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_MASKED                      _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_H_BLANK_INT_MASK_NOTMASKED                   _MK_ENUM_CONST(1)

// M2/M3/M4 Statistics Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_SHIFT                 _MK_SHIFT_CONST(4)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_STATS_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_RANGE                 4:4
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_WOFFSET                       0x0
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_MASKED                        _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_STATS_INT_MASK_NOTMASKED                     _MK_ENUM_CONST(1)

// FB Statistics Interrupt Mask  0 = interrupt masked
//  1 = interrupt not masked
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_SHIFT                    _MK_SHIFT_CONST(5)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_INT_MASK_0_FB_INT_MASK_SHIFT)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_RANGE                    5:5
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_WOFFSET                  0x0
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_MASKED                   _MK_ENUM_CONST(0)
#define ISP_ISP_INT_MASK_0_FB_INT_MASK_NOTMASKED                        _MK_ENUM_CONST(1)


// Register ISP_ISP_INT_ENABLE_0  // ISP Interrupt Enable
// Setting bits in this register enable
//  the corresponding interrrupt event to
//  generate a pending interrupt. Interrupt
//  output signal will be activated only if
//  the corresponding interrupt is not masked.
//  Disabling an interrupt will not clear
//  a corresponding pending interrupt - it
//  only prevent a new interrupt event to
//  generate a pending interrupt.
#define ISP_ISP_INT_ENABLE_0                    _MK_ADDR_CONST(0xc)
#define ISP_ISP_INT_ENABLE_0_SELWRE                     0x0
#define ISP_ISP_INT_ENABLE_0_WORD_COUNT                         0x1
#define ISP_ISP_INT_ENABLE_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_RESET_MASK                         _MK_MASK_CONST(0x3f)
#define ISP_ISP_INT_ENABLE_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_READ_MASK                  _MK_MASK_CONST(0x3f)
#define ISP_ISP_INT_ENABLE_0_WRITE_MASK                         _MK_MASK_CONST(0x3f)
// Context Switch Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_RANGE                     0:0
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_WOFFSET                   0x0
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_CTXSW_INT_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// Frame End Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_SHIFT                 _MK_SHIFT_CONST(1)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_RANGE                 1:1
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_WOFFSET                       0x0
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_FRAME_END_INT_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// Vertical Blank Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_SHIFT                   _MK_SHIFT_CONST(2)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_RANGE                   2:2
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_WOFFSET                 0x0
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_V_BLANK_INT_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// Horizontal Blank Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_SHIFT                   _MK_SHIFT_CONST(3)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_RANGE                   3:3
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_WOFFSET                 0x0
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_H_BLANK_INT_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// M2/M3/M4 Statistics Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_SHIFT                     _MK_SHIFT_CONST(4)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_RANGE                     4:4
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_WOFFSET                   0x0
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_STATS_INT_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// FB Statistics Interrupt Enable  0 = interrupt disabled
//  1 = interrupt enabled
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_SHIFT                        _MK_SHIFT_CONST(5)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_SHIFT)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_RANGE                        5:5
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_WOFFSET                      0x0
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_INT_ENABLE_0_FB_INT_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Signal raise command
// 

// Register ISP_ISP_SIGNAL_RAISE_0  // ISP Signal Raise
#define ISP_ISP_SIGNAL_RAISE_0                  _MK_ADDR_CONST(0xd)
#define ISP_ISP_SIGNAL_RAISE_0_SELWRE                   0x0
#define ISP_ISP_SIGNAL_RAISE_0_WORD_COUNT                       0x1
#define ISP_ISP_SIGNAL_RAISE_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_RESET_MASK                       _MK_MASK_CONST(0x3)
#define ISP_ISP_SIGNAL_RAISE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_READ_MASK                        _MK_MASK_CONST(0x1ff3)
#define ISP_ISP_SIGNAL_RAISE_0_WRITE_MASK                       _MK_MASK_CONST(0x1ff3)
// Signal Raise select  0 = FRAME_START, return raise vector if line
//      counter is equal to 1.
//   This can be used when host needs to
//   do a long sequence of register writes 
//   (e.g. switching between preview and
//   snapshot).
//   The new configuration will take place
//   two frames later, meaning host has 
//   about one video frame time to program ISP.
//  1 = OUTPUT_END, return raise vector if line
//      counter is equal to OUTPUT_FRAME_HEIGHT.
//   This is a more aggressive raise than 
//   FRAME_END; it gives more time for host
//   to do register writes in between frames
//   if the number of register writes are
//   relatively long (e.g. color correction
//   matrix, gamma table, etc).
//   The new configuration will take place
//   at next frame.
//   OUTPUT_END should be used only for writing
//   registers that influence the pixel
//   content (such as gamma, CSC, etc), but
//   not for registers that change the timing
//   or for memory IO (like demosaic or
//   statistics gathering).
//  2 = FRAME_END, return raise vector if line
//      counter is equal to V_SCAN_SIZE.
//   This can be used if the number of 
//   register writes is small (e.g. WB gains).
//   The new configuration will take place
//   at next frame.
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_SHIFT)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_RANGE                        1:0
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_WOFFSET                      0x0
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_DEFAULT_MASK                 _MK_MASK_CONST(0x3)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_FRAME_START                  _MK_ENUM_CONST(0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_OUTPUT_END                   _MK_ENUM_CONST(1)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_SELECT_FRAME_END                    _MK_ENUM_CONST(2)

// Channel that issues this Raise
// This channel ID is returned when the
// programmed signal raise event oclwrred.
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_SHIFT                   _MK_SHIFT_CONST(4)
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_SHIFT)
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_RANGE                   7:4
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_WOFFSET                 0x0
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_RAISE_CHANNEL_ID_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Signal Raise Vector
// This raise vector is returned when the
// programmed signal raise event oclwrred.
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_SHIFT                        _MK_SHIFT_CONST(8)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_FIELD                        (_MK_MASK_CONST(0x1f) << ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_SHIFT)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_RANGE                        12:8
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_WOFFSET                      0x0
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SIGNAL_RAISE_0_SIGNAL_RAISE_VECTOR_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// When written,  a REFCOUNT to be sent to the host.  
// This will be conditioned with event (e.g. frame_end), but that is not yet implemented.
// Software must not write this register if a previous request (from previous write) is
// still outstanding.
// This register is not used for AP15
//reg ISP_SIGNAL_REFCOUNT                 incr1
//    LW_REFCNT_VALUE_BITS-1:0  rw  SIGNAL_REFCOUNT                   // bit number to refcount
//;
// High priority memory control interface

// Register ISP_ISP_HP_THRESHOLD_0  // Memory High Priority threshold for write
//  as well as read clients
#define ISP_ISP_HP_THRESHOLD_0                  _MK_ADDR_CONST(0xe)
#define ISP_ISP_HP_THRESHOLD_0_SELWRE                   0x0
#define ISP_ISP_HP_THRESHOLD_0_WORD_COUNT                       0x1
#define ISP_ISP_HP_THRESHOLD_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_RESET_MASK                       _MK_MASK_CONST(0x3fff7f)
#define ISP_ISP_HP_THRESHOLD_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_READ_MASK                        _MK_MASK_CONST(0x3fff7f)
#define ISP_ISP_HP_THRESHOLD_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff7f)
// Write threshold value applicable to
//  write client
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_FIELD                   (_MK_MASK_CONST(0x7f) << ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_SHIFT)
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_RANGE                   6:0
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_WOFFSET                 0x0
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_DEFAULT_MASK                    _MK_MASK_CONST(0x7f)
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSW_ISPW2MC_HPTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Read threshold value applicable to
//  read client
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_SHIFT                   _MK_SHIFT_CONST(8)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_FIELD                   (_MK_MASK_CONST(0xff) << ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_SHIFT)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_RANGE                   15:8
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_WOFFSET                 0x0
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_DEFAULT_MASK                    _MK_MASK_CONST(0xff)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Memory High Priority timer count
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_FIELD                   (_MK_MASK_CONST(0x3f) << ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_SHIFT)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_RANGE                   21:16
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_WOFFSET                 0x0
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_DEFAULT_MASK                    _MK_MASK_CONST(0x3f)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_HP_THRESHOLD_0_CSR_ISPR2MC_HPTM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Control registers.
// Most processing blocks shall bypass what comes in and relay it to the next block.

// Register ISP_ISP_CONTROL1_0  // ISP Control 1
#define ISP_ISP_CONTROL1_0                      _MK_ADDR_CONST(0xf)
#define ISP_ISP_CONTROL1_0_SELWRE                       0x0
#define ISP_ISP_CONTROL1_0_WORD_COUNT                   0x1
#define ISP_ISP_CONTROL1_0_RESET_VAL                    _MK_MASK_CONST(0x5258)
#define ISP_ISP_CONTROL1_0_RESET_MASK                   _MK_MASK_CONST(0x8006ffff)
#define ISP_ISP_CONTROL1_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_READ_MASK                    _MK_MASK_CONST(0x8007ffff)
#define ISP_ISP_CONTROL1_0_WRITE_MASK                   _MK_MASK_CONST(0x8007ffff)
// Type of imager  0 = Bayer CFA type
//  1 = Stacked pixel type
//      (not supported in AP15)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_FIELD                    (_MK_MASK_CONST(0x7) << ISP_ISP_CONTROL1_0_IMAGER_TYPE_SHIFT)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_RANGE                    2:0
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_WOFFSET                  0x0
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_DEFAULT_MASK                     _MK_MASK_CONST(0x7)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_BAYER                    _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_IMAGER_TYPE_STACKED                  _MK_ENUM_CONST(1)

// Frame Optical Black (FOB)  0 = disable acquisition
//  1 = enable acquisition
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_SHIFT                     _MK_SHIFT_CONST(3)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_RANGE                     3:3
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_WOFFSET                   0x0
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_DEFAULT                   _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_FOB_ACQUIRE_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// FOB filter self-reset   0 = disable (no reset is applied)
//  1 = enable (reset every frame)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_SHIFT                   _MK_SHIFT_CONST(4)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_RANGE                   4:4
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_WOFFSET                 0x0
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_DEFAULT                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_FOB_SELFRESET_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// FOB filter selection  0 = disable temporal filtering
//  1 = enable temporal filtering
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_SHIFT                  _MK_SHIFT_CONST(5)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_RANGE                  5:5
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_WOFFSET                        0x0
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_FOB_TEMPFILTER_ENABLE_ENABLE                 _MK_ENUM_CONST(1)

// Line Optical Black (LOB)  0 = disable acquisition
//  1 = enable acquisition
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_SHIFT                     _MK_SHIFT_CONST(6)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_RANGE                     6:6
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_WOFFSET                   0x0
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_DEFAULT                   _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_LOB_ACQUIRE_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// Fixed column noise to acquire  0 = disable acquisition
//  1 = enable acquisition
//      (not supported in AP15)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_SHIFT                     _MK_SHIFT_CONST(7)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_RANGE                     7:7
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_WOFFSET                   0x0
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_FCN_ACQUIRE_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// Fixed column noise compensation This is effective only when OB_FCN_ENABLE is
// enabled.
//  0 = disable
//  1 = enable
//      (not supported in AP15)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_SHIFT                        _MK_SHIFT_CONST(8)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_RANGE                        8:8
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_WOFFSET                      0x0
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_FCN_COMPENSATION_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Switch for OB & FCN processing      0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_SHIFT                  _MK_SHIFT_CONST(9)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_RANGE                  9:9
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_WOFFSET                        0x0
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_DEFAULT                        _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_OB_FCN_ENABLE_ENABLE                 _MK_ENUM_CONST(1)

// Common gain control             0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_SHIFT                 _MK_SHIFT_CONST(10)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_RANGE                 10:10
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_WOFFSET                       0x0
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_CMNGAIN_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// Switch for input linearization processing  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_SHIFT                 _MK_SHIFT_CONST(11)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_RANGE                 11:11
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_WOFFSET                       0x0
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_DE_KNEE_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// Switch for lens shading compensation  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_SHIFT                    _MK_SHIFT_CONST(12)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_RANGE                    12:12
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_WOFFSET                  0x0
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_DEFAULT                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_DISABLE                  _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_LENS_SHADING_ENABLE_ENABLE                   _MK_ENUM_CONST(1)

// Switch for white balance processing  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_SHIFT                   _MK_SHIFT_CONST(13)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_RANGE                   13:13
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_WOFFSET                 0x0
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// Switch for operation mode  0 = dynamic (real-time) mode
//  1 = pre-programmed mode by host
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_SHIFT                     _MK_SHIFT_CONST(14)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_SHIFT)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_RANGE                     14:14
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_WOFFSET                   0x0
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_DEFAULT                   _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_DYNAMIC                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_WHITE_BALANCE_MODE_PROGRAMMED                        _MK_ENUM_CONST(1)

// Auto White Balance gains hold
//  0 = recallwlate gain factors
//  1 = hold current gain factors
#define ISP_ISP_CONTROL1_0_WBHOLD_SHIFT                 _MK_SHIFT_CONST(15)
#define ISP_ISP_CONTROL1_0_WBHOLD_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_WBHOLD_SHIFT)
#define ISP_ISP_CONTROL1_0_WBHOLD_RANGE                 15:15
#define ISP_ISP_CONTROL1_0_WBHOLD_WOFFSET                       0x0
#define ISP_ISP_CONTROL1_0_WBHOLD_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WBHOLD_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_WBHOLD_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_WBHOLD_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Top-clipping enable  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_SHIFT                        _MK_SHIFT_CONST(16)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_RANGE                        16:16
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_WOFFSET                      0x0
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_TOP_CLIP_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Bad pixel detection and concealment  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_SHIFT                      _MK_SHIFT_CONST(17)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_SHIFT)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_RANGE                      17:17
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_WOFFSET                    0x0
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_DISABLE                    _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_BAD_PIXEL_CONCEAL_ENABLE                     _MK_ENUM_CONST(1)

// Noise Reduction This is effective only if D3X3BPNR, or
//  D5X5NR, or D5X5BPNR demosaic mode is
//  selected
//  0 = disable
//  1 = enable 
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_SHIFT                 _MK_SHIFT_CONST(18)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_SHIFT)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_RANGE                 18:18
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_WOFFSET                       0x0
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_NOISE_REDUCTION_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// Selection of output image format   0 = demosaiced YUV or RGB image
//  1 = processed Bayer image
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_SHIFT                 _MK_SHIFT_CONST(31)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_SHIFT)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_RANGE                 31:31
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_WOFFSET                       0x0
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_DEMOSAICED                    _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL1_0_OUT_IMAGE_TYPE_BAYER_PROCED                  _MK_ENUM_CONST(1)

// There are few demosaicing schemes built in and selectable from DEMOSAIC_MODE bits. Depending
//  on the demosaic mode selection, the number of line-delay buffers are set up.
// Edge enhancement and noise reduction are available only when the DEMOSAIC_MODE selected
//  has implied datapath.
// Notice that "DEMOSAIC_ENABLE" means "pixel-processing-enable" and not narrow sense of 
//   enable for the demosaic (color-interpolation) section.

// Register ISP_ISP_CONTROL2_0  // ISP Control 2
#define ISP_ISP_CONTROL2_0                      _MK_ADDR_CONST(0x10)
#define ISP_ISP_CONTROL2_0_SELWRE                       0x0
#define ISP_ISP_CONTROL2_0_WORD_COUNT                   0x1
#define ISP_ISP_CONTROL2_0_RESET_VAL                    _MK_MASK_CONST(0x9801)
#define ISP_ISP_CONTROL2_0_RESET_MASK                   _MK_MASK_CONST(0xffc3)
#define ISP_ISP_CONTROL2_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_READ_MASK                    _MK_MASK_CONST(0xffff)
#define ISP_ISP_CONTROL2_0_WRITE_MASK                   _MK_MASK_CONST(0xffff)
// Demosaicing processing  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_RANGE                        0:0
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_WOFFSET                      0x0
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_DEFAULT                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Demosaic formulas
//  0 = Built-in fixed formulas
//  1 = Host-programmed formulas    
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_SHIFT                   _MK_SHIFT_CONST(1)
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_RANGE                   1:1
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_WOFFSET                 0x0
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_PROG_DEMOSAIC_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Number of bits/pixel stored in demosaicing
//  line buffer in memory  0 = 10-bit/pixel, 12-pixel/128-bit
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_SHIFT                  _MK_SHIFT_CONST(2)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_FIELD                  (_MK_MASK_CONST(0xf) << ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_SHIFT)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_RANGE                  5:2
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_WOFFSET                        0x0
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_LB_DATA_WIDTH_D10                    _MK_ENUM_CONST(0)

// Demosaicing method  0 = 3X3 demosaicing
//      2-line buffer (1 write, 2 read)
//  1 = 3X3 demosaicing, bad-pixel correction,
//      and noise-reduction
//      4-line buffer (2 write, 4 read)
//  2 = 5X5 demosaicing
//      4-line buffer (2 write, 4 read)
//  3 = 5X5 demosaicing and noise-reduction
//      4-line buffer (2 write, 4 read)
//  4 = 5x5 demosaicing, bad-pixel correction,
//      and noise reduction
//      6-line buffer (2 write, 6 read)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_SHIFT                  _MK_SHIFT_CONST(6)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_FIELD                  (_MK_MASK_CONST(0x7) << ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_SHIFT)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_RANGE                  8:6
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_WOFFSET                        0x0
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_DEFAULT_MASK                   _MK_MASK_CONST(0x7)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_D3X3                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_D3X3BPNR                       _MK_ENUM_CONST(1)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_D5X5                   _MK_ENUM_CONST(2)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_D5X5NR                 _MK_ENUM_CONST(3)
#define ISP_ISP_CONTROL2_0_DEMOSAIC_MODE_D5X5BPNR                       _MK_ENUM_CONST(4)

// CAR processing enable  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_SHIFT                     _MK_SHIFT_CONST(9)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_FIELD                     (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_CAR_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_RANGE                     9:9
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_WOFFSET                   0x0
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_DEFAULT_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_DISABLE                   _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_CAR_ENABLE_ENABLE                    _MK_ENUM_CONST(1)

// Edge Enhancement  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_SHIFT                    _MK_SHIFT_CONST(10)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_RANGE                    10:10
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_WOFFSET                  0x0
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_DISABLE                  _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_EDGE_ENHANCE_ENABLE_ENABLE                   _MK_ENUM_CONST(1)

// Color Correction  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_SHIFT                        _MK_SHIFT_CONST(11)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_RANGE                        11:11
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_WOFFSET                      0x0
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_DEFAULT                      _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_COLOR_CORRECTION_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Noise reduction in the color correction  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_SHIFT                   _MK_SHIFT_CONST(12)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_CC_NR_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_RANGE                   12:12
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_WOFFSET                 0x0
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_DEFAULT                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_CC_NR_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// Negative <-> positive reversal effect  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_SHIFT                 _MK_SHIFT_CONST(13)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_RANGE                 13:13
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_WOFFSET                       0x0
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_NEGATIVE_EFFECT_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// Gamma Correction  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_SHIFT                        _MK_SHIFT_CONST(14)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_RANGE                        14:14
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_WOFFSET                      0x0
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_GAMMA_CORRECTION_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// RGB to YUV colwersion  0 = disable
//  1 = enable
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_SHIFT                 _MK_SHIFT_CONST(15)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_SHIFT)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_RANGE                 15:15
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_WOFFSET                       0x0
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_DEFAULT                       _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_CONTROL2_0_RGB2YUV_ENABLE_ENABLE                        _MK_ENUM_CONST(1)

// ISP_ENABLE is command to capture image frames
//   0 = disable/stop capturing frame)  
//     If this is issued in the middle of capturing a frame, the frame capture
//     is terminated at the end of the frame.
//     This does not reset other register setting. Both line counter and frame
//     counter are set to 0 when frame capture is stopped.
//   1 = enable capturing of frames
//     This should be issued when frame capture is stopped. When this command is issued,
//     ISP will wait till the next V sync active edge and start capturing frame
//     from that point. Once this is issued, minimum 1 frame will be captured even if
//     this "enable" command is immediately followed by "disable" command.
// ISP_UPDATE_REQ is command to update contril registers
//   When host finishes programming of shadow registers, write 1 to this bit to indicate 
//   a new configuration data is ready for ISP to use.
//   While this bit is 1 and at the fiirst arrivel of start-of-a-frame, ISP updates its active 
//   registers with the content of shadow registers, and ISP also resets this bit to indicate
//   that the shadow registers are now free for the host for a new programming.

// Register ISP_ISP_COMMAND_0  // ISP Command
#define ISP_ISP_COMMAND_0                       _MK_ADDR_CONST(0x11)
#define ISP_ISP_COMMAND_0_SELWRE                        0x0
#define ISP_ISP_COMMAND_0_WORD_COUNT                    0x1
#define ISP_ISP_COMMAND_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_RESET_MASK                    _MK_MASK_CONST(0x80000001)
#define ISP_ISP_COMMAND_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_READ_MASK                     _MK_MASK_CONST(0x80000001)
#define ISP_ISP_COMMAND_0_WRITE_MASK                    _MK_MASK_CONST(0x80000001)
// ISP capture frame enable command  0 = disable/stop capturing frame)
//  1 = enable capturing of frames
#define ISP_ISP_COMMAND_0_ISP_ENABLE_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_COMMAND_0_ISP_ENABLE_SHIFT)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_RANGE                      0:0
#define ISP_ISP_COMMAND_0_ISP_ENABLE_WOFFSET                    0x0
#define ISP_ISP_COMMAND_0_ISP_ENABLE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_DISABLE                    _MK_ENUM_CONST(0)
#define ISP_ISP_COMMAND_0_ISP_ENABLE_ENABLE                     _MK_ENUM_CONST(1)

// Active registers update requect command  0= no req pending/req completed
//  1= update requested/pending
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_SHIFT                  _MK_SHIFT_CONST(31)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_SHIFT)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_RANGE                  31:31
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_WOFFSET                        0x0
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_COMMAND_0_ISP_UPDATE_REQ_ENABLE                 _MK_ENUM_CONST(1)

// Timing Generator Control
// Whole timing frame consists of scanned part and idle parts (void periods in between lines
//  and frames).
// Overall scanned image frame is specified by H_SCAN_SIZE and V_SCAN_SIZE which includes
//  H and V blank periods. Line and pixel counters are set to 1 at transitions of active edge
//  of V and H sync input pulses.
// Note that coordinate in the whole frame starts with (1,1) instead of (0,0).  0 indicates
//  void area.
//
// In horizotal direction, H sync active edge indicates start of scan line and it initiates
//  pixel count from 1 to H_SCAN_SIZE (end of line). After H_SCAN_SIZE pixels are received,
//  the ISP module goes into void period, in which it waits for next arrival of H sync active
//  edge. In practice, H blank period is composed of inactive period during H_SCAN SIZE and the
//  void period in between end of line and start next line.
// Similarly in vertical direction, the non-blanking part consists of "optical black" lines 
//  at top and bottom of the
//  image frame and left and right of image line, and active lines with active pixels in the
//  middle.
//

// Register ISP_ISP_SCAN_FRAME_0  // ISP Scan Frame definition
#define ISP_ISP_SCAN_FRAME_0                    _MK_ADDR_CONST(0x12)
#define ISP_ISP_SCAN_FRAME_0_SELWRE                     0x0
#define ISP_ISP_SCAN_FRAME_0_WORD_COUNT                         0x1
#define ISP_ISP_SCAN_FRAME_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_READ_MASK                  _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_SCAN_FRAME_0_WRITE_MASK                         _MK_MASK_CONST(0x3fff3fff)
// Horizontal Scan Size
//  This specifies the number of pixel clocks
//  per scan line (including H blank)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_FIELD                  (_MK_MASK_CONST(0x3fff) << ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_SHIFT)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_RANGE                  13:0
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_WOFFSET                        0x0
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_H_SCAN_SIZE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Vertical Scan Size
//  This specifies the number of line periods 
//  per scan frame (including V blank)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_SHIFT                  _MK_SHIFT_CONST(16)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_FIELD                  (_MK_MASK_CONST(0x3fff) << ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_SHIFT)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_RANGE                  29:16
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_WOFFSET                        0x0
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SCAN_FRAME_0_V_SCAN_SIZE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// CFASEL values
// Pixel data in Bayer format consists of four color filtered pixel values {Gr, R, B, Gb} in a
// time multiplexed manner in pixel-by-pixel and line-by-line alternation.
// When an imager is given, there are four possibilities in the colors that the first active pixel 
// on the first active line starts.
//
// CFASEL_DM field is used to specify "which color to start with" in the pixel processing pipe.
// The formula to get the proper color produced is: 
//
//     CFSEL_DM = CF_Act ^ HW_CF_Modifier, 
//
// where CF_Act is the color phase of the first active pixel. 
// HW_CF_Modifier is hardware design specific value and "2'b01" for AP15 ISP. 

// Register ISP_ISP_TG_CONTROL_0  // ISP Timing Generator Control
#define ISP_ISP_TG_CONTROL_0                    _MK_ADDR_CONST(0x13)
#define ISP_ISP_TG_CONTROL_0_SELWRE                     0x0
#define ISP_ISP_TG_CONTROL_0_WORD_COUNT                         0x1
#define ISP_ISP_TG_CONTROL_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_RESET_MASK                         _MK_MASK_CONST(0x303)
#define ISP_ISP_TG_CONTROL_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_READ_MASK                  _MK_MASK_CONST(0x303)
#define ISP_ISP_TG_CONTROL_0_WRITE_MASK                         _MK_MASK_CONST(0x303)
// H sync active edge selection  0 = use positive transition (rising edge)
//  1 = use negative transition (falling edge)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_SHIFT)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_RANGE                   0:0
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_WOFFSET                 0x0
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_POS                     _MK_ENUM_CONST(0)
#define ISP_ISP_TG_CONTROL_0_HSYNC_EDGE_NEG                     _MK_ENUM_CONST(1)

// V sync Active edge selection  0 = use positive transition (rising edge)
//  1 = use negative transition (falling edge)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_SHIFT                   _MK_SHIFT_CONST(1)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_SHIFT)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_RANGE                   1:1
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_WOFFSET                 0x0
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_POS                     _MK_ENUM_CONST(0)
#define ISP_ISP_TG_CONTROL_0_VSYNC_EDGE_NEG                     _MK_ENUM_CONST(1)

// Bayer color filter array interpretation for
//  Demosaic processing
//  The setting of this value is dependent on
//  internal hardware pipeline.  0 = R/G followed by G/B
//  1 = G/R followed by B/G
//  2 = G/B followed by R/G
//  3 = B/G followed by G/R
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_SHIFT                    _MK_SHIFT_CONST(8)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_FIELD                    (_MK_MASK_CONST(0x3) << ISP_ISP_TG_CONTROL_0_CFASEL_DM_SHIFT)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_RANGE                    9:8
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_WOFFSET                  0x0
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_DEFAULT_MASK                     _MK_MASK_CONST(0x3)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_RGGB                     _MK_ENUM_CONST(0)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_GRBG                     _MK_ENUM_CONST(1)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_GBRG                     _MK_ENUM_CONST(2)
#define ISP_ISP_TG_CONTROL_0_CFASEL_DM_BGGR                     _MK_ENUM_CONST(3)


// Register ISP_ISP_H_ACTIVE_0  // ISP Horizontal Active area definition
#define ISP_ISP_H_ACTIVE_0                      _MK_ADDR_CONST(0x14)
#define ISP_ISP_H_ACTIVE_0_SELWRE                       0x0
#define ISP_ISP_H_ACTIVE_0_WORD_COUNT                   0x1
#define ISP_ISP_H_ACTIVE_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_READ_MASK                    _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_H_ACTIVE_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff3fff)
// Pixel number where active line starts
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_SHIFT)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_RANGE                      13:0
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_WOFFSET                    0x0
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of active pixels in a line
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_SHIFT)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_RANGE                      29:16
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_WOFFSET                    0x0
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_ACTIVE_0_ACTIVE_LINE_WIDTH_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_ACTIVE_0  // ISP Vertical Active area definition
#define ISP_ISP_V_ACTIVE_0                      _MK_ADDR_CONST(0x15)
#define ISP_ISP_V_ACTIVE_0_SELWRE                       0x0
#define ISP_ISP_V_ACTIVE_0_WORD_COUNT                   0x1
#define ISP_ISP_V_ACTIVE_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_READ_MASK                    _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_V_ACTIVE_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff3fff)
// Line number where active frame starts
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_SHIFT)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_RANGE                     13:0
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_WOFFSET                   0x0
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_START_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Number of active image lines in a frame
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_FIELD                    (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_SHIFT)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_RANGE                    29:16
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_WOFFSET                  0x0
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_ACTIVE_0_ACTIVE_FRAME_HEIGHT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_H_OUTPUT_0  // ISP Horizontal Output window definition
#define ISP_ISP_H_OUTPUT_0                      _MK_ADDR_CONST(0x16)
#define ISP_ISP_H_OUTPUT_0_SELWRE                       0x0
#define ISP_ISP_H_OUTPUT_0_WORD_COUNT                   0x1
#define ISP_ISP_H_OUTPUT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_READ_MASK                    _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_H_OUTPUT_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff3fff)
// Pixel number where output window starts
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_SHIFT)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_RANGE                      13:0
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_WOFFSET                    0x0
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of output window pixels in a line
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_SHIFT)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_RANGE                      29:16
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_WOFFSET                    0x0
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_OUTPUT_0_OUTPUT_LINE_WIDTH_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_OUTPUT_0  // ISP Vertical Output window definition
#define ISP_ISP_V_OUTPUT_0                      _MK_ADDR_CONST(0x17)
#define ISP_ISP_V_OUTPUT_0_SELWRE                       0x0
#define ISP_ISP_V_OUTPUT_0_WORD_COUNT                   0x1
#define ISP_ISP_V_OUTPUT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_READ_MASK                    _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_V_OUTPUT_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff3fff)
// Line number where output window starts
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_SHIFT)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_RANGE                     13:0
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_WOFFSET                   0x0
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_START_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Number of output window lines in a frame
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_FIELD                    (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_SHIFT)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_RANGE                    29:16
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_WOFFSET                  0x0
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_OUTPUT_0_OUTPUT_FRAME_HEIGHT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Stall control
// Proper operation of ISP requires some minimum H and V blanking time.
// During the H and V blanking periods, some house keeping jobs and preparation for the next line 
// and frame processing are performed.
// Active pixel data pushed into the pixel data-pipe shall be further advanced during the H and V 
// blanking periods so that the data-pipe can freshly start next lines and frames.
// H blanking is also used for pre-fetching of pixels from line-delay memories allocated in the
// frame buffer memory.
//
// It is assumed that pixel clock is active not only during the h-scan-size period but also some time 
//   after that, so to allow control action during H-blanking period (in a vague sense).
// It is also assumed that hsync pulses are active at least during v-scan-size period.
//   Local-hsync may be generated and used for control action during V-blanking period. 
//
// As a rule of thumb, current ISP requires,
//   about 20T from end-of-current-active-line to the start-of-next-active-line,
//   about 10T from end-of-current-active-line to the end-of-current-h-scan-size,
//   2H to 5H (depending on the demosdaic mode) from end-of-current-active-frame to the next v-sync 
//   (Start-of-Frame).
//   where T and H represent pixel-clock and line periods.
//
// The DVS bus, vi2isp, that supplies input data to ISP can be stalled.
// This stall control register specifies how ISP generates the stall signal to the vi2isp DVS bus.
//
//   HBLANK_ACT_MIN[7:0] is to specify minimum H-blanking width (pixels) from end-of-current-active-line 
//     to the next h-sync (Start-of-Line) in 0 to 255 pixels.
//   HBLANK_SCAN_MIN[7:0] is to specify minimum H-blanking width (pixels) from end-of-h-scan-size to 
//     the next h-sync (Start-of-Line)
//   VBLANK_ACT_MIN[3:0] is to specify minimum V-blanking width (lines) from end-of-current-active-frame 
//     to the next v-sync (Start-of-Frame) in 0 to 15 lines.
//   VBLANK_SCAN_MIN[3:0] is to specify minimum V-blanking width (lines) from end-of-v-scan-size to the 
//     next v-sync (Start-of-Frame) in 0 to 15 lines.
//
//   LOCAL_HSYNC_ENABLE = 1 activates local substitution of hsync during V-Blanking 
//   MEMORY_STALL_ACTIVE =1 activates stall when data from frame buffer is not ready when needed.
//     (AP15 does not use this bit since it has dedicated local SRAM.)
//   HBLANK_ACT_STALL_ACTIVE = 1 activates HBLANK_ACT_MIN condition.
//   HBLANK_SCAN_STALL_ACTIVE = 1 activates HBLANK_SCAN_MIN condition.
//   VBLANK_ACT_STALL_ACTIVE = 1 activates VBLANK_ACT_MIN condition.
//   VBLANK_SCAN_STALL_ACTIVE = 1 activates VBLANK_SCAN_MIN condition.
//
// When a condition is not satisfied and the stall_active bit is asserted, the stall is created.
//
// Be reminded of the following facts.
//  * HBLANK_ACT_STALL_ACTIVE and HBLANK_SCAN_STALL_ACTIVE are independent for control of H-lanking.
//  * VBLANK_ACT_STALL_ACTIVE and VBLANK_SCAN_STALL_ACTIVE are independent for control of V-lanking.
//  * When LOCAL_HSYNS_ENABLE = 1, hsync period locally generated is equal to the wider one dictated 
//      by HBLANK_ACT_MIN and HBLANK_SCAN_MIN.
//  * When LOCAL_HSYNC_ENABLE = 1, stall is created in all H-blanking if input (active) hsync period 
//      is shorter that that of locally generated hsync pulses. 
//    (LOCAL_HSYNC_ENABLE = 1 takes precidence to HBLAN_ACT_STALL_ACTIVE and HBLAN_SCAN_STALL_ACTIVE.) 

// Register ISP_ISP_STALL_CONTROL_0  // ISP Stall configuration
#define ISP_ISP_STALL_CONTROL_0                 _MK_ADDR_CONST(0x18)
#define ISP_ISP_STALL_CONTROL_0_SELWRE                  0x0
#define ISP_ISP_STALL_CONTROL_0_WORD_COUNT                      0x1
#define ISP_ISP_STALL_CONTROL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_RESET_MASK                      _MK_MASK_CONST(0xf9000000)
#define ISP_ISP_STALL_CONTROL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_READ_MASK                       _MK_MASK_CONST(0xf9ffffff)
#define ISP_ISP_STALL_CONTROL_0_WRITE_MASK                      _MK_MASK_CONST(0xf9ffffff)
// Active-line-end to SL
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_FIELD                    (_MK_MASK_CONST(0xff) << ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_RANGE                    7:0
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_WOFFSET                  0x0
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_MIN_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// h_scan_size_end to SL
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_SHIFT                   _MK_SHIFT_CONST(8)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_FIELD                   (_MK_MASK_CONST(0xff) << ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_RANGE                   15:8
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_WOFFSET                 0x0
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_MIN_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Active-frame-end to SF
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_FIELD                    (_MK_MASK_CONST(0xf) << ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_RANGE                    19:16
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_WOFFSET                  0x0
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_MIN_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// v_scan_size_end to SF
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_SHIFT                   _MK_SHIFT_CONST(20)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_RANGE                   23:20
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_WOFFSET                 0x0
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_MIN_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

//  0 = disable
//  1 = enable
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_SHIFT                        _MK_SHIFT_CONST(24)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_RANGE                        24:24
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_WOFFSET                      0x0
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_LOCAL_HSYNC_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

//  0 = disable
//  1 = enable
//  (MEMORY_STALL is not used in AP15)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_SHIFT                       _MK_SHIFT_CONST(27)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_FIELD                       (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_RANGE                       27:27
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_WOFFSET                     0x0
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_DISABLE                     _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_MEMORY_STALL_ACTIVE_ENABLE                      _MK_ENUM_CONST(1)

//   0 = disable
//  1 = enable
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_SHIFT                   _MK_SHIFT_CONST(28)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_RANGE                   28:28
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_WOFFSET                 0x0
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_ACT_STALL_ACTIVE_ENABLE                  _MK_ENUM_CONST(1)

//  0 = disable
//  1 = enable
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_SHIFT                  _MK_SHIFT_CONST(29)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_RANGE                  29:29
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_WOFFSET                        0x0
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_HBLANK_SCAN_STALL_ACTIVE_ENABLE                 _MK_ENUM_CONST(1)

//  0 = disable
//  1 = enable
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_SHIFT                   _MK_SHIFT_CONST(30)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_RANGE                   30:30
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_WOFFSET                 0x0
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_DEFAULT_MASK                    _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_ACT_STALL_ACTIVE_ENABLE                  _MK_ENUM_CONST(1)

//  0 = disable
//  1 = enable
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_SHIFT                  _MK_SHIFT_CONST(31)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_SHIFT)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_RANGE                  31:31
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_WOFFSET                        0x0
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_STALL_CONTROL_0_VBLANK_SCAN_STALL_ACTIVE_ENABLE                 _MK_ENUM_CONST(1)

// Optical Black and Fixed Column Noise 
// Two types of optical black: 
//  Frame OB (FOB) is acquired by averaging pixel values at OB_TOP region.  
//  If FOB is enabled (in ISP_CONTROL1), all pixels in active area will be subtraced by FOB.
//  Line OB (LOB) is acquired by averaging pixel values at OB_LEFT region.
//  If LOB is enabled (in ISP_CONTROL1), for each scanline an LOB value will first be acquired,
//  and the following pixels in this scanline will be subtracted by this LOB.  
//  In FANDL mode, both FOB and LOB will be acquired, and the final OB value for each pixel
//  are (FOB+LOB)/2.
//  In AP15, the following features are not supported:
//  (1) OB_RIGHT
//  (2) FCN
// Optical black restoration
// (Manual) adjust value is individualized for {r, gr, gb, b} colors
//    Adjust-values are pos/neg 2's complement in (ISP_OBR_DBIT+1) bits
// Effective_OB_value that is subtracted from the raw pixel value is,
//    Effective_OB_value = (measured_OB_value) + (manual_adjust_value)
// I.e. positive adjust_value increases effective_OB_level.
// 
// In AP15, 4-bit FOB_FLTR_COEF and TOB_FLTR_COEF are valid in {0,1,2,3,4,5,6,7}.
//   Out of range values in [8,15] are treated as value 0. 

// Register ISP_ISP_OB_FCN_CONTROL1_0  // ISP Optical Black and Fixed Column Noise
// processing
#define ISP_ISP_OB_FCN_CONTROL1_0                       _MK_ADDR_CONST(0x19)
#define ISP_ISP_OB_FCN_CONTROL1_0_SELWRE                        0x0
#define ISP_ISP_OB_FCN_CONTROL1_0_WORD_COUNT                    0x1
#define ISP_ISP_OB_FCN_CONTROL1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_READ_MASK                     _MK_MASK_CONST(0xf0fff)
#define ISP_ISP_OB_FCN_CONTROL1_0_WRITE_MASK                    _MK_MASK_CONST(0xf0fff)
// U0.W, Filter coefficient of FOB acquisition.
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_RANGE                   3:0
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_WOFFSET                 0x0
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FOB_FLTR_COEF_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// U0.W, Filter coefficient of FOB temporal
//  filter.
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_SHIFT                   _MK_SHIFT_CONST(4)
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_RANGE                   7:4
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_WOFFSET                 0x0
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_TOB_FLTR_COEF_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// U0.W, Filter coefficient of FCN acquisition.
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_SHIFT                   _MK_SHIFT_CONST(8)
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_RANGE                   11:8
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_WOFFSET                 0x0
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_FCN_FLTR_COEF_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// U0.W, Filter coefficient of column filter.
//    (ISP_OB_DBIT+23):24 rw  OB_ADJUST           // Manual adjustment applied to the black level 
//                                                //  (positive only)
//                                                //  (FCN is not supported in AP15)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_SHIFT                  _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_FIELD                  (_MK_MASK_CONST(0xf) << ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_RANGE                  19:16
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_WOFFSET                        0x0
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL1_0_CLMN_FLTR_COEF_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_FCN_CONTROL2_0  // ISP Optical Black restoration
// Manual_adjust_values 
#define ISP_ISP_OB_FCN_CONTROL2_0                       _MK_ADDR_CONST(0x1a)
#define ISP_ISP_OB_FCN_CONTROL2_0_SELWRE                        0x0
#define ISP_ISP_OB_FCN_CONTROL2_0_WORD_COUNT                    0x1
#define ISP_ISP_OB_FCN_CONTROL2_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_READ_MASK                     _MK_MASK_CONST(0x7ff07ff)
#define ISP_ISP_OB_FCN_CONTROL2_0_WRITE_MASK                    _MK_MASK_CONST(0x7ff07ff)
// For R pixels           
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_FIELD                    (_MK_MASK_CONST(0x7ff) << ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_RANGE                    10:0
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_WOFFSET                  0x0
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_R1_ADJUST_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// For B pixels           
//    31  rw  INDIVIDUAL_OB_ADJUST        init=0  // 1 to enable individualized OB adjust
//                                                // 0 to enable common OB adjust
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_FIELD                    (_MK_MASK_CONST(0x7ff) << ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_RANGE                    26:16
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_WOFFSET                  0x0
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL2_0_OB_B1_ADJUST_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_FCN_CONTROL3_0  // ISP Optical Black restoration
// Manual_adjust_values 
#define ISP_ISP_OB_FCN_CONTROL3_0                       _MK_ADDR_CONST(0x1b)
#define ISP_ISP_OB_FCN_CONTROL3_0_SELWRE                        0x0
#define ISP_ISP_OB_FCN_CONTROL3_0_WORD_COUNT                    0x1
#define ISP_ISP_OB_FCN_CONTROL3_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_READ_MASK                     _MK_MASK_CONST(0x7ff07ff)
#define ISP_ISP_OB_FCN_CONTROL3_0_WRITE_MASK                    _MK_MASK_CONST(0x7ff07ff)
// For G pixels on R/G rows           
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_FIELD                    (_MK_MASK_CONST(0x7ff) << ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_RANGE                    10:0
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_WOFFSET                  0x0
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G1_ADJUST_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// For G pixels on B/G rows           
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_FIELD                    (_MK_MASK_CONST(0x7ff) << ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_RANGE                    26:16
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_WOFFSET                  0x0
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL3_0_OB_G2_ADJUST_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_FCN_CONTROL4_0  // ISP Optical Black restoration
// Manual_adjust_values 
#define ISP_ISP_OB_FCN_CONTROL4_0                       _MK_ADDR_CONST(0x1c)
#define ISP_ISP_OB_FCN_CONTROL4_0_SELWRE                        0x0
#define ISP_ISP_OB_FCN_CONTROL4_0_WORD_COUNT                    0x1
#define ISP_ISP_OB_FCN_CONTROL4_0_RESET_VAL                     _MK_MASK_CONST(0x1)
#define ISP_ISP_OB_FCN_CONTROL4_0_RESET_MASK                    _MK_MASK_CONST(0x1f)
#define ISP_ISP_OB_FCN_CONTROL4_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_READ_MASK                     _MK_MASK_CONST(0x1f)
#define ISP_ISP_OB_FCN_CONTROL4_0_WRITE_MASK                    _MK_MASK_CONST(0x1f)
// LOB, number of columns  0 = 2 columns
//  1 = 4 columns
//  2 = 8 columns
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_FIELD                       (_MK_MASK_CONST(0x3) << ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_RANGE                       1:0
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_WOFFSET                     0x0
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_DEFAULT                     _MK_MASK_CONST(0x1)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_DEFAULT_MASK                        _MK_MASK_CONST(0x3)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_LOB2                        _MK_ENUM_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_LOB4                        _MK_ENUM_CONST(1)
#define ISP_ISP_OB_FCN_CONTROL4_0_LOB_WIDTH_LOB8                        _MK_ENUM_CONST(2)

// Optical Black (OB) extraction mode  0 = Frame-OB
//  1 = Frame_OB and Line-OB mixed
//  2 = Line-OB
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_SHIFT                 _MK_SHIFT_CONST(2)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_FIELD                 (_MK_MASK_CONST(0x7) << ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_SHIFT)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_RANGE                 4:2
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_WOFFSET                       0x0
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_DEFAULT_MASK                  _MK_MASK_CONST(0x7)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_FRAME                 _MK_ENUM_CONST(0)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_FANDL                 _MK_ENUM_CONST(1)
#define ISP_ISP_OB_FCN_CONTROL4_0_OB_MODE_LINE                  _MK_ENUM_CONST(2)


// Register ISP_ISP_OB_TOP_0  // ISP Top OB definition
#define ISP_ISP_OB_TOP_0                        _MK_ADDR_CONST(0x1d)
#define ISP_ISP_OB_TOP_0_SELWRE                         0x0
#define ISP_ISP_OB_TOP_0_WORD_COUNT                     0x1
#define ISP_ISP_OB_TOP_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_READ_MASK                      _MK_MASK_CONST(0xf3fff)
#define ISP_ISP_OB_TOP_0_WRITE_MASK                     _MK_MASK_CONST(0xf3fff)
// Line number where top optical black area
//  starts. Unreachable large value will 
// effectively disable top OB.
#define ISP_ISP_OB_TOP_0_OB_TOP_START_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_TOP_0_OB_TOP_START_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_OB_TOP_0_OB_TOP_START_SHIFT)
#define ISP_ISP_OB_TOP_0_OB_TOP_START_RANGE                     13:0
#define ISP_ISP_OB_TOP_0_OB_TOP_START_WOFFSET                   0x0
#define ISP_ISP_OB_TOP_0_OB_TOP_START_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_START_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_START_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_START_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Number of top optical black lines
//  valid values are [1..15]. 0 means no OB values
//  are acquired at top
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_FIELD                    (_MK_MASK_CONST(0xf) << ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_SHIFT)
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_RANGE                    19:16
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_WOFFSET                  0x0
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_TOP_0_OB_TOP_HEIGHT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_BOTTOM_0  // ISP Bottom OB definition
#define ISP_ISP_OB_BOTTOM_0                     _MK_ADDR_CONST(0x1e)
#define ISP_ISP_OB_BOTTOM_0_SELWRE                      0x0
#define ISP_ISP_OB_BOTTOM_0_WORD_COUNT                  0x1
#define ISP_ISP_OB_BOTTOM_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_READ_MASK                   _MK_MASK_CONST(0xf3fff)
#define ISP_ISP_OB_BOTTOM_0_WRITE_MASK                  _MK_MASK_CONST(0xf3fff)
// Line number where bottom optical black area
//  starts. Unreachable large value will  
// effectively disable bottom OB. 
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_SHIFT)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_RANGE                       13:0
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_WOFFSET                     0x0
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_START_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Number of bottom optical black lines
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_FIELD                      (_MK_MASK_CONST(0xf) << ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_SHIFT)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_RANGE                      19:16
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_WOFFSET                    0x0
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_BOTTOM_0_OB_BOTTOM_HEIGHT_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_LEFT_0  // ISP Left OB definition
#define ISP_ISP_OB_LEFT_0                       _MK_ADDR_CONST(0x1f)
#define ISP_ISP_OB_LEFT_0_SELWRE                        0x0
#define ISP_ISP_OB_LEFT_0_WORD_COUNT                    0x1
#define ISP_ISP_OB_LEFT_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_READ_MASK                     _MK_MASK_CONST(0xf3fff)
#define ISP_ISP_OB_LEFT_0_WRITE_MASK                    _MK_MASK_CONST(0xf3fff)
// Pixel number where left optical black area
//  starts. Unreachable large value will 
// effectively disable left OB.
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_FIELD                   (_MK_MASK_CONST(0x3fff) << ISP_ISP_OB_LEFT_0_OB_LEFT_START_SHIFT)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_RANGE                   13:0
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_WOFFSET                 0x0
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_START_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Number of left optical black pixels
//  valid values are 2, 4, or 8, and it has to
//  be consistent with LOB_WIDTH in ISP_CONTROL1
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_FIELD                   (_MK_MASK_CONST(0xf) << ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_SHIFT)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_RANGE                   19:16
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_WOFFSET                 0x0
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_LEFT_0_OB_LEFT_WIDTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_OB_RIGHT_0  // ISP Right OB definition
#define ISP_ISP_OB_RIGHT_0                      _MK_ADDR_CONST(0x20)
#define ISP_ISP_OB_RIGHT_0_SELWRE                       0x0
#define ISP_ISP_OB_RIGHT_0_WORD_COUNT                   0x1
#define ISP_ISP_OB_RIGHT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_READ_MASK                    _MK_MASK_CONST(0xf3fff)
#define ISP_ISP_OB_RIGHT_0_WRITE_MASK                   _MK_MASK_CONST(0xf3fff)
// Pixel number where right optical black area
//  starts
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_FIELD                 (_MK_MASK_CONST(0x3fff) << ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_SHIFT)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_RANGE                 13:0
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_WOFFSET                       0x0
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_START_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Number of right optical black pixels
//  (RIGHT OB are not used in AP15)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_FIELD                 (_MK_MASK_CONST(0xf) << ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_SHIFT)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_RANGE                 19:16
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_WOFFSET                       0x0
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_OB_RIGHT_0_OB_RIGHT_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Common gain control
// This single gain value is intended to be a part of exposure control and applied 
//   commonly to pixels of all colors.
// Total length is ISP_CG_DBIT bits and the lower ISP_CG_FBIT bits are fraction.
//   I.e.  U(ISP_CG_DBIT-ISP_CG_FBIT).(ISP_CG_FBIT)

// Register ISP_ISP_COMMON_GAIN_CONTROL_0  // ISP Common Gain
#define ISP_ISP_COMMON_GAIN_CONTROL_0                   _MK_ADDR_CONST(0x21)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_SELWRE                    0x0
#define ISP_ISP_COMMON_GAIN_CONTROL_0_WORD_COUNT                        0x1
#define ISP_ISP_COMMON_GAIN_CONTROL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_READ_MASK                         _MK_MASK_CONST(0x3ff)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff)
// U(ISP_CG_DBIT-ISP_CG_FBIT).(ISP_CG_FBIT)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_FIELD                     (_MK_MASK_CONST(0x3ff) << ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_SHIFT)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_RANGE                     9:0
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_WOFFSET                   0x0
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COMMON_GAIN_CONTROL_0_CMNGAIN_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// De-Knee, input linearization
// This is implemented as piece-wise linear approximation of up to 16 segments.
// Line definitions must be provided in ascending order (of input range) from CONFIG1A to
// CONFIG16B.
//
// Deknee characteristics can be specified flexibly in arbitrary number of line segments
// Number of line-segments actively used may be arbitrary (from 1 to 16).
// Each line-segment may cover arbitrarily wide input range. Hence, each line-segment is
//   specified by (input-start-value, output-start-value, slope-value).
// Input-start-values for the 16 line-segments are specified by DEKNEE_IX,
//   where X is in {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16}.
//   DEKNEE_I1 is always ZERO, so it need not to be explicitly specified.
// Output-start-values are output values correspond to the input-start-value.
// X-th line-segment has the input-range [DEKNEE_IX, DEKNEE_I(X+1)), except for X=16.
//   16-th line-segment has the input range [DEKNEE_I16, 2^ISP_PIXEL_DIBIT-1].
//
// Note that DEKNEE_IX must be given in an ascending order.
// For those line-segments not used, "input-start-value" and "output-start-value" must be 
//   specified as 2^ISP_PIXEL_DIBIT-1 (maximum input value) and the corresponding output value. 
//
// There are 4 sets of de-knee configuration registers for {Gr, Gb, R, B} color groups.   

// Register ISP_ISP_DEKNEE_CONFIG_GR1A_0  // ISP De-Knee Configuration, Gr
//    (ISP_PIXEL_DIBIT-1):0   rw  DEKNEE_GR_I1    // Input start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0                    _MK_ADDR_CONST(0x22)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_READ_MASK                  _MK_MASK_CONST(0x3ff0000)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff0000)
// Output start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1A_0_DEKNEE_GR_O1_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR1B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0                    _MK_ADDR_CONST(0x23)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR1B_0_DEKNEE_GR_S1_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR2A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0                    _MK_ADDR_CONST(0x24)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_I2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2A_0_DEKNEE_GR_O2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR2B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0                    _MK_ADDR_CONST(0x25)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR2B_0_DEKNEE_GR_S2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR3A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0                    _MK_ADDR_CONST(0x26)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_I3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3A_0_DEKNEE_GR_O3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR3B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0                    _MK_ADDR_CONST(0x27)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR3B_0_DEKNEE_GR_S3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR4A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0                    _MK_ADDR_CONST(0x28)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_I4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4A_0_DEKNEE_GR_O4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR4B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0                    _MK_ADDR_CONST(0x29)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR4B_0_DEKNEE_GR_S4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR5A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0                    _MK_ADDR_CONST(0x2a)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_I5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5A_0_DEKNEE_GR_O5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR5B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0                    _MK_ADDR_CONST(0x2b)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR5B_0_DEKNEE_GR_S5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR6A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0                    _MK_ADDR_CONST(0x2c)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_I6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6A_0_DEKNEE_GR_O6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR6B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0                    _MK_ADDR_CONST(0x2d)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR6B_0_DEKNEE_GR_S6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR7A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0                    _MK_ADDR_CONST(0x2e)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_I7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7A_0_DEKNEE_GR_O7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR7B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0                    _MK_ADDR_CONST(0x2f)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR7B_0_DEKNEE_GR_S7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR8A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0                    _MK_ADDR_CONST(0x30)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_I8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8A_0_DEKNEE_GR_O8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR8B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0                    _MK_ADDR_CONST(0x31)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR8B_0_DEKNEE_GR_S8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR9A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0                    _MK_ADDR_CONST(0x32)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_I9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9A_0_DEKNEE_GR_O9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR9B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0                    _MK_ADDR_CONST(0x33)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR9B_0_DEKNEE_GR_S9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR10A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0                   _MK_ADDR_CONST(0x34)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_I10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10A_0_DEKNEE_GR_O10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR10B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0                   _MK_ADDR_CONST(0x35)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR10B_0_DEKNEE_GR_S10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR11A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0                   _MK_ADDR_CONST(0x36)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_I11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11A_0_DEKNEE_GR_O11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR11B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0                   _MK_ADDR_CONST(0x37)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR11B_0_DEKNEE_GR_S11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR12A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0                   _MK_ADDR_CONST(0x38)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_I12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12A_0_DEKNEE_GR_O12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR12B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0                   _MK_ADDR_CONST(0x39)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR12B_0_DEKNEE_GR_S12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR13A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0                   _MK_ADDR_CONST(0x3a)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_I13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13A_0_DEKNEE_GR_O13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR13B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0                   _MK_ADDR_CONST(0x3b)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR13B_0_DEKNEE_GR_S13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR14A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0                   _MK_ADDR_CONST(0x3c)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_I14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14A_0_DEKNEE_GR_O14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR14B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0                   _MK_ADDR_CONST(0x3d)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR14B_0_DEKNEE_GR_S14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR15A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0                   _MK_ADDR_CONST(0x3e)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_I15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15A_0_DEKNEE_GR_O15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR15B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0                   _MK_ADDR_CONST(0x3f)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR15B_0_DEKNEE_GR_S15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR16A_0  // ISP De-Knee Configuration, Gr 
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0                   _MK_ADDR_CONST(0x40)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_I16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16A_0_DEKNEE_GR_O16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GR16B_0  // ISP De-Knee Configuration, Gr
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0                   _MK_ADDR_CONST(0x41)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GR16B_0_DEKNEE_GR_S16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB1A_0  // ISP De-Knee Configuration, Gb
//    (ISP_PIXEL_DIBIT-1):0   rw  DEKNEE_GB_I1    // Input start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0                    _MK_ADDR_CONST(0x42)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_READ_MASK                  _MK_MASK_CONST(0x3ff0000)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff0000)
// Output start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1A_0_DEKNEE_GB_O1_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB1B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0                    _MK_ADDR_CONST(0x43)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB1B_0_DEKNEE_GB_S1_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB2A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0                    _MK_ADDR_CONST(0x44)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_I2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2A_0_DEKNEE_GB_O2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB2B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0                    _MK_ADDR_CONST(0x45)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB2B_0_DEKNEE_GB_S2_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB3A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0                    _MK_ADDR_CONST(0x46)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_I3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3A_0_DEKNEE_GB_O3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB3B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0                    _MK_ADDR_CONST(0x47)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB3B_0_DEKNEE_GB_S3_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB4A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0                    _MK_ADDR_CONST(0x48)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_I4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4A_0_DEKNEE_GB_O4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB4B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0                    _MK_ADDR_CONST(0x49)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB4B_0_DEKNEE_GB_S4_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB5A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0                    _MK_ADDR_CONST(0x4a)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_I5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5A_0_DEKNEE_GB_O5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB5B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0                    _MK_ADDR_CONST(0x4b)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB5B_0_DEKNEE_GB_S5_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB6A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0                    _MK_ADDR_CONST(0x4c)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_I6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6A_0_DEKNEE_GB_O6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB6B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0                    _MK_ADDR_CONST(0x4d)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB6B_0_DEKNEE_GB_S6_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB7A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0                    _MK_ADDR_CONST(0x4e)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_I7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7A_0_DEKNEE_GB_O7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB7B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0                    _MK_ADDR_CONST(0x4f)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB7B_0_DEKNEE_GB_S7_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB8A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0                    _MK_ADDR_CONST(0x50)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_I8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8A_0_DEKNEE_GB_O8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB8B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0                    _MK_ADDR_CONST(0x51)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB8B_0_DEKNEE_GB_S8_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB9A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0                    _MK_ADDR_CONST(0x52)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_I9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9A_0_DEKNEE_GB_O9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB9B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0                    _MK_ADDR_CONST(0x53)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB9B_0_DEKNEE_GB_S9_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB10A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0                   _MK_ADDR_CONST(0x54)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_I10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10A_0_DEKNEE_GB_O10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB10B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0                   _MK_ADDR_CONST(0x55)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB10B_0_DEKNEE_GB_S10_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB11A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0                   _MK_ADDR_CONST(0x56)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_I11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11A_0_DEKNEE_GB_O11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB11B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0                   _MK_ADDR_CONST(0x57)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB11B_0_DEKNEE_GB_S11_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB12A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0                   _MK_ADDR_CONST(0x58)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_I12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12A_0_DEKNEE_GB_O12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB12B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0                   _MK_ADDR_CONST(0x59)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB12B_0_DEKNEE_GB_S12_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB13A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0                   _MK_ADDR_CONST(0x5a)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_I13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13A_0_DEKNEE_GB_O13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB13B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0                   _MK_ADDR_CONST(0x5b)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB13B_0_DEKNEE_GB_S13_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB14A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0                   _MK_ADDR_CONST(0x5c)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_I14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14A_0_DEKNEE_GB_O14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB14B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0                   _MK_ADDR_CONST(0x5d)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB14B_0_DEKNEE_GB_S14_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB15A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0                   _MK_ADDR_CONST(0x5e)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_I15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15A_0_DEKNEE_GB_O15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB15B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0                   _MK_ADDR_CONST(0x5f)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB15B_0_DEKNEE_GB_S15_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB16A_0  // ISP De-Knee Configuration, Gb 
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0                   _MK_ADDR_CONST(0x60)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_READ_MASK                         _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_WRITE_MASK                        _MK_MASK_CONST(0x3ff03ff)
// Input start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_RANGE                       9:0
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_I16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Output start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_FIELD                       (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_RANGE                       25:16
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16A_0_DEKNEE_GB_O16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_GB16B_0  // ISP De-Knee Configuration, Gb
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0                   _MK_ADDR_CONST(0x61)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_SELWRE                    0x0
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_WORD_COUNT                        0x1
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_READ_MASK                         _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_WRITE_MASK                        _MK_MASK_CONST(0xfff)
// Slope value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_FIELD                       (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_RANGE                       11:0
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_WOFFSET                     0x0
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_GB16B_0_DEKNEE_GB_S16_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R1A_0  // ISP De-Knee Configuration, R
//    (ISP_PIXEL_DIBIT-1):0   rw  DEKNEE_R_I1     // Input start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_R1A_0                     _MK_ADDR_CONST(0x62)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_READ_MASK                   _MK_MASK_CONST(0x3ff0000)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff0000)
// Output start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1A_0_DEKNEE_R_O1_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R1B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R1B_0                     _MK_ADDR_CONST(0x63)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R1B_0_DEKNEE_R_S1_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R2A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R2A_0                     _MK_ADDR_CONST(0x64)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_I2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2A_0_DEKNEE_R_O2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R2B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R2B_0                     _MK_ADDR_CONST(0x65)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R2B_0_DEKNEE_R_S2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R3A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R3A_0                     _MK_ADDR_CONST(0x66)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_I3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3A_0_DEKNEE_R_O3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R3B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R3B_0                     _MK_ADDR_CONST(0x67)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R3B_0_DEKNEE_R_S3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R4A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R4A_0                     _MK_ADDR_CONST(0x68)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_I4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4A_0_DEKNEE_R_O4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R4B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R4B_0                     _MK_ADDR_CONST(0x69)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R4B_0_DEKNEE_R_S4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R5A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R5A_0                     _MK_ADDR_CONST(0x6a)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_I5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5A_0_DEKNEE_R_O5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R5B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R5B_0                     _MK_ADDR_CONST(0x6b)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R5B_0_DEKNEE_R_S5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R6A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R6A_0                     _MK_ADDR_CONST(0x6c)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_I6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6A_0_DEKNEE_R_O6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R6B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R6B_0                     _MK_ADDR_CONST(0x6d)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R6B_0_DEKNEE_R_S6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R7A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R7A_0                     _MK_ADDR_CONST(0x6e)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_I7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7A_0_DEKNEE_R_O7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R7B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R7B_0                     _MK_ADDR_CONST(0x6f)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R7B_0_DEKNEE_R_S7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R8A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R8A_0                     _MK_ADDR_CONST(0x70)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_I8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8A_0_DEKNEE_R_O8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R8B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R8B_0                     _MK_ADDR_CONST(0x71)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R8B_0_DEKNEE_R_S8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R9A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R9A_0                     _MK_ADDR_CONST(0x72)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_I9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9A_0_DEKNEE_R_O9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R9B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R9B_0                     _MK_ADDR_CONST(0x73)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R9B_0_DEKNEE_R_S9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R10A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R10A_0                    _MK_ADDR_CONST(0x74)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_I10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10A_0_DEKNEE_R_O10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R10B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R10B_0                    _MK_ADDR_CONST(0x75)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R10B_0_DEKNEE_R_S10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R11A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R11A_0                    _MK_ADDR_CONST(0x76)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_I11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11A_0_DEKNEE_R_O11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R11B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R11B_0                    _MK_ADDR_CONST(0x77)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R11B_0_DEKNEE_R_S11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R12A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R12A_0                    _MK_ADDR_CONST(0x78)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_I12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12A_0_DEKNEE_R_O12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R12B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R12B_0                    _MK_ADDR_CONST(0x79)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R12B_0_DEKNEE_R_S12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R13A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R13A_0                    _MK_ADDR_CONST(0x7a)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_I13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13A_0_DEKNEE_R_O13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R13B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R13B_0                    _MK_ADDR_CONST(0x7b)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R13B_0_DEKNEE_R_S13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R14A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R14A_0                    _MK_ADDR_CONST(0x7c)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_I14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14A_0_DEKNEE_R_O14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R14B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R14B_0                    _MK_ADDR_CONST(0x7d)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R14B_0_DEKNEE_R_S14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R15A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R15A_0                    _MK_ADDR_CONST(0x7e)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_I15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15A_0_DEKNEE_R_O15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R15B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R15B_0                    _MK_ADDR_CONST(0x7f)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R15B_0_DEKNEE_R_S15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R16A_0  // ISP De-Knee Configuration, R 
#define ISP_ISP_DEKNEE_CONFIG_R16A_0                    _MK_ADDR_CONST(0x80)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_I16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16A_0_DEKNEE_R_O16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_R16B_0  // ISP De-Knee Configuration, R
#define ISP_ISP_DEKNEE_CONFIG_R16B_0                    _MK_ADDR_CONST(0x81)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_R16B_0_DEKNEE_R_S16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B1A_0  // ISP De-Knee Configuration, B
//    (ISP_PIXEL_DIBIT-1):0   rw  DEKNEE_B_I1     // Input start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_B1A_0                     _MK_ADDR_CONST(0x82)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_READ_MASK                   _MK_MASK_CONST(0x3ff0000)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff0000)
// Output start value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1A_0_DEKNEE_B_O1_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B1B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B1B_0                     _MK_ADDR_CONST(0x83)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #1 line segment
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B1B_0_DEKNEE_B_S1_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B2A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B2A_0                     _MK_ADDR_CONST(0x84)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_I2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2A_0_DEKNEE_B_O2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B2B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B2B_0                     _MK_ADDR_CONST(0x85)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #2 line segment
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B2B_0_DEKNEE_B_S2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B3A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B3A_0                     _MK_ADDR_CONST(0x86)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_I3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3A_0_DEKNEE_B_O3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B3B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B3B_0                     _MK_ADDR_CONST(0x87)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #3 line segment
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B3B_0_DEKNEE_B_S3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B4A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B4A_0                     _MK_ADDR_CONST(0x88)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_I4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4A_0_DEKNEE_B_O4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B4B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B4B_0                     _MK_ADDR_CONST(0x89)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #4 line segment
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B4B_0_DEKNEE_B_S4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B5A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B5A_0                     _MK_ADDR_CONST(0x8a)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_I5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5A_0_DEKNEE_B_O5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B5B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B5B_0                     _MK_ADDR_CONST(0x8b)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #5 line segment
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B5B_0_DEKNEE_B_S5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B6A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B6A_0                     _MK_ADDR_CONST(0x8c)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_I6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6A_0_DEKNEE_B_O6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B6B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B6B_0                     _MK_ADDR_CONST(0x8d)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #6 line segment
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B6B_0_DEKNEE_B_S6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B7A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B7A_0                     _MK_ADDR_CONST(0x8e)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_I7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7A_0_DEKNEE_B_O7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B7B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B7B_0                     _MK_ADDR_CONST(0x8f)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #7 line segment
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B7B_0_DEKNEE_B_S7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B8A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B8A_0                     _MK_ADDR_CONST(0x90)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_I8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8A_0_DEKNEE_B_O8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B8B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B8B_0                     _MK_ADDR_CONST(0x91)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #8 line segment
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B8B_0_DEKNEE_B_S8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B9A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B9A_0                     _MK_ADDR_CONST(0x92)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Input start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_RANGE                   9:0
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_I9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Output start value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_RANGE                   25:16
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9A_0_DEKNEE_B_O9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B9B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B9B_0                     _MK_ADDR_CONST(0x93)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_SELWRE                      0x0
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_WORD_COUNT                  0x1
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_READ_MASK                   _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_WRITE_MASK                  _MK_MASK_CONST(0xfff)
// Slope value of #9 line segment
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_FIELD                   (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_RANGE                   11:0
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_WOFFSET                 0x0
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B9B_0_DEKNEE_B_S9_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B10A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B10A_0                    _MK_ADDR_CONST(0x94)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_I10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10A_0_DEKNEE_B_O10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B10B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B10B_0                    _MK_ADDR_CONST(0x95)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #10 line segment
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B10B_0_DEKNEE_B_S10_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B11A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B11A_0                    _MK_ADDR_CONST(0x96)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_I11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11A_0_DEKNEE_B_O11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B11B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B11B_0                    _MK_ADDR_CONST(0x97)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #11 line segment
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B11B_0_DEKNEE_B_S11_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B12A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B12A_0                    _MK_ADDR_CONST(0x98)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_I12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12A_0_DEKNEE_B_O12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B12B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B12B_0                    _MK_ADDR_CONST(0x99)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #12 line segment
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B12B_0_DEKNEE_B_S12_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B13A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B13A_0                    _MK_ADDR_CONST(0x9a)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_I13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13A_0_DEKNEE_B_O13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B13B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B13B_0                    _MK_ADDR_CONST(0x9b)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #13 line segment
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B13B_0_DEKNEE_B_S13_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B14A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B14A_0                    _MK_ADDR_CONST(0x9c)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_I14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14A_0_DEKNEE_B_O14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B14B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B14B_0                    _MK_ADDR_CONST(0x9d)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #14 line segment
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B14B_0_DEKNEE_B_S14_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B15A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B15A_0                    _MK_ADDR_CONST(0x9e)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_I15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15A_0_DEKNEE_B_O15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B15B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B15B_0                    _MK_ADDR_CONST(0x9f)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #15 line segment
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B15B_0_DEKNEE_B_S15_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B16A_0  // ISP De-Knee Configuration, B 
#define ISP_ISP_DEKNEE_CONFIG_B16A_0                    _MK_ADDR_CONST(0xa0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_READ_MASK                  _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_WRITE_MASK                         _MK_MASK_CONST(0x3ff03ff)
// Input start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_RANGE                 9:0
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_I16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Output start value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_RANGE                 25:16
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16A_0_DEKNEE_B_O16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_DEKNEE_CONFIG_B16B_0  // ISP De-Knee Configuration, B
#define ISP_ISP_DEKNEE_CONFIG_B16B_0                    _MK_ADDR_CONST(0xa1)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_SELWRE                     0x0
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_WORD_COUNT                         0x1
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_READ_MASK                  _MK_MASK_CONST(0xfff)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_WRITE_MASK                         _MK_MASK_CONST(0xfff)
// Slope value of #16 line segment
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_FIELD                 (_MK_MASK_CONST(0xfff) << ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_SHIFT)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_RANGE                 11:0
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_WOFFSET                       0x0
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DEKNEE_CONFIG_B16B_0_DEKNEE_B_S16_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Lens Shading compensation (new)
// This is implemented as Bezier surfaces for 9 (3x3) patches.
//
// There are 100 control points per color, but to simplify HW,
// the horizontally shared ones are stored twice.  To write
// the control point RAMS, we use an indirect addressing scheme.
// CTRL_PT_OFFSET is the RAM address, CTRL_PT_DATA is 1 control
// point and CTRL_PT_BUFFER is 1 of the 2 RAMs.  When CTRL_PT_DATA
// is written, the RAM is written and the HW assumes CTRL_PT_OFFSET
// and CTRL_PT_BUFFER has been set with the appropriate address. 
// CTRL_PT_OFFSET automatically increments when CTRL_PT_DATA is
// written so you don't have to write CTRL_PT_OFFSET if you're
// writing to the next address.  Likewise, it autoincrement on 
// reads to CTRL_PT_DATA and will return the RAM data at
// CTRL_PT_OFFSET.  If you read CTRL_PT_OFFSET, you'll get back
// the auto-incremented value, not the last written value.
// To simplify buffer synchronization, you should switch the buffer
// setting as soon as you have finished writing that buffer so 
// the next image can use the new settings immediately. 
//
// Writing control points to lens shading RAMs should be in column-major order.
// To write the RAMs, do:
//    reg_wr( CTRL_PT_BUFFER, A ); // Set buffer=a
//    reg_wr( CTRL_PT_OFFSET, 0 ); // Set offset=0
//    for( i=0; i<10; i++ ) { // horizontal direction
//      for j ( j=0; j<10; j++  ) { // vertical direction
//        foreach color ( "r", "gr", "gb", "b" ) {
//          reg_wr( CTRL_PT_DATA, Pcolor,ji );
//          // Internal HW copy of offset autoincrements
//          // after each write
//        }
//        if( j==3 | j==6 ) { // repeat horizontally shared pts
//          foreach color ( "r", "gr", "gb", "b" ) {
//            reg_wr( CTRL_PT_DATA, Pcolor,ji );
//            // Internal HW copy of offset autoincrements
//            // after each write
//          }
//        }
//      }
//    }
//    // Set buffer=b, so A buff can be used (eg read by LS)
//    reg_wr( CTRL_PT_BUFFER, B ); 
//
// Note for the patch dimensions, the following must be true:
//    <PATCH>_WIDTH  >= 12 and an even number
//    <PATCH>_HEIGHT >= 4  and an even number
//

// Register ISP_ISP_LS_LPATCH_WIDTH_0  // Left patch width
#define ISP_ISP_LS_LPATCH_WIDTH_0                       _MK_ADDR_CONST(0xa2)
#define ISP_ISP_LS_LPATCH_WIDTH_0_SELWRE                        0x0
#define ISP_ISP_LS_LPATCH_WIDTH_0_WORD_COUNT                    0x1
#define ISP_ISP_LS_LPATCH_WIDTH_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_READ_MASK                     _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_LPATCH_WIDTH_0_WRITE_MASK                    _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_FIELD                 (_MK_MASK_CONST(0x3fff) << ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_SHIFT)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_RANGE                 13:0
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_WOFFSET                       0x0
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_WIDTH_0_L_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CPATCH_WIDTH_0  // Center patch width
#define ISP_ISP_LS_CPATCH_WIDTH_0                       _MK_ADDR_CONST(0xa3)
#define ISP_ISP_LS_CPATCH_WIDTH_0_SELWRE                        0x0
#define ISP_ISP_LS_CPATCH_WIDTH_0_WORD_COUNT                    0x1
#define ISP_ISP_LS_CPATCH_WIDTH_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_READ_MASK                     _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_CPATCH_WIDTH_0_WRITE_MASK                    _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_FIELD                 (_MK_MASK_CONST(0x3fff) << ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_SHIFT)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_RANGE                 13:0
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_WOFFSET                       0x0
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_WIDTH_0_C_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_TPATCH_HEIGHT_0  // Top patch height
#define ISP_ISP_LS_TPATCH_HEIGHT_0                      _MK_ADDR_CONST(0xa4)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_SELWRE                       0x0
#define ISP_ISP_LS_TPATCH_HEIGHT_0_WORD_COUNT                   0x1
#define ISP_ISP_LS_TPATCH_HEIGHT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_READ_MASK                    _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_SHIFT)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_RANGE                       13:0
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_WOFFSET                     0x0
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_HEIGHT_0_T_HEIGHT_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_MPATCH_HEIGHT_0  // Middle patch height
#define ISP_ISP_LS_MPATCH_HEIGHT_0                      _MK_ADDR_CONST(0xa5)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_SELWRE                       0x0
#define ISP_ISP_LS_MPATCH_HEIGHT_0_WORD_COUNT                   0x1
#define ISP_ISP_LS_MPATCH_HEIGHT_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_READ_MASK                    _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_WRITE_MASK                   _MK_MASK_CONST(0x3fff)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_SHIFT)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_RANGE                       13:0
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_WOFFSET                     0x0
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_HEIGHT_0_M_HEIGHT_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_LPATCH_DELTAU_MSB_0  // l_delta_u[34:32]
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0                  _MK_ADDR_CONST(0xa6)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_SHIFT)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_RANGE                       2:0
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_MSB_0_L_DELTAU_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_LPATCH_DELTAU_LSB_0  // l_delta_u[31:0]
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0                  _MK_ADDR_CONST(0xa7)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_SHIFT)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_RANGE                       31:0
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_LPATCH_DELTAU_LSB_0_L_DELTAU_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CPATCH_DELTAU_MSB_0  // c_delta_u[34:32]
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0                  _MK_ADDR_CONST(0xa8)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_SHIFT)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_RANGE                       2:0
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_MSB_0_C_DELTAU_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CPATCH_DELTAU_LSB_0  // c_delta_u[31:0]
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0                  _MK_ADDR_CONST(0xa9)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_SHIFT)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_RANGE                       31:0
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CPATCH_DELTAU_LSB_0_C_DELTAU_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_RPATCH_DELTAU_MSB_0  // r_delta_u[34:32]
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0                  _MK_ADDR_CONST(0xaa)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_SHIFT)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_RANGE                       2:0
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_MSB_0_R_DELTAU_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_RPATCH_DELTAU_LSB_0  // r_delta_u[31:0]
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0                  _MK_ADDR_CONST(0xab)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_SHIFT)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_RANGE                       31:0
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_RPATCH_DELTAU_LSB_0_R_DELTAU_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_TPATCH_DELTAV_MSB_0  // t_delta_v[34:32]
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0                  _MK_ADDR_CONST(0xac)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_SHIFT)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_RANGE                       2:0
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_MSB_0_T_DELTAV_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_TPATCH_DELTAV_LSB_0  // t_delta_v[31:0]
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0                  _MK_ADDR_CONST(0xad)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_SHIFT)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_RANGE                       31:0
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_TPATCH_DELTAV_LSB_0_T_DELTAV_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_MPATCH_DELTAV_MSB_0  // m_delta_v[34:32]
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0                  _MK_ADDR_CONST(0xae)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_SHIFT)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_RANGE                       2:0
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_MSB_0_M_DELTAV_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_MPATCH_DELTAV_LSB_0  // m_delta_v[31:0]
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0                  _MK_ADDR_CONST(0xaf)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_SHIFT)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_RANGE                       31:0
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_MPATCH_DELTAV_LSB_0_M_DELTAV_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_BPATCH_DELTAV_MSB_0  // b_delta_v[34:32]
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0                  _MK_ADDR_CONST(0xb0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_SELWRE                   0x0
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_READ_MASK                        _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_WRITE_MASK                       _MK_MASK_CONST(0x7)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_FIELD                       (_MK_MASK_CONST(0x7) << ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_SHIFT)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_RANGE                       2:0
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_WOFFSET                     0x0
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_MSB_0_B_DELTAV_MSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_BPATCH_DELTAV_LSB_0  // b_delta_v[31:0]
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0                  _MK_ADDR_CONST(0xb1)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_SELWRE                   0x0
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_WORD_COUNT                       0x1
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_READ_MASK                        _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_WRITE_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_SHIFT)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_RANGE                       31:0
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_WOFFSET                     0x0
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_BPATCH_DELTAV_LSB_0_B_DELTAV_LSB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CTRL_PT_OFFSET_0  // Ctrl pt RAM wr addr
#define ISP_ISP_LS_CTRL_PT_OFFSET_0                     _MK_ADDR_CONST(0xb2)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_SELWRE                      0x0
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_WORD_COUNT                  0x1
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_READ_MASK                   _MK_MASK_CONST(0x1ff)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_WRITE_MASK                  _MK_MASK_CONST(0x1ff)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_FIELD                  (_MK_MASK_CONST(0x1ff) << ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_SHIFT)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_RANGE                  8:0
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_WOFFSET                        0x0
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_OFFSET_0_LS_CP_OFFSET_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CTRL_PT_DATA_0  // Ctrl pt RAM wr data
#define ISP_ISP_LS_CTRL_PT_DATA_0                       _MK_ADDR_CONST(0xb3)
#define ISP_ISP_LS_CTRL_PT_DATA_0_SELWRE                        0x0
#define ISP_ISP_LS_CTRL_PT_DATA_0_WORD_COUNT                    0x1
#define ISP_ISP_LS_CTRL_PT_DATA_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_READ_MASK                     _MK_MASK_CONST(0x3ffff)
#define ISP_ISP_LS_CTRL_PT_DATA_0_WRITE_MASK                    _MK_MASK_CONST(0x3ffff)
// S4.13 (2's compliment)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_FIELD                      (_MK_MASK_CONST(0x3ffff) << ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_SHIFT)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_RANGE                      17:0
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_WOFFSET                    0x0
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_DATA_0_LS_CP_DATA_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_LS_CTRL_PT_BUFFER_0  // Which buffer host is accessing
#define ISP_ISP_LS_CTRL_PT_BUFFER_0                     _MK_ADDR_CONST(0xb4)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_SELWRE                      0x0
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_WORD_COUNT                  0x1
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_READ_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_WRITE_MASK                  _MK_MASK_CONST(0x1)
// Other buffer is used by LS processing
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_SHIFT)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_RANGE                  0:0
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_WOFFSET                        0x0
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_A                      _MK_ENUM_CONST(0)
#define ISP_ISP_LS_CTRL_PT_BUFFER_0_LS_CP_BUFFER_B                      _MK_ENUM_CONST(1)

// White Balance gains
// Digital gain values are dedicated to each of the four color channels (R, G1, G2, B).
// If WHITE_BALANCE_MODE in reg ISP_CONTROL1 is set to DYNAMIC, the gain values are updated by
//  the internal AWB control (see regs ISP_WBALANCE_CONTROL1 to ISP_WBALANCE_CONTROL5).
//  Statistics for internal AWB controls are sampled in windows defined by M1 measuring window.
// If WHITE_BALANCE_MODE in reg ISP_CONTROL1 is set to PROGRAMMED, the gain values can be set by
//  Host or AVP. Host or AVP can determine the proper white balance gains based on the 8-bin
//  histogram (see ISP_WBALANCE_CONTROL2), statistics gathered from multiple sub-windows
//  defined in M3 (as many as 64x64 sub-windows, see ISP_TG_CONTROL17), or statistics from M1.

// Register ISP_ISP_WBALANCE_PROG1_0  // ISP White Balance, Programmed White
#define ISP_ISP_WBALANCE_PROG1_0                        _MK_ADDR_CONST(0xb5)
#define ISP_ISP_WBALANCE_PROG1_0_SELWRE                         0x0
#define ISP_ISP_WBALANCE_PROG1_0_WORD_COUNT                     0x1
#define ISP_ISP_WBALANCE_PROG1_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_READ_MASK                      _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_WBALANCE_PROG1_0_WRITE_MASK                     _MK_MASK_CONST(0x3ff03ff)
// Gain factor for Red
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_SHIFT)
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_RANGE                 9:0
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_WOFFSET                       0x0
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_R1WBGAIN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Gain factor for Blue
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_SHIFT)
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_RANGE                 25:16
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_WOFFSET                       0x0
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG1_0_B1WBGAIN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_PROG2_0  // ISP White Balance, Programmed White
#define ISP_ISP_WBALANCE_PROG2_0                        _MK_ADDR_CONST(0xb6)
#define ISP_ISP_WBALANCE_PROG2_0_SELWRE                         0x0
#define ISP_ISP_WBALANCE_PROG2_0_WORD_COUNT                     0x1
#define ISP_ISP_WBALANCE_PROG2_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_READ_MASK                      _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_WBALANCE_PROG2_0_WRITE_MASK                     _MK_MASK_CONST(0x3ff03ff)
// Gain factor for Green on Red
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_SHIFT)
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_RANGE                 9:0
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_WOFFSET                       0x0
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G1WBGAIN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Gain factor for Green on Blue
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_SHIFT)
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_RANGE                 25:16
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_WOFFSET                       0x0
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_PROG2_0_G2WBGAIN_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Auto White Balance (AWB) control
// Internal AWB control determines the proper white balance gains based on the average values
//  and peak values in {R, G1, G2, B} color channels.
// If the frame exposure is high ("Top" level, see ISP_WBALANCE_CONTROL4), gains are callwlated
//  from the average R, G1, G2, and B values;
// If the frame exposure is low ("Bottom" level, see ISP_WBALANCE_CONTROL5), gains are
//  callwlated from the peak R, G1, G2, and B values;
// If the frame exposure is in the middle range, gains are callwlated from both the average
//  values and the peak values.
//
// Top-clip-enable will force top clipping at WB_CLIP_LIMIT regardless of white balance mode.
// When TOP_CLIP_ENABLE = 1, output of WB module is unconditionally clipped to WB_CLIP_LEVEL.

// Register ISP_ISP_WBALANCE_CONTROL1_0  // ISP Auto White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL1_0                     _MK_ADDR_CONST(0xb7)
#define ISP_ISP_WBALANCE_CONTROL1_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL1_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_READ_MASK                   _MK_MASK_CONST(0x3ff003e)
#define ISP_ISP_WBALANCE_CONTROL1_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff003e)
// Vertical samples for exposure measurement  0 = 32-sample
//  1 = 64-sample
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_SHIFT                      _MK_SHIFT_CONST(1)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_RANGE                      1:1
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_LW32                       _MK_ENUM_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL1_0_LWSAMPLE_LW64                       _MK_ENUM_CONST(1)

// Horizontal samples for exposure measurement  0 = 32-sample
//  1 = 64-sample
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_SHIFT                      _MK_SHIFT_CONST(2)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_RANGE                      2:2
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_NH32                       _MK_ENUM_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL1_0_NHSAMPLE_NH64                       _MK_ENUM_CONST(1)

// Selection of temporal filter coefficients
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_SHIFT                        _MK_SHIFT_CONST(3)
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_FIELD                        (_MK_MASK_CONST(0x7) << ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_RANGE                        5:3
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_TFCOEF_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Maximum limit value of peak detection
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_RANGE                      25:16
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL1_0_PEAK_MAX_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_CONTROL2_0  // ISP Auto White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL2_0                     _MK_ADDR_CONST(0xb8)
#define ISP_ISP_WBALANCE_CONTROL2_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL2_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_READ_MASK                   _MK_MASK_CONST(0x3ff0ffe)
#define ISP_ISP_WBALANCE_CONTROL2_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff0ffe)
// Gain-based top-clipping enable  0 = disable
//  1 = enable
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_SHIFT                        _MK_SHIFT_CONST(1)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_FIELD                        (_MK_MASK_CONST(0x1) << ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_RANGE                        1:1
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_DISABLE                      _MK_ENUM_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_ENABLE_ENABLE                       _MK_ENUM_CONST(1)

// Lower limit of gain-based clipping
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_SHIFT                 _MK_SHIFT_CONST(2)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_RANGE                 11:2
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_WOFFSET                       0x0
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_CLIP_LIMIT_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// White reference level for gain adjustment
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_RANGE                   25:16
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_WOFFSET                 0x0
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL2_0_WB_PEAK_REF_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_CONTROL3_0  // ISP White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL3_0                     _MK_ADDR_CONST(0xb9)
#define ISP_ISP_WBALANCE_CONTROL3_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL3_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL3_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_WBALANCE_CONTROL3_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Top-to-middle transition level
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_RANGE                        9:0
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_T2M_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Middle-to-top transition level
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_SHIFT                        _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_RANGE                        25:16
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL3_0_TH_M2T_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_CONTROL4_0  // ISP White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL4_0                     _MK_ADDR_CONST(0xba)
#define ISP_ISP_WBALANCE_CONTROL4_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL4_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL4_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_READ_MASK                   _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_WBALANCE_CONTROL4_0_WRITE_MASK                  _MK_MASK_CONST(0x3ff03ff)
// Middle-to-bottom transition level
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_RANGE                        9:0
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_M2B_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Bottom-to-middle transition level
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_SHIFT                        _MK_SHIFT_CONST(16)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_RANGE                        25:16
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_WOFFSET                      0x0
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL4_0_TH_B2M_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_CONTROL5_0  // ISP White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL5_0                     _MK_ADDR_CONST(0xbb)
#define ISP_ISP_WBALANCE_CONTROL5_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL5_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL5_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_READ_MASK                   _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_WBALANCE_CONTROL5_0_WRITE_MASK                  _MK_MASK_CONST(0x3fffffff)
// Max gain factor for Red
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_RANGE                      9:0
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_RGAINMAX_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Max gain factor for Green
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_SHIFT                      _MK_SHIFT_CONST(10)
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_RANGE                      19:10
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_GGAINMAX_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Max gain factor for Blue
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_SHIFT                      _MK_SHIFT_CONST(20)
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_RANGE                      29:20
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL5_0_BGAINMAX_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_WBALANCE_CONTROL6_0  // ISP White Balance, Control
#define ISP_ISP_WBALANCE_CONTROL6_0                     _MK_ADDR_CONST(0xbc)
#define ISP_ISP_WBALANCE_CONTROL6_0_SELWRE                      0x0
#define ISP_ISP_WBALANCE_CONTROL6_0_WORD_COUNT                  0x1
#define ISP_ISP_WBALANCE_CONTROL6_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_READ_MASK                   _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_WBALANCE_CONTROL6_0_WRITE_MASK                  _MK_MASK_CONST(0x3fffffff)
// Min gain factor for Red
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_RANGE                      9:0
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_RGAINMIN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Min gain factor for Green
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_SHIFT                      _MK_SHIFT_CONST(10)
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_RANGE                      19:10
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_GGAINMIN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Min gain factor for Blue
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_SHIFT                      _MK_SHIFT_CONST(20)
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_FIELD                      (_MK_MASK_CONST(0x3ff) << ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_SHIFT)
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_RANGE                      29:20
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_WOFFSET                    0x0
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_WBALANCE_CONTROL6_0_BGAINMIN_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Bad Pixel Concealment
// If a pixel value is highly deviated from its surrounding pixels, the pixel is considered 
// as a bad pixel.  The deviation is defined in terms of the percentage of the average value
// of the pixel surrounding.  Two ratio coefficients are used: if the pixel is at flat area,
// LT_COEF is used, otherwise if it's at edge region, UT_COEF is used. 
// If the average of pixel surround is lower than BP_DARK, it's considered at shadow region,
// and BP_DARK instead of average value will be used to callwlate deviation threshold.    
//
// Noise Reduction
// There are two noise reduction functions in ISP datapath:
// (1) 2D noise reduction with intensity as a factor to sigma filter
//     Noise is reduced not only in image plane but also in intensity domain.  
//     In other words, low pass filtering is applied to pixels that has similar 
//     pixel value and also close to the location.  WA_RANGE defines the filter kernel 
//     size on the intensity domain.  Larger WA_RANGE generates smoother but blurry image.  
// (2) False color reduction: For pixels at shadow region or at edges, the colorfulness 
//      is reduced to de-emphasize color noise and color aliasing effect.  
//              MIN_Y and D_TRANSITION specify the pixels that will undergo the color reduction;
//              If the luminance level of the pixel is larger than (MIN_Y + (1<<(D_TRANSITION+4))), 
//      pixel's colorfulness is intact.  If the luminance level is smaller than MIN_Y, 
//              the colorfulness is reduced to minimum (i.e., no color correction applied).  Pixels 
//              with luminance levels in between pass through intermediate colorfulness reduction
//              factor. 
//          CC_HFACTOR specifies how much color reduction should be applied at edge pixels.
//              Larger CC_HFACTOR makes more noticable color reduction at edges. 

// Register ISP_ISP_ENHANCE_CONFIG1_0  // ISP Noise Reduction
#define ISP_ISP_ENHANCE_CONFIG1_0                       _MK_ADDR_CONST(0xbd)
#define ISP_ISP_ENHANCE_CONFIG1_0_SELWRE                        0x0
#define ISP_ISP_ENHANCE_CONFIG1_0_WORD_COUNT                    0x1
#define ISP_ISP_ENHANCE_CONFIG1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_READ_MASK                     _MK_MASK_CONST(0x7ff03ff)
#define ISP_ISP_ENHANCE_CONFIG1_0_WRITE_MASK                    _MK_MASK_CONST(0x7ff03ff)
// Bad-pixel dark level
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_RANGE                 9:0
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_WOFFSET                       0x0
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_BP_DARK_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// U1.3 ratio for Upper-threshold
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_FIELD                 (_MK_MASK_CONST(0xf) << ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_RANGE                 19:16
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_WOFFSET                       0x0
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_UT_COEF_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// U1.3 ratio for Lower-threshold
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_SHIFT                 _MK_SHIFT_CONST(20)
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_FIELD                 (_MK_MASK_CONST(0xf) << ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_RANGE                 23:20
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_WOFFSET                       0x0
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_LT_COEF_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Weighted average scaling factor in [0,7] 
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_SHIFT                        _MK_SHIFT_CONST(24)
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_FIELD                        (_MK_MASK_CONST(0x7) << ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_RANGE                        26:24
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_WOFFSET                      0x0
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG1_0_WA_RANGE_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_ENHANCE_CONFIG2_0  // ISP Noise Reduction at CC
#define ISP_ISP_ENHANCE_CONFIG2_0                       _MK_ADDR_CONST(0xbe)
#define ISP_ISP_ENHANCE_CONFIG2_0_SELWRE                        0x0
#define ISP_ISP_ENHANCE_CONFIG2_0_WORD_COUNT                    0x1
#define ISP_ISP_ENHANCE_CONFIG2_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_READ_MASK                     _MK_MASK_CONST(0xfb03ff)
#define ISP_ISP_ENHANCE_CONFIG2_0_WRITE_MASK                    _MK_MASK_CONST(0xfb03ff)
// Color noise reduction, shadow level
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_RANGE                   9:0
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_WOFFSET                 0x0
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_MIN_Y_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Transition width select  0 =  16 levels
//  1 =  32 levels
//  2 =  64 levels
//  3 = 128 levels
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_FIELD                    (_MK_MASK_CONST(0x3) << ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_RANGE                    17:16
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_WOFFSET                  0x0
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_D16                      _MK_ENUM_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_D32                      _MK_ENUM_CONST(1)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_D64                      _MK_ENUM_CONST(2)
#define ISP_ISP_ENHANCE_CONFIG2_0_D_TRANSITION_D128                     _MK_ENUM_CONST(3)

// Scaling factor in U5.0
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_SHIFT                      _MK_SHIFT_CONST(19)
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_FIELD                      (_MK_MASK_CONST(0x1f) << ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_RANGE                      23:19
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_WOFFSET                    0x0
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG2_0_CC_HFACTOR_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Edge Enhancement and Noise Reduction
// ENHLEVEL specifies how heavily the edge enhancement is applied. 
// Edge enhancement is done by (1) extracting high frequency component (HF) of the pixel,
// (2) amplifying the HF if the extracted value is "large" (i.e., coring), and 
// (3) adding the amplified HF back to the Y channel of the pixel.  In this implementation 
// the threshold that's used for coring is not just a pre-determined fixed value, rather 
// it's adaptive depending on the brightness level.  If the pixel surround is bright 
// (more visible), the coring threshold will be larger, which means only stronger edges 
// are enhanced.  Weaker edges are considered more noise-prone and thus not enhanced.
// Two control parameters to determine the adaptive coring threshold:    
// GCORELIMIT specifies the minimum coring level.  The coring level increases when pixel 
// surround's brightness level goes up.
// GCORESCALE specifies the influence of the brightness level to the coring level.
// The higher the GCORESCALE is, the larger the coring level grows under the same brightness.

// Register ISP_ISP_ENHANCE_CONFIG3_0  // ISP Edge Enhancement and Noise Reduction
#define ISP_ISP_ENHANCE_CONFIG3_0                       _MK_ADDR_CONST(0xbf)
#define ISP_ISP_ENHANCE_CONFIG3_0_SELWRE                        0x0
#define ISP_ISP_ENHANCE_CONFIG3_0_WORD_COUNT                    0x1
#define ISP_ISP_ENHANCE_CONFIG3_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_READ_MASK                     _MK_MASK_CONST(0xff3f)
#define ISP_ISP_ENHANCE_CONFIG3_0_WRITE_MASK                    _MK_MASK_CONST(0xff3f)
// Gain factor of edge enhancement
//  Multiply this value to the edge signal
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_FIELD                 (_MK_MASK_CONST(0x1f) << ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_RANGE                 4:0
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_WOFFSET                       0x0
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENHCOEF_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Fixed gain applied on top of ENHCOEF  0 = x1 
//  1 = x4 
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_SHIFT                  _MK_SHIFT_CONST(5)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_RANGE                  5:5
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_WOFFSET                        0x0
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_X1                     _MK_ENUM_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG3_0_ENH_FIXED_GAIN_X4                     _MK_ENUM_CONST(1)

// Base level of noise coring 
//  
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_SHIFT                      _MK_SHIFT_CONST(8)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_FIELD                      (_MK_MASK_CONST(0x3f) << ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_RANGE                      13:8
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_WOFFSET                    0x0
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORELIMIT_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Scaling factor range of GCORELIMIT  0 = range [1,4.5]
//  1 = range [1,8.5]
//  2 = range [1,16.5]
//  3 = range [1,32.5]
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_SHIFT                      _MK_SHIFT_CONST(14)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_FIELD                      (_MK_MASK_CONST(0x3) << ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_SHIFT)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_RANGE                      15:14
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_WOFFSET                    0x0
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_CORE4                      _MK_ENUM_CONST(0)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_CORE8                      _MK_ENUM_CONST(1)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_CORE16                     _MK_ENUM_CONST(2)
#define ISP_ISP_ENHANCE_CONFIG3_0_GCORESCALE_CORE32                     _MK_ENUM_CONST(3)

// Programming registers for demosaicing formulas
// Programmable 5x5 demosaicing takes 56 bits per formula.
//   25 pixels are divided into 8 groups. 
//   8 coefficients are made programmable.
// For 3-color CFA, e.g. RGB Bayer, there are 6 formulas.
//   2 formulas for Green. {1G and 2G}
//   4 formulas shared for Red and Blue. {1C, 2C, 3C, 4C}
// For 4-color CFA, e.g. CMYK and RGBY, there are 4 formulas.
//   4 formulas shared by all 4 colors.  {1C, 2C, 3C, 4C}
// There are 6 sets of 2-register pairs.
//   Each pair of registers holds 56 programming bits of one formula.
//     p_value[56:0] = {regX2[24:0], regX1[31:0]}
//   Formula:1G: {dm_coef12g[24:0], dm_coef11g[31:0]}   
//   Formula:2G: {dm_coef22g[24:0], dm_coef21g[31:0]}   
//   Formula:1C: {dm_coef12c[24:0], dm_coef11c[31:0]}   
//   Formula:2C: {dm_coef22c[24:0], dm_coef21c[31:0]}   
//   Formula:3C: {dm_coef32c[24:0], dm_coef31c[31:0]}   
//   Formula:4C: {dm_coef42c[24:0], dm_coef41c[31:0]}
//
// Note that all the programming bits are encrypted.
// SC_SEED[6:0] is seed value for the encryption.

// Register ISP_ISP_DM_FORMULA_G11_0  // Demosaic programming: 1G
#define ISP_ISP_DM_FORMULA_G11_0                        _MK_ADDR_CONST(0xc0)
#define ISP_ISP_DM_FORMULA_G11_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_G11_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_G11_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_G11_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef11g                   
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_SHIFT)
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G11_0_DM_COEF11G_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_G12_0  // Demosaic programming: 1G
#define ISP_ISP_DM_FORMULA_G12_0                        _MK_ADDR_CONST(0xc1)
#define ISP_ISP_DM_FORMULA_G12_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_G12_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_G12_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_G12_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef12g 
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_SHIFT)
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_DM_COEF12G_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Seed value in {0, 127}                  
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_SHIFT                  _MK_SHIFT_CONST(25)
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_FIELD                  (_MK_MASK_CONST(0x7f) << ISP_ISP_DM_FORMULA_G12_0_SC_SEED_SHIFT)
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_RANGE                  31:25
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_WOFFSET                        0x0
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G12_0_SC_SEED_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_G21_0  // Demosaic programming: 2G
#define ISP_ISP_DM_FORMULA_G21_0                        _MK_ADDR_CONST(0xc2)
#define ISP_ISP_DM_FORMULA_G21_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_G21_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_G21_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_G21_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef21g                   
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_SHIFT)
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G21_0_DM_COEF21G_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_G22_0  // Demosaic programming: 2G
#define ISP_ISP_DM_FORMULA_G22_0                        _MK_ADDR_CONST(0xc3)
#define ISP_ISP_DM_FORMULA_G22_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_G22_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_G22_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_READ_MASK                      _MK_MASK_CONST(0x1ffffff)
#define ISP_ISP_DM_FORMULA_G22_0_WRITE_MASK                     _MK_MASK_CONST(0x1ffffff)
// dm_coef22g                   
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_SHIFT)
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_G22_0_DM_COEF22G_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C11_0  // Demosaic programming: 1C
#define ISP_ISP_DM_FORMULA_C11_0                        _MK_ADDR_CONST(0xc4)
#define ISP_ISP_DM_FORMULA_C11_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C11_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C11_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_C11_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef11c                   
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_SHIFT)
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C11_0_DM_COEF11C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C12_0  // Demosaic programming: 1C
#define ISP_ISP_DM_FORMULA_C12_0                        _MK_ADDR_CONST(0xc5)
#define ISP_ISP_DM_FORMULA_C12_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C12_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C12_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_READ_MASK                      _MK_MASK_CONST(0x1ffffff)
#define ISP_ISP_DM_FORMULA_C12_0_WRITE_MASK                     _MK_MASK_CONST(0x1ffffff)
// dm_coef12c                   
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_SHIFT)
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C12_0_DM_COEF12C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C21_0  // Demosaic programming: 2C
#define ISP_ISP_DM_FORMULA_C21_0                        _MK_ADDR_CONST(0xc6)
#define ISP_ISP_DM_FORMULA_C21_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C21_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C21_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_C21_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef21c                   
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_SHIFT)
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C21_0_DM_COEF21C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C22_0  // Demosaic programming: 2C
#define ISP_ISP_DM_FORMULA_C22_0                        _MK_ADDR_CONST(0xc7)
#define ISP_ISP_DM_FORMULA_C22_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C22_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C22_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_READ_MASK                      _MK_MASK_CONST(0x1ffffff)
#define ISP_ISP_DM_FORMULA_C22_0_WRITE_MASK                     _MK_MASK_CONST(0x1ffffff)
// dm_coef22c                   
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_SHIFT)
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C22_0_DM_COEF22C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C31_0  // Demosaic programming: 3C
#define ISP_ISP_DM_FORMULA_C31_0                        _MK_ADDR_CONST(0xc8)
#define ISP_ISP_DM_FORMULA_C31_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C31_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C31_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_C31_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef31c                   
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_SHIFT)
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C31_0_DM_COEF31C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C32_0  // Demosaic programming: 3C
#define ISP_ISP_DM_FORMULA_C32_0                        _MK_ADDR_CONST(0xc9)
#define ISP_ISP_DM_FORMULA_C32_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C32_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C32_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_READ_MASK                      _MK_MASK_CONST(0x1ffffff)
#define ISP_ISP_DM_FORMULA_C32_0_WRITE_MASK                     _MK_MASK_CONST(0x1ffffff)
// dm_coef32c                   
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_SHIFT)
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C32_0_DM_COEF32C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C41_0  // Demosaic programming: 4C
#define ISP_ISP_DM_FORMULA_C41_0                        _MK_ADDR_CONST(0xca)
#define ISP_ISP_DM_FORMULA_C41_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C41_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C41_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_DM_FORMULA_C41_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// dm_coef41c                   
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_SHIFT)
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_RANGE                       31:0
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C41_0_DM_COEF41C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_DM_FORMULA_C42_0  // Demosaic programming: 4C
#define ISP_ISP_DM_FORMULA_C42_0                        _MK_ADDR_CONST(0xcb)
#define ISP_ISP_DM_FORMULA_C42_0_SELWRE                         0x0
#define ISP_ISP_DM_FORMULA_C42_0_WORD_COUNT                     0x1
#define ISP_ISP_DM_FORMULA_C42_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_READ_MASK                      _MK_MASK_CONST(0x1ffffff)
#define ISP_ISP_DM_FORMULA_C42_0_WRITE_MASK                     _MK_MASK_CONST(0x1ffffff)
// dm_coef42c                   
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_FIELD                       (_MK_MASK_CONST(0x1ffffff) << ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_SHIFT)
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_RANGE                       24:0
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_WOFFSET                     0x0
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DM_FORMULA_C42_0_DM_COEF42C_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Color artifact reduction
//
// "car_enable" bit switches color-artifact reduction processing on and off
// For layer L1 image,
//   "car_w1" specifies group size of pixels of the same color that are summed up
//      for callwlation of average values 
//   "car_vf1k specifies filter coefficient for the input of vertical IIR filter
//   "car_dif1core" specifies noise coring level to the L1 weighting signal
//   "car_f1mag" specifies magnifying factor to the L1 weighting factor
// For layer L2 image,
//   "car_w2" specifies group size of pixels of the same color that are summed up 
//      for callwlation of average values 
//   "car_vf2k specifies filter coefficient for the input of vertical IIR filter
//   "car_dif2core" specifies noise coring level to the L2 weighting signal
//   "car_f2mag" specifies magnifying factor to the L2 weighting factor

// Register ISP_ISP_CAR_CONTROL1_0  // ISP CAR Control 1 
#define ISP_ISP_CAR_CONTROL1_0                  _MK_ADDR_CONST(0xcc)
#define ISP_ISP_CAR_CONTROL1_0_SELWRE                   0x0
#define ISP_ISP_CAR_CONTROL1_0_WORD_COUNT                       0x1
#define ISP_ISP_CAR_CONTROL1_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_READ_MASK                        _MK_MASK_CONST(0xffffff)
#define ISP_ISP_CAR_CONTROL1_0_WRITE_MASK                       _MK_MASK_CONST(0xffffff)
// Group size  0 =  2 pixel
//  1 =  4 pixel
//  2 =  8 pixel
//  3 =  16 pixel
//  4 =  32 pixel
//  5 =  64 pixel
//  6 =  128 pixel
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_CAR_CONTROL1_0_CAR_W1_SHIFT)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_RANGE                     2:0
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_WOFFSET                   0x0
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G2                        _MK_ENUM_CONST(0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G4                        _MK_ENUM_CONST(1)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G8                        _MK_ENUM_CONST(2)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G16                       _MK_ENUM_CONST(3)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G32                       _MK_ENUM_CONST(4)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G64                       _MK_ENUM_CONST(5)
#define ISP_ISP_CAR_CONTROL1_0_CAR_W1_G128                      _MK_ENUM_CONST(6)

// U1.4, max value is 16 (mathematically 1.0). 
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_SHIFT                   _MK_SHIFT_CONST(3)
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_FIELD                   (_MK_MASK_CONST(0x1f) << ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_SHIFT)
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_RANGE                   7:3
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_WOFFSET                 0x0
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_VF1K_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// U8.0
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_SHIFT                       _MK_SHIFT_CONST(8)
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_FIELD                       (_MK_MASK_CONST(0xff) << ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_SHIFT)
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_RANGE                       15:8
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_WOFFSET                     0x0
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_DIF1CORE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// U4.4
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_SHIFT                  _MK_SHIFT_CONST(16)
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_SHIFT)
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_RANGE                  23:16
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_WOFFSET                        0x0
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL1_0_CAR_F1MAG_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_CAR_CONTROL2_0  // ISP CAR Control 2 
#define ISP_ISP_CAR_CONTROL2_0                  _MK_ADDR_CONST(0xcd)
#define ISP_ISP_CAR_CONTROL2_0_SELWRE                   0x0
#define ISP_ISP_CAR_CONTROL2_0_WORD_COUNT                       0x1
#define ISP_ISP_CAR_CONTROL2_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_READ_MASK                        _MK_MASK_CONST(0xffffff)
#define ISP_ISP_CAR_CONTROL2_0_WRITE_MASK                       _MK_MASK_CONST(0xffffff)
// Group size  0 =  2 pixel
//  1 =  4 pixel
//  2 =  8 pixel
//  3 =  16 pixel
//  4 =  32 pixel
//  5 =  64 pixel
//  6 =  128 pixel
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_CAR_CONTROL2_0_CAR_W2_SHIFT)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_RANGE                     2:0
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_WOFFSET                   0x0
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G2                        _MK_ENUM_CONST(0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G4                        _MK_ENUM_CONST(1)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G8                        _MK_ENUM_CONST(2)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G16                       _MK_ENUM_CONST(3)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G32                       _MK_ENUM_CONST(4)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G64                       _MK_ENUM_CONST(5)
#define ISP_ISP_CAR_CONTROL2_0_CAR_W2_G128                      _MK_ENUM_CONST(6)

// U1.4, max value is 16 (mathematically 1.0).
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_SHIFT                   _MK_SHIFT_CONST(3)
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_FIELD                   (_MK_MASK_CONST(0x1f) << ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_SHIFT)
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_RANGE                   7:3
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_WOFFSET                 0x0
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_VF2K_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// U8.0
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_SHIFT                       _MK_SHIFT_CONST(8)
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_FIELD                       (_MK_MASK_CONST(0xff) << ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_SHIFT)
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_RANGE                       15:8
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_WOFFSET                     0x0
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_DIF2CORE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// U4.4
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_SHIFT                  _MK_SHIFT_CONST(16)
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_SHIFT)
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_RANGE                  23:16
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_WOFFSET                        0x0
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CAR_CONTROL2_0_CAR_F2MAG_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Image Down-Scaling
// Only down-scaling is available.
// Horizontal and vertical down-scaling ratios are treated independently.
// Two DDAs are provided for horizontal and vertical timing control.
// Both DDAs have 6-bit integer and 10-bit fraction.
//   That can handle up to 63-to-1 down-scaling.
//   A DDA is configured by {initial_value, increment_value}.
//   "Initial_value" specifies relative positions of first active lines in the 
//   source image and the destination image.
//     This is represented in 8-bit, U3.5.
//   "increment_value" is the sampling pitch of the destination image measured in the 
//   sampling pitch of the source image.
//
// For the vertical down-scaling,
//   Initial_value = 0.0 means that the two first active lines of source and destination 
//   images are the same position.
//   Increment_value = 2.5 for example means 2.5-to-1 down-scaling.
//   Increment_value >= 1.0. (down-scaling only)
// For the horizontal down-scaling,
//   Initial_value can be in [0.0, 7.96875].
//   Initial_value = 0.0 means that the two first active pixels of source and destination 
//   images are the same position.
//   Increment_value = 10.5 for example means 10.5-to-1 down-scaling.
//   Increment_value >= 1.0. (down-scaling only)
//
// To make the destination image exactly TH lines by TW pixels, image height (lines) and
// image width (pixels) are specified.
// Exactly THxTW destination image will be produced if and only if  the specified size of 
// a destination image fits in the destination image frame specified by {source image size, 
// H & V DDA configurations}.
// If not, size of the destination image will be limited by the size of source image.

// Register ISP_ISP_DS_VERTICAL_0  // Vertical down-scaling
#define ISP_ISP_DS_VERTICAL_0                   _MK_ADDR_CONST(0xce)
#define ISP_ISP_DS_VERTICAL_0_SELWRE                    0x0
#define ISP_ISP_DS_VERTICAL_0_WORD_COUNT                        0x1
#define ISP_ISP_DS_VERTICAL_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_RESET_MASK                        _MK_MASK_CONST(0x10000)
#define ISP_ISP_DS_VERTICAL_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_READ_MASK                         _MK_MASK_CONST(0xff01ffff)
#define ISP_ISP_DS_VERTICAL_0_WRITE_MASK                        _MK_MASK_CONST(0xff01ffff)
// Increment_value, U6.10
//  DS_VERT_DELTA=2.5 means 2.5 to 1 downscaling.
//  Must be >= 1.0 (i.e., downscaling only)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_FIELD                       (_MK_MASK_CONST(0xffff) << ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_SHIFT)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_RANGE                       15:0
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_WOFFSET                     0x0
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_DELTA_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Down-scaler enable
//  0    Disable (default)
//  1    Enable
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_SHIFT)
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_RANGE                      16:16
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_WOFFSET                    0x0
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DSCALE_INCLUDE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Initial_value, U3.5 
//  Relative position of first active line in the 
//  source image to the destination image.                  
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_SHIFT                     _MK_SHIFT_CONST(24)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_FIELD                     (_MK_MASK_CONST(0xff) << ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_SHIFT)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_RANGE                     31:24
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_WOFFSET                   0x0
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_VERTICAL_0_DS_VERT_INITIAL_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_DS_HORIZONTAL_0  // Horizontal down-scaling
#define ISP_ISP_DS_HORIZONTAL_0                 _MK_ADDR_CONST(0xcf)
#define ISP_ISP_DS_HORIZONTAL_0_SELWRE                  0x0
#define ISP_ISP_DS_HORIZONTAL_0_WORD_COUNT                      0x1
#define ISP_ISP_DS_HORIZONTAL_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_READ_MASK                       _MK_MASK_CONST(0xff07ffff)
#define ISP_ISP_DS_HORIZONTAL_0_WRITE_MASK                      _MK_MASK_CONST(0xff07ffff)
// Increment_value, U6.10 
//  DS_HOR_DELTA=2.5 means 2.5 to 1 downscaling.
//  Must be >= 1.0 (i.e., downscaling only)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_FIELD                      (_MK_MASK_CONST(0xffff) << ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_SHIFT)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_RANGE                      15:0
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_WOFFSET                    0x0
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_DELTA_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Selection of horizontal low-pass filters 
//  in {0,1,2,3,4,5,6,7}
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_SHIFT)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_RANGE                     18:16
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_WOFFSET                   0x0
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_FILTER_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Initial_value, U3.5                    
//  Relative position of first active pixel in the 
//  source image to the destination image.                  
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_SHIFT                    _MK_SHIFT_CONST(24)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_FIELD                    (_MK_MASK_CONST(0xff) << ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_SHIFT)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_RANGE                    31:24
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_WOFFSET                  0x0
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_HORIZONTAL_0_DS_HOR_INITIAL_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_DS_DEST_SIZE_0  // Destination image framing
#define ISP_ISP_DS_DEST_SIZE_0                  _MK_ADDR_CONST(0xd0)
#define ISP_ISP_DS_DEST_SIZE_0_SELWRE                   0x0
#define ISP_ISP_DS_DEST_SIZE_0_WORD_COUNT                       0x1
#define ISP_ISP_DS_DEST_SIZE_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_DS_DEST_SIZE_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Number of active pixels in a line 
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_SHIFT)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_RANGE                      13:0
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_WOFFSET                    0x0
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_WIDTH_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of active lines in a frame
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_SHIFT)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_RANGE                     29:16
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_WOFFSET                   0x0
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_DS_DEST_SIZE_0_DS_DEST_HEIGHT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Color Correction
// 3x3 matrix factors for the camera RGB (cRGB) to standard RGB (sRGB) colwersion.
// Subjective adjustment of color may also be included.

// Register ISP_ISP_COLORCORRECT_RCONFIG1_0  // ISP Color Correction, Red factors 
#define ISP_ISP_COLORCORRECT_RCONFIG1_0                 _MK_ADDR_CONST(0xd1)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_READ_MASK                       _MK_MASK_CONST(0xfff0fff)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_WRITE_MASK                      _MK_MASK_CONST(0xfff0fff)
// cR to sR factor, pos/neg
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_SHIFT)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2R_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// cR to sG factor, pos/neg
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_SHIFT)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_RANGE                     27:16
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG1_0_CCR2G_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_COLORCORRECT_RCONFIG2_0  // ISP Color Correction, Red factors 
#define ISP_ISP_COLORCORRECT_RCONFIG2_0                 _MK_ADDR_CONST(0xd2)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_READ_MASK                       _MK_MASK_CONST(0xfff)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_WRITE_MASK                      _MK_MASK_CONST(0xfff)
// cR to sB factor, pos/neg
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_SHIFT)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_RCONFIG2_0_CCR2B_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_COLORCORRECT_GCONFIG1_0  // ISP Color Correction, Green factors 
#define ISP_ISP_COLORCORRECT_GCONFIG1_0                 _MK_ADDR_CONST(0xd3)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_READ_MASK                       _MK_MASK_CONST(0xfff0fff)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_WRITE_MASK                      _MK_MASK_CONST(0xfff0fff)
// cG to sG factor, pos/neg
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_SHIFT)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2G_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// cG to sR factor, pos/neg
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_SHIFT)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_RANGE                     27:16
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG1_0_CCG2R_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_COLORCORRECT_GCONFIG2_0  // ISP Color Correction, Green factors 
#define ISP_ISP_COLORCORRECT_GCONFIG2_0                 _MK_ADDR_CONST(0xd4)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_READ_MASK                       _MK_MASK_CONST(0xfff)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_WRITE_MASK                      _MK_MASK_CONST(0xfff)
// cG to sB factor, pos/neg
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_SHIFT)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_GCONFIG2_0_CCG2B_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_COLORCORRECT_BCONFIG1_0  // ISP Color Correction, Blue factors 
#define ISP_ISP_COLORCORRECT_BCONFIG1_0                 _MK_ADDR_CONST(0xd5)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_READ_MASK                       _MK_MASK_CONST(0xfff0fff)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_WRITE_MASK                      _MK_MASK_CONST(0xfff0fff)
// cB to sB factor, pos/neg
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_SHIFT)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2B_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// cB to sR factor, pos/neg
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_SHIFT)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_RANGE                     27:16
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG1_0_CCB2R_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_COLORCORRECT_BCONFIG2_0  // ISP Color Correction, Blue factors 
#define ISP_ISP_COLORCORRECT_BCONFIG2_0                 _MK_ADDR_CONST(0xd6)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_SELWRE                  0x0
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_WORD_COUNT                      0x1
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_READ_MASK                       _MK_MASK_CONST(0xfff)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_WRITE_MASK                      _MK_MASK_CONST(0xfff)
// cB to sG factor, pos/neg
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_FIELD                     (_MK_MASK_CONST(0xfff) << ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_SHIFT)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_RANGE                     11:0
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_WOFFSET                   0x0
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_COLORCORRECT_BCONFIG2_0_CCB2G_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Gamma Correction
// Piecewise linear approximation of up to 32 line segments can be configured.
// Line segment definitions must be provided in ascending order (of input range) from CONFIG1
//   to CONFIG32. 
// Unused configuration registers must have "input start value" equals to "maximum input value"
//   and "output start value" equals to "output value to the maximum input value".
// If input start value of the first segment (GAMMA_I1) is not ZERO, input below this value
//   is clumped to this level. (Corresponding output is GAMMA_O1)

// Register ISP_ISP_GAMMA_CONFIG1_0  // ISP Gamma Configuration 1
#define ISP_ISP_GAMMA_CONFIG1_0                 _MK_ADDR_CONST(0xd7)
#define ISP_ISP_GAMMA_CONFIG1_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG1_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG1_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #1 line segment
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_SHIFT)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_I1_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #1 line segment
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_SHIFT)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_O1_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #1 line segment
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_SHIFT)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG1_0_GAMMA_S1_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG2_0  // ISP Gamma Configuration 2
#define ISP_ISP_GAMMA_CONFIG2_0                 _MK_ADDR_CONST(0xd8)
#define ISP_ISP_GAMMA_CONFIG2_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG2_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG2_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #2 line segment
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_SHIFT)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_I2_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #2 line segment
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_SHIFT)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_O2_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #2 line segment
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_SHIFT)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG2_0_GAMMA_S2_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG3_0  // ISP Gamma Configuration 3
#define ISP_ISP_GAMMA_CONFIG3_0                 _MK_ADDR_CONST(0xd9)
#define ISP_ISP_GAMMA_CONFIG3_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG3_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG3_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG3_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #3 line segment
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_SHIFT)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_I3_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #3 line segment
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_SHIFT)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_O3_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #3 line segment
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_SHIFT)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG3_0_GAMMA_S3_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG4_0  // ISP Gamma Configuration 4
#define ISP_ISP_GAMMA_CONFIG4_0                 _MK_ADDR_CONST(0xda)
#define ISP_ISP_GAMMA_CONFIG4_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG4_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG4_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG4_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #4 line segment
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_SHIFT)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_I4_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #4 line segment
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_SHIFT)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_O4_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #4 line segment
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_SHIFT)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG4_0_GAMMA_S4_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG5_0  // ISP Gamma Configuration 5
#define ISP_ISP_GAMMA_CONFIG5_0                 _MK_ADDR_CONST(0xdb)
#define ISP_ISP_GAMMA_CONFIG5_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG5_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG5_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG5_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #5 line segment
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_SHIFT)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_I5_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #5 line segment
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_SHIFT)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_O5_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #5 line segment
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_SHIFT)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG5_0_GAMMA_S5_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG6_0  // ISP Gamma Configuration 6
#define ISP_ISP_GAMMA_CONFIG6_0                 _MK_ADDR_CONST(0xdc)
#define ISP_ISP_GAMMA_CONFIG6_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG6_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG6_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG6_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #6 line segment
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_SHIFT)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_I6_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #6 line segment
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_SHIFT)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_O6_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #6 line segment
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_SHIFT)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG6_0_GAMMA_S6_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG7_0  // ISP Gamma Configuration 7
#define ISP_ISP_GAMMA_CONFIG7_0                 _MK_ADDR_CONST(0xdd)
#define ISP_ISP_GAMMA_CONFIG7_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG7_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG7_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG7_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #7 line segment
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_SHIFT)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_I7_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #7 line segment
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_SHIFT)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_O7_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #7 line segment
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_SHIFT)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG7_0_GAMMA_S7_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG8_0  // ISP Gamma Configuration 8
#define ISP_ISP_GAMMA_CONFIG8_0                 _MK_ADDR_CONST(0xde)
#define ISP_ISP_GAMMA_CONFIG8_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG8_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG8_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG8_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #8 line segment
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_SHIFT)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_I8_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #8 line segment
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_SHIFT)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_O8_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #8 line segment
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_SHIFT)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG8_0_GAMMA_S8_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG9_0  // ISP Gamma Configuration 9
#define ISP_ISP_GAMMA_CONFIG9_0                 _MK_ADDR_CONST(0xdf)
#define ISP_ISP_GAMMA_CONFIG9_0_SELWRE                  0x0
#define ISP_ISP_GAMMA_CONFIG9_0_WORD_COUNT                      0x1
#define ISP_ISP_GAMMA_CONFIG9_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_READ_MASK                       _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG9_0_WRITE_MASK                      _MK_MASK_CONST(0xfff3ffff)
// Input start value of #9 line segment
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_SHIFT)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_RANGE                  9:0
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_I9_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Output start value of #9 line segment
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_SHIFT                  _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_FIELD                  (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_SHIFT)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_RANGE                  17:10
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_O9_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Slope value of #9 line segment
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_SHIFT                  _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_FIELD                  (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_SHIFT)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_RANGE                  31:20
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_WOFFSET                        0x0
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG9_0_GAMMA_S9_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG10_0  // ISP Gamma Configuration 10
#define ISP_ISP_GAMMA_CONFIG10_0                        _MK_ADDR_CONST(0xe0)
#define ISP_ISP_GAMMA_CONFIG10_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG10_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG10_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG10_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #10 line segment
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_SHIFT)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_I10_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #10 line segment
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_SHIFT)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_O10_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #10 line segment
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_SHIFT)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG10_0_GAMMA_S10_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG11_0  // ISP Gamma Configuration 11
#define ISP_ISP_GAMMA_CONFIG11_0                        _MK_ADDR_CONST(0xe1)
#define ISP_ISP_GAMMA_CONFIG11_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG11_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG11_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG11_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #11 line segment
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_SHIFT)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_I11_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #11 line segment
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_SHIFT)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_O11_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #11 line segment
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_SHIFT)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG11_0_GAMMA_S11_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG12_0  // ISP Gamma Configuration 12
#define ISP_ISP_GAMMA_CONFIG12_0                        _MK_ADDR_CONST(0xe2)
#define ISP_ISP_GAMMA_CONFIG12_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG12_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG12_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG12_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #12 line segment
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_SHIFT)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_I12_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #12 line segment
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_SHIFT)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_O12_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #12 line segment
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_SHIFT)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG12_0_GAMMA_S12_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG13_0  // ISP Gamma Configuration 13
#define ISP_ISP_GAMMA_CONFIG13_0                        _MK_ADDR_CONST(0xe3)
#define ISP_ISP_GAMMA_CONFIG13_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG13_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG13_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG13_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #13 line segment
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_SHIFT)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_I13_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #13 line segment
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_SHIFT)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_O13_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #13 line segment
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_SHIFT)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG13_0_GAMMA_S13_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG14_0  // ISP Gamma Configuration 14
#define ISP_ISP_GAMMA_CONFIG14_0                        _MK_ADDR_CONST(0xe4)
#define ISP_ISP_GAMMA_CONFIG14_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG14_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG14_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG14_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #14 line segment
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_SHIFT)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_I14_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #14 line segment
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_SHIFT)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_O14_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #14 line segment
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_SHIFT)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG14_0_GAMMA_S14_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG15_0  // ISP Gamma Configuration 15
#define ISP_ISP_GAMMA_CONFIG15_0                        _MK_ADDR_CONST(0xe5)
#define ISP_ISP_GAMMA_CONFIG15_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG15_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG15_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG15_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #15 line segment
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_SHIFT)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_I15_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #15 line segment
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_SHIFT)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_O15_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #15 line segment
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_SHIFT)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG15_0_GAMMA_S15_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG16_0  // ISP Gamma Configuration 16
#define ISP_ISP_GAMMA_CONFIG16_0                        _MK_ADDR_CONST(0xe6)
#define ISP_ISP_GAMMA_CONFIG16_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG16_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG16_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG16_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #16 line segment
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_SHIFT)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_I16_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #16 line segment
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_SHIFT)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_O16_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #16 line segment
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_SHIFT)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG16_0_GAMMA_S16_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG17_0  // ISP Gamma Configuration 17
#define ISP_ISP_GAMMA_CONFIG17_0                        _MK_ADDR_CONST(0xe7)
#define ISP_ISP_GAMMA_CONFIG17_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG17_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG17_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG17_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #17 line segment
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_SHIFT)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_I17_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #17 line segment
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_SHIFT)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_O17_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #17 line segment
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_SHIFT)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG17_0_GAMMA_S17_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG18_0  // ISP Gamma Configuration 18
#define ISP_ISP_GAMMA_CONFIG18_0                        _MK_ADDR_CONST(0xe8)
#define ISP_ISP_GAMMA_CONFIG18_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG18_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG18_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG18_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #18 line segment
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_SHIFT)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_I18_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #18 line segment
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_SHIFT)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_O18_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #18 line segment
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_SHIFT)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG18_0_GAMMA_S18_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG19_0  // ISP Gamma Configuration 19
#define ISP_ISP_GAMMA_CONFIG19_0                        _MK_ADDR_CONST(0xe9)
#define ISP_ISP_GAMMA_CONFIG19_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG19_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG19_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG19_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #19 line segment
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_SHIFT)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_I19_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #19 line segment
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_SHIFT)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_O19_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #19 line segment
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_SHIFT)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG19_0_GAMMA_S19_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG20_0  // ISP Gamma Configuration 20
#define ISP_ISP_GAMMA_CONFIG20_0                        _MK_ADDR_CONST(0xea)
#define ISP_ISP_GAMMA_CONFIG20_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG20_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG20_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG20_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #20 line segment
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_SHIFT)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_I20_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #20 line segment
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_SHIFT)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_O20_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #20 line segment
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_SHIFT)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG20_0_GAMMA_S20_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG21_0  // ISP Gamma Configuration 21
#define ISP_ISP_GAMMA_CONFIG21_0                        _MK_ADDR_CONST(0xeb)
#define ISP_ISP_GAMMA_CONFIG21_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG21_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG21_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG21_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #21 line segment
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_SHIFT)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_I21_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #21 line segment
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_SHIFT)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_O21_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #21 line segment
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_SHIFT)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG21_0_GAMMA_S21_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG22_0  // ISP Gamma Configuration 22
#define ISP_ISP_GAMMA_CONFIG22_0                        _MK_ADDR_CONST(0xec)
#define ISP_ISP_GAMMA_CONFIG22_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG22_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG22_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG22_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #22 line segment
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_SHIFT)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_I22_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #22 line segment
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_SHIFT)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_O22_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #22 line segment
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_SHIFT)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG22_0_GAMMA_S22_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG23_0  // ISP Gamma Configuration 23
#define ISP_ISP_GAMMA_CONFIG23_0                        _MK_ADDR_CONST(0xed)
#define ISP_ISP_GAMMA_CONFIG23_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG23_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG23_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG23_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #23 line segment
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_SHIFT)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_I23_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #23 line segment
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_SHIFT)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_O23_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #23 line segment
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_SHIFT)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG23_0_GAMMA_S23_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG24_0  // ISP Gamma Configuration 24
#define ISP_ISP_GAMMA_CONFIG24_0                        _MK_ADDR_CONST(0xee)
#define ISP_ISP_GAMMA_CONFIG24_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG24_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG24_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG24_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #24 line segment
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_SHIFT)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_I24_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #24 line segment
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_SHIFT)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_O24_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #24 line segment
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_SHIFT)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG24_0_GAMMA_S24_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG25_0  // ISP Gamma Configuration 25
#define ISP_ISP_GAMMA_CONFIG25_0                        _MK_ADDR_CONST(0xef)
#define ISP_ISP_GAMMA_CONFIG25_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG25_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG25_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG25_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #25 line segment
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_SHIFT)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_I25_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #25 line segment
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_SHIFT)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_O25_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #25 line segment
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_SHIFT)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG25_0_GAMMA_S25_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG26_0  // ISP Gamma Configuration 26
#define ISP_ISP_GAMMA_CONFIG26_0                        _MK_ADDR_CONST(0xf0)
#define ISP_ISP_GAMMA_CONFIG26_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG26_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG26_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG26_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #26 line segment
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_SHIFT)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_I26_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #26 line segment
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_SHIFT)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_O26_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #26 line segment
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_SHIFT)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG26_0_GAMMA_S26_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG27_0  // ISP Gamma Configuration 27
#define ISP_ISP_GAMMA_CONFIG27_0                        _MK_ADDR_CONST(0xf1)
#define ISP_ISP_GAMMA_CONFIG27_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG27_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG27_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG27_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #27 line segment
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_SHIFT)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_I27_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #27 line segment
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_SHIFT)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_O27_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #27 line segment
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_SHIFT)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG27_0_GAMMA_S27_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG28_0  // ISP Gamma Configuration 28
#define ISP_ISP_GAMMA_CONFIG28_0                        _MK_ADDR_CONST(0xf2)
#define ISP_ISP_GAMMA_CONFIG28_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG28_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG28_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG28_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #28 line segment
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_SHIFT)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_I28_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #28 line segment
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_SHIFT)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_O28_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #28 line segment
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_SHIFT)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG28_0_GAMMA_S28_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG29_0  // ISP Gamma Configuration 29
#define ISP_ISP_GAMMA_CONFIG29_0                        _MK_ADDR_CONST(0xf3)
#define ISP_ISP_GAMMA_CONFIG29_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG29_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG29_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG29_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #29 line segment
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_SHIFT)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_I29_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #29 line segment
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_SHIFT)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_O29_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #29 line segment
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_SHIFT)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG29_0_GAMMA_S29_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG30_0  // ISP Gamma Configuration 30
#define ISP_ISP_GAMMA_CONFIG30_0                        _MK_ADDR_CONST(0xf4)
#define ISP_ISP_GAMMA_CONFIG30_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG30_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG30_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG30_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #30 line segment
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_SHIFT)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_I30_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #30 line segment
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_SHIFT)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_O30_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #30 line segment
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_SHIFT)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG30_0_GAMMA_S30_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG31_0  // ISP Gamma Configuration 31
#define ISP_ISP_GAMMA_CONFIG31_0                        _MK_ADDR_CONST(0xf5)
#define ISP_ISP_GAMMA_CONFIG31_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG31_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG31_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG31_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #31 line segment
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_SHIFT)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_I31_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #31 line segment
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_SHIFT)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_O31_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #31 line segment
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_SHIFT)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG31_0_GAMMA_S31_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_GAMMA_CONFIG32_0  // ISP Gamma Configuration 32
#define ISP_ISP_GAMMA_CONFIG32_0                        _MK_ADDR_CONST(0xf6)
#define ISP_ISP_GAMMA_CONFIG32_0_SELWRE                         0x0
#define ISP_ISP_GAMMA_CONFIG32_0_WORD_COUNT                     0x1
#define ISP_ISP_GAMMA_CONFIG32_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_RESET_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_READ_MASK                      _MK_MASK_CONST(0xfff3ffff)
#define ISP_ISP_GAMMA_CONFIG32_0_WRITE_MASK                     _MK_MASK_CONST(0xfff3ffff)
// Input start value of #32 line segment
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_FIELD                        (_MK_MASK_CONST(0x3ff) << ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_SHIFT)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_RANGE                        9:0
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_I32_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Output start value of #32 line segment
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_SHIFT)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_RANGE                        17:10
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_O32_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Slope value of #32 line segment
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_FIELD                        (_MK_MASK_CONST(0xfff) << ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_SHIFT)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_RANGE                        31:20
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_WOFFSET                      0x0
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_GAMMA_CONFIG32_0_GAMMA_S32_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// RGB to YUV colwersion and Y/C adjustment on Y/U/V
// This is implemented as 3x3 matrix multiplication

// Register ISP_ISP_CSC_YCONFIG1_0  // ISP RGB2YUV and Color Adjust, for Y
#define ISP_ISP_CSC_YCONFIG1_0                  _MK_ADDR_CONST(0xf7)
#define ISP_ISP_CSC_YCONFIG1_0_SELWRE                   0x0
#define ISP_ISP_CSC_YCONFIG1_0_WORD_COUNT                       0x1
#define ISP_ISP_CSC_YCONFIG1_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_READ_MASK                        _MK_MASK_CONST(0xff7fcff)
#define ISP_ISP_CSC_YCONFIG1_0_WRITE_MASK                       _MK_MASK_CONST(0xff7fcff)
// Factor for Red to Y
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_FIELD                     (_MK_MASK_CONST(0xff) << ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_SHIFT)
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_RANGE                     7:0
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_WOFFSET                   0x0
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCR2Y_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Factor for Green to Y
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_SHIFT                     _MK_SHIFT_CONST(10)
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_FIELD                     (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_SHIFT)
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_RANGE                     18:10
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_WOFFSET                   0x0
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCG2Y_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Factor for Blue to Y
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_SHIFT                     _MK_SHIFT_CONST(20)
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_FIELD                     (_MK_MASK_CONST(0xff) << ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_SHIFT)
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_RANGE                     27:20
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_WOFFSET                   0x0
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG1_0_CSCB2Y_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_CSC_YCONFIG2_0  // ISP RGB2YUV and Color Adjust, for Y
#define ISP_ISP_CSC_YCONFIG2_0                  _MK_ADDR_CONST(0xf8)
#define ISP_ISP_CSC_YCONFIG2_0_SELWRE                   0x0
#define ISP_ISP_CSC_YCONFIG2_0_WORD_COUNT                       0x1
#define ISP_ISP_CSC_YCONFIG2_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_READ_MASK                        _MK_MASK_CONST(0x300ff)
#define ISP_ISP_CSC_YCONFIG2_0_WRITE_MASK                       _MK_MASK_CONST(0x300ff)
// Offset adjust for Y
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_FIELD                    (_MK_MASK_CONST(0xff) << ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_SHIFT)
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_RANGE                    7:0
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_WOFFSET                  0x0
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_CSCYOFF_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Signal range of YUV outputs   0 = [0,255]
//  1 = [1,254] exclude 00 and FF
//  2 = ITU601 standard
//      Y : [16,235]
//      UV: [16,240]
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_FIELD                   (_MK_MASK_CONST(0x3) << ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_SHIFT)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_RANGE                   17:16
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_WOFFSET                 0x0
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_FULL                    _MK_ENUM_CONST(0)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_NEARFULL                        _MK_ENUM_CONST(1)
#define ISP_ISP_CSC_YCONFIG2_0_YUVRANGE_ITU601                  _MK_ENUM_CONST(2)


// Register ISP_ISP_CSC_UCONFIG_0  // ISP RGB2YUV and Color Adjust, for U
#define ISP_ISP_CSC_UCONFIG_0                   _MK_ADDR_CONST(0xf9)
#define ISP_ISP_CSC_UCONFIG_0_SELWRE                    0x0
#define ISP_ISP_CSC_UCONFIG_0_WORD_COUNT                        0x1
#define ISP_ISP_CSC_UCONFIG_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_READ_MASK                         _MK_MASK_CONST(0x1ff7fdff)
#define ISP_ISP_CSC_UCONFIG_0_WRITE_MASK                        _MK_MASK_CONST(0x1ff7fdff)
// Factor for Red to U
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_UCONFIG_0_CSCR2U_SHIFT)
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_RANGE                      8:0
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_WOFFSET                    0x0
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCR2U_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Factor for Green to U
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_SHIFT                      _MK_SHIFT_CONST(10)
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_UCONFIG_0_CSCG2U_SHIFT)
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_RANGE                      18:10
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_WOFFSET                    0x0
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCG2U_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Factor for Blue to U
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_SHIFT                      _MK_SHIFT_CONST(20)
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_UCONFIG_0_CSCB2U_SHIFT)
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_RANGE                      28:20
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_WOFFSET                    0x0
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UCONFIG_0_CSCB2U_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_CSC_VCONFIG_0  // ISP RGB2YUV and Color Adjust, for V
#define ISP_ISP_CSC_VCONFIG_0                   _MK_ADDR_CONST(0xfa)
#define ISP_ISP_CSC_VCONFIG_0_SELWRE                    0x0
#define ISP_ISP_CSC_VCONFIG_0_WORD_COUNT                        0x1
#define ISP_ISP_CSC_VCONFIG_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_READ_MASK                         _MK_MASK_CONST(0x1ff7fdff)
#define ISP_ISP_CSC_VCONFIG_0_WRITE_MASK                        _MK_MASK_CONST(0x1ff7fdff)
// Factor for Red to V
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_VCONFIG_0_CSCR2V_SHIFT)
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_RANGE                      8:0
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_WOFFSET                    0x0
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCR2V_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Factor for Green to V
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_SHIFT                      _MK_SHIFT_CONST(10)
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_VCONFIG_0_CSCG2V_SHIFT)
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_RANGE                      18:10
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_WOFFSET                    0x0
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCG2V_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Factor for Blue to V
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_SHIFT                      _MK_SHIFT_CONST(20)
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_FIELD                      (_MK_MASK_CONST(0x1ff) << ISP_ISP_CSC_VCONFIG_0_CSCB2V_SHIFT)
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_RANGE                      28:20
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_WOFFSET                    0x0
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_VCONFIG_0_CSCB2V_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// U and V offset control for CSC
// Positive/negative 2's complement values are added to U and V outputs.

// Register ISP_ISP_CSC_UVOFFSETCONFIG_0  // ISP RGB2YUV and Color Adjust, for V
#define ISP_ISP_CSC_UVOFFSETCONFIG_0                    _MK_ADDR_CONST(0xfb)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_SELWRE                     0x0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_WORD_COUNT                         0x1
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_RESET_MASK                         _MK_MASK_CONST(0xff00ff)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_READ_MASK                  _MK_MASK_CONST(0xff00ff)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_WRITE_MASK                         _MK_MASK_CONST(0xff00ff)
// Offset value for U, pos/neg (DBIT).0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_SHIFT)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_RANGE                      7:0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_WOFFSET                    0x0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_UOFFSET_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Offset value for V, pos/neg (DBIT).0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_SHIFT)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_RANGE                      23:16
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_WOFFSET                    0x0
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_DEFAULT_MASK                       _MK_MASK_CONST(0xff)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_CSC_UVOFFSETCONFIG_0_VOFFSET_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Special effects
// Solarization (posterization)
// To manipulate pixel data bits individually.
// To be operated on R/G/B pixels after gamma correction.
// Number of bits per color component is ISP_GAMMA_DOBIT.
// Each bit (from LSB to MSB) is individually colwerted in four ways.
//   code    input    output
//    00       S        0      (forced to 0)
//    01       S        1      (forced to 1)
//    10       S        S      (as is)
//    11       S        !S     (ilwerted)

// Register ISP_ISP_SOLARIZE_CONTROL1_0  // ISP Solarozation Control 1 
#define ISP_ISP_SOLARIZE_CONTROL1_0                     _MK_ADDR_CONST(0xfc)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SELWRE                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_WORD_COUNT                  0x1
#define ISP_ISP_SOLARIZE_CONTROL1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_SOLARIZE_CONTROL1_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
// Red, LSB
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_RANGE                        1:0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+1
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_SHIFT                        _MK_SHIFT_CONST(2)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_RANGE                        3:2
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R1_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+2
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_SHIFT                        _MK_SHIFT_CONST(4)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_RANGE                        5:4
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R2_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+3
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_SHIFT                        _MK_SHIFT_CONST(6)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_RANGE                        7:6
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R3_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+4
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_SHIFT                        _MK_SHIFT_CONST(8)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_RANGE                        9:8
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R4_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+5
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_RANGE                        11:10
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R5_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+6
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_SHIFT                        _MK_SHIFT_CONST(12)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_RANGE                        13:12
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R6_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Red, LSB+7
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_SHIFT                        _MK_SHIFT_CONST(14)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_RANGE                        15:14
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_R7_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_SHIFT                        _MK_SHIFT_CONST(16)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_RANGE                        17:16
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+1
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_SHIFT                        _MK_SHIFT_CONST(18)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_RANGE                        19:18
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G1_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+2
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_SHIFT                        _MK_SHIFT_CONST(20)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_RANGE                        21:20
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G2_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+3
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_SHIFT                        _MK_SHIFT_CONST(22)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_RANGE                        23:22
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G3_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+4
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_SHIFT                        _MK_SHIFT_CONST(24)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_RANGE                        25:24
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G4_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+5
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_SHIFT                        _MK_SHIFT_CONST(26)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_RANGE                        27:26
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G5_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+6
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_SHIFT                        _MK_SHIFT_CONST(28)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_RANGE                        29:28
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G6_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Green, LSB+7
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_SHIFT                        _MK_SHIFT_CONST(30)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_RANGE                        31:30
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL1_0_SOL_G7_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_SOLARIZE_CONTROL2_0  // ISP Solarozation Control 2 
#define ISP_ISP_SOLARIZE_CONTROL2_0                     _MK_ADDR_CONST(0xfd)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SELWRE                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_WORD_COUNT                  0x1
#define ISP_ISP_SOLARIZE_CONTROL2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_RESET_MASK                  _MK_MASK_CONST(0x80000000)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_READ_MASK                   _MK_MASK_CONST(0x8000ffff)
#define ISP_ISP_SOLARIZE_CONTROL2_0_WRITE_MASK                  _MK_MASK_CONST(0x8000ffff)
// Blue, LSB
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_RANGE                        1:0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+1
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_SHIFT                        _MK_SHIFT_CONST(2)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_RANGE                        3:2
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B1_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+2
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_SHIFT                        _MK_SHIFT_CONST(4)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_RANGE                        5:4
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B2_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+3
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_SHIFT                        _MK_SHIFT_CONST(6)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_RANGE                        7:6
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B3_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+4
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_SHIFT                        _MK_SHIFT_CONST(8)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_RANGE                        9:8
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B4_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+5
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_SHIFT                        _MK_SHIFT_CONST(10)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_RANGE                        11:10
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B5_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+6
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_SHIFT                        _MK_SHIFT_CONST(12)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_RANGE                        13:12
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B6_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Blue, LSB+7
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_SHIFT                        _MK_SHIFT_CONST(14)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_FIELD                        (_MK_MASK_CONST(0x3) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_RANGE                        15:14
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_WOFFSET                      0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_B7_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// 1 to enable solarization
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_SHIFT                    _MK_SHIFT_CONST(31)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_SHIFT)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_RANGE                    31:31
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_WOFFSET                  0x0
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_SOLARIZE_CONTROL2_0_SOL_ENABLE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Embosss effect
//

// Register ISP_ISP_EMBOSS_CONTROL_0  // ISP Emboss effect control
#define ISP_ISP_EMBOSS_CONTROL_0                        _MK_ADDR_CONST(0xfe)
#define ISP_ISP_EMBOSS_CONTROL_0_SELWRE                         0x0
#define ISP_ISP_EMBOSS_CONTROL_0_WORD_COUNT                     0x1
#define ISP_ISP_EMBOSS_CONTROL_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_RESET_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_EMBOSS_CONTROL_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_READ_MASK                      _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_EMBOSS_CONTROL_0_WRITE_MASK                     _MK_MASK_CONST(0xffffffff)
// 1 to enable emboss effect
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_RANGE                    0:0
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_WOFFSET                  0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EMBOSS_ENABLE_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Polarity of the effect
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_SHIFT                   _MK_SHIFT_CONST(1)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_EMBOSS_CONTROL_0_EB_POS_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_RANGE                   1:1
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_WOFFSET                 0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_POS_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Edge width in [0,7]
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_SHIFT                     _MK_SHIFT_CONST(2)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_RANGE                     4:2
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_WOFFSET                   0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HP_OFFSET_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Emboss depth, U2.1 in [0.0,3.5] by 0.5 step
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_SHIFT                  _MK_SHIFT_CONST(5)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_FIELD                  (_MK_MASK_CONST(0x7) << ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_RANGE                  7:5
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_WOFFSET                        0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_GAIN_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Background gray level, U8.0 in [0, 255]
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_SHIFT                      _MK_SHIFT_CONST(8)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_RANGE                      15:8
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_WOFFSET                    0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_BG_LEVEL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Edge low-limit (coring), U8.0 in [0, 255]
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_RANGE                      23:16
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_WOFFSET                    0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_LOWLIMIT_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Edge high-limit (clipping), U8.0 in [0, 255]
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_SHIFT                     _MK_SHIFT_CONST(24)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_FIELD                     (_MK_MASK_CONST(0xff) << ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_SHIFT)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_RANGE                     31:24
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_WOFFSET                   0x0
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_EMBOSS_CONTROL_0_EB_HIGHLIMIT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Statistic gathering for Auto White Balance and Auto Exposure control
// ISP callwlates two types of statistic gathering information to assist Host/AVP in performing
// dynamic Auto White Balance (AWB) and Auto Exposure (AE):
// 1. 8-bin Histogram for each color channel in sample region is defined in M2 measuring window.
//    The histograms are stored in status registers.
//
// 2. Multi-window color average and number of saturated pixels:  MxN sets of {R, G, B, S} values;
//    where M, N is any number between 1 to 64 based on M3_H_EXT_WNUM and M3_V_EXT_WNUM registers respectively; 
//    R, G, B  are averaged pixel values callwlated within M3 measuring window; S is the number of saturated pixels 
//    within M3 measuring window based on pixel value and low/high limits in ISP_SATU_M3_CONTROL register.
//
//    Each M3 sub-window has the size of {1,2,4,8,16} x {1,2,4,8,16}.
//    The resulting M3 statistics are stored in memory at starting address defined in M3_MEM_START_ADDR.
//
//    Note about number of horiztonal M3 subwindows:
//    M3 stats data are packed into one 128-bit memory write for each four M3 subwindows in the same row.  
//    If the horizontal number of M3 subwindows is not a multiple of 4, some bits of the last 128-bit write 
//    does not have meaningful statistics for sw to use.  SW is suggested to use a multiple of 4 for the horizontal 
//    number of subwindows if possible. There is no similar suggestion for number of vertical M3 subwindows.
//
// In addition, the ISP can also callwlate one type of statistic gathering information to
// assists Host/AVP in performing Auto Focus (AF):
// 3. Multi-window edge counter:  {1, 2, 3} x {1, 2, 3} sets (sub-windows) of edge counters
//    are callwlated within M4 measuring window.
//    Each M4 sub-window has programmable width and height.
//    The resulting edge count values are stored in status registers.
// M1: Sampled average and peak values for HW white balance control

// Register ISP_ISP_H_M1_0  // ISP Horizontal M1 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_H_M1_0                  _MK_ADDR_CONST(0xff)
#define ISP_ISP_H_M1_0_SELWRE                   0x0
#define ISP_ISP_H_M1_0_WORD_COUNT                       0x1
#define ISP_ISP_H_M1_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_H_M1_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Pixel number where measuring window 1
//  starts.
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_SHIFT)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_RANGE                       13:0
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_WOFFSET                     0x0
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_START_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Number of pixels of measuring window 1
//  in a line
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_SHIFT)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_RANGE                       29:16
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_WOFFSET                     0x0
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M1_0_M1_WINDOW_LINE_WIDTH_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M1_0  // ISP Vertical M1 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_V_M1_0                  _MK_ADDR_CONST(0x100)
#define ISP_ISP_V_M1_0_SELWRE                   0x0
#define ISP_ISP_V_M1_0_WORD_COUNT                       0x1
#define ISP_ISP_V_M1_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_V_M1_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Line number where measuring window 1
//  starts
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_SHIFT)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_RANGE                      13:0
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_WOFFSET                    0x0
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of lines of measuring window 1
//  in a frame
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_SHIFT)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_RANGE                     29:16
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_WOFFSET                   0x0
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M1_0_M1_WINDOW_FRAME_HEIGHT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// Histogram in M2 window
// Extended version: 8 bins of arbitrary bin boundaries
// There are 4 histograms for R, G on G/R, G on G/B, B
// There are 8 bins for each histogram
//   [HIST_BIN_B0, HIST_BIN_B1], [HIST_BIN_B1+1, HIST_BIN_B2],
//   [HIST_BIN_B2+1, HIST_BIN_B3], [HIST_BIN_B3+1, HIST_BIN_B4],
//   [HIST_BIN_B4+1, HIST_BIN_B5], [HIST_BIN_B5+1, HIST_BIN_B6],
//   [HIST_BIN_B6+1, HIST_BIN_B7], [HIST_BIN_B7+1, HIST_BIN_B8]
// 8 bins are placed to the range [HIST_BIB_B0, HIST_BIN_B8].
// HIST_BIN_Bx, x in {1,2,3,4,5,6,7} specify bin boundaries.
// HIST_BIB_Bx < HIST_BIB_By, if x, y in {0,1,2,3,4,5,6,7,8} and x < y.  

// Register ISP_ISP_H_M2_0  // ISP Horizontal M2 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_H_M2_0                  _MK_ADDR_CONST(0x101)
#define ISP_ISP_H_M2_0_SELWRE                   0x0
#define ISP_ISP_H_M2_0_WORD_COUNT                       0x1
#define ISP_ISP_H_M2_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_H_M2_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Pixel number where measuring window 2
//  starts
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_SHIFT)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_RANGE                       13:0
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_WOFFSET                     0x0
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_START_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Number of pixels of measuring window 2
//  in a line
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_SHIFT)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_RANGE                       29:16
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_WOFFSET                     0x0
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M2_0_M2_WINDOW_LINE_WIDTH_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M2_0  // ISP Vertical M2 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_V_M2_0                  _MK_ADDR_CONST(0x102)
#define ISP_ISP_V_M2_0_SELWRE                   0x0
#define ISP_ISP_V_M2_0_WORD_COUNT                       0x1
#define ISP_ISP_V_M2_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_V_M2_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Line number where measuring window 2
//  starts
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_SHIFT)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_RANGE                      13:0
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_WOFFSET                    0x0
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of lines of measuring window 2
//  in a frame
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_SHIFT)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_RANGE                     29:16
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_WOFFSET                   0x0
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M2_0_M2_WINDOW_FRAME_HEIGHT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_M2_BIN_CONTROL_E1_0  // ISP Histogram Control
#define ISP_ISP_M2_BIN_CONTROL_E1_0                     _MK_ADDR_CONST(0x103)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_SELWRE                      0x0
#define ISP_ISP_M2_BIN_CONTROL_E1_0_WORD_COUNT                  0x1
#define ISP_ISP_M2_BIN_CONTROL_E1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_READ_MASK                   _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_WRITE_MASK                  _MK_MASK_CONST(0x3fffffff)
// lower limit of 1st bin
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_RANGE                   9:0
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B0_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 1st bin
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_SHIFT                   _MK_SHIFT_CONST(10)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_RANGE                   19:10
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B1_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 2nd bin
//    31  rw  EXT_HIST                    init=0  // 1 to enable extended 8-bin histogram
//                                                // 0 to enable 4-bin histogram
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_SHIFT                   _MK_SHIFT_CONST(20)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_RANGE                   29:20
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E1_0_HIST_BIN_B2_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_M2_BIN_CONTROL_E2_0  // ISP Histogram Control
#define ISP_ISP_M2_BIN_CONTROL_E2_0                     _MK_ADDR_CONST(0x104)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_SELWRE                      0x0
#define ISP_ISP_M2_BIN_CONTROL_E2_0_WORD_COUNT                  0x1
#define ISP_ISP_M2_BIN_CONTROL_E2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_READ_MASK                   _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_WRITE_MASK                  _MK_MASK_CONST(0x3fffffff)
// upper limit of 3rd bin
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_RANGE                   9:0
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B3_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 4th bin
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_SHIFT                   _MK_SHIFT_CONST(10)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_RANGE                   19:10
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B4_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 5th bin
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_SHIFT                   _MK_SHIFT_CONST(20)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_RANGE                   29:20
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E2_0_HIST_BIN_B5_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_ISP_M2_BIN_CONTROL_E3_0  // ISP Histogram Control
#define ISP_ISP_M2_BIN_CONTROL_E3_0                     _MK_ADDR_CONST(0x105)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_SELWRE                      0x0
#define ISP_ISP_M2_BIN_CONTROL_E3_0_WORD_COUNT                  0x1
#define ISP_ISP_M2_BIN_CONTROL_E3_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_READ_MASK                   _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_WRITE_MASK                  _MK_MASK_CONST(0x3fffffff)
// upper limit of 6th bin
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_RANGE                   9:0
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B6_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 7th bin
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_SHIFT                   _MK_SHIFT_CONST(10)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_RANGE                   19:10
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B7_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// upper limit of 8th bin
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_SHIFT                   _MK_SHIFT_CONST(20)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_SHIFT)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_RANGE                   29:20
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_WOFFSET                 0x0
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M2_BIN_CONTROL_E3_0_HIST_BIN_B8_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// M3 windows

// Register ISP_ISP_H_M3_0  // ISP Horizontal M3 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_H_M3_0                  _MK_ADDR_CONST(0x106)
#define ISP_ISP_H_M3_0_SELWRE                   0x0
#define ISP_ISP_H_M3_0_WORD_COUNT                       0x1
#define ISP_ISP_H_M3_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_H_M3_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Pixel number where measuring window 3
//  starts
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_SHIFT)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_RANGE                       13:0
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_WOFFSET                     0x0
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_START_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)

// Number of pixels of measuring window 3
//  in a line
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_SHIFT                       _MK_SHIFT_CONST(16)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_SHIFT)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_RANGE                       29:16
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_WOFFSET                     0x0
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_0_M3_WINDOW_LINE_WIDTH_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M3_0  // ISP Vertical M3 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_V_M3_0                  _MK_ADDR_CONST(0x107)
#define ISP_ISP_V_M3_0_SELWRE                   0x0
#define ISP_ISP_V_M3_0_WORD_COUNT                       0x1
#define ISP_ISP_V_M3_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_READ_MASK                        _MK_MASK_CONST(0x3fff3fff)
#define ISP_ISP_V_M3_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff3fff)
// Line number where measuring window 3
//  starts
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_SHIFT)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_RANGE                      13:0
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_WOFFSET                    0x0
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of lines of measuring window 3
//  in a frame
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_FIELD                     (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_SHIFT)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_RANGE                     29:16
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_WOFFSET                   0x0
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_0_M3_WINDOW_FRAME_HEIGHT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_H_M3_CONTROL_E1_0  // ISP Horizontal M3 window control
#define ISP_ISP_H_M3_CONTROL_E1_0                       _MK_ADDR_CONST(0x108)
#define ISP_ISP_H_M3_CONTROL_E1_0_SELWRE                        0x0
#define ISP_ISP_H_M3_CONTROL_E1_0_WORD_COUNT                    0x1
#define ISP_ISP_H_M3_CONTROL_E1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_RESET_MASK                    _MK_MASK_CONST(0x40000000)
#define ISP_ISP_H_M3_CONTROL_E1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_READ_MASK                     _MK_MASK_CONST(0x477f3fff)
#define ISP_ISP_H_M3_CONTROL_E1_0_WRITE_MASK                    _MK_MASK_CONST(0x477f3fff)
// Horizontal interval of M3 sub-windows
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_FIELD                   (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_SHIFT)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_RANGE                   13:0
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_WOFFSET                 0x0
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_INTERVAL_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Horizontal number of M3 sub-windows
//  from 1 to 64
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_FIELD                   (_MK_MASK_CONST(0x7f) << ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_SHIFT)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_RANGE                   22:16
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_WOFFSET                 0x0
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_EXT_WNUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Width of M3 sub-window (pixels of a kind)  0 =  1 (actual width of 2)
//  1 =  2 (actual width of 4)
//  2 =  4 (actual width of 8)
//  3 =  8 (actual width of 16)
//  4 = 16 (actual width of 32)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_SHIFT                      _MK_SHIFT_CONST(24)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_FIELD                      (_MK_MASK_CONST(0x7) << ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_SHIFT)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_RANGE                      26:24
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_WOFFSET                    0x0
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_HH1                        _MK_ENUM_CONST(0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_HH2                        _MK_ENUM_CONST(1)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_HH4                        _MK_ENUM_CONST(2)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_HH8                        _MK_ENUM_CONST(3)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_H_WIDTH_HH16                       _MK_ENUM_CONST(4)

// Restriction of memory write access
// 0 for anytime when stats data is ready
// 1 for write access only in H-blanking periods
//    31 rw M3_EXTENDED                   init=0  // M3 window selection mode
//                                                // 0 for fixed selection mode
//                                                // 1 for extended mode                          
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_SHIFT                      _MK_SHIFT_CONST(30)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_FIELD                      (_MK_MASK_CONST(0x1) << ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_SHIFT)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_RANGE                      30:30
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_WOFFSET                    0x0
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_DEFAULT_MASK                       _MK_MASK_CONST(0x1)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M3_CONTROL_E1_0_M3_WRITE_IN_HBLANK_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M3_CONTROL_E1_0  // ISP Vertical M3 window control
#define ISP_ISP_V_M3_CONTROL_E1_0                       _MK_ADDR_CONST(0x109)
#define ISP_ISP_V_M3_CONTROL_E1_0_SELWRE                        0x0
#define ISP_ISP_V_M3_CONTROL_E1_0_WORD_COUNT                    0x1
#define ISP_ISP_V_M3_CONTROL_E1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_READ_MASK                     _MK_MASK_CONST(0x77f3fff)
#define ISP_ISP_V_M3_CONTROL_E1_0_WRITE_MASK                    _MK_MASK_CONST(0x77f3fff)
// Vertical interval of M3 sub-windows
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_FIELD                   (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_SHIFT)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_RANGE                   13:0
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_WOFFSET                 0x0
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_INTERVAL_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Vertical number of M3 sub-windows
//  from 1 to 64
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_FIELD                   (_MK_MASK_CONST(0x7f) << ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_SHIFT)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_RANGE                   22:16
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_WOFFSET                 0x0
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_EXT_WNUM_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Height of M3 sub-window (pixels of a kind)  0 =  1 (actual height of 2)
//  1 =  2 (actual height of 4)
//  2 =  4 (actual height of 8)
//  3 =  8 (actual height of 16)
//  4 = 16 (actual height of 32)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_SHIFT                     _MK_SHIFT_CONST(24)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_SHIFT)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_RANGE                     26:24
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_WOFFSET                   0x0
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_VH1                       _MK_ENUM_CONST(0)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_VH2                       _MK_ENUM_CONST(1)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_VH4                       _MK_ENUM_CONST(2)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_VH8                       _MK_ENUM_CONST(3)
#define ISP_ISP_V_M3_CONTROL_E1_0_M3_V_HEIGHT_VH16                      _MK_ENUM_CONST(4)

// New register for M3 stats

// Register ISP_ISP_SATU_M3_CONTROL_0  // ISP  M3 control
#define ISP_ISP_SATU_M3_CONTROL_0                       _MK_ADDR_CONST(0x10a)
#define ISP_ISP_SATU_M3_CONTROL_0_SELWRE                        0x0
#define ISP_ISP_SATU_M3_CONTROL_0_WORD_COUNT                    0x1
#define ISP_ISP_SATU_M3_CONTROL_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_READ_MASK                     _MK_MASK_CONST(0x3ff03ff)
#define ISP_ISP_SATU_M3_CONTROL_0_WRITE_MASK                    _MK_MASK_CONST(0x3ff03ff)
// lower limit of input pixel value
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_FIELD                    (_MK_MASK_CONST(0x3ff) << ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_SHIFT)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_RANGE                    9:0
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_WOFFSET                  0x0
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_LOW_LIMIT_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// upper limit of input pixel value
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_SHIFT)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_RANGE                   25:16
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_WOFFSET                 0x0
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_SATU_M3_CONTROL_0_M3_HIGH_LIMIT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_M3_MEM_START_ADDR_0  // Memory definition for storing M3 statistics
#define ISP_M3_MEM_START_ADDR_0                 _MK_ADDR_CONST(0x10b)
#define ISP_M3_MEM_START_ADDR_0_SELWRE                  0x0
#define ISP_M3_MEM_START_ADDR_0_WORD_COUNT                      0x1
#define ISP_M3_MEM_START_ADDR_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_READ_MASK                       _MK_MASK_CONST(0xffffffff)
#define ISP_M3_MEM_START_ADDR_0_WRITE_MASK                      _MK_MASK_CONST(0xffffffff)
// Memory start address for storing M3
// statistics data
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_FIELD                 (_MK_MASK_CONST(0xffffffff) << ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_SHIFT)
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_RANGE                 31:0
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_WOFFSET                       0x0
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_M3_MEM_START_ADDR_0_M3_MEM_START_ADDR_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// M4: Statistics measurement window 4 for auto-focus control
// There will be {1, 2, 3, 4, 6, 9} sub-windows in {1,2,3} x {1,2,3} configurations.
// Top-left corner of the top-left sub-window is specified 
//  by {M4_WINDOW_FRAME_START, M4_WINDOW_LINE_START}.
// M4_V_WNUM and M4_H_WNUM independently specify the number of sub-windows in horizontal and
//  vertical directions. Selection is limited in {1,2,3} and value 0 in interpreted as 1.
// M4_V_INTERVAL and M4_H_INTERVAL specify vertical and horizontal intervals of sub-windows.
// M4_V_HEIGHT and M4_H_WIDTH specify the size of a sub-window.
// Constraints are:
//   M4_V_INTERVAL >= M4_V_HEIGHT
//   M4_H_INTERVAL >= M4_H_WIDTH 
//  Be sure to fit from top-left corner of the top-left sub-window to bottom-right corner of the
//  bottom-right sub window in the active image frame specified by
//  {ACTIVE_FRAME_START, ACTIVE_LINE_START} and {ACTIVE_FRAME_HEIGHT, ACTIVE_LINE_WIDTH}.

// Register ISP_ISP_H_M4_0  // ISP Horizontal M4 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_H_M4_0                  _MK_ADDR_CONST(0x10c)
#define ISP_ISP_H_M4_0_SELWRE                   0x0
#define ISP_ISP_H_M4_0_WORD_COUNT                       0x1
#define ISP_ISP_H_M4_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_READ_MASK                        _MK_MASK_CONST(0x3fff)
#define ISP_ISP_H_M4_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff)
// Pixel number where measuring window 4
//  starts
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_FIELD                       (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_SHIFT)
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_RANGE                       13:0
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_WOFFSET                     0x0
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_0_M4_WINDOW_LINE_START_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M4_0  // ISP Vertical M4 window definition
// This window must be completely within
// active window area.
#define ISP_ISP_V_M4_0                  _MK_ADDR_CONST(0x10d)
#define ISP_ISP_V_M4_0_SELWRE                   0x0
#define ISP_ISP_V_M4_0_WORD_COUNT                       0x1
#define ISP_ISP_V_M4_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_READ_MASK                        _MK_MASK_CONST(0x3fff)
#define ISP_ISP_V_M4_0_WRITE_MASK                       _MK_MASK_CONST(0x3fff)
// Line number where measuring window 4
//  starts
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_SHIFT)
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_RANGE                      13:0
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_WOFFSET                    0x0
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_0_M4_WINDOW_FRAME_START_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_ISP_H_M4_CONTROL_0  // ISP Horizontal M4 window control
#define ISP_ISP_H_M4_CONTROL_0                  _MK_ADDR_CONST(0x10e)
#define ISP_ISP_H_M4_CONTROL_0_SELWRE                   0x0
#define ISP_ISP_H_M4_CONTROL_0_WORD_COUNT                       0x1
#define ISP_ISP_H_M4_CONTROL_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_READ_MASK                        _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_H_M4_CONTROL_0_WRITE_MASK                       _MK_MASK_CONST(0x3fffffff)
// Horizontal interval of M4 sub-windows
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_SHIFT)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_RANGE                      13:0
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_WOFFSET                    0x0
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_INTERVAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Horizontal number of M4 sub-windows
//  0, 1 = 1 sub-window  per row
//  2    = 2 sub-windows per row
//  3    = 3 sub-windows per row
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_SHIFT                  _MK_SHIFT_CONST(14)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_FIELD                  (_MK_MASK_CONST(0x3) << ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_SHIFT)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_RANGE                  15:14
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_WOFFSET                        0x0
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WNUM_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Number of pixels of M4 measuring sub-window
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_FIELD                 (_MK_MASK_CONST(0x3fff) << ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_SHIFT)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_RANGE                 29:16
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_WOFFSET                       0x0
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_H_M4_CONTROL_0_M4_H_WIDTH_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_V_M4_CONTROL_0  // ISP Vertical M4 window control
#define ISP_ISP_V_M4_CONTROL_0                  _MK_ADDR_CONST(0x10f)
#define ISP_ISP_V_M4_CONTROL_0_SELWRE                   0x0
#define ISP_ISP_V_M4_CONTROL_0_WORD_COUNT                       0x1
#define ISP_ISP_V_M4_CONTROL_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_READ_MASK                        _MK_MASK_CONST(0x3fffffff)
#define ISP_ISP_V_M4_CONTROL_0_WRITE_MASK                       _MK_MASK_CONST(0x3fffffff)
// Vertical interval of M4 sub-windows
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_FIELD                      (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_SHIFT)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_RANGE                      13:0
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_WOFFSET                    0x0
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_INTERVAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Vertical number of M4 sub-windows
//  0, 1 = 1 sub-window  per column
//  2    = 2 sub-windows per column
//  3    = 3 sub-windows per column
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_SHIFT                  _MK_SHIFT_CONST(14)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_FIELD                  (_MK_MASK_CONST(0x3) << ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_SHIFT)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_RANGE                  15:14
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_WOFFSET                        0x0
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_WNUM_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Number of lines of M4 measuring sub-window
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_SHIFT                        _MK_SHIFT_CONST(16)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_FIELD                        (_MK_MASK_CONST(0x3fff) << ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_SHIFT)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_RANGE                        29:16
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_WOFFSET                      0x0
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_V_M4_CONTROL_0_M4_V_HEIGHT_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_M4_NOISE_CONTROL_0  // ISP AF measurement, noise control
#define ISP_ISP_M4_NOISE_CONTROL_0                      _MK_ADDR_CONST(0x110)
#define ISP_ISP_M4_NOISE_CONTROL_0_SELWRE                       0x0
#define ISP_ISP_M4_NOISE_CONTROL_0_WORD_COUNT                   0x1
#define ISP_ISP_M4_NOISE_CONTROL_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_READ_MASK                    _MK_MASK_CONST(0x3f)
#define ISP_ISP_M4_NOISE_CONTROL_0_WRITE_MASK                   _MK_MASK_CONST(0x3f)
// Top limiting level of noise coring for 
// auto-focus measuring signal
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_FIELD                   (_MK_MASK_CONST(0x3f) << ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_SHIFT)
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_RANGE                   5:0
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_WOFFSET                 0x0
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_M4_NOISE_CONTROL_0_AFDCORELIMIT_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Flicker-Band detection
//   Statistics data (column vector) acquisition and flicker band frequency estimation
//   Note that FB is operational only when special effects are off (emboss, negative, solarize)
// 
// FB control registers

// Register ISP_ISP_FB_STATS_CONTROL1_0  // ISP FB statistics control-1
#define ISP_ISP_FB_STATS_CONTROL1_0                     _MK_ADDR_CONST(0x111)
#define ISP_ISP_FB_STATS_CONTROL1_0_SELWRE                      0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_WORD_COUNT                  0x1
#define ISP_ISP_FB_STATS_CONTROL1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_RESET_MASK                  _MK_MASK_CONST(0x700001)
#define ISP_ISP_FB_STATS_CONTROL1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_READ_MASK                   _MK_MASK_CONST(0x7ff7fff)
#define ISP_ISP_FB_STATS_CONTROL1_0_WRITE_MASK                  _MK_MASK_CONST(0x7ff7fff)
// Continuously gather FB stats  0 = disable
//  1 = enable
//  when enabled FB_CONTROL will continuously
//  gather flicker band stats, with the frame interval 
//  specified by FB_STATS_FRAME_GAP.
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_FIELD                  (_MK_MASK_CONST(0x1) << ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_RANGE                  0:0
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_WOFFSET                        0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_DEFAULT_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_DISABLE                        _MK_ENUM_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL1_0_CONTINUOUS_DETECTION_ENABLE                 _MK_ENUM_CONST(1)

// Start scan-line for FB stats sampling; Note that
//  if FB sampling begins before Active Window starts,
//  the sampled stats will be zero, since FB stats 
//  samples the output pixel values from demosaic output
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_SHIFT                  _MK_SHIFT_CONST(1)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_FIELD                  (_MK_MASK_CONST(0x3fff) << ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_RANGE                  14:1
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_WOFFSET                        0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_START_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Vertical sampling interval (lines)
//  0 means every line is sampled, 1 means every other line,
//  and so on.
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_FIELD                      (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_RANGE                      19:16
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_WOFFSET                    0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_SAMPLE_INTERVAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of lines aclwmulated per interval 0 = 1 line
// 1 = 2 lines
// 2 = 4 lines
// 3 = 8 lines
// 4 = 16 lines
//  If number of aclwmulating lines indicated here is
//  larger than FB_STATS_SAMPLE_INTERVAL, only lines 
//  sampling interval will be aclwmulated.
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_SHIFT                     _MK_SHIFT_CONST(20)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_FIELD                     (_MK_MASK_CONST(0x7) << ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_RANGE                     22:20
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_WOFFSET                   0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_DEFAULT_MASK                      _MK_MASK_CONST(0x7)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_LINE1                     _MK_ENUM_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_LINE2                     _MK_ENUM_CONST(1)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_LINE4                     _MK_ENUM_CONST(2)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_LINE8                     _MK_ENUM_CONST(3)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_LINES_PER_SAMPLE_LINE16                    _MK_ENUM_CONST(4)

// Temporal gap between 2 frames (frames)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_SHIFT                    _MK_SHIFT_CONST(23)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_FIELD                    (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_RANGE                    26:23
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_WOFFSET                  0x0
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL1_0_FB_STATS_FRAME_GAP_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_ISP_FB_STATS_CONTROL2_0  // ISP FB statistics control-2
#define ISP_ISP_FB_STATS_CONTROL2_0                     _MK_ADDR_CONST(0x112)
#define ISP_ISP_FB_STATS_CONTROL2_0_SELWRE                      0x0
#define ISP_ISP_FB_STATS_CONTROL2_0_WORD_COUNT                  0x1
#define ISP_ISP_FB_STATS_CONTROL2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_READ_MASK                   _MK_MASK_CONST(0xbfff3fff)
#define ISP_ISP_FB_STATS_CONTROL2_0_WRITE_MASK                  _MK_MASK_CONST(0xbfff3fff)
// Starting pixel for FB stats sampling in a line
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_FIELD                   (_MK_MASK_CONST(0x3fff) << ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_RANGE                   13:0
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_WOFFSET                 0x0
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_START_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Number of sampling pixels per line
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_FIELD                   (_MK_MASK_CONST(0x3fff) << ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_RANGE                   29:16
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_WOFFSET                 0x0
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_LINE_WIDTH_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Enable normalization of line aclwmulation value;
//  if disabled the line aclwmulation value will be
//  clipped to 16-bit boundary. 
//  0    Disable
//  1    Enable
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_SHIFT                 _MK_SHIFT_CONST(31)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_RANGE                 31:31
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_WOFFSET                       0x0
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL2_0_FB_STATS_VNORM_ENABLE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_ISP_FB_STATS_CONTROL3_0  // ISP FB statistics control-3
#define ISP_ISP_FB_STATS_CONTROL3_0                     _MK_ADDR_CONST(0x113)
#define ISP_ISP_FB_STATS_CONTROL3_0_SELWRE                      0x0
#define ISP_ISP_FB_STATS_CONTROL3_0_WORD_COUNT                  0x1
#define ISP_ISP_FB_STATS_CONTROL3_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_READ_MASK                   _MK_MASK_CONST(0xff)
#define ISP_ISP_FB_STATS_CONTROL3_0_WRITE_MASK                  _MK_MASK_CONST(0xff)
// Length of a column vector minus 1. 
//  0 means the FB stats column vector has only one entry,
//  0xff means the column vector has 256 entries.
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_FIELD                        (_MK_MASK_CONST(0xff) << ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_RANGE                        7:0
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_WOFFSET                      0x0
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL3_0_FB_STATS_VECTOR_LENGTH_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_ISP_FB_STATS_CONTROL4_0  // ISP FB statistics control-4
#define ISP_ISP_FB_STATS_CONTROL4_0                     _MK_ADDR_CONST(0x114)
#define ISP_ISP_FB_STATS_CONTROL4_0_SELWRE                      0x0
#define ISP_ISP_FB_STATS_CONTROL4_0_WORD_COUNT                  0x1
#define ISP_ISP_FB_STATS_CONTROL4_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_READ_MASK                   _MK_MASK_CONST(0xffffffff)
#define ISP_ISP_FB_STATS_CONTROL4_0_WRITE_MASK                  _MK_MASK_CONST(0xffffffff)
// Memory start address for storing FB
// statistics data
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_FIELD                     (_MK_MASK_CONST(0xffffffff) << ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_RANGE                     31:0
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_WOFFSET                   0x0
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL4_0_FB_MEM_START_ADDR_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)


// Register ISP_ISP_FB_STATS_CONTROL5_0  // ISP FB statistics control-5
#define ISP_ISP_FB_STATS_CONTROL5_0                     _MK_ADDR_CONST(0x115)
#define ISP_ISP_FB_STATS_CONTROL5_0_SELWRE                      0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_WORD_COUNT                  0x1
#define ISP_ISP_FB_STATS_CONTROL5_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_READ_MASK                   _MK_MASK_CONST(0xffff0fff)
#define ISP_ISP_FB_STATS_CONTROL5_0_WRITE_MASK                  _MK_MASK_CONST(0xffff0fff)
// U0.W, Filter coefficient for column mean
//  callwlation.
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_FIELD                     (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_RANGE                     3:0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_WOFFSET                   0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_MEAN_FLTR_COEF_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// U0.W, Coefficient of column vector
//  smoothing filter.
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_SHIFT                     _MK_SHIFT_CONST(4)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_FIELD                     (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_RANGE                     7:4
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_WOFFSET                   0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_DATA_FLTR_COEF_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// U0.W, Coefficient of temporal smoothing
//  filter for FB scores.
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_SHIFT                    _MK_SHIFT_CONST(8)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_FIELD                    (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_RANGE                    11:8
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_WOFFSET                  0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_SCORE_FLTR_COEF_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Number of entries in column vector
//  that is equivalent of 60Hz.
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_SHIFT                      _MK_SHIFT_CONST(16)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_RANGE                      23:16
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_WOFFSET                    0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_60HZ_INTERVAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Number of entries in column vector
//  that is equivalent of 50Hz.
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_SHIFT                      _MK_SHIFT_CONST(24)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_FIELD                      (_MK_MASK_CONST(0xff) << ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_SHIFT)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_RANGE                      31:24
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_WOFFSET                    0x0
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_CONTROL5_0_FB_50HZ_INTERVAL_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_FB_DETECTION_SCORES_0  // ISP FB detection scores.
//  Higher score means higher possibility that
//  such flicker band appears on image
#define ISP_STATS_FB_DETECTION_SCORES_0                 _MK_ADDR_CONST(0x116)
#define ISP_STATS_FB_DETECTION_SCORES_0_SELWRE                  0x0
#define ISP_STATS_FB_DETECTION_SCORES_0_WORD_COUNT                      0x1
#define ISP_STATS_FB_DETECTION_SCORES_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_READ_MASK                       _MK_MASK_CONST(0xff00ff)
#define ISP_STATS_FB_DETECTION_SCORES_0_WRITE_MASK                      _MK_MASK_CONST(0x0)
// score for 60Hz estimation
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_SHIFT                     _MK_SHIFT_CONST(0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_FIELD                     (_MK_MASK_CONST(0xff) << ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_SHIFT)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_RANGE                     7:0
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_WOFFSET                   0x0
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_60HZ_SCORE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// score for 50Hz estimation
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_SHIFT                     _MK_SHIFT_CONST(16)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_FIELD                     (_MK_MASK_CONST(0xff) << ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_SHIFT)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_RANGE                     23:16
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_WOFFSET                   0x0
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_SW_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_STATS_FB_DETECTION_SCORES_0_FB_50HZ_SCORE_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)

// STATS command register

// Register ISP_ISP_STATS_COMMAND_0  // Statistic Gathering command
// When this command is issued it will take
//  effect in the next frame. This command
//  may be used to enable M2, M3, or M4
//  statistic gathering. If more than one type
//  of statistic gathering is enabled then
//  all the enabled statistic gathering will
//  be done in the next active window area.
//  Raise vector (if raise is enabled) and
//  interrupt (if enabled) are generated in
//  the same frame where statistic gathering
//  is performed at the point where line counter
//  reaches STATS_LINE_END. Raise vector or
//  interrupt may still be generated in similar
//  if this command is issued with none of the
//  statistic gathering is enabled.
#define ISP_ISP_STATS_COMMAND_0                 _MK_ADDR_CONST(0x117)
#define ISP_ISP_STATS_COMMAND_0_SELWRE                  0x0
#define ISP_ISP_STATS_COMMAND_0_WORD_COUNT                      0x1
#define ISP_ISP_STATS_COMMAND_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_RESET_MASK                      _MK_MASK_CONST(0x1)
#define ISP_ISP_STATS_COMMAND_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_READ_MASK                       _MK_MASK_CONST(0x3fff1fff)
#define ISP_ISP_STATS_COMMAND_0_WRITE_MASK                      _MK_MASK_CONST(0x3fff1fff)
// Statistic Gathering raise  0 = disable
//  1 = enable - raise vector will be returned
//      when vertical counter reaches
//      STATS_LINE_END in the frame where
//      statistic gathering is performed.
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_FIELD                       (_MK_MASK_CONST(0x1) << ISP_ISP_STATS_COMMAND_0_STATS_RAISE_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_RANGE                       0:0
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_WOFFSET                     0x0
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_DEFAULT_MASK                        _MK_MASK_CONST(0x1)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_DISABLE                     _MK_ENUM_CONST(0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_ENABLE                      _MK_ENUM_CONST(1)

// M2 Statistic Gathering enable  0 = disable M2 statistic gathering
//  1 = enable M2 statistic gathering
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_SHIFT                   _MK_SHIFT_CONST(1)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_RANGE                   1:1
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_WOFFSET                 0x0
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_STATS_COMMAND_0_M2_STATS_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// M3 Statistic Gathering enable  0 = disable M3 statistic gathering
//  1 = enable M3 statistic gathering
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_SHIFT                   _MK_SHIFT_CONST(2)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_RANGE                   2:2
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_WOFFSET                 0x0
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_STATS_COMMAND_0_M3_STATS_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// M4 Statistic Gathering enable  0 = disable M4 statistic gathering
//  1 = enable M4 statistic gathering
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_SHIFT                   _MK_SHIFT_CONST(3)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_RANGE                   3:3
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_WOFFSET                 0x0
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_DISABLE                 _MK_ENUM_CONST(0)
#define ISP_ISP_STATS_COMMAND_0_M4_STATS_ENABLE_ENABLE                  _MK_ENUM_CONST(1)

// Channel that issues this Raise
// This channel ID is returned when the
// programmed signal raise event oclwrred.
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_SHIFT                  _MK_SHIFT_CONST(4)
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_FIELD                  (_MK_MASK_CONST(0xf) << ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_RANGE                  7:4
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_WOFFSET                        0x0
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_CHANNEL_ID_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Statistic Gathering Raise Vector
// This raise vector is returned when
//  the last M3 measuring window after all
//  M3 statistic gathering is completed.
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_SHIFT                        _MK_SHIFT_CONST(8)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_FIELD                        (_MK_MASK_CONST(0x1f) << ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_RANGE                        12:8
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_WOFFSET                      0x0
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_RAISE_VECTOR_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Line number to return the raise vector or
//  to generate interrupt in the frame where
//  statistic gathering is performed
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_FIELD                    (_MK_MASK_CONST(0x3fff) << ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_SHIFT)
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_RANGE                    29:16
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_WOFFSET                  0x0
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_STATS_COMMAND_0_STATS_LINE_END_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// FB command register
// In AP15, no flicker band "detection", only flicker band statistic gathering

// Register ISP_ISP_FB_STATS_COMMAND_0  // FB Statistic Gathering command
// The command takes effect at the nearest vsync.
//  If CONTINUOUS_DETECTION is "enabled", 
//  the column vectors from two frames will 
//  be callwlated and stored to memory continuously with the interval
//  specified in FB_STATS_SAMPLE_INTERVAL.  When 
//  FB stat gathering command is issued, the raise 
//  vector will be returned right after the completion
//  of the nearest FB stats callwlation.  
//  If CONTINUOUS_DETECTION is off, when the FB command
//  is issued the column vectors of the two frames will 
//  still be stored to memory, but only once.  The raise will 
//  be returned when the FB stats callwlation is completed
//  (the last sampling line is FB_STATS_FRAME_START + 
//  FB_STATS_SAMPLE_INTERVAL * 2^FB_STATS_LINES_PER_SAMPLE)
#define ISP_ISP_FB_STATS_COMMAND_0                      _MK_ADDR_CONST(0x118)
#define ISP_ISP_FB_STATS_COMMAND_0_SELWRE                       0x0
#define ISP_ISP_FB_STATS_COMMAND_0_WORD_COUNT                   0x1
#define ISP_ISP_FB_STATS_COMMAND_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_RESET_MASK                   _MK_MASK_CONST(0x1)
#define ISP_ISP_FB_STATS_COMMAND_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_READ_MASK                    _MK_MASK_CONST(0x1ff1)
#define ISP_ISP_FB_STATS_COMMAND_0_WRITE_MASK                   _MK_MASK_CONST(0x1ff1)
// FB Statistic Gathering raise  0 = disable
//  1 = enable 
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_FIELD                 (_MK_MASK_CONST(0x1) << ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_SHIFT)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_RANGE                 0:0
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_WOFFSET                       0x0
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_DEFAULT_MASK                  _MK_MASK_CONST(0x1)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_DISABLE                       _MK_ENUM_CONST(0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_ENABLE                        _MK_ENUM_CONST(1)

// Channel that issues this Raise
// This channel ID is returned when the
// programmed signal raise event oclwrred.
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_SHIFT                    _MK_SHIFT_CONST(4)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_FIELD                    (_MK_MASK_CONST(0xf) << ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_SHIFT)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_RANGE                    7:4
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_WOFFSET                  0x0
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_CHANNEL_ID_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// FB Statistic Gathering Raise Vector
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_SHIFT                  _MK_SHIFT_CONST(8)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_FIELD                  (_MK_MASK_CONST(0x1f) << ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_SHIFT)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_RANGE                  12:8
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_WOFFSET                        0x0
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_ISP_FB_STATS_COMMAND_0_FB_STATS_RAISE_VECTOR_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

//  Status registers
// Operation status
//   0. Erroneous configuration for M1 windows
//   1. Erroneous configuration for M3 windows
//   2. 64x64 window samplig is done
//   3. Flicker-band stats data acquisition is done
//   4. Line buffer got read error

// Register ISP_OPERATION_STATUS_0  // Status
#define ISP_OPERATION_STATUS_0                  _MK_ADDR_CONST(0x119)
#define ISP_OPERATION_STATUS_0_SELWRE                   0x0
#define ISP_OPERATION_STATUS_0_WORD_COUNT                       0x1
#define ISP_OPERATION_STATUS_0_RESET_VAL                        _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_RESET_MASK                       _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_SW_DEFAULT_VAL                   _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_READ_MASK                        _MK_MASK_CONST(0x1f)
#define ISP_OPERATION_STATUS_0_WRITE_MASK                       _MK_MASK_CONST(0x0)
// M1 window configuration error 
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_FIELD                    (_MK_MASK_CONST(0x1) << ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_SHIFT)
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_RANGE                    0:0
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_WOFFSET                  0x0
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M1_CONFIG_ERROR_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// M3 window configuration error 
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_SHIFT                    _MK_SHIFT_CONST(1)
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_FIELD                    (_MK_MASK_CONST(0x1) << ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_SHIFT)
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_RANGE                    1:1
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_WOFFSET                  0x0
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_CONFIG_ERROR_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// M3 frame sampling is completed
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_SHIFT                   _MK_SHIFT_CONST(2)
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_FIELD                   (_MK_MASK_CONST(0x1) << ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_SHIFT)
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_RANGE                   2:2
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_WOFFSET                 0x0
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_M3_SAMPLING_DONE_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// FB stats acquisition is completed
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_SHIFT                      _MK_SHIFT_CONST(3)
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_FIELD                      (_MK_MASK_CONST(0x1) << ISP_OPERATION_STATUS_0_FB_STATS_DONE_SHIFT)
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_RANGE                      3:3
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_WOFFSET                    0x0
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_FB_STATS_DONE_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)

// Line buffer, read error
#define ISP_OPERATION_STATUS_0_READERROR_SHIFT                  _MK_SHIFT_CONST(4)
#define ISP_OPERATION_STATUS_0_READERROR_FIELD                  (_MK_MASK_CONST(0x1) << ISP_OPERATION_STATUS_0_READERROR_SHIFT)
#define ISP_OPERATION_STATUS_0_READERROR_RANGE                  4:4
#define ISP_OPERATION_STATUS_0_READERROR_WOFFSET                        0x0
#define ISP_OPERATION_STATUS_0_READERROR_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_READERROR_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_READERROR_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_OPERATION_STATUS_0_READERROR_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Statistics measured values
//   1. Peak values,  {R, B, Gr, Gb}
//   2. Sampled average values,  {R, B, Gr, Gb}
//   3. Simple histogram,  4 bins for {R, B, Gr, Gb}
//   4. Sensing signal for auto focus control in 3x3 windows
//   measurement 1 and 2 are from M1 window, they are constantly updated at 
//   frame end (VSCAN_SIZE).  Software can read the registers after frame end 
//   and use the information to perform functions like scene change detection.

// Register ISP_STATS_PEAK_VALUE1_0  // Statistics Data
#define ISP_STATS_PEAK_VALUE1_0                 _MK_ADDR_CONST(0x11a)
#define ISP_STATS_PEAK_VALUE1_0_SELWRE                  0x0
#define ISP_STATS_PEAK_VALUE1_0_WORD_COUNT                      0x1
#define ISP_STATS_PEAK_VALUE1_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_READ_MASK                       _MK_MASK_CONST(0x3ff03ff)
#define ISP_STATS_PEAK_VALUE1_0_WRITE_MASK                      _MK_MASK_CONST(0x0)
// Peak value of Red
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_FIELD                    (_MK_MASK_CONST(0x3ff) << ISP_STATS_PEAK_VALUE1_0_SPEAKR_SHIFT)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_RANGE                    9:0
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_WOFFSET                  0x0
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKR_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)

// Peak value of Blue
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_SHIFT                    _MK_SHIFT_CONST(16)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_FIELD                    (_MK_MASK_CONST(0x3ff) << ISP_STATS_PEAK_VALUE1_0_SPEAKB_SHIFT)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_RANGE                    25:16
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_WOFFSET                  0x0
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE1_0_SPEAKB_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)


// Register ISP_STATS_PEAK_VALUE2_0  // Statistics Data
#define ISP_STATS_PEAK_VALUE2_0                 _MK_ADDR_CONST(0x11b)
#define ISP_STATS_PEAK_VALUE2_0_SELWRE                  0x0
#define ISP_STATS_PEAK_VALUE2_0_WORD_COUNT                      0x1
#define ISP_STATS_PEAK_VALUE2_0_RESET_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_RESET_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_READ_MASK                       _MK_MASK_CONST(0x3ff03ff)
#define ISP_STATS_PEAK_VALUE2_0_WRITE_MASK                      _MK_MASK_CONST(0x0)
// Peak value of Green on G/R
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_SHIFT                   _MK_SHIFT_CONST(0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_STATS_PEAK_VALUE2_0_SPEAKGR_SHIFT)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_RANGE                   9:0
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_WOFFSET                 0x0
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGR_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)

// Peak value of Green on G/B
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_SHIFT                   _MK_SHIFT_CONST(16)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_FIELD                   (_MK_MASK_CONST(0x3ff) << ISP_STATS_PEAK_VALUE2_0_SPEAKGB_SHIFT)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_RANGE                   25:16
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_WOFFSET                 0x0
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_SW_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_PEAK_VALUE2_0_SPEAKGB_SW_DEFAULT_MASK                 _MK_MASK_CONST(0x0)


// Register ISP_STATS_AVERAGE_VALUE1_0  // Statistics Data
#define ISP_STATS_AVERAGE_VALUE1_0                      _MK_ADDR_CONST(0x11c)
#define ISP_STATS_AVERAGE_VALUE1_0_SELWRE                       0x0
#define ISP_STATS_AVERAGE_VALUE1_0_WORD_COUNT                   0x1
#define ISP_STATS_AVERAGE_VALUE1_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_READ_MASK                    _MK_MASK_CONST(0x3ff03ff)
#define ISP_STATS_AVERAGE_VALUE1_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Average value of Red
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_STATS_AVERAGE_VALUE1_0_SRAVE_SHIFT)
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_RANGE                  9:0
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_WOFFSET                        0x0
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SRAVE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)

// Average value of Blue
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_SHIFT                  _MK_SHIFT_CONST(16)
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_FIELD                  (_MK_MASK_CONST(0x3ff) << ISP_STATS_AVERAGE_VALUE1_0_SBAVE_SHIFT)
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_RANGE                  25:16
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_WOFFSET                        0x0
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_DEFAULT                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE1_0_SBAVE_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


// Register ISP_STATS_AVERAGE_VALUE2_0  // Statistics Data
#define ISP_STATS_AVERAGE_VALUE2_0                      _MK_ADDR_CONST(0x11d)
#define ISP_STATS_AVERAGE_VALUE2_0_SELWRE                       0x0
#define ISP_STATS_AVERAGE_VALUE2_0_WORD_COUNT                   0x1
#define ISP_STATS_AVERAGE_VALUE2_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_READ_MASK                    _MK_MASK_CONST(0x3ff03ff)
#define ISP_STATS_AVERAGE_VALUE2_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Average value of Green on G/R
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_SHIFT                 _MK_SHIFT_CONST(0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_SHIFT)
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_RANGE                 9:0
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_WOFFSET                       0x0
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGRAVE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)

// Average value of Green on G/B
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_SHIFT                 _MK_SHIFT_CONST(16)
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_FIELD                 (_MK_MASK_CONST(0x3ff) << ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_SHIFT)
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_RANGE                 25:16
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_WOFFSET                       0x0
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_SW_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AVERAGE_VALUE2_0_SGBAVE_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE1_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE1_0                     _MK_ADDR_CONST(0x11e)
#define ISP_STATS_HIST_RED_VALUE1_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE1_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE1_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE1_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #0 bin of Red
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE1_0_SHIST0R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE2_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE2_0                     _MK_ADDR_CONST(0x11f)
#define ISP_STATS_HIST_RED_VALUE2_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE2_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE2_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE2_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #1 bin of Red
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE2_0_SHIST1R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE3_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE3_0                     _MK_ADDR_CONST(0x120)
#define ISP_STATS_HIST_RED_VALUE3_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE3_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE3_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE3_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #2 bin of Red
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE3_0_SHIST2R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE4_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE4_0                     _MK_ADDR_CONST(0x121)
#define ISP_STATS_HIST_RED_VALUE4_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE4_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE4_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE4_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #3 bin of Red
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE4_0_SHIST3R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE5_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE5_0                     _MK_ADDR_CONST(0x122)
#define ISP_STATS_HIST_RED_VALUE5_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE5_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE5_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE5_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #4 bin of Red
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE5_0_SHIST4R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE6_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE6_0                     _MK_ADDR_CONST(0x123)
#define ISP_STATS_HIST_RED_VALUE6_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE6_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE6_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE6_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #5 bin of Red
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE6_0_SHIST5R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE7_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE7_0                     _MK_ADDR_CONST(0x124)
#define ISP_STATS_HIST_RED_VALUE7_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE7_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE7_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE7_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #6 bin of Red
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE7_0_SHIST6R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_RED_VALUE8_0  // Statistics Data
#define ISP_STATS_HIST_RED_VALUE8_0                     _MK_ADDR_CONST(0x125)
#define ISP_STATS_HIST_RED_VALUE8_0_SELWRE                      0x0
#define ISP_STATS_HIST_RED_VALUE8_0_WORD_COUNT                  0x1
#define ISP_STATS_HIST_RED_VALUE8_0_RESET_VAL                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_RESET_MASK                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_SW_DEFAULT_VAL                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_READ_MASK                   _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_RED_VALUE8_0_WRITE_MASK                  _MK_MASK_CONST(0x0)
// Count value of #7 bin of Red
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_SHIFT)
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_RANGE                       22:0
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_WOFFSET                     0x0
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_RED_VALUE8_0_SHIST7R_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE1_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE1_0                      _MK_ADDR_CONST(0x126)
#define ISP_STATS_HIST_GR_VALUE1_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE1_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE1_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE1_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #0 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE1_0_SHIST0GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE2_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE2_0                      _MK_ADDR_CONST(0x127)
#define ISP_STATS_HIST_GR_VALUE2_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE2_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE2_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE2_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #1 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE2_0_SHIST1GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE3_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE3_0                      _MK_ADDR_CONST(0x128)
#define ISP_STATS_HIST_GR_VALUE3_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE3_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE3_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE3_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #2 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE3_0_SHIST2GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE4_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE4_0                      _MK_ADDR_CONST(0x129)
#define ISP_STATS_HIST_GR_VALUE4_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE4_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE4_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE4_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #3 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE4_0_SHIST3GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE5_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE5_0                      _MK_ADDR_CONST(0x12a)
#define ISP_STATS_HIST_GR_VALUE5_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE5_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE5_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE5_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #4 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE5_0_SHIST4GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE6_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE6_0                      _MK_ADDR_CONST(0x12b)
#define ISP_STATS_HIST_GR_VALUE6_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE6_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE6_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE6_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #5 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE6_0_SHIST5GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE7_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE7_0                      _MK_ADDR_CONST(0x12c)
#define ISP_STATS_HIST_GR_VALUE7_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE7_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE7_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE7_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #6 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE7_0_SHIST6GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GR_VALUE8_0  // Statistics Data
#define ISP_STATS_HIST_GR_VALUE8_0                      _MK_ADDR_CONST(0x12d)
#define ISP_STATS_HIST_GR_VALUE8_0_SELWRE                       0x0
#define ISP_STATS_HIST_GR_VALUE8_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GR_VALUE8_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GR_VALUE8_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #7 bin of Green on G/R
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_SHIFT)
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_RANGE                       22:0
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_WOFFSET                     0x0
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GR_VALUE8_0_SHIST7GR_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE1_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE1_0                      _MK_ADDR_CONST(0x12e)
#define ISP_STATS_HIST_GB_VALUE1_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE1_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE1_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE1_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #0 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE1_0_SHIST0GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE2_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE2_0                      _MK_ADDR_CONST(0x12f)
#define ISP_STATS_HIST_GB_VALUE2_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE2_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE2_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE2_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #1 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE2_0_SHIST1GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE3_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE3_0                      _MK_ADDR_CONST(0x130)
#define ISP_STATS_HIST_GB_VALUE3_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE3_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE3_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE3_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #2 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE3_0_SHIST2GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE4_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE4_0                      _MK_ADDR_CONST(0x131)
#define ISP_STATS_HIST_GB_VALUE4_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE4_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE4_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE4_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #3 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE4_0_SHIST3GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE5_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE5_0                      _MK_ADDR_CONST(0x132)
#define ISP_STATS_HIST_GB_VALUE5_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE5_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE5_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE5_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #4 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE5_0_SHIST4GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE6_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE6_0                      _MK_ADDR_CONST(0x133)
#define ISP_STATS_HIST_GB_VALUE6_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE6_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE6_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE6_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #5 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE6_0_SHIST5GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE7_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE7_0                      _MK_ADDR_CONST(0x134)
#define ISP_STATS_HIST_GB_VALUE7_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE7_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE7_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE7_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #6 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE7_0_SHIST6GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_GB_VALUE8_0  // Statistics Data
#define ISP_STATS_HIST_GB_VALUE8_0                      _MK_ADDR_CONST(0x135)
#define ISP_STATS_HIST_GB_VALUE8_0_SELWRE                       0x0
#define ISP_STATS_HIST_GB_VALUE8_0_WORD_COUNT                   0x1
#define ISP_STATS_HIST_GB_VALUE8_0_RESET_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_RESET_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_SW_DEFAULT_VAL                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_READ_MASK                    _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_GB_VALUE8_0_WRITE_MASK                   _MK_MASK_CONST(0x0)
// Count value of #7 bin of Green on G/B
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_FIELD                       (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_SHIFT)
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_RANGE                       22:0
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_WOFFSET                     0x0
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_GB_VALUE8_0_SHIST7GB_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE1_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE1_0                    _MK_ADDR_CONST(0x136)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE1_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE1_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE1_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #0 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE1_0_SHIST0B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE2_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE2_0                    _MK_ADDR_CONST(0x137)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE2_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE2_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE2_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #1 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE2_0_SHIST1B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE3_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE3_0                    _MK_ADDR_CONST(0x138)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE3_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE3_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE3_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #2 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE3_0_SHIST2B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE4_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE4_0                    _MK_ADDR_CONST(0x139)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE4_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE4_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE4_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #3 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE4_0_SHIST3B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE5_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE5_0                    _MK_ADDR_CONST(0x13a)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE5_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE5_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE5_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #4 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE5_0_SHIST4B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE6_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE6_0                    _MK_ADDR_CONST(0x13b)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE6_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE6_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE6_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #5 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE6_0_SHIST5B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE7_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE7_0                    _MK_ADDR_CONST(0x13c)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE7_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE7_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE7_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #6 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE7_0_SHIST6B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_HIST_BLUE_VALUE8_0  // Statistics Data
#define ISP_STATS_HIST_BLUE_VALUE8_0                    _MK_ADDR_CONST(0x13d)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SELWRE                     0x0
#define ISP_STATS_HIST_BLUE_VALUE8_0_WORD_COUNT                         0x1
#define ISP_STATS_HIST_BLUE_VALUE8_0_RESET_VAL                  _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_RESET_MASK                         _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SW_DEFAULT_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_READ_MASK                  _MK_MASK_CONST(0x7fffff)
#define ISP_STATS_HIST_BLUE_VALUE8_0_WRITE_MASK                         _MK_MASK_CONST(0x0)
// Count value of #7 bin of BLUE
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_SHIFT                      _MK_SHIFT_CONST(0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_FIELD                      (_MK_MASK_CONST(0x7fffff) << ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_SHIFT)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_RANGE                      22:0
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_WOFFSET                    0x0
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_DEFAULT                    _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_SW_DEFAULT                 _MK_MASK_CONST(0x0)
#define ISP_STATS_HIST_BLUE_VALUE8_0_SHIST7B_SW_DEFAULT_MASK                    _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE1_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE1_0                   _MK_ADDR_CONST(0x13e)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-11
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE1_0_AF11D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE2_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE2_0                   _MK_ADDR_CONST(0x13f)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-12
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE2_0_AF12D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE3_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE3_0                   _MK_ADDR_CONST(0x140)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-13
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE3_0_AF13D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE4_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE4_0                   _MK_ADDR_CONST(0x141)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-21
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE4_0_AF21D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE5_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE5_0                   _MK_ADDR_CONST(0x142)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-22
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE5_0_AF22D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE6_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE6_0                   _MK_ADDR_CONST(0x143)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-23
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE6_0_AF23D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE7_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE7_0                   _MK_ADDR_CONST(0x144)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-31
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE7_0_AF31D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE8_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE8_0                   _MK_ADDR_CONST(0x145)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-32
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE8_0_AF32D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_VALUE9_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_VALUE9_0                   _MK_ADDR_CONST(0x146)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_SELWRE                    0x0
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_WORD_COUNT                        0x1
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_RESET_VAL                         _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_RESET_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_SW_DEFAULT_VAL                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_SW_DEFAULT_MASK                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_READ_MASK                         _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_WRITE_MASK                        _MK_MASK_CONST(0x0)
// Value from window-33
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_SHIFT                       _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_FIELD                       (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_RANGE                       31:0
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_WOFFSET                     0x0
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_SW_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_VALUE9_0_AF33D_SW_DEFAULT_MASK                     _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0                       _MK_ADDR_CONST(0x147)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-11
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0_AFLPF11D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0                       _MK_ADDR_CONST(0x148)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-12
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0_AFLPF12D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0                       _MK_ADDR_CONST(0x149)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-13
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0_AFLPF13D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0                       _MK_ADDR_CONST(0x14a)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-21
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0_AFLPF21D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0                       _MK_ADDR_CONST(0x14b)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-22
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0_AFLPF22D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0                       _MK_ADDR_CONST(0x14c)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-23
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0_AFLPF23D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0                       _MK_ADDR_CONST(0x14d)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-31
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0_AFLPF31D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0                       _MK_ADDR_CONST(0x14e)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-32
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0_AFLPF32D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0                       _MK_ADDR_CONST(0x14f)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-33
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0_AFLPF33D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0                       _MK_ADDR_CONST(0x150)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-11
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0_AFDIF11D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0                       _MK_ADDR_CONST(0x151)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-12
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0_AFDIF12D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0                       _MK_ADDR_CONST(0x152)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-13
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0_AFDIF13D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0                       _MK_ADDR_CONST(0x153)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-21
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0_AFDIF21D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0                       _MK_ADDR_CONST(0x154)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-22
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0_AFDIF22D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0                       _MK_ADDR_CONST(0x155)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-23
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0_AFDIF23D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0                       _MK_ADDR_CONST(0x156)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-31
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0_AFDIF31D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0                       _MK_ADDR_CONST(0x157)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-32
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0_AFDIF32D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)


// Register ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0  // Statistics Data
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0                       _MK_ADDR_CONST(0x158)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_SELWRE                        0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_WORD_COUNT                    0x1
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_RESET_VAL                     _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_RESET_MASK                    _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_SW_DEFAULT_VAL                        _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_SW_DEFAULT_MASK                       _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_READ_MASK                     _MK_MASK_CONST(0xffffffff)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_WRITE_MASK                    _MK_MASK_CONST(0x0)
// Value from window-33
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_SHIFT                        _MK_SHIFT_CONST(0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_FIELD                        (_MK_MASK_CONST(0xffffffff) << ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_SHIFT)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_RANGE                        31:0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_WOFFSET                      0x0
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_DEFAULT                      _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_DEFAULT_MASK                 _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_SW_DEFAULT                   _MK_MASK_CONST(0x0)
#define ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0_AFDIF33D_SW_DEFAULT_MASK                      _MK_MASK_CONST(0x0)

// Legacy: May be removed
//reg ISP_M2_BIN_CONTROL                  incr1   // ISP White Balance, Control
//    (ISP_PIXEL_DIBIT-1):0   rw  HIST_BIN_L1     // upper limit of 1st bin
//    (ISP_PIXEL_DIBIT+9):10  rw  HIST_BIN_L2     // upper limit of 2nd bin
//    (ISP_PIXEL_DIBIT+19):20 rw  HIST_BIN_L3     // upper limit of 3rd bin
//;
//reg ISP_H_M3_CONTROL                    incr1   // ISP Horizontal M3 window control
//    15:14 rw  M3_H_WNUM                         // Number of M3 sub-windows in horizontal
//                                                // direction
//        enum ( HW16, HW32, HW64 )               //  0 = 16 sub-windows per row
//                                                //  1 = 32 sub-windows per row
//                                                //  2 = 64 sub-windows per row
//                                                // The vertical interval between vertically
//                                                //  adjacent windows are callwlated by dividing
//                                                //  M3_WINDOW_LINE_WIDTH by NHWINNUM and
//                                                //  rounded down to the nearest integer.
//;
// Pre-arranged selections
//reg ISP_V_M3_CONTROL                    incr1   // ISP Vertical M3 window control
//    15:14 rw  M3_V_WNUM                         // Number of M3 sub-windows in vertical
//                                                // direction
//        enum ( VW16, VW32, VW64 )               //  0 = 16 sub-windows
//                                                //  1 = 32 sub-windows
//                                                //  2 = 64 sub-windows
//                                                // The vertical interval between vertically
//                                                //  adjacent windows are callwlated by dividing
//                                                //  M3_WINDOW_FRAME_HEIGHT by LWWINNUM and
//                                                //  rounded down to the nearest integer.
//;
// Memory Client Interface Async Fifo Optimization Register
// Memory Client Interface Fifo Control Register.
// The registers below allow to optimize the synchronization timing in
// the memory client asynchronous fifos. When they can be used depend on
// the client and memory controller clock ratio.
// Additionally, the RDMC_RDFAST/RDCL_RDFAST fields can increase power
// consumption if the asynchronous fifo is implemented as a real ram.
// There is no power impact on latch-based fifos. Flipflop-based fifos
// do not use these fields.
// See recommended settings below.
//
// !! IMPORTANT !!
// The register fields can only be changed when the memory client async
// fifos are empty.
//
// The register field ending with WRCL_MCLE2X (if any) can be set to improve
// async fifo synchronization on the write side by one client clock cycle if
// the memory controller clock frequency is less or equal to twice the client
// clock frequency:
//
//      mcclk_freq <= 2 * clientclk_freq
//
// The register field ending with WRMC_CLLE2X (if any) can be set to improve
// async fifo synchronization on the write side by one memory controller clock
// cycle if the client clock frequency is less or equal to twice the memory
// controller clock frequency:
//
//      clientclk_freq <= 2 * mcclk_freq
//
// The register field ending with RDMC_RDFAST (if any) can be set to improve async
// fifo synchronization on the read side by one memory controller clock cycle.
//
// !! WARNING !!
// RDMC_RDFAST can be used along with WRCL_MCLE2X only when:
//
//       mcclk_freq <= clientclk_freq
//
// The register field ending with RDCL_RDFAST (if any) can be set to improve async
// fifo synchronization on the read side by one client clock cycle.
//
// !! WARNING !!
// RDCL_RDFAST can be used along with WRMC_CLLE2X only when:
//
//       clientclk_freq <= mcclk_freq
//
// RECOMMENDED SETTINGS
// # Client writing to fifo, memory controller reading from fifo
// - mcclk_freq <= clientclk_freq
//     You can enable both RDMC_RDFAST and WRCL_CLLE2X. If one of the fifos is
//     a real ram and power is a concern, you should avoid enabling RDMC_RDFAST.
// - clientclk_freq < mcclk_freq <= 2 * clientclk_freq
//     You can enable RDMC_RDFAST or WRCL_MCLE2X, but because the client clock
//     is slower, you should enable only WRCL_MCLE2X.
// - 2 * clientclk_freq < mcclk_freq
//     You can only enable RDMC_RDFAST. If one of the fifos is a real ram and
//     power is a concern, you should avoid enabling RDMC_RDFAST.
//
// # Memory controller writing to fifo, client reading from fifo
// - clientclk_freq <= mcclk_freq
//     You can enable both RDCL_RDFAST and WRMC_CLLE2X. If one of the fifos is
//     a real ram and power is a concern, you should avoid enabling RDCL_RDFAST.
// - mcclk_freq < clientclk_freq <= 2 * mcclk_freq
//     You can enable RDCL_RDFAST or WRMC_CLLE2X, but because the memory controller
//     clock is slower, you should enable only WRMC_CLLE2X.
// - 2 * mcclk_freq < clientclk_freq
//     You can only enable RDCL_RDFAST. If one of the fifos is a real ram and
//     power is a concern, you should avoid enabling RDCL_RDFAST.
//

// Register ISP_ISP_MCCIF_FIFOCTRL_0  
#define ISP_ISP_MCCIF_FIFOCTRL_0                        _MK_ADDR_CONST(0x159)
#define ISP_ISP_MCCIF_FIFOCTRL_0_SELWRE                         0x0
#define ISP_ISP_MCCIF_FIFOCTRL_0_WORD_COUNT                     0x1
#define ISP_ISP_MCCIF_FIFOCTRL_0_RESET_VAL                      _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_RESET_MASK                     _MK_MASK_CONST(0x3)
#define ISP_ISP_MCCIF_FIFOCTRL_0_SW_DEFAULT_VAL                         _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_READ_MASK                      _MK_MASK_CONST(0x3)
#define ISP_ISP_MCCIF_FIFOCTRL_0_WRITE_MASK                     _MK_MASK_CONST(0x3)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_SHIFT                    _MK_SHIFT_CONST(0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_SHIFT)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_RANGE                    0:0
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_WOFFSET                  0x0
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_INIT_ENUM                        DISABLE
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_DISABLE                  _MK_ENUM_CONST(0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_WRCL_MCLE2X_ENABLE                   _MK_ENUM_CONST(1)

#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_SHIFT                    _MK_SHIFT_CONST(1)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_FIELD                    (_MK_MASK_CONST(0x1) << ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_SHIFT)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_RANGE                    1:1
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_WOFFSET                  0x0
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_DEFAULT                  _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_DEFAULT_MASK                     _MK_MASK_CONST(0x1)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_SW_DEFAULT                       _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_SW_DEFAULT_MASK                  _MK_MASK_CONST(0x0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_INIT_ENUM                        DISABLE
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_DISABLE                  _MK_ENUM_CONST(0)
#define ISP_ISP_MCCIF_FIFOCTRL_0_ISP_MCCIF_RDMC_RDFAST_ENABLE                   _MK_ENUM_CONST(1)

// Write Coalescing Time-Out Register
// This register exists only for write clients. Reset value defaults to 
// to 50 for most clients, but may be different for certain clients.
// Write coalescing happens inside the memory client.
// Coalescing means two (LW_MC_MW/2)-bit requests are grouped together in one LW_MC_MW-bit request.
// The register value indicates how many cycles a first write request is going to wait
// for a subsequent one for possible coalescing. The coalescing can only happen
// if the request addresses are compatible. A value of zero means that coalescing is off
// and requests are sent right away to the memory controller.
// Write coalescing can have a very significant impact performance when accessing the internal memory,
// because its memory word is LW_MC_WM-bit wide. Grouping two half-word accesses is
// much more efficient, because the two accesses would actually have taken three cycles,
// due to a stall when accessing the same memory bank. It also reduces the number of
// accessing (one instead of two), freeing up internal memory bandwidth for other accesses.
// The impact on external memory accesses is not as significant as the burst access is for
// LW_MC_MW/2 bits. But a coalesced write guarantees two conselwtive same page accesses
// which is good for external memory bandwidth utilization.
// The write coalescing time-out should be programmed depending on the client behavior.
// The first write is obviously delayed by an amount of client cycles equal to the time-out value.
// Note that writes tagged by the client (i.e. the client expects a write response, usually
// for coherency), and the last write of a block transfer are not delayed.
// They only have a one-cycle opportunity to get coalesced.
//

// Register ISP_TIMEOUT_WCOAL_ISP_0  
#define ISP_TIMEOUT_WCOAL_ISP_0                 _MK_ADDR_CONST(0x15a)
#define ISP_TIMEOUT_WCOAL_ISP_0_SELWRE                  0x0
#define ISP_TIMEOUT_WCOAL_ISP_0_WORD_COUNT                      0x1
#define ISP_TIMEOUT_WCOAL_ISP_0_RESET_VAL                       _MK_MASK_CONST(0x32)
#define ISP_TIMEOUT_WCOAL_ISP_0_RESET_MASK                      _MK_MASK_CONST(0xff)
#define ISP_TIMEOUT_WCOAL_ISP_0_SW_DEFAULT_VAL                  _MK_MASK_CONST(0x0)
#define ISP_TIMEOUT_WCOAL_ISP_0_SW_DEFAULT_MASK                         _MK_MASK_CONST(0x0)
#define ISP_TIMEOUT_WCOAL_ISP_0_READ_MASK                       _MK_MASK_CONST(0xff)
#define ISP_TIMEOUT_WCOAL_ISP_0_WRITE_MASK                      _MK_MASK_CONST(0xff)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_SHIFT                  _MK_SHIFT_CONST(0)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_FIELD                  (_MK_MASK_CONST(0xff) << ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_SHIFT)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_RANGE                  7:0
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_WOFFSET                        0x0
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_DEFAULT                        _MK_MASK_CONST(0x32)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_DEFAULT_MASK                   _MK_MASK_CONST(0xff)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_SW_DEFAULT                     _MK_MASK_CONST(0x0)
#define ISP_TIMEOUT_WCOAL_ISP_0_ISPW_WCOAL_TMVAL_SW_DEFAULT_MASK                        _MK_MASK_CONST(0x0)


//
// REGISTER LIST
//
#define LIST_ARISP_REGS(_op_) \
_op_(ISP_INCR_SYNCPT_0) \
_op_(ISP_INCR_SYNCPT_CNTRL_0) \
_op_(ISP_INCR_SYNCPT_ERROR_0) \
_op_(ISP_CONT_SYNCPT_FB_STATS_0) \
_op_(ISP_CTXSW_0) \
_op_(ISP_ISP_INT_STATUS_0) \
_op_(ISP_ISP_INT_MASK_0) \
_op_(ISP_ISP_INT_ENABLE_0) \
_op_(ISP_ISP_SIGNAL_RAISE_0) \
_op_(ISP_ISP_HP_THRESHOLD_0) \
_op_(ISP_ISP_CONTROL1_0) \
_op_(ISP_ISP_CONTROL2_0) \
_op_(ISP_ISP_COMMAND_0) \
_op_(ISP_ISP_SCAN_FRAME_0) \
_op_(ISP_ISP_TG_CONTROL_0) \
_op_(ISP_ISP_H_ACTIVE_0) \
_op_(ISP_ISP_V_ACTIVE_0) \
_op_(ISP_ISP_H_OUTPUT_0) \
_op_(ISP_ISP_V_OUTPUT_0) \
_op_(ISP_ISP_STALL_CONTROL_0) \
_op_(ISP_ISP_OB_FCN_CONTROL1_0) \
_op_(ISP_ISP_OB_FCN_CONTROL2_0) \
_op_(ISP_ISP_OB_FCN_CONTROL3_0) \
_op_(ISP_ISP_OB_FCN_CONTROL4_0) \
_op_(ISP_ISP_OB_TOP_0) \
_op_(ISP_ISP_OB_BOTTOM_0) \
_op_(ISP_ISP_OB_LEFT_0) \
_op_(ISP_ISP_OB_RIGHT_0) \
_op_(ISP_ISP_COMMON_GAIN_CONTROL_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR1A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR1B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR2A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR2B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR3A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR3B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR4A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR4B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR5A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR5B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR6A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR6B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR7A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR7B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR8A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR8B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR9A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR9B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR10A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR10B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR11A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR11B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR12A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR12B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR13A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR13B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR14A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR14B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR15A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR15B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR16A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GR16B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB1A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB1B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB2A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB2B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB3A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB3B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB4A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB4B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB5A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB5B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB6A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB6B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB7A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB7B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB8A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB8B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB9A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB9B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB10A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB10B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB11A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB11B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB12A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB12B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB13A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB13B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB14A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB14B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB15A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB15B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB16A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_GB16B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R1A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R1B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R2A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R2B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R3A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R3B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R4A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R4B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R5A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R5B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R6A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R6B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R7A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R7B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R8A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R8B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R9A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R9B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R10A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R10B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R11A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R11B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R12A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R12B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R13A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R13B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R14A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R14B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R15A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R15B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R16A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_R16B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B1A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B1B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B2A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B2B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B3A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B3B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B4A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B4B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B5A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B5B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B6A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B6B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B7A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B7B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B8A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B8B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B9A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B9B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B10A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B10B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B11A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B11B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B12A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B12B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B13A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B13B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B14A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B14B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B15A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B15B_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B16A_0) \
_op_(ISP_ISP_DEKNEE_CONFIG_B16B_0) \
_op_(ISP_ISP_LS_LPATCH_WIDTH_0) \
_op_(ISP_ISP_LS_CPATCH_WIDTH_0) \
_op_(ISP_ISP_LS_TPATCH_HEIGHT_0) \
_op_(ISP_ISP_LS_MPATCH_HEIGHT_0) \
_op_(ISP_ISP_LS_LPATCH_DELTAU_MSB_0) \
_op_(ISP_ISP_LS_LPATCH_DELTAU_LSB_0) \
_op_(ISP_ISP_LS_CPATCH_DELTAU_MSB_0) \
_op_(ISP_ISP_LS_CPATCH_DELTAU_LSB_0) \
_op_(ISP_ISP_LS_RPATCH_DELTAU_MSB_0) \
_op_(ISP_ISP_LS_RPATCH_DELTAU_LSB_0) \
_op_(ISP_ISP_LS_TPATCH_DELTAV_MSB_0) \
_op_(ISP_ISP_LS_TPATCH_DELTAV_LSB_0) \
_op_(ISP_ISP_LS_MPATCH_DELTAV_MSB_0) \
_op_(ISP_ISP_LS_MPATCH_DELTAV_LSB_0) \
_op_(ISP_ISP_LS_BPATCH_DELTAV_MSB_0) \
_op_(ISP_ISP_LS_BPATCH_DELTAV_LSB_0) \
_op_(ISP_ISP_LS_CTRL_PT_OFFSET_0) \
_op_(ISP_ISP_LS_CTRL_PT_DATA_0) \
_op_(ISP_ISP_LS_CTRL_PT_BUFFER_0) \
_op_(ISP_ISP_WBALANCE_PROG1_0) \
_op_(ISP_ISP_WBALANCE_PROG2_0) \
_op_(ISP_ISP_WBALANCE_CONTROL1_0) \
_op_(ISP_ISP_WBALANCE_CONTROL2_0) \
_op_(ISP_ISP_WBALANCE_CONTROL3_0) \
_op_(ISP_ISP_WBALANCE_CONTROL4_0) \
_op_(ISP_ISP_WBALANCE_CONTROL5_0) \
_op_(ISP_ISP_WBALANCE_CONTROL6_0) \
_op_(ISP_ISP_ENHANCE_CONFIG1_0) \
_op_(ISP_ISP_ENHANCE_CONFIG2_0) \
_op_(ISP_ISP_ENHANCE_CONFIG3_0) \
_op_(ISP_ISP_DM_FORMULA_G11_0) \
_op_(ISP_ISP_DM_FORMULA_G12_0) \
_op_(ISP_ISP_DM_FORMULA_G21_0) \
_op_(ISP_ISP_DM_FORMULA_G22_0) \
_op_(ISP_ISP_DM_FORMULA_C11_0) \
_op_(ISP_ISP_DM_FORMULA_C12_0) \
_op_(ISP_ISP_DM_FORMULA_C21_0) \
_op_(ISP_ISP_DM_FORMULA_C22_0) \
_op_(ISP_ISP_DM_FORMULA_C31_0) \
_op_(ISP_ISP_DM_FORMULA_C32_0) \
_op_(ISP_ISP_DM_FORMULA_C41_0) \
_op_(ISP_ISP_DM_FORMULA_C42_0) \
_op_(ISP_ISP_CAR_CONTROL1_0) \
_op_(ISP_ISP_CAR_CONTROL2_0) \
_op_(ISP_ISP_DS_VERTICAL_0) \
_op_(ISP_ISP_DS_HORIZONTAL_0) \
_op_(ISP_ISP_DS_DEST_SIZE_0) \
_op_(ISP_ISP_COLORCORRECT_RCONFIG1_0) \
_op_(ISP_ISP_COLORCORRECT_RCONFIG2_0) \
_op_(ISP_ISP_COLORCORRECT_GCONFIG1_0) \
_op_(ISP_ISP_COLORCORRECT_GCONFIG2_0) \
_op_(ISP_ISP_COLORCORRECT_BCONFIG1_0) \
_op_(ISP_ISP_COLORCORRECT_BCONFIG2_0) \
_op_(ISP_ISP_GAMMA_CONFIG1_0) \
_op_(ISP_ISP_GAMMA_CONFIG2_0) \
_op_(ISP_ISP_GAMMA_CONFIG3_0) \
_op_(ISP_ISP_GAMMA_CONFIG4_0) \
_op_(ISP_ISP_GAMMA_CONFIG5_0) \
_op_(ISP_ISP_GAMMA_CONFIG6_0) \
_op_(ISP_ISP_GAMMA_CONFIG7_0) \
_op_(ISP_ISP_GAMMA_CONFIG8_0) \
_op_(ISP_ISP_GAMMA_CONFIG9_0) \
_op_(ISP_ISP_GAMMA_CONFIG10_0) \
_op_(ISP_ISP_GAMMA_CONFIG11_0) \
_op_(ISP_ISP_GAMMA_CONFIG12_0) \
_op_(ISP_ISP_GAMMA_CONFIG13_0) \
_op_(ISP_ISP_GAMMA_CONFIG14_0) \
_op_(ISP_ISP_GAMMA_CONFIG15_0) \
_op_(ISP_ISP_GAMMA_CONFIG16_0) \
_op_(ISP_ISP_GAMMA_CONFIG17_0) \
_op_(ISP_ISP_GAMMA_CONFIG18_0) \
_op_(ISP_ISP_GAMMA_CONFIG19_0) \
_op_(ISP_ISP_GAMMA_CONFIG20_0) \
_op_(ISP_ISP_GAMMA_CONFIG21_0) \
_op_(ISP_ISP_GAMMA_CONFIG22_0) \
_op_(ISP_ISP_GAMMA_CONFIG23_0) \
_op_(ISP_ISP_GAMMA_CONFIG24_0) \
_op_(ISP_ISP_GAMMA_CONFIG25_0) \
_op_(ISP_ISP_GAMMA_CONFIG26_0) \
_op_(ISP_ISP_GAMMA_CONFIG27_0) \
_op_(ISP_ISP_GAMMA_CONFIG28_0) \
_op_(ISP_ISP_GAMMA_CONFIG29_0) \
_op_(ISP_ISP_GAMMA_CONFIG30_0) \
_op_(ISP_ISP_GAMMA_CONFIG31_0) \
_op_(ISP_ISP_GAMMA_CONFIG32_0) \
_op_(ISP_ISP_CSC_YCONFIG1_0) \
_op_(ISP_ISP_CSC_YCONFIG2_0) \
_op_(ISP_ISP_CSC_UCONFIG_0) \
_op_(ISP_ISP_CSC_VCONFIG_0) \
_op_(ISP_ISP_CSC_UVOFFSETCONFIG_0) \
_op_(ISP_ISP_SOLARIZE_CONTROL1_0) \
_op_(ISP_ISP_SOLARIZE_CONTROL2_0) \
_op_(ISP_ISP_EMBOSS_CONTROL_0) \
_op_(ISP_ISP_H_M1_0) \
_op_(ISP_ISP_V_M1_0) \
_op_(ISP_ISP_H_M2_0) \
_op_(ISP_ISP_V_M2_0) \
_op_(ISP_ISP_M2_BIN_CONTROL_E1_0) \
_op_(ISP_ISP_M2_BIN_CONTROL_E2_0) \
_op_(ISP_ISP_M2_BIN_CONTROL_E3_0) \
_op_(ISP_ISP_H_M3_0) \
_op_(ISP_ISP_V_M3_0) \
_op_(ISP_ISP_H_M3_CONTROL_E1_0) \
_op_(ISP_ISP_V_M3_CONTROL_E1_0) \
_op_(ISP_ISP_SATU_M3_CONTROL_0) \
_op_(ISP_M3_MEM_START_ADDR_0) \
_op_(ISP_ISP_H_M4_0) \
_op_(ISP_ISP_V_M4_0) \
_op_(ISP_ISP_H_M4_CONTROL_0) \
_op_(ISP_ISP_V_M4_CONTROL_0) \
_op_(ISP_ISP_M4_NOISE_CONTROL_0) \
_op_(ISP_ISP_FB_STATS_CONTROL1_0) \
_op_(ISP_ISP_FB_STATS_CONTROL2_0) \
_op_(ISP_ISP_FB_STATS_CONTROL3_0) \
_op_(ISP_ISP_FB_STATS_CONTROL4_0) \
_op_(ISP_ISP_FB_STATS_CONTROL5_0) \
_op_(ISP_STATS_FB_DETECTION_SCORES_0) \
_op_(ISP_ISP_STATS_COMMAND_0) \
_op_(ISP_ISP_FB_STATS_COMMAND_0) \
_op_(ISP_OPERATION_STATUS_0) \
_op_(ISP_STATS_PEAK_VALUE1_0) \
_op_(ISP_STATS_PEAK_VALUE2_0) \
_op_(ISP_STATS_AVERAGE_VALUE1_0) \
_op_(ISP_STATS_AVERAGE_VALUE2_0) \
_op_(ISP_STATS_HIST_RED_VALUE1_0) \
_op_(ISP_STATS_HIST_RED_VALUE2_0) \
_op_(ISP_STATS_HIST_RED_VALUE3_0) \
_op_(ISP_STATS_HIST_RED_VALUE4_0) \
_op_(ISP_STATS_HIST_RED_VALUE5_0) \
_op_(ISP_STATS_HIST_RED_VALUE6_0) \
_op_(ISP_STATS_HIST_RED_VALUE7_0) \
_op_(ISP_STATS_HIST_RED_VALUE8_0) \
_op_(ISP_STATS_HIST_GR_VALUE1_0) \
_op_(ISP_STATS_HIST_GR_VALUE2_0) \
_op_(ISP_STATS_HIST_GR_VALUE3_0) \
_op_(ISP_STATS_HIST_GR_VALUE4_0) \
_op_(ISP_STATS_HIST_GR_VALUE5_0) \
_op_(ISP_STATS_HIST_GR_VALUE6_0) \
_op_(ISP_STATS_HIST_GR_VALUE7_0) \
_op_(ISP_STATS_HIST_GR_VALUE8_0) \
_op_(ISP_STATS_HIST_GB_VALUE1_0) \
_op_(ISP_STATS_HIST_GB_VALUE2_0) \
_op_(ISP_STATS_HIST_GB_VALUE3_0) \
_op_(ISP_STATS_HIST_GB_VALUE4_0) \
_op_(ISP_STATS_HIST_GB_VALUE5_0) \
_op_(ISP_STATS_HIST_GB_VALUE6_0) \
_op_(ISP_STATS_HIST_GB_VALUE7_0) \
_op_(ISP_STATS_HIST_GB_VALUE8_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE1_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE2_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE3_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE4_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE5_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE6_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE7_0) \
_op_(ISP_STATS_HIST_BLUE_VALUE8_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE1_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE2_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE3_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE4_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE5_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE6_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE7_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE8_0) \
_op_(ISP_STATS_AUTO_FOLWS_VALUE9_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE1_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE2_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE3_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE4_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE5_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE6_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE7_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE8_0) \
_op_(ISP_STATS_AUTO_FOLWS_LPF_VALUE9_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE1_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE2_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE3_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE4_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE5_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE6_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE7_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE8_0) \
_op_(ISP_STATS_AUTO_FOLWS_DIF_VALUE9_0) \
_op_(ISP_ISP_MCCIF_FIFOCTRL_0) \
_op_(ISP_TIMEOUT_WCOAL_ISP_0)


//
// ADDRESS SPACES
//

#define BASE_ADDRESS_ISP        0x00000000

//
// ARISP REGISTER BANKS
//

#define ISP0_FIRST_REG 0x0000 // ISP_INCR_SYNCPT_0
#define ISP0_LAST_REG 0x0002 // ISP_INCR_SYNCPT_ERROR_0
#define ISP1_FIRST_REG 0x0008 // ISP_CONT_SYNCPT_FB_STATS_0
#define ISP1_LAST_REG 0x015a // ISP_TIMEOUT_WCOAL_ISP_0

#ifndef _MK_SHIFT_CONST
  #define _MK_SHIFT_CONST(_constant_) _constant_
#endif
#ifndef _MK_MASK_CONST
  #define _MK_MASK_CONST(_constant_) _constant_
#endif
#ifndef _MK_ENUM_CONST
  #define _MK_ENUM_CONST(_constant_) (_constant_ ## UL)
#endif
#ifndef _MK_ADDR_CONST
  #define _MK_ADDR_CONST(_constant_) _constant_
#endif

#endif // ifndef ___ARISP_H_INC_
