// Copyright (c) Microsoft Corporation.  All Rights Reserved

import "dxgi1_3.idl";

cpp_quote("#include <winapifamily.h>")

#pragma region App Family
cpp_quote("#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)")

//+-----------------------------------------------------------------------------
//
//  Return flags from CheckColorSpaceSupport
//
//------------------------------------------------------------------------------
typedef enum DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG
{
    DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_PRESENT         = 0x00000001,
    DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG_OVERLAY_PRESENT = 0x00000002
} DXGI_SWAP_CHAIN_COLOR_SPACE_SUPPORT_FLAG;

//--------------------------------------------------------------------------------------------------------
// IDXGISwapChain3 interface
//--------------------------------------------------------------------------------------------------------
[
    object,
    uuid( 94d99bdb-f1f8-4ab0-b236-7da0170edab1 ),
    local,
    pointer_default(unique)
]
interface IDXGISwapChain3 :
    IDXGISwapChain2
{
    UINT GetLwrrentBackBufferIndex();
    HRESULT CheckColorSpaceSupport( [in, annotation("_In_")] DXGI_COLOR_SPACE_TYPE ColorSpace, [out, annotation("_Out_")] UINT* pColorSpaceSupport );
    HRESULT SetColorSpace1( [in, annotation("_In_")] DXGI_COLOR_SPACE_TYPE ColorSpace );
};

//+-----------------------------------------------------------------------------
//
//  Return flags from CheckOverlayColorSpaceSupport
//
//------------------------------------------------------------------------------
typedef enum DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG
{
    DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG_PRESENT = 0x00000001,
} DXGI_OVERLAY_COLOR_SPACE_SUPPORT_FLAG;

//--------------------------------------------------------------------------------------------------------
// IDXGIOutput4 interface
//--------------------------------------------------------------------------------------------------------
[
    object,
    uuid(dc7dca35-2196-414d-9F53-617884032a60),
    local,
    pointer_default(unique)
]
interface IDXGIOutput4 :
    IDXGIOutput3
{
    HRESULT CheckOverlayColorSpaceSupport( [in, annotation("_In_")] DXGI_FORMAT Format, [in, annotation("_In_")] DXGI_COLOR_SPACE_TYPE ColorSpace, [in, annotation("_In_")] IUnknown *pConcernedDevice, [out, annotation("_Out_")] UINT *pFlags );
};

cpp_quote("#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP) */")
#pragma endregion

cpp_quote( "DEFINE_GUID(IID_IDXGISwapChain3,0x94d99bdb,0xf1f8,0x4ab0,0xb2,0x36,0x7d,0xa0,0x17,0x0e,0xda,0xb1);" )
cpp_quote( "DEFINE_GUID(IID_IDXGIOutput4,0xdc7dca35,0x2196,0x414d,0x9F,0x53,0x61,0x78,0x84,0x03,0x2a,0x60);" )
