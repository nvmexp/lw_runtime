Intro
=====

The scripts in this directory are used to fuzz the mle program.

Fuzzing is the process of generating random input to attempt to find bugs
in the program, such as crashes, bad memory accesses, trigger assertions, etc.
Fuzzers typically instrument the program being fuzzed and use different
heuristics to generate new inputs intelligently in order to increase
branch coverage in the program.

A corpus is a set of tests, which are either used as an input to a fuzzer
or which were generated by a fuzzer.

Current coverage
================

At the moment, command line arguments are not being fuzzed, only MLE file
inputs.

libfuzzer
=========

libfuzzer is a fuzzer available in clang on Linux.  You will need to run this
on a Linux system where a recent version of clang is installed.

To fuzz with libfuzzer, run this:

    ./run

This will perform the following steps:

1) Generate a few sample inputs in corpus_gen dir.
2) Compile mle.c with libfuzzer using clang.
3) Run the fuzzer using all CPU cores.

You will need to stop the fuzzer manually with Ctrl-C.  Give it some time
to run (e.g. hours).  I recommend using something with 16 cores and SSD,
such as the dgxstation-mods system.

If it does not find any issues and you terminate it, you can reduce the
test set (in the generated corpus directory) by running:

    ./merge

If it crashes, it means it found a bug.  You'll have to debug and fix.

BTW. you can use a different clang version like this:

    CC=clang-9 ./run

AFL
===

American Fuzzy Lop is another fuzzer (look it up on Google).

You will need to download it and install it (compile).  It is highly
recommended to use clang!

After you've compiled it, you can run it like so, this will do
the fuzzing from scratch:

    AFL=path/to/afl/dir ./afl

It will probably fail the first time, you will need to check the log and
follow its guidance.  Typically it tells you to reconfigure the system
to improve the capacity for fuzzing.

Like with libfuzzer, you will have to interrupt it with Ctrl-C when you
think you've had enough.

AFL provides a tool afl-whatsup which you can run to check the current
status of fuzzing.

It is advisable to feed the corups from AFL to libfuzzer and vice versa.
The afl script automatically picks up corpus from libfuzzer if you ran
libfuzzer first and generated a corpus.

You can do it with the following sequence of commands:

    ./run
    AFL=../afldir ./afl
    ./run corpus_afl
    ./merge
