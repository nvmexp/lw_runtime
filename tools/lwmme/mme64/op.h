#include <string>

namespace MME64Op {
enum OpEnum {
    ADD,
    ADDC,
    SUB,
    SUBB,
    MUL,
    MULH,
    MULU,
    EXTENDED,
    CLZ,
    SLL,
    SRL,
    SRA,
    AND,
    NAND,
    OR,
    XOR,
    MERGE,
    SLT,
    SLTU,
    SLE,
    SLEU,
    SEQ,
    STATE,
    LOOP,
    JAL,
    BLT,
    BLTU,
    BLE,
    BLEU,
    BEQ,
    DREAD,
    DWRITE,
};

    enum { count = 32 };
    enum { bits = 5 };

static const struct { std::string name; OpEnum val;} mapping[] = {
    {"ADD", ADD },
    {"ADDC", ADDC },
    {"SUB", SUB },
    {"SUBB", SUBB },
    {"MUL", MUL },
    {"MULH", MULH },
    {"MULU", MULU },
    {"EXTENDED", EXTENDED },
    {"CLZ", CLZ },
    {"SLL", SLL },
    {"SRL", SRL },
    {"SRA", SRA },
    {"AND", AND },
    {"NAND", NAND },
    {"OR", OR },
    {"XOR", XOR },
    {"MERGE", MERGE },
    {"SLT", SLT },
    {"SLTU", SLTU },
    {"SLE", SLE },
    {"SLEU", SLEU },
    {"SEQ", SEQ },
    {"STATE", STATE },
    {"LOOP", LOOP },
    {"JAL", JAL },
    {"BLT", BLT },
    {"BLTU", BLTU },
    {"BLE", BLE },
    {"BLEU", BLEU },
    {"BEQ", BEQ },
    {"DREAD", DREAD },
    {"DWRITE", DWRITE },
};
};
