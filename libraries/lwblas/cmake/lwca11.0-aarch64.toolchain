set(CMAKE_SYSTEM_NAME Linux )
set(CMAKE_SYSTEM_PROCESSOR aarch64 )

#set(CMAKE_SYSROOT /usr/aarch64-linux-gnu)

set(CMAKE_C_COMPILER /usr/bin/aarch64-linux-gnu-gcc-8 )
set(CMAKE_CXX_COMPILER /usr/bin/aarch64-linux-gnu-g++-8 )
set(CMAKE_LWDA_COMPILER /usr/local/lwca-11.0.167-28365790/bin/lwcc )
set(CMAKE_ASM_COMPILER /usr/bin/aarch64-linux-gnu-gcc-8 )
set(CMAKE_LINKER /usr/bin/aarch64-linux-gnu-gcc-8 )
set(CMAKE_AR /usr/bin/aarch64-linux-gnu-ar CACHE FILEPATH "Archiver" )
set(CMAKE_STRIP /usr/bin/aarch64-linux-gnu-strip CACHE FILEPATH "Strip Utility")

set(CMAKE_C_COMPILER_TARGET aarch64)
set(CMAKE_CXX_COMPILER_TARGET aarch64)

set(LWDA_LWCC_EXELWTABLE /usr/local/lwca-11.0.167-28365790/bin/lwcc)
set(LWDA_INCLUDE_DIRS /externals/lwca-11.0.167-28365790-aarch64/include)
set(LWDA_LWDART_LIBRARY /externals/lwca-11.0.167-28365790-aarch64/lib64)
set(LWDA_TOOLKIT_ROOT_DIR /externals/lwca-11.0.167-28365790-aarch64)

set(CMAKE_FIND_ROOT_PATH /externals/lwca-11.0.167-28365790-aarch64)

# Don't search for programs in the host environment
set (CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# Search for the libraries and headers in the target environment
set (CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set (CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set (CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

set(CMAKE_LWDA_HOST_COMPILER ${CMAKE_CXX_COMPILER} CACHE STRING "" FORCE)
set(CMAKE_LWDA_COMPILER_FORCED TRUE)

# Set arch name for packaging purposes
set(SYS_ARCH "sbsa")
set(LWDA_VERSION_STRING 11.0)

# TODO For some reason, setting CMAKE_LWDA_HOST_COMPILER disables
# -std=c++11 on lwcc, make sure it is set
set(CMAKE_LWDA_FLAGS "${CMAKE_LWDA_FLAGS} -std=c++11")

# TODO Need to specify target crt to linker. Lwrrently there is no way of
# passing linker flags without using general LWCA flags
set(CMAKE_LWDA_FLAGS "${CMAKE_LWDA_FLAGS} -I${LWDA_INCLUDE_DIRS}")

# TODO Need to specify lwca libraries to target linker.
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -L${LWDA_TOOLKIT_ROOT_DIR}/lib64 -L${LWDA_TOOLKIT_ROOT_DIR}/lib64/stubs")

# Set arch flag
set(LWTENSOR_LWDA_CXX_FLAGS "-march=armv8-a")
