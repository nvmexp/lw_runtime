#ifdef LWTENSOR_ENABLE_LWTE

#include <lwtensor/internal/tensorContractionLwte.h>
#include <lwte/arch.h>

#include <lwtensor/internal/defines.h>
namespace LWTENSOR_NAMESPACE
{

using dummy = float; // unsed for LwTe
using Traits = ContractionTraits<float, float, float, float, float, float, dummy, dummy, 70, 70, 72>;
const CandidateContainerTyped<
                   Traits, ContractionDescriptorInternal, CandidateInfoLwte, HeuristicLwte
                   ,ContractionLwte<Traits, 1, 1, 1, lwte::Shape<lwte::Int<128>>, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<16>>, true, lwte::arch::Sm70>
                   ,ContractionLwte<Traits, 1, 1, 1, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<16>>, true, lwte::arch::Sm70>
                   ,ContractionLwte<Traits, 1, 1, 1, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<16>>, false, lwte::arch::Sm70>
                   ,ContractionLwte<Traits, 1, 1, 1, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<64>>, lwte::Shape<lwte::Int<8>, lwte::Int<2>>, false, lwte::arch::Sm70>
                         > candidatesLwte_sm70_ssss;

const CandidateContainer<ContractionDescriptorInternal>* getContractionContainer_lwte_sm70_ssss()
{
    return &candidatesLwte_sm70_ssss;
}

} // end LWTENSOR_NAMESPACE

#endif
