// This file is automatically generated.
// Original pth file is /home/ajedrych/dnn_data/models/tc_131_ddds_small4_soft-angora/250.pth.

#include "lwtensor/internal/dnnContractionWeights.h"

namespace LWTENSOR_NAMESPACE
{

template<>
struct DnnShape<LWDA_R_64F, LWDA_R_64F, LWDA_R_64F, LWDA_R_32F>
{
    static const int kSize0 = 24;
    static const int kSize1 = 16;
    static const int kSize2 = 8;
    static const int kSize3 = 4;
    static const int kSize4 = 1;
};
using DnnShapeDDDS = DnnShape<LWDA_R_64F, LWDA_R_64F, LWDA_R_64F, LWDA_R_32F>;
const static std::array<float, DnnShapeDDDS::kSize0 * DnnShapeDDDS::kSize1> weights1_DDDS =
{
    0.081541784,0.12029195,0.04277182,0.08892271,0.26517686,-0.031202063,-0.112221465,-0.7705604,-0.042376067,-0.20392674,0.2714793,0.17873855,-0.036956925,0.022900164,0.21311097,-0.15057859,
    0.0407152,0.1584294,-0.22628665,-0.012246358,0.19286901,0.06716065,-0.12753981,-0.12777145,0.12896839,-0.5026971,0.397464,0.09983804,-0.16082418,0.23556286,-0.041349858,-0.080796696,
    0.055932064,-0.11115698,-0.052743867,0.006907746,-0.09825224,-0.08187756,-0.115746394,0.04476454,0.05526815,0.037793677,0.08125987,0.14553666,0.030264288,0.20394917,0.20551164,0.04504266,
    0.070096396,-0.049880862,-0.06512193,0.016261058,0.19738723,0.4266672,0.17148133,0.35898077,-0.35265467,-0.25465494,0.30196005,0.24020295,-0.22019675,0.37223092,-0.10486118,0.5732603,
    0.010517656,0.03847636,0.14521593,0.2839954,0.1475561,0.015387593,-0.008291627,0.14062338,0.006522331,-0.20236585,0.12770969,0.08426198,-0.0658493,-0.019263005,-0.011775018,0.11064787,
    -4.390857,-0.2565569,0.09110854,-0.5593485,-0.25190145,-0.6512572,-0.12397084,0.14656076,0.025105719,0.728299,0.09688639,0.5497769,1.0044715,-0.06817006,-0.28541374,0.34295216,
    -0.01835542,-0.32480207,0.28988516,0.030093916,-0.09984062,-0.0005396055,-0.253935,0.015375546,-0.6093913,0.33706623,0.06596084,-0.21697472,-0.05583149,-0.097749144,0.25199637,0.09301379,
    -0.0032726554,0.14510117,-0.004794766,0.04555682,0.20091398,-0.055335917,0.090540305,0.15276794,-0.05278731,0.20769559,-0.095296405,-0.08495997,0.027063344,-0.04688013,-0.06231236,-0.08437641,
    -0.02885257,-0.15229209,0.037973616,-0.1738809,-0.259194,-0.029050536,-0.0446965,0.048456185,0.052496396,-0.43534687,-0.02760461,-0.07349457,0.12759009,0.2764949,-0.21357238,-0.013275161,
    0.024788614,-0.08678235,-0.01428769,0.10037486,-0.06736133,-0.30761808,0.29647523,-0.006259549,-0.098333195,0.13055623,0.043388776,0.0057808287,-0.06213502,0.005749842,0.30313542,-0.0075162565,
    0.025362283,-0.29954657,-0.2076839,0.17497179,0.046279483,-0.27685392,0.10369151,0.13736741,0.001046467,-0.46988788,-0.078709684,-0.050825834,-0.04986122,-0.02442933,0.10599096,-0.091596805,
    -0.072055355,-0.1431986,-0.014944882,0.1313403,-0.12423611,-0.12945822,-0.06551483,-0.03222604,-0.15110034,-0.110860206,0.05013613,-0.304327,-0.07326758,-0.088408716,0.22468035,0.12554884,
    -0.1630457,-0.22632557,0.06744419,0.032497503,-0.041127443,-0.26887724,0.27559257,-0.17744294,0.063040525,-0.25774857,0.11716798,0.1473672,0.034052987,0.10341966,0.08989137,-0.21133482,
    -0.25896302,0.19772387,0.10394312,0.055360112,-0.06069999,-0.026272027,-0.1684535,-0.061824117,0.18584415,-0.159113,-0.13286047,-0.21002391,0.09302773,0.16798629,0.23993035,-0.052492704,
    -0.029672634,-0.092524745,-0.36503845,-0.21796952,0.3044768,0.015830195,-0.18241504,0.32198897,-0.9843845,-0.53532267,0.09814145,0.23880726,-0.26864547,0.5132846,-0.23440917,0.16474384,
    0.0726709,-0.029169222,0.059717868,-0.17737629,0.210048,-0.22835961,-0.015553266,0.069128454,0.26951364,-0.087823085,-0.08056676,0.04934657,-0.022738026,0.06305138,0.31023312,-0.05305017,
    -0.20061004,0.06855674,0.41639906,0.106699824,-0.4836714,0.085447475,0.18761538,-0.061504256,0.13299136,0.099479206,-0.6053108,-0.19855385,-0.12559444,-0.084866315,0.33545545,-0.11789316,
    0.1397873,-0.09407173,0.017173005,-0.017986069,0.1362119,-0.08945306,0.07181843,0.06234955,0.1287497,0.16883488,0.13358137,-0.100711875,-0.07321075,-0.09004171,0.07577781,0.16853128,
    -0.09543352,-0.023195287,0.021120261,0.1317766,0.23610123,-0.14975816,-0.112217374,-0.036108978,0.006489518,-0.09624358,-0.032096155,-0.13416342,0.009016261,-0.08356729,0.06475495,0.17888278,
    -0.09812794,-0.28593573,-0.14310454,0.0626913,-0.15279546,0.04489498,-0.19788896,-0.1313066,-0.17942253,-0.5851113,-0.09102441,0.2812735,0.14084908,-0.0028544168,0.23057558,0.3290985,
    0.043065693,-0.09616084,0.20461877,0.3656588,-0.15358461,0.1298516,0.07645742,-0.18812256,0.088638954,0.0027939319,-0.08156247,0.04337194,0.19859962,0.20146486,0.005033997,0.21694238,
    0.13842656,-0.053897657,0.27398545,0.29585716,-0.09357077,0.06612832,0.11104099,0.09069782,0.016417824,-0.23305124,0.15339233,0.1794743,0.092105344,0.12740345,0.17392786,-0.016828474,
    -0.042008787,0.12878968,-0.15730289,-0.20202887,0.029781936,0.19379823,-0.09272848,0.16207011,-0.0014342648,-0.086512946,0.108098775,-0.06843071,-0.16733846,-0.1410975,-0.14257479,0.08981505,
    -0.007440736,0.053473704,-0.14827657,0.12492682,0.011713873,-0.006176642,0.0584667,-0.010122654,0.004677128,0.34602472,0.014811207,0.035123017,-0.04709081,-0.10956568,0.020467672,0.080395386,
};
const static std::array<float, DnnShapeDDDS::kSize1 * DnnShapeDDDS::kSize2> weights2_DDDS =
{
    0.4719192,1.0176536,0.53076607,-0.70260066,-0.81473404,-0.78013915,-0.9918531,-0.6134201,
    0.26027524,-0.21111536,0.009588291,-0.6355593,0.442739,-0.6237304,0.11347705,-0.06734522,
    0.23526856,0.052237973,-0.4124058,0.31129897,-0.18869746,0.10022543,0.13790974,0.1130015,
    0.21087784,0.38634178,0.006220624,0.2067594,-0.7068122,0.35384884,0.12391875,0.11827344,
    -0.35318848,0.15565434,0.20961855,-0.041011117,-0.28821656,0.008025223,-0.35188344,-0.3367669,
    0.25211978,-0.69198734,-0.13701485,0.119004324,0.6376001,-1.0427257,0.8173725,0.4707399,
    0.19438802,-0.2616106,-0.13122702,0.16854993,0.14064397,0.4466825,0.2686156,0.08255635,
    0.37983736,-0.28980362,-0.44823545,0.4774656,0.37572974,0.60911393,0.56797105,0.5021098,
    0.46438247,-0.39465573,-0.8916738,0.44189158,0.44059858,0.50570786,0.55416405,0.27838904,
    0.41581666,-0.42925128,-0.5302657,0.14306918,0.14387988,-0.23519664,-0.16460338,-0.056136407,
    0.04843695,0.24601042,0.032289788,-0.38543737,0.034542285,-0.234681,-0.055883117,0.0967224,
    -0.13487816,0.060142007,0.27579486,-0.203288,-0.2816702,-0.14882769,-0.090658665,-0.33867332,
    0.2100202,0.2572918,0.2153575,-0.6442745,-0.5168023,0.19412157,-0.24742334,-0.6106648,
    -0.17809358,0.18502674,0.21536323,-0.066095494,-0.01444215,-0.27502868,0.11800801,-0.17452124,
    -0.24625435,-0.022898862,-0.16673468,0.1275841,-0.59270185,0.45707104,-0.18499766,0.2262895,
    -0.13818407,0.3048745,-0.07002882,-0.24026254,0.09015405,-0.052259002,0.29531425,-0.2200347,
};
const static std::array<float, DnnShapeDDDS::kSize2 * DnnShapeDDDS::kSize3> weights3_DDDS =
{
    0.587789,0.7329477,1.001626,-0.8320353,
    0.35164404,0.86054033,0.36440992,-0.33080703,
    0.32227436,0.19498006,0.54147017,-0.5768061,
    -0.19936667,-0.24473226,-0.31241056,0.43666473,
    -0.7150759,-0.6498063,-0.6210985,-0.2589759,
    0.14509146,0.41232455,-0.013931027,0.6609911,
    -0.5694944,-0.8158739,-0.28750572,0.0814124,
    -0.47992307,-0.6450176,-0.30882332,0.25705615,
};
const static std::array<float, DnnShapeDDDS::kSize3 * DnnShapeDDDS::kSize4> weights4_DDDS =
{
    -0.78283566,
    -0.95797896,
    -0.608952,
    1.0199372,
};
const static std::array<float, DnnShapeDDDS::kSize1> bias1_DDDS =
{
    0.03645199,0.25539052,0.18385673,0.34642562,-0.17422314,0.034442883,0.13185583,-0.068654485,-0.052039016,-0.20329362,-0.12103864,0.14716263,0.26291865,-0.025405435,-0.043722734,0.19320671,
};
const static std::array<float, DnnShapeDDDS::kSize2> bias2_DDDS =
{
    0.17085701,0.09736712,0.19607353,0.23767109,-0.5523123,0.04051023,-0.15548824,-0.045786206,
};
const static std::array<float, DnnShapeDDDS::kSize3> bias3_DDDS =
{
    1.5385044,1.377109,1.5837816,0.22641906,
};
const static std::array<float, DnnShapeDDDS::kSize4> bias4_DDDS =
{
    -1.3833158,
};
class ContractionWeightsDDDS : public ContractionWeights<DnnShapeDDDS>
{
public:
    ContractionWeightsDDDS()
        : ContractionWeights<DnnShapeDDDS>(
                  weights1_DDDS, weights2_DDDS, weights3_DDDS, weights4_DDDS,
                  bias1_DDDS, bias2_DDDS, bias3_DDDS, bias4_DDDS
        ) {}
};

} // namespace LWTENSOR_NAMESPACE
