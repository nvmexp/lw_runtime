// This file is automatically generated.
// Original pth file is /home/ajedrych/dnn_data/models/tc_benchmark_131_dddd_small4_honored-hummingbird/1000.pth.

#include "lwtensor/internal/dnnContractionWeights.h"

namespace LWTENSOR_NAMESPACE
{

template<>
struct DnnShape<LWDA_R_64F, LWDA_R_64F, LWDA_R_64F, LWDA_R_64F>
{
    static const int kSize0 = 24;
    static const int kSize1 = 16;
    static const int kSize2 = 8;
    static const int kSize3 = 4;
    static const int kSize4 = 1;
};
using DnnShapeDDDD = DnnShape<LWDA_R_64F, LWDA_R_64F, LWDA_R_64F, LWDA_R_64F>;
const static std::array<float, DnnShapeDDDD::kSize0 * DnnShapeDDDD::kSize1> weights1_DDDD =
{
    0.2779715,-0.005807092,-0.20457828,0.17614567,0.12582175,0.08771723,-0.19109899,0.10798458,0.11374731,0.009598102,-0.03637909,0.33249554,0.07289255,0.09249699,-0.076527014,-0.07155787,
    0.18288882,-0.03981276,-0.032030784,0.045959305,0.1306969,0.033836305,-0.54569525,-0.12037049,-0.10276751,-0.055432484,0.3848533,-0.1575511,0.06693754,0.08921544,0.014277267,-0.24553914,
    -0.013553586,0.053391524,0.105522074,0.0052199126,-0.03595161,-0.053542074,0.051834654,0.11998334,-0.012006793,0.011724798,-0.023452735,0.0018390509,0.09703286,0.22243246,0.08277895,-0.06518124,
    0.17017686,-0.3722412,0.48800385,0.75584644,0.31856275,-0.031302225,0.52892286,-0.06932023,-0.015207822,-0.34964052,0.36576906,0.13662638,-0.00068989064,0.31034148,-0.04483194,-0.17189167,
    0.14541982,-0.011968954,0.04519012,0.292892,0.15219866,0.0141280405,0.29312527,0.04509432,-0.018544756,-0.04429427,0.023646334,-0.035517454,-0.040670317,-0.055614144,0.0034332324,0.20508417,
    -0.1819069,1.1497011,0.53381634,-0.34453246,-0.2751795,-0.7648495,-0.27418688,-0.3527083,0.051017404,-0.022478389,-1.0853959,0.119675376,0.095215864,0.725645,-0.20213485,-0.08938551,
    0.043526165,-0.22520508,0.0697574,-0.17399952,-0.04244975,0.045027114,-0.50170153,-0.01416946,-0.009590497,0.012838422,0.035774074,0.09078435,-0.01928349,-0.050281744,0.31326276,0.005876378,
    0.016968787,0.140135,0.030666167,0.016253147,0.04855515,0.03763378,0.6546904,0.067129515,0.0045876494,0.001496651,-0.052347265,0.037644353,0.0045172656,0.2198892,0.15486744,0.03220542,
    -0.16703825,-0.048683576,0.16682981,-0.039721414,-0.2869844,-0.0045392406,-0.0058164042,0.0036279233,-0.079990126,-0.0058240984,0.04130116,-0.069119036,0.18036303,0.14961429,-0.20533325,0.059916932,
    0.1590009,0.27836248,-0.17719138,0.13196103,-0.1811523,-0.17747395,0.0064026206,-0.005108277,0.2359722,0.04680845,0.05646775,0.1275074,0.027937965,0.2420189,0.10467859,0.25022712,
    -0.12175186,-0.15235104,-0.13451998,0.2513619,-0.039759625,-0.03408847,-0.015532298,0.28542984,-0.022318225,0.20023513,-0.26208106,-0.21883333,0.00088785,-0.27724123,0.23510149,-0.33661774,
    0.055471607,-0.14848843,-0.41629502,-0.22325228,-0.21256636,0.07321664,-0.8307031,0.21990018,0.28365207,-0.07585697,0.030509122,-0.40078244,-0.18136986,-0.12644182,0.34617716,-0.03667846,
    -0.2081124,0.07149317,0.026999224,0.08866666,-0.13822193,-0.16983056,-0.028853236,-0.025629189,-0.120164014,0.09937453,-0.13341576,0.26324,-0.018613959,0.13468,-0.059779037,-0.21377087,
    -0.2931162,0.14579228,0.008773998,-0.052830864,-0.29930162,-0.068353124,-0.36295736,-0.07000872,0.08147171,0.08420933,-0.02494421,-0.0826113,0.024720259,0.22765185,0.022930464,-0.074963056,
    -0.08414469,0.091083944,-0.12091345,-0.033590905,-0.08359502,0.14612244,-0.043153945,0.14576764,-0.073375486,0.0022327686,-0.12118731,-0.02322148,-0.10603372,0.11997416,-0.07155827,-0.1972026,
    0.025647702,0.07778746,-0.28157172,-0.12308504,0.13240474,-0.037216812,-0.5118941,0.4021703,0.5075044,0.11070749,-0.007711809,-0.17499208,-0.06634086,-0.0725792,0.36019534,-0.23355287,
    -0.05504777,-0.07661755,0.04912642,0.043636,0.1534648,-0.057657916,-0.011638282,0.027318336,0.0029390533,0.21023127,-0.37271118,-0.05615282,0.06430443,0.2838561,-0.04219268,-0.11279034,
    0.11591192,-0.07882989,0.14498629,-0.10563941,0.09763575,-0.037005782,0.13738692,0.020605983,0.08231232,0.374403,-0.0029769493,-0.18497254,-0.0034649419,0.054538127,0.042998523,0.3335424,
    -0.10733634,0.0600228,0.01194626,0.08168242,0.06865933,0.029637232,-0.31161815,0.10038239,0.2091339,0.25141013,-0.136155,-0.30963513,0.083207585,-0.14911687,0.11014552,0.16021511,
    -0.0023980867,-0.09622927,-0.24452385,0.29774356,0.16654576,0.013179265,-0.3309892,0.3081663,-0.28023824,-0.3476965,0.08901754,0.29483256,-0.055865835,-0.092041604,0.057680286,0.44452503,
    0.12093285,-0.35090026,-0.07398893,0.15844795,0.019697215,0.09158502,-0.18578319,-0.0832838,-0.01937322,-0.05748089,-0.24581651,-0.12829162,0.12233604,0.1357565,0.08802763,-0.022248369,
    0.051518854,-0.0059997058,0.07106177,0.123416655,-0.017083876,0.035394557,0.12216774,0.052987974,-0.13060308,-0.041727234,-0.06277522,0.1948527,0.033833988,0.16310643,0.13775587,-0.05134814,
    0.04579572,0.002989532,-0.018444963,0.011046993,0.004850214,0.46157044,-0.36807543,0.13445517,0.002672254,0.007002862,0.05258461,-0.017509358,-0.25491884,-0.09386989,-0.19331898,-0.005402238,
    0.250271,0.14009416,-0.022859963,-0.056725115,0.026994932,-0.4473962,0.06698214,0.011349309,-0.0021549629,0.009184836,-0.009998131,0.0058154925,-0.33970568,0.14887817,-0.109490745,0.27602783,
};
const static std::array<float, DnnShapeDDDD::kSize1 * DnnShapeDDDD::kSize2> weights2_DDDD =
{
    0.16594808,-0.06381982,0.22252864,-0.12112908,0.15280893,-0.41969052,-0.32932165,-0.14078502,
    0.5322223,0.08166608,-0.08719304,0.16674124,0.9202583,0.23055679,-0.25214925,-0.08020218,
    -0.51263666,-0.26327595,-0.48010984,-0.043914054,-0.61458516,0.2620494,0.09043402,0.045673724,
    0.35066417,0.6145835,-0.04871621,-0.04267561,-0.96340346,0.19499695,0.1597563,0.098918095,
    0.19959292,0.1275991,-0.2636144,-0.23791124,-0.16804448,0.11391627,-0.1745689,-0.10139475,
    -0.5096853,-0.5107606,-0.9986122,0.23421068,0.2456857,0.010273429,-0.07772289,-0.09116962,
    -0.3465845,0.12554967,-0.036463145,-0.9078531,-1.497252,0.15795153,0.4893811,0.9098843,
    0.20682755,0.088958226,-0.15540263,0.4035191,0.29727453,0.19714682,0.23665786,0.18379207,
    -0.24285635,-0.31722748,-0.608681,0.26141575,1.4948264,0.42086613,0.54958105,1.2667813,
    0.08693144,-0.016973404,0.07248757,-0.2631983,-1.4922093,-1.1171687,-0.089547,-0.37299782,
    -0.25944802,-0.47009125,1.1154746,-1.546999,2.3449578,-1.884734,1.4232817,-0.9422599,
    -0.13231112,-0.09268549,0.37981835,-0.2344346,-0.9795318,0.10385091,0.12657245,-0.550392,
    0.26566586,0.08464384,-0.3616826,-0.19361024,-0.8529003,-0.18660808,-0.08787527,-0.29298204,
    -0.00039758315,0.02975518,0.34667322,-0.18359962,0.035138424,-0.33583468,0.07917335,-0.02997438,
    -0.30235952,-0.26115108,-0.14467354,0.17645782,-0.24185704,0.19116183,-0.092397586,0.22241442,
    -0.16273375,0.072124824,0.027082102,-0.04163112,-0.4691943,0.33035296,0.29067922,-0.050907254,
};
const static std::array<float, DnnShapeDDDD::kSize2 * DnnShapeDDDD::kSize3> weights3_DDDD =
{
    0.25329253,0.3736497,0.7365261,-0.61138844,
    0.41942522,0.92305595,0.45613146,-0.12032235,
    -0.44334498,-0.54495525,-0.2671975,0.12782203,
    -0.31424788,-0.34186593,-0.441031,0.42433184,
    -0.8910924,-0.815493,-0.81830686,-1.0410184,
    -0.7239815,-0.43110007,-0.9021335,0.37008783,
    -1.2384268,-1.4670297,-0.98480684,-0.19377907,
    -0.7780077,-0.9251029,-0.61098444,0.48021376,
};
const static std::array<float, DnnShapeDDDD::kSize3 * DnnShapeDDDD::kSize4> weights4_DDDD =
{
    -0.9720145,
    -1.0322534,
    -0.75149286,
    1.1349207,
};
const static std::array<float, DnnShapeDDDD::kSize1> bias1_DDDD =
{
    0.054421674,0.39470264,0.040510803,0.17735285,-0.19841278,0.061089214,-0.13272743,-0.09628035,-0.116703674,0.053325623,-0.45929047,0.22127987,0.22498268,-0.02989833,-0.049962368,0.09831997,
};
const static std::array<float, DnnShapeDDDD::kSize2> bias2_DDDD =
{
    0.015944725,0.07030401,0.23063059,0.17296948,-0.71872354,-0.089877784,-0.37247756,-0.0039448813,
};
const static std::array<float, DnnShapeDDDD::kSize3> bias3_DDDD =
{
    0.43472356,0.30876777,0.48637134,0.4706311,
};
const static std::array<float, DnnShapeDDDD::kSize4> bias4_DDDD =
{
    -0.2861879,
};
class ContractionWeightsDDDD : public ContractionWeights<DnnShapeDDDD>
{
public:
    ContractionWeightsDDDD()
        : ContractionWeights<DnnShapeDDDD>(
                  weights1_DDDD, weights2_DDDD, weights3_DDDD, weights4_DDDD,
                  bias1_DDDD, bias2_DDDD, bias3_DDDD, bias4_DDDD
        ) {}
};

} // namespace LWTENSOR_NAMESPACE
