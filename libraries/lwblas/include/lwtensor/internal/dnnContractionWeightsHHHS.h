// This file is automatically generated.
// Original pth file is /home/ajedrych/dnn_data/models/tc_benchmark_131_hhhs_tc_small4_loose-dragon/230.pth.

#include "lwtensor/internal/dnnContractionWeights.h"

namespace LWTENSOR_NAMESPACE
{

template<>
struct DnnShape<LWDA_R_16F, LWDA_R_16F, LWDA_R_16F, LWDA_R_32F>
{
    static const int kSize0 = 24;
    static const int kSize1 = 16;
    static const int kSize2 = 8;
    static const int kSize3 = 4;
    static const int kSize4 = 1;
};
using DnnShapeHHHS = DnnShape<LWDA_R_16F, LWDA_R_16F, LWDA_R_16F, LWDA_R_32F>;
const static std::array<float, DnnShapeHHHS::kSize0 * DnnShapeHHHS::kSize1> weights1_HHHS =
{
    -0.23418748,0.009874545,0.11131379,0.25844917,-0.071918465,0.15480885,0.09640945,-0.3472712,-0.25613895,-0.6513677,0.18120578,0.001781116,-0.034547172,0.23093575,0.14949639,-0.026385134,
    0.07263449,0.09649047,0.06926391,0.34056866,-0.058201157,0.15962598,-0.027293144,0.046155427,-0.3899357,-0.61391604,0.15066877,-0.001338356,-0.030590167,-0.025138503,0.006022751,0.05714519,
    -0.24002035,0.23277783,0.27965966,0.1061055,0.034672365,-0.15531586,0.054216985,-0.09415702,-0.18097855,0.30539978,-0.2690464,-0.050301053,-0.29544303,0.18739066,0.0134086,-0.37087294,
    -0.26369008,0.013717252,0.19603041,0.21854223,-0.17387384,-0.13092078,0.097102,-0.0086327,-0.056889255,0.06604485,0.10300433,0.41391128,-0.051318593,-0.19899943,-0.01540736,0.024237651,
    0.011678475,0.046184897,-0.008620673,0.008751978,-0.05730516,-0.07730936,-0.005290916,0.12386493,-0.1802837,-0.024300763,0.07211812,0.08559458,0.049031865,-0.03850286,-0.034198,0.16368705,
    -0.7761835,0.01364255,-0.3700582,-0.5833356,1.0429384,0.89199203,-0.62588155,-0.4877491,0.37070075,-0.20735489,-1.1289028,0.2377583,-2.0087879,0.63350457,0.27921373,1.5165513,
    -0.03662464,0.08983101,0.060825273,0.08172895,-0.0041630594,-0.11135889,-0.08518695,-0.61234885,-0.2147684,-0.117752284,0.0935805,-0.10473214,0.016185183,0.076163,0.17669813,-0.054717615,
    0.18001403,-0.14296839,-0.035724908,0.008584739,-0.04129439,0.08522188,-0.13076504,0.09932502,-0.16914798,0.40623605,-0.24044184,0.05241295,0.028241247,0.1969155,0.043143,0.023284005,
    -0.046345368,-0.18445133,0.14414029,-0.062913135,-0.18801506,0.022676019,0.07245685,-0.016287934,0.051562358,-0.2802277,0.041956693,-0.22217205,0.15513654,-0.018203791,-0.11476049,-0.20012288,
    -0.032224853,0.17268908,-0.32015985,0.18567762,0.14017424,-0.25576824,0.1423593,-0.09422833,-0.41926652,0.31063834,0.054390214,0.02167204,-0.11668036,0.108501025,0.29725054,-0.0017914819,
    -0.017238474,-0.019057656,-0.3017962,0.12886076,-0.0033565047,-0.077607036,0.18917866,0.18064785,-0.45497286,-0.15805787,-0.041661818,-0.13596506,0.12415247,-0.15771256,0.22972994,-0.13016105,
    -0.060570654,-0.20505098,-0.16998112,-0.16290808,0.09076396,-0.11389966,-0.03162284,-0.14364538,-0.262726,-0.02991903,0.14594845,-0.2928107,-0.062055904,0.1244998,-0.027350213,0.07759436,
    -0.22787265,0.022224614,-0.073975824,0.060271133,0.16493246,-0.26961595,0.17212547,0.055898473,-0.42633107,0.02038669,-0.16770358,0.1140051,-0.050378162,0.16054818,0.1524425,-0.058474027,
    -0.16099174,0.08622342,0.06567598,0.16512609,0.056955144,-0.05448356,0.027468957,0.00088521256,0.096441515,-0.085114785,-0.2659564,-0.2577496,0.043892805,0.23944917,-0.023145868,-0.09629207,
    3.9847999,-2.7011511,3.0644016,-3.9668908,3.708022,3.9297836,-4.0103817,-0.7967056,3.6195886,-1.3829288,-2.7974372,3.238023,-2.1559596,-1.5848633,-2.4160542,-0.83021027,
    0.14538243,-0.0842145,-0.23919709,-0.27781042,-0.15425916,0.3412907,-0.29324555,0.061570115,0.4411982,-0.27911696,-0.052279595,-0.078388035,0.17630318,0.3315519,-0.15328223,-0.1673399,
    -0.24162513,0.2300256,-0.0023553108,0.28005677,0.049382042,0.09649948,0.05558233,0.07737466,0.054769874,-0.16781223,-0.31913862,-0.3803362,0.003850515,0.5447912,-0.23618424,0.3013947,
    0.09424829,-0.15679324,0.080338396,0.0064178426,0.19164936,0.07647703,0.07378225,0.07935651,0.068822466,0.07949869,0.1312871,-0.1665304,-0.1375845,-0.13455655,0.08754501,0.106305,
    -0.13805947,0.20740275,-0.15305981,0.05864395,0.28815153,-0.01079077,-0.12045323,-0.038556088,-0.3867038,0.18746659,-0.024151955,-0.18675058,0.07278048,-0.13944212,0.1619095,0.15814863,
    -0.11712107,-0.24273562,0.15339932,0.2305465,-0.1657012,0.22387606,-0.062387012,-0.03566165,0.0026230875,-0.23238827,-0.09707804,0.13352478,0.10091572,-0.21078424,0.09492525,0.096786596,
    -0.17227493,0.17395376,-0.019998843,-0.014446519,0.023212535,0.2666719,-0.21672401,-0.1810392,-0.20464338,0.097728394,-0.23359233,0.004644055,0.054196384,0.38371134,0.11767432,0.7396289,
    0.23714216,-0.1675709,0.043403156,0.1612383,0.103820115,0.11450468,0.13488485,0.11135817,-0.0057277163,-0.19075155,-0.13235565,0.111439824,-0.028970795,-0.0068633617,0.19968645,-0.21906695,
    -0.24431458,0.20937051,-0.34447297,-0.3214158,-0.051440507,0.27969047,-0.18062425,0.13650057,0.062224627,-0.097988665,0.44515908,0.052853405,-0.38652915,-0.21347712,-0.029545559,0.20682901,
    0.39046726,0.4624928,0.10145616,-0.39237472,-0.09095944,0.11437017,-0.19512041,0.1586339,-0.109271996,0.32116842,0.26959875,0.06302292,-0.088882975,-0.05281854,0.14459427,0.4045313,
};
const static std::array<float, DnnShapeHHHS::kSize1 * DnnShapeHHHS::kSize2> weights2_HHHS =
{
    -0.2673186,-0.30070102,0.21799283,-0.015903205,0.32130098,-0.37541148,0.05856352,-0.08593516,
    -0.28686857,-0.19152449,-0.054980464,-0.5056834,-0.0018159376,-0.29003826,-0.30385303,-0.34514886,
    0.068485364,0.16259646,-0.07477331,0.52421755,0.081234574,0.08623733,0.50553995,0.3427899,
    0.36624897,0.42716238,-0.1642182,0.007004858,-0.68487954,0.59825313,0.16177914,0.00074147846,
    0.04116483,0.21777868,0.4490241,0.5700637,0.26832998,-0.2541505,-0.16761713,0.5871032,
    -0.429448,-0.4433339,-0.04620604,0.23142399,-0.3626435,0.3372753,0.34010604,-0.04554219,
    0.31068608,0.12979974,-0.108077526,-0.31826374,-0.08661627,0.21305959,-0.10889651,0.18153949,
    0.33573365,0.10772255,-0.27591568,0.46598494,0.7184231,-0.24549094,0.018957717,-0.04557985,
    -0.19659434,-0.0008859663,-0.23389511,0.17978442,0.73997664,-0.5331113,0.50712395,0.16207668,
    0.073161475,-0.30541325,-0.3410046,0.15345731,0.6277735,-0.63667023,-0.61823803,-0.026253818,
    -0.15060917,9.448054e-06,-0.20535725,-0.22466609,-0.31991592,0.24383871,0.37160558,0.3262987,
    0.32461172,-0.12097649,0.5886386,0.22627686,-0.23017517,0.3101832,0.37597737,0.14971527,
    0.7001411,0.015672011,-0.6068462,-0.2856137,-0.22781621,-0.1861688,-0.102082826,-0.23038982,
    0.08147637,0.3570996,0.28129274,-0.13256638,-0.020321444,-0.1452955,0.17759095,-0.26437107,
    -0.1505021,-0.11369299,-0.028911887,0.090237,-0.6716631,0.591499,-0.23577337,0.23931701,
    -0.3164126,-0.12071364,0.17603484,-0.10167383,-0.27717212,0.18803266,-0.082027785,-0.31924537,
};
const static std::array<float, DnnShapeHHHS::kSize2 * DnnShapeHHHS::kSize3> weights3_HHHS =
{
    0.22805163,0.3421672,0.6749826,-0.57780534,
    0.13533738,0.6369551,0.1483736,-0.489387,
    -0.6930184,-0.76679635,-0.4656161,0.49783915,
    -0.34497753,-0.35704935,-0.4484896,0.58287233,
    -0.75419897,-0.6501176,-0.6584092,-0.12758619,
    0.5443538,0.768851,0.3820814,0.20198515,
    -0.5937086,-0.80006576,-0.29651394,0.3942458,
    -0.6626433,-0.79524773,-0.4872042,0.4087326,
};
const static std::array<float, DnnShapeHHHS::kSize3 * DnnShapeHHHS::kSize4> weights4_HHHS =
{
    -0.70740104,
    -0.9758098,
    -0.5390656,
    0.8460421,
};
const static std::array<float, DnnShapeHHHS::kSize1> bias1_HHHS =
{
    0.03929715,0.15191594,0.21197341,0.25421593,-0.06501081,0.1920301,0.13731833,-0.04148135,-0.072093055,-0.21787569,-0.117927216,0.10785653,0.15909372,-0.058486797,-0.11004639,0.09694525,
};
const static std::array<float, DnnShapeHHHS::kSize2> bias2_HHHS =
{
    0.10739889,-0.07373392,0.20566674,0.52454466,-0.45150647,0.035487767,-0.093970776,0.10739533,
};
const static std::array<float, DnnShapeHHHS::kSize3> bias3_HHHS =
{
    0.593796,0.47598377,0.6719019,0.41538146,
};
const static std::array<float, DnnShapeHHHS::kSize4> bias4_HHHS =
{
    -0.33233392,
};
class ContractionWeightsHHHS : public ContractionWeights<DnnShapeHHHS>
{
public:
    ContractionWeightsHHHS()
        : ContractionWeights<DnnShapeHHHS>(
                  weights1_HHHS, weights2_HHHS, weights3_HHHS, weights4_HHHS,
                  bias1_HHHS, bias2_HHHS, bias3_HHHS, bias4_HHHS
        ) {}
};

} // namespace LWTENSOR_NAMESPACE
