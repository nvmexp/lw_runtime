# Copyright (c) 2017-2020, LWPU CORPORATION.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted
# provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright notice, this list of
#       conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright notice, this list of
#       conditions and the following disclaimer in the documentation and/or other materials
#       provided with the distribution.
#     * Neither the name of the LWPU CORPORATION nor the names of its contributors may be used
#       to endorse or promote products derived from this software without specific prior written
#       permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL LWPU CORPORATION BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROLWREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TOR (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Minimum CMake version required.
# Using LWCA support inn CMake 3.8+
# https://devblogs.lwpu.com/building-lwca-applications/cmake/
cmake_minimum_required(VERSION 3.8 FATAL_ERROR)

# ----------------------------------------------------------------------
# Build options
option(USE_MATLAB "Build MEX libraries to allow use from MATLAB" OFF)

# ----------------------------------------------------------------------
# Set the version number for this project
set(lwPHY_VERSION_MAJOR 0)
set(lwPHY_VERSION_MINOR 7)

# ----------------------------------------------------------------------
# Enable testing support
enable_testing()

# ----------------------------------------------------------------------
# Global C++ options
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# ----------------------------------------------------------------------
# LWCA Options
#     Generate a string to specify LWCA target architectures
set(LWDA_GENCODE_STRING "" )

#     List of target architectures
set(LWDA_GENCODE_ARCH_LIST "70,72,75" CACHE STRING "List of target LWCA architectures")
message("LWDA_GENCODE_ARCH_LIST is ${LWDA_GENCODE_ARCH_LIST}")

#     Colwert comma-delimited string to CMake list (semicolon-delimited)
string(REPLACE "," ";" LWDA_GENCODE_ARCH_LIST_ ${LWDA_GENCODE_ARCH_LIST})
foreach(LWDA_ARCH_ ${LWDA_GENCODE_ARCH_LIST_})
  string(APPEND LWDA_GENCODE_STRING "-gencode arch=compute_${LWDA_ARCH_},code=sm_${LWDA_ARCH_} ")
  #message("LWDA_ARCH_=${LWDA_ARCH_}")
endforeach(LWDA_ARCH_)

set(CMAKE_LWDA_FLAGS " --lwdart static -lineinfo ${LWDA_GENCODE_STRING}" CACHE STRING "LWCA Global Flags")

#     LWCA flags for device debugging with lwca-gdb
# string(APPEND CMAKE_LWDA_FLAGS " --lwdart static -lineinfo -g -G")
set(CMAKE_LWDA_STANDARD 14)
project(lwPHY LANGUAGES C CXX LWCA)

message("CMAKE_LWDA_FLAGS is ${CMAKE_LWDA_FLAGS}")

# ----------------------------------------------------------------------
# Additional packages
set(THREADS_PREFER_PTHREAD_FLAG OFF)
find_package(Threads REQUIRED)
set(HDF5_USE_STATIC_LIBRARIES ON)
find_package(HDF5 1.10 REQUIRED COMPONENTS C)
if (USE_MATLAB)
    find_package(Matlab REQUIRED)
endif (USE_MATLAB)

# ----------------------------------------------------------------------
# Subdirectories
add_subdirectory(examples)

if (USE_MATLAB)
    add_subdirectory(util/matlab/mex)
endif (USE_MATLAB)

