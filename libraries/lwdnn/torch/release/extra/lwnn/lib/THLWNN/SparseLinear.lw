#include "THLWNN.h"
#include "THCHalf.h"
#include "THCHalfAutoNumerics.lwh"

#include <lwsparse.h>

static lwsparseHandle_t lwsparse_handle = 0;

static void init_lwsparse() {
  if (lwsparse_handle == 0) {
    lwsparseStatus_t status = lwsparseCreate(&lwsparse_handle);
    if (status != LWSPARSE_STATUS_SUCCESS) {
      THError("LWSPARSE Library initialization failed");
    }
  }
}

#ifdef LWDA_HALF_TENSOR
void THNN_LwdaHalfSparseLinear_updateOutput(
          THCState *state,
          THLwdaHalfTensor *input,
          THLwdaHalfTensor *output,
          THLwdaHalfTensor *weight,
          THLwdaHalfTensor *bias) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}

void THNN_LwdaHalfSparseLinear_accGradParameters(
          THCState *state,
          THLwdaHalfTensor *input,
          THLwdaHalfTensor *gradOutput,
          THLwdaHalfTensor *gradWeight,
          THLwdaHalfTensor *gradBias,
          THLwdaHalfTensor *weight,
          THLwdaHalfTensor *bias,
          float weightDecay,
          float scale) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}

void THNN_LwdaHalfSparseLinear_legacyUpdateOutput(
          THCState *state,
          THLwdaHalfTensor *input,
          THLwdaHalfTensor *output,
          THLwdaHalfTensor *weight,
          THLwdaHalfTensor *bias) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}

void THNN_LwdaHalfSparseLinear_legacyAccGradParameters(
          THCState *state,
          THLwdaHalfTensor *input,
          THLwdaHalfTensor *gradOutput,
          THLwdaHalfTensor *gradWeight,
          THLwdaHalfTensor *gradBias,
          THLwdaHalfTensor *weight,
          THLwdaHalfTensor *bias,
          float weightDecay,
          float scale) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}

void THNN_LwdaHalfSparseLinear_zeroGradParameters(
          THCState *state,
          THLwdaHalfTensor *gradWeight,
          THLwdaHalfTensor *gradBias,
          THLwdaHalfTensor *lastInput) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}

void THNN_LwdaHalfSparseLinear_updateParameters(
          THCState *state,
          THLwdaHalfTensor *weight,
          THLwdaHalfTensor *bias,
          THLwdaHalfTensor *gradWeight,
          THLwdaHalfTensor *gradBias,
          THLwdaHalfTensor *lastInput,
          float learningRate) {
  THError("THLwdaHalfTensor not supported with SparseLinear");
}
#endif

#include "generic/SparseLinear.lw"
#include "THCGenerateFloatType.h"
#include "generic/SparseLinear.lw"
#include "THCGenerateDoubleType.h"
