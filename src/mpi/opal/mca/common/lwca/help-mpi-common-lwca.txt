# -*- text -*-
#
# Copyright (c) 2011-2015 LWPU.  All rights reserved.
# Copyright (c) 2015 Cisco Systems, Inc.  All rights reserved.
# $COPYRIGHT$
#
# Additional copyrights may follow
#
# $HEADER$
#
[lwCtxGetLwrrent failed not initialized]
WARNING: The call to lwCtxGetLwrrent() failed while attempting to register
internal memory with the LWCA environment.  The program will continue to run,
but the performance of GPU memory transfers may be reduced.  This failure
indicates that the LWCA environment is not yet initialized.  To eliminate
this warning, ensure that LWCA is initialized prior to calling MPI_Init.

NOTE: You can turn off this warning by setting the MCA parameter
      mpi_common_lwda_warning to 0.
#
[lwCtxGetLwrrent failed]
WARNING: The call to lwCtxGetLwrrent() failed while attempting to register
internal memory with the LWCA environment.  The program will continue to run,
but the performance of GPU memory transfers may be reduced.
  lwCtxGetLwrrent return value:   %d

NOTE: You can turn off this warning by setting the MCA parameter
      mpi_common_lwda_warning to 0.
#
[lwCtxGetLwrrent returned NULL]
WARNING: The call to lwCtxGetLwrrent() failed while attempting to register
internal memory with the LWCA environment.  The program will continue to run,
but the performance of GPU memory transfers may be reduced.  This failure
indicates that there is no LWCA context yet.  To eliminate this warning,
ensure that there is a LWCA context prior to calling MPI_Init.

NOTE: You can turn off this warning by setting the MCA parameter
      mpi_common_lwda_warning to 0.
#
[lwMemHostRegister during init failed]
The call to lwMemHostRegister(%p, %d, 0) failed.
  Host:  %s
  lwMemHostRegister return value:  %d
  Registration cache:  %s
#
[lwMemHostRegister failed]
The call to lwMemHostRegister(%p, %d, 0) failed.
  Host:  %s
  lwMemHostRegister return value:  %d
  Registration cache:  %s
#
[lwIpcGetMemHandle failed]
The call to lwIpcGetMemHandle failed. This means the GPU RDMA protocol
cannot be used.
  lwIpcGetMemHandle return value:   %d
  address: %p
Check the lwca.h file for what the return value means. Perhaps a reboot
of the node will clear the problem.
#
[lwMemGetAddressRange failed]
The call to lwMemGetAddressRange failed. This means the GPU RDMA protocol
cannot be used.
  lwMemGetAddressRange return value:   %d
  address: %p
Check the lwca.h file for what the return value means. Perhaps a reboot
of the node will clear the problem.
#
[lwMemGetAddressRange failed 2]
The call to lwMemGetAddressRange failed during the GPU RDMA protocol.
  Host:  %s
  lwMemGetAddressRange return value:  %d
  address:  %p
Check the lwca.h file for what the return value means. This is highly
unusual and should not happen. The program will probably abort.
#
[Out of lwEvent handles]
The library has exceeded its number of outstanding event handles.
For better performance, this number should be increased.
  Current maximum handles:   %4d
  Suggested new maximum:     %4d
Rerun with --mca mpi_common_lwda_event_max %d
#
[lwIpcOpenMemHandle failed]
The call to lwIpcOpenMemHandle failed. This is an unrecoverable error
and will cause the program to abort.
  Hostname:                         %s
  lwIpcOpenMemHandle return value:  %d
  address:                          %p
Check the lwca.h file for what the return value means. A possible cause
for this is not enough free device memory.  Try to reduce the device
memory footprint of your application.
#
[lwIpcCloseMemHandle failed]
The call to lwIpcCloseMemHandle failed. This is a warning and the program
will continue to run.
  lwIpcCloseMemHandle return value:   %d
  address: %p
Check the lwca.h file for what the return value means. Perhaps a reboot
of the node will clear the problem.
#
[lwMemcpyAsync failed]
The call to lwMemcpyAsync failed. This is a unrecoverable error and will
cause the program to abort.
  lwMemcpyAsync(%p, %p, %d) returned value %d
Check the lwca.h file for what the return value means.
#
[lwEventCreate failed]
The call to lwEventCreate failed. This is a unrecoverable error and will
cause the program to abort.
  Hostname:                     %s
  lwEventCreate return value:   %d
Check the lwca.h file for what the return value means.
#
[lwEventRecord failed]
The call to lwEventRecord failed. This is a unrecoverable error and will
cause the program to abort.
  Hostname:                     %s
  lwEventRecord return value:   %d
Check the lwca.h file for what the return value means.
#
[lwEventQuery failed]
The call to lwEventQuery failed. This is a unrecoverable error and will
cause the program to abort.
  lwEventQuery return value:   %d
Check the lwca.h file for what the return value means.
#
[lwIpcGetEventHandle failed]
The call to lwIpcGetEventHandle failed. This is a unrecoverable error and will
cause the program to abort.
  lwIpcGetEventHandle return value:   %d
Check the lwca.h file for what the return value means.
#
[lwIpcOpenEventHandle failed]
The call to lwIpcOpenEventHandle failed. This is a unrecoverable error and will
cause the program to abort.
  lwIpcOpenEventHandle return value:   %d
Check the lwca.h file for what the return value means.
#
[lwStreamWaitEvent failed]
The call to lwStreamWaitEvent failed. This is a unrecoverable error and will
cause the program to abort.
  lwStreamWaitEvent return value:   %d
Check the lwca.h file for what the return value means.
#
[lwEventDestroy failed]
The call to lwEventDestory failed. This is a unrecoverable error and will
cause the program to abort.
  lwEventDestory return value:   %d
Check the lwca.h file for what the return value means.
#
[lwStreamCreate failed]
The call to lwStreamCreate failed.  This is a unrecoverable error and will
cause the program to abort.
  Hostname:                      %s
  lwStreamCreate return value:   %d
Check the lwca.h file for what the return vale means.
#
[dlopen disabled]
Open MPI was compiled without dynamic library support (e.g., with the
 --disable-dlopen flag), and therefore cannot utilize LWCA support.

If you need LWCA support, reconfigure Open MPI with dynamic library support enabled.
#
[dlopen failed]
The library attempted to open the following supporting LWCA libraries,
but each of them failed.  LWCA-aware support is disabled.
%s
If you are not interested in LWCA-aware support, then run with
--mca opal_warn_on_missing_liblwda 0 to suppress this message.  If you are interested
in LWCA-aware support, then try setting LD_LIBRARY_PATH to the location
of liblwda.so.1 to get passed this issue.
#
[dlsym failed]
An error oclwrred while trying to map in the address of a function.
  Function Name: %s
  Error string:  %s
LWCA-aware support is disabled.
#
[bufferID failed]
An error oclwrred while trying to get the BUFFER_ID of a GPU memory
region.  This could cause incorrect results.  Turn of GPU Direct RDMA
support by running with --mca btl_openib_lwda_want_gdr_support 0.
  Hostname:                             %s
  lwPointerGetAttribute return value:   %d
Check the lwca.h file for what the return value means.
[lwPointerSetAttribute failed]
The call to lwPointerSetAttribute with LW_POINTER_ATTRIBUTE_SYNC_MEMOPS
failed. This is highly unusual and should not happen.  The program will
continue, but report this error to the Open MPI developers.
  Hostname:                             %s
  lwPointerSetAttribute return value:   %d
  Address:                              %p
Check the lwca.h file for what the return value means.
#
[lwStreamSynchronize failed]
The call to lwStreamSynchronize failed. This is highly unusual and should
not happen.  Please report this error to the Open MPI developers.
  Hostname:                             %s
  lwStreamSynchronize return value:     %d
Check the lwca.h file for what the return value means.
#
[lwMemcpy failed]
The call to lwMemcpy failed. This is highly unusual and should
not happen.  Please report this error to the Open MPI developers.
  Hostname:                  %s
  lwMemcpy return value:     %d
Check the lwca.h file for what the return value means.
#
[No memory]
A call to allocate memory within the LWCA support failed.  This is
an unrecoverable error and will cause the program to abort.
  Hostname:  %s
