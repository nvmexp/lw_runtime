-- VectorCAST 20.sp5 (12/16/20)
-- Imported Coverage Results Script
IMPORT.BEGIN
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:8
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/tests/lwscibuf/unit/attribute_reconcile_unit/LWSCIBUF_ATTR_RECONCILE/S0000008.c
IMPORT.SOURCE.TIMESTAMP:0
IMPORT.SOURCE.COVERAGE_STATUS:FALSE
IMPORT.SOURCE.COVERAGE_TYPE:None
IMPORT.SOURCE.FILE_CHECKSUM:0
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:TRUE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:TRUE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_UNKNOWN
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:TRUE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:9
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
IMPORT.SOURCE.TIMESTAMP:1638791587
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:1102787653
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:11
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
IMPORT.SOURCE.TIMESTAMP:1638791587
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:3048857726
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:12
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile_image_tensor.c
IMPORT.SOURCE.TIMESTAMP:1638791587
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:3095872741
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
RESULT.CBA.BEGIN
RESULT.CBA.RESULT: CBA_ArrayIntersectionPolicySameKey_1
RESULT.CBA.NOTES
Safety-impact (Nil/Low/Mid/High):
Nil

Justification:
Image pyramid constraints and Array constraints is not part of 5.2 safety release.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: ArrayIntersectionPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: (void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
RESULT.CBA.CONTEXT_BEFORE:
* ease of debugging */
startEndPtr = (void*)((char*)recAddr + *recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U != *recSetSize) {
*recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.CONTEXT: *recSetSize = (uint64_t)(lwrrentIndex * dataSize);
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Zero out any memory after the end of the reconciled array for
* ease of debugging */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: *recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_BEFORE:
void* iterAddr2 = recAddr;
LwSciCommonMemcpyS(iterAddr2, *ipSetSize, iterAddr1, *ipSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
&recStatus, &recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
&recStatus, &recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_BEFORE:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&ipStatus, &ipSetSize);
LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_BEFORE:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&ipStatus, &ipSetSize);
LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(recAttrList, 0U, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: LwSciBufAttrStatus* ipStatus = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: LwSciBufAttrStatus* recStatus = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr3 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(iterAddr2, *ipSetSize, iterAddr1, *ipSetSize)
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = ipAddr;
void* iterAddr2 = recAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recSetSize = *ipSetSize;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(iterAddr2, *ipSetSize, iterAddr1, *ipSetSize);
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = ipAddr;
void* iterAddr2 = recAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recSetSize = *ipSetSize;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* ipAddr =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: SwapBuf(iterAddr2, iterAddr3, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
iterAddr3 = (char*)recAddr + (dataSize * lwrrentIndex);
/* Swap the two values at recAddr[lwrrentIndex] and recAddr[j] */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: SwapBuf(iterAddr2, iterAddr3, dataSize);
RESULT.CBA.CONTEXT_BEFORE:
iterAddr3 = (char*)recAddr + (dataSize * lwrrentIndex);
/* Swap the two values at recAddr[lwrrentIndex] and recAddr[j] */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: const void* iterAddr1 = ipAddr;
RESULT.CBA.CONTEXT_BEFORE:
* so we need to copy everything into the reconciled list (since
* the intersection of a single array is itself). */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr2 = recAddr;
LwSciCommonMemcpyS(iterAddr2, *ipSetSize, iterAddr1, *ipSetSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 69
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
reconcile_fail:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: for (i = 0U; i < setLen1; i++)
RESULT.CBA.CONTEXT_BEFORE:
*  2. If not, then remove it from the reconciled list
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0U; i < setLen1; i++)
RESULT.CBA.CONTEXT_BEFORE:
*  2. If not, then remove it from the reconciled list
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0U; i < setLen1; i++)
RESULT.CBA.CONTEXT_BEFORE:
*  2. If not, then remove it from the reconciled list
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: for (j = lwrrentIndex; j < reconciledAttrLen; j++)
RESULT.CBA.CONTEXT_BEFORE:
}
iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr2 = (char*)recAddr + (dataSize * j);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (j = lwrrentIndex; j < reconciledAttrLen; j++)
RESULT.CBA.CONTEXT_BEFORE:
}
iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr2 = (char*)recAddr + (dataSize * j);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (j = lwrrentIndex; j < reconciledAttrLen; j++)
RESULT.CBA.CONTEXT_BEFORE:
}
iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr2 = (char*)recAddr + (dataSize * j);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.CONTEXT: goto reconcile_fail;
RESULT.CBA.CONTEXT_BEFORE:
*recStatus = LwSciBufAttrStatus_Reconciled;
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.CONTEXT: if (0U != *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
startEndPtr = (void*)((char*)recAddr + *recSetSize);
(void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U != *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
startEndPtr = (void*)((char*)recAddr + *recSetSize);
(void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U != *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
startEndPtr = (void*)((char*)recAddr + *recSetSize);
(void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Update the length only when this slot is non-empty. */
size_t maxDataSize = dataMaxInstance * dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Update the length only when this slot is non-empty. */
size_t maxDataSize = dataMaxInstance * dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Update the length only when this slot is non-empty. */
size_t maxDataSize = dataMaxInstance * dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: if (0U == *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
}
setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U == *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
}
setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
}
setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr3 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr3 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* iterAddr3 =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: iterAddr3 = (char*)recAddr + (dataSize * lwrrentIndex);
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Swap the two values at recAddr[lwrrentIndex] and recAddr[j] */
SwapBuf(iterAddr2, iterAddr3, dataSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: memset(startEndPtr, 0x0, maxDataSize - *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
* ease of debugging */
startEndPtr = (void*)((char*)recAddr + *recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U != *recSetSize) {
*recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 71
RESULT.CBA.CONTEXT: return err;
RESULT.CBA.CONTEXT_BEFORE:
ret:
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U == *recSetSize) {
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: size_t dataSize = 0U;
RESULT.CBA.CONTEXT_BEFORE:
;
uint64_t setLen1 = 0UL;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.CONTEXT: size_t maxDataSize = dataMaxInstance * dataSize;
RESULT.CBA.CONTEXT_BEFORE:
if (0U != setLen1) {
/* Update the length only when this slot is non-empty. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* startEndPtr =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: startEndPtr = (void*)((char*)recAddr + *recSetSize);
RESULT.CBA.CONTEXT_BEFORE:
/* Zero out any memory after the end of the reconciled array for
* ease of debugging */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
if (0U != *recSetSize) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
/* Swap the two values at recAddr[lwrrentIndex] and recAddr[j] */
SwapBuf(iterAddr2, iterAddr3, dataSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != arithmeticStatus) {
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.CONTEXT: u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE:
/* Swap the two values at recAddr[lwrrentIndex] and recAddr[j] */
SwapBuf(iterAddr2, iterAddr3, dataSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != arithmeticStatus) {
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
;
uint64_t j = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != arithmeticStatus) {
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE:
;
uint64_t j = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != arithmeticStatus) {
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t setLen1 = 0UL;
size_t dataSize = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: uint64_t lwrrentIndex = 0U;
RESULT.CBA.CONTEXT_BEFORE:
} else {
uint64_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t reconciledAttrLen = *recSetSize / dataSize;
uint8_t arithmeticStatus = 1U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: uint64_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE:
*recStatus = LwSciBufAttrStatus_Reconciled;
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t lwrrentIndex = 0U;
uint64_t reconciledAttrLen = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: uint64_t j = 0U;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: uint64_t reconciledAttrLen = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t i = 0U;
uint64_t lwrrentIndex = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint8_t arithmeticStatus = 1U;
uint64_t tmpArithmetic = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: uint64_t setLen1 = 0UL;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
size_t dataSize = 0U;
uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: uint64_t tmpArithmetic = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t reconciledAttrLen = *recSetSize / dataSize;
uint8_t arithmeticStatus = 1U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Otherwise, for each element:
*  1. Check if it exists in the reconciled list.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: uint64_t* ipSetSize = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: uint64_t* recSetSize = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: uint8_t arithmeticStatus = 1U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t lwrrentIndex = 0U;
uint64_t reconciledAttrLen = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t tmpArithmetic = 0U;
/* Otherwise, for each element:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: void* ipAddr = 
RESULT.CBA.CONTEXT_BEFORE:
{
LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: void* iterAddr2 = (char*)recAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE:
iterAddr1 = (char*)ipAddr + tmpArithmetic;
for (j = lwrrentIndex; j < reconciledAttrLen; j++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
void* iterAddr3 =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: void* iterAddr2 = recAddr;
RESULT.CBA.CONTEXT_BEFORE:
* the intersection of a single array is itself). */
const void* iterAddr1 = ipAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(iterAddr2, *ipSetSize, iterAddr1, *ipSetSize);
*recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: void* iterAddr3 = 
RESULT.CBA.CONTEXT_BEFORE:
void* iterAddr2 = (char*)recAddr + (dataSize * j);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: void* recAddr = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: void* startEndPtr = 
RESULT.CBA.CONTEXT_BEFORE:
/* Update the length only when this slot is non-empty. */
size_t maxDataSize = dataMaxInstance * dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: *recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_BEFORE:
*recSetSize = *ipSetSize;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
uint64_t i = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
iterAddr1 = (char*)ipAddr + tmpArithmetic;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
* for holding values of keys of other datatype. In that case do nothing
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipSetSize) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipSetSize) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipSetSize) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
uint64_t j = 0U;
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
uint64_t j = 0U;
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
uint64_t j = 0U;
u64Mul(dataSize, i, &tmpArithmetic, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciError err = LwSciError_Success;
void* ipAddr =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 65
RESULT.CBA.CONTEXT: *recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_BEFORE:
(void)memset(startEndPtr, 0x0, maxDataSize - *recSetSize);
if (0U != *recSetSize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
break;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
if (1U != arithmeticStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
break;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: const void* iterAddr1 = 
RESULT.CBA.CONTEXT_BEFORE:
*/
for (i = 0U; i < setLen1; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
}
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconcile_fail:
{
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
SwapBuf(iterAddr2, iterAddr3, dataSize);
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
SwapBuf(iterAddr2, iterAddr3, dataSize);
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != arithmeticStatus)
RESULT.CBA.CONTEXT_BEFORE:
SwapBuf(iterAddr2, iterAddr3, dataSize);
u64Add(lwrrentIndex, 1, &lwrrentIndex, &arithmeticStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
setLen1 = *ipSetSize / dataSize;
if (0U == *recSetSize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= ipAddr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
setLen1 = *ipSetSize / dataSize;
if (0U == *recSetSize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= ipAddr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
setLen1 = *ipSetSize / dataSize;
if (0U == *recSetSize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= ipAddr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
size_t dataSize = 0U;
uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 11
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 67
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
reconcile_fail:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 50
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 70
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
}
ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
return err;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 53
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
Defensive programming, All parameters passed to LwSciBufAttrKeyDecode are local variables, and hence LwSciBufAttrKeyDecode cannot return error code.
This check although impossible is added as defensive programming.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n")
RESULT.CBA.CONTEXT_BEFORE:
&decodedKeyType);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
RESULT.CBA.CONTEXT_BEFORE:
&decodedKeyType);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if ((uint32_t)LwSciBufAttrKeyType_Public == decodedKeyType) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrKeyDecode(key1, &decodedKey, &decodedDataType,
&decodedKeyType);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrKeyDecode(key1, &decodedKey, &decodedDataType,
&decodedKeyType);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
value1 = keyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
value1 = internalKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_4
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
Defensive programming, All parameters passed to LwSciBufAttrKeyDecode are local variables, and hence LwSciBufAttrKeyDecode cannot return error code.
This check although impossible is added as defensive programming.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n")
RESULT.CBA.CONTEXT_BEFORE:
&decodedKeyType);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
RESULT.CBA.CONTEXT_BEFORE:
&decodedKeyType);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if ((uint32_t)LwSciBufAttrKeyType_Public == decodedKeyType) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrKeyDecode(key2, &decodedKey, &decodedDataType,
&decodedKeyType);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrKeyDecode(key2, &decodedKey, &decodedDataType,
&decodedKeyType);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrKeyDecode failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_5
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
value2 = keyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_6
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
value2 = internalKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_7
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 75
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 74
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 79
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 78
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 73
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 72
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 77
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 76
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 71
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n")
RESULT.CBA.CONTEXT_BEFORE:
if ((0U == len1) || (0U == len2)) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 70
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
RESULT.CBA.CONTEXT_BEFORE:
if ((0U == len1) || (0U == len2)) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "Len of key1: \n" "%lu\n", __FUNCTION__, len1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.CONTEXT: if ((0U == len1) || (0U == len2))
RESULT.CBA.CONTEXT_BEFORE:
}
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((0U == len1) || (0U == len2))
RESULT.CBA.CONTEXT_BEFORE:
}
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 69
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
;
if ((0U == len1) || (0U == len2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "One or both of the keys to be reconciled are not set\n");
LwSciTracePrintf("[ERROR: %s]: " "key1: . " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 80
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "key2: . " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "Len of key2: \n" "%lu\n", __FUNCTION__, len2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
len = (((len1) < (len2)) ? (len1) : (len2));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_8
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 88
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 87
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 86
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciCommonMemcmp(value1, value2, len) != 0) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 85
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciCommonMemcmp(value1, value2, len) != 0) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 82
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(value1, value2, len) != 0)
RESULT.CBA.CONTEXT_BEFORE:
}
len = (((len1) < (len2)) ? (len1) : (len2));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 82
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(value1, value2, len) != 0)
RESULT.CBA.CONTEXT_BEFORE:
}
len = (((len1) < (len2)) ? (len1) : (len2));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 81
RESULT.CBA.CONTEXT: len = (((len1) < (len2)) ? (len1) : (len2));
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciCommonMemcmp(value1, value2, len) != 0) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 81
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: len = (((len1) < (len2)) ? (len1) : (len2));
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciCommonMemcmp(value1, value2, len) != 0) {
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 84
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
len = (((len1) < (len2)) ? (len1) : (len2));
if (LwSciCommonMemcmp(value1, value2, len) != 0) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 89
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Value mismatch for values of keys " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "& \n" "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 8
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CompareDifferentKeysForMatch_9
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: CompareDifferentKeysForMatch
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufAttrKeyType_Internal == decodedKeyType)
RESULT.CBA.CONTEXT_BEFORE:
value1 = keyValPair.value;
len1 = keyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufInternalAttrKeyValuePair internalKeyValPair = {0};
LwSciCommonMemcpyS(&internalKeyValPair.key, sizeof(internalKeyValPair.key),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufAttrKeyType_Internal == decodedKeyType)
RESULT.CBA.CONTEXT_BEFORE:
value1 = keyValPair.value;
len1 = keyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufInternalAttrKeyValuePair internalKeyValPair = {0};
LwSciCommonMemcpyS(&internalKeyValPair.key, sizeof(internalKeyValPair.key),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: if((uint32_t)LwSciBufAttrKeyType_Internal == decodedKeyType)
RESULT.CBA.CONTEXT_BEFORE:
value2 = keyValPair.value;
len2 = keyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufInternalAttrKeyValuePair internalKeyValPair = {0};
LwSciCommonMemcpyS(&internalKeyValPair.key, sizeof(internalKeyValPair.key),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if((uint32_t)LwSciBufAttrKeyType_Internal == decodedKeyType)
RESULT.CBA.CONTEXT_BEFORE:
value2 = keyValPair.value;
len2 = keyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufInternalAttrKeyValuePair internalKeyValPair = {0};
LwSciCommonMemcpyS(&internalKeyValPair.key, sizeof(internalKeyValPair.key),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_IpcEndpointMaxPolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: IpcEndpointMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
* peer only.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== isIpcRouteNULL) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
* peer only.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== isIpcRouteNULL) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_IpcEndpointMaxPolicySameKey_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: IpcEndpointMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
reconcile_fail:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: goto reconcile_fail;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
== isIpcRouteNULL) {
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
== isIpcRouteNULL) {
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 22
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_IpcRouteMaxPolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: IpcRouteMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
reconcile_fail:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: goto reconcile_fail;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
*/
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
*/
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
err = MaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 22
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MatchPolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050715&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MatchPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != mulStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Input attribute data size is more than reconciled attribute data size.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MatchPolicySameKey_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MatchPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MaxPolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&val1, dataSize, compare1, dataSize);
LwSciCommonMemcpyS(&val2, dataSize, compare2, dataSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&val1, dataSize, compare1, dataSize);
LwSciCommonMemcpyS(&val2, dataSize, compare2, dataSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 32
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
/* if reconcile value is missing, copy from input attr list*/
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 33
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MaxPolicySameKey_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050715&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != mulStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Input attribute data size is more than reconciled attribute data size.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MaxPowOf2PolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MaxPowOf2PolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: if (*ipSetSize > *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
* this new addition.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
*recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (*ipSetSize > *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
* this new addition.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
*recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 34
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
/* if reconcile value is missing, copy from input attr list*/
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 35
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_MaxPowOf2PolicySameKey_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050715&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: MaxPowOf2PolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != mulStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Input attribute data size is more than reconciled attribute data size.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListAreDataTypeCompatible_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListGetDataTypes () returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListAreDataTypeCompatible
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (1UL == numArray) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListAreDataTypeCompatible_2
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964661&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListAreDataTypeCompatible
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== dataTypeCompatible[(uint32_t)bufType1][(uint32_t)bufType2]) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== dataTypeCompatible[(uint32_t)bufType1][(uint32_t)bufType2]) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListCompareDifferentKeys_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListGetDataTypes () returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListCompareDifferentKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(reconciledList, &bufType, &numDataTypes);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(reconciledList, &bufType, &numDataTypes);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (1UL == numDataTypes) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
/* obtain datatypes which need to be reconciled  */
err = LwSciBufAttrListGetDataTypes(reconciledList, &bufType, &numDataTypes);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
/* obtain datatypes which need to be reconciled  */
err = LwSciBufAttrListGetDataTypes(reconciledList, &bufType, &numDataTypes);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListCompareDifferentKeys_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
Defensive programming, bufType1 & bufType2 can not set to more than MAX value.
This check although impossible is added as defensive programming.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListCompareDifferentKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* for every combination of datatype pair, get recKeyPairs */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* for every combination of datatype pair, get recKeyPairs */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1)
RESULT.CBA.CONTEXT_BEFORE:
bufType2 = bufType[index2];
if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE:
bufType2 = bufType[index2];
if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2)
RESULT.CBA.CONTEXT_BEFORE:
if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2)) {
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE:
if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2)) {
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2))
RESULT.CBA.CONTEXT_BEFORE:
bufType1 = bufType[index1];
bufType2 = bufType[index2];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((LwSciBufType_MaxValid <= bufType1) || (LwSciBufType_MaxValid <= bufType2))
RESULT.CBA.CONTEXT_BEFORE:
bufType1 = bufType[index1];
bufType2 = bufType[index2];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "bufType1: , " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "bufType2: \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListCompareDifferentKeys_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListGetImageTensorRecKeyPair() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListCompareDifferentKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1)
RESULT.CBA.CONTEXT_BEFORE:
&numRecKeyPair);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE:
&numRecKeyPair);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = recKeyPairFnPtr[(uint32_t)bufType1][(uint32_t)bufType2](&recKeyPair,
&numRecKeyPair);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = recKeyPairFnPtr[(uint32_t)bufType1][(uint32_t)bufType2](&recKeyPair,
&numRecKeyPair);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Could not obtain key-pairs for reconciliation between bufTypes  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* for every key-pair in recKeyPair array, reconcile keys
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListCompareDifferentKeys_4
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListCompareDifferentKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1)
RESULT.CBA.CONTEXT_BEFORE:
reconciledList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE:
reconciledList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = policyMap[(uint32_t)policy](key1, key2,
reconciledList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = policyMap[(uint32_t)policy](key1, key2,
reconciledList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not reconcile key  " "%u\n", __FUNCTION__, key1);
LwSciTracePrintf("[ERROR: %s]: " "of bufType  " "%u\n", __FUNCTION__, bufType1);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "and key  " "%u\n", __FUNCTION__, key2);
LwSciTracePrintf("[ERROR: %s]: " "of bufType \n" "%u\n", __FUNCTION__, bufType2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListCompareDifferentKeys_5
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964661&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListCompareDifferentKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
!= lwstomComparisonFnPtr[(uint32_t)bufType1][(uint32_t)bufType2]) {
err = lwstomComparisonFnPtr[(uint32_t)bufType1][(uint32_t)bufType2](reconciledList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not custom reconcile datatypes  " "%u\n", __FUNCTION__, (uint32_t)bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, (uint32_t)bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
!= lwstomComparisonFnPtr[(uint32_t)bufType1][(uint32_t)bufType2]) {
err = lwstomComparisonFnPtr[(uint32_t)bufType1][(uint32_t)bufType2](reconciledList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Could not custom reconcile datatypes  " "%u\n", __FUNCTION__, (uint32_t)bufType1);
LwSciTracePrintf("[ERROR: %s]: " "and \n" "%u\n", __FUNCTION__, (uint32_t)bufType2);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListHasDlaEngine_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufHasDlaEngine() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListHasDlaEngine
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufHasDlaEngine failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufHasDlaEngine(engineArray, arrayCount, hasDlaEngine);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufHasDlaEngine failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufHasDlaEngine(engineArray, arrayCount, hasDlaEngine);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufHasDlaEngine failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
engineArray = (const LwSciBufHwEngine*)keyValPair.value;
err = LwSciBufHasDlaEngine(engineArray, arrayCount, hasDlaEngine);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufHasDlaEngine failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
engineArray = (const LwSciBufHwEngine*)keyValPair.value;
err = LwSciBufHasDlaEngine(engineArray, arrayCount, hasDlaEngine);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufHasDlaEngine failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListImageTensorKeyDependency_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if  LwSciBufAttrListValidate() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListImageTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(attrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(attrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListValidate(attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListValidate(attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListImageTensorKeyDependency_2
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964661&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListImageTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== hasDlaEngine) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== hasDlaEngine) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeArrAttr_1
RESULT.CBA.NOTES
Safety-impact (Nil/Low/Mid/High):
Nil

Justification:
Image pyramid constraints and Array constraints is not part of 5.2 safety release.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeArrAttr
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterator iter;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciBufType_Array, 0U, &iter);
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterator iter;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciBufType_Array, 0U, &iter);
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
(uint32_t)LwSciBufType_Array, 0U, &iter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyIterator iter;
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n")
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
(uint32_t)LwSciBufType_Array, 0U, &iter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: return err;
RESULT.CBA.CONTEXT_BEFORE:
ret:
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciError err = LwSciError_Success;
LwSciBufAttrKeyIterator iter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
LwSciError err = LwSciError_Success;
LwSciBufAttrKeyIterator iter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
(uint32_t)LwSciBufType_Array, 0U, &iter);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
}
ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
return err;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 8
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeAttrHelper_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufReconcileCheckingNeeded() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeAttrHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufReconcileCheckingNeeded(reconciledList, key, &needsCheck);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (needsCheck) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufReconcileCheckingNeeded(reconciledList, key, &needsCheck);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufReconcileCheckingNeeded(reconciledList, key, &needsCheck);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeAttrHelper_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeAttrHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: (void)memset(&keyValPair, 0x0, sizeof(keyValPair));
RESULT.CBA.CONTEXT_BEFORE:
// Check that the key is set
LwSciBufAttrKeyValuePair keyValPair;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
&key, sizeof(key));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrListCommonGetAttrs(reconciledList, 0, &keyValPair, 1,
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&keyType, sizeof(keyType),
&decodedKeyType, sizeof(decodedKeyType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
keyType,
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(&keyType, sizeof(keyType),
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
&key, sizeof(key));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&decodedKeyType, sizeof(decodedKeyType));
err = LwSciBufAttrListCommonGetAttrs(reconciledList, 0, &keyValPair, 1,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(&keyType, sizeof(keyType),
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
&key, sizeof(key));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&decodedKeyType, sizeof(decodedKeyType));
err = LwSciBufAttrListCommonGetAttrs(reconciledList, 0, &keyValPair, 1,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyValuePair keyValPair;
(void)memset(&keyValPair, 0x0, sizeof(keyValPair));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&key, sizeof(key));
LwSciCommonMemcpyS(&keyType, sizeof(keyType),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyValuePair keyValPair;
(void)memset(&keyValPair, 0x0, sizeof(keyValPair));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&key, sizeof(key));
LwSciCommonMemcpyS(&keyType, sizeof(keyType),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: err = LwSciBufAttrListCommonGetAttrs(reconciledList, 0, &keyValPair, 1,
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&keyType, sizeof(keyType),
&decodedKeyType, sizeof(decodedKeyType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
keyType,
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (0U == keyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U == keyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: if (needsCheck)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
// Check that the key is set
LwSciBufAttrKeyValuePair keyValPair;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (needsCheck)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
// Check that the key is set
LwSciBufAttrKeyValuePair keyValPair;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: memset(&keyValPair, 0x0, sizeof(keyValPair))
RESULT.CBA.CONTEXT_BEFORE:
// Check that the key is set
LwSciBufAttrKeyValuePair keyValPair;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(&keyValPair.key, sizeof(keyValPair.key),
&key, sizeof(key));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeAttrHelper_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeAttrHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key)
RESULT.CBA.CONTEXT_BEFORE:
}
if (0U == keyValPair.len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE:
}
if (0U == keyValPair.len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_ReconciliationFailed;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
if (0U == keyValPair.len) {
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (0U == keyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == keyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Required key was not set: " "%x\n", __FUNCTION__, key);
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeAttrHelper_4
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeAttrHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key)
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (0U == keyValPair.len) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get set key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergePyrAttr_1
RESULT.CBA.NOTES
Safety-impact (Nil/Low/Mid/High):
Nil

Justification:
Image pyramid constraints and Array constraints is not part of 5.2 safety release.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergePyrAttr
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
RESULT.CBA.CONTEXT_BEFORE:
}
/* Merge all Pyramid attributes */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciBufType_Pyramid, 0, &iter);
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
RESULT.CBA.CONTEXT_BEFORE:
}
/* Merge all Pyramid attributes */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciBufType_Pyramid, 0, &iter);
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
(uint32_t)LwSciBufType_Pyramid, 0, &iter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap)
RESULT.CBA.CONTEXT_BEFORE:
;
/* Merge all Image attributes */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyIterator iter;
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n")
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
(uint32_t)LwSciBufType_Pyramid, 0, &iter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
RESULT.CBA.CONTEXT_BEFORE:
;
/* Merge all Image attributes */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: return err;
RESULT.CBA.CONTEXT_BEFORE:
ret:
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Merge all Pyramid attributes */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
/* Merge all Image attributes */
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
/* Merge all Image attributes */
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
/* Merge all Image attributes */
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get object from LwSciBufAttrList reference\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciError err = LwSciError_Success;
LwSciBufAttrKeyIterator iter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
LwSciError err = LwSciError_Success;
LwSciBufAttrKeyIterator iter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Merge all Image attributes */
err = LwSciBufAttrListMergeImgAttr(appendList, reconciledList, policyMap);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
}
ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
return err;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 11
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListMergeTensorAttr_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050719&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListMergeTensorAttr
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n")
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE:
policyMap);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListMergeAttrHelper(&iter, appendList, reconciledList,
policyMap);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListMergeAttrHelper Failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListReconcileInternal_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListValidate() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconcileInternal
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid parameter 'newAttrList' supplied to LwSciBufAttrListReconcileInternal().")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(newAttrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid parameter 'newAttrList' supplied to LwSciBufAttrListReconcileInternal().");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(newAttrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufAttrListValidate(newAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid parameter 'newAttrList' supplied to LwSciBufAttrListReconcileInternal().");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufAttrListValidate(newAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid parameter 'newAttrList' supplied to LwSciBufAttrListReconcileInternal().");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid parameter 'newAttrList' supplied to LwSciBufAttrListReconcileInternal().");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListReconcileInternal_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufValidateAttrListArray() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconcileInternal
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attrList to LwSciBufAttrListReconcileInternal().")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufValidateAttrListArray(inputArray, inputCount);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attrList to LwSciBufAttrListReconcileInternal().");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufValidateAttrListArray(inputArray, inputCount);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
== ignoreUnreconciledLists) {
err = LwSciBufValidateAttrListArray(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attrList to LwSciBufAttrListReconcileInternal().");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
== ignoreUnreconciledLists) {
err = LwSciBufValidateAttrListArray(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attrList to LwSciBufAttrListReconcileInternal().");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attrList to LwSciBufAttrListReconcileInternal().");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
err = LwSciBufAttrListAppendWithLocksUnreconciled(inputArray,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListReconcileInternal_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconcileInternal
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ignoreUnreconciledLists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ignoreUnreconciledLists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= inputAppendAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 12
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= inputAppendAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 12
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListReconcile_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964605&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get module from input attribute list.")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetModule(inputArray[0], &module);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get module from input attribute list.");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetModule(inputArray[0], &module);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: goto unlock_attr_lists;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get module from input attribute list.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
err = LwSciBufAttrListCreateMultiSlot(module, 1, &newAttrList);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufAttrListGetModule(inputArray[0], &module);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get module from input attribute list.");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciBufAttrListGetModule(inputArray[0], &module);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get module from input attribute list.");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListReconcile_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964661&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: if (LwSciError_Success == err)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
/** Only update return error code if no error lwrrently exists. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = error;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success == err)
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
/** Only update return error code if no error lwrrently exists. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = error;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListTensorKeyDependency_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if  LwSciBufAttrListValidate() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(attrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListValidate(attrList);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
(void)memset(tensorKeyValPair, 0x0, sizeof(tensorKeyValPair));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListValidate(attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListValidate(attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "attrList is invalid.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListTensorKeyDependency_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
numDims =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListTensorKeyDependency_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufReconcileCheckingNeeded() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufReconcileCheckingNeeded failed for LwSciBufTensorAttrKey_AlignmentPerDim key\n")
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciBufTensorAttrKey_AlignmentPerDim, &isAlignmentKeyMandatory);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufReconcileCheckingNeeded failed for LwSciBufTensorAttrKey_AlignmentPerDim key\n");
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciBufTensorAttrKey_AlignmentPerDim, &isAlignmentKeyMandatory);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufReconcileCheckingNeeded(attrList,
(uint32_t)LwSciBufTensorAttrKey_AlignmentPerDim, &isAlignmentKeyMandatory);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufReconcileCheckingNeeded failed for LwSciBufTensorAttrKey_AlignmentPerDim key\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufReconcileCheckingNeeded(attrList,
(uint32_t)LwSciBufTensorAttrKey_AlignmentPerDim, &isAlignmentKeyMandatory);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufReconcileCheckingNeeded failed for LwSciBufTensorAttrKey_AlignmentPerDim key\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufReconcileCheckingNeeded failed for LwSciBufTensorAttrKey_AlignmentPerDim key\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListTensorKeyDependency_4
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=22964661&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufAttrListTensorKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: if (alignPerDimValueArrayLen < (size_t)numDims)
RESULT.CBA.CONTEXT_BEFORE:
* additional values.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "number of elements in value array of LwSciBufTensorAttrKey_AlignmentPerDim key are less than value for LwSciBufTensorAttrKey_NumDims key\n");
LwSciTracePrintf("[ERROR: %s]: " "LwSciBufTensorAttrKey_NumDims: \n" "%u\n", __FUNCTION__, numDims);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (alignPerDimValueArrayLen < (size_t)numDims)
RESULT.CBA.CONTEXT_BEFORE:
* additional values.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "number of elements in value array of LwSciBufTensorAttrKey_AlignmentPerDim key are less than value for LwSciBufTensorAttrKey_NumDims key\n");
LwSciTracePrintf("[ERROR: %s]: " "LwSciBufTensorAttrKey_NumDims: \n" "%u\n", __FUNCTION__, numDims);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListValidateDiffKeyDependency_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListGetDataTypes() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListValidateDiffKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Figure out interdependency of keys for different datatypes */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListValidateKeyDependency_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListGetDataTypes () returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufAttrListValidateKeyDependency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Figure out interdependency of keys for same datatype */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = LwSciBufAttrListGetDataTypes(attrList, &bufType, &numArray);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListGetDataTypes failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufValidateImageAttr_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufValidateImageAttr
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* For image/tensor reconciliation, we only support RGB images. Check the
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufValidateMergedAttrList_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListAreDataTypeCompatible() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: LwSciBufValidateMergedAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListAreDataTypeCompatible failed\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListAreDataTypeCompatible(mergedAttrList, &isValid);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListAreDataTypeCompatible failed\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciBufAttrListAreDataTypeCompatible(mergedAttrList, &isValid);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListAreDataTypeCompatible failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
*/
err = LwSciBufAttrListAreDataTypeCompatible(mergedAttrList, &isValid);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListAreDataTypeCompatible failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
*/
err = LwSciBufAttrListAreDataTypeCompatible(mergedAttrList, &isValid);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListAreDataTypeCompatible failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufValidateTensorAttr_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_key_dep.c
RESULT.CBA.FUNCTION: LwSciBufValidateTensorAttr
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* For image/tensor reonciliation, only LwSciColor_Float_A16B16G16R16 and
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs failed\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_OrPolicySameKey_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: OrPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.CONTEXT: *recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_BEFORE:
if (*ipSetSize > *recSetSize) {
*recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.CONTEXT: *recStatus = LwSciBufAttrStatus_Reconciled;
RESULT.CBA.CONTEXT_BEFORE:
*/
if (*ipSetSize > *recSetSize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recSetSize = *ipSetSize;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
/* Do nothing */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: if (*ipSetSize > *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
* this new addition.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
*recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (*ipSetSize > *recSetSize)
RESULT.CBA.CONTEXT_BEFORE:
* this new addition.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*recStatus = LwSciBufAttrStatus_Reconciled;
*recSetSize = *ipSetSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
for (instance = 0U; instance < setLen1; instance++) {
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
for (instance = 0U; instance < setLen1; instance++) {
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty != *recStatus)) {
/* if both values are present we need to reconcile */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
_Bool
*)recAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
_Bool
*)recAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_Empty != *ipStatus) &&
RESULT.CBA.CONTEXT_BEFORE:
_Bool
*)recAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
(LwSciBufAttrStatus_Empty == *recStatus)) {
/* if reconcile value is missing, copy from input attr list*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 26
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
/* if reconcile value is missing, copy from input attr list*/
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(recAddr, dataSize, ipAddr, dataSize);
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 27
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_OrPolicySameKey_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req?docId=23050715&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: OrPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
if (1U != mulStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
err = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != mulStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != mulStatus)
RESULT.CBA.CONTEXT_BEFORE:
*/
u64Mul(instance, (uint64_t)dataSize, &tmpMul, &mulStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsigned integer overflow\n");
err = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Input attribute data size is more than reconciled attribute data size.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_PushKeyValToIpcTable_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: PushKeyValToIpcTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: *isIpcRouteNULL = 
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAddIpcTableEntry() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAddIpcTableEntry() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_PushKeyValToIpcTable_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: PushKeyValToIpcTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Failed to get IPC Table information: " "%u\n", __FUNCTION__, err)
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Failed to get IPC Table information: " "%u\n", __FUNCTION__, err);
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get IPC Table information: " "%u\n", __FUNCTION__, err);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Failed to get IPC Table information: " "%u\n", __FUNCTION__, err);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Failed to get IPC Table information: " "%u\n", __FUNCTION__, err);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (0U == pvtKeyValPair.len) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_PushKeyValToIpcTable_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
Defensive programming, Thsi check is being added to ensure 'len' of KeyValPair is not zero.
This check although impossible is added as defensive programming.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: PushKeyValToIpcTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (0U == pvtKeyValPair.len) {
/* This should not happen */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (0U == pvtKeyValPair.len) {
/* This should not happen */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if (0U == pvtKeyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This should not happen */
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == pvtKeyValPair.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This should not happen */
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_SwapBuf_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/items/22964661?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: SwapBuf
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: *tempA = *tempB;
RESULT.CBA.CONTEXT_BEFORE:
do {
char tempTmp = *tempA;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*tempB = tempTmp;
tempA++;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: *tempB = tempTmp;
RESULT.CBA.CONTEXT_BEFORE:
char tempTmp = *tempA;
*tempA = *tempB;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
tempA++;
tempB++;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: char tempTmp = *tempA;
RESULT.CBA.CONTEXT_BEFORE:
}
do {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*tempA = *tempB;
*tempB = tempTmp;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: char* tempA = a;
RESULT.CBA.CONTEXT_BEFORE:
{
size_t tempSize = n;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
char* tempB = b;
if (0U == n) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: char* tempB = b;
RESULT.CBA.CONTEXT_BEFORE:
size_t tempSize = n;
char* tempA = a;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U == n) {
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
char* tempB = b;
if (0U == n) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
do {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: if (0U == n)
RESULT.CBA.CONTEXT_BEFORE:
char* tempA = a;
char* tempB = b;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U == n)
RESULT.CBA.CONTEXT_BEFORE:
char* tempA = a;
char* tempB = b;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == n)
RESULT.CBA.CONTEXT_BEFORE:
char* tempA = a;
char* tempB = b;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: return;
RESULT.CBA.CONTEXT_BEFORE:
} while (0UL < --tempSize);
ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: size_t tempSize = n;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
char* tempA = a;
char* tempB = b;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: tempA++;
RESULT.CBA.CONTEXT_BEFORE:
*tempA = *tempB;
*tempB = tempTmp;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
tempB++;
} while (0UL < --tempSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: tempB++;
RESULT.CBA.CONTEXT_BEFORE:
*tempB = tempTmp;
tempA++;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} while (0UL < --tempSize);
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: while (0UL < --tempSize)
RESULT.CBA.CONTEXT_BEFORE:
tempA++;
tempB++;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (0UL < --tempSize)
RESULT.CBA.CONTEXT_BEFORE:
tempA++;
tempB++;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: while (0UL < --tempSize)
RESULT.CBA.CONTEXT_BEFORE:
tempA++;
tempB++;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
size_t tempSize = n;
char* tempA = a;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyArrayIntersectionPolicySameKey_1
RESULT.CBA.NOTES
Safety-impact (Nil/Low/Mid/High):
Nil

Justification:
Image pyramid constraints and Array constraints is not part of 5.2 safety release.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyArrayIntersectionPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
&recStatus, &recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
setLen1 = *ipSetSize / dataSize;
setLen2 = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
&recStatus, &recSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
setLen1 = *ipSetSize / dataSize;
setLen2 = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_BEFORE:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&ipStatus, &ipSetSize);
LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_BEFORE:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&ipStatus, &ipSetSize);
LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrGetKeyDetail(recAttrList, 0, key, (void**)&recAddr,
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: LwSciBufAttrStatus* ipStatus = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: LwSciBufAttrStatus* recStatus = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize)
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
void* ipAddr =
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
RESULT.CBA.CONTEXT_BEFORE:
}
if (j == setLen1) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
RESULT.CBA.CONTEXT_BEFORE:
}
if (j == setLen1) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
goto reconcile_fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE:
/* Skip any empty attribute lists */
for (j = 0U; j < setLen1; j++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_BEFORE:
for (j = 0U; j < setLen1; j++) {
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0) {
break;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
reconcile_fail:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: for (i = 0; i < setLen2; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Verification succeeds if the entire array in the Reconciled Attribute
* List is a subset of the Unreconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0; i < setLen2; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Verification succeeds if the entire array in the Reconciled Attribute
* List is a subset of the Unreconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0; i < setLen2; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Verification succeeds if the entire array in the Reconciled Attribute
* List is a subset of the Unreconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: for (j = 0U; j < setLen1; j++)
RESULT.CBA.CONTEXT_BEFORE:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (j = 0U; j < setLen1; j++)
RESULT.CBA.CONTEXT_BEFORE:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (j = 0U; j < setLen1; j++)
RESULT.CBA.CONTEXT_BEFORE:
if (0U != setLen1) {
/* Skip any empty attribute lists */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: goto reconcile_fail;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconcile_fail:
err = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
* List is a subset of the Unreconciled Attribute List */
for (i = 0; i < setLen2; ++i) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Skip any empty attribute lists */
for (j = 0U; j < setLen1; j++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
* List is a subset of the Unreconciled Attribute List */
for (i = 0; i < setLen2; ++i) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Skip any empty attribute lists */
for (j = 0U; j < setLen1; j++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U != setLen1)
RESULT.CBA.CONTEXT_BEFORE:
* List is a subset of the Unreconciled Attribute List */
for (i = 0; i < setLen2; ++i) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Skip any empty attribute lists */
for (j = 0U; j < setLen1; j++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciCommonMemcmp(iterAddr1, iterAddr2, dataSize) == 0)
RESULT.CBA.CONTEXT_BEFORE:
const void* iterAddr1 = (char*)ipAddr + (dataSize * j);
const void* iterAddr2 = (char*)recAddr + (dataSize * i);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: if (j == setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (j == setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (j == setLen1)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Slot did not satisfy Array Intersection: " "%lu\n", __FUNCTION__, slotIndex)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: return err;
RESULT.CBA.CONTEXT_BEFORE:
ret:
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE:
&recStatus, &recSetSize);
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
setLen2 = *recSetSize / dataSize;
/* Verification succeeds if the entire array in the Reconciled Attribute
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: setLen2 = *recSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetDataDetails(key, &dataSize, &dataMaxInstance);
setLen1 = *ipSetSize / dataSize;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Verification succeeds if the entire array in the Reconciled Attribute
* List is a subset of the Unreconciled Attribute List */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: size_t dataSize = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t setLen1 = 0U;
uint64_t setLen2 = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint32_t dataMaxInstance = 0U;
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t setLen2 = 0U;
size_t dataSize = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: uint64_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t j = 0U;
uint64_t setLen1 = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: uint64_t j = 0U;
RESULT.CBA.CONTEXT_BEFORE:
;
uint64_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t setLen1 = 0U;
uint64_t setLen2 = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: uint64_t setLen1 = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t i = 0U;
uint64_t j = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint64_t setLen2 = 0U;
size_t dataSize = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: uint64_t setLen2 = 0U;
RESULT.CBA.CONTEXT_BEFORE:
uint64_t j = 0U;
uint64_t setLen1 = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
size_t dataSize = 0U;
uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: uint64_t* ipSetSize = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: uint64_t* recSetSize = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: void* ipAddr = 
RESULT.CBA.CONTEXT_BEFORE:
{
LwSciError err = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: void* recAddr = 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciError err = LwSciError_Success;
void* ipAddr =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
size_t dataSize = 0U;
uint32_t dataMaxInstance = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrGetKeyDetail(ipAttrList, slotIndex, key, (void**)&ipAddr,
&ipStatus, &ipSetSize);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 14
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciError_ReconciliationFailed;
ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
return err;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 31
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyIpcEndpointMaxPolicySameKey_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
This cannot be fixed since the only way to fix this is type-cast the return type to void to avoid MISRA violation of not validating the return type.
Since type-casting to void isn't good solution as in future if LwSciBufAttrListCommonGetAttrs() returns any other internal error, then it will be ignored.
Hence not fixing it and have this error check is better approach.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyIpcEndpointMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get IPC route information.")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get IPC route information.");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get IPC route information.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcRoutePtr = (const LwSciBufIpcRoute*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get IPC route information.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get IPC route information.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyIpcEndpointMaxPolicySameKey_2
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23076117?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyIpcEndpointMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key)
RESULT.CBA.CONTEXT_BEFORE:
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE:
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyIpcEndpointMaxPolicySameKey_3
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23080816?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyIpcEndpointMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
ipcRoutePtr = (const LwSciBufIpcRoute*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= *ipcRoutePtr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
ipcRoutePtr = (const LwSciBufIpcRoute*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= *ipcRoutePtr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyIpcRouteMaxPolicySameKey_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23076117?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyIpcRouteMaxPolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key)
RESULT.CBA.CONTEXT_BEFORE:
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE:
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
;
err = VerifyMaxPolicySameKey(key, ipAttrList, recAttrList, slotIndex);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Reconciled LwSciBufAttrList is not valid against the input unreconciled LwSciBufAttrLists for the key: " "%x\n", __FUNCTION__, key);
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_VerifyMaxPowOf2PolicySameKey_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23076117?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_attr_reconcile.c
RESULT.CBA.FUNCTION: VerifyMaxPowOf2PolicySameKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: if ((0U != val1) && (0U != (val1 & (val1 - 1U))))
RESULT.CBA.CONTEXT_BEFORE:
* either all the values are 0, or there exists a value which is the
* largest power of 2. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((0U != val1) && (0U != (val1 & (val1 - 1U))))
RESULT.CBA.CONTEXT_BEFORE:
* either all the values are 0, or there exists a value which is the
* largest power of 2. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: goto reconcile_fail;
RESULT.CBA.CONTEXT_BEFORE:
{
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if ((LwSciBufAttrStatus_Empty != *ipStatus ) &&
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
if ((0U != val1) && (0U != (val1 & (val1 - 1U))))
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto reconcile_fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 27
RESULT.CBA.LINE.END
RESULT.CBA.END
IMPORT.END