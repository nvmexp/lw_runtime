-- VectorCAST 20.sp5 (12/16/20)
-- Imported Coverage Results Script
IMPORT.BEGIN
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:8
IMPORT.SOURCE.ORIG_FILENAME:/data/embedded_5.2_lts/gpu/drv/drivers/lwsci/tests/lwscibuf/unit/transport_common/LWSCIBUF_TRANSPORT/S0000008.c
IMPORT.SOURCE.TIMESTAMP:0
IMPORT.SOURCE.COVERAGE_STATUS:FALSE
IMPORT.SOURCE.COVERAGE_TYPE:None
IMPORT.SOURCE.FILE_CHECKSUM:0
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:TRUE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:TRUE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_UNKNOWN
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:TRUE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:9
IMPORT.SOURCE.ORIG_FILENAME:/data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_fsm.c
IMPORT.SOURCE.TIMESTAMP:1636362385
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:2941894381
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:11
IMPORT.SOURCE.ORIG_FILENAME:/data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
IMPORT.SOURCE.TIMESTAMP:1637562820
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:3900245565
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
RESULT.CBA.BEGIN
RESULT.CBA.RESULT: CBA_DeserializeLwSciBufObjExportDescPriv_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: OutputFnObjDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
err = DeserializeLwSciBufObjExportDescPriv(&objDesc, value);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
finalPerms = LwSciBufComputeImportObjPerms(minPerms, objDesc.perms);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = DeserializeLwSciBufObjExportDescPriv(&objDesc, value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = DeserializeLwSciBufObjExportDescPriv(&objDesc, value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_1
RESULT.CBA.NOTES
Covered by inspection test: LWSTRMS52-TEST-9508
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcRouteImport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len)
RESULT.CBA.CONTEXT_BEFORE:
if (0U == len) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_BEFORE:
if (0U == len) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n")
RESULT.CBA.CONTEXT_BEFORE:
;
if (0U == len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
RESULT.CBA.CONTEXT_BEFORE:
;
if (0U == len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (0U == len)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufPrivateAttrKeyValuePair keyValPair = {0};
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == len)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufPrivateAttrKeyValuePair keyValPair = {0};
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCRoute.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_10
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement completely
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: *areEqual = 
RESULT.CBA.CONTEXT_BEFORE:
* for other attribute list then it means that they don't match.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: isValidSize = (clonedAttrSize == 
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(importedReconciledList, 0, key,
&importedAttrBaseAddr, &importedAttrStatus, &importedAttrSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: isValidSize = (clonedAttrSize == 
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(importedReconciledList, 0, key,
&importedAttrBaseAddr, &importedAttrStatus, &importedAttrSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: isValidSize = isValidSize || (importedAttrSize == 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: isValidSize = isValidSize || (importedAttrSize == 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if ((uint32_t)LwSciBufGeneralAttrKey_ActualPerm == key) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== isValidSize) || (*clonedAttrSize != *importedAttrSize)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== isValidSize) || (*clonedAttrSize != *importedAttrSize)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_11
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement completely because key cannot be equal to LwSciBufGeneralAttrKey_ActualPerm
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: *areEqual = 
RESULT.CBA.CONTEXT_BEFORE:
*(LwSciBufAttrValAccessPerm *)importedAttrBaseAddr;
if (clonedListActualPerm > importedListActualPerm) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciBufAttrValAccessPerm clonedListActualPerm =
RESULT.CBA.CONTEXT_BEFORE:
* be needed.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*(LwSciBufAttrValAccessPerm *)clonedAttrBaseAddr;
LwSciBufAttrValAccessPerm importedListActualPerm =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: LwSciBufAttrValAccessPerm importedListActualPerm =
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrValAccessPerm clonedListActualPerm =
*(LwSciBufAttrValAccessPerm *)clonedAttrBaseAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*(LwSciBufAttrValAccessPerm *)importedAttrBaseAddr;
if (clonedListActualPerm > importedListActualPerm) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufGeneralAttrKey_ActualPerm == key)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* LwSciBufGeneralAttrKey_ActualPerm is special because when it is
* exported, the reconciled value callwlated from IPC table may
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufGeneralAttrKey_ActualPerm == key)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* LwSciBufGeneralAttrKey_ActualPerm is special because when it is
* exported, the reconciled value callwlated from IPC table may
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: if (clonedListActualPerm > importedListActualPerm)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrValAccessPerm importedListActualPerm =
*(LwSciBufAttrValAccessPerm *)importedAttrBaseAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*areEqual =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (clonedListActualPerm > importedListActualPerm)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrValAccessPerm importedListActualPerm =
*(LwSciBufAttrValAccessPerm *)importedAttrBaseAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*areEqual =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (clonedListActualPerm > importedListActualPerm)
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrValAccessPerm importedListActualPerm =
*(LwSciBufAttrValAccessPerm *)importedAttrBaseAddr;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*areEqual =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_12
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement completely because key cannot be equal to LwSciBufPrivateAttrKey_IPCTable
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: continue;
RESULT.CBA.CONTEXT_BEFORE:
* check.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
cmpResult = LwSciCommonMemcmp(clonedAttrBaseAddr, importedAttrBaseAddr,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufPrivateAttrKey_IPCTable == key)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* comparing IPC table value is tricky because ipc table unit
* exposes LwSciBufIpcTable opaque handle which is stored as part
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((uint32_t)LwSciBufPrivateAttrKey_IPCTable == key)
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* comparing IPC table value is tricky because ipc table unit
* exposes LwSciBufIpcTable opaque handle which is stored as part
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_13
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here cmpResult cannot be 0
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: *areEqual = 
RESULT.CBA.CONTEXT_BEFORE:
*clonedAttrSize);
if (0 != cmpResult) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: if (0 != cmpResult)
RESULT.CBA.CONTEXT_BEFORE:
cmpResult = LwSciCommonMemcmp(clonedAttrBaseAddr, importedAttrBaseAddr,
*clonedAttrSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*areEqual =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0 != cmpResult)
RESULT.CBA.CONTEXT_BEFORE:
cmpResult = LwSciCommonMemcmp(clonedAttrBaseAddr, importedAttrBaseAddr,
*clonedAttrSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
*areEqual =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_14
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here bufType cannot be equal to LwSciBufType_General
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsPerDatatype
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (LwSciBufType_General == bufType)
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* for LwSciBufType_General, start from keyoffset 1 */
keyOffset = 1U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciBufType_General == bufType)
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* for LwSciBufType_General, start from keyoffset 1 */
keyOffset = 1U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: keyOffset = 0U;
RESULT.CBA.CONTEXT_BEFORE:
} else {
/* for other LwSciBufTypes, start from keyoffset 0 */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Public,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_15
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here *areEqual cannot be true
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsPerDatatype
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== *areEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Internal,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_16
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here *areEqual cannot be true
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsPerDatatype
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== *areEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciBufType_General == bufType) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_17
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here bufType cannot be equal to other than LwSciBufType_General
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsPerDatatype
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: if (LwSciBufType_General == bufType)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Private,
(uint32_t)bufType, keyOffset, &iter);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciBufType_General == bufType)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyIterInit((uint32_t)LwSciBufAttrKeyType_Private,
(uint32_t)bufType, keyOffset, &iter);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_18
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here *areEqual cannot be true
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrListsPerDatatype
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== *areEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsHelper(&iter, clonedReconciledList,
importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_19
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here *areEqual cannot be true
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrLists
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== *areEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
keyVal.key = LwSciBufGeneralAttrKey_Types;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsPerDatatype(LwSciBufType_General,
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsPerDatatype(LwSciBufType_General,
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_2
RESULT.CBA.NOTES
Covered by inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcRouteImport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufFreeIpcRoute(&ipcRoute)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
free_ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: LwSciBufFreeIpcRoute(&ipcRoute);
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
free_ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCRoute to attrList.\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCRoute to attrList.\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: goto free_ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCRoute to attrList.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCRoute to attrList.\n");
goto free_ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCRoute to attrList.\n");
goto free_ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_20
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrLists
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs() failed.")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs() failed.");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListCommonGetAttrs() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (0U == keyVal.len) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_21
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here keyVal.len cannot be non-zero
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrLists
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: CompareReconciledAttrListsPerDatatype(bufTypes[index],
RESULT.CBA.CONTEXT_BEFORE:
bufTypes = (const LwSciBufType *)keyVal.value;
for (index = 0U; index < bufLen; index++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
clonedReconciledList, importedReconciledList, areEqual);
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: CompareReconciledAttrListsPerDatatype(bufTypes[index],
RESULT.CBA.CONTEXT_BEFORE:
bufTypes = (const LwSciBufType *)keyVal.value;
for (index = 0U; index < bufLen; index++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
clonedReconciledList, importedReconciledList, areEqual);
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: bufLen = keyVal.len / sizeof(LwSciBufType);
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
bufTypes = (const LwSciBufType *)keyVal.value;
for (index = 0U; index < bufLen; index++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: bufTypes = (const LwSciBufType *)keyVal.value;
RESULT.CBA.CONTEXT_BEFORE:
}
bufLen = keyVal.len / sizeof(LwSciBufType);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
for (index = 0U; index < bufLen; index++) {
CompareReconciledAttrListsPerDatatype(bufTypes[index],
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: for (index = 0U; index < bufLen; index++)
RESULT.CBA.CONTEXT_BEFORE:
bufLen = keyVal.len / sizeof(LwSciBufType);
bufTypes = (const LwSciBufType *)keyVal.value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (index = 0U; index < bufLen; index++)
RESULT.CBA.CONTEXT_BEFORE:
bufLen = keyVal.len / sizeof(LwSciBufType);
bufTypes = (const LwSciBufType *)keyVal.value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (index = 0U; index < bufLen; index++)
RESULT.CBA.CONTEXT_BEFORE:
bufLen = keyVal.len / sizeof(LwSciBufType);
bufTypes = (const LwSciBufType *)keyVal.value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (0U == keyVal.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U == keyVal.len)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_22
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
here *areEqual cannot be false
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CompareReconciledAttrLists
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== *areEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
CompareReconciledAttrListsPerDatatype(bufTypes[index],
clonedReconciledList, importedReconciledList, areEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== *areEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_23
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CheckImportedReconciledListConsistency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListClone() failed.")
RESULT.CBA.CONTEXT_BEFORE:
&clonedReconciledAttrList);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListClone() failed.");
RESULT.CBA.CONTEXT_BEFORE:
&clonedReconciledAttrList);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_ReconciliationFailed == sciErr) {
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_ReconciliationFailed == sciErr) {
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: goto free_conflictlist;
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciError_BadParameter;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = CompareReconciledAttrLists(clonedReconciledAttrList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: if (LwSciError_ReconciliationFailed == sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_ReconciliationFailed == sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_ReconciliationFailed == sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
if (LwSciError_ReconciliationFailed == sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
goto free_conflictlist;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListClone() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* We check the consistency of output attributes in the imported reconciled
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListClone(importedReconciledAttrList,
&clonedReconciledAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListClone() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListClone(importedReconciledAttrList,
&clonedReconciledAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListClone() failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
if (LwSciError_ReconciliationFailed == sciErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufAttrListReconcileInternal() failed.");
if (LwSciError_ReconciliationFailed == sciErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_24
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CheckImportedReconciledListConsistency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "CompareReconciledAttrLists() failed.")
RESULT.CBA.CONTEXT_BEFORE:
importedReconciledAttrList, &areReconciledListsEqual);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_attrlist;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "CompareReconciledAttrLists() failed.");
RESULT.CBA.CONTEXT_BEFORE:
importedReconciledAttrList, &areReconciledListsEqual);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_attrlist;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: goto free_attrlist;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "CompareReconciledAttrLists() failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = CompareReconciledAttrLists(clonedReconciledAttrList,
importedReconciledAttrList, &areReconciledListsEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "CompareReconciledAttrLists() failed.");
goto free_attrlist;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = CompareReconciledAttrLists(clonedReconciledAttrList,
importedReconciledAttrList, &areReconciledListsEqual);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "CompareReconciledAttrLists() failed.");
goto free_attrlist;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_25
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
areReconciledListsEqual cannot be false here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CheckImportedReconciledListConsistency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: goto free_attrlist;
RESULT.CBA.CONTEXT_BEFORE:
== areReconciledListsEqual) {
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
free_attrlist:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
0
== areReconciledListsEqual) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_attrlist;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto free_attrlist;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== areReconciledListsEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto free_attrlist;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== areReconciledListsEqual) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_26
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
conflictList cannot be equal to NULL here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CheckImportedReconciledListConsistency
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufAttrListFree(conflictList)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= conflictList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: LwSciBufAttrListFree(conflictList);
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= conflictList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrListFree(clonedReconciledAttrList);
free_conflictlist:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= conflictList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrListFree(clonedReconciledAttrList);
free_conflictlist:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= conflictList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_27
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufTransportCheckIpcPath
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
/* This should not happen */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
/* This should not happen */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This should not happen */
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This should not happen */
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_28
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufTransportCheckIpcPath
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if ((0U == ipcTableLen) || (
RESULT.CBA.CONTEXT_BEFORE:
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
ipcTableLen = pvtKeyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipcTablePtr)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((0U == ipcTableLen) || (
RESULT.CBA.CONTEXT_BEFORE:
ipcTablePtr = (const LwSciBufIpcTable*)pvtKeyValPair.value;
ipcTableLen = pvtKeyValPair.len;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipcTablePtr)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
* attribute list at all.
*/
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
err = LwSciBufInitIpcTableIter(*ipcTablePtr, ipcEndpoint,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_29
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufTransportCheckIpcPath
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufInitIpcTableIter failed")
RESULT.CBA.CONTEXT_BEFORE:
&ipcTableIter);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufInitIpcTableIter failed");
RESULT.CBA.CONTEXT_BEFORE:
&ipcTableIter);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufInitIpcTableIter failed");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
while (LwSciBufIpcTableIterNext(ipcTableIter)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
,
&ipcTableIter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufInitIpcTableIter failed");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
,
&ipcTableIter);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufInitIpcTableIter failed");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_3
RESULT.CBA.NOTES
Covered by inspection test: LWSTRMS52-TEST-9508
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcTableImport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len)
RESULT.CBA.CONTEXT_BEFORE:
if (0U == len) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_BEFORE:
if (0U == len) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_BadParameter;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n")
RESULT.CBA.CONTEXT_BEFORE:
;
if (0U == len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
RESULT.CBA.CONTEXT_BEFORE:
;
if (0U == len) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: if (0U == len)
RESULT.CBA.CONTEXT_BEFORE:
(void)ipcEndpoint;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U == len)
RESULT.CBA.CONTEXT_BEFORE:
(void)ipcEndpoint;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid inputs to import IPCTable.\n");
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "len \n" "%lu\n", __FUNCTION__, len);
sciErr = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_30
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover while loop completely.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufTransportCheckIpcPath
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: while (LwSciBufIpcTableIterNext(ipcTableIter))
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* we are in the loop implying the IPC path exists */
*ipcPathExists =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (LwSciBufIpcTableIterNext(ipcTableIter))
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* we are in the loop implying the IPC path exists */
*ipcPathExists =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_31
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
MISRA mandates that switch..case shall have default statement.
It is impossible to execute the default statement as "perm" value is check prior to switch statement.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufTransportValidateAccessPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: default:
RESULT.CBA.CONTEXT_BEFORE:
break;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: default:
RESULT.CBA.CONTEXT_BEFORE:
break;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
default:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_4
RESULT.CBA.NOTES
Covered by inspection test: LWSTRMS52-TEST-9511
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcTableImport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufFreeIpcTable(&ipcTable)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
free_ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: LwSciBufFreeIpcTable(&ipcTable);
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
free_ret:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret:
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCTable to attrList.\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCTable to attrList.\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: goto free_ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCTable to attrList.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCTable to attrList.\n");
goto free_ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set imported IPCTable to attrList.\n");
goto free_ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_6
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement because transitioned bool value cannot be false here.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufDeserializeDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
* transitions for every state. As such, everything should either
* transition or we return an error. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciError_Success != fsmOutputErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
* transitions for every state. As such, everything should either
* transition or we return an error. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciError_Success != fsmOutputErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
data.length = keySize;
transitioned = LwSciBufFsmEventProcess(fsm, &data, &fsmOutputErr);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== transitioned) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
data.length = keySize;
transitioned = LwSciBufFsmEventProcess(fsm, &data, &fsmOutputErr);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== transitioned) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_7
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement because fsm.lwrrState always points to static functions attrFsmStateAttrKeys and attrFsmStateNewerAttrKeys
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufImportAttrListDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: err = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
* attrFsmStateNewerAttrKeys state, since we do not define the order
* in which newer attribute keys are serialized. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if ((&attrFsmStateAttrKeys != fsm.lwrrState) &&
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(&attrFsmStateNewerAttrKeys != fsm.lwrrState)) {
/* If we finish parsing from the buffer, but aren't in the final state,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((&attrFsmStateAttrKeys != fsm.lwrrState) &&
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(&attrFsmStateNewerAttrKeys != fsm.lwrrState)) {
/* If we finish parsing from the buffer, but aren't in the final state,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
* in which newer attribute keys are serialized. */
err = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_8
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement because fsm.lwrrState always points to static function objFsmStateObjDesc
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufImportBufObjDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: err = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
* When importing an LwSciBufObj descriptor, this should be the
* objFsmStateObjDesc state. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if (&objFsmStateObjDesc != fsm.lwrrState)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* If we finish parsing from the buffer, but aren't in the final state,
* then this is considered an error.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (&objFsmStateObjDesc != fsm.lwrrState)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* If we finish parsing from the buffer, but aren't in the final state,
* then this is considered an error.
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
* objFsmStateObjDesc state. */
err = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportReconciled_9
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover false part of this if statement.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListReconciledAllSetCheckHelper
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_SetLocked != *tmpStatus) || (0U == *tmpSetLen))
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(reconciledList, 0, key, &tmpBaseAddr, &tmpStatus,
&tmpSetLen);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyGetPolicy(key, &policy);
if ((((policy) == LwSciBuf_IPCEndpointMaxPolicy) || ((policy) == LwSciBuf_IPCRouteMaxPolicy))) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if ((LwSciBufAttrStatus_SetLocked != *tmpStatus) || (0U == *tmpSetLen))
RESULT.CBA.CONTEXT_BEFORE:
LwSciBufAttrGetKeyDetail(reconciledList, 0, key, &tmpBaseAddr, &tmpStatus,
&tmpSetLen);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciBufAttrKeyGetPolicy(key, &policy);
if ((((policy) == LwSciBuf_IPCEndpointMaxPolicy) || ((policy) == LwSciBuf_IPCRouteMaxPolicy))) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufAttrListIpcImportUnreconciled_1
RESULT.CBA.NOTES
Covered by inspection test: LWSTRMS52-TEST-9485
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufValidateImportAttrKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Bad descriptor. Failed to import.")
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== slotIdx)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotSupported;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Bad descriptor. Failed to import.");
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== slotIdx)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotSupported;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Bad descriptor. Failed to import.");
sciErr = LwSciError_NotSupported;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Decode keys. Since this key may potentially be newer, we cannot actually
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== attrList) || (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== attrList) || (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: sciErr = LwSciError_NotSupported;
RESULT.CBA.CONTEXT_BEFORE:
== slotIdx)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Bad descriptor. Failed to import.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufFsmEventProcess_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
transitioned value cannot be false here, so if statement cannot be covered completely.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_fsm.c
RESULT.CBA.FUNCTION: LwSciBufFsmEventProcess
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (transitioned == 
RESULT.CBA.CONTEXT_BEFORE:
}
fsm->lwrrState->stateTransition(fsm, data, &transitioned);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (transitioned == 
RESULT.CBA.CONTEXT_BEFORE:
}
fsm->lwrrState->stateTransition(fsm, data, &transitioned);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufFsmEventProcess_2
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
lwrrState of fsm cannot be null here because transitioned boolean value cannot be true here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_fsm.c
RESULT.CBA.FUNCTION: LwSciBufFsmEventProcess
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: if (fsm->lwrrState == 
RESULT.CBA.CONTEXT_BEFORE:
1
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (fsm->lwrrState == 
RESULT.CBA.CONTEXT_BEFORE:
1
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
* to the caller of any Public API. As such, we can panic here
* since this indicates the FSM wasn't correctly set up. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (fsm->lwrrState->output !=
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
* to the caller of any Public API. As such, we can panic here
* since this indicates the FSM wasn't correctly set up. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (fsm->lwrrState->output !=
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this if statement because dataTypeEnd and lastKey will always be true
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIterateAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
}
// continue if either row or column end is reached in list
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== dataTypeEnd) || (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((
RESULT.CBA.CONTEXT_BEFORE:
}
// continue if either row or column end is reached in list
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== dataTypeEnd) || (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: continue;
RESULT.CBA.CONTEXT_BEFORE:
1
== lastKey)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufAttrKeyDecode(attrKey, &decKey,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_10
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists and objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.")
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists and objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE:
== ipcPathExists) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists and objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists and objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufGetAttrListSlotKeyCountAndSize(reconciledAttrList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_11
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
1U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
1U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, slotCount,
1U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, slotCount,
1U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
// Header: Add LwSciBufTransportAttrKey_AttrListSlotCount value size
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 8
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_13
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 65
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
slotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
slotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 67
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
// Add size of LwSciBufTransportAttrKey_ObjDesc value
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 9
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_14
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 71
RESULT.CBA.CONTEXT: if (1U != status)
RESULT.CBA.CONTEXT_BEFORE:
((uint32_t)(LwSciBufTransportAttrKey_ObjDesc) - (uint32_t)LwSciBufTransportAttrKey_LowerBound)];
u64Add(totalValsSize, keyDescriptor.keysize, &totalValsSize, &status);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 71
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != status)
RESULT.CBA.CONTEXT_BEFORE:
((uint32_t)(LwSciBufTransportAttrKey_ObjDesc) - (uint32_t)LwSciBufTransportAttrKey_LowerBound)];
u64Add(totalValsSize, keyDescriptor.keysize, &totalValsSize, &status);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 74
RESULT.CBA.CONTEXT: sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != status) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 73
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(totalValsSize, keyDescriptor.keysize, &totalValsSize, &status);
if (1U != status) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 72
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(totalValsSize, keyDescriptor.keysize, &totalValsSize, &status);
if (1U != status) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 75
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciCommonTransportAllocTxBufferForKeys(bufparams, totalValsSize,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 10
RESULT.CBA.LINE.END
RESULT.CBA.FUNCTION: LwSciBufObjIpcExport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(accPerm);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(accPerm);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(accPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(accPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufValidateIpcEndpoint(ipcEndpoint);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_15
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufObjIpcExport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get reconciled attribute list from LwSciBufObj")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufObjGetAttrList(bufObj, &attrList);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get reconciled attribute list from LwSciBufObj");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufObjGetAttrList(bufObj, &attrList);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufObjGetAttrList(bufObj, &attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get reconciled attribute list from LwSciBufObj");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufObjGetAttrList(bufObj, &attrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get reconciled attribute list from LwSciBufObj");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get reconciled attribute list from LwSciBufObj");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufTransportCheckIpcPath(attrList, ipcEndpoint,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_16
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufObjIpcExport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.")
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(attrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(attrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_17
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufObjIpcExport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.")
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE:
== ipcPathExists) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, objects must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
(void*)memset(exportData, 0, sizeof(*exportData));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_18
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcExportUnreconciled
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
0U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
0U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: goto unlock_attr_lists;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
// Header: Add LwSciBufTransportAttrKey_AttrListSlotCount value size
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, totalSlotCount,
0U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, totalSlotCount,
0U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_19
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcExportUnreconciled
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 67
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_attr_lists;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.CONTEXT: goto unlock_attr_lists;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciCommonTransportAllocTxBufferForKeys(bufparams, totalValsSize,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 65
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
totalSlotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 65
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
totalSlotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto unlock_attr_lists;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_2
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this because dataType will always be LwSciBufType_General
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIterateAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: exportFn = (dataType == LwSciBufType_General)?
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&dataType, sizeof(dataType),
&tmpDataType, sizeof(tmpDataType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
genAttrKeyTransportDescTable[(uint32_t)keyType][decKey].exportCallback:
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: exportFn = (dataType == LwSciBufType_General)?
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&dataType, sizeof(dataType),
&tmpDataType, sizeof(tmpDataType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
genAttrKeyTransportDescTable[(uint32_t)keyType][decKey].exportCallback:
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_20
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcExportReconciled
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.")
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(reconciledAttrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(reconciledAttrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_21
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcExportReconciled
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.")
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_NotPermitted;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE:
== ipcPathExists) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "When IPC is ilwolved, reconciled LwSciBufAttrLists must flow in the reverse IPC path (ie. originate from the allocator application) of unreconciled LwSciBufAttrLists.");
sciErr = LwSciError_NotPermitted;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufGetAttrListSlotKeyCountAndSize(reconciledAttrList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ipcPathExists) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_22
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAttrListIpcExportReconciled
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
0U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
0U, &bufparams.keyCount);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
&totalValsSize);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, totalSlotCount,
0U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufNumKeysSerialized(2U, totalKeyValPairs, totalSlotCount,
0U, &bufparams.keyCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
totalSlotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
totalSlotCount,
&totalValsSize);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
// Header: Add LwSciBufTransportAttrKey_AttrListSlotCount value size
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciCommonTransportAllocTxBufferForKeys(bufparams, totalValsSize,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 8
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_23
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcImportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufValidateIpcEndpoint(ipcEndpoint);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.FUNCTION: LwSciBufObjIpcImport
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(minPermissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufValidateIpcEndpoint(ipcEndpoint);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_24
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcImportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufObjFree(*bufObj)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= *bufObj) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*bufObj =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: LwSciBufObjFree(*bufObj);
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= *bufObj) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*bufObj =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
fail_free:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= *bufObj) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 10
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
fail_free:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= *bufObj) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 10
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
This checks has been added as per CERT-C/MISRA-C guidelines.
When var1 plus var2 equal to tmpResult so, tmpResult cant't be less than the var1 its always returns OP_SUCCESS.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIterateAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
if (1U != (addStatus1 & addStatus2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
if (1U != (addStatus1 & addStatus2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2))
RESULT.CBA.CONTEXT_BEFORE:
//*attrListSize += keySize
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2))
RESULT.CBA.CONTEXT_BEFORE:
//*attrListSize += keySize
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != (addStatus1 & addStatus2)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_4
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this because appendKeyValue cannot be true here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIterateUmdAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value)
RESULT.CBA.CONTEXT_BEFORE:
}
if (appendKeyValue) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (appendKeyValue)
RESULT.CBA.CONTEXT_BEFORE:
continue;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (appendKeyValue)
RESULT.CBA.CONTEXT_BEFORE:
continue;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
RESULT.CBA.CONTEXT_BEFORE:
}
if (appendKeyValue) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (appendKeyValue) {
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (appendKeyValue) {
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
if (appendKeyValue) {
sciErr = LwSciCommonTransportAppendKeyValuePair(buf, attrKey, keySize, value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unable to append keys to transport buffer.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_5
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
This checks has been added as per CERT-C/MISRA-C guidelines.
When var1 plus var2 equal to tmpResult so, tmpResult cant't be less than the var1 its always returns OP_SUCCESS.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIterateUmdAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
if (1U != (addStatus1 & addStatus2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
if (1U != (addStatus1 & addStatus2)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2))
RESULT.CBA.CONTEXT_BEFORE:
//*attrListSize += keySize
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2))
RESULT.CBA.CONTEXT_BEFORE:
//*attrListSize += keySize
u64Add(*attrListSize, keySize, attrListSize, &addStatus2);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != (addStatus1 & addStatus2)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_6
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this because appendListHeader will always be true here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAppendListHeader
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
uint8_t reconciledFlag = 0;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== appendListHeader) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
uint8_t reconciledFlag = 0;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
== appendListHeader) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_7
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this because LwSciBufAttrListIsReconciled will always return LwSciError_Success here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufAppendListHeader
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attribute list to Prepare for transport.\n")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListIsReconciled(attrList, &isReconciled);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attribute list to Prepare for transport.\n");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListIsReconciled(attrList, &isReconciled);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attribute list to Prepare for transport.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
reconciledFlag = (isReconciled ==
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufAttrListIsReconciled(attrList, &isReconciled);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attribute list to Prepare for transport.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufAttrListIsReconciled(attrList, &isReconciled);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid attribute list to Prepare for transport.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_8
RESULT.CBA.NOTES
Covered by Inspection test: https://lwpu.jamacloud.com/perspective.req#/testCases/23081598?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.")
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(permissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportValidateAccessPerm(permissions);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(permissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
}
sciErr = LwSciBufTransportValidateAccessPerm(permissions);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "wrong parameter LwSciBufAttrValAccessPerm supplied.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sciErr = LwSciBufValidateIpcEndpoint(ipcEndpoint);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufIpcExportAttrListAndObj_9
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.")
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE:
&ipcPathExists);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(reconciledAttrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufTransportCheckIpcPath(reconciledAttrList, ipcEndpoint,
&ipcPathExists);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "LwSciBufTransportCheckIpcPath failed.");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
keySize is always 0 here, so this if statement is not reachable
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufComputeAttrListExportPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(finalPerms, sizeof(*finalPerms), value, keySize)
RESULT.CBA.CONTEXT_BEFORE:
}
if (0U != keySize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
*finalPerms = LwSciBufAccessPerm_Readonly;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: LwSciCommonMemcpyS(finalPerms, sizeof(*finalPerms), value, keySize);
RESULT.CBA.CONTEXT_BEFORE:
}
if (0U != keySize) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
*finalPerms = LwSciBufAccessPerm_Readonly;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (0U != keySize)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(finalPerms, sizeof(*finalPerms), value, keySize);
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U != keySize)
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonMemcpyS(finalPerms, sizeof(*finalPerms), value, keySize);
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.FUNCTION: LwSciBufTotalKeyValSize
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*totalSize, tmpMul, totalSize, &addStatus4);
if (1U != (addStatus1 & addStatus2 & addStatus3 & addStatus4 & mulStatus)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Success;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(*totalSize, tmpMul, totalSize, &addStatus4);
if (1U != (addStatus1 & addStatus2 & addStatus3 & addStatus4 & mulStatus)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Success;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ret:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2 & addStatus3 & addStatus4 & mulStatus))
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(slotCount, keySize3, &tmpMul, &mulStatus);
u64Add(*totalSize, tmpMul, totalSize, &addStatus4);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Success;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2 & addStatus3 & addStatus4 & mulStatus))
RESULT.CBA.CONTEXT_BEFORE:
u64Mul(slotCount, keySize3, &tmpMul, &mulStatus);
u64Add(*totalSize, tmpMul, totalSize, &addStatus4);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Success;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: sciErr = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != (addStatus1 & addStatus2 & addStatus3 & addStatus4 & mulStatus)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_10
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9436
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcTableExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get export descriptor for Ipc Route. \n")
RESULT.CBA.CONTEXT_BEFORE:
exportDesc, len);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get export descriptor for Ipc Route. \n");
RESULT.CBA.CONTEXT_BEFORE:
exportDesc, len);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get export descriptor for Ipc Route. \n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
,
exportDesc, len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get export descriptor for Ipc Route. \n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
,
exportDesc, len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get export descriptor for Ipc Route. \n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_2
RESULT.CBA.NOTES
Covered by Inspection test: https://lwpu.jamacloud.com/perspective.req#/testCases/18857427?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufComputeAttrListExportPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n")
RESULT.CBA.CONTEXT_BEFORE:
}
if (*finalPerms > perms) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_IlwalidOperation;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n");
RESULT.CBA.CONTEXT_BEFORE:
}
if (*finalPerms > perms) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_IlwalidOperation;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.CONTEXT: if (*finalPerms > perms)
RESULT.CBA.CONTEXT_BEFORE:
*finalPerms = LwSciBufAccessPerm_Readonly;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n");
sciErr = LwSciError_IlwalidOperation;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (*finalPerms > perms)
RESULT.CBA.CONTEXT_BEFORE:
*finalPerms = LwSciBufAccessPerm_Readonly;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n");
sciErr = LwSciError_IlwalidOperation;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: sciErr = LwSciError_IlwalidOperation;
RESULT.CBA.CONTEXT_BEFORE:
if (*finalPerms > perms) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Cannot export the object with lesser permissions.\n");
sciErr = LwSciError_IlwalidOperation;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciBufAccessPerm_Auto != perms) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_3
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
exportDesc cannot be NULL here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufComputeActualPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_4
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9436
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufComputeActualPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to allocate memory for calloc. \n")
RESULT.CBA.CONTEXT_BEFORE:
== *exportDesc) {
sciErr = LwSciError_InsufficientMemory;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to allocate memory for calloc. \n");
RESULT.CBA.CONTEXT_BEFORE:
== *exportDesc) {
sciErr = LwSciError_InsufficientMemory;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: sciErr = LwSciError_InsufficientMemory;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== *exportDesc) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to allocate memory for calloc. \n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciError_InsufficientMemory;
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to allocate memory for calloc. \n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* we allocate memory for exportDesc == sizeof(finalPerm)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
*exportDesc = LwSciCommonCalloc(1, sizeof(finalPerm));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== *exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
*exportDesc = LwSciCommonCalloc(1, sizeof(finalPerm));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== *exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_5
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
exportDesc cannot be NULL here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcRouteExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: *len = LwSciBufIpcRouteExportSize(ipcRoute, 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufIpcRouteExportSize(ipcRoute, 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
*/
ipcRoute = *(LwSciBufIpcRoute *)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
*/
ipcRoute = *(LwSciBufIpcRoute *)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_6
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
exportDesc cannot be NULL here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcTableExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
;
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_7
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9436
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcTableExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get Ipc Table from Attrlist to export.\n")
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciBufPrivateAttrKey_IPCTable, &tmpLen, &value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get Ipc Table from Attrlist to export.\n");
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciBufPrivateAttrKey_IPCTable, &tmpLen, &value);
if (LwSciError_Success != sciErr) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != sciErr) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get Ipc Table from Attrlist to export.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
ipcTable = *(LwSciBufIpcTable *)value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListGetPrivilege(attrList, ipcEndpoint, slotIdx,
(uint32_t)LwSciBufPrivateAttrKey_IPCTable, &tmpLen, &value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get Ipc Table from Attrlist to export.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != sciErr)
RESULT.CBA.CONTEXT_BEFORE:
sciErr = LwSciBufAttrListGetPrivilege(attrList, ipcEndpoint, slotIdx,
(uint32_t)LwSciBufPrivateAttrKey_IPCTable, &tmpLen, &value);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to get Ipc Table from Attrlist to export.\n");
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_8
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
ipcTable cannot be NULL here because if valus is null then API under test panics as per SWUD for  LwSciBufAttrListGetPrivilege 
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcTableExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: goto output;
RESULT.CBA.CONTEXT_BEFORE:
== ipcTable) {
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
ipcTable = *(LwSciBufIpcTable *)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipcTable) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
}
ipcTable = *(LwSciBufIpcTable *)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== ipcTable) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== ipcTable) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto output;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 21
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcExport_9
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
exportDesc cannot be NULL here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufGetIpcTableExportDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: *len = LwSciBufIpcTableExportSize(ipcTable, ipcEndpoint, 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciBufIpcTableExportSize(ipcTable, ipcEndpoint, 
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto output;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto output;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== exportDesc) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_1
RESULT.CBA.NOTES
Covered by inspection test: https://lwpu.jamacloud.com/perspective.req#/testCases/23080165?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: ValidateReconciledPerm
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: default:
RESULT.CBA.CONTEXT_BEFORE:
break;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: default:
RESULT.CBA.CONTEXT_BEFORE:
break;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
default:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
{
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_2
RESULT.CBA.NOTES
Covered by Inspection test: LWSTRMS52-TEST-9446
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: OutputFnObjDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set ActualPerm on reconciled attrList.\n")
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_attr_list;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set ActualPerm on reconciled attrList.\n");
RESULT.CBA.CONTEXT_BEFORE:
);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto free_attr_list;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: goto free_attr_list;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set ActualPerm on reconciled attrList.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
attrList = clonedAttrList;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set ActualPerm on reconciled attrList.\n");
goto free_attr_list;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
1
);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to set ActualPerm on reconciled attrList.\n");
goto free_attr_list;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_3
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover this panic condition for LwSciBufObjIpcImport because there is no SWUD for this panic condition
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: CheckTransportKey
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
0
== ((((uint32_t)(expectedKey)) < (uint32_t)LwSciBufTransportAttrKey_UpperBound) && (((uint32_t)(expectedKey)) > (uint32_t)LwSciBufTransportAttrKey_LowerBound))) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
index = ((uint32_t)(expectedKey) - (uint32_t)LwSciBufTransportAttrKey_LowerBound);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
0
== ((((uint32_t)(expectedKey)) < (uint32_t)LwSciBufTransportAttrKey_UpperBound) && (((uint32_t)(expectedKey)) > (uint32_t)LwSciBufTransportAttrKey_LowerBound))) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
index = ((uint32_t)(expectedKey) - (uint32_t)LwSciBufTransportAttrKey_LowerBound);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ((((uint32_t)(expectedKey)) < (uint32_t)LwSciBufTransportAttrKey_UpperBound) && (((uint32_t)(expectedKey)) > (uint32_t)LwSciBufTransportAttrKey_LowerBound))) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== ((((uint32_t)(expectedKey)) < (uint32_t)LwSciBufTransportAttrKey_UpperBound) && (((uint32_t)(expectedKey)) > (uint32_t)LwSciBufTransportAttrKey_LowerBound))) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_4
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered because accept bool value cannot be false here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: ReconciliationFlagGuard
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
0
== accept) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Since we've validated the length, it's now safe to dereference this */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
accept = CheckTransportKey(key,
(uint32_t)LwSciBufTransportAttrKey_AttrListReconciledFlag, length);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== accept) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
accept = CheckTransportKey(key,
(uint32_t)LwSciBufTransportAttrKey_AttrListReconciledFlag, length);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== accept) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_5
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
Defensive Programming - This checks has been added as per CERT-C/MISRA-C guidelines.
When var1 plus var2 equal to tmpResult so, tmpResult cant't be less than the var1 its always returns OP_SUCCESS.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufNumKeysSerialized
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(tmpAdd2, numKeysHeader, &tmpAdd3, &addStatus3);
if (1U != (addStatus1 & addStatus2 & addStatus3)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(tmpAdd2, numKeysHeader, &tmpAdd3, &addStatus3);
if (1U != (addStatus1 & addStatus2 & addStatus3)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2 & addStatus3))
RESULT.CBA.CONTEXT_BEFORE:
u64Add(tmpAdd1, numKeyValPair, &tmpAdd2, &addStatus2);
u64Add(tmpAdd2, numKeysHeader, &tmpAdd3, &addStatus3);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != (addStatus1 & addStatus2 & addStatus3))
RESULT.CBA.CONTEXT_BEFORE:
u64Add(tmpAdd1, numKeyValPair, &tmpAdd2, &addStatus2);
u64Add(tmpAdd2, numKeysHeader, &tmpAdd3, &addStatus3);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (tmpAdd3 >
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != (addStatus1 & addStatus2 & addStatus3)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Buffer overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciBufObjIpcImport_6
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
Defensive Programming - This overflow condition is not reachable.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: LwSciBufNumKeysSerialized
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Casting can cause loss of data\n")
RESULT.CBA.CONTEXT_BEFORE:
(4294967295U)
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Casting can cause loss of data\n");
RESULT.CBA.CONTEXT_BEFORE:
(4294967295U)
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sciErr = LwSciError_Overflow;
goto ret;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: if (tmpAdd3 > 
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(4294967295U)
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (tmpAdd3 > 
RESULT.CBA.CONTEXT_BEFORE:
goto ret;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(4294967295U)
) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Casting can cause loss of data\n");
sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*keyCount = (uint32_t)tmpAdd3;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: sciErr = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Casting can cause loss of data\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ret;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_OutputFnAttributeKeys_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Here dataType cannot be LwSciBufType_General
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: OutputFnAttributeKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: importFn = (dataType == LwSciBufType_General)?
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&dataType, sizeof(dataType),
&tmpDataType, sizeof(tmpDataType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
genAttrKeyTransportDescTable[(uint32_t)decKeyType][decKey].importCallback:
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: importFn = (dataType == LwSciBufType_General)?
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(&dataType, sizeof(dataType),
&tmpDataType, sizeof(tmpDataType));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
genAttrKeyTransportDescTable[(uint32_t)decKeyType][decKey].importCallback:
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_SlotIndexGuard_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover if statement completely because static function SlotIndexGuard cannot return true here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateNewerAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: *transitioned = 
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: fsm->lwrrState = &(attrFsmStateSlotIndex);
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: if ((SlotIndexGuard)(fsm->context, data))
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((SlotIndexGuard)(fsm->context, data))
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
do { if ((SlotIndexGuard)(fsm->context, data)) { fsm->lwrrState = &(attrFsmStateSlotIndex); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
do { if ((NewerAttributeKeysGuard)(fsm->context, data)) { fsm->lwrrState = &(attrFsmStateNewerAttrKeys); *transitioned =
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_SlotIndexGuard_2
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot cover if statement completely because static function SlotIndexGuard cannot return true here
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: *transitioned = 
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: fsm->lwrrState = &(attrFsmStateSlotIndex);
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: if ((SlotIndexGuard)(fsm->context, data))
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((SlotIndexGuard)(fsm->context, data))
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
do { if ((SlotIndexGuard)(fsm->context, data)) { fsm->lwrrState = &(attrFsmStateSlotIndex); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
do { if ((NewerAttributeKeysGuard)(fsm->context, data)) { fsm->lwrrState = &(attrFsmStateNewerAttrKeys); *transitioned =
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateStart
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_10
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateReconciliationFlag
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_11
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateSlotIndex
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_12
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateNewerAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_13
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_2
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateSlotCount
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_3
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateReconciliationFlag
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_4
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateSlotIndex
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_5
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateNewerAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_6
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionattrFsmStateAttrKeys
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_7
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionobjFsmStateStart
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_8
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateStart
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_StateTransitionTable_9
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Defensive Programming - cannot cover do while loop completely because loop terminates in first iteration itself.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateSlotCount
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ValidateReconciledPerm_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
cannot be covered
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: DeserializeLwSciBufObjExportDescPriv
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
error = ValidateReconciledPerm(objDesc->perms);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(objDesc, sizeof(*objDesc), value, sizeof(*objDesc));
error = ValidateReconciledPerm(objDesc->perms);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
LwSciCommonMemcpyS(objDesc, sizeof(*objDesc), value, sizeof(*objDesc));
error = ValidateReconciledPerm(objDesc->perms);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_combinedFsmStateObjDesc_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Dead code
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitioncombinedFsmStateObjDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: (void)data;
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: (void)fsm;
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: *transitioned = 
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: fsm->lwrrState = &(stateError);
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: return;
RESULT.CBA.CONTEXT_BEFORE:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_objFsmStateObjDesc_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Dead code
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionobjFsmStateObjDesc
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: (void)data;
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: (void)fsm;
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: *transitioned = 
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: fsm->lwrrState = &(stateError);
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto ret;
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: return;
RESULT.CBA.CONTEXT_BEFORE:
1
; goto ret; } while (1U == 0U);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: while (1U == 0U)
RESULT.CBA.CONTEXT_BEFORE:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ret: return;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
do { (void)fsm; (void)data; fsm->lwrrState = &(stateError); *transitioned =
1
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_stateError_1
RESULT.CBA.NOTES
Safety-impact (Nill/Low/Mid/High):
Low
Justification:
Dead code
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5.2_lts/gpu/drv/drivers/lwsci/lwscibuf/src/lwscibuf_transport.c
RESULT.CBA.FUNCTION: fsmTransitionstateError
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: (void)data;
RESULT.CBA.CONTEXT_BEFORE:
/* This is a terminal state. There are no transitions in or out. */
(void)fsm;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(void)transitioned;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: (void)fsm;
RESULT.CBA.CONTEXT_BEFORE:
* transitioned) {
/* This is a terminal state. There are no transitions in or out. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(void)data;
(void)transitioned;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: (void)transitioned;
RESULT.CBA.CONTEXT_BEFORE:
(void)fsm;
(void)data;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
/* This is a terminal state. There are no transitions in or out. */
(void)fsm;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.END
IMPORT.END


