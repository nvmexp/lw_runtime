#!/bin/bash -e

# Prompt for user input
clear
echo ""
echo "****************************************************************** Prerequisites ******************************************************************"
echo "* Python3 needs to be installed."
echo "* Bash utility to be installed and OS to be up-to-date with \"sudo apt get update\"."
echo "* Jama Client ID and Secret need to be generated by the logged-in Jama user."
echo "* Test specification needs to be peer-reviewed and approved before proceeding with the upload to Jama."
echo "* The test-script with approved dpjf comments needs to be present in the directory - \"lwsci/tests/lwscistream/unit_tests/<unit name>/test_files\"."
echo "***************************************************************************************************************************************************"
echo ""
echo ""
read -p "Enter the unit name: " UNIT
read -p "Enter your Jama Client ID: " ID
read -p "Enter your Jama Client secret: " SECRET
echo ""

# Export JAMA_ID and JAMA_SECRET
export JAMA_ID=$ID
export JAMA_SECRET=$SECRET

# Jama Project ID
JP_ID="22182"

# Select Jama folder ID based on <unit name> arg
case $UNIT in

    producer)
        JF_ID="LWSTRMS52-FLD-1598"
    ;;

    trackcount)
        JF_ID="LWSTRMS52-FLD-1597"
    ;;

    trackarray)
        JF_ID="LWSTRMS52-FLD-1637"
    ;;

    safeconnection)
        JF_ID="LWSTRMS52-FLD-1590"
    ;;

    consumer)
        JF_ID="LWSTRMS52-FLD-1588"
    ;;

    pool)
        JF_ID="LWSTRMS52-FLD-1596"
    ;;

    queue)
        JF_ID="LWSTRMS52-FLD-1589"
    ;;

    block)
        JF_ID="LWSTRMS52-FLD-1630"
    ;;

    packet)
        JF_ID="LWSTRMS52-FLD-1605"
    ;;

    multicast)
        JF_ID="LWSTRMS52-FLD-1626"
    ;;

    lwscistreamcommon)
        JF_ID="LWSTRMS52-FLD-1595"
    ;;

    lwsciwrap)
        JF_ID="LWSTRMS52-FLD-1639"
    ;;

    publicAPI)
        JF_ID="LWSTRMS52-FLD-1618"
    ;;

    ipcsrc)
        JF_ID="LWSTRMS52-FLD-1635"
    ;;

    ipcdst)
        JF_ID="LWSTRMS52-FLD-1636"
    ;;

    ipccomm)
        JF_ID="LWSTRMS52-FLD-1638"
    ;;

    limiter)
        JF_ID="LWSTRMS52-FLD-1623"
    ;;

    *)
        echo "Error: Invalid unit selected."
        echo ""
        exit 1
    ;;
esac

# Get the TEGRA_TOP folder path
cd ../../../../../../..
TEGRA_TOP=$(pwd)

# cd to LwSciStream root dir
LWSCISTREAM_DIR=$TEGRA_TOP/gpu/drv/drivers/lwsci/lwscistream
cd $LWSCISTREAM_DIR

# Unit Tests Doxyfile
DOXYFILE="Doxyfile_Tier4_Unit_Tests"

# Create a backup of Unit Tests Doxyfile
mv $DOXYFILE ${DOXYFILE}.bak

# Doxyfile INPUT argument
INPUT_LINE="INPUT += ../tests/lwscistream/unit_tests/$UNIT/test_files/"

# Check whether correct INPUT arg is set
INPUT_IS_SET=false

# Copy the content of Unit Tests Doxyfile into a tmp file with modified INPUT arg
while read -r line;
do
    if [[ "$line" == *"INPUT +="* ]] && [[ "$INPUT_IS_SET" == "false" ]]; then
        echo "$INPUT_LINE" >> $DOXYFILE
        INPUT_IS_SET=true
        continue
    elif [[ "${line}" == *"INPUT +="* ]] && [[ "$INPUT_IS_SET" == "true" ]]; then
        echo "" >> $DOXYFILE
    else
        echo "${line}" >> $DOXYFILE
    fi
done < ${DOXYFILE}.bak

# Run Doxygen to generate testcase dpjf xml schema
doxygen $DOXYFILE

# Restore the original Unit Tests Doxyfile
rm $DOXYFILE
mv ${DOXYFILE}.bak $DOXYFILE

# Verify the Doxygen generated testcase dpjf content
echo "----------------------------------------------------------------------------------------------------"
read -p "Testcase dpjf xml schema generated!!! Press any key to verify the xml schema and continue..."
cd xml
grep -r "jama-testcase"

# User confirmation
echo "----------------------------------------------------------------------------------------------------"
echo "Verify the displayed Testcase dpjf content..."
echo ""
read -p "Continue to upload Testcases to Jama? ***Warning: Operation NOT reversible!*** (y/n): " CNF
echo ""

# Upload testcase dpjf xml schema to Jama
if [[ "${CNF,,}" == "y" ]]; then
    cd ../../tools
    python3 update_tests.py $JP_ID $JF_ID $LWSCISTREAM_DIR/xml/namespaceLwSciStream.xml
    echo ""
    echo "### $UNIT Testcases uploaded to Jama successfully! ###"
    echo ""
else
    echo "### Testcases upload to Jama is cancelled & dpjf xml schema is deleted! ###"
    echo ""
fi

#clean up
cd $LWSCISTREAM_DIR
rm -rf html xml

read
exit 0
