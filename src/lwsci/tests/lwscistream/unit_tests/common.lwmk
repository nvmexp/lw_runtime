##############################################################################
# Copyright (c) 2020, LWPU CORPORATION.  All rights reserved.
#
# LWPU CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from LWPU CORPORATION is strictly prohibited.
##############################################################################

##############################################################################
# test_lwscistream_producer makefile
##############################################################################

##############################################################################
# Overriding default toolchain for x86/amd64 target
##############################################################################
ifneq ($(filter amd64 x86,$(LW_TARGET_ARCH)),)
    override LW_TOOLCHAIN := gcc-7.3.0as2-glibc-2.11.3
endif

##############################################################################
# Enabling the exceptions
##############################################################################

LW_CXX_EXCEPTIONS = 1

##############################################################################
# Identify this module to lwCommon.lwmk so it can decide the build type
##############################################################################

LW_MODULE_BUILD_TYPE_ALIASES = lwscistream

include $(LW_SOURCE)/drivers/lwsci/lwsci.lwmk
include $(LW_SOURCE)/drivers/common/build/lwCommon.lwmk
include $(LW_SOURCE)/drivers/common/build/lwconfig.lwmk
include $(LW_SOURCE)/drivers/lwsci/tests/gtest/gtest.lwmk
include $(LW_SOURCE)/drivers/lwsci/tests/gtest/gmock.lwmk

##############################################################################
# path shorthands
##############################################################################

LWSCI_PATH                := $(LW_SOURCE)/drivers/lwsci
LWSCISTREAM_PATH          := $(LWSCI_PATH)/lwscistream
LWSCISTREAM_INC_PATH      := $(LWSCI_PATH)/lwscistream/inc
LWSCISTREAM_SRC_PATH      := $(LWSCI_PATH)/lwscistream/src
LWSCI_TESTS_PATH          := $(LWSCI_PATH)/tests

##############################################################################
# define LW_INCLUDES
##############################################################################

ifeq ($(LW_TEGRA_MIRROR_INCLUDES), 1)
# get lwrm headers from sdk/inc and RMAPI_TEGRA_MIRROR if we are building
# perforce tree.
  LW_INCLUDES += $(LW_SOURCE)/sdk/lwpu/inc
  LW_INCLUDES += $(RMAPI_TEGRA_MIRROR_INCLUDES)
else
ifeq ($(LW_TEGRA_DIRECT_INCLUDES), 1)
# get lwrm headers directly from core/include
  LW_INCLUDES += $(TEGRA_TOP)/core/include
endif
endif

# include x86 headers
ifeq ($(LW_BACKEND_RESMAN), 1)
  include $(LW_SOURCE)/drivers/unix/rmapi_tegra/mirror/rmapi_tegra_mirror.lwmk
  LW_INCLUDES += $(LW_SOURCE)/sdk/lwpu/inc
  LW_INCLUDES += $(RMAPI_TEGRA_MIRROR_INCLUDES)
endif

LW_INCLUDES += $(OUTPUTDIR)

##############################################################################
# define CFLAGS
##############################################################################

CFLAGS += -fpermissive -w

##############################################################################
# define LW_DEFINES
##############################################################################

# For lwmake builds, lwcfg feature flags are available to LWSCI.
ifdef LWCFG_INITIALIZED
  LW_DEFINES += LWCFG_ENABLED
endif

# Embedded defines this on the command line for their builds.
LW_BUILD_EMBEDDED ?= 0

ifeq ($(LW_BUILD_EMBEDDED),1)
    LW_DEFINES += LW_BUILD_EMBEDDED=1
endif

LW_NEEDS_UNSTRIPPED = 1
LW_SUPPORTS_SEPARATE_DEBUG_INFO = 1

ifneq ($(filter amd64 x86,$(LW_TARGET_ARCH)),)
  # The available X86 toochain configuation that supports C++11/14 and uses recent
  # enough glibc is gcc-7.3.0as2-glibc-2.11.3.
  # However with this toolchain, the following WAR is required for a successful build.
  ifeq ($(LW_TOOLCHAIN), gcc-7.3.0as2-glibc-2.11.3)
    LW_DEFINES += __USE_XOPEN2K8
  endif
endif

##############################################################################
# library flags
##############################################################################

CXX_STD = c++14

LDFLAGS += $(PTHREAD_LDFLAGS)
LDFLAGS += -lm
ifneq ($(LW_TARGET_OS), QNX)
  LDFLAGS += -lrt
  LDFLAGS += -lstdc++
else
  LDFLAGS += -lc++
endif
LDFLAGS += -g
LDFLAGS += -L $(OUTPUTDIR)
LDFLAGS += $(BIN_LDFLAGS)

##############################################################################
#  warning/error flags
##############################################################################
# Disable treating unsed-parameter as error.
# This is required since a patilwlar unit can utlilize only certain parameters
# in the header stubs.
LW_WARNINGS_NOERROR += unused-parameter

