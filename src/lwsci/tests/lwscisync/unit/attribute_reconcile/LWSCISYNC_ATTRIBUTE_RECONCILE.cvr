-- VectorCAST 20.sp5 (12/16/20)
-- Imported Coverage Results Script
IMPORT.BEGIN
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:8
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/tests/lwscisync/unit/attribute_reconcile/LWSCISYNC_ATTRIBUTE_RECONCILE/S0000008.c
IMPORT.SOURCE.TIMESTAMP:0
IMPORT.SOURCE.COVERAGE_STATUS:FALSE
IMPORT.SOURCE.COVERAGE_TYPE:None
IMPORT.SOURCE.FILE_CHECKSUM:0
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:TRUE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:TRUE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_UNKNOWN
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:TRUE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:9
IMPORT.SOURCE.ORIG_FILENAME:/home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
IMPORT.SOURCE.TIMESTAMP:1638791588
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:3473672788
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
RESULT.CBA.BEGIN
RESULT.CBA.RESULT: CBA_AttrListValidateReconciledCheckArgs_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
Defensive programming, All parameters passed to LwSciSyncAttrListIsReconciled() are local variables, and hence LwSciBufAttrKeyDecode cannot return error code.
This check although impossible is added as defensive programming.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: AttrListValidateReconciledCheckArgs
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid argument: reconciledAttrList")
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListIsReconciled(reconciledAttrList, &isReconciled);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid argument: reconciledAttrList");
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListIsReconciled(reconciledAttrList, &isReconciled);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListIsReconciled(reconciledAttrList, &isReconciled);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid argument: reconciledAttrList");
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListIsReconciled(reconciledAttrList, &isReconciled);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid argument: reconciledAttrList");
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != error) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid argument: reconciledAttrList");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CopyIpcPermTable_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: CopyIpcPermTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciError error = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
size_t i = 0;
size_t permIndex = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreIpcTableTreeAlloc(
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&newCoreAttrList->ipcTable, branchNum);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: error = LwSciSyncCoreIpcTableTreeAlloc(
RESULT.CBA.CONTEXT_BEFORE:
}
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&newCoreAttrList->ipcTable, branchNum);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: return error;
RESULT.CBA.CONTEXT_BEFORE:
}
fn_exit:
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: size_t branchNum = 0U;
RESULT.CBA.CONTEXT_BEFORE:
size_t i = 0;
size_t permIndex = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: size_t i = 0;
RESULT.CBA.CONTEXT_BEFORE:
{
LwSciError error = LwSciError_Success;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
size_t permIndex = 0U;
size_t branchNum = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: size_t permIndex = 0U;
RESULT.CBA.CONTEXT_BEFORE:
LwSciError error = LwSciError_Success;
size_t i = 0;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
size_t branchNum = 0U;
uint8_t addStatus = 0U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: uint8_t addStatus = 0U;
RESULT.CBA.CONTEXT_BEFORE:
size_t permIndex = 0U;
size_t branchNum = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
size_t branchNum = 0U;
uint8_t addStatus = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciSyncCoreIpcTableRouteIsEmpty(
&objAttrList->coreAttrList[i].ipcTable) ==
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
size_t branchNum = 0U;
uint8_t addStatus = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciSyncCoreIpcTableRouteIsEmpty(
&objAttrList->coreAttrList[i].ipcTable) ==
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
size_t branchNum = 0U;
uint8_t addStatus = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciSyncCoreIpcTableRouteIsEmpty(
&objAttrList->coreAttrList[i].ipcTable) ==
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreIpcTableTreeAlloc(
&newCoreAttrList->ipcTable, branchNum);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreIpcTableTreeAlloc(
&newCoreAttrList->ipcTable, branchNum);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciError error = LwSciError_Success;
size_t i = 0;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 22
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
/** Copy Ipc route entry from core attr list to Ipc Perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/** Copy Ipc route entry from core attr list to Ipc Perm table */
if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/** Copy Ipc route entry from core attr list to Ipc Perm table */
if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/** Copy Ipc route entry from core attr list to Ipc Perm table */
if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
/** Copy Ipc route entry from core attr list to Ipc Perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
/** Copy Ipc route entry from core attr list to Ipc Perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CopyIpcPermTable_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
The check has been added due to CERT-C violation, hence cannot be removed.
Hence this issue cannot be fixed and is non-safety impacting
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: CopyIpcPermTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreIpcTableAddBranch(
RESULT.CBA.CONTEXT_BEFORE:
0
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&newCoreAttrList->ipcTable, permIndex,
&objAttrList->coreAttrList[i].ipcTable,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: error = LwSciSyncCoreIpcTableAddBranch(
RESULT.CBA.CONTEXT_BEFORE:
0
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&newCoreAttrList->ipcTable, permIndex,
&objAttrList->coreAttrList[i].ipcTable,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: sizeAdd(branchNum, 1U, &branchNum, &addStatus)
RESULT.CBA.CONTEXT_BEFORE:
0
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: sizeAdd(branchNum, 1U, &branchNum, &addStatus);
RESULT.CBA.CONTEXT_BEFORE:
0
) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: sizeAdd(permIndex, 1U, &permIndex, &addStatus)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.CONTEXT: sizeAdd(permIndex, 1U, &permIndex, &addStatus);
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(branchNum, 1U, &branchNum, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(branchNum, 1U, &branchNum, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
) {
sizeAdd(branchNum, 1U, &branchNum, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
) {
sizeAdd(branchNum, 1U, &branchNum, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
) {
sizeAdd(branchNum, 1U, &branchNum, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
uint8_t addStatus = 0U;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
}
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
}
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
}
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
objAttrList->coreAttrList[i].attrs.needCpuAccess,
objAttrList->coreAttrList[i].attrs.requiredPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
objAttrList->coreAttrList[i].attrs.needCpuAccess,
objAttrList->coreAttrList[i].attrs.requiredPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
/** Copy Ipc route entry from core attr list to Ipc Perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 21
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncCoreIpcTableRouteIsEmpty(
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
/** Copy Ipc route entry from core attr list to Ipc Perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
&objAttrList->coreAttrList[i].ipcTable) ==
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_CopyIpcPermTable_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078369?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: CopyIpcPermTable
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
&newCoreAttrList->ipcTable, branchNum);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreIpcTableTreeAlloc(
&newCoreAttrList->ipcTable, branchNum);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreIpcTableTreeAlloc(
&newCoreAttrList->ipcTable, branchNum);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
objAttrList->coreAttrList[i].attrs.requiredPerm);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
sizeAdd(permIndex, 1U, &permIndex, &addStatus);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
objAttrList->coreAttrList[i].attrs.needCpuAccess,
objAttrList->coreAttrList[i].attrs.requiredPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
objAttrList->coreAttrList[i].attrs.needCpuAccess,
objAttrList->coreAttrList[i].attrs.requiredPerm);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncAttrListReconcile_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/22974341?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 27
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n")
RESULT.CBA.CONTEXT_BEFORE:
reconciledPerm = newObjAttrList->coreAttrList->attrs.actualPerm;
if (LwSciSyncAccessPerm_WaitSignal != reconciledPerm) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_ReconciliationFailed;
goto fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n");
RESULT.CBA.CONTEXT_BEFORE:
reconciledPerm = newObjAttrList->coreAttrList->attrs.actualPerm;
if (LwSciSyncAccessPerm_WaitSignal != reconciledPerm) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_ReconciliationFailed;
goto fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: error = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciSyncAccessPerm_WaitSignal != reconciledPerm) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (LwSciSyncAccessPerm_WaitSignal != reconciledPerm)
RESULT.CBA.CONTEXT_BEFORE:
}
reconciledPerm = newObjAttrList->coreAttrList->attrs.actualPerm;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n");
error = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncAccessPerm_WaitSignal != reconciledPerm)
RESULT.CBA.CONTEXT_BEFORE:
}
reconciledPerm = newObjAttrList->coreAttrList->attrs.actualPerm;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n");
error = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: goto fail;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Invalid signaler/waiter perms.\n");
error = LwSciError_ReconciliationFailed;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Determine the reconciled primitive */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncAttrListReconcile_2
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
LwSciSyncCoreAttrListsUnlock() cannot return any error because, it returns error only if inputArray of LwSciSyncAttrLists is NULL, but this has already been validated in LwSciSyncCoreAttrListsLock().
Hence to the only way to fix this is ignore the return value, but this cannot be done due to MISRA violation.
Hence this cannot be fixed and is non-safety impacting.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 70
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 69
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciError_Success != err) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n")
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 67
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
RESULT.CBA.CONTEXT_BEFORE:
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
if (LwSciError_Success != err) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != err)
RESULT.CBA.CONTEXT_BEFORE:
}
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Could not unlock Attribute Lists\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncAttrListReconcile_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: *newConflictList = 
RESULT.CBA.CONTEXT_BEFORE:
} else {
// LwSciError_Success branch, clean-up unreconciled list
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.CONTEXT: *newReconciledList = multiSlotAttrList;
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
fail:
{
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: CopyIpcPermTable(objAttrList, newCoreAttrList)
RESULT.CBA.CONTEXT_BEFORE:
/** Create IPC perm table */
newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != error) {
goto fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: ReconcileUseExternalPrimitive(objAttrList, newObjAttrList)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Determine whether we need to allocate a primitive or not */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ReconcileWaiterContextInsensitiveFenceExports(objAttrList, newObjAttrList);
/** Create IPC perm table */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: ReconcileUseExternalPrimitive(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE:
}
/* Determine whether we need to allocate a primitive or not */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
ReconcileWaiterContextInsensitiveFenceExports(objAttrList, newObjAttrList);
/** Create IPC perm table */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: ReconcileWaiterContextInsensitiveFenceExports(objAttrList, newObjAttrList)
RESULT.CBA.CONTEXT_BEFORE:
/* Determine whether we need to allocate a primitive or not */
ReconcileUseExternalPrimitive(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/** Create IPC perm table */
newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: ReconcileWaiterContextInsensitiveFenceExports(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE:
/* Determine whether we need to allocate a primitive or not */
ReconcileUseExternalPrimitive(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/** Create IPC perm table */
newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 39
RESULT.CBA.CONTEXT: error = CopyIpcPermTable(objAttrList, newCoreAttrList);
RESULT.CBA.CONTEXT_BEFORE:
/** Create IPC perm table */
newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciError_Success != error) {
goto fail;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.CONTEXT: newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_BEFORE:
ReconcileWaiterContextInsensitiveFenceExports(objAttrList, newObjAttrList);
/** Create IPC perm table */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 43
RESULT.CBA.CONTEXT: newObjAttrList->state = LwSciSyncCoreAttrListState_Reconciled;
RESULT.CBA.CONTEXT_BEFORE:
goto fail;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
newObjAttrList->writable =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: newObjAttrList->writable = 
RESULT.CBA.CONTEXT_BEFORE:
}
newObjAttrList->state = LwSciSyncCoreAttrListState_Reconciled;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncAttrListFree(newUnreconciledAttrList)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: LwSciSyncAttrListFree(newUnreconciledAttrList);
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
err = LwSciSyncCoreAttrListsUnlock(inputArray, inputCount);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: goto fail;
RESULT.CBA.CONTEXT_BEFORE:
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
newObjAttrList->state = LwSciSyncCoreAttrListState_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
/* Determine the reconciled primitive */
error = ReconcilePrimitiveInfo(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
/* Determine the reconciled primitive */
error = ReconcilePrimitiveInfo(objAttrList, newObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
newCoreAttrList = newObjAttrList->coreAttrList;
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
newCoreAttrList = newObjAttrList->coreAttrList;
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncAttrListFree(newUnreconciledAttrList);
LwSciSyncAttrListFree(multiSlotAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
// For all other failures do clean-up
*newReconciledList =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncAttrListFree(newUnreconciledAttrList);
LwSciSyncAttrListFree(multiSlotAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
// For all other failures do clean-up
*newReconciledList =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncAttrListReconcile_4
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078369?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
newCoreAttrList = newObjAttrList->coreAttrList;
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
newCoreAttrList = newObjAttrList->coreAttrList;
error = CopyIpcPermTable(objAttrList, newCoreAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fail;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncAttrListReconcile_5
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078369?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncAttrListReconcile
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: goto ilwalid_args;
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreAttrListsLock(inputArray, inputCount);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/** prepare new AttrLists */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncCoreAttrListsLock(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ilwalid_args;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncCoreAttrListsLock(inputArray, inputCount);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto ilwalid_args;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncCoreAttrListValidateReconciledWithLocks2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078236?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncCoreAttrListValidateReconciledWithLocks
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "failed to allocate memory.\n")
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== tempObjAttrList.coreAttrList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_InsufficientMemory;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 33
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "failed to allocate memory.\n");
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== tempObjAttrList.coreAttrList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_InsufficientMemory;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: error = LwSciError_InsufficientMemory;
RESULT.CBA.CONTEXT_BEFORE:
== tempObjAttrList.coreAttrList) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "failed to allocate memory.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "failed to allocate memory.\n");
error = LwSciError_InsufficientMemory;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
tempObjAttrList.numCoreAttrList = 1U;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
(LwSciSyncCoreAttrList*)LwSciCommonCalloc(1U,
sizeof(LwSciSyncCoreAttrList));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== tempObjAttrList.coreAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
(LwSciSyncCoreAttrList*)LwSciCommonCalloc(1U,
sizeof(LwSciSyncCoreAttrList));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== tempObjAttrList.coreAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncCoreAttrListValidateReconciledWithLocks_1
RESULT.CBA.NOTES
Covered by insspectio test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23077908?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: EnsureSameModule
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Incompatible modules\n")
RESULT.CBA.CONTEXT_BEFORE:
0
== isModuleDup) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Incompatible modules\n");
RESULT.CBA.CONTEXT_BEFORE:
0
== isModuleDup) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
== isModuleDup) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Incompatible modules\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Incompatible modules\n");
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreModuleIsDup(reconciledObjAttrList->module,
unreconciledObjAttrList->module, &isModuleDup);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== isModuleDup) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreModuleIsDup(reconciledObjAttrList->module,
unreconciledObjAttrList->module, &isModuleDup);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
0
== isModuleDup) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.FUNCTION: LwSciSyncCoreAttrListValidateReconciledWithLocks
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 24
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
reconciledObjAttrList);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = EnsureSameModule(unreconciledObjAttrList,
reconciledObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 23
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = EnsureSameModule(unreconciledObjAttrList,
reconciledObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncCoreAttrListValidateReconciledWithLocks_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/22974355?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncCoreAttrListValidateReconciledWithLocks
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Insufficient Reconciled list permissions\n")
RESULT.CBA.CONTEXT_BEFORE:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
tempObjAttrList.coreAttrList->attrs.actualPerm)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Insufficient Reconciled list permissions\n");
RESULT.CBA.CONTEXT_BEFORE:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
tempObjAttrList.coreAttrList->attrs.actualPerm)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 45
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Reconciled attri list must have at least wait permissions\n")
RESULT.CBA.CONTEXT_BEFORE:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
LwSciSyncAccessPerm_WaitOnly)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 44
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Reconciled attri list must have at least wait permissions\n");
RESULT.CBA.CONTEXT_BEFORE:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
LwSciSyncAccessPerm_WaitOnly)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_BadParameter;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 46
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncAccessPerm_WaitOnly)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Reconciled attri list must have at least wait permissions\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.CONTEXT: if (LwSciSyncCorePermLessThan(
RESULT.CBA.CONTEXT_BEFORE:
/* Ignore any value set in RequiredPerm */
/* Verify actual perm */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
LwSciSyncAccessPerm_WaitOnly)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 42
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncCorePermLessThan(
RESULT.CBA.CONTEXT_BEFORE:
/* Ignore any value set in RequiredPerm */
/* Verify actual perm */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
LwSciSyncAccessPerm_WaitOnly)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
tempObjAttrList.coreAttrList->attrs.actualPerm)) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Insufficient Reconciled list permissions\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: if (LwSciSyncCorePermLessThan(
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
tempObjAttrList.coreAttrList->attrs.actualPerm)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncCorePermLessThan(
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
reconciledObjAttrList->coreAttrList->attrs.actualPerm,
tempObjAttrList.coreAttrList->attrs.actualPerm)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Reconciled attri list must have at least wait permissions\n");
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Insufficient Reconciled list permissions\n");
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Verify CPU access. It is failure if unreconciled attrList has
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncCoreAttrListValidateReconciledWithLocks_4
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23080169?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncCoreAttrListValidateReconciledWithLocks
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: if (0U != inputUnreconciledAttrListCount)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciSyncCoreAttrListAppendUnreconciledWithLocks(
inputUnreconciledAttrListArray, inputUnreconciledAttrListCount,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U != inputUnreconciledAttrListCount)
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciSyncCoreAttrListAppendUnreconciledWithLocks(
inputUnreconciledAttrListArray, inputUnreconciledAttrListCount,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreAttrListGetObjFromRef(reconciledAttrList,
&reconciledObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 20
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreAttrListGetObjFromRef(reconciledAttrList,
&reconciledObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 10
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
!= unreconciledObjAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 10
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncCoreAttrListValidateReconciledWithLocks_5
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23080657?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: LwSciSyncCoreAttrListValidateReconciledWithLocks
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = ReconcilePerms(unreconciledObjAttrList,
&tempObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 40
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = ReconcilePerms(unreconciledObjAttrList,
&tempObjAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 41
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
&tempObjAttrList);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_PrepareObjAttrList_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078369?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: PrepareObjAttrList
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
, newUnreconciledAttrList);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciSyncCoreAttrListGetObjFromRef(*newUnreconciledAttrList,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
0
, newUnreconciledAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
0
, newUnreconciledAttrList);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcilePrimitiveInfo_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil

Justification:
"numSignaler" is incremented by 1 atmost "objAttrList->numCoreAttrList" times, which can never be larget than UINT64_MAX, hence this condition can never be hit.
The check has been added due to CERT-C violation, hence cannot be removed.
Hence this issue cannot be fixed and is non-safety impacting.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcilePrimitiveInfo
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 30
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n")
RESULT.CBA.CONTEXT_BEFORE:
u64Add(numSignaler, 1U, &numSignaler, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_Overflow;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 29
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n");
RESULT.CBA.CONTEXT_BEFORE:
u64Add(numSignaler, 1U, &numSignaler, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_Overflow;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 31
RESULT.CBA.CONTEXT: error = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
&objAttrList->coreAttrList[i])) {
u64Add(numSignaler, 1U, &numSignaler, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n");
error = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 28
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
&objAttrList->coreAttrList[i])) {
u64Add(numSignaler, 1U, &numSignaler, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n");
error = LwSciError_Overflow;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 32
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "numSignaler value is out of range.\n");
error = LwSciError_Overflow;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Colwert primitive info to masked variable and update final mask */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcilePrimitiveInfo_2
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078377?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcilePrimitiveInfo
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 54
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n")
RESULT.CBA.CONTEXT_BEFORE:
/* Fail in case of no common primitive */
if (0UL == reconciledPrimitiveMask) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_UnsupportedConfig;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 53
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
RESULT.CBA.CONTEXT_BEFORE:
/* Fail in case of no common primitive */
if (0UL == reconciledPrimitiveMask) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciError_UnsupportedConfig;
goto fn_exit;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: if (0UL == reconciledPrimitiveMask)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Fail in case of no common primitive */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0UL == reconciledPrimitiveMask)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Fail in case of no common primitive */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.CONTEXT: if (1U != numSignaler)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Multi-signaler & no signaler case is not supported */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Invalid number of signalers:\n" "%lu\n", __FUNCTION__, numSignaler);
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 47
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (1U != numSignaler)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Multi-signaler & no signaler case is not supported */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: " "Invalid number of signalers:\n" "%lu\n", __FUNCTION__, numSignaler);
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 55
RESULT.CBA.CONTEXT: error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_BEFORE:
if (0UL == reconciledPrimitiveMask) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
} else {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
} else {
keyState = LwSciSyncCoreAttrKeyState_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcilePrimitiveInfo_3
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcilePrimitiveInfo
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_BEFORE:
}
/* Update the internal keys */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs->signalerPrimitiveInfo[0] = reconciledPrimitiveInfo;
attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 65
RESULT.CBA.CONTEXT: attrs->signalerPrimitiveCount = reconciledPrimitiveCount;
RESULT.CBA.CONTEXT_BEFORE:
attrs->signalerPrimitiveInfo[0] = reconciledPrimitiveInfo;
attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs->valSize[LwSciSyncCoreKeyToIndex(
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.CONTEXT: attrs->signalerPrimitiveInfo[0] = reconciledPrimitiveInfo;
RESULT.CBA.CONTEXT_BEFORE:
/* Update the internal keys */
attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
attrs->signalerPrimitiveCount = reconciledPrimitiveCount;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 64
RESULT.CBA.CONTEXT: attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
RESULT.CBA.CONTEXT_BEFORE:
attrs = &newObjAttrList->coreAttrList->attrs;
attrs->signalerPrimitiveInfo[0] = reconciledPrimitiveInfo;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs->signalerPrimitiveCount = reconciledPrimitiveCount;
attrs->valSize[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
(1ULL << (size_t)signalerPrimitiveInfo[i]))) {
reconciledPrimitiveInfo = signalerPrimitiveInfo[i];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.CONTEXT: for (i = 0U; (signalerPrimitiveInfo[i] !=
RESULT.CBA.CONTEXT_BEFORE:
}
/* Final type is the first type proposed by signaler which everyone aligns with */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0U; (signalerPrimitiveInfo[i] !=
RESULT.CBA.CONTEXT_BEFORE:
}
/* Final type is the first type proposed by signaler which everyone aligns with */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 58
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0U; (signalerPrimitiveInfo[i] !=
RESULT.CBA.CONTEXT_BEFORE:
}
/* Final type is the first type proposed by signaler which everyone aligns with */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; (signalerPrimitiveInfo[i] !=
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(1ULL << (size_t)signalerPrimitiveInfo[i]))) {
reconciledPrimitiveInfo = signalerPrimitiveInfo[i];
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; (signalerPrimitiveInfo[i] !=
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(1ULL << (size_t)signalerPrimitiveInfo[i]))) {
reconciledPrimitiveInfo = signalerPrimitiveInfo[i];
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (0U !=(reconciledPrimitiveMask &
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; (signalerPrimitiveInfo[i] !=
LwSciSyncInternalAttrValPrimitiveType_LowerBound); i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(1ULL << (size_t)signalerPrimitiveInfo[i]))) {
reconciledPrimitiveInfo = signalerPrimitiveInfo[i];
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.CONTEXT: if (0UL == reconciledPrimitiveMask)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Fail in case of no common primitive */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (0UL == reconciledPrimitiveMask)
RESULT.CBA.CONTEXT_BEFORE:
}
/* Fail in case of no common primitive */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Unsupported configuration\n");
error = LwSciError_UnsupportedConfig;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 57
RESULT.CBA.CONTEXT: keyState = LwSciSyncCoreAttrKeyState_Reconciled;
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
/* Final type is the first type proposed by signaler which everyone aligns with */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.CONTEXT: reconciledPrimitiveInfo = signalerPrimitiveInfo[i];
RESULT.CBA.CONTEXT_BEFORE:
if (0U !=(reconciledPrimitiveMask &
(1ULL << (size_t)signalerPrimitiveInfo[i]))) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 72
RESULT.CBA.CONTEXT: attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
sizeof(reconciledPrimitiveCount);
/* Update the internal keys status */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] = keyState;
attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 66
RESULT.CBA.CONTEXT: attrs->valSize[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
attrs->signalerPrimitiveCount = reconciledPrimitiveCount;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 74
RESULT.CBA.CONTEXT: attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->keyState[LwSciSyncCoreKeyToIndex(
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] = keyState;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] = keyState;
attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 68
RESULT.CBA.CONTEXT: attrs->valSize[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 67
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->waiterPrimitiveInfo[0] = reconciledPrimitiveInfo;
attrs->signalerPrimitiveCount = reconciledPrimitiveCount;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 76
RESULT.CBA.CONTEXT: attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->keyState[LwSciSyncCoreKeyToIndex(
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] = keyState;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount)] = keyState;
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 70
RESULT.CBA.CONTEXT: attrs->valSize[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount)] =
sizeof(reconciledPrimitiveCount);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 69
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 71
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] =
sizeof(reconciledPrimitiveInfo);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount)] =
sizeof(reconciledPrimitiveCount);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 73
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
sizeof(reconciledPrimitiveCount);
/* Update the internal keys status */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] = keyState;
attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 6
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 75
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->keyState[LwSciSyncCoreKeyToIndex(
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveInfo)] = keyState;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] = keyState;
attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 7
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 77
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->keyState[LwSciSyncCoreKeyToIndex(
(uint32_t)LwSciSyncInternalAttrKey_WaiterPrimitiveInfo)] = keyState;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount)] = keyState;
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 8
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcilePrimitiveInfo_4
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcilePrimitiveInfo
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 18
RESULT.CBA.CONTEXT: LwSciSyncCoreGetSupportedPrimitives(supportedPrimitives,
RESULT.CBA.CONTEXT_BEFORE:
sizeof(supportedPrimitives));
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sizeof(supportedPrimitives));
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 19
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreGetSupportedPrimitives(supportedPrimitives,
RESULT.CBA.CONTEXT_BEFORE:
sizeof(supportedPrimitives));
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
sizeof(supportedPrimitives));
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.CONTEXT: if (newObjAttrList->coreAttrList->attrs.needCpuAccess)
RESULT.CBA.CONTEXT_BEFORE:
}
/** set supported primitives info in reconciledPrimitiveMask */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncCoreCopyCpuPrimitives(supportedPrimitives,
sizeof(supportedPrimitives));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 15
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (newObjAttrList->coreAttrList->attrs.needCpuAccess)
RESULT.CBA.CONTEXT_BEFORE:
}
/** set supported primitives info in reconciledPrimitiveMask */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncCoreCopyCpuPrimitives(supportedPrimitives,
sizeof(supportedPrimitives));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcileUseExternalPrimitive_1
RESULT.CBA.NOTES
Covered by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcileUseExternalPrimitive
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
RESULT.CBA.CONTEXT_BEFORE:
* Attribute Lists. */
for (i = 0; i < objAttrList->numCoreAttrList; ++i) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)) {
/* This is the Signaler's attribute list */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: LwSciSyncCoreAttrList* newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncInternalAttrValPrimitiveType reconciledPrimitiveType =
LwSciSyncInternalAttrValPrimitiveType_UpperBound;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
_Bool
isCpuSignaler =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0; i < objAttrList->numCoreAttrList; ++i) {
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This is the Signaler's attribute list */
isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: LwSciSyncInternalAttrValPrimitiveType reconciledPrimitiveType =
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncInternalAttrValPrimitiveType_UpperBound;
LwSciSyncCoreAttrList* newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: _Bool 
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncInternalAttrValPrimitiveType_UpperBound;
LwSciSyncCoreAttrList* newCoreAttrList = newObjAttrList->coreAttrList;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
isCpuSignaler =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: break;
RESULT.CBA.CONTEXT_BEFORE:
/* This is the Signaler's attribute list */
isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: for (i = 0; i < objAttrList->numCoreAttrList; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Get whether this is a CPU signaler by traversing the Unreconciled
* Attribute Lists. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0; i < objAttrList->numCoreAttrList; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Get whether this is a CPU signaler by traversing the Unreconciled
* Attribute Lists. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0; i < objAttrList->numCoreAttrList; ++i)
RESULT.CBA.CONTEXT_BEFORE:
/* Get whether this is a CPU signaler by traversing the Unreconciled
* Attribute Lists. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList))
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0; i < objAttrList->numCoreAttrList; ++i) {
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This is the Signaler's attribute list */
isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList))
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0; i < objAttrList->numCoreAttrList; ++i) {
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This is the Signaler's attribute list */
isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList))
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0; i < objAttrList->numCoreAttrList; ++i) {
LwSciSyncCoreAttrList coreAttrList = objAttrList->coreAttrList[i];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* This is the Signaler's attribute list */
isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: isCpuSignaler = coreAttrList.attrs.needCpuAccess;
RESULT.CBA.CONTEXT_BEFORE:
if (LwSciSyncCoreAttrListHasSignalerPerm(&coreAttrList)) {
/* This is the Signaler's attribute list */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
break;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: newCoreAttrList->signalerUseExternalPrimitive = (!isCpuSignaler &&
RESULT.CBA.CONTEXT_BEFORE:
}
/* Now set the key on the Reconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(reconciledPrimitiveType ==
LwSciSyncInternalAttrValPrimitiveType_Syncpoint));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: newCoreAttrList->signalerUseExternalPrimitive = (!isCpuSignaler &&
RESULT.CBA.CONTEXT_BEFORE:
}
/* Now set the key on the Reconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(reconciledPrimitiveType ==
LwSciSyncInternalAttrValPrimitiveType_Syncpoint));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: newCoreAttrList->signalerUseExternalPrimitive = (!isCpuSignaler &&
RESULT.CBA.CONTEXT_BEFORE:
}
/* Now set the key on the Reconciled Attribute List */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(reconciledPrimitiveType ==
LwSciSyncInternalAttrValPrimitiveType_Syncpoint));
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: reconciledPrimitiveType = newCoreAttrList->attrs.signalerPrimitiveInfo[0];
RESULT.CBA.CONTEXT_BEFORE:
/* Get reconciled Primitive Type. We expect that this function is called
* after the Primitive Type has been reconciled. */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Get whether this is a CPU signaler by traversing the Unreconciled
* Attribute Lists. */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: size_t i = 0;
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
/* Get reconciled Primitive Type. We expect that this function is called
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
LwSciSyncInternalAttrValPrimitiveType reconciledPrimitiveType =
LwSciSyncInternalAttrValPrimitiveType_UpperBound;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
;
size_t i = 0;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Get reconciled Primitive Type. We expect that this function is called
* after the Primitive Type has been reconciled. */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 5
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 14
RESULT.CBA.CONTEXT: ;
RESULT.CBA.CONTEXT_BEFORE:
(reconciledPrimitiveType ==
LwSciSyncInternalAttrValPrimitiveType_Syncpoint));
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.MATCHING_LINE_INDEX: 13
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ReconcileWaiterContextInsensitiveFenceExports_1
RESULT.CBA.NOTES
Covered by insspectio test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23078085?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ReconcileWaiterContextInsensitiveFenceExports
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 3
RESULT.CBA.CONTEXT: LwSciSyncCoreAttrs* attrs = 
RESULT.CBA.CONTEXT_BEFORE:
0
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 2
RESULT.CBA.CONTEXT: _Bool 
RESULT.CBA.CONTEXT_BEFORE:
{
size_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
result =
0
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 7
RESULT.CBA.CONTEXT: attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_BEFORE:
result = result || attrs->waiterContextInsensitiveFenceExports;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs->waiterContextInsensitiveFenceExports = result;
/* Update key state */
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: attrs = &objAttrList->coreAttrList[i].attrs;
RESULT.CBA.CONTEXT_BEFORE:
;
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
result = result || attrs->waiterContextInsensitiveFenceExports;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->waiterContextInsensitiveFenceExports = result;
/* Update key state */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t) LwSciSyncAttrKey_WaiterContextInsensitiveFenceExports)] =
LwSciSyncCoreAttrKeyState_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.CONTEXT: attrs->valSize[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreAttrKeyState_Reconciled;
/* Update val size */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t) LwSciSyncAttrKey_WaiterContextInsensitiveFenceExports)] =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 8
RESULT.CBA.CONTEXT: attrs->waiterContextInsensitiveFenceExports = result;
RESULT.CBA.CONTEXT_BEFORE:
}
attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
/* Update key state */
attrs->keyState[LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs = &objAttrList->coreAttrList[i].attrs;
result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs = &objAttrList->coreAttrList[i].attrs;
result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 4
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: for (i = 0U; i < objAttrList->numCoreAttrList; i++)
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
attrs = &objAttrList->coreAttrList[i].attrs;
result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.CONTEXT: result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
attrs = &objAttrList->coreAttrList[i].attrs;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
attrs = &objAttrList->coreAttrList[i].attrs;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 6
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: result = result || attrs->waiterContextInsensitiveFenceExports;
RESULT.CBA.CONTEXT_BEFORE:
for (i = 0U; i < objAttrList->numCoreAttrList; i++) {
attrs = &objAttrList->coreAttrList[i].attrs;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
attrs = &newObjAttrList->coreAttrList->attrs;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 1
RESULT.CBA.CONTEXT: size_t i = 0U;
RESULT.CBA.CONTEXT_BEFORE:
{
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
_Bool
result =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
attrs->waiterContextInsensitiveFenceExports = result;
/* Update key state */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t) LwSciSyncAttrKey_WaiterContextInsensitiveFenceExports)] =
LwSciSyncCoreAttrKeyState_Reconciled;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 0
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: {
RESULT.CBA.CONTEXT_AFTER:
size_t i = 0U;
_Bool
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciSyncCoreKeyToIndex(
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncCoreAttrKeyState_Reconciled;
/* Update val size */
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(uint32_t) LwSciSyncAttrKey_WaiterContextInsensitiveFenceExports)] =
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ValidateReconciledPrimitiveType_1
RESULT.CBA.NOTES
Covered by Inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/23080169?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ValidateReconciledPrimitiveType
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
((void *)0)
== objAttrList) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciSyncCoreFillCpuPrimitiveInfo(objAttrList);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== objAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (
RESULT.CBA.CONTEXT_BEFORE:
goto fn_exit;
}
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
((void *)0)
== objAttrList) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 4
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ValidateReconciledSignalerPrimitiveCount_1
RESULT.CBA.NOTES
Coverd by inspection test:
https://lwpu.jamacloud.com/perspective.req#/testCases/22974355?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /home/daalla/git/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/attribute/reconcile/lwscisync_attribute_reconcile.c
RESULT.CBA.FUNCTION: ValidateReconciledSignalerPrimitiveCount
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.CONTEXT: if ((LwSciSyncCoreAttrKeyState_Empty != keyState) &&
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount);
keyState = reconciledObjAttrList->coreAttrList->attrs.keyState[keyIdx];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(0U == reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)) {
LwSciTracePrintf("[ERROR: %s]: " "Invalid value for " "LwSciSyncInternalAttrKey_SignalerPrimitiveCount: \n" "%u\n", __FUNCTION__, reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 9
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if ((LwSciSyncCoreAttrKeyState_Empty != keyState) &&
RESULT.CBA.CONTEXT_BEFORE:
(uint32_t)LwSciSyncInternalAttrKey_SignalerPrimitiveCount);
keyState = reconciledObjAttrList->coreAttrList->attrs.keyState[keyIdx];
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(0U == reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)) {
LwSciTracePrintf("[ERROR: %s]: " "Invalid value for " "LwSciSyncInternalAttrKey_SignalerPrimitiveCount: \n" "%u\n", __FUNCTION__, reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.CONTEXT: size_t unreconciledNum =
RESULT.CBA.CONTEXT_BEFORE:
uint64_t keyIdx = 0U;
LwSciSyncCoreAttrKeyState keyState = LwSciSyncCoreAttrKeyState_Conflict;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 5
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: size_t unreconciledNum =
RESULT.CBA.CONTEXT_BEFORE:
uint64_t keyIdx = 0U;
LwSciSyncCoreAttrKeyState keyState = LwSciSyncCoreAttrKeyState_Conflict;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
(
((void *)0)
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 10
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Invalid value for " "LwSciSyncInternalAttrKey_SignalerPrimitiveCount: \n" "%u\n", __FUNCTION__, reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)
RESULT.CBA.CONTEXT_BEFORE:
if ((LwSciSyncCoreAttrKeyState_Empty != keyState) &&
(0U == reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 11
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Invalid value for " "LwSciSyncInternalAttrKey_SignalerPrimitiveCount: \n" "%u\n", __FUNCTION__, reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)
RESULT.CBA.CONTEXT_BEFORE:
if ((LwSciSyncCoreAttrKeyState_Empty != keyState) &&
(0U == reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 12
RESULT.CBA.CONTEXT: error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Invalid value for " "LwSciSyncInternalAttrKey_SignalerPrimitiveCount: \n" "%u\n", __FUNCTION__, reconciledObjAttrList->coreAttrList->attrs.signalerPrimitiveCount)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 13
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
;
error = LwSciError_BadParameter;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
for (i = 0U; i < unreconciledNum; ++i) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.END
IMPORT.END