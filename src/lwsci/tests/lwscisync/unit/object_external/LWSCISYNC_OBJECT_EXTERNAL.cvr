-- VectorCAST 20.sp5 (12/16/20)
-- Imported Coverage Results Script
IMPORT.BEGIN
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:8
IMPORT.SOURCE.ORIG_FILENAME:/data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/tests/lwscisync/unit/object_external/LWSCISYNC_OBJECT_EXTERNAL/S0000008.c
IMPORT.SOURCE.TIMESTAMP:0
IMPORT.SOURCE.COVERAGE_STATUS:FALSE
IMPORT.SOURCE.COVERAGE_TYPE:None
IMPORT.SOURCE.FILE_CHECKSUM:0
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:TRUE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:TRUE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_UNKNOWN
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:TRUE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.END
IMPORT.SOURCE.BEGIN
IMPORT.SOURCE.UNIT:9
IMPORT.SOURCE.ORIG_FILENAME:/data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
IMPORT.SOURCE.TIMESTAMP:1637319198
IMPORT.SOURCE.COVERAGE_STATUS:TRUE
IMPORT.SOURCE.COVERAGE_TYPE:Statement+Branch+FUNCTION_CALL
IMPORT.SOURCE.FILE_CHECKSUM:675915737
IMPORT.SOURCE.COVER_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.HAS_EMPTY_STATEMENTS:TRUE
IMPORT.SOURCE.COVER_CATCH_AS_BRANCH:TRUE
IMPORT.SOURCE.HAS_CATCH_STATEMENTS:FALSE
IMPORT.SOURCE.EDG_COVERAGE:TRUE
IMPORT.SOURCE.COVER_FUNCTION_PARAMETERS:TRUE
IMPORT.SOURCE.HAS_LOGICAL_OPS_IN_PARAMETERS:FALSE
IMPORT.SOURCE.COVER_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.COVER_NESTED_CONDITIONAL_OPERATOR:TRUE
IMPORT.SOURCE.HAS_NESTED_CONDITIONAL_OPERATOR:FALSE
IMPORT.SOURCE.COVER_STATEMENTS_BY_BLOCK:FALSE
IMPORT.SOURCE.COVERAGE_FOR_DECLARATIONS:INSTRUMENT_VARIABLE_DECLARATIONS_INITIALIZATIONS
IMPORT.SOURCE.HAS_CONSTANT_BRANCH:FALSE
IMPORT.SOURCE.BASIS_PATHS_FOR_CONSTANT_BRANCHES:TRUE
IMPORT.SOURCE.COVERAGE_FOR_LAMBDAS:FALSE
IMPORT.SOURCE.END
RESULT.CBA.BEGIN
RESULT.CBA.RESULT: CBA_CoreObjInit_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
Defensive programming, This function LwSciSyncAttrListGetSingleInternalAttr() returns error if attrList is NULL,
since passing the valid values we can't covered by any dynamic tests.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: CoreObjInit
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 26
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
LwSciSyncInternalAttrKey_SignalerPrimitiveInfo, &value, &len);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciCommonMemcpyS(&primitiveType, sizeof(primitiveType),
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListGetSingleInternalAttr(reconciledList,
LwSciSyncInternalAttrKey_SignalerPrimitiveInfo, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 25
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListGetSingleInternalAttr(reconciledList,
LwSciSyncInternalAttrKey_SignalerPrimitiveInfo, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_ImportCoreObj_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
We can't cover else part because we have checks for unrecognized key before reaching here.
hence error path cannot be covered by any dynamic tests.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: ImportCoreObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Unrecognized key despite performing a check before: \n" "%u\n", __FUNCTION__, inputKey)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
LwSciTracePrintf("[ERROR: %s]: " "Unrecognized key despite performing a check before: \n" "%u\n", __FUNCTION__, inputKey)
;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Unrecognized key despite performing a check before: \n" "%u\n", __FUNCTION__, inputKey)
RESULT.CBA.CONTEXT_BEFORE:
(void*)value, length, &coreObj->primitive);
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: " "Unrecognized key despite performing a check before: \n" "%u\n", __FUNCTION__, inputKey)
RESULT.CBA.CONTEXT_BEFORE:
(void*)value, length, &coreObj->primitive);
} else {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
;
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.CONTEXT: if (LwSciSyncCoreObjKey_CorePrimitive == key)
RESULT.CBA.CONTEXT_BEFORE:
}
coreObj->objId.ipcEndpoint = *(LwSciIpcEndpoint*)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciSyncCorePrimitiveImport(ipcEndpoint, inputAttrList,
(void*)value, length, &coreObj->primitive);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 56
RESULT.CBA.COVERAGE: F
RESULT.CBA.CONTEXT: if (LwSciSyncCoreObjKey_CorePrimitive == key)
RESULT.CBA.CONTEXT_BEFORE:
}
coreObj->objId.ipcEndpoint = *(LwSciIpcEndpoint*)value;
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
error = LwSciSyncCorePrimitiveImport(ipcEndpoint, inputAttrList,
(void*)value, length, &coreObj->primitive);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncIpcExportAttrListAndObj_1
RESULT.CBA.NOTES
Covered by inspection test: https://lwpu.jamacloud.com/perspective.req#/testCases/23080593?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: LwSciSyncIpcExportAttrListAndObj
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 38
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*attrListAndObjDesc = LwSciCommonCalloc(1U, attListDescLenTemp);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 37
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*attrListAndObjDesc = LwSciCommonCalloc(1U, attListDescLenTemp);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
/** Allocate memory for attr list + sync object descriptor */
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 34
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
/** Allocate memory for attr list + sync object descriptor */
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 1
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 52
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciCommonMemcpyS(*attrListAndObjDesc, attListDescLenTemp,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciCommonMemcpyS(*attrListAndObjDesc, attListDescLenTemp,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
/** Copy attr list and sync object descriptors */
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 48
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
/** Copy attr list and sync object descriptors */
sizeAdd(sizeof(objDescBuf), attListDescLen, &attListDescLenTemp, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 63
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciCommonPanic()
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciSyncAttrListFreeDesc(attListDescBuf);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 62
RESULT.CBA.CONTEXT: LwSciCommonPanic();
RESULT.CBA.CONTEXT_BEFORE:
if (1U != addStatus) {
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciSyncAttrListFreeDesc(attListDescBuf);
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 61
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n")
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, attrListAndObjDescSize, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 60
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
RESULT.CBA.CONTEXT_BEFORE:
sizeAdd(sizeof(objDescBuf), attListDescLen, attrListAndObjDescSize, &addStatus);
if (1U != addStatus) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciCommonPanic();
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
&objDescBuf, sizeof(objDescBuf));
sizeAdd(sizeof(objDescBuf), attListDescLen, attrListAndObjDescSize, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 59
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (1U != addStatus)
RESULT.CBA.CONTEXT_BEFORE:
&objDescBuf, sizeof(objDescBuf));
sizeAdd(sizeof(objDescBuf), attListDescLen, attrListAndObjDescSize, &addStatus);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Arithmetic overflow\n");
LwSciCommonPanic();
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncObjGenerateFence_1
RESULT.CBA.NOTES
Covered by inspection test:https://lwpu.jamacloud.com/perspective.req?docId=23031332&projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: LwSciSyncObjGenerateFence
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 51
RESULT.CBA.COVERAGE: FC
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to generate fence\n")
RESULT.CBA.CONTEXT_BEFORE:
fenceSnapshot, syncFence);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 50
RESULT.CBA.CONTEXT: LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to generate fence\n");
RESULT.CBA.CONTEXT_BEFORE:
fenceSnapshot, syncFence);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
fn_exit:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncFenceUpdateFence(syncObj, fenceId,
fenceSnapshot, syncFence);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to generate fence\n");
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 49
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncFenceUpdateFence(syncObj, fenceId,
fenceSnapshot, syncFence);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
LwSciTracePrintf("[ERROR: %s]: %s\n", __FUNCTION__, "Failed to generate fence\n");
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncObjGetNumPrimitives_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
Defensive programming, This function LwSciSyncAttrListGetSingleInternalAttr() returns error if attrList is NULL,
although this attrList is retrieved from syncObj using LwSciSyncObjGetAttrList() and LwSciSyncObjGetAttrList() cannot return incorrect attrList,
hence error path cannot be covered by any dynamic tests.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: LwSciSyncObjGetNumPrimitives
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
*numPrimitives = *(const uint32_t*) value;
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncObjGetPrimitiveType_1
RESULT.CBA.NOTES
Safety impact (Nil/Low/Medium/High):
Nil
Justification:
Defensive programming, This function LwSciSyncAttrListGetSingleInternalAttr() returns error if attrList is NULL,
although this attrList is retrieved from syncObj using LwSciSyncObjGetAttrList() and LwSciSyncObjGetAttrList() cannot return incorrect attrList,
hence error path cannot be covered by any dynamic tests.
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: LwSciSyncObjGetPrimitiveType
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 16
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
}
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto fn_exit;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 17
RESULT.CBA.CONTEXT: goto fn_exit;
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncAttrListGetSingleInternalAttr(attrList, key, &value, &len);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
LwSciCommonMemcpyS(primitiveType,
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 3
RESULT.CBA.LINE.END
RESULT.CBA.RESULT: CBA_LwSciSyncObjSignal_1
RESULT.CBA.NOTES
Covered by Inspection test:https://lwpu.jamacloud.com/perspective.req#/testCases/23031347?projectId=22182
RESULT.CBA.NOTES_END
RESULT.CBA.UNIT: /data/embedded_5_2-lts/auto/gpu/drv/drivers/lwsci/lwscisync/src/object/lwscisync_object_external.c
RESULT.CBA.FUNCTION: LwSciSyncObjSignal
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 36
RESULT.CBA.CONTEXT: goto unlock_syncobj_refobj;
RESULT.CBA.CONTEXT_BEFORE:
error = LwSciSyncCoreSignalPrimitive(coreObj->primitive);
if (LwSciError_Success != error) {
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
}
unlock_syncobj_refobj:
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
/** Signal the primitive */
error = LwSciSyncCoreSignalPrimitive(coreObj->primitive);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_syncobj_refobj;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.LINE.BEGIN
RESULT.CBA.LINE: 35
RESULT.CBA.COVERAGE: T
RESULT.CBA.CONTEXT: if (LwSciError_Success != error)
RESULT.CBA.CONTEXT_BEFORE:
/** Signal the primitive */
error = LwSciSyncCoreSignalPrimitive(coreObj->primitive);
RESULT.CBA.CONTEXT_BEFORE_END
RESULT.CBA.CONTEXT_AFTER:
goto unlock_syncobj_refobj;
}
RESULT.CBA.CONTEXT_AFTER_END
RESULT.CBA.MATCHING_LINE_INDEX: 2
RESULT.CBA.LINE.END
RESULT.CBA.END
IMPORT.END