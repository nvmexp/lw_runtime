################################### tell Emacs this is a -*- makefile-gmake -*-
#
# Copyright (c) 2018-2021, LWPU CORPORATION.  All Rights Reserved.
#
# LWPU CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from LWPU CORPORATION is strictly prohibited.
#
# tmake for SW Mobile component makefile
#
###############################################################################

ifdef LW_COMPONENT_FLAG_LWTEST_LIBRARY_SECTION
include $(LW_BUILD_START_COMPONENT)

LW_COMPONENT_NAME := llgd-replay

LLGD_REPLAY_ENABLE_PROFILER := 0

# LLGD replay sources (mostly) live in the driver tree with the other LLGD components
LLGD_REPLAY_SRC_DIR := $(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/llgd-replay/src
LLGD_REPLAY_INC_DIR := $(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/llgd-replay/inc
LLGD_REPLAY_LZ4_DIR := $(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/llgd-replay/lz4

LW_COMPONENT_SOURCES := \
	./src/LlgdReplayMain.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoCommandBuffer.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoDescriptorPool.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoMemoryPool.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoProgram.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoSamplerPool.cpp \
	$(LLGD_REPLAY_SRC_DIR)/AutoTexturePool.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ExperimentManager.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ExperimentOverlay.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ExperimentPixelHistory.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ExperimentPostTransformGeometry.cpp \
	$(LLGD_REPLAY_SRC_DIR)/LlgdShaderDebuggerReplay.cpp \
	$(LLGD_REPLAY_SRC_DIR)/GpuStateUtils.cpp \
	$(LLGD_REPLAY_SRC_DIR)/LwnUtil.cpp \
	$(LLGD_REPLAY_SRC_DIR)/LwnObjects.cpp \
	$(LLGD_REPLAY_SRC_DIR)/CommandProcessor.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Network.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Communicator.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Logger.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Heartbeat.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Profiler.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ShaderDebuggerNetwork.cpp \
	$(LLGD_REPLAY_SRC_DIR)/ShaderProfiler.cpp \
	$(LLGD_REPLAY_SRC_DIR)/TargetCompiledPrograms.cpp \
	$(LLGD_REPLAY_SRC_DIR)/Utils.cpp \
	$(LLGD_REPLAY_LZ4_DIR)/lz4.c \
	$(LLGD_REPLAY_LZ4_DIR)/lz4hc.c

LW_COMPONENT_INCLUDES := \
	./inc \
	$(LLGD_REPLAY_INC_DIR) \
	./lwperf/inc \
	./shaderdebugger/inc \
	$(LW_SOURCE)/core/include \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/public/ \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/devtools \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/llgd-target/inc \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/shared/inc \
	$(LLGD_REPLAY_ZLIB_DIR) \
	$(LLGD_REPLAY_LZ4_DIR) \

LW_COMPONENT_NEEDED_INTERFACE_DIRS := \
	$(LW_INTERFACE_CORE_LWOS) \
	$(LW_INTERFACE_GPU_GRAPHICS_LWN) \
	$(LW_INTERFACE_CORE_LWRM_GPU) \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/liblwn-llgd \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/devtools/llgd/llgd-target \
	$(LW_SOURCE)/gpu/drv/apps/lwn/llgd-replay/shaderdebugger \
	$(LW_SOURCE)/gpu/drv/drivers/lwn/glslc

ifeq ($(LW_TARGET_ARCH),hos_64)
PERFWORKS_PATH := lwperf/lib/NX-NXFP2-a64
else
PERFWORKS_PATH := lwperf/lib/NX-NXFP2-a32
endif
PERFWORKS_STATIC_PREBUILT := $(PERFWORKS_PATH)/libPerfworksTargetApi_static_partial
PERFWORKS_LWNGD_STATIC_PREBUILT := $(PERFWORKS_PATH)/libPerfworksTargetApi_LWNGD_static_partial

LW_COMPONENT_STATIC_PREBUILTS := \
	./$(PERFWORKS_STATIC_PREBUILT) \
	./$(PERFWORKS_LWNGD_STATIC_PREBUILT)

LW_COMPONENT_POST_PROCESS_INPUT += \
       llgd-replay.desc

ifeq ($(LLGD_REPLAY_ENABLE_PROFILER),1)
LW_COMPONENT_OBJECTS_PREBUILT        := \
	$(LW_SOURCE)/3rdparty/hos-ddk-minimal/ddk/Programs/Eris/Libraries/NX-NXFP2-a64/Release/libnn_profiler.a

LW_COMPONENT_CFLAGS                  += \
	-DLLGD_REPLAY_ENABLE_PROFILER
endif

ifeq ($(LW_TARGET_ARCH),hos_64)
LW_COMPONENT_POST_PROCESS_INPUT += \
       llgd-replay.aarch64.lp64.nmeta
else
LW_COMPONENT_POST_PROCESS_INPUT += \
       llgd-replay.arm.ilp32.nmeta
endif

LW_COMPONENT_LDFLAGS := $(LW_SOURCE)/3rdparty/hos-ddk-minimal/ddk/Programs/Chris/Libraries/NX-NXFP2-a64/Develop/libnn_ro.a

include $(LW_BUILD_DYNAMIC_EXELWTABLE)
endif

# Local Variables:
# indent-tabs-mode: t
# tab-width: 8
# End:
# vi: set tabstop=8 noexpandtab:
