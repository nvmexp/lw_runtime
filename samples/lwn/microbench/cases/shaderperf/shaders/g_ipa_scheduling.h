#ifndef __g_ipa_scheduling_h_
#define __g_ipa_scheduling_h_

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// !!! AUTOMATICALLY GENERATED - DO NOT EDIT !!!
// !!! Please refer to README.txt on how to  !!!
// !!! generate such files                   !!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

static const char *shader_ipa_scheduling =
    "#version 450\n"
    "\n"
    "#define ARRSIZE 128\n"
    "#define UNI_SPEC 0\n"
    "#if UNI_SPEC == 1\n"
    "#define COND false\n"
    "#else\n"
    "#define COND true\n"
    "#endif\n"
    "\n"
    "uniform block {\n"
    "    bool specConst;\n"
    "    uint loops;\n"
    "};\n"
    "\n"
    "// 8 varyings to test\n"
    "in IO {\n"
    "    vec4 varying1;\n"
    "    float varying2;\n"
    "    float varying3;\n"
    "    vec4 varying4;\n"
    "    float varying5;\n"
    "    float varying6;\n"
    "    flat int varying7;\n"
    "};\n"
    "\n"
    "out vec4 color;\n"
    "\n"
    "void main()\n"
    "{\n"
    "    color = vec4(0.4, 0.4, 0.4, 0.4);\n"
    "\n"
    "    if (specConst && COND) {\n"
    "        color += (varying1 * 0.9);\n"
    "        color *= (varying2);\n"
    "        color /= (varying3);\n"
    "        color *= (varying4);\n"
    "        color.y += (varying5 * 1.2);\n"
    "        color.z -= (varying6 * 0.3);\n"
    "        color.x += varying7;\n"
    "    }\n"
    "\n"
    "    float arr2[ARRSIZE];\n"
    "    for(uint i = 0 ; i < ARRSIZE ; i++) {\n"
    "        arr2[i] = i;\n"
    "    }\n"
    "\n"
    "    // Insert a bunch of work\n"
    "    vec4 vals[2] = { vec4(0.3, 0.8, 0.7, 0.2),\n"
    "                     vec4(1.4, 3.2, -2.7, 2.1) };\n"
    "    vec4 vals2[4] = { vec4(4.2, 1.8, 0.2, 1.1),\n"
    "                      vec4(10.4, 0.8, 0.9, 0.2),\n"
    "                      vec4(-0.4, 0.9, 0.7, -0.5),\n"
    "                      vec4(-0.3, 1.2, 0.05, 0.3) };\n"
    "    uint i = 0;\n"
    "\n"
    "    while(true) {\n"
    "        if (i >= loops) {\n"
    "            break;\n"
    "        }\n"
    "        color += vals[i % 2] + vals2[i % 4];\n"
    "        color /= vals2[i % 4] / arr2[i % ARRSIZE];\n"
    "        i++;\n"
    "    }\n"
    "\n"
    "    // Use all the varyings again\n"
    "    color += (varying1 * 0.9);\n"
    "    color *= (varying2 + 0.12);\n"
    "    color /= (varying3);\n"
    "    color *= (varying4) + 0.05;\n"
    "    color.z += (varying5 * 1.7);\n"
    "    color.y -= (varying6 * 0.5);\n"
    "    color.x += varying7;\n"
    "}\n";

#endif /* __g_ipa_scheduling_h_ */
