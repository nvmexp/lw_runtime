# /* THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT */
# /* EDIT SRCFILE.INC AND LWMAKE @GENERATE TO REFRESH THIS */
LwnTestCommon = Constants
{
   SrcFiles=List(
        f"elw/cells.cpp",
        f"elw/cmdline.cpp",
        f"elw/float_util.cpp",
        f"elw/global.cpp",
        f"elw/md5.cpp",
        f"elw/lwnTest_AllocationTracker.cpp",
        f"elw/lwnTest_Formats.cpp",
        f"elw/lwnTest_Mislwtils.cpp",
        f"elw/lwnTest_DeviceState.cpp",
        f"elw/lwnTest_Objects.cpp",
        f"elw/lwnTest_Framebuffer.cpp",
        f"elw/lwnTest_VertexState.cpp",
        f"elw/lwnTest_GlslcHelper.cpp",
        f"elw/lwnTest_WindowFramebuffer.cpp",
        f"elw/rand.cpp",
        f"elw/sums.cpp",
        f"elw/str_util.cpp",
        f"elw/testloop.cpp",
        f"elw/tests.cpp",
        f"elw/cppcheck.cpp",
        f"elw/cppshaders.cpp",
        f"elw/tegra_main.cpp",
        f"elw/tegra_utils.cpp",
        f"elw/lwn_interface_c.cpp",
        f"elw/lwn_interface_cpp.cpp",
        f"elw/lwn_utils.cpp",
        f"elw/readpixels.cpp",
        f"elw/tga.cpp",
        f"../common/lwnWin/lwn_win.cpp",
        f"../common/lwnWin/lwwinsys_win.cpp",
        f"tests/lwn/lwn_01tri_c.cpp",
        f"tests/lwn/lwn_mempool.cpp",
        f"tests/lwn/lwn_natvis_c.cpp",
        f"tests/lwn/lwn_01tri_cpp.cpp",
        f"tests/lwn/lwn_alloc.cpp",
        f"tests/lwn/lwn_alphatest.cpp",
        f"tests/lwn/lwn_basic.cpp",
        f"tests/lwn/lwn_basic_cpp.cpp",
        f"tests/lwn/lwn_bgr5.cpp",
        f"tests/lwn/lwn_bigtex.cpp",
        f"tests/lwn/lwn_bind_deferred.cpp",
        f"tests/lwn/lwn_blendadv.cpp",
        f"tests/lwn/lwn_c2c.cpp",
        f"tests/lwn/lwn_clear_buffer.cpp",
        f"tests/lwn/lwn_clear_texture.cpp",
        f"tests/lwn/lwn_clear_tex_overwrite.cpp",
        f"tests/lwn/lwn_client_allocator.cpp",
        f"tests/lwn/lwn_cmdbuf_add_memory.cpp",
        f"tests/lwn/lwn_cmdbuf_callcopy.cpp",
        f"tests/lwn/lwn_cmdbuf_disable_oom.cpp",
        f"tests/lwn/lwn_color_reduction.cpp",
        f"tests/lwn/lwn_compare_objects.cpp",
        f"tests/lwn/lwn_compression.cpp",
        f"tests/lwn/lwn_compute.cpp",
        f"tests/lwn/lwn_conditional_render.cpp",
        f"tests/lwn/lwn_conservative_raster.cpp",
        f"tests/lwn/lwn_copy_compressible.cpp",
        f"tests/lwn/lwn_copy_image.cpp",
        f"tests/lwn/lwn_copy_image_mipmaps.cpp",
        f"tests/lwn/lwn_copy_image_mirror.cpp",
        f"tests/lwn/lwn_copy_image_ms.cpp",
        f"tests/lwn/lwn_copy_texture_limits.cpp",
        f"tests/lwn/lwn_copy_texture_stride.cpp",
        f"tests/lwn/lwn_counters.cpp",
        f"tests/lwn/lwn_counters_zlwll.cpp",
        f"tests/lwn/lwn_dbounds.cpp",
        f"tests/lwn/lwn_debug.cpp",
        f"tests/lwn/lwn_debug_walk.cpp",
        f"tests/lwn/lwn_debuglabel.cpp",
        f"tests/lwn/lwn_defaults.cpp",
        f"tests/lwn/lwn_depth_range.cpp",
        f"tests/lwn/lwn_depth_stencil.cpp",
        f"tests/lwn/lwn_depth_write_war.cpp",
        f"tests/lwn/lwn_disable_both_compression.cpp",
        f"tests/lwn/lwn_downsample.cpp",
        f"tests/lwn/lwn_draw_basic.cpp",
        f"tests/lwn/lwn_draw_texture.cpp",
        f"tests/lwn/lwn_event.cpp",
        f"tests/lwn/lwn_fastpath.cpp",
        f"tests/lwn/lwn_force_sample_shading.cpp",
        f"tests/lwn/lwn_formats.cpp",
        f"tests/lwn/lwn_fs_interlock.cpp",
        f"tests/lwn/lwn_getters.cpp",
        f"tests/lwn/lwn_gl_interop.cpp",
        f"tests/lwn/lwn_glsl.cpp",
        f"tests/lwn/lwn_glsl_bindings.cpp",
        f"tests/lwn/lwn_glsl_bindings_unused.cpp",
        f"tests/lwn/lwn_glsl_derivative_control.cpp",
        f"tests/lwn/lwn_glsl_initialized_array.cpp",
        f"tests/lwn/lwn_glslc.cpp",
        f"tests/lwn/lwn_gs_passthrough.cpp",
        f"tests/lwn/lwn_hlsl.cpp",
        f"tests/lwn/lwn_image.cpp",
        f"tests/lwn/lwn_image_targets.cpp",
        f"tests/lwn/lwn_image_swizzle.cpp",
        f"tests/lwn/lwn_lowp_mediump_mixed.cpp",
        f"tests/lwn/lwn_mempool_external.cpp",
        f"tests/lwn/lwn_mempool_mapping.cpp",
        f"tests/lwn/lwn_mempool_virtual.cpp",
        f"tests/lwn/lwn_mt_texture_creation.cpp",
        f"tests/lwn/lwn_multi_draw_indirect_count.cpp",
        f"tests/lwn/lwn_multibind_compute.cpp",
        f"tests/lwn/lwn_multisample_a2cov.cpp",
        f"tests/lwn/lwn_natvis_cpp.cpp",
        f"tests/lwn/lwn_vic_interop.cpp",
        f"tests/lwn/lwn_polygon_offset.cpp",
        f"tests/lwn/lwn_pool_bufaddr.cpp",
        f"tests/lwn/lwn_post_depth_coverage.cpp",
        f"tests/lwn/lwn_present_interval.cpp",
        f"tests/lwn/lwn_psprite.cpp",
        f"tests/lwn/lwn_programs_mt.cpp",
        f"tests/lwn/lwn_provoking_vertex.cpp",
        f"tests/lwn/lwn_pte.cpp",
        f"tests/lwn/lwn_query.cpp",
        f"tests/lwn/lwn_raster.cpp",
        f"tests/lwn/lwn_raw_storage_class_switch.cpp",
        f"tests/lwn/lwn_robustness.cpp",
        f"tests/lwn/lwn_rt_attachments.cpp",
        f"tests/lwn/lwn_sample_control.cpp",
        f"tests/lwn/lwn_sample_location.cpp",
        f"tests/lwn/lwn_sampler.cpp",
        f"tests/lwn/lwn_separate_sampler.cpp",
        f"tests/lwn/lwn_shader_scratch.cpp",
        f"tests/lwn/lwn_shader_specialization.cpp",
        f"tests/lwn/lwn_shader_spirv.cpp",
        f"tests/lwn/lwn_shader_subgroup.cpp",
        f"tests/lwn/lwn_shader_subgroup_ballot_vote.cpp",
        f"tests/lwn/lwn_shader_subroutine.cpp",
        f"tests/lwn/lwn_shader_tracking.cpp",
        f"tests/lwn/lwn_shadowmap.cpp",
        f"tests/lwn/lwn_sparse_texture.cpp",
        f"tests/lwn/lwn_ssbo.cpp",
        f"tests/lwn/lwn_ssbo_extended_atomics.cpp",
        f"tests/lwn/lwn_stateobjects.cpp",
        f"tests/lwn/lwn_subtile_override.cpp",
        f"tests/lwn/lwn_tess.cpp",
        f"tests/lwn/lwn_tess_tcsparams.cpp",
        f"tests/lwn/lwn_texbind_random.cpp",
        f"tests/lwn/lwn_texture_basic.cpp",
        f"tests/lwn/lwn_texture_binding.cpp",
        f"tests/lwn/lwn_texture_etc.cpp",
        f"tests/lwn/lwn_texture_packager.cpp",
        f"tests/lwn/lwn_texture_pitch.cpp",
        f"tests/lwn/lwn_texture_pool.cpp",
        f"tests/lwn/lwn_texture_rt_compress.cpp",
        f"tests/lwn/lwn_texture_storagelayout.cpp",
        f"tests/lwn/lwn_texture_storagesize.cpp",
        f"tests/lwn/lwn_texture_swizzle.cpp",
        f"tests/lwn/lwn_texture_views.cpp",
        f"tests/lwn/lwn_texture_wr_texels.cpp",
        f"tests/lwn/lwn_tiled_cache.cpp",
        f"tests/lwn/lwn_timestamp.cpp",
        f"tests/lwn/lwn_timestamp_colwersion.cpp",
        f"tests/lwn/lwn_tir.cpp",
        f"tests/lwn/lwn_trilinopt.cpp",
        f"tests/lwn/lwn_ubo_zerosize.cpp",
        f"tests/lwn/lwn_unbound_id.cpp",
        f"tests/lwn/lwn_unfinalized_queues.cpp",
        f"tests/lwn/lwn_uniformbuffer.cpp",
        f"tests/lwn/lwn_util_datatypes.cpp",
        f"tests/lwn/lwn_vertex_attrib.cpp",
        f"tests/lwn/lwn_vertex_streams.cpp",
        f"tests/lwn/lwn_view_offset.cpp",
        f"tests/lwn/lwn_viewports.cpp",
        f"tests/lwn/lwn_window.cpp",
        f"tests/lwn/lwn_xfb_basic.cpp",
        f"tests/lwn/lwn_zbc.cpp",
        f"tests/lwn/lwn_zlwll.cpp",
        f"tests/lwn/lwn_zlwll_layered.cpp",
        f"tests/lwn/lwn_zlwll_stencil.cpp",
        f"tests/lwn/lwn_zlwll_zf32.cpp"
   );
}

lwntest_dyn = LwnProcessDynamicLinkRule
{
    SourceFiles = List(
        ${LwnTestCommon.SrcFiles}
    );

    SdkDynamicLinkLibraryNames = List(
        ${LwnBaseDynamicLinkLibraryNames},
        "opengl",
        "lwn-etc1",
    );

    LibraryNames = List(
        ${LwnBasicLibraryNames},
        "libnn_gll",
    );

    PreprocessorMacros = List(
        ${LwnBasePreprocessorMacros},
        "WIN_INTERFACE_LWSTOM",
    );

    Name = "lwntest_dyn";

    # closure that determines if a configuration is supported
    IsSupported = config => And(
      config.HasKeyValue("os", "horizon"),
      Or (
          config.HasKeyValue("hardware", "jetsontk2"),
          config.HasKeyValue("soc", "cheetah-x1"),
      )
    );

    IncludeDirectories = List(
        ${LwnBaseIncludePaths},
        f"include",
        f"elw",
        HosRoot.Combine("gpu/drv/drivers/lwn/liblwn-etc1"),
    );
}
