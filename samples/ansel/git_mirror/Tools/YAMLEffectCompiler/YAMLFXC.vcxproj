<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Coverage|Win32">
      <Configuration>Coverage</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Coverage|x64">
      <Configuration>Coverage</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\ShaderMod\ShaderModCore.vcxproj">
      <Project>{f0e0d66f-c987-4559-8ae0-a501539d009c}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\ShaderMod\source\CommonTools.cpp" />
    <ClCompile Include="source\EffectParser.cpp" />
    <ClCompile Include="source\YAMLCompile.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="source\EffectParser.h" />
    <ClInclude Include="source\StubsJPEG.h" />
    <ClInclude Include="source\StubsPNG.h" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9300E077-B480-46C8-ABAB-ED5F8FF8A95B}</ProjectGuid>
    <RootNamespace>YAMLFXC</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\bullseye.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="PropertySheet.props" />
    <Import Project="PackmanPackages.props" />
    <Import Project="..\..\Darkroom\DarkroomExtDeps.props" />
    <Import Project="..\..\bullseye.props" />
    <Import Project="..\..\SharedExternalPackages\LwApi\LwApi.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)32</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)64</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)64</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|x64'">
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)64</TargetName>
    <ExelwtablePath>$(PM_PACKAGES_ROOT)\BullseyeCoverage\$(BullseyeVersion)\bin\x64;$(VC_ExelwtablePath_x64);$(WindowsSDK_ExelwtablePath);$(VS_ExelwtablePath);$(MSBuild_ExelwtablePath);$(FxCopDir);$(PATH);</ExelwtablePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)32</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|Win32'">
    <OutDir>bin\$(Configuration)\</OutDir>
    <IntDir>intermediate\$(TargetName)\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)32</TargetName>
    <ExelwtablePath>$(PM_PACKAGES_ROOT)\BullseyeCoverage\$(BullseyeVersion)\bin;$(VC_ExelwtablePath_x86);$(WindowsSDK_ExelwtablePath);$(VS_ExelwtablePath);$(MSBuild_ExelwtablePath);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH);</ExelwtablePath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>false</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mtd-x86.lib;zlib-static-vc141-mtd-x86.lib;turbojpeg-static-vc141-mtd-x86.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;WIN64;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>false</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mtd-x64.lib;zlib-static-vc141-mtd-x64.lib;turbojpeg-static-vc141-mtd-x64.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>Guard</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mt-x86.lib;zlib-static-vc141-mt-x86.lib;turbojpeg-static-vc141-mt-x86.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>Guard</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mt-x86.lib;zlib-static-vc141-mt-x86.lib;turbojpeg-static-vc141-mt-x86.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;WIN64;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>Guard</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mt-x64.lib;zlib-static-vc141-mt-x64.lib;turbojpeg-static-vc141-mt-x64.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Coverage|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;WIN64;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\..\ShaderMod\source;./headers;..\..\Darkroom\include;..\..\ACEF\include;$(LwApiRoot);$(OpenExrRoot)\include;$(LibjpegTurboRoot)\include;$(ZlibNgRoot)\include;$(yamlcppRoot)\include;$(boostRoot)\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <TreatWarningAsError>true</TreatWarningAsError>
      <AdditionalOptions>/Qspectre %(AdditionalOptions)</AdditionalOptions>
      <ControlFlowGuard>Guard</ControlFlowGuard>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
      <AdditionalDependencies>dxgi.lib;d3d11.lib;dxguid.lib;shlwapi.lib;yaml-cpp-static-vc141-mt-x64.lib;zlib-static-vc141-mt-x64.lib;turbojpeg-static-vc141-mt-x64.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\..\Darkroom\lib;$(yamlcppRoot)\lib;%(AdditionalLibraryDirectories);</AdditionalLibraryDirectories>
    </Link>
    <PreBuildEvent>
      <Command>..\..\pull_in_vs YAMLFXC.packman.xml</Command>
      <Message>Updating external dependencies (if needed)</Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>