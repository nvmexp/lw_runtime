// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BusMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BusMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* BusMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusMessage_Generic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_Generic_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusMessage_EncryptedBusMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_EncryptedBusMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BusMessage_EncryptedBusMessage_EncryptionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BusMessage_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_Status_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BusMessage_Status_Code_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BusMessage_Peer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_Peer_reflection_ = NULL;
const ::google::protobuf::Descriptor* BusMessage_EncryptionSetup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BusMessage_EncryptionSetup_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BusMessage_2eproto() {
  protobuf_AddDesc_BusMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BusMessage.proto");
  GOOGLE_CHECK(file != NULL);
  BusMessage_descriptor_ = file->message_type(0);
  static const int BusMessage_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, source_system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, source_module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, joined_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, target_system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, target_module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, reference_uniqueid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, bus_peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, generic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, encryptedbusmessage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, encryptionsetup_),
  };
  BusMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_descriptor_,
      BusMessage::default_instance_,
      BusMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage));
  BusMessage_Generic_descriptor_ = BusMessage_descriptor_->nested_type(0);
  static const int BusMessage_Generic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Generic, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Generic, data_),
  };
  BusMessage_Generic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_Generic_descriptor_,
      BusMessage_Generic::default_instance_,
      BusMessage_Generic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Generic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Generic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage_Generic));
  BusMessage_EncryptedBusMessage_descriptor_ = BusMessage_descriptor_->nested_type(1);
  static const int BusMessage_EncryptedBusMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptedBusMessage, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptedBusMessage, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptedBusMessage, iv_),
  };
  BusMessage_EncryptedBusMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_EncryptedBusMessage_descriptor_,
      BusMessage_EncryptedBusMessage::default_instance_,
      BusMessage_EncryptedBusMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptedBusMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptedBusMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage_EncryptedBusMessage));
  BusMessage_EncryptedBusMessage_EncryptionType_descriptor_ = BusMessage_EncryptedBusMessage_descriptor_->enum_type(0);
  BusMessage_Status_descriptor_ = BusMessage_descriptor_->nested_type(2);
  static const int BusMessage_Status_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Status, code_),
  };
  BusMessage_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_Status_descriptor_,
      BusMessage_Status::default_instance_,
      BusMessage_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage_Status));
  BusMessage_Status_Code_descriptor_ = BusMessage_Status_descriptor_->enum_type(0);
  BusMessage_Peer_descriptor_ = BusMessage_descriptor_->nested_type(3);
  static const int BusMessage_Peer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Peer, system_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Peer, module_),
  };
  BusMessage_Peer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_Peer_descriptor_,
      BusMessage_Peer::default_instance_,
      BusMessage_Peer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Peer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_Peer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage_Peer));
  BusMessage_EncryptionSetup_descriptor_ = BusMessage_descriptor_->nested_type(4);
  static const int BusMessage_EncryptionSetup_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptionSetup, aeskey_),
  };
  BusMessage_EncryptionSetup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BusMessage_EncryptionSetup_descriptor_,
      BusMessage_EncryptionSetup::default_instance_,
      BusMessage_EncryptionSetup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptionSetup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BusMessage_EncryptionSetup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BusMessage_EncryptionSetup));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BusMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_descriptor_, &BusMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_Generic_descriptor_, &BusMessage_Generic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_EncryptedBusMessage_descriptor_, &BusMessage_EncryptedBusMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_Status_descriptor_, &BusMessage_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_Peer_descriptor_, &BusMessage_Peer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BusMessage_EncryptionSetup_descriptor_, &BusMessage_EncryptionSetup::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BusMessage_2eproto() {
  delete BusMessage::default_instance_;
  delete BusMessage_reflection_;
  delete BusMessage_Generic::default_instance_;
  delete BusMessage_Generic_reflection_;
  delete BusMessage_EncryptedBusMessage::default_instance_;
  delete BusMessage_EncryptedBusMessage_reflection_;
  delete BusMessage_Status::default_instance_;
  delete BusMessage_Status_reflection_;
  delete BusMessage_Peer::default_instance_;
  delete BusMessage_Peer_reflection_;
  delete BusMessage_EncryptionSetup::default_instance_;
  delete BusMessage_EncryptionSetup_reflection_;
}

void protobuf_AddDesc_BusMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020BusMessage.proto\"\377\005\n\nBusMessage\022\020\n\010uni"
    "queid\030\001 \002(\t\022\025\n\rsource_system\030\002 \002(\t\022\025\n\rso"
    "urce_module\030\003 \002(\t\022\016\n\006domain\030\004 \001(\t\022\016\n\006joi"
    "ned\030\005 \001(\010\022\025\n\rtarget_system\030\006 \001(\t\022\025\n\rtarg"
    "et_module\030\007 \001(\t\022\032\n\022reference_uniqueid\030\n "
    "\001(\t\022\"\n\010bus_peer\030\017 \003(\0132\020.BusMessage.Peer\022"
    "$\n\007generic\030\024 \001(\0132\023.BusMessage.Generic\022\"\n"
    "\006status\030\025 \001(\0132\022.BusMessage.Status\022<\n\023enc"
    "ryptedBusMessage\030\026 \001(\0132\037.BusMessage.Encr"
    "yptedBusMessage\0225\n\017encryptionsetup\030\310\001 \001("
    "\0132\033.BusMessage.EncryptionSetup\032%\n\007Generi"
    "c\022\014\n\004type\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\032\233\001\n\023Encryp"
    "tedBusMessage\022<\n\004type\030\001 \001(\0162..BusMessage"
    ".EncryptedBusMessage.EncryptionType\022\014\n\004d"
    "ata\030\002 \001(\014\022\n\n\002iv\030\003 \001(\014\",\n\016EncryptionType\022"
    "\010\n\004NONE\020\001\022\007\n\003RSA\020\002\022\007\n\003AES\020\003\032T\n\006Status\022%\n"
    "\004code\030\001 \001(\0162\027.BusMessage.Status.Code\"#\n\004"
    "Code\022\014\n\010Received\020\001\022\r\n\tCompleted\020\002\032&\n\004Pee"
    "r\022\016\n\006system\030\001 \002(\t\022\016\n\006module\030\002 \002(\t\032!\n\017Enc"
    "ryptionSetup\022\016\n\006AESKey\030\001 \001(\014", 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BusMessage.proto", &protobuf_RegisterTypes);
  BusMessage::default_instance_ = new BusMessage();
  BusMessage_Generic::default_instance_ = new BusMessage_Generic();
  BusMessage_EncryptedBusMessage::default_instance_ = new BusMessage_EncryptedBusMessage();
  BusMessage_Status::default_instance_ = new BusMessage_Status();
  BusMessage_Peer::default_instance_ = new BusMessage_Peer();
  BusMessage_EncryptionSetup::default_instance_ = new BusMessage_EncryptionSetup();
  BusMessage::default_instance_->InitAsDefaultInstance();
  BusMessage_Generic::default_instance_->InitAsDefaultInstance();
  BusMessage_EncryptedBusMessage::default_instance_->InitAsDefaultInstance();
  BusMessage_Status::default_instance_->InitAsDefaultInstance();
  BusMessage_Peer::default_instance_->InitAsDefaultInstance();
  BusMessage_EncryptionSetup::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BusMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BusMessage_2eproto {
  StaticDescriptorInitializer_BusMessage_2eproto() {
    protobuf_AddDesc_BusMessage_2eproto();
  }
} static_descriptor_initializer_BusMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BusMessage_Generic::kTypeFieldNumber;
const int BusMessage_Generic::kDataFieldNumber;
#endif  // !_MSC_VER

BusMessage_Generic::BusMessage_Generic()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage.Generic)
}

void BusMessage_Generic::InitAsDefaultInstance() {
}

BusMessage_Generic::BusMessage_Generic(const BusMessage_Generic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage.Generic)
}

void BusMessage_Generic::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0u;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage_Generic::~BusMessage_Generic() {
  // @@protoc_insertion_point(destructor:BusMessage.Generic)
  SharedDtor();
}

void BusMessage_Generic::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void BusMessage_Generic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage_Generic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_Generic_descriptor_;
}

const BusMessage_Generic& BusMessage_Generic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage_Generic* BusMessage_Generic::default_instance_ = NULL;

BusMessage_Generic* BusMessage_Generic::New() const {
  return new BusMessage_Generic;
}

void BusMessage_Generic::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0u;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage_Generic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage.Generic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage.Generic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage.Generic)
  return false;
#undef DO_
}

void BusMessage_Generic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage.Generic)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage.Generic)
}

::google::protobuf::uint8* BusMessage_Generic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage.Generic)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage.Generic)
  return target;
}

int BusMessage_Generic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage_Generic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage_Generic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage_Generic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage_Generic::MergeFrom(const BusMessage_Generic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage_Generic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage_Generic::CopyFrom(const BusMessage_Generic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage_Generic::IsInitialized() const {

  return true;
}

void BusMessage_Generic::Swap(BusMessage_Generic* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage_Generic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_Generic_descriptor_;
  metadata.reflection = BusMessage_Generic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* BusMessage_EncryptedBusMessage_EncryptionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_EncryptedBusMessage_EncryptionType_descriptor_;
}
bool BusMessage_EncryptedBusMessage_EncryptionType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BusMessage_EncryptedBusMessage_EncryptionType BusMessage_EncryptedBusMessage::NONE;
const BusMessage_EncryptedBusMessage_EncryptionType BusMessage_EncryptedBusMessage::RSA;
const BusMessage_EncryptedBusMessage_EncryptionType BusMessage_EncryptedBusMessage::AES;
const BusMessage_EncryptedBusMessage_EncryptionType BusMessage_EncryptedBusMessage::EncryptionType_MIN;
const BusMessage_EncryptedBusMessage_EncryptionType BusMessage_EncryptedBusMessage::EncryptionType_MAX;
const int BusMessage_EncryptedBusMessage::EncryptionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BusMessage_EncryptedBusMessage::kTypeFieldNumber;
const int BusMessage_EncryptedBusMessage::kDataFieldNumber;
const int BusMessage_EncryptedBusMessage::kIvFieldNumber;
#endif  // !_MSC_VER

BusMessage_EncryptedBusMessage::BusMessage_EncryptedBusMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage.EncryptedBusMessage)
}

void BusMessage_EncryptedBusMessage::InitAsDefaultInstance() {
}

BusMessage_EncryptedBusMessage::BusMessage_EncryptedBusMessage(const BusMessage_EncryptedBusMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage.EncryptedBusMessage)
}

void BusMessage_EncryptedBusMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iv_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage_EncryptedBusMessage::~BusMessage_EncryptedBusMessage() {
  // @@protoc_insertion_point(destructor:BusMessage.EncryptedBusMessage)
  SharedDtor();
}

void BusMessage_EncryptedBusMessage::SharedDtor() {
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (iv_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete iv_;
  }
  if (this != default_instance_) {
  }
}

void BusMessage_EncryptedBusMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage_EncryptedBusMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_EncryptedBusMessage_descriptor_;
}

const BusMessage_EncryptedBusMessage& BusMessage_EncryptedBusMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage_EncryptedBusMessage* BusMessage_EncryptedBusMessage::default_instance_ = NULL;

BusMessage_EncryptedBusMessage* BusMessage_EncryptedBusMessage::New() const {
  return new BusMessage_EncryptedBusMessage;
}

void BusMessage_EncryptedBusMessage::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    type_ = 1;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
    if (has_iv()) {
      if (iv_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        iv_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage_EncryptedBusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage.EncryptedBusMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BusMessage.EncryptedBusMessage.EncryptionType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BusMessage_EncryptedBusMessage_EncryptionType_IsValid(value)) {
            set_type(static_cast< ::BusMessage_EncryptedBusMessage_EncryptionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_iv;
        break;
      }

      // optional bytes iv = 3;
      case 3: {
        if (tag == 26) {
         parse_iv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_iv()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage.EncryptedBusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage.EncryptedBusMessage)
  return false;
#undef DO_
}

void BusMessage_EncryptedBusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage.EncryptedBusMessage)
  // optional .BusMessage.EncryptedBusMessage.EncryptionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // optional bytes iv = 3;
  if (has_iv()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->iv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage.EncryptedBusMessage)
}

::google::protobuf::uint8* BusMessage_EncryptedBusMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage.EncryptedBusMessage)
  // optional .BusMessage.EncryptedBusMessage.EncryptionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // optional bytes iv = 3;
  if (has_iv()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->iv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage.EncryptedBusMessage)
  return target;
}

int BusMessage_EncryptedBusMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .BusMessage.EncryptedBusMessage.EncryptionType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional bytes iv = 3;
    if (has_iv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->iv());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage_EncryptedBusMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage_EncryptedBusMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage_EncryptedBusMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage_EncryptedBusMessage::MergeFrom(const BusMessage_EncryptedBusMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_iv()) {
      set_iv(from.iv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage_EncryptedBusMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage_EncryptedBusMessage::CopyFrom(const BusMessage_EncryptedBusMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage_EncryptedBusMessage::IsInitialized() const {

  return true;
}

void BusMessage_EncryptedBusMessage::Swap(BusMessage_EncryptedBusMessage* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(data_, other->data_);
    std::swap(iv_, other->iv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage_EncryptedBusMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_EncryptedBusMessage_descriptor_;
  metadata.reflection = BusMessage_EncryptedBusMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

const ::google::protobuf::EnumDescriptor* BusMessage_Status_Code_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_Status_Code_descriptor_;
}
bool BusMessage_Status_Code_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const BusMessage_Status_Code BusMessage_Status::Received;
const BusMessage_Status_Code BusMessage_Status::Completed;
const BusMessage_Status_Code BusMessage_Status::Code_MIN;
const BusMessage_Status_Code BusMessage_Status::Code_MAX;
const int BusMessage_Status::Code_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int BusMessage_Status::kCodeFieldNumber;
#endif  // !_MSC_VER

BusMessage_Status::BusMessage_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage.Status)
}

void BusMessage_Status::InitAsDefaultInstance() {
}

BusMessage_Status::BusMessage_Status(const BusMessage_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage.Status)
}

void BusMessage_Status::SharedCtor() {
  _cached_size_ = 0;
  code_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage_Status::~BusMessage_Status() {
  // @@protoc_insertion_point(destructor:BusMessage.Status)
  SharedDtor();
}

void BusMessage_Status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BusMessage_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_Status_descriptor_;
}

const BusMessage_Status& BusMessage_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage_Status* BusMessage_Status::default_instance_ = NULL;

BusMessage_Status* BusMessage_Status::New() const {
  return new BusMessage_Status;
}

void BusMessage_Status::Clear() {
  code_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage.Status)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BusMessage.Status.Code code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BusMessage_Status_Code_IsValid(value)) {
            set_code(static_cast< ::BusMessage_Status_Code >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage.Status)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage.Status)
  return false;
#undef DO_
}

void BusMessage_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage.Status)
  // optional .BusMessage.Status.Code code = 1;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage.Status)
}

::google::protobuf::uint8* BusMessage_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage.Status)
  // optional .BusMessage.Status.Code code = 1;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage.Status)
  return target;
}

int BusMessage_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .BusMessage.Status.Code code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage_Status::MergeFrom(const BusMessage_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage_Status::CopyFrom(const BusMessage_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage_Status::IsInitialized() const {

  return true;
}

void BusMessage_Status::Swap(BusMessage_Status* other) {
  if (other != this) {
    std::swap(code_, other->code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_Status_descriptor_;
  metadata.reflection = BusMessage_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BusMessage_Peer::kSystemFieldNumber;
const int BusMessage_Peer::kModuleFieldNumber;
#endif  // !_MSC_VER

BusMessage_Peer::BusMessage_Peer()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage.Peer)
}

void BusMessage_Peer::InitAsDefaultInstance() {
}

BusMessage_Peer::BusMessage_Peer(const BusMessage_Peer& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage.Peer)
}

void BusMessage_Peer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  system_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage_Peer::~BusMessage_Peer() {
  // @@protoc_insertion_point(destructor:BusMessage.Peer)
  SharedDtor();
}

void BusMessage_Peer::SharedDtor() {
  if (system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete system_;
  }
  if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete module_;
  }
  if (this != default_instance_) {
  }
}

void BusMessage_Peer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage_Peer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_Peer_descriptor_;
}

const BusMessage_Peer& BusMessage_Peer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage_Peer* BusMessage_Peer::default_instance_ = NULL;

BusMessage_Peer* BusMessage_Peer::New() const {
  return new BusMessage_Peer;
}

void BusMessage_Peer::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_system()) {
      if (system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        system_->clear();
      }
    }
    if (has_module()) {
      if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        module_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage_Peer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage.Peer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string system = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->system().data(), this->system().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "system");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_module;
        break;
      }

      // required string module = 2;
      case 2: {
        if (tag == 18) {
         parse_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module().data(), this->module().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "module");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage.Peer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage.Peer)
  return false;
#undef DO_
}

void BusMessage_Peer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage.Peer)
  // required string system = 1;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->system(), output);
  }

  // required string module = 2;
  if (has_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module().data(), this->module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "module");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->module(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage.Peer)
}

::google::protobuf::uint8* BusMessage_Peer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage.Peer)
  // required string system = 1;
  if (has_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->system().data(), this->system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->system(), target);
  }

  // required string module = 2;
  if (has_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module().data(), this->module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "module");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->module(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage.Peer)
  return target;
}

int BusMessage_Peer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string system = 1;
    if (has_system()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->system());
    }

    // required string module = 2;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage_Peer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage_Peer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage_Peer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage_Peer::MergeFrom(const BusMessage_Peer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system()) {
      set_system(from.system());
    }
    if (from.has_module()) {
      set_module(from.module());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage_Peer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage_Peer::CopyFrom(const BusMessage_Peer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage_Peer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void BusMessage_Peer::Swap(BusMessage_Peer* other) {
  if (other != this) {
    std::swap(system_, other->system_);
    std::swap(module_, other->module_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage_Peer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_Peer_descriptor_;
  metadata.reflection = BusMessage_Peer_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BusMessage_EncryptionSetup::kAESKeyFieldNumber;
#endif  // !_MSC_VER

BusMessage_EncryptionSetup::BusMessage_EncryptionSetup()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage.EncryptionSetup)
}

void BusMessage_EncryptionSetup::InitAsDefaultInstance() {
}

BusMessage_EncryptionSetup::BusMessage_EncryptionSetup(const BusMessage_EncryptionSetup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage.EncryptionSetup)
}

void BusMessage_EncryptionSetup::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  aeskey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage_EncryptionSetup::~BusMessage_EncryptionSetup() {
  // @@protoc_insertion_point(destructor:BusMessage.EncryptionSetup)
  SharedDtor();
}

void BusMessage_EncryptionSetup::SharedDtor() {
  if (aeskey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete aeskey_;
  }
  if (this != default_instance_) {
  }
}

void BusMessage_EncryptionSetup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage_EncryptionSetup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_EncryptionSetup_descriptor_;
}

const BusMessage_EncryptionSetup& BusMessage_EncryptionSetup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage_EncryptionSetup* BusMessage_EncryptionSetup::default_instance_ = NULL;

BusMessage_EncryptionSetup* BusMessage_EncryptionSetup::New() const {
  return new BusMessage_EncryptionSetup;
}

void BusMessage_EncryptionSetup::Clear() {
  if (has_aeskey()) {
    if (aeskey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      aeskey_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage_EncryptionSetup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage.EncryptionSetup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes AESKey = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_aeskey()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage.EncryptionSetup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage.EncryptionSetup)
  return false;
#undef DO_
}

void BusMessage_EncryptionSetup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage.EncryptionSetup)
  // optional bytes AESKey = 1;
  if (has_aeskey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->aeskey(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage.EncryptionSetup)
}

::google::protobuf::uint8* BusMessage_EncryptionSetup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage.EncryptionSetup)
  // optional bytes AESKey = 1;
  if (has_aeskey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->aeskey(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage.EncryptionSetup)
  return target;
}

int BusMessage_EncryptionSetup::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes AESKey = 1;
    if (has_aeskey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->aeskey());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage_EncryptionSetup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage_EncryptionSetup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage_EncryptionSetup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage_EncryptionSetup::MergeFrom(const BusMessage_EncryptionSetup& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_aeskey()) {
      set_aeskey(from.aeskey());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage_EncryptionSetup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage_EncryptionSetup::CopyFrom(const BusMessage_EncryptionSetup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage_EncryptionSetup::IsInitialized() const {

  return true;
}

void BusMessage_EncryptionSetup::Swap(BusMessage_EncryptionSetup* other) {
  if (other != this) {
    std::swap(aeskey_, other->aeskey_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage_EncryptionSetup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_EncryptionSetup_descriptor_;
  metadata.reflection = BusMessage_EncryptionSetup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BusMessage::kUniqueidFieldNumber;
const int BusMessage::kSourceSystemFieldNumber;
const int BusMessage::kSourceModuleFieldNumber;
const int BusMessage::kDomainFieldNumber;
const int BusMessage::kJoinedFieldNumber;
const int BusMessage::kTargetSystemFieldNumber;
const int BusMessage::kTargetModuleFieldNumber;
const int BusMessage::kReferenceUniqueidFieldNumber;
const int BusMessage::kBusPeerFieldNumber;
const int BusMessage::kGenericFieldNumber;
const int BusMessage::kStatusFieldNumber;
const int BusMessage::kEncryptedBusMessageFieldNumber;
const int BusMessage::kEncryptionsetupFieldNumber;
#endif  // !_MSC_VER

BusMessage::BusMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BusMessage)
}

void BusMessage::InitAsDefaultInstance() {
  generic_ = const_cast< ::BusMessage_Generic*>(&::BusMessage_Generic::default_instance());
  status_ = const_cast< ::BusMessage_Status*>(&::BusMessage_Status::default_instance());
  encryptedbusmessage_ = const_cast< ::BusMessage_EncryptedBusMessage*>(&::BusMessage_EncryptedBusMessage::default_instance());
  encryptionsetup_ = const_cast< ::BusMessage_EncryptionSetup*>(&::BusMessage_EncryptionSetup::default_instance());
}

BusMessage::BusMessage(const BusMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BusMessage)
}

void BusMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_system_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  joined_ = false;
  target_system_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reference_uniqueid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  generic_ = NULL;
  status_ = NULL;
  encryptedbusmessage_ = NULL;
  encryptionsetup_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BusMessage::~BusMessage() {
  // @@protoc_insertion_point(destructor:BusMessage)
  SharedDtor();
}

void BusMessage::SharedDtor() {
  if (uniqueid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uniqueid_;
  }
  if (source_system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_system_;
  }
  if (source_module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_module_;
  }
  if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete domain_;
  }
  if (target_system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_system_;
  }
  if (target_module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete target_module_;
  }
  if (reference_uniqueid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reference_uniqueid_;
  }
  if (this != default_instance_) {
    delete generic_;
    delete status_;
    delete encryptedbusmessage_;
    delete encryptionsetup_;
  }
}

void BusMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BusMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BusMessage_descriptor_;
}

const BusMessage& BusMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BusMessage_2eproto();
  return *default_instance_;
}

BusMessage* BusMessage::default_instance_ = NULL;

BusMessage* BusMessage::New() const {
  return new BusMessage;
}

void BusMessage::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_uniqueid()) {
      if (uniqueid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uniqueid_->clear();
      }
    }
    if (has_source_system()) {
      if (source_system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        source_system_->clear();
      }
    }
    if (has_source_module()) {
      if (source_module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        source_module_->clear();
      }
    }
    if (has_domain()) {
      if (domain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        domain_->clear();
      }
    }
    joined_ = false;
    if (has_target_system()) {
      if (target_system_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        target_system_->clear();
      }
    }
    if (has_target_module()) {
      if (target_module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        target_module_->clear();
      }
    }
    if (has_reference_uniqueid()) {
      if (reference_uniqueid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reference_uniqueid_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 7680) {
    if (has_generic()) {
      if (generic_ != NULL) generic_->::BusMessage_Generic::Clear();
    }
    if (has_status()) {
      if (status_ != NULL) status_->::BusMessage_Status::Clear();
    }
    if (has_encryptedbusmessage()) {
      if (encryptedbusmessage_ != NULL) encryptedbusmessage_->::BusMessage_EncryptedBusMessage::Clear();
    }
    if (has_encryptionsetup()) {
      if (encryptionsetup_ != NULL) encryptionsetup_->::BusMessage_EncryptionSetup::Clear();
    }
  }
  bus_peer_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BusMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BusMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string uniqueid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uniqueid().data(), this->uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uniqueid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_source_system;
        break;
      }

      // required string source_system = 2;
      case 2: {
        if (tag == 18) {
         parse_source_system:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_system().data(), this->source_system().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "source_system");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source_module;
        break;
      }

      // required string source_module = 3;
      case 3: {
        if (tag == 26) {
         parse_source_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_module()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source_module().data(), this->source_module().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "source_module");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_domain;
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (tag == 34) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_joined;
        break;
      }

      // optional bool joined = 5;
      case 5: {
        if (tag == 40) {
         parse_joined:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &joined_)));
          set_has_joined();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_target_system;
        break;
      }

      // optional string target_system = 6;
      case 6: {
        if (tag == 50) {
         parse_target_system:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_system()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target_system().data(), this->target_system().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "target_system");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_target_module;
        break;
      }

      // optional string target_module = 7;
      case 7: {
        if (tag == 58) {
         parse_target_module:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target_module()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->target_module().data(), this->target_module().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "target_module");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_reference_uniqueid;
        break;
      }

      // optional string reference_uniqueid = 10;
      case 10: {
        if (tag == 82) {
         parse_reference_uniqueid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reference_uniqueid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reference_uniqueid().data(), this->reference_uniqueid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reference_uniqueid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_bus_peer;
        break;
      }

      // repeated .BusMessage.Peer bus_peer = 15;
      case 15: {
        if (tag == 122) {
         parse_bus_peer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bus_peer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_bus_peer;
        if (input->ExpectTag(162)) goto parse_generic;
        break;
      }

      // optional .BusMessage.Generic generic = 20;
      case 20: {
        if (tag == 162) {
         parse_generic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_generic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_status;
        break;
      }

      // optional .BusMessage.Status status = 21;
      case 21: {
        if (tag == 170) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_encryptedBusMessage;
        break;
      }

      // optional .BusMessage.EncryptedBusMessage encryptedBusMessage = 22;
      case 22: {
        if (tag == 178) {
         parse_encryptedBusMessage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_encryptedbusmessage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(1602)) goto parse_encryptionsetup;
        break;
      }

      // optional .BusMessage.EncryptionSetup encryptionsetup = 200;
      case 200: {
        if (tag == 1602) {
         parse_encryptionsetup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_encryptionsetup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BusMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BusMessage)
  return false;
#undef DO_
}

void BusMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BusMessage)
  // required string uniqueid = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uniqueid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uniqueid(), output);
  }

  // required string source_system = 2;
  if (has_source_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_system().data(), this->source_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "source_system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_system(), output);
  }

  // required string source_module = 3;
  if (has_source_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_module().data(), this->source_module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "source_module");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_module(), output);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional bool joined = 5;
  if (has_joined()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->joined(), output);
  }

  // optional string target_system = 6;
  if (has_target_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_system().data(), this->target_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "target_system");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->target_system(), output);
  }

  // optional string target_module = 7;
  if (has_target_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_module().data(), this->target_module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "target_module");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->target_module(), output);
  }

  // optional string reference_uniqueid = 10;
  if (has_reference_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference_uniqueid().data(), this->reference_uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reference_uniqueid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->reference_uniqueid(), output);
  }

  // repeated .BusMessage.Peer bus_peer = 15;
  for (int i = 0; i < this->bus_peer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->bus_peer(i), output);
  }

  // optional .BusMessage.Generic generic = 20;
  if (has_generic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->generic(), output);
  }

  // optional .BusMessage.Status status = 21;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->status(), output);
  }

  // optional .BusMessage.EncryptedBusMessage encryptedBusMessage = 22;
  if (has_encryptedbusmessage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->encryptedbusmessage(), output);
  }

  // optional .BusMessage.EncryptionSetup encryptionsetup = 200;
  if (has_encryptionsetup()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200, this->encryptionsetup(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BusMessage)
}

::google::protobuf::uint8* BusMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BusMessage)
  // required string uniqueid = 1;
  if (has_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uniqueid().data(), this->uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uniqueid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uniqueid(), target);
  }

  // required string source_system = 2;
  if (has_source_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_system().data(), this->source_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "source_system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_system(), target);
  }

  // required string source_module = 3;
  if (has_source_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source_module().data(), this->source_module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "source_module");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source_module(), target);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional bool joined = 5;
  if (has_joined()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->joined(), target);
  }

  // optional string target_system = 6;
  if (has_target_system()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_system().data(), this->target_system().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "target_system");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->target_system(), target);
  }

  // optional string target_module = 7;
  if (has_target_module()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->target_module().data(), this->target_module().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "target_module");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->target_module(), target);
  }

  // optional string reference_uniqueid = 10;
  if (has_reference_uniqueid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reference_uniqueid().data(), this->reference_uniqueid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reference_uniqueid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->reference_uniqueid(), target);
  }

  // repeated .BusMessage.Peer bus_peer = 15;
  for (int i = 0; i < this->bus_peer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->bus_peer(i), target);
  }

  // optional .BusMessage.Generic generic = 20;
  if (has_generic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->generic(), target);
  }

  // optional .BusMessage.Status status = 21;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->status(), target);
  }

  // optional .BusMessage.EncryptedBusMessage encryptedBusMessage = 22;
  if (has_encryptedbusmessage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->encryptedbusmessage(), target);
  }

  // optional .BusMessage.EncryptionSetup encryptionsetup = 200;
  if (has_encryptionsetup()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        200, this->encryptionsetup(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BusMessage)
  return target;
}

int BusMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string uniqueid = 1;
    if (has_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uniqueid());
    }

    // required string source_system = 2;
    if (has_source_system()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_system());
    }

    // required string source_module = 3;
    if (has_source_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_module());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional bool joined = 5;
    if (has_joined()) {
      total_size += 1 + 1;
    }

    // optional string target_system = 6;
    if (has_target_system()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_system());
    }

    // optional string target_module = 7;
    if (has_target_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->target_module());
    }

    // optional string reference_uniqueid = 10;
    if (has_reference_uniqueid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reference_uniqueid());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional .BusMessage.Generic generic = 20;
    if (has_generic()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->generic());
    }

    // optional .BusMessage.Status status = 21;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status());
    }

    // optional .BusMessage.EncryptedBusMessage encryptedBusMessage = 22;
    if (has_encryptedbusmessage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->encryptedbusmessage());
    }

    // optional .BusMessage.EncryptionSetup encryptionsetup = 200;
    if (has_encryptionsetup()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->encryptionsetup());
    }

  }
  // repeated .BusMessage.Peer bus_peer = 15;
  total_size += 1 * this->bus_peer_size();
  for (int i = 0; i < this->bus_peer_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bus_peer(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void BusMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BusMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BusMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BusMessage::MergeFrom(const BusMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  bus_peer_.MergeFrom(from.bus_peer_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uniqueid()) {
      set_uniqueid(from.uniqueid());
    }
    if (from.has_source_system()) {
      set_source_system(from.source_system());
    }
    if (from.has_source_module()) {
      set_source_module(from.source_module());
    }
    if (from.has_domain()) {
      set_domain(from.domain());
    }
    if (from.has_joined()) {
      set_joined(from.joined());
    }
    if (from.has_target_system()) {
      set_target_system(from.target_system());
    }
    if (from.has_target_module()) {
      set_target_module(from.target_module());
    }
    if (from.has_reference_uniqueid()) {
      set_reference_uniqueid(from.reference_uniqueid());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_generic()) {
      mutable_generic()->::BusMessage_Generic::MergeFrom(from.generic());
    }
    if (from.has_status()) {
      mutable_status()->::BusMessage_Status::MergeFrom(from.status());
    }
    if (from.has_encryptedbusmessage()) {
      mutable_encryptedbusmessage()->::BusMessage_EncryptedBusMessage::MergeFrom(from.encryptedbusmessage());
    }
    if (from.has_encryptionsetup()) {
      mutable_encryptionsetup()->::BusMessage_EncryptionSetup::MergeFrom(from.encryptionsetup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BusMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BusMessage::CopyFrom(const BusMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BusMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->bus_peer())) return false;
  return true;
}

void BusMessage::Swap(BusMessage* other) {
  if (other != this) {
    std::swap(uniqueid_, other->uniqueid_);
    std::swap(source_system_, other->source_system_);
    std::swap(source_module_, other->source_module_);
    std::swap(domain_, other->domain_);
    std::swap(joined_, other->joined_);
    std::swap(target_system_, other->target_system_);
    std::swap(target_module_, other->target_module_);
    std::swap(reference_uniqueid_, other->reference_uniqueid_);
    bus_peer_.Swap(&other->bus_peer_);
    std::swap(generic_, other->generic_);
    std::swap(status_, other->status_);
    std::swap(encryptedbusmessage_, other->encryptedbusmessage_);
    std::swap(encryptionsetup_, other->encryptionsetup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BusMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BusMessage_descriptor_;
  metadata.reflection = BusMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
