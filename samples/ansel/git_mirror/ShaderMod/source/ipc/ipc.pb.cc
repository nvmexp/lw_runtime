// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace AnselIpc {

namespace {

const ::google::protobuf::Descriptor* IpcVersionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IpcVersionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IpcVersionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IpcVersionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnselReadyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselReadyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnselReadyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselReadyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnselStatusReportRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselStatusReportRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnselStatusReportRequest_OneofOptionalData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselStatusReportRequest_OneofOptionalData_reflection_ = NULL;
struct AnselStatusReportRequest_OneofOptionalDataOneofInstance {
  ::google::protobuf::int32 integervalue_;
  const ::std::string* stringvalue_;
  float floatvalue_;
  bool boolvalue_;
}* AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* AnselStatusReportResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselStatusReportResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferEnabledRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferEnabledRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferEnabledResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferEnabledResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferStyleRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferStyleRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferStyleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferStyleResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStyleTransferModelListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStyleTransferModelListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStyleTransferModelListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStyleTransferModelListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStyleTransferModelListResponse_ModelDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStyleTransferModelListResponse_ModelDescription_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferModelRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferModelRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetStyleTransferModelResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetStyleTransferModelResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferStatusRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferStatusRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferStatusResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferSideloadChoiceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferSideloadChoiceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferSideloadChoiceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferSideloadChoiceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferSideloadProgressRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferSideloadProgressRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StyleTransferSideloadProgressResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StyleTransferSideloadProgressResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIReadyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIReadyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIReadyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIReadyResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescButton_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescButton_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescSlider_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescSlider_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescEdit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescEdit_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescBoolean_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescBoolean_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescLabel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescLabel_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapFieldEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapFieldEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescList_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIDescPulldown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIDescPulldown_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddUIElementRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddUIElementRequest_reflection_ = NULL;
struct AddUIElementRequestOneofInstance {
  const ::AnselIpc::UIDescButton* uidescbutton_;
  const ::AnselIpc::UIDescSlider* uidescslider_;
  const ::AnselIpc::UIDescEdit* uidescedit_;
  const ::AnselIpc::UIDescBoolean* uidescboolean_;
  const ::AnselIpc::UIDescLabel* uidesclabel_;
  const ::AnselIpc::UIDescList* uidesclist_;
  const ::AnselIpc::UIDescPulldown* uidescpulldown_;
}* AddUIElementRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* AddUIElementResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddUIElementResponse_reflection_ = NULL;
struct AddUIElementResponseOneofInstance {
  const ::AnselIpc::UIDescButton* uidescbutton_;
  const ::AnselIpc::UIDescSlider* uidescslider_;
  const ::AnselIpc::UIDescEdit* uidescedit_;
  const ::AnselIpc::UIDescBoolean* uidescboolean_;
  const ::AnselIpc::UIDescLabel* uidesclabel_;
  const ::AnselIpc::UIDescList* uidesclist_;
  const ::AnselIpc::UIDescPulldown* uidescpulldown_;
}* AddUIElementResponse_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* UIControlChangedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlChangedRequest_reflection_ = NULL;
struct UIControlChangedRequestOneofInstance {
  const ::AnselIpc::UIDescButton* uidescbutton_;
  const ::AnselIpc::UIDescSlider* uidescslider_;
  const ::AnselIpc::UIDescEdit* uidescedit_;
  const ::AnselIpc::UIDescBoolean* uidescboolean_;
  const ::AnselIpc::UIDescLabel* uidesclabel_;
  const ::AnselIpc::UIDescList* uidesclist_;
}* UIControlChangedRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* UIControlChangedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlChangedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlRemoveAllRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlRemoveAllRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlRemoveAllResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlRemoveAllResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlRemoveRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlRemoveRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlRemoveResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlRemoveResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlSetVisibilityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlSetVisibilityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlSetVisibilityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlSetVisibilityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlGetVisibilityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlGetVisibilityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UIControlGetVisibilityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UIControlGetVisibilityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetGameSpecificControlsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetGameSpecificControlsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSettingsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSettingsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSettingsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSettingsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetSettingsResponse_Setting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetSettingsResponse_Setting_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFeatureSetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFeatureSetRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFeatureSetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFeatureSetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetCMSInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetCMSInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetCMSInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetCMSInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetEnabledFeatureSetRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetEnabledFeatureSetRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetEnabledFeatureSetResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetEnabledFeatureSetResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselModdingAvailableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselModdingAvailableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselModdingAvailableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselModdingAvailableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselSDKIntegrationAvailableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselSDKIntegrationAvailableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselSDKIntegrationAvailableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselSDKIntegrationAvailableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScreenResolutionChangedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScreenResolutionChangedRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScreenResolutionChangedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScreenResolutionChangedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetGridOfThirdsEnabledRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetGridOfThirdsEnabledRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetGridOfThirdsEnabledResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetGridOfThirdsEnabledResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetProcessInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetProcessInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetProcessInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetProcessInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetAnselEnabledRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetAnselEnabledRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetAnselEnabledResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetAnselEnabledResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAnselEnabledRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAnselEnabledRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAnselEnabledResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAnselEnabledResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAnselShotPermissionsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAnselShotPermissionsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAnselShotPermissionsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAnselShotPermissionsResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLangIdRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLangIdRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetLangIdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetLangIdResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFOVRangeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFOVRangeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFOVRangeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFOVRangeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFOVRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFOVRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFOVResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFOVResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLwrrentFOVRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLwrrentFOVRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetLwrrentFOVResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetLwrrentFOVResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRollRangeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRollRangeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRollRangeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRollRangeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetRollRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetRollRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetRollResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetRollResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRollRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRollRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRollResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRollResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateFovRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateFovRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateFovResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateFovResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetScreenResolutionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetScreenResolutionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetScreenResolutionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetScreenResolutionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CaptureShotRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CaptureShotRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CaptureShotStartedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CaptureShotStartedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CaptureShotProgressResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CaptureShotProgressResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CaptureShotFinishedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CaptureShotFinishedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CaptureShotProcessingFinishedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CaptureShotProcessingFinishedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* EstimateCaptureRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EstimateCaptureRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EstimateCaptureResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EstimateCaptureResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortCaptureRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortCaptureRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AbortCaptureResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AbortCaptureResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHighresResolutionListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHighresResolutionListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHighresResolutionListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHighresResolutionListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetHighresResolutionListResponse_HighresResolution_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetHighresResolutionListResponse_HighresResolution_reflection_ = NULL;
const ::google::protobuf::Descriptor* Get360ResolutionRangeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Get360ResolutionRangeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Get360ResolutionRangeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Get360ResolutionRangeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFilterListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFilterListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFilterListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFilterListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetEntireStackRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetEntireStackRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetEntireStackResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetEntireStackResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetFilterValuesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetFilterValuesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetFilterValuesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetFilterValuesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResetAllFilterValuesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResetAllFilterValuesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterAndAttributesRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterAndAttributesRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterAndAttributesResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterAndAttributesResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertFilterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertFilterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InsertFilterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InsertFilterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveFilterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveFilterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RemoveFilterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RemoveFilterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveFilterRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveFilterRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoveFilterResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveFilterResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStackInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStackInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStackInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStackInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_ValuesFloat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_ValuesFloat_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_ValuesInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_ValuesInt_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_ValuesUInt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_ValuesUInt_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_ValuesBool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_ValuesBool_reflection_ = NULL;
const ::google::protobuf::Descriptor* FilterProperties_ControlDescription_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FilterProperties_ControlDescription_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFilterInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFilterInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetFilterInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetFilterInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselAvailableRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselAvailableRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsAnselAvailableResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsAnselAvailableResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterAttributeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterAttributeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetFilterAttributeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetFilterAttributeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MouseEventRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MouseEventRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* KeyboardEventRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeyboardEventRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputEventRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputEventRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InputEventResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InputEventResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MultipleInputEventRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MultipleInputEventRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogFilenameResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogFilenameResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportErrorResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportErrorResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetHighQualityRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetHighQualityRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetHighQualityResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetHighQualityResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnselIPCRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselIPCRequest_reflection_ = NULL;
struct AnselIPCRequestOneofInstance {
  const ::AnselIpc::SetAnselEnabledRequest* setanselenabledrequest_;
  const ::AnselIpc::CaptureShotRequest* captureshotrequest_;
  const ::AnselIpc::GetFilterListRequest* getfilterlistrequest_;
  const ::AnselIpc::GetHighresResolutionListRequest* gethighresresolutionlistrequest_;
  const ::AnselIpc::AbortCaptureRequest* abortcapturerequest_;
  const ::AnselIpc::Get360ResolutionRangeRequest* get360resolutionrangerequest_;
  const ::AnselIpc::GetFOVRangeRequest* getfovrangerequest_;
  const ::AnselIpc::SetFOVRequest* setfovrequest_;
  const ::AnselIpc::GetRollRangeRequest* getrollrangerequest_;
  const ::AnselIpc::SetRollRequest* setrollrequest_;
  const ::AnselIpc::GetAnselEnabledRequest* getanselenabledrequest_;
  const ::AnselIpc::GetLwrrentFOVRequest* getlwrrentfovrequest_;
  const ::AnselIpc::SetFilterRequest* setfilterrequest_;
  const ::AnselIpc::SetFilterAttributeRequest* setfilterattributerequest_;
  const ::AnselIpc::IsAnselAvailableRequest* isanselavailablerequest_;
  const ::AnselIpc::ScreenResolutionChangedRequest* screenresolutionchangedrequest_;
  const ::AnselIpc::GetAnselShotPermissionsRequest* getanselshotpermissionsrequest_;
  const ::AnselIpc::InputEventRequest* inputeventrequest_;
  const ::AnselIpc::SetLangIdRequest* setlangidrequest_;
  const ::AnselIpc::GetFilterInfoRequest* getfilterinforequest_;
  const ::AnselIpc::ResetFilterValuesRequest* resetfiltervaluesrequest_;
  const ::AnselIpc::ResetAllFilterValuesRequest* resetallfiltervaluesrequest_;
  const ::AnselIpc::IsAnselSDKIntegrationAvailableRequest* isanselsdkintegrationavailablerequest_;
  const ::AnselIpc::IpcVersionRequest* ipcversionrequest_;
  const ::AnselIpc::AddUIElementRequest* adduielementrequest_;
  const ::AnselIpc::UIReadyRequest* uireadyrequest_;
  const ::AnselIpc::UIControlChangedRequest* uicontrolchangedrequest_;
  const ::AnselIpc::UIControlRemoveRequest* uicontrolremoverequest_;
  const ::AnselIpc::UIControlSetVisibilityRequest* uicontrolsetvisibilityrequest_;
  const ::AnselIpc::UIControlGetVisibilityRequest* uicontrolgetvisibilityrequest_;
  const ::AnselIpc::GetProcessInfoRequest* getprocessinforequest_;
  const ::AnselIpc::GetScreenResolutionRequest* getscreenresolutionrequest_;
  const ::AnselIpc::IsAnselModdingAvailableRequest* isanselmoddingavailablerequest_;
  const ::AnselIpc::SetGridOfThirdsEnabledRequest* setgridofthirdsenabledrequest_;
  const ::AnselIpc::ResetEntireStackRequest* resetentirestackrequest_;
  const ::AnselIpc::GetFeatureSetRequest* getfeaturesetrequest_;
  const ::AnselIpc::SetStyleTransferEnabledRequest* setstyletransferenabledrequest_;
  const ::AnselIpc::SetStyleTransferStyleRequest* setstyletransferstylerequest_;
  const ::AnselIpc::GetStyleTransferModelListRequest* getstyletransfermodellistrequest_;
  const ::AnselIpc::SetStyleTransferModelRequest* setstyletransfermodelrequest_;
  const ::AnselIpc::StyleTransferStatusRequest* styletransferstatusrequest_;
  const ::AnselIpc::InsertFilterRequest* insertfilterrequest_;
  const ::AnselIpc::RemoveFilterRequest* removefilterrequest_;
  const ::AnselIpc::MoveFilterRequest* movefilterrequest_;
  const ::AnselIpc::GetStackInfoRequest* getstackinforequest_;
  const ::AnselIpc::EstimateCaptureRequest* estimatecapturerequest_;
  const ::AnselIpc::UIControlRemoveAllRequest* uicontrolremoveallrequest_;
  const ::AnselIpc::GetSettingsRequest* getsettingsrequest_;
  const ::AnselIpc::AnselStatusReportRequest* anselstatusreportrequest_;
  const ::AnselIpc::StyleTransferSideloadChoiceRequest* styletransfersideloadchoicerequest_;
  const ::AnselIpc::StyleTransferSideloadProgressRequest* styletransfersideloadprogressrequest_;
  const ::AnselIpc::UpdateRollRequest* updaterollrequest_;
  const ::AnselIpc::GetGameSpecificControlsRequest* getgamespecificcontrolsrequest_;
  const ::AnselIpc::GetEnabledFeatureSetRequest* getenabledfeaturesetrequest_;
  const ::AnselIpc::UpdateFovRequest* updatefovrequest_;
  const ::AnselIpc::AnselReadyRequest* anselreadyrequest_;
  const ::AnselIpc::SetHighQualityRequest* sethighqualityrequest_;
  const ::AnselIpc::SetFilterAndAttributesRequest* setfilterandattributesrequest_;
  const ::AnselIpc::SetCMSInfoRequest* setcmsinforequest_;
  const ::AnselIpc::MultipleInputEventRequest* multipleinputeventrequest_;
}* AnselIPCRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* AnselIPCResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselIPCResponse_reflection_ = NULL;
struct AnselIPCResponseOneofInstance {
  const ::AnselIpc::GetFilterListResponse* getfilterlistresponse_;
  const ::AnselIpc::GetHighresResolutionListResponse* gethighresresolutionlistresponse_;
  const ::AnselIpc::CaptureShotStartedResponse* captureshotstartedresponse_;
  const ::AnselIpc::CaptureShotFinishedResponse* captureshotfinishedresponse_;
  const ::AnselIpc::CaptureShotProcessingFinishedResponse* captureshotprocessingfinishedresponse_;
  const ::AnselIpc::Get360ResolutionRangeResponse* get360resolutionrangeresponse_;
  const ::AnselIpc::GetFOVRangeResponse* getfovrangeresponse_;
  const ::AnselIpc::SetFOVResponse* setfovresponse_;
  const ::AnselIpc::GetRollRangeResponse* getrollrangeresponse_;
  const ::AnselIpc::SetRollResponse* setrollresponse_;
  const ::AnselIpc::SetAnselEnabledResponse* setanselenabledresponse_;
  const ::AnselIpc::AbortCaptureResponse* abortcaptureresponse_;
  const ::AnselIpc::GetAnselEnabledResponse* getanselenabledresponse_;
  const ::AnselIpc::GetLwrrentFOVResponse* getlwrrentfovresponse_;
  const ::AnselIpc::CaptureShotProgressResponse* captureshotprogressresponse_;
  const ::AnselIpc::LogFilenameResponse* logfilenameresponse_;
  const ::AnselIpc::SetFilterResponse* setfilterresponse_;
  const ::AnselIpc::SetFilterAttributeResponse* setfilterattributeresponse_;
  const ::AnselIpc::IsAnselAvailableResponse* isanselavailableresponse_;
  const ::AnselIpc::ScreenResolutionChangedResponse* screenresolutionchangedresponse_;
  const ::AnselIpc::GetAnselShotPermissionsResponse* getanselshotpermissionsresponse_;
  const ::AnselIpc::InputEventResponse* inputeventresponse_;
  const ::AnselIpc::SetLangIdResponse* setlangidresponse_;
  const ::AnselIpc::GetFilterInfoResponse* getfilterinforesponse_;
  const ::AnselIpc::ResetFilterValuesResponse* resetfiltervaluesresponse_;
  const ::AnselIpc::IsAnselSDKIntegrationAvailableResponse* isanselsdkintegrationavailableresponse_;
  const ::AnselIpc::IpcVersionResponse* ipcversionresponse_;
  const ::AnselIpc::AddUIElementResponse* adduielementresponse_;
  const ::AnselIpc::UIReadyResponse* uireadyresponse_;
  const ::AnselIpc::UIControlChangedResponse* uicontrolchangedresponse_;
  const ::AnselIpc::UIControlRemoveResponse* uicontrolremoveresponse_;
  const ::AnselIpc::UIControlSetVisibilityResponse* uicontrolsetvisibilityresponse_;
  const ::AnselIpc::UIControlGetVisibilityResponse* uicontrolgetvisibilityresponse_;
  const ::AnselIpc::GetProcessInfoResponse* getprocessinforesponse_;
  const ::AnselIpc::GetScreenResolutionResponse* getscreenresolutionresponse_;
  const ::AnselIpc::IsAnselModdingAvailableResponse* isanselmoddingavailableresponse_;
  const ::AnselIpc::SetGridOfThirdsEnabledResponse* setgridofthirdsenabledresponse_;
  const ::AnselIpc::ResetEntireStackResponse* resetentirestackresponse_;
  const ::AnselIpc::GetFeatureSetResponse* getfeaturesetresponse_;
  const ::AnselIpc::SetStyleTransferEnabledResponse* setstyletransferenabledresponse_;
  const ::AnselIpc::SetStyleTransferStyleResponse* setstyletransferstyleresponse_;
  const ::AnselIpc::GetStyleTransferModelListResponse* getstyletransfermodellistresponse_;
  const ::AnselIpc::SetStyleTransferModelResponse* setstyletransfermodelresponse_;
  const ::AnselIpc::StyleTransferStatusResponse* styletransferstatusresponse_;
  const ::AnselIpc::MoveFilterResponse* movefilterresponse_;
  const ::AnselIpc::GetStackInfoResponse* getstackinforesponse_;
  const ::AnselIpc::InsertFilterResponse* insertfilterresponse_;
  const ::AnselIpc::RemoveFilterResponse* removefilterresponse_;
  const ::AnselIpc::ReportErrorResponse* reporterrorresponse_;
  const ::AnselIpc::EstimateCaptureResponse* estimatecaptureresponse_;
  const ::AnselIpc::UIControlRemoveAllResponse* uicontrolremoveallresponse_;
  const ::AnselIpc::GetSettingsResponse* getsettingsresponse_;
  const ::AnselIpc::AnselStatusReportResponse* anselstatusreportresponse_;
  const ::AnselIpc::StyleTransferSideloadChoiceResponse* styletransfersideloadchoiceresponse_;
  const ::AnselIpc::StyleTransferSideloadProgressResponse* styletransfersideloadprogressresponse_;
  const ::AnselIpc::UpdateRollResponse* updaterollresponse_;
  const ::AnselIpc::GetEnabledFeatureSetResponse* getenabledfeaturesetresponse_;
  const ::AnselIpc::UpdateFovResponse* updatefovresponse_;
  const ::AnselIpc::AnselReadyResponse* anselreadyresponse_;
  const ::AnselIpc::SetHighQualityResponse* sethighqualityresponse_;
  const ::AnselIpc::SetFilterAndAttributesResponse* setfilterandattributesresponse_;
  const ::AnselIpc::SetCMSInfoResponse* setcmsinforesponse_;
}* AnselIPCResponse_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* AnselIPCMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnselIPCMessage_reflection_ = NULL;
struct AnselIPCMessageOneofInstance {
  const ::AnselIpc::AnselIPCRequest* request_;
  const ::AnselIpc::AnselIPCResponse* response_;
}* AnselIPCMessage_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Status_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ControlType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SideloadChoice_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SideloadProgress_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* State_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ShotTypeIPC_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EditAllowedType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ListSelectionType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ipc_2eproto() {
  protobuf_AddDesc_ipc_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ipc.proto");
  GOOGLE_CHECK(file != NULL);
  IpcVersionRequest_descriptor_ = file->message_type(0);
  static const int IpcVersionRequest_offsets_[1] = {
  };
  IpcVersionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IpcVersionRequest_descriptor_,
      IpcVersionRequest::default_instance_,
      IpcVersionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IpcVersionRequest));
  IpcVersionResponse_descriptor_ = file->message_type(1);
  static const int IpcVersionResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionResponse, major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionResponse, minor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionResponse, patch_),
  };
  IpcVersionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IpcVersionResponse_descriptor_,
      IpcVersionResponse::default_instance_,
      IpcVersionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpcVersionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IpcVersionResponse));
  AnselReadyRequest_descriptor_ = file->message_type(2);
  static const int AnselReadyRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyRequest, creationcounter_),
  };
  AnselReadyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselReadyRequest_descriptor_,
      AnselReadyRequest::default_instance_,
      AnselReadyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselReadyRequest));
  AnselReadyResponse_descriptor_ = file->message_type(3);
  static const int AnselReadyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyResponse, status_),
  };
  AnselReadyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselReadyResponse_descriptor_,
      AnselReadyResponse::default_instance_,
      AnselReadyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselReadyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselReadyResponse));
  AnselStatusReportRequest_descriptor_ = file->message_type(4);
  static const int AnselStatusReportRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest, data_),
  };
  AnselStatusReportRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselStatusReportRequest_descriptor_,
      AnselStatusReportRequest::default_instance_,
      AnselStatusReportRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselStatusReportRequest));
  AnselStatusReportRequest_OneofOptionalData_descriptor_ = AnselStatusReportRequest_descriptor_->nested_type(0);
  static const int AnselStatusReportRequest_OneofOptionalData_offsets_[5] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_, integervalue_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_, stringvalue_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_, floatvalue_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_, boolvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData, data_),
  };
  AnselStatusReportRequest_OneofOptionalData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselStatusReportRequest_OneofOptionalData_descriptor_,
      AnselStatusReportRequest_OneofOptionalData::default_instance_,
      AnselStatusReportRequest_OneofOptionalData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData, _unknown_fields_),
      -1,
      AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportRequest_OneofOptionalData, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselStatusReportRequest_OneofOptionalData));
  AnselStatusReportResponse_descriptor_ = file->message_type(5);
  static const int AnselStatusReportResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportResponse, status_),
  };
  AnselStatusReportResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselStatusReportResponse_descriptor_,
      AnselStatusReportResponse::default_instance_,
      AnselStatusReportResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselStatusReportResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselStatusReportResponse));
  SetStyleTransferEnabledRequest_descriptor_ = file->message_type(6);
  static const int SetStyleTransferEnabledRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledRequest, enabled_),
  };
  SetStyleTransferEnabledRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferEnabledRequest_descriptor_,
      SetStyleTransferEnabledRequest::default_instance_,
      SetStyleTransferEnabledRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferEnabledRequest));
  SetStyleTransferEnabledResponse_descriptor_ = file->message_type(7);
  static const int SetStyleTransferEnabledResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledResponse, status_),
  };
  SetStyleTransferEnabledResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferEnabledResponse_descriptor_,
      SetStyleTransferEnabledResponse::default_instance_,
      SetStyleTransferEnabledResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferEnabledResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferEnabledResponse));
  SetStyleTransferStyleRequest_descriptor_ = file->message_type(8);
  static const int SetStyleTransferStyleRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleRequest, fullyqualifiedpath_),
  };
  SetStyleTransferStyleRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferStyleRequest_descriptor_,
      SetStyleTransferStyleRequest::default_instance_,
      SetStyleTransferStyleRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferStyleRequest));
  SetStyleTransferStyleResponse_descriptor_ = file->message_type(9);
  static const int SetStyleTransferStyleResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleResponse, status_),
  };
  SetStyleTransferStyleResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferStyleResponse_descriptor_,
      SetStyleTransferStyleResponse::default_instance_,
      SetStyleTransferStyleResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferStyleResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferStyleResponse));
  GetStyleTransferModelListRequest_descriptor_ = file->message_type(10);
  static const int GetStyleTransferModelListRequest_offsets_[1] = {
  };
  GetStyleTransferModelListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStyleTransferModelListRequest_descriptor_,
      GetStyleTransferModelListRequest::default_instance_,
      GetStyleTransferModelListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStyleTransferModelListRequest));
  GetStyleTransferModelListResponse_descriptor_ = file->message_type(11);
  static const int GetStyleTransferModelListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse, models_),
  };
  GetStyleTransferModelListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStyleTransferModelListResponse_descriptor_,
      GetStyleTransferModelListResponse::default_instance_,
      GetStyleTransferModelListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStyleTransferModelListResponse));
  GetStyleTransferModelListResponse_ModelDescription_descriptor_ = GetStyleTransferModelListResponse_descriptor_->nested_type(0);
  static const int GetStyleTransferModelListResponse_ModelDescription_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse_ModelDescription, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse_ModelDescription, localizedname_),
  };
  GetStyleTransferModelListResponse_ModelDescription_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStyleTransferModelListResponse_ModelDescription_descriptor_,
      GetStyleTransferModelListResponse_ModelDescription::default_instance_,
      GetStyleTransferModelListResponse_ModelDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse_ModelDescription, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStyleTransferModelListResponse_ModelDescription, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStyleTransferModelListResponse_ModelDescription));
  SetStyleTransferModelRequest_descriptor_ = file->message_type(12);
  static const int SetStyleTransferModelRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelRequest, modelid_),
  };
  SetStyleTransferModelRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferModelRequest_descriptor_,
      SetStyleTransferModelRequest::default_instance_,
      SetStyleTransferModelRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferModelRequest));
  SetStyleTransferModelResponse_descriptor_ = file->message_type(13);
  static const int SetStyleTransferModelResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelResponse, status_),
  };
  SetStyleTransferModelResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetStyleTransferModelResponse_descriptor_,
      SetStyleTransferModelResponse::default_instance_,
      SetStyleTransferModelResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetStyleTransferModelResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetStyleTransferModelResponse));
  StyleTransferStatusRequest_descriptor_ = file->message_type(14);
  static const int StyleTransferStatusRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferStatusRequest, status_),
  };
  StyleTransferStatusRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferStatusRequest_descriptor_,
      StyleTransferStatusRequest::default_instance_,
      StyleTransferStatusRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferStatusRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferStatusRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferStatusRequest));
  StyleTransferStatusResponse_descriptor_ = file->message_type(15);
  static const int StyleTransferStatusResponse_offsets_[1] = {
  };
  StyleTransferStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferStatusResponse_descriptor_,
      StyleTransferStatusResponse::default_instance_,
      StyleTransferStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferStatusResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferStatusResponse));
  StyleTransferSideloadChoiceRequest_descriptor_ = file->message_type(16);
  static const int StyleTransferSideloadChoiceRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceRequest, packagesizeinbytes_),
  };
  StyleTransferSideloadChoiceRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferSideloadChoiceRequest_descriptor_,
      StyleTransferSideloadChoiceRequest::default_instance_,
      StyleTransferSideloadChoiceRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferSideloadChoiceRequest));
  StyleTransferSideloadChoiceResponse_descriptor_ = file->message_type(17);
  static const int StyleTransferSideloadChoiceResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceResponse, choice_),
  };
  StyleTransferSideloadChoiceResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferSideloadChoiceResponse_descriptor_,
      StyleTransferSideloadChoiceResponse::default_instance_,
      StyleTransferSideloadChoiceResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadChoiceResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferSideloadChoiceResponse));
  StyleTransferSideloadProgressRequest_descriptor_ = file->message_type(18);
  static const int StyleTransferSideloadProgressRequest_offsets_[1] = {
  };
  StyleTransferSideloadProgressRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferSideloadProgressRequest_descriptor_,
      StyleTransferSideloadProgressRequest::default_instance_,
      StyleTransferSideloadProgressRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferSideloadProgressRequest));
  StyleTransferSideloadProgressResponse_descriptor_ = file->message_type(19);
  static const int StyleTransferSideloadProgressResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressResponse, progress_),
  };
  StyleTransferSideloadProgressResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StyleTransferSideloadProgressResponse_descriptor_,
      StyleTransferSideloadProgressResponse::default_instance_,
      StyleTransferSideloadProgressResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StyleTransferSideloadProgressResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StyleTransferSideloadProgressResponse));
  UIReadyRequest_descriptor_ = file->message_type(20);
  static const int UIReadyRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIReadyRequest, status_),
  };
  UIReadyRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIReadyRequest_descriptor_,
      UIReadyRequest::default_instance_,
      UIReadyRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIReadyRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIReadyRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIReadyRequest));
  UIReadyResponse_descriptor_ = file->message_type(21);
  static const int UIReadyResponse_offsets_[1] = {
  };
  UIReadyResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIReadyResponse_descriptor_,
      UIReadyResponse::default_instance_,
      UIReadyResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIReadyResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIReadyResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIReadyResponse));
  UIDescButton_descriptor_ = file->message_type(22);
  static const int UIDescButton_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescButton, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescButton, text_),
  };
  UIDescButton_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescButton_descriptor_,
      UIDescButton::default_instance_,
      UIDescButton_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescButton, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescButton, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescButton));
  UIDescSlider_descriptor_ = file->message_type(23);
  static const int UIDescSlider_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, milwalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, maxvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, interval_),
  };
  UIDescSlider_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescSlider_descriptor_,
      UIDescSlider::default_instance_,
      UIDescSlider_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescSlider, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescSlider));
  UIDescEdit_descriptor_ = file->message_type(24);
  static const int UIDescEdit_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, allowedtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, data_),
  };
  UIDescEdit_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescEdit_descriptor_,
      UIDescEdit::default_instance_,
      UIDescEdit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescEdit, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescEdit));
  UIDescBoolean_descriptor_ = file->message_type(25);
  static const int UIDescBoolean_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescBoolean, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescBoolean, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescBoolean, set_),
  };
  UIDescBoolean_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescBoolean_descriptor_,
      UIDescBoolean::default_instance_,
      UIDescBoolean_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescBoolean, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescBoolean, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescBoolean));
  UIDescLabel_descriptor_ = file->message_type(26);
  static const int UIDescLabel_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescLabel, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescLabel, text_),
  };
  UIDescLabel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescLabel_descriptor_,
      UIDescLabel::default_instance_,
      UIDescLabel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescLabel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescLabel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescLabel));
  MapFieldEntry_descriptor_ = file->message_type(27);
  static const int MapFieldEntry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapFieldEntry, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapFieldEntry, value_),
  };
  MapFieldEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MapFieldEntry_descriptor_,
      MapFieldEntry::default_instance_,
      MapFieldEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapFieldEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapFieldEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MapFieldEntry));
  UIDescList_descriptor_ = file->message_type(28);
  static const int UIDescList_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, values_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, selected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, type_),
  };
  UIDescList_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescList_descriptor_,
      UIDescList::default_instance_,
      UIDescList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescList, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescList));
  UIDescPulldown_descriptor_ = file->message_type(29);
  static const int UIDescPulldown_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescPulldown, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescPulldown, text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescPulldown, controlidlist_),
  };
  UIDescPulldown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIDescPulldown_descriptor_,
      UIDescPulldown::default_instance_,
      UIDescPulldown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescPulldown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIDescPulldown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIDescPulldown));
  AddUIElementRequest_descriptor_ = file->message_type(30);
  static const int AddUIElementRequest_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, controltype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, visible_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidescbutton_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidescslider_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidescedit_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidescboolean_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidesclabel_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidesclist_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementRequest_default_oneof_instance_, uidescpulldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, controlDescription_),
  };
  AddUIElementRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddUIElementRequest_descriptor_,
      AddUIElementRequest::default_instance_,
      AddUIElementRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, _unknown_fields_),
      -1,
      AddUIElementRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementRequest, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddUIElementRequest));
  AddUIElementResponse_descriptor_ = file->message_type(31);
  static const int AddUIElementResponse_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, requestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, status_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidescbutton_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidescslider_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidescedit_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidescboolean_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidesclabel_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidesclist_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AddUIElementResponse_default_oneof_instance_, uidescpulldown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, controlDescription_),
  };
  AddUIElementResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddUIElementResponse_descriptor_,
      AddUIElementResponse::default_instance_,
      AddUIElementResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, _unknown_fields_),
      -1,
      AddUIElementResponse_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddUIElementResponse, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddUIElementResponse));
  UIControlChangedRequest_descriptor_ = file->message_type(32);
  static const int UIControlChangedRequest_offsets_[7] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidescbutton_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidescslider_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidescedit_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidescboolean_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidesclabel_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(UIControlChangedRequest_default_oneof_instance_, uidesclist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedRequest, controlDescription_),
  };
  UIControlChangedRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlChangedRequest_descriptor_,
      UIControlChangedRequest::default_instance_,
      UIControlChangedRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedRequest, _unknown_fields_),
      -1,
      UIControlChangedRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedRequest, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlChangedRequest));
  UIControlChangedResponse_descriptor_ = file->message_type(33);
  static const int UIControlChangedResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedResponse, status_),
  };
  UIControlChangedResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlChangedResponse_descriptor_,
      UIControlChangedResponse::default_instance_,
      UIControlChangedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlChangedResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlChangedResponse));
  UIControlRemoveAllRequest_descriptor_ = file->message_type(34);
  static const int UIControlRemoveAllRequest_offsets_[1] = {
  };
  UIControlRemoveAllRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlRemoveAllRequest_descriptor_,
      UIControlRemoveAllRequest::default_instance_,
      UIControlRemoveAllRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveAllRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveAllRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlRemoveAllRequest));
  UIControlRemoveAllResponse_descriptor_ = file->message_type(35);
  static const int UIControlRemoveAllResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveAllResponse, status_),
  };
  UIControlRemoveAllResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlRemoveAllResponse_descriptor_,
      UIControlRemoveAllResponse::default_instance_,
      UIControlRemoveAllResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveAllResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveAllResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlRemoveAllResponse));
  UIControlRemoveRequest_descriptor_ = file->message_type(36);
  static const int UIControlRemoveRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveRequest, id_),
  };
  UIControlRemoveRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlRemoveRequest_descriptor_,
      UIControlRemoveRequest::default_instance_,
      UIControlRemoveRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlRemoveRequest));
  UIControlRemoveResponse_descriptor_ = file->message_type(37);
  static const int UIControlRemoveResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveResponse, status_),
  };
  UIControlRemoveResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlRemoveResponse_descriptor_,
      UIControlRemoveResponse::default_instance_,
      UIControlRemoveResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlRemoveResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlRemoveResponse));
  UIControlSetVisibilityRequest_descriptor_ = file->message_type(38);
  static const int UIControlSetVisibilityRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityRequest, visible_),
  };
  UIControlSetVisibilityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlSetVisibilityRequest_descriptor_,
      UIControlSetVisibilityRequest::default_instance_,
      UIControlSetVisibilityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlSetVisibilityRequest));
  UIControlSetVisibilityResponse_descriptor_ = file->message_type(39);
  static const int UIControlSetVisibilityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityResponse, status_),
  };
  UIControlSetVisibilityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlSetVisibilityResponse_descriptor_,
      UIControlSetVisibilityResponse::default_instance_,
      UIControlSetVisibilityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlSetVisibilityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlSetVisibilityResponse));
  UIControlGetVisibilityRequest_descriptor_ = file->message_type(40);
  static const int UIControlGetVisibilityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityRequest, id_),
  };
  UIControlGetVisibilityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlGetVisibilityRequest_descriptor_,
      UIControlGetVisibilityRequest::default_instance_,
      UIControlGetVisibilityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlGetVisibilityRequest));
  UIControlGetVisibilityResponse_descriptor_ = file->message_type(41);
  static const int UIControlGetVisibilityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityResponse, visible_),
  };
  UIControlGetVisibilityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UIControlGetVisibilityResponse_descriptor_,
      UIControlGetVisibilityResponse::default_instance_,
      UIControlGetVisibilityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UIControlGetVisibilityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UIControlGetVisibilityResponse));
  GetGameSpecificControlsRequest_descriptor_ = file->message_type(42);
  static const int GetGameSpecificControlsRequest_offsets_[1] = {
  };
  GetGameSpecificControlsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetGameSpecificControlsRequest_descriptor_,
      GetGameSpecificControlsRequest::default_instance_,
      GetGameSpecificControlsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSpecificControlsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameSpecificControlsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetGameSpecificControlsRequest));
  GetSettingsRequest_descriptor_ = file->message_type(43);
  static const int GetSettingsRequest_offsets_[1] = {
  };
  GetSettingsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSettingsRequest_descriptor_,
      GetSettingsRequest::default_instance_,
      GetSettingsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSettingsRequest));
  GetSettingsResponse_descriptor_ = file->message_type(44);
  static const int GetSettingsResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse, settings_),
  };
  GetSettingsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSettingsResponse_descriptor_,
      GetSettingsResponse::default_instance_,
      GetSettingsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSettingsResponse));
  GetSettingsResponse_Setting_descriptor_ = GetSettingsResponse_descriptor_->nested_type(0);
  static const int GetSettingsResponse_Setting_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse_Setting, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse_Setting, value_),
  };
  GetSettingsResponse_Setting_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetSettingsResponse_Setting_descriptor_,
      GetSettingsResponse_Setting::default_instance_,
      GetSettingsResponse_Setting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse_Setting, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSettingsResponse_Setting, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetSettingsResponse_Setting));
  GetFeatureSetRequest_descriptor_ = file->message_type(45);
  static const int GetFeatureSetRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetRequest, requestorsipcversion_),
  };
  GetFeatureSetRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFeatureSetRequest_descriptor_,
      GetFeatureSetRequest::default_instance_,
      GetFeatureSetRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFeatureSetRequest));
  GetFeatureSetResponse_descriptor_ = file->message_type(46);
  static const int GetFeatureSetResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, sdkdetected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, modsavailable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, restyleavailable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, allowoffline_),
  };
  GetFeatureSetResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFeatureSetResponse_descriptor_,
      GetFeatureSetResponse::default_instance_,
      GetFeatureSetResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFeatureSetResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFeatureSetResponse));
  SetCMSInfoRequest_descriptor_ = file->message_type(47);
  static const int SetCMSInfoRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoRequest, cmsid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoRequest, shortname_),
  };
  SetCMSInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetCMSInfoRequest_descriptor_,
      SetCMSInfoRequest::default_instance_,
      SetCMSInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetCMSInfoRequest));
  SetCMSInfoResponse_descriptor_ = file->message_type(48);
  static const int SetCMSInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoResponse, status_),
  };
  SetCMSInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetCMSInfoResponse_descriptor_,
      SetCMSInfoResponse::default_instance_,
      SetCMSInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetCMSInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetCMSInfoResponse));
  GetEnabledFeatureSetRequest_descriptor_ = file->message_type(49);
  static const int GetEnabledFeatureSetRequest_offsets_[1] = {
  };
  GetEnabledFeatureSetRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetEnabledFeatureSetRequest_descriptor_,
      GetEnabledFeatureSetRequest::default_instance_,
      GetEnabledFeatureSetRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnabledFeatureSetRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnabledFeatureSetRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetEnabledFeatureSetRequest));
  GetEnabledFeatureSetResponse_descriptor_ = file->message_type(50);
  static const int GetEnabledFeatureSetResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnabledFeatureSetResponse, modsavailable_),
  };
  GetEnabledFeatureSetResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetEnabledFeatureSetResponse_descriptor_,
      GetEnabledFeatureSetResponse::default_instance_,
      GetEnabledFeatureSetResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnabledFeatureSetResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnabledFeatureSetResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetEnabledFeatureSetResponse));
  IsAnselModdingAvailableRequest_descriptor_ = file->message_type(51);
  static const int IsAnselModdingAvailableRequest_offsets_[1] = {
  };
  IsAnselModdingAvailableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselModdingAvailableRequest_descriptor_,
      IsAnselModdingAvailableRequest::default_instance_,
      IsAnselModdingAvailableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselModdingAvailableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselModdingAvailableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselModdingAvailableRequest));
  IsAnselModdingAvailableResponse_descriptor_ = file->message_type(52);
  static const int IsAnselModdingAvailableResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselModdingAvailableResponse, status_),
  };
  IsAnselModdingAvailableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselModdingAvailableResponse_descriptor_,
      IsAnselModdingAvailableResponse::default_instance_,
      IsAnselModdingAvailableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselModdingAvailableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselModdingAvailableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselModdingAvailableResponse));
  IsAnselSDKIntegrationAvailableRequest_descriptor_ = file->message_type(53);
  static const int IsAnselSDKIntegrationAvailableRequest_offsets_[1] = {
  };
  IsAnselSDKIntegrationAvailableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselSDKIntegrationAvailableRequest_descriptor_,
      IsAnselSDKIntegrationAvailableRequest::default_instance_,
      IsAnselSDKIntegrationAvailableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselSDKIntegrationAvailableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselSDKIntegrationAvailableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselSDKIntegrationAvailableRequest));
  IsAnselSDKIntegrationAvailableResponse_descriptor_ = file->message_type(54);
  static const int IsAnselSDKIntegrationAvailableResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselSDKIntegrationAvailableResponse, status_),
  };
  IsAnselSDKIntegrationAvailableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselSDKIntegrationAvailableResponse_descriptor_,
      IsAnselSDKIntegrationAvailableResponse::default_instance_,
      IsAnselSDKIntegrationAvailableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselSDKIntegrationAvailableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselSDKIntegrationAvailableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselSDKIntegrationAvailableResponse));
  ScreenResolutionChangedRequest_descriptor_ = file->message_type(55);
  static const int ScreenResolutionChangedRequest_offsets_[1] = {
  };
  ScreenResolutionChangedRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScreenResolutionChangedRequest_descriptor_,
      ScreenResolutionChangedRequest::default_instance_,
      ScreenResolutionChangedRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScreenResolutionChangedRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScreenResolutionChangedRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScreenResolutionChangedRequest));
  ScreenResolutionChangedResponse_descriptor_ = file->message_type(56);
  static const int ScreenResolutionChangedResponse_offsets_[1] = {
  };
  ScreenResolutionChangedResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScreenResolutionChangedResponse_descriptor_,
      ScreenResolutionChangedResponse::default_instance_,
      ScreenResolutionChangedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScreenResolutionChangedResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScreenResolutionChangedResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScreenResolutionChangedResponse));
  SetGridOfThirdsEnabledRequest_descriptor_ = file->message_type(57);
  static const int SetGridOfThirdsEnabledRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledRequest, enabled_),
  };
  SetGridOfThirdsEnabledRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetGridOfThirdsEnabledRequest_descriptor_,
      SetGridOfThirdsEnabledRequest::default_instance_,
      SetGridOfThirdsEnabledRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetGridOfThirdsEnabledRequest));
  SetGridOfThirdsEnabledResponse_descriptor_ = file->message_type(58);
  static const int SetGridOfThirdsEnabledResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledResponse, status_),
  };
  SetGridOfThirdsEnabledResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetGridOfThirdsEnabledResponse_descriptor_,
      SetGridOfThirdsEnabledResponse::default_instance_,
      SetGridOfThirdsEnabledResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetGridOfThirdsEnabledResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetGridOfThirdsEnabledResponse));
  GetProcessInfoRequest_descriptor_ = file->message_type(59);
  static const int GetProcessInfoRequest_offsets_[1] = {
  };
  GetProcessInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetProcessInfoRequest_descriptor_,
      GetProcessInfoRequest::default_instance_,
      GetProcessInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetProcessInfoRequest));
  GetProcessInfoResponse_descriptor_ = file->message_type(60);
  static const int GetProcessInfoResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoResponse, processid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoResponse, processpath_),
  };
  GetProcessInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetProcessInfoResponse_descriptor_,
      GetProcessInfoResponse::default_instance_,
      GetProcessInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProcessInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetProcessInfoResponse));
  SetAnselEnabledRequest_descriptor_ = file->message_type(61);
  static const int SetAnselEnabledRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, minor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, patch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, enabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, leavefiltersenabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, pauseapplication_),
  };
  SetAnselEnabledRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetAnselEnabledRequest_descriptor_,
      SetAnselEnabledRequest::default_instance_,
      SetAnselEnabledRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetAnselEnabledRequest));
  SetAnselEnabledResponse_descriptor_ = file->message_type(62);
  static const int SetAnselEnabledResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledResponse, status_),
  };
  SetAnselEnabledResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetAnselEnabledResponse_descriptor_,
      SetAnselEnabledResponse::default_instance_,
      SetAnselEnabledResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAnselEnabledResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetAnselEnabledResponse));
  GetAnselEnabledRequest_descriptor_ = file->message_type(63);
  static const int GetAnselEnabledRequest_offsets_[1] = {
  };
  GetAnselEnabledRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAnselEnabledRequest_descriptor_,
      GetAnselEnabledRequest::default_instance_,
      GetAnselEnabledRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselEnabledRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselEnabledRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAnselEnabledRequest));
  GetAnselEnabledResponse_descriptor_ = file->message_type(64);
  static const int GetAnselEnabledResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselEnabledResponse, enabled_),
  };
  GetAnselEnabledResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAnselEnabledResponse_descriptor_,
      GetAnselEnabledResponse::default_instance_,
      GetAnselEnabledResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselEnabledResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselEnabledResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAnselEnabledResponse));
  GetAnselShotPermissionsRequest_descriptor_ = file->message_type(65);
  static const int GetAnselShotPermissionsRequest_offsets_[1] = {
  };
  GetAnselShotPermissionsRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAnselShotPermissionsRequest_descriptor_,
      GetAnselShotPermissionsRequest::default_instance_,
      GetAnselShotPermissionsRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAnselShotPermissionsRequest));
  GetAnselShotPermissionsResponse_descriptor_ = file->message_type(66);
  static const int GetAnselShotPermissionsResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsResponse, isintegrationdetected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsResponse, ishdrallowed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsResponse, isshotallowed_),
  };
  GetAnselShotPermissionsResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetAnselShotPermissionsResponse_descriptor_,
      GetAnselShotPermissionsResponse::default_instance_,
      GetAnselShotPermissionsResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAnselShotPermissionsResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetAnselShotPermissionsResponse));
  SetLangIdRequest_descriptor_ = file->message_type(67);
  static const int SetLangIdRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdRequest, lang_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdRequest, sublang_),
  };
  SetLangIdRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLangIdRequest_descriptor_,
      SetLangIdRequest::default_instance_,
      SetLangIdRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLangIdRequest));
  SetLangIdResponse_descriptor_ = file->message_type(68);
  static const int SetLangIdResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdResponse, status_),
  };
  SetLangIdResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetLangIdResponse_descriptor_,
      SetLangIdResponse::default_instance_,
      SetLangIdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetLangIdResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetLangIdResponse));
  GetFOVRangeRequest_descriptor_ = file->message_type(69);
  static const int GetFOVRangeRequest_offsets_[1] = {
  };
  GetFOVRangeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFOVRangeRequest_descriptor_,
      GetFOVRangeRequest::default_instance_,
      GetFOVRangeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFOVRangeRequest));
  GetFOVRangeResponse_descriptor_ = file->message_type(70);
  static const int GetFOVRangeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeResponse, minfov_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeResponse, maxfov_),
  };
  GetFOVRangeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFOVRangeResponse_descriptor_,
      GetFOVRangeResponse::default_instance_,
      GetFOVRangeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFOVRangeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFOVRangeResponse));
  SetFOVRequest_descriptor_ = file->message_type(71);
  static const int SetFOVRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVRequest, fov_),
  };
  SetFOVRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFOVRequest_descriptor_,
      SetFOVRequest::default_instance_,
      SetFOVRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFOVRequest));
  SetFOVResponse_descriptor_ = file->message_type(72);
  static const int SetFOVResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVResponse, status_),
  };
  SetFOVResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFOVResponse_descriptor_,
      SetFOVResponse::default_instance_,
      SetFOVResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFOVResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFOVResponse));
  GetLwrrentFOVRequest_descriptor_ = file->message_type(73);
  static const int GetLwrrentFOVRequest_offsets_[1] = {
  };
  GetLwrrentFOVRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLwrrentFOVRequest_descriptor_,
      GetLwrrentFOVRequest::default_instance_,
      GetLwrrentFOVRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLwrrentFOVRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLwrrentFOVRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLwrrentFOVRequest));
  GetLwrrentFOVResponse_descriptor_ = file->message_type(74);
  static const int GetLwrrentFOVResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLwrrentFOVResponse, fov_),
  };
  GetLwrrentFOVResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetLwrrentFOVResponse_descriptor_,
      GetLwrrentFOVResponse::default_instance_,
      GetLwrrentFOVResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLwrrentFOVResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLwrrentFOVResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetLwrrentFOVResponse));
  GetRollRangeRequest_descriptor_ = file->message_type(75);
  static const int GetRollRangeRequest_offsets_[1] = {
  };
  GetRollRangeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRollRangeRequest_descriptor_,
      GetRollRangeRequest::default_instance_,
      GetRollRangeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRollRangeRequest));
  GetRollRangeResponse_descriptor_ = file->message_type(76);
  static const int GetRollRangeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeResponse, minroll_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeResponse, maxroll_),
  };
  GetRollRangeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetRollRangeResponse_descriptor_,
      GetRollRangeResponse::default_instance_,
      GetRollRangeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRollRangeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetRollRangeResponse));
  SetRollRequest_descriptor_ = file->message_type(77);
  static const int SetRollRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollRequest, roll_),
  };
  SetRollRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetRollRequest_descriptor_,
      SetRollRequest::default_instance_,
      SetRollRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetRollRequest));
  SetRollResponse_descriptor_ = file->message_type(78);
  static const int SetRollResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollResponse, status_),
  };
  SetRollResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetRollResponse_descriptor_,
      SetRollResponse::default_instance_,
      SetRollResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRollResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetRollResponse));
  UpdateRollRequest_descriptor_ = file->message_type(79);
  static const int UpdateRollRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollRequest, roll_),
  };
  UpdateRollRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRollRequest_descriptor_,
      UpdateRollRequest::default_instance_,
      UpdateRollRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRollRequest));
  UpdateRollResponse_descriptor_ = file->message_type(80);
  static const int UpdateRollResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollResponse, status_),
  };
  UpdateRollResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateRollResponse_descriptor_,
      UpdateRollResponse::default_instance_,
      UpdateRollResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRollResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateRollResponse));
  UpdateFovRequest_descriptor_ = file->message_type(81);
  static const int UpdateFovRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovRequest, fov_),
  };
  UpdateFovRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateFovRequest_descriptor_,
      UpdateFovRequest::default_instance_,
      UpdateFovRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateFovRequest));
  UpdateFovResponse_descriptor_ = file->message_type(82);
  static const int UpdateFovResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovResponse, status_),
  };
  UpdateFovResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpdateFovResponse_descriptor_,
      UpdateFovResponse::default_instance_,
      UpdateFovResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateFovResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpdateFovResponse));
  GetScreenResolutionRequest_descriptor_ = file->message_type(83);
  static const int GetScreenResolutionRequest_offsets_[1] = {
  };
  GetScreenResolutionRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetScreenResolutionRequest_descriptor_,
      GetScreenResolutionRequest::default_instance_,
      GetScreenResolutionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetScreenResolutionRequest));
  GetScreenResolutionResponse_descriptor_ = file->message_type(84);
  static const int GetScreenResolutionResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionResponse, xresolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionResponse, yresolution_),
  };
  GetScreenResolutionResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetScreenResolutionResponse_descriptor_,
      GetScreenResolutionResponse::default_instance_,
      GetScreenResolutionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScreenResolutionResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetScreenResolutionResponse));
  CaptureShotRequest_descriptor_ = file->message_type(85);
  static const int CaptureShotRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, highresmultiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, horizontal360resolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, generatethumbnail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, isexr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, highresenhance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, isjxr_),
  };
  CaptureShotRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CaptureShotRequest_descriptor_,
      CaptureShotRequest::default_instance_,
      CaptureShotRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CaptureShotRequest));
  CaptureShotStartedResponse_descriptor_ = file->message_type(86);
  static const int CaptureShotStartedResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotStartedResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotStartedResponse, totalshotcount_),
  };
  CaptureShotStartedResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CaptureShotStartedResponse_descriptor_,
      CaptureShotStartedResponse::default_instance_,
      CaptureShotStartedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotStartedResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotStartedResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CaptureShotStartedResponse));
  CaptureShotProgressResponse_descriptor_ = file->message_type(87);
  static const int CaptureShotProgressResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProgressResponse, lwrrentshot_),
  };
  CaptureShotProgressResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CaptureShotProgressResponse_descriptor_,
      CaptureShotProgressResponse::default_instance_,
      CaptureShotProgressResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProgressResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProgressResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CaptureShotProgressResponse));
  CaptureShotFinishedResponse_descriptor_ = file->message_type(88);
  static const int CaptureShotFinishedResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotFinishedResponse, status_),
  };
  CaptureShotFinishedResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CaptureShotFinishedResponse_descriptor_,
      CaptureShotFinishedResponse::default_instance_,
      CaptureShotFinishedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotFinishedResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotFinishedResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CaptureShotFinishedResponse));
  CaptureShotProcessingFinishedResponse_descriptor_ = file->message_type(89);
  static const int CaptureShotProcessingFinishedResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProcessingFinishedResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProcessingFinishedResponse, absolutefilepath_),
  };
  CaptureShotProcessingFinishedResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CaptureShotProcessingFinishedResponse_descriptor_,
      CaptureShotProcessingFinishedResponse::default_instance_,
      CaptureShotProcessingFinishedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProcessingFinishedResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CaptureShotProcessingFinishedResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CaptureShotProcessingFinishedResponse));
  EstimateCaptureRequest_descriptor_ = file->message_type(90);
  static const int EstimateCaptureRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, highresmultiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, horizontal360resolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, generatethumbnail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, isexr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, highresenhance_),
  };
  EstimateCaptureRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EstimateCaptureRequest_descriptor_,
      EstimateCaptureRequest::default_instance_,
      EstimateCaptureRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EstimateCaptureRequest));
  EstimateCaptureResponse_descriptor_ = file->message_type(91);
  static const int EstimateCaptureResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, inputdatasetsizetotalinbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, inputdatasetframecount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, inputdatasetframesizeinbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, stitchermemoryrequirementsinbytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, outputresolutionx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, outputresolutiony_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, outputmpixels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, outputsizeinbytes_),
  };
  EstimateCaptureResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EstimateCaptureResponse_descriptor_,
      EstimateCaptureResponse::default_instance_,
      EstimateCaptureResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EstimateCaptureResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EstimateCaptureResponse));
  AbortCaptureRequest_descriptor_ = file->message_type(92);
  static const int AbortCaptureRequest_offsets_[1] = {
  };
  AbortCaptureRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AbortCaptureRequest_descriptor_,
      AbortCaptureRequest::default_instance_,
      AbortCaptureRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortCaptureRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortCaptureRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AbortCaptureRequest));
  AbortCaptureResponse_descriptor_ = file->message_type(93);
  static const int AbortCaptureResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortCaptureResponse, status_),
  };
  AbortCaptureResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AbortCaptureResponse_descriptor_,
      AbortCaptureResponse::default_instance_,
      AbortCaptureResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortCaptureResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbortCaptureResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AbortCaptureResponse));
  GetHighresResolutionListRequest_descriptor_ = file->message_type(94);
  static const int GetHighresResolutionListRequest_offsets_[1] = {
  };
  GetHighresResolutionListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHighresResolutionListRequest_descriptor_,
      GetHighresResolutionListRequest::default_instance_,
      GetHighresResolutionListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHighresResolutionListRequest));
  GetHighresResolutionListResponse_descriptor_ = file->message_type(95);
  static const int GetHighresResolutionListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse, resolutions_),
  };
  GetHighresResolutionListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHighresResolutionListResponse_descriptor_,
      GetHighresResolutionListResponse::default_instance_,
      GetHighresResolutionListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHighresResolutionListResponse));
  GetHighresResolutionListResponse_HighresResolution_descriptor_ = GetHighresResolutionListResponse_descriptor_->nested_type(0);
  static const int GetHighresResolutionListResponse_HighresResolution_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse_HighresResolution, multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse_HighresResolution, xresolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse_HighresResolution, yresolution_),
  };
  GetHighresResolutionListResponse_HighresResolution_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetHighresResolutionListResponse_HighresResolution_descriptor_,
      GetHighresResolutionListResponse_HighresResolution::default_instance_,
      GetHighresResolutionListResponse_HighresResolution_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse_HighresResolution, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetHighresResolutionListResponse_HighresResolution, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetHighresResolutionListResponse_HighresResolution));
  Get360ResolutionRangeRequest_descriptor_ = file->message_type(96);
  static const int Get360ResolutionRangeRequest_offsets_[1] = {
  };
  Get360ResolutionRangeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Get360ResolutionRangeRequest_descriptor_,
      Get360ResolutionRangeRequest::default_instance_,
      Get360ResolutionRangeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Get360ResolutionRangeRequest));
  Get360ResolutionRangeResponse_descriptor_ = file->message_type(97);
  static const int Get360ResolutionRangeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeResponse, minimumxresolution_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeResponse, maximumxresolution_),
  };
  Get360ResolutionRangeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Get360ResolutionRangeResponse_descriptor_,
      Get360ResolutionRangeResponse::default_instance_,
      Get360ResolutionRangeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Get360ResolutionRangeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Get360ResolutionRangeResponse));
  GetFilterListRequest_descriptor_ = file->message_type(98);
  static const int GetFilterListRequest_offsets_[1] = {
  };
  GetFilterListRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFilterListRequest_descriptor_,
      GetFilterListRequest::default_instance_,
      GetFilterListRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFilterListRequest));
  GetFilterListResponse_descriptor_ = file->message_type(99);
  static const int GetFilterListResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListResponse, filteridlist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListResponse, filternamelist_),
  };
  GetFilterListResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFilterListResponse_descriptor_,
      GetFilterListResponse::default_instance_,
      GetFilterListResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterListResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFilterListResponse));
  ResetEntireStackRequest_descriptor_ = file->message_type(100);
  static const int ResetEntireStackRequest_offsets_[1] = {
  };
  ResetEntireStackRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetEntireStackRequest_descriptor_,
      ResetEntireStackRequest::default_instance_,
      ResetEntireStackRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetEntireStackRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetEntireStackRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetEntireStackRequest));
  ResetEntireStackResponse_descriptor_ = file->message_type(101);
  static const int ResetEntireStackResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetEntireStackResponse, status_),
  };
  ResetEntireStackResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetEntireStackResponse_descriptor_,
      ResetEntireStackResponse::default_instance_,
      ResetEntireStackResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetEntireStackResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetEntireStackResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetEntireStackResponse));
  ResetFilterValuesRequest_descriptor_ = file->message_type(102);
  static const int ResetFilterValuesRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesRequest, stackidx_),
  };
  ResetFilterValuesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetFilterValuesRequest_descriptor_,
      ResetFilterValuesRequest::default_instance_,
      ResetFilterValuesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetFilterValuesRequest));
  ResetFilterValuesResponse_descriptor_ = file->message_type(103);
  static const int ResetFilterValuesResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesResponse, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesResponse, status_),
  };
  ResetFilterValuesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetFilterValuesResponse_descriptor_,
      ResetFilterValuesResponse::default_instance_,
      ResetFilterValuesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetFilterValuesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetFilterValuesResponse));
  ResetAllFilterValuesRequest_descriptor_ = file->message_type(104);
  static const int ResetAllFilterValuesRequest_offsets_[1] = {
  };
  ResetAllFilterValuesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ResetAllFilterValuesRequest_descriptor_,
      ResetAllFilterValuesRequest::default_instance_,
      ResetAllFilterValuesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetAllFilterValuesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetAllFilterValuesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ResetAllFilterValuesRequest));
  SetFilterRequest_descriptor_ = file->message_type(105);
  static const int SetFilterRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterRequest, filterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterRequest, stackidx_),
  };
  SetFilterRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterRequest_descriptor_,
      SetFilterRequest::default_instance_,
      SetFilterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterRequest));
  SetFilterResponse_descriptor_ = file->message_type(106);
  static const int SetFilterResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterResponse, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterResponse, filterproperties_),
  };
  SetFilterResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterResponse_descriptor_,
      SetFilterResponse::default_instance_,
      SetFilterResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterResponse));
  SetFilterAndAttributesRequest_descriptor_ = file->message_type(107);
  static const int SetFilterAndAttributesRequest_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, filterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, intcontrolids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, intvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, uintcontrolids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, uintvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, floatcontrolids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, floatvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, boolcontrolids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, boolvalues_),
  };
  SetFilterAndAttributesRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterAndAttributesRequest_descriptor_,
      SetFilterAndAttributesRequest::default_instance_,
      SetFilterAndAttributesRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterAndAttributesRequest));
  SetFilterAndAttributesResponse_descriptor_ = file->message_type(108);
  static const int SetFilterAndAttributesResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesResponse, setfilterresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesResponse, attributecontrolids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesResponse, setfilterattributeresponses_),
  };
  SetFilterAndAttributesResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterAndAttributesResponse_descriptor_,
      SetFilterAndAttributesResponse::default_instance_,
      SetFilterAndAttributesResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAndAttributesResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterAndAttributesResponse));
  InsertFilterRequest_descriptor_ = file->message_type(109);
  static const int InsertFilterRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterRequest, filterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterRequest, stackidx_),
  };
  InsertFilterRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InsertFilterRequest_descriptor_,
      InsertFilterRequest::default_instance_,
      InsertFilterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InsertFilterRequest));
  InsertFilterResponse_descriptor_ = file->message_type(110);
  static const int InsertFilterResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterResponse, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterResponse, filterproperties_),
  };
  InsertFilterResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InsertFilterResponse_descriptor_,
      InsertFilterResponse::default_instance_,
      InsertFilterResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InsertFilterResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InsertFilterResponse));
  RemoveFilterRequest_descriptor_ = file->message_type(111);
  static const int RemoveFilterRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterRequest, stackidx_),
  };
  RemoveFilterRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveFilterRequest_descriptor_,
      RemoveFilterRequest::default_instance_,
      RemoveFilterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveFilterRequest));
  RemoveFilterResponse_descriptor_ = file->message_type(112);
  static const int RemoveFilterResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterResponse, status_),
  };
  RemoveFilterResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RemoveFilterResponse_descriptor_,
      RemoveFilterResponse::default_instance_,
      RemoveFilterResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveFilterResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RemoveFilterResponse));
  MoveFilterRequest_descriptor_ = file->message_type(113);
  static const int MoveFilterRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterRequest, desiredstackindices_),
  };
  MoveFilterRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveFilterRequest_descriptor_,
      MoveFilterRequest::default_instance_,
      MoveFilterRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveFilterRequest));
  MoveFilterResponse_descriptor_ = file->message_type(114);
  static const int MoveFilterResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterResponse, status_),
  };
  MoveFilterResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoveFilterResponse_descriptor_,
      MoveFilterResponse::default_instance_,
      MoveFilterResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveFilterResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoveFilterResponse));
  GetStackInfoRequest_descriptor_ = file->message_type(115);
  static const int GetStackInfoRequest_offsets_[1] = {
  };
  GetStackInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStackInfoRequest_descriptor_,
      GetStackInfoRequest::default_instance_,
      GetStackInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStackInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStackInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStackInfoRequest));
  GetStackInfoResponse_descriptor_ = file->message_type(116);
  static const int GetStackInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStackInfoResponse, filterids_),
  };
  GetStackInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStackInfoResponse_descriptor_,
      GetStackInfoResponse::default_instance_,
      GetStackInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStackInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStackInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStackInfoResponse));
  FilterProperties_descriptor_ = file->message_type(117);
  static const int FilterProperties_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, filterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, filterdisplayname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, controls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, filterdisplaynameenglish_),
  };
  FilterProperties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_descriptor_,
      FilterProperties::default_instance_,
      FilterProperties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties));
  FilterProperties_ValuesFloat_descriptor_ = FilterProperties_descriptor_->nested_type(0);
  static const int FilterProperties_ValuesFloat_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, lwrrent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, default__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, stepsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, stepsizeui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, milwalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, maxvalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, displayname_),
  };
  FilterProperties_ValuesFloat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_ValuesFloat_descriptor_,
      FilterProperties_ValuesFloat::default_instance_,
      FilterProperties_ValuesFloat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesFloat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties_ValuesFloat));
  FilterProperties_ValuesInt_descriptor_ = FilterProperties_descriptor_->nested_type(1);
  static const int FilterProperties_ValuesInt_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, lwrrent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, default__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, stepsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, stepsizeui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, milwalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, maxvalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, displayname_),
  };
  FilterProperties_ValuesInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_ValuesInt_descriptor_,
      FilterProperties_ValuesInt::default_instance_,
      FilterProperties_ValuesInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties_ValuesInt));
  FilterProperties_ValuesUInt_descriptor_ = FilterProperties_descriptor_->nested_type(2);
  static const int FilterProperties_ValuesUInt_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, lwrrent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, default__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, stepsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, stepsizeui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, milwalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, maxvalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, displayname_),
  };
  FilterProperties_ValuesUInt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_ValuesUInt_descriptor_,
      FilterProperties_ValuesUInt::default_instance_,
      FilterProperties_ValuesUInt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesUInt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties_ValuesUInt));
  FilterProperties_ValuesBool_descriptor_ = FilterProperties_descriptor_->nested_type(3);
  static const int FilterProperties_ValuesBool_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, lwrrent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, default__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, minimum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, maximum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, displayname_),
  };
  FilterProperties_ValuesBool_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_ValuesBool_descriptor_,
      FilterProperties_ValuesBool::default_instance_,
      FilterProperties_ValuesBool_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ValuesBool, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties_ValuesBool));
  FilterProperties_ControlDescription_descriptor_ = FilterProperties_descriptor_->nested_type(4);
  static const int FilterProperties_ControlDescription_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, controlid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, displayname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, milwalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, maxvalueui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, valuesfloat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, valuesbool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, valuesint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, valuesuint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, uiprecision_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, uimeasurementunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, labelsui_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, tooltip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, displaynameenglish_),
  };
  FilterProperties_ControlDescription_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FilterProperties_ControlDescription_descriptor_,
      FilterProperties_ControlDescription::default_instance_,
      FilterProperties_ControlDescription_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilterProperties_ControlDescription, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FilterProperties_ControlDescription));
  GetFilterInfoRequest_descriptor_ = file->message_type(118);
  static const int GetFilterInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoRequest, stackidx_),
  };
  GetFilterInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFilterInfoRequest_descriptor_,
      GetFilterInfoRequest::default_instance_,
      GetFilterInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFilterInfoRequest));
  GetFilterInfoResponse_descriptor_ = file->message_type(119);
  static const int GetFilterInfoResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoResponse, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoResponse, filterproperties_),
  };
  GetFilterInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetFilterInfoResponse_descriptor_,
      GetFilterInfoResponse::default_instance_,
      GetFilterInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetFilterInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetFilterInfoResponse));
  IsAnselAvailableRequest_descriptor_ = file->message_type(120);
  static const int IsAnselAvailableRequest_offsets_[1] = {
  };
  IsAnselAvailableRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselAvailableRequest_descriptor_,
      IsAnselAvailableRequest::default_instance_,
      IsAnselAvailableRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselAvailableRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselAvailableRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselAvailableRequest));
  IsAnselAvailableResponse_descriptor_ = file->message_type(121);
  static const int IsAnselAvailableResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselAvailableResponse, available_),
  };
  IsAnselAvailableResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      IsAnselAvailableResponse_descriptor_,
      IsAnselAvailableResponse::default_instance_,
      IsAnselAvailableResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselAvailableResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsAnselAvailableResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(IsAnselAvailableResponse));
  SetFilterAttributeRequest_descriptor_ = file->message_type(122);
  static const int SetFilterAttributeRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, filterid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, stackidx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, controlid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, floatvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, boolvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, uintvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, intvalue_),
  };
  SetFilterAttributeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterAttributeRequest_descriptor_,
      SetFilterAttributeRequest::default_instance_,
      SetFilterAttributeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterAttributeRequest));
  SetFilterAttributeResponse_descriptor_ = file->message_type(123);
  static const int SetFilterAttributeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeResponse, status_),
  };
  SetFilterAttributeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetFilterAttributeResponse_descriptor_,
      SetFilterAttributeResponse::default_instance_,
      SetFilterAttributeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetFilterAttributeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetFilterAttributeResponse));
  MouseEventRequest_descriptor_ = file->message_type(124);
  static const int MouseEventRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, absolutex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, absolutey_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, deltax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, deltay_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, keystate_),
  };
  MouseEventRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MouseEventRequest_descriptor_,
      MouseEventRequest::default_instance_,
      MouseEventRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MouseEventRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MouseEventRequest));
  KeyboardEventRequest_descriptor_ = file->message_type(125);
  static const int KeyboardEventRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyboardEventRequest, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyboardEventRequest, state_),
  };
  KeyboardEventRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KeyboardEventRequest_descriptor_,
      KeyboardEventRequest::default_instance_,
      KeyboardEventRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyboardEventRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyboardEventRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KeyboardEventRequest));
  InputEventRequest_descriptor_ = file->message_type(126);
  static const int InputEventRequest_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, wparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, lparam_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, isdeltacoords_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, leftstickxvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, leftstickyvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, rightstickxvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, rightstickyvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, lefttriggervalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, righttriggervalue_),
  };
  InputEventRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InputEventRequest_descriptor_,
      InputEventRequest::default_instance_,
      InputEventRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InputEventRequest));
  InputEventResponse_descriptor_ = file->message_type(127);
  static const int InputEventResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventResponse, status_),
  };
  InputEventResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InputEventResponse_descriptor_,
      InputEventResponse::default_instance_,
      InputEventResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InputEventResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InputEventResponse));
  MultipleInputEventRequest_descriptor_ = file->message_type(128);
  static const int MultipleInputEventRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultipleInputEventRequest, inputevents_),
  };
  MultipleInputEventRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MultipleInputEventRequest_descriptor_,
      MultipleInputEventRequest::default_instance_,
      MultipleInputEventRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultipleInputEventRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultipleInputEventRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MultipleInputEventRequest));
  LogFilenameResponse_descriptor_ = file->message_type(129);
  static const int LogFilenameResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogFilenameResponse, filename_),
  };
  LogFilenameResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LogFilenameResponse_descriptor_,
      LogFilenameResponse::default_instance_,
      LogFilenameResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogFilenameResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogFilenameResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LogFilenameResponse));
  ReportErrorResponse_descriptor_ = file->message_type(130);
  static const int ReportErrorResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, filename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, reason_),
  };
  ReportErrorResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReportErrorResponse_descriptor_,
      ReportErrorResponse::default_instance_,
      ReportErrorResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportErrorResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReportErrorResponse));
  SetHighQualityRequest_descriptor_ = file->message_type(131);
  static const int SetHighQualityRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityRequest, setting_),
  };
  SetHighQualityRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetHighQualityRequest_descriptor_,
      SetHighQualityRequest::default_instance_,
      SetHighQualityRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetHighQualityRequest));
  SetHighQualityResponse_descriptor_ = file->message_type(132);
  static const int SetHighQualityResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityResponse, status_),
  };
  SetHighQualityResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetHighQualityResponse_descriptor_,
      SetHighQualityResponse::default_instance_,
      SetHighQualityResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetHighQualityResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetHighQualityResponse));
  AnselIPCRequest_descriptor_ = file->message_type(133);
  static const int AnselIPCRequest_offsets_[61] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setanselenabledrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, captureshotrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getfilterlistrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, gethighresresolutionlistrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, abortcapturerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, get360resolutionrangerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getfovrangerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setfovrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getrollrangerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setrollrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getanselenabledrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getlwrrentfovrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setfilterrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setfilterattributerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, isanselavailablerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, screenresolutionchangedrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getanselshotpermissionsrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, inputeventrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setlangidrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getfilterinforequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, resetfiltervaluesrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, resetallfiltervaluesrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, isanselsdkintegrationavailablerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, ipcversionrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, adduielementrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uireadyrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uicontrolchangedrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uicontrolremoverequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uicontrolsetvisibilityrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uicontrolgetvisibilityrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getprocessinforequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getscreenresolutionrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, isanselmoddingavailablerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setgridofthirdsenabledrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, resetentirestackrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getfeaturesetrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setstyletransferenabledrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setstyletransferstylerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getstyletransfermodellistrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setstyletransfermodelrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, styletransferstatusrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, insertfilterrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, removefilterrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, movefilterrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getstackinforequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, estimatecapturerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, uicontrolremoveallrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getsettingsrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, anselstatusreportrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, styletransfersideloadchoicerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, styletransfersideloadprogressrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, updaterollrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getgamespecificcontrolsrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, getenabledfeaturesetrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, updatefovrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, anselreadyrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, sethighqualityrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setfilterandattributesrequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, setcmsinforequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCRequest_default_oneof_instance_, multipleinputeventrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCRequest, request_),
  };
  AnselIPCRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselIPCRequest_descriptor_,
      AnselIPCRequest::default_instance_,
      AnselIPCRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCRequest, _unknown_fields_),
      -1,
      AnselIPCRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCRequest, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselIPCRequest));
  AnselIPCResponse_descriptor_ = file->message_type(134);
  static const int AnselIPCResponse_offsets_[63] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getfilterlistresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, gethighresresolutionlistresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, captureshotstartedresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, captureshotfinishedresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, captureshotprocessingfinishedresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, get360resolutionrangeresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getfovrangeresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setfovresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getrollrangeresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setrollresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setanselenabledresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, abortcaptureresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getanselenabledresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getlwrrentfovresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, captureshotprogressresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, logfilenameresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setfilterresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setfilterattributeresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, isanselavailableresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, screenresolutionchangedresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getanselshotpermissionsresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, inputeventresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setlangidresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getfilterinforesponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, resetfiltervaluesresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, isanselsdkintegrationavailableresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, ipcversionresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, adduielementresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uireadyresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uicontrolchangedresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uicontrolremoveresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uicontrolsetvisibilityresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uicontrolgetvisibilityresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getprocessinforesponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getscreenresolutionresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, isanselmoddingavailableresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setgridofthirdsenabledresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, resetentirestackresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getfeaturesetresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setstyletransferenabledresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setstyletransferstyleresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getstyletransfermodellistresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setstyletransfermodelresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, styletransferstatusresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, movefilterresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getstackinforesponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, insertfilterresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, removefilterresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, reporterrorresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, estimatecaptureresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, uicontrolremoveallresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getsettingsresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, anselstatusreportresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, styletransfersideloadchoiceresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, styletransfersideloadprogressresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, updaterollresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, getenabledfeaturesetresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, updatefovresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, anselreadyresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, sethighqualityresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setfilterandattributesresponse_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCResponse_default_oneof_instance_, setcmsinforesponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCResponse, response_),
  };
  AnselIPCResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselIPCResponse_descriptor_,
      AnselIPCResponse::default_instance_,
      AnselIPCResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCResponse, _unknown_fields_),
      -1,
      AnselIPCResponse_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCResponse, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselIPCResponse));
  AnselIPCMessage_descriptor_ = file->message_type(135);
  static const int AnselIPCMessage_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCMessage_default_oneof_instance_, request_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(AnselIPCMessage_default_oneof_instance_, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCMessage, message_),
  };
  AnselIPCMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnselIPCMessage_descriptor_,
      AnselIPCMessage::default_instance_,
      AnselIPCMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCMessage, _unknown_fields_),
      -1,
      AnselIPCMessage_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnselIPCMessage, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnselIPCMessage));
  ErrorType_descriptor_ = file->enum_type(0);
  Status_descriptor_ = file->enum_type(1);
  ControlType_descriptor_ = file->enum_type(2);
  SideloadChoice_descriptor_ = file->enum_type(3);
  SideloadProgress_descriptor_ = file->enum_type(4);
  State_descriptor_ = file->enum_type(5);
  ShotTypeIPC_descriptor_ = file->enum_type(6);
  EditAllowedType_descriptor_ = file->enum_type(7);
  ListSelectionType_descriptor_ = file->enum_type(8);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ipc_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IpcVersionRequest_descriptor_, &IpcVersionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IpcVersionResponse_descriptor_, &IpcVersionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselReadyRequest_descriptor_, &AnselReadyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselReadyResponse_descriptor_, &AnselReadyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselStatusReportRequest_descriptor_, &AnselStatusReportRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselStatusReportRequest_OneofOptionalData_descriptor_, &AnselStatusReportRequest_OneofOptionalData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselStatusReportResponse_descriptor_, &AnselStatusReportResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferEnabledRequest_descriptor_, &SetStyleTransferEnabledRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferEnabledResponse_descriptor_, &SetStyleTransferEnabledResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferStyleRequest_descriptor_, &SetStyleTransferStyleRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferStyleResponse_descriptor_, &SetStyleTransferStyleResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStyleTransferModelListRequest_descriptor_, &GetStyleTransferModelListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStyleTransferModelListResponse_descriptor_, &GetStyleTransferModelListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStyleTransferModelListResponse_ModelDescription_descriptor_, &GetStyleTransferModelListResponse_ModelDescription::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferModelRequest_descriptor_, &SetStyleTransferModelRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetStyleTransferModelResponse_descriptor_, &SetStyleTransferModelResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferStatusRequest_descriptor_, &StyleTransferStatusRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferStatusResponse_descriptor_, &StyleTransferStatusResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferSideloadChoiceRequest_descriptor_, &StyleTransferSideloadChoiceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferSideloadChoiceResponse_descriptor_, &StyleTransferSideloadChoiceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferSideloadProgressRequest_descriptor_, &StyleTransferSideloadProgressRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StyleTransferSideloadProgressResponse_descriptor_, &StyleTransferSideloadProgressResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIReadyRequest_descriptor_, &UIReadyRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIReadyResponse_descriptor_, &UIReadyResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescButton_descriptor_, &UIDescButton::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescSlider_descriptor_, &UIDescSlider::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescEdit_descriptor_, &UIDescEdit::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescBoolean_descriptor_, &UIDescBoolean::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescLabel_descriptor_, &UIDescLabel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MapFieldEntry_descriptor_, &MapFieldEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescList_descriptor_, &UIDescList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIDescPulldown_descriptor_, &UIDescPulldown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddUIElementRequest_descriptor_, &AddUIElementRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddUIElementResponse_descriptor_, &AddUIElementResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlChangedRequest_descriptor_, &UIControlChangedRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlChangedResponse_descriptor_, &UIControlChangedResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlRemoveAllRequest_descriptor_, &UIControlRemoveAllRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlRemoveAllResponse_descriptor_, &UIControlRemoveAllResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlRemoveRequest_descriptor_, &UIControlRemoveRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlRemoveResponse_descriptor_, &UIControlRemoveResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlSetVisibilityRequest_descriptor_, &UIControlSetVisibilityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlSetVisibilityResponse_descriptor_, &UIControlSetVisibilityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlGetVisibilityRequest_descriptor_, &UIControlGetVisibilityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UIControlGetVisibilityResponse_descriptor_, &UIControlGetVisibilityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetGameSpecificControlsRequest_descriptor_, &GetGameSpecificControlsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSettingsRequest_descriptor_, &GetSettingsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSettingsResponse_descriptor_, &GetSettingsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetSettingsResponse_Setting_descriptor_, &GetSettingsResponse_Setting::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFeatureSetRequest_descriptor_, &GetFeatureSetRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFeatureSetResponse_descriptor_, &GetFeatureSetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetCMSInfoRequest_descriptor_, &SetCMSInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetCMSInfoResponse_descriptor_, &SetCMSInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetEnabledFeatureSetRequest_descriptor_, &GetEnabledFeatureSetRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetEnabledFeatureSetResponse_descriptor_, &GetEnabledFeatureSetResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselModdingAvailableRequest_descriptor_, &IsAnselModdingAvailableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselModdingAvailableResponse_descriptor_, &IsAnselModdingAvailableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselSDKIntegrationAvailableRequest_descriptor_, &IsAnselSDKIntegrationAvailableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselSDKIntegrationAvailableResponse_descriptor_, &IsAnselSDKIntegrationAvailableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScreenResolutionChangedRequest_descriptor_, &ScreenResolutionChangedRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScreenResolutionChangedResponse_descriptor_, &ScreenResolutionChangedResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetGridOfThirdsEnabledRequest_descriptor_, &SetGridOfThirdsEnabledRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetGridOfThirdsEnabledResponse_descriptor_, &SetGridOfThirdsEnabledResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetProcessInfoRequest_descriptor_, &GetProcessInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetProcessInfoResponse_descriptor_, &GetProcessInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetAnselEnabledRequest_descriptor_, &SetAnselEnabledRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetAnselEnabledResponse_descriptor_, &SetAnselEnabledResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAnselEnabledRequest_descriptor_, &GetAnselEnabledRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAnselEnabledResponse_descriptor_, &GetAnselEnabledResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAnselShotPermissionsRequest_descriptor_, &GetAnselShotPermissionsRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetAnselShotPermissionsResponse_descriptor_, &GetAnselShotPermissionsResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLangIdRequest_descriptor_, &SetLangIdRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetLangIdResponse_descriptor_, &SetLangIdResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFOVRangeRequest_descriptor_, &GetFOVRangeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFOVRangeResponse_descriptor_, &GetFOVRangeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFOVRequest_descriptor_, &SetFOVRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFOVResponse_descriptor_, &SetFOVResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLwrrentFOVRequest_descriptor_, &GetLwrrentFOVRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetLwrrentFOVResponse_descriptor_, &GetLwrrentFOVResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRollRangeRequest_descriptor_, &GetRollRangeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetRollRangeResponse_descriptor_, &GetRollRangeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetRollRequest_descriptor_, &SetRollRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetRollResponse_descriptor_, &SetRollResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRollRequest_descriptor_, &UpdateRollRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateRollResponse_descriptor_, &UpdateRollResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateFovRequest_descriptor_, &UpdateFovRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpdateFovResponse_descriptor_, &UpdateFovResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetScreenResolutionRequest_descriptor_, &GetScreenResolutionRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetScreenResolutionResponse_descriptor_, &GetScreenResolutionResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CaptureShotRequest_descriptor_, &CaptureShotRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CaptureShotStartedResponse_descriptor_, &CaptureShotStartedResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CaptureShotProgressResponse_descriptor_, &CaptureShotProgressResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CaptureShotFinishedResponse_descriptor_, &CaptureShotFinishedResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CaptureShotProcessingFinishedResponse_descriptor_, &CaptureShotProcessingFinishedResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EstimateCaptureRequest_descriptor_, &EstimateCaptureRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EstimateCaptureResponse_descriptor_, &EstimateCaptureResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AbortCaptureRequest_descriptor_, &AbortCaptureRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AbortCaptureResponse_descriptor_, &AbortCaptureResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHighresResolutionListRequest_descriptor_, &GetHighresResolutionListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHighresResolutionListResponse_descriptor_, &GetHighresResolutionListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetHighresResolutionListResponse_HighresResolution_descriptor_, &GetHighresResolutionListResponse_HighresResolution::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Get360ResolutionRangeRequest_descriptor_, &Get360ResolutionRangeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Get360ResolutionRangeResponse_descriptor_, &Get360ResolutionRangeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFilterListRequest_descriptor_, &GetFilterListRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFilterListResponse_descriptor_, &GetFilterListResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetEntireStackRequest_descriptor_, &ResetEntireStackRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetEntireStackResponse_descriptor_, &ResetEntireStackResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetFilterValuesRequest_descriptor_, &ResetFilterValuesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetFilterValuesResponse_descriptor_, &ResetFilterValuesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ResetAllFilterValuesRequest_descriptor_, &ResetAllFilterValuesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterRequest_descriptor_, &SetFilterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterResponse_descriptor_, &SetFilterResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterAndAttributesRequest_descriptor_, &SetFilterAndAttributesRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterAndAttributesResponse_descriptor_, &SetFilterAndAttributesResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InsertFilterRequest_descriptor_, &InsertFilterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InsertFilterResponse_descriptor_, &InsertFilterResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveFilterRequest_descriptor_, &RemoveFilterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RemoveFilterResponse_descriptor_, &RemoveFilterResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveFilterRequest_descriptor_, &MoveFilterRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoveFilterResponse_descriptor_, &MoveFilterResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStackInfoRequest_descriptor_, &GetStackInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStackInfoResponse_descriptor_, &GetStackInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_descriptor_, &FilterProperties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_ValuesFloat_descriptor_, &FilterProperties_ValuesFloat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_ValuesInt_descriptor_, &FilterProperties_ValuesInt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_ValuesUInt_descriptor_, &FilterProperties_ValuesUInt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_ValuesBool_descriptor_, &FilterProperties_ValuesBool::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FilterProperties_ControlDescription_descriptor_, &FilterProperties_ControlDescription::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFilterInfoRequest_descriptor_, &GetFilterInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetFilterInfoResponse_descriptor_, &GetFilterInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselAvailableRequest_descriptor_, &IsAnselAvailableRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    IsAnselAvailableResponse_descriptor_, &IsAnselAvailableResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterAttributeRequest_descriptor_, &SetFilterAttributeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetFilterAttributeResponse_descriptor_, &SetFilterAttributeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MouseEventRequest_descriptor_, &MouseEventRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KeyboardEventRequest_descriptor_, &KeyboardEventRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InputEventRequest_descriptor_, &InputEventRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InputEventResponse_descriptor_, &InputEventResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MultipleInputEventRequest_descriptor_, &MultipleInputEventRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LogFilenameResponse_descriptor_, &LogFilenameResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReportErrorResponse_descriptor_, &ReportErrorResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetHighQualityRequest_descriptor_, &SetHighQualityRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetHighQualityResponse_descriptor_, &SetHighQualityResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselIPCRequest_descriptor_, &AnselIPCRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselIPCResponse_descriptor_, &AnselIPCResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnselIPCMessage_descriptor_, &AnselIPCMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ipc_2eproto() {
  delete IpcVersionRequest::default_instance_;
  delete IpcVersionRequest_reflection_;
  delete IpcVersionResponse::default_instance_;
  delete IpcVersionResponse_reflection_;
  delete AnselReadyRequest::default_instance_;
  delete AnselReadyRequest_reflection_;
  delete AnselReadyResponse::default_instance_;
  delete AnselReadyResponse_reflection_;
  delete AnselStatusReportRequest::default_instance_;
  delete AnselStatusReportRequest_reflection_;
  delete AnselStatusReportRequest_OneofOptionalData::default_instance_;
  delete AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_;
  delete AnselStatusReportRequest_OneofOptionalData_reflection_;
  delete AnselStatusReportResponse::default_instance_;
  delete AnselStatusReportResponse_reflection_;
  delete SetStyleTransferEnabledRequest::default_instance_;
  delete SetStyleTransferEnabledRequest_reflection_;
  delete SetStyleTransferEnabledResponse::default_instance_;
  delete SetStyleTransferEnabledResponse_reflection_;
  delete SetStyleTransferStyleRequest::default_instance_;
  delete SetStyleTransferStyleRequest_reflection_;
  delete SetStyleTransferStyleResponse::default_instance_;
  delete SetStyleTransferStyleResponse_reflection_;
  delete GetStyleTransferModelListRequest::default_instance_;
  delete GetStyleTransferModelListRequest_reflection_;
  delete GetStyleTransferModelListResponse::default_instance_;
  delete GetStyleTransferModelListResponse_reflection_;
  delete GetStyleTransferModelListResponse_ModelDescription::default_instance_;
  delete GetStyleTransferModelListResponse_ModelDescription_reflection_;
  delete SetStyleTransferModelRequest::default_instance_;
  delete SetStyleTransferModelRequest_reflection_;
  delete SetStyleTransferModelResponse::default_instance_;
  delete SetStyleTransferModelResponse_reflection_;
  delete StyleTransferStatusRequest::default_instance_;
  delete StyleTransferStatusRequest_reflection_;
  delete StyleTransferStatusResponse::default_instance_;
  delete StyleTransferStatusResponse_reflection_;
  delete StyleTransferSideloadChoiceRequest::default_instance_;
  delete StyleTransferSideloadChoiceRequest_reflection_;
  delete StyleTransferSideloadChoiceResponse::default_instance_;
  delete StyleTransferSideloadChoiceResponse_reflection_;
  delete StyleTransferSideloadProgressRequest::default_instance_;
  delete StyleTransferSideloadProgressRequest_reflection_;
  delete StyleTransferSideloadProgressResponse::default_instance_;
  delete StyleTransferSideloadProgressResponse_reflection_;
  delete UIReadyRequest::default_instance_;
  delete UIReadyRequest_reflection_;
  delete UIReadyResponse::default_instance_;
  delete UIReadyResponse_reflection_;
  delete UIDescButton::default_instance_;
  delete UIDescButton_reflection_;
  delete UIDescSlider::default_instance_;
  delete UIDescSlider_reflection_;
  delete UIDescEdit::default_instance_;
  delete UIDescEdit_reflection_;
  delete UIDescBoolean::default_instance_;
  delete UIDescBoolean_reflection_;
  delete UIDescLabel::default_instance_;
  delete UIDescLabel_reflection_;
  delete MapFieldEntry::default_instance_;
  delete MapFieldEntry_reflection_;
  delete UIDescList::default_instance_;
  delete UIDescList_reflection_;
  delete UIDescPulldown::default_instance_;
  delete UIDescPulldown_reflection_;
  delete AddUIElementRequest::default_instance_;
  delete AddUIElementRequest_default_oneof_instance_;
  delete AddUIElementRequest_reflection_;
  delete AddUIElementResponse::default_instance_;
  delete AddUIElementResponse_default_oneof_instance_;
  delete AddUIElementResponse_reflection_;
  delete UIControlChangedRequest::default_instance_;
  delete UIControlChangedRequest_default_oneof_instance_;
  delete UIControlChangedRequest_reflection_;
  delete UIControlChangedResponse::default_instance_;
  delete UIControlChangedResponse_reflection_;
  delete UIControlRemoveAllRequest::default_instance_;
  delete UIControlRemoveAllRequest_reflection_;
  delete UIControlRemoveAllResponse::default_instance_;
  delete UIControlRemoveAllResponse_reflection_;
  delete UIControlRemoveRequest::default_instance_;
  delete UIControlRemoveRequest_reflection_;
  delete UIControlRemoveResponse::default_instance_;
  delete UIControlRemoveResponse_reflection_;
  delete UIControlSetVisibilityRequest::default_instance_;
  delete UIControlSetVisibilityRequest_reflection_;
  delete UIControlSetVisibilityResponse::default_instance_;
  delete UIControlSetVisibilityResponse_reflection_;
  delete UIControlGetVisibilityRequest::default_instance_;
  delete UIControlGetVisibilityRequest_reflection_;
  delete UIControlGetVisibilityResponse::default_instance_;
  delete UIControlGetVisibilityResponse_reflection_;
  delete GetGameSpecificControlsRequest::default_instance_;
  delete GetGameSpecificControlsRequest_reflection_;
  delete GetSettingsRequest::default_instance_;
  delete GetSettingsRequest_reflection_;
  delete GetSettingsResponse::default_instance_;
  delete GetSettingsResponse_reflection_;
  delete GetSettingsResponse_Setting::default_instance_;
  delete GetSettingsResponse_Setting_reflection_;
  delete GetFeatureSetRequest::default_instance_;
  delete GetFeatureSetRequest_reflection_;
  delete GetFeatureSetResponse::default_instance_;
  delete GetFeatureSetResponse_reflection_;
  delete SetCMSInfoRequest::default_instance_;
  delete SetCMSInfoRequest_reflection_;
  delete SetCMSInfoResponse::default_instance_;
  delete SetCMSInfoResponse_reflection_;
  delete GetEnabledFeatureSetRequest::default_instance_;
  delete GetEnabledFeatureSetRequest_reflection_;
  delete GetEnabledFeatureSetResponse::default_instance_;
  delete GetEnabledFeatureSetResponse_reflection_;
  delete IsAnselModdingAvailableRequest::default_instance_;
  delete IsAnselModdingAvailableRequest_reflection_;
  delete IsAnselModdingAvailableResponse::default_instance_;
  delete IsAnselModdingAvailableResponse_reflection_;
  delete IsAnselSDKIntegrationAvailableRequest::default_instance_;
  delete IsAnselSDKIntegrationAvailableRequest_reflection_;
  delete IsAnselSDKIntegrationAvailableResponse::default_instance_;
  delete IsAnselSDKIntegrationAvailableResponse_reflection_;
  delete ScreenResolutionChangedRequest::default_instance_;
  delete ScreenResolutionChangedRequest_reflection_;
  delete ScreenResolutionChangedResponse::default_instance_;
  delete ScreenResolutionChangedResponse_reflection_;
  delete SetGridOfThirdsEnabledRequest::default_instance_;
  delete SetGridOfThirdsEnabledRequest_reflection_;
  delete SetGridOfThirdsEnabledResponse::default_instance_;
  delete SetGridOfThirdsEnabledResponse_reflection_;
  delete GetProcessInfoRequest::default_instance_;
  delete GetProcessInfoRequest_reflection_;
  delete GetProcessInfoResponse::default_instance_;
  delete GetProcessInfoResponse_reflection_;
  delete SetAnselEnabledRequest::default_instance_;
  delete SetAnselEnabledRequest_reflection_;
  delete SetAnselEnabledResponse::default_instance_;
  delete SetAnselEnabledResponse_reflection_;
  delete GetAnselEnabledRequest::default_instance_;
  delete GetAnselEnabledRequest_reflection_;
  delete GetAnselEnabledResponse::default_instance_;
  delete GetAnselEnabledResponse_reflection_;
  delete GetAnselShotPermissionsRequest::default_instance_;
  delete GetAnselShotPermissionsRequest_reflection_;
  delete GetAnselShotPermissionsResponse::default_instance_;
  delete GetAnselShotPermissionsResponse_reflection_;
  delete SetLangIdRequest::default_instance_;
  delete SetLangIdRequest_reflection_;
  delete SetLangIdResponse::default_instance_;
  delete SetLangIdResponse_reflection_;
  delete GetFOVRangeRequest::default_instance_;
  delete GetFOVRangeRequest_reflection_;
  delete GetFOVRangeResponse::default_instance_;
  delete GetFOVRangeResponse_reflection_;
  delete SetFOVRequest::default_instance_;
  delete SetFOVRequest_reflection_;
  delete SetFOVResponse::default_instance_;
  delete SetFOVResponse_reflection_;
  delete GetLwrrentFOVRequest::default_instance_;
  delete GetLwrrentFOVRequest_reflection_;
  delete GetLwrrentFOVResponse::default_instance_;
  delete GetLwrrentFOVResponse_reflection_;
  delete GetRollRangeRequest::default_instance_;
  delete GetRollRangeRequest_reflection_;
  delete GetRollRangeResponse::default_instance_;
  delete GetRollRangeResponse_reflection_;
  delete SetRollRequest::default_instance_;
  delete SetRollRequest_reflection_;
  delete SetRollResponse::default_instance_;
  delete SetRollResponse_reflection_;
  delete UpdateRollRequest::default_instance_;
  delete UpdateRollRequest_reflection_;
  delete UpdateRollResponse::default_instance_;
  delete UpdateRollResponse_reflection_;
  delete UpdateFovRequest::default_instance_;
  delete UpdateFovRequest_reflection_;
  delete UpdateFovResponse::default_instance_;
  delete UpdateFovResponse_reflection_;
  delete GetScreenResolutionRequest::default_instance_;
  delete GetScreenResolutionRequest_reflection_;
  delete GetScreenResolutionResponse::default_instance_;
  delete GetScreenResolutionResponse_reflection_;
  delete CaptureShotRequest::default_instance_;
  delete CaptureShotRequest_reflection_;
  delete CaptureShotStartedResponse::default_instance_;
  delete CaptureShotStartedResponse_reflection_;
  delete CaptureShotProgressResponse::default_instance_;
  delete CaptureShotProgressResponse_reflection_;
  delete CaptureShotFinishedResponse::default_instance_;
  delete CaptureShotFinishedResponse_reflection_;
  delete CaptureShotProcessingFinishedResponse::default_instance_;
  delete CaptureShotProcessingFinishedResponse_reflection_;
  delete EstimateCaptureRequest::default_instance_;
  delete EstimateCaptureRequest_reflection_;
  delete EstimateCaptureResponse::default_instance_;
  delete EstimateCaptureResponse_reflection_;
  delete AbortCaptureRequest::default_instance_;
  delete AbortCaptureRequest_reflection_;
  delete AbortCaptureResponse::default_instance_;
  delete AbortCaptureResponse_reflection_;
  delete GetHighresResolutionListRequest::default_instance_;
  delete GetHighresResolutionListRequest_reflection_;
  delete GetHighresResolutionListResponse::default_instance_;
  delete GetHighresResolutionListResponse_reflection_;
  delete GetHighresResolutionListResponse_HighresResolution::default_instance_;
  delete GetHighresResolutionListResponse_HighresResolution_reflection_;
  delete Get360ResolutionRangeRequest::default_instance_;
  delete Get360ResolutionRangeRequest_reflection_;
  delete Get360ResolutionRangeResponse::default_instance_;
  delete Get360ResolutionRangeResponse_reflection_;
  delete GetFilterListRequest::default_instance_;
  delete GetFilterListRequest_reflection_;
  delete GetFilterListResponse::default_instance_;
  delete GetFilterListResponse_reflection_;
  delete ResetEntireStackRequest::default_instance_;
  delete ResetEntireStackRequest_reflection_;
  delete ResetEntireStackResponse::default_instance_;
  delete ResetEntireStackResponse_reflection_;
  delete ResetFilterValuesRequest::default_instance_;
  delete ResetFilterValuesRequest_reflection_;
  delete ResetFilterValuesResponse::default_instance_;
  delete ResetFilterValuesResponse_reflection_;
  delete ResetAllFilterValuesRequest::default_instance_;
  delete ResetAllFilterValuesRequest_reflection_;
  delete SetFilterRequest::default_instance_;
  delete SetFilterRequest_reflection_;
  delete SetFilterResponse::default_instance_;
  delete SetFilterResponse_reflection_;
  delete SetFilterAndAttributesRequest::default_instance_;
  delete SetFilterAndAttributesRequest_reflection_;
  delete SetFilterAndAttributesResponse::default_instance_;
  delete SetFilterAndAttributesResponse_reflection_;
  delete InsertFilterRequest::default_instance_;
  delete InsertFilterRequest_reflection_;
  delete InsertFilterResponse::default_instance_;
  delete InsertFilterResponse_reflection_;
  delete RemoveFilterRequest::default_instance_;
  delete RemoveFilterRequest_reflection_;
  delete RemoveFilterResponse::default_instance_;
  delete RemoveFilterResponse_reflection_;
  delete MoveFilterRequest::default_instance_;
  delete MoveFilterRequest_reflection_;
  delete MoveFilterResponse::default_instance_;
  delete MoveFilterResponse_reflection_;
  delete GetStackInfoRequest::default_instance_;
  delete GetStackInfoRequest_reflection_;
  delete GetStackInfoResponse::default_instance_;
  delete GetStackInfoResponse_reflection_;
  delete FilterProperties::default_instance_;
  delete FilterProperties_reflection_;
  delete FilterProperties_ValuesFloat::default_instance_;
  delete FilterProperties_ValuesFloat_reflection_;
  delete FilterProperties_ValuesInt::default_instance_;
  delete FilterProperties_ValuesInt_reflection_;
  delete FilterProperties_ValuesUInt::default_instance_;
  delete FilterProperties_ValuesUInt_reflection_;
  delete FilterProperties_ValuesBool::default_instance_;
  delete FilterProperties_ValuesBool_reflection_;
  delete FilterProperties_ControlDescription::default_instance_;
  delete FilterProperties_ControlDescription_reflection_;
  delete GetFilterInfoRequest::default_instance_;
  delete GetFilterInfoRequest_reflection_;
  delete GetFilterInfoResponse::default_instance_;
  delete GetFilterInfoResponse_reflection_;
  delete IsAnselAvailableRequest::default_instance_;
  delete IsAnselAvailableRequest_reflection_;
  delete IsAnselAvailableResponse::default_instance_;
  delete IsAnselAvailableResponse_reflection_;
  delete SetFilterAttributeRequest::default_instance_;
  delete SetFilterAttributeRequest_reflection_;
  delete SetFilterAttributeResponse::default_instance_;
  delete SetFilterAttributeResponse_reflection_;
  delete MouseEventRequest::default_instance_;
  delete MouseEventRequest_reflection_;
  delete KeyboardEventRequest::default_instance_;
  delete KeyboardEventRequest_reflection_;
  delete InputEventRequest::default_instance_;
  delete InputEventRequest_reflection_;
  delete InputEventResponse::default_instance_;
  delete InputEventResponse_reflection_;
  delete MultipleInputEventRequest::default_instance_;
  delete MultipleInputEventRequest_reflection_;
  delete LogFilenameResponse::default_instance_;
  delete LogFilenameResponse_reflection_;
  delete ReportErrorResponse::default_instance_;
  delete ReportErrorResponse_reflection_;
  delete SetHighQualityRequest::default_instance_;
  delete SetHighQualityRequest_reflection_;
  delete SetHighQualityResponse::default_instance_;
  delete SetHighQualityResponse_reflection_;
  delete AnselIPCRequest::default_instance_;
  delete AnselIPCRequest_default_oneof_instance_;
  delete AnselIPCRequest_reflection_;
  delete AnselIPCResponse::default_instance_;
  delete AnselIPCResponse_default_oneof_instance_;
  delete AnselIPCResponse_reflection_;
  delete AnselIPCMessage::default_instance_;
  delete AnselIPCMessage_default_oneof_instance_;
  delete AnselIPCMessage_reflection_;
}

void protobuf_AddDesc_ipc_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tipc.proto\022\010AnselIpc\"\023\n\021IpcVersionReque"
    "st\"J\n\022IpcVersionResponse\022\020\n\005major\030\001 \002(\r:"
    "\0017\022\020\n\005minor\030\002 \002(\r:\0018\022\020\n\005patch\030\003 \002(\r:\0010\","
    "\n\021AnselReadyRequest\022\027\n\017creationCounter\030\001"
    " \002(\r\"6\n\022AnselReadyResponse\022 \n\006status\030\001 \002"
    "(\0162\020.AnselIpc.Status\"\367\001\n\030AnselStatusRepo"
    "rtRequest\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Sta"
    "tus\022B\n\004data\030\002 \003(\01324.AnselIpc.AnselStatus"
    "ReportRequest.OneofOptionalData\032u\n\021Oneof"
    "OptionalData\022\026\n\014integerValue\030\001 \001(\005H\000\022\025\n\013"
    "stringValue\030\002 \001(\tH\000\022\024\n\nfloatValue\030\003 \001(\002H"
    "\000\022\023\n\tboolValue\030\004 \001(\010H\000B\006\n\004data\"=\n\031AnselS"
    "tatusReportResponse\022 \n\006status\030\001 \002(\0162\020.An"
    "selIpc.Status\"1\n\036SetStyleTransferEnabled"
    "Request\022\017\n\007enabled\030\001 \002(\010\"C\n\037SetStyleTran"
    "sferEnabledResponse\022 \n\006status\030\001 \002(\0162\020.An"
    "selIpc.Status\":\n\034SetStyleTransferStyleRe"
    "quest\022\032\n\022fullyQualifiedPath\030\001 \002(\t\"A\n\035Set"
    "StyleTransferStyleResponse\022 \n\006status\030\001 \002"
    "(\0162\020.AnselIpc.Status\"\"\n GetStyleTransfer"
    "ModelListRequest\"\250\001\n!GetStyleTransferMod"
    "elListResponse\022L\n\006models\030\001 \003(\0132<.AnselIp"
    "c.GetStyleTransferModelListResponse.Mode"
    "lDescription\0325\n\020ModelDescription\022\n\n\002id\030\001"
    " \002(\t\022\025\n\rlocalizedName\030\002 \002(\t\"/\n\034SetStyleT"
    "ransferModelRequest\022\017\n\007modelId\030\001 \002(\t\"A\n\035"
    "SetStyleTransferModelResponse\022 \n\006status\030"
    "\001 \002(\0162\020.AnselIpc.Status\">\n\032StyleTransfer"
    "StatusRequest\022 \n\006status\030\001 \002(\0162\020.AnselIpc"
    ".Status\"\035\n\033StyleTransferStatusResponse\"@"
    "\n\"StyleTransferSideloadChoiceRequest\022\032\n\022"
    "packageSizeInBytes\030\001 \002(\r\"O\n#StyleTransfe"
    "rSideloadChoiceResponse\022(\n\006choice\030\001 \002(\0162"
    "\030.AnselIpc.SideloadChoice\"&\n$StyleTransf"
    "erSideloadProgressRequest\"e\n%StyleTransf"
    "erSideloadProgressResponse\022*\n\006status\030\001 \002"
    "(\0162\032.AnselIpc.SideloadProgress\022\020\n\010progre"
    "ss\030\002 \001(\005\"2\n\016UIReadyRequest\022 \n\006status\030\001 \002"
    "(\0162\020.AnselIpc.Status\"\021\n\017UIReadyResponse\""
    "(\n\014UIDescButton\022\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 \001("
    "\t\"m\n\014UIDescSlider\022\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 "
    "\001(\t\022\020\n\010milwalue\030\003 \001(\002\022\020\n\010maxValue\030\004 \001(\002\022"
    "\r\n\005value\030\005 \001(\002\022\020\n\010interval\030\006 \001(\002\"d\n\nUIDe"
    "scEdit\022\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\022.\n\013allo"
    "wedType\030\003 \001(\0162\031.AnselIpc.EditAllowedType"
    "\022\014\n\004data\030\004 \001(\t\"6\n\rUIDescBoolean\022\n\n\002id\030\001 "
    "\001(\005\022\014\n\004text\030\002 \001(\t\022\013\n\003set\030\003 \001(\010\"\'\n\013UIDesc"
    "Label\022\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\"+\n\rMapFi"
    "eldEntry\022\013\n\003key\030\001 \002(\005\022\r\n\005value\030\002 \002(\t\"\214\001\n"
    "\nUIDescList\022\n\n\002id\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\022\'\n"
    "\006values\030\003 \003(\0132\027.AnselIpc.MapFieldEntry\022\020"
    "\n\010selected\030\004 \001(\005\022)\n\004type\030\005 \001(\0162\033.AnselIp"
    "c.ListSelectionType\"A\n\016UIDescPulldown\022\n\n"
    "\002id\030\001 \001(\005\022\014\n\004text\030\002 \001(\t\022\025\n\rcontrolIdList"
    "\030\003 \003(\005\"\307\003\n\023AddUIElementRequest\022\021\n\treques"
    "tId\030\001 \002(\005\022*\n\013controlType\030\002 \002(\0162\025.AnselIp"
    "c.ControlType\022\017\n\007visible\030\003 \001(\010\022.\n\014uiDesc"
    "Button\030\004 \001(\0132\026.AnselIpc.UIDescButtonH\000\022."
    "\n\014uiDescSlider\030\005 \001(\0132\026.AnselIpc.UIDescSl"
    "iderH\000\022*\n\nuiDescEdit\030\006 \001(\0132\024.AnselIpc.UI"
    "DescEditH\000\0220\n\ruiDescBoolean\030\007 \001(\0132\027.Anse"
    "lIpc.UIDescBooleanH\000\022,\n\013uiDescLabel\030\010 \001("
    "\0132\025.AnselIpc.UIDescLabelH\000\022*\n\nuiDescList"
    "\030\t \001(\0132\024.AnselIpc.UIDescListH\000\0222\n\016uiDesc"
    "Pulldown\030\n \001(\0132\030.AnselIpc.UIDescPulldown"
    "H\000B\024\n\022controlDescription\"\255\003\n\024AddUIElemen"
    "tResponse\022\021\n\trequestId\030\001 \002(\005\022 \n\006status\030\002"
    " \002(\0162\020.AnselIpc.Status\022.\n\014uiDescButton\030\003"
    " \001(\0132\026.AnselIpc.UIDescButtonH\000\022.\n\014uiDesc"
    "Slider\030\004 \001(\0132\026.AnselIpc.UIDescSliderH\000\022*"
    "\n\nuiDescEdit\030\005 \001(\0132\024.AnselIpc.UIDescEdit"
    "H\000\0220\n\ruiDescBoolean\030\006 \001(\0132\027.AnselIpc.UID"
    "escBooleanH\000\022,\n\013uiDescLabel\030\007 \001(\0132\025.Anse"
    "lIpc.UIDescLabelH\000\022*\n\nuiDescList\030\010 \001(\0132\024"
    ".AnselIpc.UIDescListH\000\0222\n\016uiDescPulldown"
    "\030\t \001(\0132\030.AnselIpc.UIDescPulldownH\000B\024\n\022co"
    "ntrolDescription\"\307\002\n\027UIControlChangedReq"
    "uest\022.\n\014uiDescButton\030\003 \001(\0132\026.AnselIpc.UI"
    "DescButtonH\000\022.\n\014uiDescSlider\030\004 \001(\0132\026.Ans"
    "elIpc.UIDescSliderH\000\022*\n\nuiDescEdit\030\005 \001(\013"
    "2\024.AnselIpc.UIDescEditH\000\0220\n\ruiDescBoolea"
    "n\030\006 \001(\0132\027.AnselIpc.UIDescBooleanH\000\022,\n\013ui"
    "DescLabel\030\007 \001(\0132\025.AnselIpc.UIDescLabelH\000"
    "\022*\n\nuiDescList\030\010 \001(\0132\024.AnselIpc.UIDescLi"
    "stH\000B\024\n\022controlDescription\"<\n\030UIControlC"
    "hangedResponse\022 \n\006status\030\001 \002(\0162\020.AnselIp"
    "c.Status\"\033\n\031UIControlRemoveAllRequest\">\n"
    "\032UIControlRemoveAllResponse\022 \n\006status\030\001 "
    "\002(\0162\020.AnselIpc.Status\"$\n\026UIControlRemove"
    "Request\022\n\n\002id\030\001 \003(\005\";\n\027UIControlRemoveRe"
    "sponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Status"
    "\"<\n\035UIControlSetVisibilityRequest\022\n\n\002id\030"
    "\001 \002(\005\022\017\n\007visible\030\002 \002(\010\"B\n\036UIControlSetVi"
    "sibilityResponse\022 \n\006status\030\001 \002(\0162\020.Ansel"
    "Ipc.Status\"+\n\035UIControlGetVisibilityRequ"
    "est\022\n\n\002id\030\001 \002(\005\"1\n\036UIControlGetVisibilit"
    "yResponse\022\017\n\007visible\030\001 \002(\010\" \n\036GetGameSpe"
    "cificControlsRequest\"\024\n\022GetSettingsReque"
    "st\"v\n\023GetSettingsResponse\0227\n\010settings\030\001 "
    "\003(\0132%.AnselIpc.GetSettingsResponse.Setti"
    "ng\032&\n\007Setting\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002"
    "(\t\"R\n\024GetFeatureSetRequest\022:\n\024requestors"
    "IPCVersion\030\001 \001(\0132\034.AnselIpc.IpcVersionRe"
    "sponse\"s\n\025GetFeatureSetResponse\022\023\n\013sdkDe"
    "tected\030\001 \002(\010\022\025\n\rmodsAvailable\030\002 \002(\010\022\030\n\020r"
    "estyleAvailable\030\003 \002(\010\022\024\n\014allowOffline\030\004 "
    "\001(\010\"5\n\021SetCMSInfoRequest\022\r\n\005cmsid\030\001 \001(\t\022"
    "\021\n\tshortName\030\002 \001(\t\"6\n\022SetCMSInfoResponse"
    "\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Status\"\035\n\033Ge"
    "tEnabledFeatureSetRequest\"5\n\034GetEnabledF"
    "eatureSetResponse\022\025\n\rmodsAvailable\030\001 \002(\010"
    "\" \n\036IsAnselModdingAvailableRequest\"C\n\037Is"
    "AnselModdingAvailableResponse\022 \n\006status\030"
    "\001 \002(\0162\020.AnselIpc.Status\"\'\n%IsAnselSDKInt"
    "egrationAvailableRequest\"J\n&IsAnselSDKIn"
    "tegrationAvailableResponse\022 \n\006status\030\001 \002"
    "(\0162\020.AnselIpc.Status\" \n\036ScreenResolution"
    "ChangedRequest\"!\n\037ScreenResolutionChange"
    "dResponse\"0\n\035SetGridOfThirdsEnabledReque"
    "st\022\017\n\007enabled\030\001 \002(\010\"B\n\036SetGridOfThirdsEn"
    "abledResponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc"
    ".Status\"\027\n\025GetProcessInfoRequest\"b\n\026GetP"
    "rocessInfoResponse\022 \n\006status\030\001 \002(\0162\020.Ans"
    "elIpc.Status\022\021\n\tprocessId\030\002 \002(\r\022\023\n\013proce"
    "ssPath\030\003 \002(\t\"\215\001\n\026SetAnselEnabledRequest\022"
    "\r\n\005major\030\001 \002(\r\022\r\n\005minor\030\002 \002(\r\022\r\n\005patch\030\003"
    " \002(\r\022\017\n\007enabled\030\004 \002(\010\022\033\n\023leaveFiltersEna"
    "bled\030\005 \001(\010\022\030\n\020pauseApplication\030\006 \001(\010\";\n\027"
    "SetAnselEnabledResponse\022 \n\006status\030\001 \002(\0162"
    "\020.AnselIpc.Status\"\030\n\026GetAnselEnabledRequ"
    "est\"*\n\027GetAnselEnabledResponse\022\017\n\007enable"
    "d\030\001 \002(\010\" \n\036GetAnselShotPermissionsReques"
    "t\"m\n\037GetAnselShotPermissionsResponse\022\035\n\025"
    "isIntegrationDetected\030\001 \002(\010\022\024\n\014isHDRAllo"
    "wed\030\002 \002(\010\022\025\n\risShotAllowed\030\003 \003(\010\"1\n\020SetL"
    "angIdRequest\022\014\n\004lang\030\001 \002(\005\022\017\n\007subLang\030\002 "
    "\002(\005\"5\n\021SetLangIdResponse\022 \n\006status\030\001 \002(\016"
    "2\020.AnselIpc.Status\"\024\n\022GetFOVRangeRequest"
    "\"5\n\023GetFOVRangeResponse\022\016\n\006minFov\030\001 \002(\002\022"
    "\016\n\006maxFov\030\002 \002(\002\"\034\n\rSetFOVRequest\022\013\n\003fov\030"
    "\001 \002(\002\"2\n\016SetFOVResponse\022 \n\006status\030\001 \002(\0162"
    "\020.AnselIpc.Status\"\026\n\024GetLwrrentFOVReques"
    "t\"$\n\025GetLwrrentFOVResponse\022\013\n\003fov\030\001 \002(\002\""
    "\025\n\023GetRollRangeRequest\"8\n\024GetRollRangeRe"
    "sponse\022\017\n\007minRoll\030\001 \002(\002\022\017\n\007maxRoll\030\002 \002(\002"
    "\"\036\n\016SetRollRequest\022\014\n\004roll\030\001 \002(\002\"3\n\017SetR"
    "ollResponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc.S"
    "tatus\"!\n\021UpdateRollRequest\022\014\n\004roll\030\001 \002(\002"
    "\"6\n\022UpdateRollResponse\022 \n\006status\030\001 \002(\0162\020"
    ".AnselIpc.Status\"\037\n\020UpdateFovRequest\022\013\n\003"
    "fov\030\001 \002(\002\"5\n\021UpdateFovResponse\022 \n\006status"
    "\030\001 \002(\0162\020.AnselIpc.Status\"\034\n\032GetScreenRes"
    "olutionRequest\"i\n\033GetScreenResolutionRes"
    "ponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Status\022"
    "\023\n\013xResolution\030\002 \002(\005\022\023\n\013yResolution\030\003 \002("
    "\005\"\306\001\n\022CaptureShotRequest\022#\n\004type\030\001 \002(\0162\025"
    ".AnselIpc.ShotTypeIPC\022\031\n\021highresMultipli"
    "er\030\002 \001(\005\022\037\n\027horizontal360Resolution\030\003 \001("
    "\005\022\031\n\021generateThumbnail\030\004 \001(\010\022\r\n\005isExr\030\005 "
    "\001(\010\022\026\n\016highresEnhance\030\006 \001(\010\022\r\n\005isJxr\030\007 \001"
    "(\010\"V\n\032CaptureShotStartedResponse\022 \n\006stat"
    "us\030\001 \002(\0162\020.AnselIpc.Status\022\026\n\016totalShotC"
    "ount\030\003 \001(\005\"2\n\033CaptureShotProgressRespons"
    "e\022\023\n\013lwrrentShot\030\001 \002(\005\"\?\n\033CaptureShotFin"
    "ishedResponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc"
    ".Status\"c\n%CaptureShotProcessingFinished"
    "Response\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Stat"
    "us\022\030\n\020absoluteFilePath\030\002 \001(\t\"\273\001\n\026Estimat"
    "eCaptureRequest\022#\n\004type\030\001 \002(\0162\025.AnselIpc"
    ".ShotTypeIPC\022\031\n\021highresMultiplier\030\002 \001(\005\022"
    "\037\n\027horizontal360Resolution\030\003 \001(\005\022\031\n\021gene"
    "rateThumbnail\030\004 \001(\010\022\r\n\005isExr\030\005 \001(\010\022\026\n\016hi"
    "ghresEnhance\030\006 \001(\010\"\230\002\n\027EstimateCaptureRe"
    "sponse\022$\n\034inputDatasetSizeTotalInBytes\030\001"
    " \002(\004\022\036\n\026inputDatasetFrameCount\030\002 \002(\004\022$\n\034"
    "inputDatasetFrameSizeInBytes\030\003 \002(\004\022)\n!st"
    "itcherMemoryRequirementsInBytes\030\004 \002(\004\022\031\n"
    "\021outputResolutionX\030\005 \002(\004\022\031\n\021outputResolu"
    "tionY\030\006 \002(\004\022\025\n\routputMPixels\030\007 \002(\004\022\031\n\021ou"
    "tputSizeInBytes\030\010 \002(\004\"\025\n\023AbortCaptureReq"
    "uest\"8\n\024AbortCaptureResponse\022 \n\006status\030\001"
    " \002(\0162\020.AnselIpc.Status\"!\n\037GetHighresReso"
    "lutionListRequest\"\310\001\n GetHighresResoluti"
    "onListResponse\022Q\n\013resolutions\030\001 \003(\0132<.An"
    "selIpc.GetHighresResolutionListResponse."
    "HighresResolution\032Q\n\021HighresResolution\022\022"
    "\n\nmultiplier\030\001 \002(\005\022\023\n\013xResolution\030\002 \002(\005\022"
    "\023\n\013yResolution\030\003 \002(\005\"\036\n\034Get360Resolution"
    "RangeRequest\"W\n\035Get360ResolutionRangeRes"
    "ponse\022\032\n\022minimumXResolution\030\003 \002(\005\022\032\n\022max"
    "imumXResolution\030\004 \002(\005\"\026\n\024GetFilterListRe"
    "quest\"E\n\025GetFilterListResponse\022\024\n\014filter"
    "IdList\030\001 \003(\t\022\026\n\016filterNameList\030\002 \003(\t\"\031\n\027"
    "ResetEntireStackRequest\"<\n\030ResetEntireSt"
    "ackResponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc.S"
    "tatus\",\n\030ResetFilterValuesRequest\022\020\n\010sta"
    "ckIdx\030\001 \002(\005\"O\n\031ResetFilterValuesResponse"
    "\022\020\n\010stackIdx\030\001 \002(\005\022 \n\006status\030\002 \002(\0162\020.Ans"
    "elIpc.Status\"\035\n\033ResetAllFilterValuesRequ"
    "est\"6\n\020SetFilterRequest\022\020\n\010filterId\030\001 \002("
    "\t\022\020\n\010stackIdx\030\002 \002(\005\"}\n\021SetFilterResponse"
    "\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Status\022\020\n\010st"
    "ackIdx\030\002 \002(\005\0224\n\020filterProperties\030\003 \001(\0132\032"
    ".AnselIpc.FilterProperties\"\363\001\n\035SetFilter"
    "AndAttributesRequest\022\020\n\010filterId\030\001 \002(\t\022\020"
    "\n\010stackIdx\030\002 \002(\005\022\025\n\rintControlIds\030\003 \003(\005\022"
    "\021\n\tintValues\030\004 \003(\005\022\026\n\016uintControlIds\030\005 \003"
    "(\005\022\022\n\nuintValues\030\006 \003(\r\022\027\n\017floatControlId"
    "s\030\007 \003(\005\022\023\n\013floatValues\030\010 \003(\002\022\026\n\016boolCont"
    "rolIds\030\t \003(\005\022\022\n\nboolValues\030\n \003(\010\"\300\001\n\036Set"
    "FilterAndAttributesResponse\0226\n\021setFilter"
    "Response\030\001 \002(\0132\033.AnselIpc.SetFilterRespo"
    "nse\022\033\n\023attributeControlIds\030\002 \003(\005\022I\n\033setF"
    "ilterAttributeResponses\030\003 \003(\0132$.AnselIpc"
    ".SetFilterAttributeResponse\"9\n\023InsertFil"
    "terRequest\022\020\n\010filterId\030\001 \002(\t\022\020\n\010stackIdx"
    "\030\002 \002(\005\"\200\001\n\024InsertFilterResponse\022 \n\006statu"
    "s\030\001 \002(\0162\020.AnselIpc.Status\022\020\n\010stackIdx\030\002 "
    "\002(\005\0224\n\020filterProperties\030\003 \001(\0132\032.AnselIpc"
    ".FilterProperties\"\'\n\023RemoveFilterRequest"
    "\022\020\n\010stackIdx\030\001 \002(\005\"8\n\024RemoveFilterRespon"
    "se\022 \n\006status\030\001 \002(\0162\020.AnselIpc.Status\"0\n\021"
    "MoveFilterRequest\022\033\n\023desiredStackIndices"
    "\030\001 \003(\r\"6\n\022MoveFilterResponse\022 \n\006status\030\001"
    " \002(\0162\020.AnselIpc.Status\"\025\n\023GetStackInfoRe"
    "quest\")\n\024GetStackInfoResponse\022\021\n\tfilterI"
    "ds\030\001 \003(\t\"\222\n\n\020FilterProperties\022\020\n\010filterI"
    "d\030\001 \002(\t\022\031\n\021filterDisplayName\030\002 \002(\t\022\?\n\010co"
    "ntrols\030\003 \003(\0132-.AnselIpc.FilterProperties"
    ".ControlDescription\022 \n\030filterDisplayName"
    "English\030\004 \001(\t\032\264\001\n\013ValuesFloat\022\017\n\007lwrrent"
    "\030\001 \002(\002\022\017\n\007default\030\002 \002(\002\022\017\n\007minimum\030\003 \002(\002"
    "\022\017\n\007maximum\030\004 \002(\002\022\020\n\010stepSize\030\005 \002(\002\022\022\n\ns"
    "tepSizeUi\030\006 \001(\002\022\022\n\nmilwalueUi\030\007 \001(\002\022\022\n\nm"
    "axValueUi\030\010 \001(\002\022\023\n\013displayName\030\t \001(\t\032\262\001\n"
    "\tValuesInt\022\017\n\007lwrrent\030\001 \002(\005\022\017\n\007default\030\002"
    " \002(\005\022\017\n\007minimum\030\003 \002(\005\022\017\n\007maximum\030\004 \002(\005\022\020"
    "\n\010stepSize\030\005 \002(\r\022\022\n\nstepSizeUi\030\006 \001(\r\022\022\n\n"
    "milwalueUi\030\007 \001(\005\022\022\n\nmaxValueUi\030\010 \001(\005\022\023\n\013"
    "displayName\030\t \001(\t\032\263\001\n\lwaluesUInt\022\017\n\007lwrr"
    "ent\030\001 \002(\r\022\017\n\007default\030\002 \002(\r\022\017\n\007minimum\030\003 "
    "\002(\r\022\017\n\007maximum\030\004 \002(\r\022\020\n\010stepSize\030\005 \002(\r\022\022"
    "\n\nstepSizeUi\030\006 \001(\r\022\022\n\nmilwalueUi\030\007 \001(\r\022\022"
    "\n\nmaxValueUi\030\010 \001(\r\022\023\n\013displayName\030\t \001(\t\032"
    "e\n\lwaluesBool\022\017\n\007lwrrent\030\001 \002(\010\022\017\n\007defaul"
    "t\030\002 \002(\010\022\017\n\007minimum\030\003 \002(\010\022\017\n\007maximum\030\004 \002("
    "\010\022\023\n\013displayName\030\005 \001(\t\032\344\003\n\022ControlDescri"
    "ption\022\021\n\tcontrolId\030\001 \002(\005\022\023\n\013displayName\030"
    "\002 \002(\t\022\022\n\nmilwalueUi\030\003 \002(\002\022\022\n\nmaxValueUi\030"
    "\004 \002(\002\022#\n\004type\030\005 \002(\0162\025.AnselIpc.ControlTy"
    "pe\022;\n\013valuesFloat\030\006 \003(\0132&.AnselIpc.Filte"
    "rProperties.ValuesFloat\0229\n\lwaluesBool\030\007 "
    "\003(\0132%.AnselIpc.FilterProperties.ValuesBo"
    "ol\0227\n\tvaluesInt\030\010 \003(\0132$.AnselIpc.FilterP"
    "roperties.ValuesInt\0229\n\lwaluesUInt\030\t \003(\0132"
    "%.AnselIpc.FilterProperties.ValuesUInt\022\023"
    "\n\013uiPrecision\030\n \002(\005\022\031\n\021uiMeasurementUnit"
    "\030\013 \001(\t\022\020\n\010labelsUi\030\014 \003(\t\022\017\n\007tooltip\030\r \001("
    "\t\022\032\n\022displayNameEnglish\030\016 \001(\t\"(\n\024GetFilt"
    "erInfoRequest\022\020\n\010stackIdx\030\001 \002(\005\"\201\001\n\025GetF"
    "ilterInfoResponse\022 \n\006status\030\001 \002(\0162\020.Anse"
    "lIpc.Status\022\020\n\010stackIdx\030\002 \002(\005\0224\n\020filterP"
    "roperties\030\003 \001(\0132\032.AnselIpc.FilterPropert"
    "ies\"\031\n\027IsAnselAvailableRequest\"-\n\030IsAnse"
    "lAvailableResponse\022\021\n\tavailable\030\001 \002(\010\"\236\001"
    "\n\031SetFilterAttributeRequest\022\020\n\010filterId\030"
    "\001 \002(\t\022\020\n\010stackIdx\030\002 \002(\005\022\021\n\tcontrolId\030\003 \002"
    "(\005\022\022\n\nfloatValue\030\004 \003(\002\022\021\n\tboolValue\030\005 \003("
    "\010\022\021\n\tuintValue\030\006 \003(\r\022\020\n\010intValue\030\007 \003(\005\">"
    "\n\032SetFilterAttributeResponse\022 \n\006status\030\001"
    " \002(\0162\020.AnselIpc.Status\"k\n\021MouseEventRequ"
    "est\022\021\n\tabsoluteX\030\001 \001(\002\022\021\n\tabsoluteY\030\002 \001("
    "\002\022\016\n\006deltaX\030\003 \001(\002\022\016\n\006deltaY\030\004 \001(\002\022\020\n\010key"
    "State\030\005 \002(\005\"C\n\024KeyboardEventRequest\022\013\n\003k"
    "ey\030\001 \002(\005\022\036\n\005state\030\002 \002(\0162\017.AnselIpc.State"
    "\"\366\001\n\021InputEventRequest\022\017\n\007message\030\001 \002(\005\022"
    "\016\n\006wParam\030\002 \002(\005\022\016\n\006lParam\030\003 \002(\005\022\025\n\risDel"
    "taCoords\030\004 \001(\010\022\027\n\017leftStickXValue\030\005 \001(\002\022"
    "\027\n\017leftStickYValue\030\006 \001(\002\022\030\n\020rightStickXV"
    "alue\030\007 \001(\002\022\030\n\020rightStickYValue\030\010 \001(\002\022\030\n\020"
    "leftTriggerValue\030\t \001(\002\022\031\n\021rightTriggerVa"
    "lue\030\n \001(\002\"6\n\022InputEventResponse\022 \n\006statu"
    "s\030\001 \002(\0162\020.AnselIpc.Status\"M\n\031MultipleInp"
    "utEventRequest\0220\n\013inputEvents\030\001 \003(\0132\033.An"
    "selIpc.InputEventRequest\"\'\n\023LogFilenameR"
    "esponse\022\020\n\010filename\030\001 \002(\t\"v\n\023ReportError"
    "Response\022!\n\004type\030\001 \002(\0162\023.AnselIpc.ErrorT"
    "ype\022\014\n\004code\030\002 \002(\r\022\020\n\010filename\030\003 \002(\t\022\014\n\004l"
    "ine\030\004 \002(\r\022\016\n\006reason\030\005 \002(\t\"(\n\025SetHighQual"
    "ityRequest\022\017\n\007setting\030\001 \002(\010\":\n\026SetHighQu"
    "alityResponse\022 \n\006status\030\001 \002(\0162\020.AnselIpc"
    ".Status\"\222!\n\017AnselIPCRequest\022B\n\026setAnselE"
    "nabledRequest\030\001 \001(\0132 .AnselIpc.SetAnselE"
    "nabledRequestH\000\022:\n\022captureShotRequest\030\002 "
    "\001(\0132\034.AnselIpc.CaptureShotRequestH\000\022>\n\024g"
    "etFilterListRequest\030\003 \001(\0132\036.AnselIpc.Get"
    "FilterListRequestH\000\022T\n\037getHighresResolut"
    "ionListRequest\030\004 \001(\0132).AnselIpc.GetHighr"
    "esResolutionListRequestH\000\022<\n\023abortCaptur"
    "eRequest\030\005 \001(\0132\035.AnselIpc.AbortCaptureRe"
    "questH\000\022N\n\034get360ResolutionRangeRequest\030"
    "\006 \001(\0132&.AnselIpc.Get360ResolutionRangeRe"
    "questH\000\022:\n\022getFOVRangeRequest\030\007 \001(\0132\034.An"
    "selIpc.GetFOVRangeRequestH\000\0220\n\rsetFOVReq"
    "uest\030\010 \001(\0132\027.AnselIpc.SetFOVRequestH\000\022<\n"
    "\023getRollRangeRequest\030\t \001(\0132\035.AnselIpc.Ge"
    "tRollRangeRequestH\000\0222\n\016setRollRequest\030\n "
    "\001(\0132\030.AnselIpc.SetRollRequestH\000\022B\n\026getAn"
    "selEnabledRequest\030\013 \001(\0132 .AnselIpc.GetAn"
    "selEnabledRequestH\000\022>\n\024getLwrrentFOVRequ"
    "est\030\014 \001(\0132\036.AnselIpc.GetLwrrentFOVReques"
    "tH\000\0226\n\020setFilterRequest\030\r \001(\0132\032.AnselIpc"
    ".SetFilterRequestH\000\022H\n\031setFilterAttribut"
    "eRequest\030\016 \001(\0132#.AnselIpc.SetFilterAttri"
    "buteRequestH\000\022D\n\027isAnselAvailableRequest"
    "\030\021 \001(\0132!.AnselIpc.IsAnselAvailableReques"
    "tH\000\022R\n\036screenResolutionChangedRequest\030\022 "
    "\001(\0132(.AnselIpc.ScreenResolutionChangedRe"
    "questH\000\022R\n\036getAnselShotPermissionsReques"
    "t\030\023 \001(\0132(.AnselIpc.GetAnselShotPermissio"
    "nsRequestH\000\0228\n\021inputEventRequest\030\024 \001(\0132\033"
    ".AnselIpc.InputEventRequestH\000\0226\n\020setLang"
    "IdRequest\030\025 \001(\0132\032.AnselIpc.SetLangIdRequ"
    "estH\000\022>\n\024getFilterInfoRequest\030\026 \001(\0132\036.An"
    "selIpc.GetFilterInfoRequestH\000\022F\n\030resetFi"
    "lterValuesRequest\030\027 \001(\0132\".AnselIpc.Reset"
    "FilterValuesRequestH\000\022L\n\033resetAllFilterV"
    "aluesRequest\030\030 \001(\0132%.AnselIpc.ResetAllFi"
    "lterValuesRequestH\000\022`\n%isAnselSDKIntegra"
    "tionAvailableRequest\030\031 \001(\0132/.AnselIpc.Is"
    "AnselSDKIntegrationAvailableRequestH\000\0228\n"
    "\021ipcVersionRequest\030\032 \001(\0132\033.AnselIpc.IpcV"
    "ersionRequestH\000\022<\n\023addUIElementRequest\030\033"
    " \001(\0132\035.AnselIpc.AddUIElementRequestH\000\0222\n"
    "\016uiReadyRequest\030\034 \001(\0132\030.AnselIpc.UIReady"
    "RequestH\000\022D\n\027uiControlChangedRequest\030\035 \001"
    "(\0132!.AnselIpc.UIControlChangedRequestH\000\022"
    "B\n\026uiControlRemoveRequest\030\036 \001(\0132 .AnselI"
    "pc.UIControlRemoveRequestH\000\022P\n\035uiControl"
    "SetVisibilityRequest\030\037 \001(\0132\'.AnselIpc.UI"
    "ControlSetVisibilityRequestH\000\022P\n\035uiContr"
    "olGetVisibilityRequest\030  \001(\0132\'.AnselIpc."
    "UIControlGetVisibilityRequestH\000\022@\n\025getPr"
    "ocessInfoRequest\030! \001(\0132\037.AnselIpc.GetPro"
    "cessInfoRequestH\000\022J\n\032getScreenResolution"
    "Request\030\" \001(\0132$.AnselIpc.GetScreenResolu"
    "tionRequestH\000\022R\n\036isAnselModdingAvailable"
    "Request\030# \001(\0132(.AnselIpc.IsAnselModdingA"
    "vailableRequestH\000\022P\n\035setGridOfThirdsEnab"
    "ledRequest\030$ \001(\0132\'.AnselIpc.SetGridOfThi"
    "rdsEnabledRequestH\000\022D\n\027resetEntireStackR"
    "equest\030% \001(\0132!.AnselIpc.ResetEntireStack"
    "RequestH\000\022>\n\024getFeatureSetRequest\030& \001(\0132"
    "\036.AnselIpc.GetFeatureSetRequestH\000\022R\n\036set"
    "StyleTransferEnabledRequest\030\' \001(\0132(.Anse"
    "lIpc.SetStyleTransferEnabledRequestH\000\022N\n"
    "\034setStyleTransferStyleRequest\030( \001(\0132&.An"
    "selIpc.SetStyleTransferStyleRequestH\000\022V\n"
    " getStyleTransferModelListRequest\030) \001(\0132"
    "*.AnselIpc.GetStyleTransferModelListRequ"
    "estH\000\022N\n\034setStyleTransferModelRequest\030* "
    "\001(\0132&.AnselIpc.SetStyleTransferModelRequ"
    "estH\000\022J\n\032styleTransferStatusRequest\030+ \001("
    "\0132$.AnselIpc.StyleTransferStatusRequestH"
    "\000\022<\n\023insertFilterRequest\030, \001(\0132\035.AnselIp"
    "c.InsertFilterRequestH\000\022<\n\023removeFilterR"
    "equest\030- \001(\0132\035.AnselIpc.RemoveFilterRequ"
    "estH\000\0228\n\021moveFilterRequest\030. \001(\0132\033.Ansel"
    "Ipc.MoveFilterRequestH\000\022<\n\023getStackInfoR"
    "equest\030/ \001(\0132\035.AnselIpc.GetStackInfoRequ"
    "estH\000\022B\n\026estimateCaptureRequest\0300 \001(\0132 ."
    "AnselIpc.EstimateCaptureRequestH\000\022H\n\031uiC"
    "ontrolRemoveAllRequest\0301 \001(\0132#.AnselIpc."
    "UIControlRemoveAllRequestH\000\022:\n\022getSettin"
    "gsRequest\0302 \001(\0132\034.AnselIpc.GetSettingsRe"
    "questH\000\022F\n\030anselStatusReportRequest\0303 \001("
    "\0132\".AnselIpc.AnselStatusReportRequestH\000\022"
    "Z\n\"styleTransferSideloadChoiceRequest\0304 "
    "\001(\0132,.AnselIpc.StyleTransferSideloadChoi"
    "ceRequestH\000\022^\n$styleTransferSideloadProg"
    "ressRequest\0305 \001(\0132..AnselIpc.StyleTransf"
    "erSideloadProgressRequestH\000\0228\n\021updateRol"
    "lRequest\0306 \001(\0132\033.AnselIpc.UpdateRollRequ"
    "estH\000\022R\n\036getGameSpecificControlsRequest\030"
    "7 \001(\0132(.AnselIpc.GetGameSpecificControls"
    "RequestH\000\022L\n\033getEnabledFeatureSetRequest"
    "\0308 \001(\0132%.AnselIpc.GetEnabledFeatureSetRe"
    "questH\000\0226\n\020updateFovRequest\0309 \001(\0132\032.Anse"
    "lIpc.UpdateFovRequestH\000\0228\n\021anselReadyReq"
    "uest\030: \001(\0132\033.AnselIpc.AnselReadyRequestH"
    "\000\022@\n\025setHighQualityRequest\030; \001(\0132\037.Ansel"
    "Ipc.SetHighQualityRequestH\000\022P\n\035setFilter"
    "AndAttributesRequest\030< \001(\0132\'.AnselIpc.Se"
    "tFilterAndAttributesRequestH\000\0228\n\021setCMSI"
    "nfoRequest\030= \001(\0132\033.AnselIpc.SetCMSInfoRe"
    "questH\000\022H\n\031multipleInputEventRequest\030> \001"
    "(\0132#.AnselIpc.MultipleInputEventRequestH"
    "\000B\t\n\007request\"\242#\n\020AnselIPCResponse\022@\n\025get"
    "FilterListResponse\030\001 \001(\0132\037.AnselIpc.GetF"
    "ilterListResponseH\000\022V\n getHighresResolut"
    "ionListResponse\030\002 \001(\0132*.AnselIpc.GetHigh"
    "resResolutionListResponseH\000\022J\n\032captureSh"
    "otStartedResponse\030\003 \001(\0132$.AnselIpc.Captu"
    "reShotStartedResponseH\000\022L\n\033captureShotFi"
    "nishedResponse\030\004 \001(\0132%.AnselIpc.CaptureS"
    "hotFinishedResponseH\000\022`\n%captureShotProc"
    "essingFinishedResponse\030\005 \001(\0132/.AnselIpc."
    "CaptureShotProcessingFinishedResponseH\000\022"
    "P\n\035get360ResolutionRangeResponse\030\006 \001(\0132\'"
    ".AnselIpc.Get360ResolutionRangeResponseH"
    "\000\022<\n\023getFOVRangeResponse\030\007 \001(\0132\035.AnselIp"
    "c.GetFOVRangeResponseH\000\0222\n\016setFOVRespons"
    "e\030\010 \001(\0132\030.AnselIpc.SetFOVResponseH\000\022>\n\024g"
    "etRollRangeResponse\030\t \001(\0132\036.AnselIpc.Get"
    "RollRangeResponseH\000\0224\n\017setRollResponse\030\n"
    " \001(\0132\031.AnselIpc.SetRollResponseH\000\022D\n\027set"
    "AnselEnabledResponse\030\013 \001(\0132!.AnselIpc.Se"
    "tAnselEnabledResponseH\000\022>\n\024abortCaptureR"
    "esponse\030\014 \001(\0132\036.AnselIpc.AbortCaptureRes"
    "ponseH\000\022D\n\027getAnselEnabledResponse\030\r \001(\013"
    "2!.AnselIpc.GetAnselEnabledResponseH\000\022@\n"
    "\025getLwrrentFOVResponse\030\016 \001(\0132\037.AnselIpc."
    "GetLwrrentFOVResponseH\000\022L\n\033captureShotPr"
    "ogressResponse\030\017 \001(\0132%.AnselIpc.CaptureS"
    "hotProgressResponseH\000\022<\n\023logFilenameResp"
    "onse\030\020 \001(\0132\035.AnselIpc.LogFilenameRespons"
    "eH\000\0228\n\021setFilterResponse\030\021 \001(\0132\033.AnselIp"
    "c.SetFilterResponseH\000\022J\n\032setFilterAttrib"
    "uteResponse\030\022 \001(\0132$.AnselIpc.SetFilterAt"
    "tributeResponseH\000\022F\n\030isAnselAvailableRes"
    "ponse\030\023 \001(\0132\".AnselIpc.IsAnselAvailableR"
    "esponseH\000\022T\n\037screenResolutionChangedResp"
    "onse\030\024 \001(\0132).AnselIpc.ScreenResolutionCh"
    "angedResponseH\000\022T\n\037getAnselShotPermissio"
    "nsResponse\030\025 \001(\0132).AnselIpc.GetAnselShot"
    "PermissionsResponseH\000\022:\n\022inputEventRespo"
    "nse\030\026 \001(\0132\034.AnselIpc.InputEventResponseH"
    "\000\0228\n\021setLangIdResponse\030\027 \001(\0132\033.AnselIpc."
    "SetLangIdResponseH\000\022@\n\025getFilterInfoResp"
    "onse\030\030 \001(\0132\037.AnselIpc.GetFilterInfoRespo"
    "nseH\000\022H\n\031resetFilterValuesResponse\030\031 \001(\013"
    "2#.AnselIpc.ResetFilterValuesResponseH\000\022"
    "b\n&isAnselSDKIntegrationAvailableRespons"
    "e\030\032 \001(\01320.AnselIpc.IsAnselSDKIntegration"
    "AvailableResponseH\000\022:\n\022ipcVersionRespons"
    "e\030\033 \001(\0132\034.AnselIpc.IpcVersionResponseH\000\022"
    ">\n\024addUIElementResponse\030\034 \001(\0132\036.AnselIpc"
    ".AddUIElementResponseH\000\0224\n\017uiReadyRespon"
    "se\030\035 \001(\0132\031.AnselIpc.UIReadyResponseH\000\022F\n"
    "\030uiControlChangedResponse\030\036 \001(\0132\".AnselI"
    "pc.UIControlChangedResponseH\000\022D\n\027uiContr"
    "olRemoveResponse\030\037 \001(\0132!.AnselIpc.UICont"
    "rolRemoveResponseH\000\022R\n\036uiControlSetVisib"
    "ilityResponse\030  \001(\0132(.AnselIpc.UIControl"
    "SetVisibilityResponseH\000\022R\n\036uiControlGetV"
    "isibilityResponse\030! \001(\0132(.AnselIpc.UICon"
    "trolGetVisibilityResponseH\000\022B\n\026getProces"
    "sInfoResponse\030\" \001(\0132 .AnselIpc.GetProces"
    "sInfoResponseH\000\022L\n\033getScreenResolutionRe"
    "sponse\030# \001(\0132%.AnselIpc.GetScreenResolut"
    "ionResponseH\000\022T\n\037isAnselModdingAvailable"
    "Response\030$ \001(\0132).AnselIpc.IsAnselModding"
    "AvailableResponseH\000\022R\n\036setGridOfThirdsEn"
    "abledResponse\030% \001(\0132(.AnselIpc.SetGridOf"
    "ThirdsEnabledResponseH\000\022F\n\030resetEntireSt"
    "ackResponse\030& \001(\0132\".AnselIpc.ResetEntire"
    "StackResponseH\000\022@\n\025getFeatureSetResponse"
    "\030\' \001(\0132\037.AnselIpc.GetFeatureSetResponseH"
    "\000\022T\n\037setStyleTransferEnabledResponse\030( \001"
    "(\0132).AnselIpc.SetStyleTransferEnabledRes"
    "ponseH\000\022P\n\035setStyleTransferStyleResponse"
    "\030) \001(\0132\'.AnselIpc.SetStyleTransferStyleR"
    "esponseH\000\022X\n!getStyleTransferModelListRe"
    "sponse\030* \001(\0132+.AnselIpc.GetStyleTransfer"
    "ModelListResponseH\000\022P\n\035setStyleTransferM"
    "odelResponse\030+ \001(\0132\'.AnselIpc.SetStyleTr"
    "ansferModelResponseH\000\022L\n\033styleTransferSt"
    "atusResponse\030, \001(\0132%.AnselIpc.StyleTrans"
    "ferStatusResponseH\000\022:\n\022moveFilterRespons"
    "e\030- \001(\0132\034.AnselIpc.MoveFilterResponseH\000\022"
    ">\n\024getStackInfoResponse\030. \001(\0132\036.AnselIpc"
    ".GetStackInfoResponseH\000\022>\n\024insertFilterR"
    "esponse\030/ \001(\0132\036.AnselIpc.InsertFilterRes"
    "ponseH\000\022>\n\024removeFilterResponse\0300 \001(\0132\036."
    "AnselIpc.RemoveFilterResponseH\000\022<\n\023repor"
    "tErrorResponse\0301 \001(\0132\035.AnselIpc.ReportEr"
    "rorResponseH\000\022D\n\027estimateCaptureResponse"
    "\0302 \001(\0132!.AnselIpc.EstimateCaptureRespons"
    "eH\000\022J\n\032uiControlRemoveAllResponse\0303 \001(\0132"
    "$.AnselIpc.UIControlRemoveAllResponseH\000\022"
    "<\n\023getSettingsResponse\0304 \001(\0132\035.AnselIpc."
    "GetSettingsResponseH\000\022H\n\031anselStatusRepo"
    "rtResponse\0305 \001(\0132#.AnselIpc.AnselStatusR"
    "eportResponseH\000\022\\\n#styleTransferSideload"
    "ChoiceResponse\0306 \001(\0132-.AnselIpc.StyleTra"
    "nsferSideloadChoiceResponseH\000\022`\n%styleTr"
    "ansferSideloadProgressResponse\0307 \001(\0132/.A"
    "nselIpc.StyleTransferSideloadProgressRes"
    "ponseH\000\022:\n\022updateRollResponse\0308 \001(\0132\034.An"
    "selIpc.UpdateRollResponseH\000\022N\n\034getEnable"
    "dFeatureSetResponse\0309 \001(\0132&.AnselIpc.Get"
    "EnabledFeatureSetResponseH\000\0228\n\021updateFov"
    "Response\030: \001(\0132\033.AnselIpc.UpdateFovRespo"
    "nseH\000\022:\n\022anselReadyResponse\030; \001(\0132\034.Anse"
    "lIpc.AnselReadyResponseH\000\022B\n\026setHighQual"
    "ityResponse\030< \001(\0132 .AnselIpc.SetHighQual"
    "ityResponseH\000\022R\n\036setFilterAndAttributesR"
    "esponse\030= \001(\0132(.AnselIpc.SetFilterAndAtt"
    "ributesResponseH\000\022:\n\022setCMSInfoResponse\030"
    "> \001(\0132\034.AnselIpc.SetCMSInfoResponseH\000B\n\n"
    "\010response\"z\n\017AnselIPCMessage\022,\n\007request\030"
    "\001 \001(\0132\031.AnselIpc.AnselIPCRequestH\000\022.\n\010re"
    "sponse\030\002 \001(\0132\032.AnselIpc.AnselIPCResponse"
    "H\000B\t\n\007message*&\n\tErrorType\022\n\n\006kFatal\020\001\022\r"
    "\n\tkNonFatal\020\002*\215\010\n\006Status\022\007\n\003kOk\020\001\022\013\n\007kFa"
    "iled\020\002\022\014\n\010kStarted\020\003\022\022\n\016kFailedToStart\020\004"
    "\022\020\n\014kNoSpaceLeft\020\005\022\025\n\021kPermissionDenied\020"
    "\006\022\023\n\017kIlwalidRequest\020\007\022\024\n\020kFailedToProce"
    "ss\020\010\022\024\n\020kProcessDeclined\020\t\022\023\n\017kAlreadyEn"
    "abled\020\n\022\024\n\020kAlreadyDisabled\020\013\022\017\n\013kOutOfR"
    "ange\020\014\022\017\n\013kAlreadySet\020\r\022\030\n\024kIncompatible"
    "Version\020\016\022\r\n\tkDisabled\020\017\022\014\n\010kOkAnsel\020\020\022\017"
    "\n\013kOkModsOnly\020\021\022\030\n\024kEffectRequiresDepth\020"
    "\022\022\025\n\021kErrorParsingFile\020\023\022\024\n\020kCouldntSave"
    "File\020\024\022\024\n\020kShotWithUISaved\020\025\022\033\n\027kUnableT"
    "oSaveShotWithUI\020\026\022\032\n\026kFailedToFinishCapt"
    "ure\020\027\022)\n%kFailedToSaveShotFailedCreateDi"
    "retory\020\030\022 \n\034kFailedToSaveShotNoSpaceLeft"
    "\020\031\022\030\n\024kProcessingCompleted\020\032\022\035\n\031kNFilesR"
    "emainingToProcess\020\033\022\016\n\nkShotSaved\020\034\022\023\n\017k"
    "ProcessingFile\020\035\022\025\n\021kFailedToSaveShot\020\036\022"
    "\033\n\027kStyleCantStartDownload\020\037\022\025\n\021kStyleDo"
    "wnloading\020 \022\030\n\024kStyleInstallSuccess\020!\022\027\n"
    "\023kStyleInstallFailed\020\"\022\032\n\026kStyleComputeC"
    "apTooLow\020#\022\037\n\033kStyleCouldntLoadLibrestyl"
    "e\020$\022\026\n\022kStyleNoModelFound\020%\022\027\n\023kStyleNot"
    "EnoughVRAM\020&\022\033\n\027kStyleFailedToLoadStyle\020"
    "\'\022(\n$kStyleFailedToInitalizeStyleTransfe"
    "r\020(\022\034\n\030kStyleUnspecifiedNetwork\020)\022\032\n\026kSt"
    "yleUnspecifiedStyle\020*\022\036\n\032kStyleAnselSess"
    "ionRequired\020+*\311\001\n\013ControlType\022\022\n\016kContro"
    "lSlider\020\001\022\023\n\017kControlBoolean\020\002\022\022\n\016kContr"
    "olButton\020\003\022\020\n\014kControlList\020\004\022\020\n\014kControl"
    "Edit\020\005\022\021\n\rkControlLabel\020\006\022\024\n\020kControlPul"
    "ldown\020\007\022\027\n\023kControlColorPicker\020\010\022\027\n\023kCon"
    "trolRadioButton\020\t*#\n\016SideloadChoice\022\010\n\004k"
    "Yes\020\001\022\007\n\003kNo\020\002*\246\001\n\020SideloadProgress\022\031\n\025k"
    "SideloadProgressIdle\020\001\022 \n\034kSideloadProgr"
    "essDownloading\020\002\022\037\n\033kSideloadProgressIns"
    "talling\020\003\022\027\n\023kSideloadProgressOk\020\004\022\033\n\027kS"
    "ideloadProgressFailed\020\005*%\n\005State\022\014\n\010kSta"
    "teUp\020\001\022\016\n\nkStateDown\020\002*k\n\013ShotTypeIPC\022\014\n"
    "\010kRegular\020\000\022\022\n\016kRegularStereo\020\001\022\014\n\010kHigh"
    "res\020\002\022\024\n\020kPanorama360Mono\020\003\022\026\n\022kPanorama"
    "360Stereo\020\004*L\n\017EditAllowedType\022\010\n\004kInt\020\000"
    "\022\t\n\005kUint\020\001\022\n\n\006kFloat\020\002\022\016\n\nkAlphaonly\020\003\022"
    "\010\n\004kAny\020\004*/\n\021ListSelectionType\022\013\n\007kFlyou"
    "t\020\001\022\r\n\tkCombobox\020\002", 22298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ipc.proto", &protobuf_RegisterTypes);
  IpcVersionRequest::default_instance_ = new IpcVersionRequest();
  IpcVersionResponse::default_instance_ = new IpcVersionResponse();
  AnselReadyRequest::default_instance_ = new AnselReadyRequest();
  AnselReadyResponse::default_instance_ = new AnselReadyResponse();
  AnselStatusReportRequest::default_instance_ = new AnselStatusReportRequest();
  AnselStatusReportRequest_OneofOptionalData::default_instance_ = new AnselStatusReportRequest_OneofOptionalData();
  AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_ = new AnselStatusReportRequest_OneofOptionalDataOneofInstance;
  AnselStatusReportResponse::default_instance_ = new AnselStatusReportResponse();
  SetStyleTransferEnabledRequest::default_instance_ = new SetStyleTransferEnabledRequest();
  SetStyleTransferEnabledResponse::default_instance_ = new SetStyleTransferEnabledResponse();
  SetStyleTransferStyleRequest::default_instance_ = new SetStyleTransferStyleRequest();
  SetStyleTransferStyleResponse::default_instance_ = new SetStyleTransferStyleResponse();
  GetStyleTransferModelListRequest::default_instance_ = new GetStyleTransferModelListRequest();
  GetStyleTransferModelListResponse::default_instance_ = new GetStyleTransferModelListResponse();
  GetStyleTransferModelListResponse_ModelDescription::default_instance_ = new GetStyleTransferModelListResponse_ModelDescription();
  SetStyleTransferModelRequest::default_instance_ = new SetStyleTransferModelRequest();
  SetStyleTransferModelResponse::default_instance_ = new SetStyleTransferModelResponse();
  StyleTransferStatusRequest::default_instance_ = new StyleTransferStatusRequest();
  StyleTransferStatusResponse::default_instance_ = new StyleTransferStatusResponse();
  StyleTransferSideloadChoiceRequest::default_instance_ = new StyleTransferSideloadChoiceRequest();
  StyleTransferSideloadChoiceResponse::default_instance_ = new StyleTransferSideloadChoiceResponse();
  StyleTransferSideloadProgressRequest::default_instance_ = new StyleTransferSideloadProgressRequest();
  StyleTransferSideloadProgressResponse::default_instance_ = new StyleTransferSideloadProgressResponse();
  UIReadyRequest::default_instance_ = new UIReadyRequest();
  UIReadyResponse::default_instance_ = new UIReadyResponse();
  UIDescButton::default_instance_ = new UIDescButton();
  UIDescSlider::default_instance_ = new UIDescSlider();
  UIDescEdit::default_instance_ = new UIDescEdit();
  UIDescBoolean::default_instance_ = new UIDescBoolean();
  UIDescLabel::default_instance_ = new UIDescLabel();
  MapFieldEntry::default_instance_ = new MapFieldEntry();
  UIDescList::default_instance_ = new UIDescList();
  UIDescPulldown::default_instance_ = new UIDescPulldown();
  AddUIElementRequest::default_instance_ = new AddUIElementRequest();
  AddUIElementRequest_default_oneof_instance_ = new AddUIElementRequestOneofInstance;
  AddUIElementResponse::default_instance_ = new AddUIElementResponse();
  AddUIElementResponse_default_oneof_instance_ = new AddUIElementResponseOneofInstance;
  UIControlChangedRequest::default_instance_ = new UIControlChangedRequest();
  UIControlChangedRequest_default_oneof_instance_ = new UIControlChangedRequestOneofInstance;
  UIControlChangedResponse::default_instance_ = new UIControlChangedResponse();
  UIControlRemoveAllRequest::default_instance_ = new UIControlRemoveAllRequest();
  UIControlRemoveAllResponse::default_instance_ = new UIControlRemoveAllResponse();
  UIControlRemoveRequest::default_instance_ = new UIControlRemoveRequest();
  UIControlRemoveResponse::default_instance_ = new UIControlRemoveResponse();
  UIControlSetVisibilityRequest::default_instance_ = new UIControlSetVisibilityRequest();
  UIControlSetVisibilityResponse::default_instance_ = new UIControlSetVisibilityResponse();
  UIControlGetVisibilityRequest::default_instance_ = new UIControlGetVisibilityRequest();
  UIControlGetVisibilityResponse::default_instance_ = new UIControlGetVisibilityResponse();
  GetGameSpecificControlsRequest::default_instance_ = new GetGameSpecificControlsRequest();
  GetSettingsRequest::default_instance_ = new GetSettingsRequest();
  GetSettingsResponse::default_instance_ = new GetSettingsResponse();
  GetSettingsResponse_Setting::default_instance_ = new GetSettingsResponse_Setting();
  GetFeatureSetRequest::default_instance_ = new GetFeatureSetRequest();
  GetFeatureSetResponse::default_instance_ = new GetFeatureSetResponse();
  SetCMSInfoRequest::default_instance_ = new SetCMSInfoRequest();
  SetCMSInfoResponse::default_instance_ = new SetCMSInfoResponse();
  GetEnabledFeatureSetRequest::default_instance_ = new GetEnabledFeatureSetRequest();
  GetEnabledFeatureSetResponse::default_instance_ = new GetEnabledFeatureSetResponse();
  IsAnselModdingAvailableRequest::default_instance_ = new IsAnselModdingAvailableRequest();
  IsAnselModdingAvailableResponse::default_instance_ = new IsAnselModdingAvailableResponse();
  IsAnselSDKIntegrationAvailableRequest::default_instance_ = new IsAnselSDKIntegrationAvailableRequest();
  IsAnselSDKIntegrationAvailableResponse::default_instance_ = new IsAnselSDKIntegrationAvailableResponse();
  ScreenResolutionChangedRequest::default_instance_ = new ScreenResolutionChangedRequest();
  ScreenResolutionChangedResponse::default_instance_ = new ScreenResolutionChangedResponse();
  SetGridOfThirdsEnabledRequest::default_instance_ = new SetGridOfThirdsEnabledRequest();
  SetGridOfThirdsEnabledResponse::default_instance_ = new SetGridOfThirdsEnabledResponse();
  GetProcessInfoRequest::default_instance_ = new GetProcessInfoRequest();
  GetProcessInfoResponse::default_instance_ = new GetProcessInfoResponse();
  SetAnselEnabledRequest::default_instance_ = new SetAnselEnabledRequest();
  SetAnselEnabledResponse::default_instance_ = new SetAnselEnabledResponse();
  GetAnselEnabledRequest::default_instance_ = new GetAnselEnabledRequest();
  GetAnselEnabledResponse::default_instance_ = new GetAnselEnabledResponse();
  GetAnselShotPermissionsRequest::default_instance_ = new GetAnselShotPermissionsRequest();
  GetAnselShotPermissionsResponse::default_instance_ = new GetAnselShotPermissionsResponse();
  SetLangIdRequest::default_instance_ = new SetLangIdRequest();
  SetLangIdResponse::default_instance_ = new SetLangIdResponse();
  GetFOVRangeRequest::default_instance_ = new GetFOVRangeRequest();
  GetFOVRangeResponse::default_instance_ = new GetFOVRangeResponse();
  SetFOVRequest::default_instance_ = new SetFOVRequest();
  SetFOVResponse::default_instance_ = new SetFOVResponse();
  GetLwrrentFOVRequest::default_instance_ = new GetLwrrentFOVRequest();
  GetLwrrentFOVResponse::default_instance_ = new GetLwrrentFOVResponse();
  GetRollRangeRequest::default_instance_ = new GetRollRangeRequest();
  GetRollRangeResponse::default_instance_ = new GetRollRangeResponse();
  SetRollRequest::default_instance_ = new SetRollRequest();
  SetRollResponse::default_instance_ = new SetRollResponse();
  UpdateRollRequest::default_instance_ = new UpdateRollRequest();
  UpdateRollResponse::default_instance_ = new UpdateRollResponse();
  UpdateFovRequest::default_instance_ = new UpdateFovRequest();
  UpdateFovResponse::default_instance_ = new UpdateFovResponse();
  GetScreenResolutionRequest::default_instance_ = new GetScreenResolutionRequest();
  GetScreenResolutionResponse::default_instance_ = new GetScreenResolutionResponse();
  CaptureShotRequest::default_instance_ = new CaptureShotRequest();
  CaptureShotStartedResponse::default_instance_ = new CaptureShotStartedResponse();
  CaptureShotProgressResponse::default_instance_ = new CaptureShotProgressResponse();
  CaptureShotFinishedResponse::default_instance_ = new CaptureShotFinishedResponse();
  CaptureShotProcessingFinishedResponse::default_instance_ = new CaptureShotProcessingFinishedResponse();
  EstimateCaptureRequest::default_instance_ = new EstimateCaptureRequest();
  EstimateCaptureResponse::default_instance_ = new EstimateCaptureResponse();
  AbortCaptureRequest::default_instance_ = new AbortCaptureRequest();
  AbortCaptureResponse::default_instance_ = new AbortCaptureResponse();
  GetHighresResolutionListRequest::default_instance_ = new GetHighresResolutionListRequest();
  GetHighresResolutionListResponse::default_instance_ = new GetHighresResolutionListResponse();
  GetHighresResolutionListResponse_HighresResolution::default_instance_ = new GetHighresResolutionListResponse_HighresResolution();
  Get360ResolutionRangeRequest::default_instance_ = new Get360ResolutionRangeRequest();
  Get360ResolutionRangeResponse::default_instance_ = new Get360ResolutionRangeResponse();
  GetFilterListRequest::default_instance_ = new GetFilterListRequest();
  GetFilterListResponse::default_instance_ = new GetFilterListResponse();
  ResetEntireStackRequest::default_instance_ = new ResetEntireStackRequest();
  ResetEntireStackResponse::default_instance_ = new ResetEntireStackResponse();
  ResetFilterValuesRequest::default_instance_ = new ResetFilterValuesRequest();
  ResetFilterValuesResponse::default_instance_ = new ResetFilterValuesResponse();
  ResetAllFilterValuesRequest::default_instance_ = new ResetAllFilterValuesRequest();
  SetFilterRequest::default_instance_ = new SetFilterRequest();
  SetFilterResponse::default_instance_ = new SetFilterResponse();
  SetFilterAndAttributesRequest::default_instance_ = new SetFilterAndAttributesRequest();
  SetFilterAndAttributesResponse::default_instance_ = new SetFilterAndAttributesResponse();
  InsertFilterRequest::default_instance_ = new InsertFilterRequest();
  InsertFilterResponse::default_instance_ = new InsertFilterResponse();
  RemoveFilterRequest::default_instance_ = new RemoveFilterRequest();
  RemoveFilterResponse::default_instance_ = new RemoveFilterResponse();
  MoveFilterRequest::default_instance_ = new MoveFilterRequest();
  MoveFilterResponse::default_instance_ = new MoveFilterResponse();
  GetStackInfoRequest::default_instance_ = new GetStackInfoRequest();
  GetStackInfoResponse::default_instance_ = new GetStackInfoResponse();
  FilterProperties::default_instance_ = new FilterProperties();
  FilterProperties_ValuesFloat::default_instance_ = new FilterProperties_ValuesFloat();
  FilterProperties_ValuesInt::default_instance_ = new FilterProperties_ValuesInt();
  FilterProperties_ValuesUInt::default_instance_ = new FilterProperties_ValuesUInt();
  FilterProperties_ValuesBool::default_instance_ = new FilterProperties_ValuesBool();
  FilterProperties_ControlDescription::default_instance_ = new FilterProperties_ControlDescription();
  GetFilterInfoRequest::default_instance_ = new GetFilterInfoRequest();
  GetFilterInfoResponse::default_instance_ = new GetFilterInfoResponse();
  IsAnselAvailableRequest::default_instance_ = new IsAnselAvailableRequest();
  IsAnselAvailableResponse::default_instance_ = new IsAnselAvailableResponse();
  SetFilterAttributeRequest::default_instance_ = new SetFilterAttributeRequest();
  SetFilterAttributeResponse::default_instance_ = new SetFilterAttributeResponse();
  MouseEventRequest::default_instance_ = new MouseEventRequest();
  KeyboardEventRequest::default_instance_ = new KeyboardEventRequest();
  InputEventRequest::default_instance_ = new InputEventRequest();
  InputEventResponse::default_instance_ = new InputEventResponse();
  MultipleInputEventRequest::default_instance_ = new MultipleInputEventRequest();
  LogFilenameResponse::default_instance_ = new LogFilenameResponse();
  ReportErrorResponse::default_instance_ = new ReportErrorResponse();
  SetHighQualityRequest::default_instance_ = new SetHighQualityRequest();
  SetHighQualityResponse::default_instance_ = new SetHighQualityResponse();
  AnselIPCRequest::default_instance_ = new AnselIPCRequest();
  AnselIPCRequest_default_oneof_instance_ = new AnselIPCRequestOneofInstance;
  AnselIPCResponse::default_instance_ = new AnselIPCResponse();
  AnselIPCResponse_default_oneof_instance_ = new AnselIPCResponseOneofInstance;
  AnselIPCMessage::default_instance_ = new AnselIPCMessage();
  AnselIPCMessage_default_oneof_instance_ = new AnselIPCMessageOneofInstance;
  IpcVersionRequest::default_instance_->InitAsDefaultInstance();
  IpcVersionResponse::default_instance_->InitAsDefaultInstance();
  AnselReadyRequest::default_instance_->InitAsDefaultInstance();
  AnselReadyResponse::default_instance_->InitAsDefaultInstance();
  AnselStatusReportRequest::default_instance_->InitAsDefaultInstance();
  AnselStatusReportRequest_OneofOptionalData::default_instance_->InitAsDefaultInstance();
  AnselStatusReportResponse::default_instance_->InitAsDefaultInstance();
  SetStyleTransferEnabledRequest::default_instance_->InitAsDefaultInstance();
  SetStyleTransferEnabledResponse::default_instance_->InitAsDefaultInstance();
  SetStyleTransferStyleRequest::default_instance_->InitAsDefaultInstance();
  SetStyleTransferStyleResponse::default_instance_->InitAsDefaultInstance();
  GetStyleTransferModelListRequest::default_instance_->InitAsDefaultInstance();
  GetStyleTransferModelListResponse::default_instance_->InitAsDefaultInstance();
  GetStyleTransferModelListResponse_ModelDescription::default_instance_->InitAsDefaultInstance();
  SetStyleTransferModelRequest::default_instance_->InitAsDefaultInstance();
  SetStyleTransferModelResponse::default_instance_->InitAsDefaultInstance();
  StyleTransferStatusRequest::default_instance_->InitAsDefaultInstance();
  StyleTransferStatusResponse::default_instance_->InitAsDefaultInstance();
  StyleTransferSideloadChoiceRequest::default_instance_->InitAsDefaultInstance();
  StyleTransferSideloadChoiceResponse::default_instance_->InitAsDefaultInstance();
  StyleTransferSideloadProgressRequest::default_instance_->InitAsDefaultInstance();
  StyleTransferSideloadProgressResponse::default_instance_->InitAsDefaultInstance();
  UIReadyRequest::default_instance_->InitAsDefaultInstance();
  UIReadyResponse::default_instance_->InitAsDefaultInstance();
  UIDescButton::default_instance_->InitAsDefaultInstance();
  UIDescSlider::default_instance_->InitAsDefaultInstance();
  UIDescEdit::default_instance_->InitAsDefaultInstance();
  UIDescBoolean::default_instance_->InitAsDefaultInstance();
  UIDescLabel::default_instance_->InitAsDefaultInstance();
  MapFieldEntry::default_instance_->InitAsDefaultInstance();
  UIDescList::default_instance_->InitAsDefaultInstance();
  UIDescPulldown::default_instance_->InitAsDefaultInstance();
  AddUIElementRequest::default_instance_->InitAsDefaultInstance();
  AddUIElementResponse::default_instance_->InitAsDefaultInstance();
  UIControlChangedRequest::default_instance_->InitAsDefaultInstance();
  UIControlChangedResponse::default_instance_->InitAsDefaultInstance();
  UIControlRemoveAllRequest::default_instance_->InitAsDefaultInstance();
  UIControlRemoveAllResponse::default_instance_->InitAsDefaultInstance();
  UIControlRemoveRequest::default_instance_->InitAsDefaultInstance();
  UIControlRemoveResponse::default_instance_->InitAsDefaultInstance();
  UIControlSetVisibilityRequest::default_instance_->InitAsDefaultInstance();
  UIControlSetVisibilityResponse::default_instance_->InitAsDefaultInstance();
  UIControlGetVisibilityRequest::default_instance_->InitAsDefaultInstance();
  UIControlGetVisibilityResponse::default_instance_->InitAsDefaultInstance();
  GetGameSpecificControlsRequest::default_instance_->InitAsDefaultInstance();
  GetSettingsRequest::default_instance_->InitAsDefaultInstance();
  GetSettingsResponse::default_instance_->InitAsDefaultInstance();
  GetSettingsResponse_Setting::default_instance_->InitAsDefaultInstance();
  GetFeatureSetRequest::default_instance_->InitAsDefaultInstance();
  GetFeatureSetResponse::default_instance_->InitAsDefaultInstance();
  SetCMSInfoRequest::default_instance_->InitAsDefaultInstance();
  SetCMSInfoResponse::default_instance_->InitAsDefaultInstance();
  GetEnabledFeatureSetRequest::default_instance_->InitAsDefaultInstance();
  GetEnabledFeatureSetResponse::default_instance_->InitAsDefaultInstance();
  IsAnselModdingAvailableRequest::default_instance_->InitAsDefaultInstance();
  IsAnselModdingAvailableResponse::default_instance_->InitAsDefaultInstance();
  IsAnselSDKIntegrationAvailableRequest::default_instance_->InitAsDefaultInstance();
  IsAnselSDKIntegrationAvailableResponse::default_instance_->InitAsDefaultInstance();
  ScreenResolutionChangedRequest::default_instance_->InitAsDefaultInstance();
  ScreenResolutionChangedResponse::default_instance_->InitAsDefaultInstance();
  SetGridOfThirdsEnabledRequest::default_instance_->InitAsDefaultInstance();
  SetGridOfThirdsEnabledResponse::default_instance_->InitAsDefaultInstance();
  GetProcessInfoRequest::default_instance_->InitAsDefaultInstance();
  GetProcessInfoResponse::default_instance_->InitAsDefaultInstance();
  SetAnselEnabledRequest::default_instance_->InitAsDefaultInstance();
  SetAnselEnabledResponse::default_instance_->InitAsDefaultInstance();
  GetAnselEnabledRequest::default_instance_->InitAsDefaultInstance();
  GetAnselEnabledResponse::default_instance_->InitAsDefaultInstance();
  GetAnselShotPermissionsRequest::default_instance_->InitAsDefaultInstance();
  GetAnselShotPermissionsResponse::default_instance_->InitAsDefaultInstance();
  SetLangIdRequest::default_instance_->InitAsDefaultInstance();
  SetLangIdResponse::default_instance_->InitAsDefaultInstance();
  GetFOVRangeRequest::default_instance_->InitAsDefaultInstance();
  GetFOVRangeResponse::default_instance_->InitAsDefaultInstance();
  SetFOVRequest::default_instance_->InitAsDefaultInstance();
  SetFOVResponse::default_instance_->InitAsDefaultInstance();
  GetLwrrentFOVRequest::default_instance_->InitAsDefaultInstance();
  GetLwrrentFOVResponse::default_instance_->InitAsDefaultInstance();
  GetRollRangeRequest::default_instance_->InitAsDefaultInstance();
  GetRollRangeResponse::default_instance_->InitAsDefaultInstance();
  SetRollRequest::default_instance_->InitAsDefaultInstance();
  SetRollResponse::default_instance_->InitAsDefaultInstance();
  UpdateRollRequest::default_instance_->InitAsDefaultInstance();
  UpdateRollResponse::default_instance_->InitAsDefaultInstance();
  UpdateFovRequest::default_instance_->InitAsDefaultInstance();
  UpdateFovResponse::default_instance_->InitAsDefaultInstance();
  GetScreenResolutionRequest::default_instance_->InitAsDefaultInstance();
  GetScreenResolutionResponse::default_instance_->InitAsDefaultInstance();
  CaptureShotRequest::default_instance_->InitAsDefaultInstance();
  CaptureShotStartedResponse::default_instance_->InitAsDefaultInstance();
  CaptureShotProgressResponse::default_instance_->InitAsDefaultInstance();
  CaptureShotFinishedResponse::default_instance_->InitAsDefaultInstance();
  CaptureShotProcessingFinishedResponse::default_instance_->InitAsDefaultInstance();
  EstimateCaptureRequest::default_instance_->InitAsDefaultInstance();
  EstimateCaptureResponse::default_instance_->InitAsDefaultInstance();
  AbortCaptureRequest::default_instance_->InitAsDefaultInstance();
  AbortCaptureResponse::default_instance_->InitAsDefaultInstance();
  GetHighresResolutionListRequest::default_instance_->InitAsDefaultInstance();
  GetHighresResolutionListResponse::default_instance_->InitAsDefaultInstance();
  GetHighresResolutionListResponse_HighresResolution::default_instance_->InitAsDefaultInstance();
  Get360ResolutionRangeRequest::default_instance_->InitAsDefaultInstance();
  Get360ResolutionRangeResponse::default_instance_->InitAsDefaultInstance();
  GetFilterListRequest::default_instance_->InitAsDefaultInstance();
  GetFilterListResponse::default_instance_->InitAsDefaultInstance();
  ResetEntireStackRequest::default_instance_->InitAsDefaultInstance();
  ResetEntireStackResponse::default_instance_->InitAsDefaultInstance();
  ResetFilterValuesRequest::default_instance_->InitAsDefaultInstance();
  ResetFilterValuesResponse::default_instance_->InitAsDefaultInstance();
  ResetAllFilterValuesRequest::default_instance_->InitAsDefaultInstance();
  SetFilterRequest::default_instance_->InitAsDefaultInstance();
  SetFilterResponse::default_instance_->InitAsDefaultInstance();
  SetFilterAndAttributesRequest::default_instance_->InitAsDefaultInstance();
  SetFilterAndAttributesResponse::default_instance_->InitAsDefaultInstance();
  InsertFilterRequest::default_instance_->InitAsDefaultInstance();
  InsertFilterResponse::default_instance_->InitAsDefaultInstance();
  RemoveFilterRequest::default_instance_->InitAsDefaultInstance();
  RemoveFilterResponse::default_instance_->InitAsDefaultInstance();
  MoveFilterRequest::default_instance_->InitAsDefaultInstance();
  MoveFilterResponse::default_instance_->InitAsDefaultInstance();
  GetStackInfoRequest::default_instance_->InitAsDefaultInstance();
  GetStackInfoResponse::default_instance_->InitAsDefaultInstance();
  FilterProperties::default_instance_->InitAsDefaultInstance();
  FilterProperties_ValuesFloat::default_instance_->InitAsDefaultInstance();
  FilterProperties_ValuesInt::default_instance_->InitAsDefaultInstance();
  FilterProperties_ValuesUInt::default_instance_->InitAsDefaultInstance();
  FilterProperties_ValuesBool::default_instance_->InitAsDefaultInstance();
  FilterProperties_ControlDescription::default_instance_->InitAsDefaultInstance();
  GetFilterInfoRequest::default_instance_->InitAsDefaultInstance();
  GetFilterInfoResponse::default_instance_->InitAsDefaultInstance();
  IsAnselAvailableRequest::default_instance_->InitAsDefaultInstance();
  IsAnselAvailableResponse::default_instance_->InitAsDefaultInstance();
  SetFilterAttributeRequest::default_instance_->InitAsDefaultInstance();
  SetFilterAttributeResponse::default_instance_->InitAsDefaultInstance();
  MouseEventRequest::default_instance_->InitAsDefaultInstance();
  KeyboardEventRequest::default_instance_->InitAsDefaultInstance();
  InputEventRequest::default_instance_->InitAsDefaultInstance();
  InputEventResponse::default_instance_->InitAsDefaultInstance();
  MultipleInputEventRequest::default_instance_->InitAsDefaultInstance();
  LogFilenameResponse::default_instance_->InitAsDefaultInstance();
  ReportErrorResponse::default_instance_->InitAsDefaultInstance();
  SetHighQualityRequest::default_instance_->InitAsDefaultInstance();
  SetHighQualityResponse::default_instance_->InitAsDefaultInstance();
  AnselIPCRequest::default_instance_->InitAsDefaultInstance();
  AnselIPCResponse::default_instance_->InitAsDefaultInstance();
  AnselIPCMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ipc_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ipc_2eproto {
  StaticDescriptorInitializer_ipc_2eproto() {
    protobuf_AddDesc_ipc_2eproto();
  }
} static_descriptor_initializer_ipc_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorType_descriptor_;
}
bool ErrorType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Status_descriptor_;
}
bool Status_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ControlType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlType_descriptor_;
}
bool ControlType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SideloadChoice_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SideloadChoice_descriptor_;
}
bool SideloadChoice_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SideloadProgress_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SideloadProgress_descriptor_;
}
bool SideloadProgress_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* State_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return State_descriptor_;
}
bool State_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ShotTypeIPC_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShotTypeIPC_descriptor_;
}
bool ShotTypeIPC_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EditAllowedType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditAllowedType_descriptor_;
}
bool EditAllowedType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ListSelectionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListSelectionType_descriptor_;
}
bool ListSelectionType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

IpcVersionRequest::IpcVersionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IpcVersionRequest)
}

void IpcVersionRequest::InitAsDefaultInstance() {
}

IpcVersionRequest::IpcVersionRequest(const IpcVersionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IpcVersionRequest)
}

void IpcVersionRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IpcVersionRequest::~IpcVersionRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.IpcVersionRequest)
  SharedDtor();
}

void IpcVersionRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IpcVersionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpcVersionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IpcVersionRequest_descriptor_;
}

const IpcVersionRequest& IpcVersionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IpcVersionRequest* IpcVersionRequest::default_instance_ = NULL;

IpcVersionRequest* IpcVersionRequest::New() const {
  return new IpcVersionRequest;
}

void IpcVersionRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IpcVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IpcVersionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IpcVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IpcVersionRequest)
  return false;
#undef DO_
}

void IpcVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IpcVersionRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IpcVersionRequest)
}

::google::protobuf::uint8* IpcVersionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IpcVersionRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IpcVersionRequest)
  return target;
}

int IpcVersionRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IpcVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IpcVersionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IpcVersionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IpcVersionRequest::MergeFrom(const IpcVersionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IpcVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IpcVersionRequest::CopyFrom(const IpcVersionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpcVersionRequest::IsInitialized() const {

  return true;
}

void IpcVersionRequest::Swap(IpcVersionRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IpcVersionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IpcVersionRequest_descriptor_;
  metadata.reflection = IpcVersionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IpcVersionResponse::kMajorFieldNumber;
const int IpcVersionResponse::kMinorFieldNumber;
const int IpcVersionResponse::kPatchFieldNumber;
#endif  // !_MSC_VER

IpcVersionResponse::IpcVersionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IpcVersionResponse)
}

void IpcVersionResponse::InitAsDefaultInstance() {
}

IpcVersionResponse::IpcVersionResponse(const IpcVersionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IpcVersionResponse)
}

void IpcVersionResponse::SharedCtor() {
  _cached_size_ = 0;
  major_ = 7u;
  minor_ = 8u;
  patch_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IpcVersionResponse::~IpcVersionResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.IpcVersionResponse)
  SharedDtor();
}

void IpcVersionResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IpcVersionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpcVersionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IpcVersionResponse_descriptor_;
}

const IpcVersionResponse& IpcVersionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IpcVersionResponse* IpcVersionResponse::default_instance_ = NULL;

IpcVersionResponse* IpcVersionResponse::New() const {
  return new IpcVersionResponse;
}

void IpcVersionResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    major_ = 7u;
    minor_ = 8u;
    patch_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IpcVersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IpcVersionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 major = 1 [default = 7];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
          set_has_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_minor;
        break;
      }

      // required uint32 minor = 2 [default = 8];
      case 2: {
        if (tag == 16) {
         parse_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
          set_has_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_patch;
        break;
      }

      // required uint32 patch = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_patch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &patch_)));
          set_has_patch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IpcVersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IpcVersionResponse)
  return false;
#undef DO_
}

void IpcVersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IpcVersionResponse)
  // required uint32 major = 1 [default = 7];
  if (has_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // required uint32 minor = 2 [default = 8];
  if (has_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  // required uint32 patch = 3 [default = 0];
  if (has_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->patch(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IpcVersionResponse)
}

::google::protobuf::uint8* IpcVersionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IpcVersionResponse)
  // required uint32 major = 1 [default = 7];
  if (has_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // required uint32 minor = 2 [default = 8];
  if (has_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  // required uint32 patch = 3 [default = 0];
  if (has_patch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->patch(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IpcVersionResponse)
  return target;
}

int IpcVersionResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 major = 1 [default = 7];
    if (has_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->major());
    }

    // required uint32 minor = 2 [default = 8];
    if (has_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minor());
    }

    // required uint32 patch = 3 [default = 0];
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->patch());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IpcVersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IpcVersionResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IpcVersionResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IpcVersionResponse::MergeFrom(const IpcVersionResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_major()) {
      set_major(from.major());
    }
    if (from.has_minor()) {
      set_minor(from.minor());
    }
    if (from.has_patch()) {
      set_patch(from.patch());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IpcVersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IpcVersionResponse::CopyFrom(const IpcVersionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpcVersionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void IpcVersionResponse::Swap(IpcVersionResponse* other) {
  if (other != this) {
    std::swap(major_, other->major_);
    std::swap(minor_, other->minor_);
    std::swap(patch_, other->patch_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IpcVersionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IpcVersionResponse_descriptor_;
  metadata.reflection = IpcVersionResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselReadyRequest::kCreationCounterFieldNumber;
#endif  // !_MSC_VER

AnselReadyRequest::AnselReadyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselReadyRequest)
}

void AnselReadyRequest::InitAsDefaultInstance() {
}

AnselReadyRequest::AnselReadyRequest(const AnselReadyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselReadyRequest)
}

void AnselReadyRequest::SharedCtor() {
  _cached_size_ = 0;
  creationcounter_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnselReadyRequest::~AnselReadyRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselReadyRequest)
  SharedDtor();
}

void AnselReadyRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnselReadyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselReadyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselReadyRequest_descriptor_;
}

const AnselReadyRequest& AnselReadyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselReadyRequest* AnselReadyRequest::default_instance_ = NULL;

AnselReadyRequest* AnselReadyRequest::New() const {
  return new AnselReadyRequest;
}

void AnselReadyRequest::Clear() {
  creationcounter_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselReadyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselReadyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 creationCounter = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creationcounter_)));
          set_has_creationcounter();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselReadyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselReadyRequest)
  return false;
#undef DO_
}

void AnselReadyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselReadyRequest)
  // required uint32 creationCounter = 1;
  if (has_creationcounter()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->creationcounter(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselReadyRequest)
}

::google::protobuf::uint8* AnselReadyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselReadyRequest)
  // required uint32 creationCounter = 1;
  if (has_creationcounter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->creationcounter(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselReadyRequest)
  return target;
}

int AnselReadyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 creationCounter = 1;
    if (has_creationcounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creationcounter());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselReadyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselReadyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselReadyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselReadyRequest::MergeFrom(const AnselReadyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_creationcounter()) {
      set_creationcounter(from.creationcounter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselReadyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselReadyRequest::CopyFrom(const AnselReadyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselReadyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AnselReadyRequest::Swap(AnselReadyRequest* other) {
  if (other != this) {
    std::swap(creationcounter_, other->creationcounter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselReadyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselReadyRequest_descriptor_;
  metadata.reflection = AnselReadyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselReadyResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

AnselReadyResponse::AnselReadyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselReadyResponse)
}

void AnselReadyResponse::InitAsDefaultInstance() {
}

AnselReadyResponse::AnselReadyResponse(const AnselReadyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselReadyResponse)
}

void AnselReadyResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnselReadyResponse::~AnselReadyResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselReadyResponse)
  SharedDtor();
}

void AnselReadyResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnselReadyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselReadyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselReadyResponse_descriptor_;
}

const AnselReadyResponse& AnselReadyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselReadyResponse* AnselReadyResponse::default_instance_ = NULL;

AnselReadyResponse* AnselReadyResponse::New() const {
  return new AnselReadyResponse;
}

void AnselReadyResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselReadyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselReadyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselReadyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselReadyResponse)
  return false;
#undef DO_
}

void AnselReadyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselReadyResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselReadyResponse)
}

::google::protobuf::uint8* AnselReadyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselReadyResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselReadyResponse)
  return target;
}

int AnselReadyResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselReadyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselReadyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselReadyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselReadyResponse::MergeFrom(const AnselReadyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselReadyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselReadyResponse::CopyFrom(const AnselReadyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselReadyResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AnselReadyResponse::Swap(AnselReadyResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselReadyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselReadyResponse_descriptor_;
  metadata.reflection = AnselReadyResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselStatusReportRequest_OneofOptionalData::kIntegerValueFieldNumber;
const int AnselStatusReportRequest_OneofOptionalData::kStringValueFieldNumber;
const int AnselStatusReportRequest_OneofOptionalData::kFloatValueFieldNumber;
const int AnselStatusReportRequest_OneofOptionalData::kBoolValueFieldNumber;
#endif  // !_MSC_VER

AnselStatusReportRequest_OneofOptionalData::AnselStatusReportRequest_OneofOptionalData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
}

void AnselStatusReportRequest_OneofOptionalData::InitAsDefaultInstance() {
  AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_->integervalue_ = 0;
  AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_->stringvalue_ = &::google::protobuf::internal::GetEmptyStringAlreadyInited();
  AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_->floatvalue_ = 0;
  AnselStatusReportRequest_OneofOptionalData_default_oneof_instance_->boolvalue_ = false;
}

AnselStatusReportRequest_OneofOptionalData::AnselStatusReportRequest_OneofOptionalData(const AnselStatusReportRequest_OneofOptionalData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
}

void AnselStatusReportRequest_OneofOptionalData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_data();
}

AnselStatusReportRequest_OneofOptionalData::~AnselStatusReportRequest_OneofOptionalData() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  SharedDtor();
}

void AnselStatusReportRequest_OneofOptionalData::SharedDtor() {
  if (has_data()) {
    clear_data();
  }
  if (this != default_instance_) {
  }
}

void AnselStatusReportRequest_OneofOptionalData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselStatusReportRequest_OneofOptionalData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselStatusReportRequest_OneofOptionalData_descriptor_;
}

const AnselStatusReportRequest_OneofOptionalData& AnselStatusReportRequest_OneofOptionalData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselStatusReportRequest_OneofOptionalData* AnselStatusReportRequest_OneofOptionalData::default_instance_ = NULL;

AnselStatusReportRequest_OneofOptionalData* AnselStatusReportRequest_OneofOptionalData::New() const {
  return new AnselStatusReportRequest_OneofOptionalData;
}

void AnselStatusReportRequest_OneofOptionalData::clear_data() {
  switch(data_case()) {
    case kIntegerValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      delete data_.stringvalue_;
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void AnselStatusReportRequest_OneofOptionalData::Clear() {
  clear_data();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselStatusReportRequest_OneofOptionalData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 integerValue = 1;
      case 1: {
        if (tag == 8) {
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_.integervalue_)));
          set_has_integervalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stringValue;
        break;
      }

      // optional string stringValue = 2;
      case 2: {
        if (tag == 18) {
         parse_stringValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stringvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stringvalue().data(), this->stringvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "stringvalue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_floatValue;
        break;
      }

      // optional float floatValue = 3;
      case 3: {
        if (tag == 29) {
         parse_floatValue:
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_.floatvalue_)));
          set_has_floatvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_boolValue;
        break;
      }

      // optional bool boolValue = 4;
      case 4: {
        if (tag == 32) {
         parse_boolValue:
          clear_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_.boolvalue_)));
          set_has_boolvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  return false;
#undef DO_
}

void AnselStatusReportRequest_OneofOptionalData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  // optional int32 integerValue = 1;
  if (has_integervalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->integervalue(), output);
  }

  // optional string stringValue = 2;
  if (has_stringvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringvalue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stringvalue(), output);
  }

  // optional float floatValue = 3;
  if (has_floatvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->floatvalue(), output);
  }

  // optional bool boolValue = 4;
  if (has_boolvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->boolvalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
}

::google::protobuf::uint8* AnselStatusReportRequest_OneofOptionalData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  // optional int32 integerValue = 1;
  if (has_integervalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->integervalue(), target);
  }

  // optional string stringValue = 2;
  if (has_stringvalue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stringvalue().data(), this->stringvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "stringvalue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stringvalue(), target);
  }

  // optional float floatValue = 3;
  if (has_floatvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->floatvalue(), target);
  }

  // optional bool boolValue = 4;
  if (has_boolvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->boolvalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselStatusReportRequest.OneofOptionalData)
  return target;
}

int AnselStatusReportRequest_OneofOptionalData::ByteSize() const {
  int total_size = 0;

  switch (data_case()) {
    // optional int32 integerValue = 1;
    case kIntegerValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->integervalue());
      break;
    }
    // optional string stringValue = 2;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stringvalue());
      break;
    }
    // optional float floatValue = 3;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // optional bool boolValue = 4;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselStatusReportRequest_OneofOptionalData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselStatusReportRequest_OneofOptionalData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselStatusReportRequest_OneofOptionalData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselStatusReportRequest_OneofOptionalData::MergeFrom(const AnselStatusReportRequest_OneofOptionalData& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.data_case()) {
    case kIntegerValue: {
      set_integervalue(from.integervalue());
      break;
    }
    case kStringValue: {
      set_stringvalue(from.stringvalue());
      break;
    }
    case kFloatValue: {
      set_floatvalue(from.floatvalue());
      break;
    }
    case kBoolValue: {
      set_boolvalue(from.boolvalue());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselStatusReportRequest_OneofOptionalData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselStatusReportRequest_OneofOptionalData::CopyFrom(const AnselStatusReportRequest_OneofOptionalData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselStatusReportRequest_OneofOptionalData::IsInitialized() const {

  return true;
}

void AnselStatusReportRequest_OneofOptionalData::Swap(AnselStatusReportRequest_OneofOptionalData* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselStatusReportRequest_OneofOptionalData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselStatusReportRequest_OneofOptionalData_descriptor_;
  metadata.reflection = AnselStatusReportRequest_OneofOptionalData_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AnselStatusReportRequest::kStatusFieldNumber;
const int AnselStatusReportRequest::kDataFieldNumber;
#endif  // !_MSC_VER

AnselStatusReportRequest::AnselStatusReportRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselStatusReportRequest)
}

void AnselStatusReportRequest::InitAsDefaultInstance() {
}

AnselStatusReportRequest::AnselStatusReportRequest(const AnselStatusReportRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselStatusReportRequest)
}

void AnselStatusReportRequest::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnselStatusReportRequest::~AnselStatusReportRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselStatusReportRequest)
  SharedDtor();
}

void AnselStatusReportRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnselStatusReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselStatusReportRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselStatusReportRequest_descriptor_;
}

const AnselStatusReportRequest& AnselStatusReportRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselStatusReportRequest* AnselStatusReportRequest::default_instance_ = NULL;

AnselStatusReportRequest* AnselStatusReportRequest::New() const {
  return new AnselStatusReportRequest;
}

void AnselStatusReportRequest::Clear() {
  status_ = 1;
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselStatusReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselStatusReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // repeated .AnselIpc.AnselStatusReportRequest.OneofOptionalData data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselStatusReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselStatusReportRequest)
  return false;
#undef DO_
}

void AnselStatusReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselStatusReportRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // repeated .AnselIpc.AnselStatusReportRequest.OneofOptionalData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselStatusReportRequest)
}

::google::protobuf::uint8* AnselStatusReportRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselStatusReportRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // repeated .AnselIpc.AnselStatusReportRequest.OneofOptionalData data = 2;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselStatusReportRequest)
  return target;
}

int AnselStatusReportRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // repeated .AnselIpc.AnselStatusReportRequest.OneofOptionalData data = 2;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselStatusReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselStatusReportRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselStatusReportRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselStatusReportRequest::MergeFrom(const AnselStatusReportRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselStatusReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselStatusReportRequest::CopyFrom(const AnselStatusReportRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselStatusReportRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AnselStatusReportRequest::Swap(AnselStatusReportRequest* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselStatusReportRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselStatusReportRequest_descriptor_;
  metadata.reflection = AnselStatusReportRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselStatusReportResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

AnselStatusReportResponse::AnselStatusReportResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselStatusReportResponse)
}

void AnselStatusReportResponse::InitAsDefaultInstance() {
}

AnselStatusReportResponse::AnselStatusReportResponse(const AnselStatusReportResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselStatusReportResponse)
}

void AnselStatusReportResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnselStatusReportResponse::~AnselStatusReportResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselStatusReportResponse)
  SharedDtor();
}

void AnselStatusReportResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnselStatusReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselStatusReportResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselStatusReportResponse_descriptor_;
}

const AnselStatusReportResponse& AnselStatusReportResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselStatusReportResponse* AnselStatusReportResponse::default_instance_ = NULL;

AnselStatusReportResponse* AnselStatusReportResponse::New() const {
  return new AnselStatusReportResponse;
}

void AnselStatusReportResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselStatusReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselStatusReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselStatusReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselStatusReportResponse)
  return false;
#undef DO_
}

void AnselStatusReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselStatusReportResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselStatusReportResponse)
}

::google::protobuf::uint8* AnselStatusReportResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselStatusReportResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselStatusReportResponse)
  return target;
}

int AnselStatusReportResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselStatusReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselStatusReportResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselStatusReportResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselStatusReportResponse::MergeFrom(const AnselStatusReportResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselStatusReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselStatusReportResponse::CopyFrom(const AnselStatusReportResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselStatusReportResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AnselStatusReportResponse::Swap(AnselStatusReportResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselStatusReportResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselStatusReportResponse_descriptor_;
  metadata.reflection = AnselStatusReportResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferEnabledRequest::kEnabledFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferEnabledRequest::SetStyleTransferEnabledRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferEnabledRequest)
}

void SetStyleTransferEnabledRequest::InitAsDefaultInstance() {
}

SetStyleTransferEnabledRequest::SetStyleTransferEnabledRequest(const SetStyleTransferEnabledRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferEnabledRequest)
}

void SetStyleTransferEnabledRequest::SharedCtor() {
  _cached_size_ = 0;
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferEnabledRequest::~SetStyleTransferEnabledRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferEnabledRequest)
  SharedDtor();
}

void SetStyleTransferEnabledRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetStyleTransferEnabledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferEnabledRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferEnabledRequest_descriptor_;
}

const SetStyleTransferEnabledRequest& SetStyleTransferEnabledRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferEnabledRequest* SetStyleTransferEnabledRequest::default_instance_ = NULL;

SetStyleTransferEnabledRequest* SetStyleTransferEnabledRequest::New() const {
  return new SetStyleTransferEnabledRequest;
}

void SetStyleTransferEnabledRequest::Clear() {
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferEnabledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferEnabledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool enabled = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
          set_has_enabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferEnabledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferEnabledRequest)
  return false;
#undef DO_
}

void SetStyleTransferEnabledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferEnabledRequest)
  // required bool enabled = 1;
  if (has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferEnabledRequest)
}

::google::protobuf::uint8* SetStyleTransferEnabledRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferEnabledRequest)
  // required bool enabled = 1;
  if (has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferEnabledRequest)
  return target;
}

int SetStyleTransferEnabledRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool enabled = 1;
    if (has_enabled()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferEnabledRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferEnabledRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferEnabledRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferEnabledRequest::MergeFrom(const SetStyleTransferEnabledRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enabled()) {
      set_enabled(from.enabled());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferEnabledRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferEnabledRequest::CopyFrom(const SetStyleTransferEnabledRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferEnabledRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferEnabledRequest::Swap(SetStyleTransferEnabledRequest* other) {
  if (other != this) {
    std::swap(enabled_, other->enabled_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferEnabledRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferEnabledRequest_descriptor_;
  metadata.reflection = SetStyleTransferEnabledRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferEnabledResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferEnabledResponse::SetStyleTransferEnabledResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferEnabledResponse)
}

void SetStyleTransferEnabledResponse::InitAsDefaultInstance() {
}

SetStyleTransferEnabledResponse::SetStyleTransferEnabledResponse(const SetStyleTransferEnabledResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferEnabledResponse)
}

void SetStyleTransferEnabledResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferEnabledResponse::~SetStyleTransferEnabledResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferEnabledResponse)
  SharedDtor();
}

void SetStyleTransferEnabledResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetStyleTransferEnabledResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferEnabledResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferEnabledResponse_descriptor_;
}

const SetStyleTransferEnabledResponse& SetStyleTransferEnabledResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferEnabledResponse* SetStyleTransferEnabledResponse::default_instance_ = NULL;

SetStyleTransferEnabledResponse* SetStyleTransferEnabledResponse::New() const {
  return new SetStyleTransferEnabledResponse;
}

void SetStyleTransferEnabledResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferEnabledResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferEnabledResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferEnabledResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferEnabledResponse)
  return false;
#undef DO_
}

void SetStyleTransferEnabledResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferEnabledResponse)
}

::google::protobuf::uint8* SetStyleTransferEnabledResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferEnabledResponse)
  return target;
}

int SetStyleTransferEnabledResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferEnabledResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferEnabledResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferEnabledResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferEnabledResponse::MergeFrom(const SetStyleTransferEnabledResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferEnabledResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferEnabledResponse::CopyFrom(const SetStyleTransferEnabledResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferEnabledResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferEnabledResponse::Swap(SetStyleTransferEnabledResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferEnabledResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferEnabledResponse_descriptor_;
  metadata.reflection = SetStyleTransferEnabledResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferStyleRequest::kFullyQualifiedPathFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferStyleRequest::SetStyleTransferStyleRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferStyleRequest)
}

void SetStyleTransferStyleRequest::InitAsDefaultInstance() {
}

SetStyleTransferStyleRequest::SetStyleTransferStyleRequest(const SetStyleTransferStyleRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferStyleRequest)
}

void SetStyleTransferStyleRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fullyqualifiedpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferStyleRequest::~SetStyleTransferStyleRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferStyleRequest)
  SharedDtor();
}

void SetStyleTransferStyleRequest::SharedDtor() {
  if (fullyqualifiedpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete fullyqualifiedpath_;
  }
  if (this != default_instance_) {
  }
}

void SetStyleTransferStyleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferStyleRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferStyleRequest_descriptor_;
}

const SetStyleTransferStyleRequest& SetStyleTransferStyleRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferStyleRequest* SetStyleTransferStyleRequest::default_instance_ = NULL;

SetStyleTransferStyleRequest* SetStyleTransferStyleRequest::New() const {
  return new SetStyleTransferStyleRequest;
}

void SetStyleTransferStyleRequest::Clear() {
  if (has_fullyqualifiedpath()) {
    if (fullyqualifiedpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      fullyqualifiedpath_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferStyleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferStyleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string fullyQualifiedPath = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fullyqualifiedpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fullyqualifiedpath().data(), this->fullyqualifiedpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fullyqualifiedpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferStyleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferStyleRequest)
  return false;
#undef DO_
}

void SetStyleTransferStyleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferStyleRequest)
  // required string fullyQualifiedPath = 1;
  if (has_fullyqualifiedpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fullyqualifiedpath().data(), this->fullyqualifiedpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fullyqualifiedpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fullyqualifiedpath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferStyleRequest)
}

::google::protobuf::uint8* SetStyleTransferStyleRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferStyleRequest)
  // required string fullyQualifiedPath = 1;
  if (has_fullyqualifiedpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fullyqualifiedpath().data(), this->fullyqualifiedpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fullyqualifiedpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fullyqualifiedpath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferStyleRequest)
  return target;
}

int SetStyleTransferStyleRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string fullyQualifiedPath = 1;
    if (has_fullyqualifiedpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fullyqualifiedpath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferStyleRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferStyleRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferStyleRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferStyleRequest::MergeFrom(const SetStyleTransferStyleRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fullyqualifiedpath()) {
      set_fullyqualifiedpath(from.fullyqualifiedpath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferStyleRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferStyleRequest::CopyFrom(const SetStyleTransferStyleRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferStyleRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferStyleRequest::Swap(SetStyleTransferStyleRequest* other) {
  if (other != this) {
    std::swap(fullyqualifiedpath_, other->fullyqualifiedpath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferStyleRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferStyleRequest_descriptor_;
  metadata.reflection = SetStyleTransferStyleRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferStyleResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferStyleResponse::SetStyleTransferStyleResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferStyleResponse)
}

void SetStyleTransferStyleResponse::InitAsDefaultInstance() {
}

SetStyleTransferStyleResponse::SetStyleTransferStyleResponse(const SetStyleTransferStyleResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferStyleResponse)
}

void SetStyleTransferStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferStyleResponse::~SetStyleTransferStyleResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferStyleResponse)
  SharedDtor();
}

void SetStyleTransferStyleResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetStyleTransferStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferStyleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferStyleResponse_descriptor_;
}

const SetStyleTransferStyleResponse& SetStyleTransferStyleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferStyleResponse* SetStyleTransferStyleResponse::default_instance_ = NULL;

SetStyleTransferStyleResponse* SetStyleTransferStyleResponse::New() const {
  return new SetStyleTransferStyleResponse;
}

void SetStyleTransferStyleResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferStyleResponse)
  return false;
#undef DO_
}

void SetStyleTransferStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferStyleResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferStyleResponse)
}

::google::protobuf::uint8* SetStyleTransferStyleResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferStyleResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferStyleResponse)
  return target;
}

int SetStyleTransferStyleResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferStyleResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferStyleResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferStyleResponse::MergeFrom(const SetStyleTransferStyleResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferStyleResponse::CopyFrom(const SetStyleTransferStyleResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferStyleResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferStyleResponse::Swap(SetStyleTransferStyleResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferStyleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferStyleResponse_descriptor_;
  metadata.reflection = SetStyleTransferStyleResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetStyleTransferModelListRequest::GetStyleTransferModelListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetStyleTransferModelListRequest)
}

void GetStyleTransferModelListRequest::InitAsDefaultInstance() {
}

GetStyleTransferModelListRequest::GetStyleTransferModelListRequest(const GetStyleTransferModelListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetStyleTransferModelListRequest)
}

void GetStyleTransferModelListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStyleTransferModelListRequest::~GetStyleTransferModelListRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetStyleTransferModelListRequest)
  SharedDtor();
}

void GetStyleTransferModelListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStyleTransferModelListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStyleTransferModelListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStyleTransferModelListRequest_descriptor_;
}

const GetStyleTransferModelListRequest& GetStyleTransferModelListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetStyleTransferModelListRequest* GetStyleTransferModelListRequest::default_instance_ = NULL;

GetStyleTransferModelListRequest* GetStyleTransferModelListRequest::New() const {
  return new GetStyleTransferModelListRequest;
}

void GetStyleTransferModelListRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStyleTransferModelListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetStyleTransferModelListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetStyleTransferModelListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetStyleTransferModelListRequest)
  return false;
#undef DO_
}

void GetStyleTransferModelListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetStyleTransferModelListRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetStyleTransferModelListRequest)
}

::google::protobuf::uint8* GetStyleTransferModelListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetStyleTransferModelListRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetStyleTransferModelListRequest)
  return target;
}

int GetStyleTransferModelListRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetStyleTransferModelListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStyleTransferModelListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStyleTransferModelListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStyleTransferModelListRequest::MergeFrom(const GetStyleTransferModelListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStyleTransferModelListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStyleTransferModelListRequest::CopyFrom(const GetStyleTransferModelListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStyleTransferModelListRequest::IsInitialized() const {

  return true;
}

void GetStyleTransferModelListRequest::Swap(GetStyleTransferModelListRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStyleTransferModelListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStyleTransferModelListRequest_descriptor_;
  metadata.reflection = GetStyleTransferModelListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetStyleTransferModelListResponse_ModelDescription::kIdFieldNumber;
const int GetStyleTransferModelListResponse_ModelDescription::kLocalizedNameFieldNumber;
#endif  // !_MSC_VER

GetStyleTransferModelListResponse_ModelDescription::GetStyleTransferModelListResponse_ModelDescription()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
}

void GetStyleTransferModelListResponse_ModelDescription::InitAsDefaultInstance() {
}

GetStyleTransferModelListResponse_ModelDescription::GetStyleTransferModelListResponse_ModelDescription(const GetStyleTransferModelListResponse_ModelDescription& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
}

void GetStyleTransferModelListResponse_ModelDescription::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  localizedname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStyleTransferModelListResponse_ModelDescription::~GetStyleTransferModelListResponse_ModelDescription() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  SharedDtor();
}

void GetStyleTransferModelListResponse_ModelDescription::SharedDtor() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (localizedname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete localizedname_;
  }
  if (this != default_instance_) {
  }
}

void GetStyleTransferModelListResponse_ModelDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStyleTransferModelListResponse_ModelDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStyleTransferModelListResponse_ModelDescription_descriptor_;
}

const GetStyleTransferModelListResponse_ModelDescription& GetStyleTransferModelListResponse_ModelDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetStyleTransferModelListResponse_ModelDescription* GetStyleTransferModelListResponse_ModelDescription::default_instance_ = NULL;

GetStyleTransferModelListResponse_ModelDescription* GetStyleTransferModelListResponse_ModelDescription::New() const {
  return new GetStyleTransferModelListResponse_ModelDescription;
}

void GetStyleTransferModelListResponse_ModelDescription::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        id_->clear();
      }
    }
    if (has_localizedname()) {
      if (localizedname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        localizedname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStyleTransferModelListResponse_ModelDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_localizedName;
        break;
      }

      // required string localizedName = 2;
      case 2: {
        if (tag == 18) {
         parse_localizedName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_localizedname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->localizedname().data(), this->localizedname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "localizedname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  return false;
#undef DO_
}

void GetStyleTransferModelListResponse_ModelDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required string localizedName = 2;
  if (has_localizedname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localizedname().data(), this->localizedname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "localizedname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->localizedname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
}

::google::protobuf::uint8* GetStyleTransferModelListResponse_ModelDescription::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required string localizedName = 2;
  if (has_localizedname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->localizedname().data(), this->localizedname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "localizedname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->localizedname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetStyleTransferModelListResponse.ModelDescription)
  return target;
}

int GetStyleTransferModelListResponse_ModelDescription::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // required string localizedName = 2;
    if (has_localizedname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->localizedname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetStyleTransferModelListResponse_ModelDescription::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStyleTransferModelListResponse_ModelDescription* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStyleTransferModelListResponse_ModelDescription*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStyleTransferModelListResponse_ModelDescription::MergeFrom(const GetStyleTransferModelListResponse_ModelDescription& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_localizedname()) {
      set_localizedname(from.localizedname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStyleTransferModelListResponse_ModelDescription::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStyleTransferModelListResponse_ModelDescription::CopyFrom(const GetStyleTransferModelListResponse_ModelDescription& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStyleTransferModelListResponse_ModelDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetStyleTransferModelListResponse_ModelDescription::Swap(GetStyleTransferModelListResponse_ModelDescription* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(localizedname_, other->localizedname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStyleTransferModelListResponse_ModelDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStyleTransferModelListResponse_ModelDescription_descriptor_;
  metadata.reflection = GetStyleTransferModelListResponse_ModelDescription_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int GetStyleTransferModelListResponse::kModelsFieldNumber;
#endif  // !_MSC_VER

GetStyleTransferModelListResponse::GetStyleTransferModelListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetStyleTransferModelListResponse)
}

void GetStyleTransferModelListResponse::InitAsDefaultInstance() {
}

GetStyleTransferModelListResponse::GetStyleTransferModelListResponse(const GetStyleTransferModelListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetStyleTransferModelListResponse)
}

void GetStyleTransferModelListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStyleTransferModelListResponse::~GetStyleTransferModelListResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetStyleTransferModelListResponse)
  SharedDtor();
}

void GetStyleTransferModelListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStyleTransferModelListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStyleTransferModelListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStyleTransferModelListResponse_descriptor_;
}

const GetStyleTransferModelListResponse& GetStyleTransferModelListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetStyleTransferModelListResponse* GetStyleTransferModelListResponse::default_instance_ = NULL;

GetStyleTransferModelListResponse* GetStyleTransferModelListResponse::New() const {
  return new GetStyleTransferModelListResponse;
}

void GetStyleTransferModelListResponse::Clear() {
  models_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStyleTransferModelListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetStyleTransferModelListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AnselIpc.GetStyleTransferModelListResponse.ModelDescription models = 1;
      case 1: {
        if (tag == 10) {
         parse_models:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_models()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_models;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetStyleTransferModelListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetStyleTransferModelListResponse)
  return false;
#undef DO_
}

void GetStyleTransferModelListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetStyleTransferModelListResponse)
  // repeated .AnselIpc.GetStyleTransferModelListResponse.ModelDescription models = 1;
  for (int i = 0; i < this->models_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->models(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetStyleTransferModelListResponse)
}

::google::protobuf::uint8* GetStyleTransferModelListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetStyleTransferModelListResponse)
  // repeated .AnselIpc.GetStyleTransferModelListResponse.ModelDescription models = 1;
  for (int i = 0; i < this->models_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->models(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetStyleTransferModelListResponse)
  return target;
}

int GetStyleTransferModelListResponse::ByteSize() const {
  int total_size = 0;

  // repeated .AnselIpc.GetStyleTransferModelListResponse.ModelDescription models = 1;
  total_size += 1 * this->models_size();
  for (int i = 0; i < this->models_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->models(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetStyleTransferModelListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStyleTransferModelListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStyleTransferModelListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStyleTransferModelListResponse::MergeFrom(const GetStyleTransferModelListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  models_.MergeFrom(from.models_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStyleTransferModelListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStyleTransferModelListResponse::CopyFrom(const GetStyleTransferModelListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStyleTransferModelListResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->models())) return false;
  return true;
}

void GetStyleTransferModelListResponse::Swap(GetStyleTransferModelListResponse* other) {
  if (other != this) {
    models_.Swap(&other->models_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStyleTransferModelListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStyleTransferModelListResponse_descriptor_;
  metadata.reflection = GetStyleTransferModelListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferModelRequest::kModelIdFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferModelRequest::SetStyleTransferModelRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferModelRequest)
}

void SetStyleTransferModelRequest::InitAsDefaultInstance() {
}

SetStyleTransferModelRequest::SetStyleTransferModelRequest(const SetStyleTransferModelRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferModelRequest)
}

void SetStyleTransferModelRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  modelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferModelRequest::~SetStyleTransferModelRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferModelRequest)
  SharedDtor();
}

void SetStyleTransferModelRequest::SharedDtor() {
  if (modelid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete modelid_;
  }
  if (this != default_instance_) {
  }
}

void SetStyleTransferModelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferModelRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferModelRequest_descriptor_;
}

const SetStyleTransferModelRequest& SetStyleTransferModelRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferModelRequest* SetStyleTransferModelRequest::default_instance_ = NULL;

SetStyleTransferModelRequest* SetStyleTransferModelRequest::New() const {
  return new SetStyleTransferModelRequest;
}

void SetStyleTransferModelRequest::Clear() {
  if (has_modelid()) {
    if (modelid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      modelid_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferModelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferModelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string modelId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modelid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modelid().data(), this->modelid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "modelid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferModelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferModelRequest)
  return false;
#undef DO_
}

void SetStyleTransferModelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferModelRequest)
  // required string modelId = 1;
  if (has_modelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), this->modelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "modelid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->modelid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferModelRequest)
}

::google::protobuf::uint8* SetStyleTransferModelRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferModelRequest)
  // required string modelId = 1;
  if (has_modelid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modelid().data(), this->modelid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "modelid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->modelid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferModelRequest)
  return target;
}

int SetStyleTransferModelRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string modelId = 1;
    if (has_modelid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->modelid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferModelRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferModelRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferModelRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferModelRequest::MergeFrom(const SetStyleTransferModelRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_modelid()) {
      set_modelid(from.modelid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferModelRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferModelRequest::CopyFrom(const SetStyleTransferModelRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferModelRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferModelRequest::Swap(SetStyleTransferModelRequest* other) {
  if (other != this) {
    std::swap(modelid_, other->modelid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferModelRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferModelRequest_descriptor_;
  metadata.reflection = SetStyleTransferModelRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetStyleTransferModelResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetStyleTransferModelResponse::SetStyleTransferModelResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetStyleTransferModelResponse)
}

void SetStyleTransferModelResponse::InitAsDefaultInstance() {
}

SetStyleTransferModelResponse::SetStyleTransferModelResponse(const SetStyleTransferModelResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetStyleTransferModelResponse)
}

void SetStyleTransferModelResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetStyleTransferModelResponse::~SetStyleTransferModelResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetStyleTransferModelResponse)
  SharedDtor();
}

void SetStyleTransferModelResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetStyleTransferModelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetStyleTransferModelResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetStyleTransferModelResponse_descriptor_;
}

const SetStyleTransferModelResponse& SetStyleTransferModelResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetStyleTransferModelResponse* SetStyleTransferModelResponse::default_instance_ = NULL;

SetStyleTransferModelResponse* SetStyleTransferModelResponse::New() const {
  return new SetStyleTransferModelResponse;
}

void SetStyleTransferModelResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetStyleTransferModelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetStyleTransferModelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetStyleTransferModelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetStyleTransferModelResponse)
  return false;
#undef DO_
}

void SetStyleTransferModelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetStyleTransferModelResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetStyleTransferModelResponse)
}

::google::protobuf::uint8* SetStyleTransferModelResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetStyleTransferModelResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetStyleTransferModelResponse)
  return target;
}

int SetStyleTransferModelResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetStyleTransferModelResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetStyleTransferModelResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetStyleTransferModelResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetStyleTransferModelResponse::MergeFrom(const SetStyleTransferModelResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetStyleTransferModelResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetStyleTransferModelResponse::CopyFrom(const SetStyleTransferModelResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetStyleTransferModelResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetStyleTransferModelResponse::Swap(SetStyleTransferModelResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetStyleTransferModelResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetStyleTransferModelResponse_descriptor_;
  metadata.reflection = SetStyleTransferModelResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StyleTransferStatusRequest::kStatusFieldNumber;
#endif  // !_MSC_VER

StyleTransferStatusRequest::StyleTransferStatusRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferStatusRequest)
}

void StyleTransferStatusRequest::InitAsDefaultInstance() {
}

StyleTransferStatusRequest::StyleTransferStatusRequest(const StyleTransferStatusRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferStatusRequest)
}

void StyleTransferStatusRequest::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferStatusRequest::~StyleTransferStatusRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferStatusRequest)
  SharedDtor();
}

void StyleTransferStatusRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferStatusRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferStatusRequest_descriptor_;
}

const StyleTransferStatusRequest& StyleTransferStatusRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferStatusRequest* StyleTransferStatusRequest::default_instance_ = NULL;

StyleTransferStatusRequest* StyleTransferStatusRequest::New() const {
  return new StyleTransferStatusRequest;
}

void StyleTransferStatusRequest::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferStatusRequest)
  return false;
#undef DO_
}

void StyleTransferStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferStatusRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferStatusRequest)
}

::google::protobuf::uint8* StyleTransferStatusRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferStatusRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferStatusRequest)
  return target;
}

int StyleTransferStatusRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferStatusRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferStatusRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferStatusRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferStatusRequest::MergeFrom(const StyleTransferStatusRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferStatusRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferStatusRequest::CopyFrom(const StyleTransferStatusRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferStatusRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StyleTransferStatusRequest::Swap(StyleTransferStatusRequest* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferStatusRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferStatusRequest_descriptor_;
  metadata.reflection = StyleTransferStatusRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StyleTransferStatusResponse::StyleTransferStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferStatusResponse)
}

void StyleTransferStatusResponse::InitAsDefaultInstance() {
}

StyleTransferStatusResponse::StyleTransferStatusResponse(const StyleTransferStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferStatusResponse)
}

void StyleTransferStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferStatusResponse::~StyleTransferStatusResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferStatusResponse)
  SharedDtor();
}

void StyleTransferStatusResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferStatusResponse_descriptor_;
}

const StyleTransferStatusResponse& StyleTransferStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferStatusResponse* StyleTransferStatusResponse::default_instance_ = NULL;

StyleTransferStatusResponse* StyleTransferStatusResponse::New() const {
  return new StyleTransferStatusResponse;
}

void StyleTransferStatusResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferStatusResponse)
  return false;
#undef DO_
}

void StyleTransferStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferStatusResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferStatusResponse)
}

::google::protobuf::uint8* StyleTransferStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferStatusResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferStatusResponse)
  return target;
}

int StyleTransferStatusResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferStatusResponse::MergeFrom(const StyleTransferStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferStatusResponse::CopyFrom(const StyleTransferStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferStatusResponse::IsInitialized() const {

  return true;
}

void StyleTransferStatusResponse::Swap(StyleTransferStatusResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferStatusResponse_descriptor_;
  metadata.reflection = StyleTransferStatusResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StyleTransferSideloadChoiceRequest::kPackageSizeInBytesFieldNumber;
#endif  // !_MSC_VER

StyleTransferSideloadChoiceRequest::StyleTransferSideloadChoiceRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferSideloadChoiceRequest)
}

void StyleTransferSideloadChoiceRequest::InitAsDefaultInstance() {
}

StyleTransferSideloadChoiceRequest::StyleTransferSideloadChoiceRequest(const StyleTransferSideloadChoiceRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferSideloadChoiceRequest)
}

void StyleTransferSideloadChoiceRequest::SharedCtor() {
  _cached_size_ = 0;
  packagesizeinbytes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferSideloadChoiceRequest::~StyleTransferSideloadChoiceRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferSideloadChoiceRequest)
  SharedDtor();
}

void StyleTransferSideloadChoiceRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferSideloadChoiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferSideloadChoiceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferSideloadChoiceRequest_descriptor_;
}

const StyleTransferSideloadChoiceRequest& StyleTransferSideloadChoiceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferSideloadChoiceRequest* StyleTransferSideloadChoiceRequest::default_instance_ = NULL;

StyleTransferSideloadChoiceRequest* StyleTransferSideloadChoiceRequest::New() const {
  return new StyleTransferSideloadChoiceRequest;
}

void StyleTransferSideloadChoiceRequest::Clear() {
  packagesizeinbytes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferSideloadChoiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferSideloadChoiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 packageSizeInBytes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packagesizeinbytes_)));
          set_has_packagesizeinbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferSideloadChoiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferSideloadChoiceRequest)
  return false;
#undef DO_
}

void StyleTransferSideloadChoiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferSideloadChoiceRequest)
  // required uint32 packageSizeInBytes = 1;
  if (has_packagesizeinbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packagesizeinbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferSideloadChoiceRequest)
}

::google::protobuf::uint8* StyleTransferSideloadChoiceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferSideloadChoiceRequest)
  // required uint32 packageSizeInBytes = 1;
  if (has_packagesizeinbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packagesizeinbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferSideloadChoiceRequest)
  return target;
}

int StyleTransferSideloadChoiceRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 packageSizeInBytes = 1;
    if (has_packagesizeinbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packagesizeinbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferSideloadChoiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferSideloadChoiceRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferSideloadChoiceRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferSideloadChoiceRequest::MergeFrom(const StyleTransferSideloadChoiceRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packagesizeinbytes()) {
      set_packagesizeinbytes(from.packagesizeinbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferSideloadChoiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferSideloadChoiceRequest::CopyFrom(const StyleTransferSideloadChoiceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferSideloadChoiceRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StyleTransferSideloadChoiceRequest::Swap(StyleTransferSideloadChoiceRequest* other) {
  if (other != this) {
    std::swap(packagesizeinbytes_, other->packagesizeinbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferSideloadChoiceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferSideloadChoiceRequest_descriptor_;
  metadata.reflection = StyleTransferSideloadChoiceRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StyleTransferSideloadChoiceResponse::kChoiceFieldNumber;
#endif  // !_MSC_VER

StyleTransferSideloadChoiceResponse::StyleTransferSideloadChoiceResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferSideloadChoiceResponse)
}

void StyleTransferSideloadChoiceResponse::InitAsDefaultInstance() {
}

StyleTransferSideloadChoiceResponse::StyleTransferSideloadChoiceResponse(const StyleTransferSideloadChoiceResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferSideloadChoiceResponse)
}

void StyleTransferSideloadChoiceResponse::SharedCtor() {
  _cached_size_ = 0;
  choice_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferSideloadChoiceResponse::~StyleTransferSideloadChoiceResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferSideloadChoiceResponse)
  SharedDtor();
}

void StyleTransferSideloadChoiceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferSideloadChoiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferSideloadChoiceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferSideloadChoiceResponse_descriptor_;
}

const StyleTransferSideloadChoiceResponse& StyleTransferSideloadChoiceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferSideloadChoiceResponse* StyleTransferSideloadChoiceResponse::default_instance_ = NULL;

StyleTransferSideloadChoiceResponse* StyleTransferSideloadChoiceResponse::New() const {
  return new StyleTransferSideloadChoiceResponse;
}

void StyleTransferSideloadChoiceResponse::Clear() {
  choice_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferSideloadChoiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferSideloadChoiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.SideloadChoice choice = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::SideloadChoice_IsValid(value)) {
            set_choice(static_cast< ::AnselIpc::SideloadChoice >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferSideloadChoiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferSideloadChoiceResponse)
  return false;
#undef DO_
}

void StyleTransferSideloadChoiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferSideloadChoiceResponse)
  // required .AnselIpc.SideloadChoice choice = 1;
  if (has_choice()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->choice(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferSideloadChoiceResponse)
}

::google::protobuf::uint8* StyleTransferSideloadChoiceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferSideloadChoiceResponse)
  // required .AnselIpc.SideloadChoice choice = 1;
  if (has_choice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->choice(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferSideloadChoiceResponse)
  return target;
}

int StyleTransferSideloadChoiceResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.SideloadChoice choice = 1;
    if (has_choice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->choice());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferSideloadChoiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferSideloadChoiceResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferSideloadChoiceResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferSideloadChoiceResponse::MergeFrom(const StyleTransferSideloadChoiceResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_choice()) {
      set_choice(from.choice());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferSideloadChoiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferSideloadChoiceResponse::CopyFrom(const StyleTransferSideloadChoiceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferSideloadChoiceResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StyleTransferSideloadChoiceResponse::Swap(StyleTransferSideloadChoiceResponse* other) {
  if (other != this) {
    std::swap(choice_, other->choice_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferSideloadChoiceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferSideloadChoiceResponse_descriptor_;
  metadata.reflection = StyleTransferSideloadChoiceResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

StyleTransferSideloadProgressRequest::StyleTransferSideloadProgressRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferSideloadProgressRequest)
}

void StyleTransferSideloadProgressRequest::InitAsDefaultInstance() {
}

StyleTransferSideloadProgressRequest::StyleTransferSideloadProgressRequest(const StyleTransferSideloadProgressRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferSideloadProgressRequest)
}

void StyleTransferSideloadProgressRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferSideloadProgressRequest::~StyleTransferSideloadProgressRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferSideloadProgressRequest)
  SharedDtor();
}

void StyleTransferSideloadProgressRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferSideloadProgressRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferSideloadProgressRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferSideloadProgressRequest_descriptor_;
}

const StyleTransferSideloadProgressRequest& StyleTransferSideloadProgressRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferSideloadProgressRequest* StyleTransferSideloadProgressRequest::default_instance_ = NULL;

StyleTransferSideloadProgressRequest* StyleTransferSideloadProgressRequest::New() const {
  return new StyleTransferSideloadProgressRequest;
}

void StyleTransferSideloadProgressRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferSideloadProgressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferSideloadProgressRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferSideloadProgressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferSideloadProgressRequest)
  return false;
#undef DO_
}

void StyleTransferSideloadProgressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferSideloadProgressRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferSideloadProgressRequest)
}

::google::protobuf::uint8* StyleTransferSideloadProgressRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferSideloadProgressRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferSideloadProgressRequest)
  return target;
}

int StyleTransferSideloadProgressRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferSideloadProgressRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferSideloadProgressRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferSideloadProgressRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferSideloadProgressRequest::MergeFrom(const StyleTransferSideloadProgressRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferSideloadProgressRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferSideloadProgressRequest::CopyFrom(const StyleTransferSideloadProgressRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferSideloadProgressRequest::IsInitialized() const {

  return true;
}

void StyleTransferSideloadProgressRequest::Swap(StyleTransferSideloadProgressRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferSideloadProgressRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferSideloadProgressRequest_descriptor_;
  metadata.reflection = StyleTransferSideloadProgressRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StyleTransferSideloadProgressResponse::kStatusFieldNumber;
const int StyleTransferSideloadProgressResponse::kProgressFieldNumber;
#endif  // !_MSC_VER

StyleTransferSideloadProgressResponse::StyleTransferSideloadProgressResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.StyleTransferSideloadProgressResponse)
}

void StyleTransferSideloadProgressResponse::InitAsDefaultInstance() {
}

StyleTransferSideloadProgressResponse::StyleTransferSideloadProgressResponse(const StyleTransferSideloadProgressResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.StyleTransferSideloadProgressResponse)
}

void StyleTransferSideloadProgressResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  progress_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleTransferSideloadProgressResponse::~StyleTransferSideloadProgressResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.StyleTransferSideloadProgressResponse)
  SharedDtor();
}

void StyleTransferSideloadProgressResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StyleTransferSideloadProgressResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StyleTransferSideloadProgressResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StyleTransferSideloadProgressResponse_descriptor_;
}

const StyleTransferSideloadProgressResponse& StyleTransferSideloadProgressResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

StyleTransferSideloadProgressResponse* StyleTransferSideloadProgressResponse::default_instance_ = NULL;

StyleTransferSideloadProgressResponse* StyleTransferSideloadProgressResponse::New() const {
  return new StyleTransferSideloadProgressResponse;
}

void StyleTransferSideloadProgressResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 1;
    progress_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StyleTransferSideloadProgressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.StyleTransferSideloadProgressResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.SideloadProgress status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::SideloadProgress_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::SideloadProgress >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_progress;
        break;
      }

      // optional int32 progress = 2;
      case 2: {
        if (tag == 16) {
         parse_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.StyleTransferSideloadProgressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.StyleTransferSideloadProgressResponse)
  return false;
#undef DO_
}

void StyleTransferSideloadProgressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.StyleTransferSideloadProgressResponse)
  // required .AnselIpc.SideloadProgress status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional int32 progress = 2;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->progress(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.StyleTransferSideloadProgressResponse)
}

::google::protobuf::uint8* StyleTransferSideloadProgressResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.StyleTransferSideloadProgressResponse)
  // required .AnselIpc.SideloadProgress status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional int32 progress = 2;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->progress(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.StyleTransferSideloadProgressResponse)
  return target;
}

int StyleTransferSideloadProgressResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.SideloadProgress status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional int32 progress = 2;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->progress());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void StyleTransferSideloadProgressResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StyleTransferSideloadProgressResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StyleTransferSideloadProgressResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StyleTransferSideloadProgressResponse::MergeFrom(const StyleTransferSideloadProgressResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StyleTransferSideloadProgressResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StyleTransferSideloadProgressResponse::CopyFrom(const StyleTransferSideloadProgressResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleTransferSideloadProgressResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void StyleTransferSideloadProgressResponse::Swap(StyleTransferSideloadProgressResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StyleTransferSideloadProgressResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StyleTransferSideloadProgressResponse_descriptor_;
  metadata.reflection = StyleTransferSideloadProgressResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIReadyRequest::kStatusFieldNumber;
#endif  // !_MSC_VER

UIReadyRequest::UIReadyRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIReadyRequest)
}

void UIReadyRequest::InitAsDefaultInstance() {
}

UIReadyRequest::UIReadyRequest(const UIReadyRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIReadyRequest)
}

void UIReadyRequest::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIReadyRequest::~UIReadyRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIReadyRequest)
  SharedDtor();
}

void UIReadyRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIReadyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIReadyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIReadyRequest_descriptor_;
}

const UIReadyRequest& UIReadyRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIReadyRequest* UIReadyRequest::default_instance_ = NULL;

UIReadyRequest* UIReadyRequest::New() const {
  return new UIReadyRequest;
}

void UIReadyRequest::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIReadyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIReadyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIReadyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIReadyRequest)
  return false;
#undef DO_
}

void UIReadyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIReadyRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIReadyRequest)
}

::google::protobuf::uint8* UIReadyRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIReadyRequest)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIReadyRequest)
  return target;
}

int UIReadyRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIReadyRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIReadyRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIReadyRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIReadyRequest::MergeFrom(const UIReadyRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIReadyRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIReadyRequest::CopyFrom(const UIReadyRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIReadyRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIReadyRequest::Swap(UIReadyRequest* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIReadyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIReadyRequest_descriptor_;
  metadata.reflection = UIReadyRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UIReadyResponse::UIReadyResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIReadyResponse)
}

void UIReadyResponse::InitAsDefaultInstance() {
}

UIReadyResponse::UIReadyResponse(const UIReadyResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIReadyResponse)
}

void UIReadyResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIReadyResponse::~UIReadyResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIReadyResponse)
  SharedDtor();
}

void UIReadyResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIReadyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIReadyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIReadyResponse_descriptor_;
}

const UIReadyResponse& UIReadyResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIReadyResponse* UIReadyResponse::default_instance_ = NULL;

UIReadyResponse* UIReadyResponse::New() const {
  return new UIReadyResponse;
}

void UIReadyResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIReadyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIReadyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIReadyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIReadyResponse)
  return false;
#undef DO_
}

void UIReadyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIReadyResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIReadyResponse)
}

::google::protobuf::uint8* UIReadyResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIReadyResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIReadyResponse)
  return target;
}

int UIReadyResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIReadyResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIReadyResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIReadyResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIReadyResponse::MergeFrom(const UIReadyResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIReadyResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIReadyResponse::CopyFrom(const UIReadyResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIReadyResponse::IsInitialized() const {

  return true;
}

void UIReadyResponse::Swap(UIReadyResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIReadyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIReadyResponse_descriptor_;
  metadata.reflection = UIReadyResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescButton::kIdFieldNumber;
const int UIDescButton::kTextFieldNumber;
#endif  // !_MSC_VER

UIDescButton::UIDescButton()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescButton)
}

void UIDescButton::InitAsDefaultInstance() {
}

UIDescButton::UIDescButton(const UIDescButton& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescButton)
}

void UIDescButton::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescButton::~UIDescButton() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescButton)
  SharedDtor();
}

void UIDescButton::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescButton::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescButton::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescButton_descriptor_;
}

const UIDescButton& UIDescButton::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescButton* UIDescButton::default_instance_ = NULL;

UIDescButton* UIDescButton::New() const {
  return new UIDescButton;
}

void UIDescButton::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0;
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescButton::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescButton)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescButton)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescButton)
  return false;
#undef DO_
}

void UIDescButton::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescButton)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescButton)
}

::google::protobuf::uint8* UIDescButton::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescButton)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescButton)
  return target;
}

int UIDescButton::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescButton::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescButton* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescButton*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescButton::MergeFrom(const UIDescButton& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescButton::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescButton::CopyFrom(const UIDescButton& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescButton::IsInitialized() const {

  return true;
}

void UIDescButton::Swap(UIDescButton* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescButton::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescButton_descriptor_;
  metadata.reflection = UIDescButton_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescSlider::kIdFieldNumber;
const int UIDescSlider::kTextFieldNumber;
const int UIDescSlider::kMilwalueFieldNumber;
const int UIDescSlider::kMaxValueFieldNumber;
const int UIDescSlider::kValueFieldNumber;
const int UIDescSlider::kIntervalFieldNumber;
#endif  // !_MSC_VER

UIDescSlider::UIDescSlider()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescSlider)
}

void UIDescSlider::InitAsDefaultInstance() {
}

UIDescSlider::UIDescSlider(const UIDescSlider& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescSlider)
}

void UIDescSlider::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  milwalue_ = 0;
  maxvalue_ = 0;
  value_ = 0;
  interval_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescSlider::~UIDescSlider() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescSlider)
  SharedDtor();
}

void UIDescSlider::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescSlider::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescSlider::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescSlider_descriptor_;
}

const UIDescSlider& UIDescSlider::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescSlider* UIDescSlider::default_instance_ = NULL;

UIDescSlider* UIDescSlider::New() const {
  return new UIDescSlider;
}

void UIDescSlider::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UIDescSlider*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(id_, interval_);
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescSlider::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescSlider)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_milwalue;
        break;
      }

      // optional float milwalue = 3;
      case 3: {
        if (tag == 29) {
         parse_milwalue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &milwalue_)));
          set_has_milwalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_maxValue;
        break;
      }

      // optional float maxValue = 4;
      case 4: {
        if (tag == 37) {
         parse_maxValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxvalue_)));
          set_has_maxvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_value;
        break;
      }

      // optional float value = 5;
      case 5: {
        if (tag == 45) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_interval;
        break;
      }

      // optional float interval = 6;
      case 6: {
        if (tag == 53) {
         parse_interval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &interval_)));
          set_has_interval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescSlider)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescSlider)
  return false;
#undef DO_
}

void UIDescSlider::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescSlider)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional float milwalue = 3;
  if (has_milwalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->milwalue(), output);
  }

  // optional float maxValue = 4;
  if (has_maxvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->maxvalue(), output);
  }

  // optional float value = 5;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->value(), output);
  }

  // optional float interval = 6;
  if (has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->interval(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescSlider)
}

::google::protobuf::uint8* UIDescSlider::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescSlider)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional float milwalue = 3;
  if (has_milwalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->milwalue(), target);
  }

  // optional float maxValue = 4;
  if (has_maxvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->maxvalue(), target);
  }

  // optional float value = 5;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->value(), target);
  }

  // optional float interval = 6;
  if (has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->interval(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescSlider)
  return target;
}

int UIDescSlider::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional float milwalue = 3;
    if (has_milwalue()) {
      total_size += 1 + 4;
    }

    // optional float maxValue = 4;
    if (has_maxvalue()) {
      total_size += 1 + 4;
    }

    // optional float value = 5;
    if (has_value()) {
      total_size += 1 + 4;
    }

    // optional float interval = 6;
    if (has_interval()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescSlider::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescSlider* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescSlider*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescSlider::MergeFrom(const UIDescSlider& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_milwalue()) {
      set_milwalue(from.milwalue());
    }
    if (from.has_maxvalue()) {
      set_maxvalue(from.maxvalue());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_interval()) {
      set_interval(from.interval());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescSlider::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescSlider::CopyFrom(const UIDescSlider& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescSlider::IsInitialized() const {

  return true;
}

void UIDescSlider::Swap(UIDescSlider* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    std::swap(milwalue_, other->milwalue_);
    std::swap(maxvalue_, other->maxvalue_);
    std::swap(value_, other->value_);
    std::swap(interval_, other->interval_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescSlider::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescSlider_descriptor_;
  metadata.reflection = UIDescSlider_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescEdit::kIdFieldNumber;
const int UIDescEdit::kTextFieldNumber;
const int UIDescEdit::kAllowedTypeFieldNumber;
const int UIDescEdit::kDataFieldNumber;
#endif  // !_MSC_VER

UIDescEdit::UIDescEdit()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescEdit)
}

void UIDescEdit::InitAsDefaultInstance() {
}

UIDescEdit::UIDescEdit(const UIDescEdit& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescEdit)
}

void UIDescEdit::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allowedtype_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescEdit::~UIDescEdit() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescEdit)
  SharedDtor();
}

void UIDescEdit::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void UIDescEdit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescEdit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescEdit_descriptor_;
}

const UIDescEdit& UIDescEdit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescEdit* UIDescEdit::default_instance_ = NULL;

UIDescEdit* UIDescEdit::New() const {
  return new UIDescEdit;
}

void UIDescEdit::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UIDescEdit*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(id_, allowedtype_);
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescEdit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescEdit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_allowedType;
        break;
      }

      // optional .AnselIpc.EditAllowedType allowedType = 3;
      case 3: {
        if (tag == 24) {
         parse_allowedType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::EditAllowedType_IsValid(value)) {
            set_allowedtype(static_cast< ::AnselIpc::EditAllowedType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_data;
        break;
      }

      // optional string data = 4;
      case 4: {
        if (tag == 34) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescEdit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescEdit)
  return false;
#undef DO_
}

void UIDescEdit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescEdit)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional .AnselIpc.EditAllowedType allowedType = 3;
  if (has_allowedtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->allowedtype(), output);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescEdit)
}

::google::protobuf::uint8* UIDescEdit::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescEdit)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional .AnselIpc.EditAllowedType allowedType = 3;
  if (has_allowedtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->allowedtype(), target);
  }

  // optional string data = 4;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescEdit)
  return target;
}

int UIDescEdit::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .AnselIpc.EditAllowedType allowedType = 3;
    if (has_allowedtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->allowedtype());
    }

    // optional string data = 4;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescEdit::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescEdit* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescEdit*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescEdit::MergeFrom(const UIDescEdit& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_allowedtype()) {
      set_allowedtype(from.allowedtype());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescEdit::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescEdit::CopyFrom(const UIDescEdit& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescEdit::IsInitialized() const {

  return true;
}

void UIDescEdit::Swap(UIDescEdit* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    std::swap(allowedtype_, other->allowedtype_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescEdit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescEdit_descriptor_;
  metadata.reflection = UIDescEdit_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescBoolean::kIdFieldNumber;
const int UIDescBoolean::kTextFieldNumber;
const int UIDescBoolean::kSetFieldNumber;
#endif  // !_MSC_VER

UIDescBoolean::UIDescBoolean()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescBoolean)
}

void UIDescBoolean::InitAsDefaultInstance() {
}

UIDescBoolean::UIDescBoolean(const UIDescBoolean& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescBoolean)
}

void UIDescBoolean::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  set_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescBoolean::~UIDescBoolean() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescBoolean)
  SharedDtor();
}

void UIDescBoolean::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescBoolean::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescBoolean::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescBoolean_descriptor_;
}

const UIDescBoolean& UIDescBoolean::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescBoolean* UIDescBoolean::default_instance_ = NULL;

UIDescBoolean* UIDescBoolean::New() const {
  return new UIDescBoolean;
}

void UIDescBoolean::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UIDescBoolean*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(id_, set_);
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescBoolean::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescBoolean)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_set;
        break;
      }

      // optional bool set = 3;
      case 3: {
        if (tag == 24) {
         parse_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &set_)));
          set_has_set();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescBoolean)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescBoolean)
  return false;
#undef DO_
}

void UIDescBoolean::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescBoolean)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // optional bool set = 3;
  if (has_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->set(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescBoolean)
}

::google::protobuf::uint8* UIDescBoolean::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescBoolean)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // optional bool set = 3;
  if (has_set()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->set(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescBoolean)
  return target;
}

int UIDescBoolean::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional bool set = 3;
    if (has_set()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescBoolean::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescBoolean* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescBoolean*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescBoolean::MergeFrom(const UIDescBoolean& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_set()) {
      set_set(from.set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescBoolean::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescBoolean::CopyFrom(const UIDescBoolean& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescBoolean::IsInitialized() const {

  return true;
}

void UIDescBoolean::Swap(UIDescBoolean* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    std::swap(set_, other->set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescBoolean::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescBoolean_descriptor_;
  metadata.reflection = UIDescBoolean_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescLabel::kIdFieldNumber;
const int UIDescLabel::kTextFieldNumber;
#endif  // !_MSC_VER

UIDescLabel::UIDescLabel()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescLabel)
}

void UIDescLabel::InitAsDefaultInstance() {
}

UIDescLabel::UIDescLabel(const UIDescLabel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescLabel)
}

void UIDescLabel::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescLabel::~UIDescLabel() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescLabel)
  SharedDtor();
}

void UIDescLabel::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescLabel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescLabel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescLabel_descriptor_;
}

const UIDescLabel& UIDescLabel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescLabel* UIDescLabel::default_instance_ = NULL;

UIDescLabel* UIDescLabel::New() const {
  return new UIDescLabel;
}

void UIDescLabel::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0;
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescLabel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescLabel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescLabel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescLabel)
  return false;
#undef DO_
}

void UIDescLabel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescLabel)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescLabel)
}

::google::protobuf::uint8* UIDescLabel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescLabel)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescLabel)
  return target;
}

int UIDescLabel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescLabel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescLabel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescLabel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescLabel::MergeFrom(const UIDescLabel& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescLabel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescLabel::CopyFrom(const UIDescLabel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescLabel::IsInitialized() const {

  return true;
}

void UIDescLabel::Swap(UIDescLabel* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescLabel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescLabel_descriptor_;
  metadata.reflection = UIDescLabel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MapFieldEntry::kKeyFieldNumber;
const int MapFieldEntry::kValueFieldNumber;
#endif  // !_MSC_VER

MapFieldEntry::MapFieldEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.MapFieldEntry)
}

void MapFieldEntry::InitAsDefaultInstance() {
}

MapFieldEntry::MapFieldEntry(const MapFieldEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.MapFieldEntry)
}

void MapFieldEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapFieldEntry::~MapFieldEntry() {
  // @@protoc_insertion_point(destructor:AnselIpc.MapFieldEntry)
  SharedDtor();
}

void MapFieldEntry::SharedDtor() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void MapFieldEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapFieldEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapFieldEntry_descriptor_;
}

const MapFieldEntry& MapFieldEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

MapFieldEntry* MapFieldEntry::default_instance_ = NULL;

MapFieldEntry* MapFieldEntry::New() const {
  return new MapFieldEntry;
}

void MapFieldEntry::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    key_ = 0;
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MapFieldEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.MapFieldEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 key = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
          set_has_key();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.MapFieldEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.MapFieldEntry)
  return false;
#undef DO_
}

void MapFieldEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.MapFieldEntry)
  // required int32 key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.MapFieldEntry)
}

::google::protobuf::uint8* MapFieldEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.MapFieldEntry)
  // required int32 key = 1;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.MapFieldEntry)
  return target;
}

int MapFieldEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->key());
    }

    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void MapFieldEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MapFieldEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MapFieldEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MapFieldEntry::MergeFrom(const MapFieldEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MapFieldEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapFieldEntry::CopyFrom(const MapFieldEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapFieldEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void MapFieldEntry::Swap(MapFieldEntry* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MapFieldEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapFieldEntry_descriptor_;
  metadata.reflection = MapFieldEntry_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescList::kIdFieldNumber;
const int UIDescList::kTextFieldNumber;
const int UIDescList::kValuesFieldNumber;
const int UIDescList::kSelectedFieldNumber;
const int UIDescList::kTypeFieldNumber;
#endif  // !_MSC_VER

UIDescList::UIDescList()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescList)
}

void UIDescList::InitAsDefaultInstance() {
}

UIDescList::UIDescList(const UIDescList& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescList)
}

void UIDescList::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selected_ = 0;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescList::~UIDescList() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescList)
  SharedDtor();
}

void UIDescList::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescList_descriptor_;
}

const UIDescList& UIDescList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescList* UIDescList::default_instance_ = NULL;

UIDescList* UIDescList::New() const {
  return new UIDescList;
}

void UIDescList::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UIDescList*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 27) {
    ZR_(id_, selected_);
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
    type_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_values;
        break;
      }

      // repeated .AnselIpc.MapFieldEntry values = 3;
      case 3: {
        if (tag == 26) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_values;
        if (input->ExpectTag(32)) goto parse_selected;
        break;
      }

      // optional int32 selected = 4;
      case 4: {
        if (tag == 32) {
         parse_selected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selected_)));
          set_has_selected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .AnselIpc.ListSelectionType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ListSelectionType_IsValid(value)) {
            set_type(static_cast< ::AnselIpc::ListSelectionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescList)
  return false;
#undef DO_
}

void UIDescList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescList)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // repeated .AnselIpc.MapFieldEntry values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->values(i), output);
  }

  // optional int32 selected = 4;
  if (has_selected()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->selected(), output);
  }

  // optional .AnselIpc.ListSelectionType type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescList)
}

::google::protobuf::uint8* UIDescList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescList)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // repeated .AnselIpc.MapFieldEntry values = 3;
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->values(i), target);
  }

  // optional int32 selected = 4;
  if (has_selected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->selected(), target);
  }

  // optional .AnselIpc.ListSelectionType type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescList)
  return target;
}

int UIDescList::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional int32 selected = 4;
    if (has_selected()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selected());
    }

    // optional .AnselIpc.ListSelectionType type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated .AnselIpc.MapFieldEntry values = 3;
  total_size += 1 * this->values_size();
  for (int i = 0; i < this->values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->values(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescList::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescList* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescList*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescList::MergeFrom(const UIDescList& from) {
  GOOGLE_CHECK_NE(&from, this);
  values_.MergeFrom(from.values_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
    if (from.has_selected()) {
      set_selected(from.selected());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescList::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescList::CopyFrom(const UIDescList& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->values())) return false;
  return true;
}

void UIDescList::Swap(UIDescList* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    values_.Swap(&other->values_);
    std::swap(selected_, other->selected_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescList_descriptor_;
  metadata.reflection = UIDescList_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIDescPulldown::kIdFieldNumber;
const int UIDescPulldown::kTextFieldNumber;
const int UIDescPulldown::kControlIdListFieldNumber;
#endif  // !_MSC_VER

UIDescPulldown::UIDescPulldown()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIDescPulldown)
}

void UIDescPulldown::InitAsDefaultInstance() {
}

UIDescPulldown::UIDescPulldown(const UIDescPulldown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIDescPulldown)
}

void UIDescPulldown::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0;
  text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIDescPulldown::~UIDescPulldown() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIDescPulldown)
  SharedDtor();
}

void UIDescPulldown::SharedDtor() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (this != default_instance_) {
  }
}

void UIDescPulldown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIDescPulldown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIDescPulldown_descriptor_;
}

const UIDescPulldown& UIDescPulldown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIDescPulldown* UIDescPulldown::default_instance_ = NULL;

UIDescPulldown* UIDescPulldown::New() const {
  return new UIDescPulldown;
}

void UIDescPulldown::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    id_ = 0;
    if (has_text()) {
      if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        text_->clear();
      }
    }
  }
  controlidlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIDescPulldown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIDescPulldown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_text;
        break;
      }

      // optional string text = 2;
      case 2: {
        if (tag == 18) {
         parse_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "text");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_controlIdList;
        break;
      }

      // repeated int32 controlIdList = 3;
      case 3: {
        if (tag == 24) {
         parse_controlIdList:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_controlidlist())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_controlidlist())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_controlIdList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIDescPulldown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIDescPulldown)
  return false;
#undef DO_
}

void UIDescPulldown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIDescPulldown)
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // repeated int32 controlIdList = 3;
  for (int i = 0; i < this->controlidlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->controlidlist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIDescPulldown)
}

::google::protobuf::uint8* UIDescPulldown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIDescPulldown)
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string text = 2;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // repeated int32 controlIdList = 3;
  for (int i = 0; i < this->controlidlist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->controlidlist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIDescPulldown)
  return target;
}

int UIDescPulldown::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string text = 2;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

  }
  // repeated int32 controlIdList = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->controlidlist_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->controlidlist(i));
    }
    total_size += 1 * this->controlidlist_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIDescPulldown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIDescPulldown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIDescPulldown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIDescPulldown::MergeFrom(const UIDescPulldown& from) {
  GOOGLE_CHECK_NE(&from, this);
  controlidlist_.MergeFrom(from.controlidlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_text()) {
      set_text(from.text());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIDescPulldown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIDescPulldown::CopyFrom(const UIDescPulldown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIDescPulldown::IsInitialized() const {

  return true;
}

void UIDescPulldown::Swap(UIDescPulldown* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(text_, other->text_);
    controlidlist_.Swap(&other->controlidlist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIDescPulldown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIDescPulldown_descriptor_;
  metadata.reflection = UIDescPulldown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddUIElementRequest::kRequestIdFieldNumber;
const int AddUIElementRequest::kControlTypeFieldNumber;
const int AddUIElementRequest::kVisibleFieldNumber;
const int AddUIElementRequest::kUiDescButtonFieldNumber;
const int AddUIElementRequest::kUiDescSliderFieldNumber;
const int AddUIElementRequest::kUiDescEditFieldNumber;
const int AddUIElementRequest::kUiDescBooleanFieldNumber;
const int AddUIElementRequest::kUiDescLabelFieldNumber;
const int AddUIElementRequest::kUiDescListFieldNumber;
const int AddUIElementRequest::kUiDescPulldownFieldNumber;
#endif  // !_MSC_VER

AddUIElementRequest::AddUIElementRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AddUIElementRequest)
}

void AddUIElementRequest::InitAsDefaultInstance() {
  AddUIElementRequest_default_oneof_instance_->uidescbutton_ = const_cast< ::AnselIpc::UIDescButton*>(&::AnselIpc::UIDescButton::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidescslider_ = const_cast< ::AnselIpc::UIDescSlider*>(&::AnselIpc::UIDescSlider::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidescedit_ = const_cast< ::AnselIpc::UIDescEdit*>(&::AnselIpc::UIDescEdit::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidescboolean_ = const_cast< ::AnselIpc::UIDescBoolean*>(&::AnselIpc::UIDescBoolean::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidesclabel_ = const_cast< ::AnselIpc::UIDescLabel*>(&::AnselIpc::UIDescLabel::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidesclist_ = const_cast< ::AnselIpc::UIDescList*>(&::AnselIpc::UIDescList::default_instance());
  AddUIElementRequest_default_oneof_instance_->uidescpulldown_ = const_cast< ::AnselIpc::UIDescPulldown*>(&::AnselIpc::UIDescPulldown::default_instance());
}

AddUIElementRequest::AddUIElementRequest(const AddUIElementRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AddUIElementRequest)
}

void AddUIElementRequest::SharedCtor() {
  _cached_size_ = 0;
  requestid_ = 0;
  controltype_ = 1;
  visible_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_controlDescription();
}

AddUIElementRequest::~AddUIElementRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.AddUIElementRequest)
  SharedDtor();
}

void AddUIElementRequest::SharedDtor() {
  if (has_controlDescription()) {
    clear_controlDescription();
  }
  if (this != default_instance_) {
  }
}

void AddUIElementRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUIElementRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddUIElementRequest_descriptor_;
}

const AddUIElementRequest& AddUIElementRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AddUIElementRequest* AddUIElementRequest::default_instance_ = NULL;

AddUIElementRequest* AddUIElementRequest::New() const {
  return new AddUIElementRequest;
}

void AddUIElementRequest::clear_controlDescription() {
  switch(controlDescription_case()) {
    case kUiDescButton: {
      delete controlDescription_.uidescbutton_;
      break;
    }
    case kUiDescSlider: {
      delete controlDescription_.uidescslider_;
      break;
    }
    case kUiDescEdit: {
      delete controlDescription_.uidescedit_;
      break;
    }
    case kUiDescBoolean: {
      delete controlDescription_.uidescboolean_;
      break;
    }
    case kUiDescLabel: {
      delete controlDescription_.uidesclabel_;
      break;
    }
    case kUiDescList: {
      delete controlDescription_.uidesclist_;
      break;
    }
    case kUiDescPulldown: {
      delete controlDescription_.uidescpulldown_;
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTROLDESCRIPTION_NOT_SET;
}


void AddUIElementRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    requestid_ = 0;
    controltype_ = 1;
    visible_ = false;
  }
  clear_controlDescription();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddUIElementRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AddUIElementRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 requestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
          set_has_requestid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_controlType;
        break;
      }

      // required .AnselIpc.ControlType controlType = 2;
      case 2: {
        if (tag == 16) {
         parse_controlType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ControlType_IsValid(value)) {
            set_controltype(static_cast< ::AnselIpc::ControlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_visible;
        break;
      }

      // optional bool visible = 3;
      case 3: {
        if (tag == 24) {
         parse_visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uiDescButton;
        break;
      }

      // optional .AnselIpc.UIDescButton uiDescButton = 4;
      case 4: {
        if (tag == 34) {
         parse_uiDescButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescbutton()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_uiDescSlider;
        break;
      }

      // optional .AnselIpc.UIDescSlider uiDescSlider = 5;
      case 5: {
        if (tag == 42) {
         parse_uiDescSlider:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescslider()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_uiDescEdit;
        break;
      }

      // optional .AnselIpc.UIDescEdit uiDescEdit = 6;
      case 6: {
        if (tag == 50) {
         parse_uiDescEdit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescedit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_uiDescBoolean;
        break;
      }

      // optional .AnselIpc.UIDescBoolean uiDescBoolean = 7;
      case 7: {
        if (tag == 58) {
         parse_uiDescBoolean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescboolean()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_uiDescLabel;
        break;
      }

      // optional .AnselIpc.UIDescLabel uiDescLabel = 8;
      case 8: {
        if (tag == 66) {
         parse_uiDescLabel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclabel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_uiDescList;
        break;
      }

      // optional .AnselIpc.UIDescList uiDescList = 9;
      case 9: {
        if (tag == 74) {
         parse_uiDescList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_uiDescPulldown;
        break;
      }

      // optional .AnselIpc.UIDescPulldown uiDescPulldown = 10;
      case 10: {
        if (tag == 82) {
         parse_uiDescPulldown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescpulldown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AddUIElementRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AddUIElementRequest)
  return false;
#undef DO_
}

void AddUIElementRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AddUIElementRequest)
  // required int32 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // required .AnselIpc.ControlType controlType = 2;
  if (has_controltype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->controltype(), output);
  }

  // optional bool visible = 3;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->visible(), output);
  }

  // optional .AnselIpc.UIDescButton uiDescButton = 4;
  if (has_uidescbutton()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uidescbutton(), output);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 5;
  if (has_uidescslider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uidescslider(), output);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 6;
  if (has_uidescedit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->uidescedit(), output);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 7;
  if (has_uidescboolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->uidescboolean(), output);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 8;
  if (has_uidesclabel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->uidesclabel(), output);
  }

  // optional .AnselIpc.UIDescList uiDescList = 9;
  if (has_uidesclist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->uidesclist(), output);
  }

  // optional .AnselIpc.UIDescPulldown uiDescPulldown = 10;
  if (has_uidescpulldown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->uidescpulldown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AddUIElementRequest)
}

::google::protobuf::uint8* AddUIElementRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AddUIElementRequest)
  // required int32 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // required .AnselIpc.ControlType controlType = 2;
  if (has_controltype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->controltype(), target);
  }

  // optional bool visible = 3;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->visible(), target);
  }

  // optional .AnselIpc.UIDescButton uiDescButton = 4;
  if (has_uidescbutton()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->uidescbutton(), target);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 5;
  if (has_uidescslider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->uidescslider(), target);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 6;
  if (has_uidescedit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->uidescedit(), target);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 7;
  if (has_uidescboolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->uidescboolean(), target);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 8;
  if (has_uidesclabel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->uidesclabel(), target);
  }

  // optional .AnselIpc.UIDescList uiDescList = 9;
  if (has_uidesclist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->uidesclist(), target);
  }

  // optional .AnselIpc.UIDescPulldown uiDescPulldown = 10;
  if (has_uidescpulldown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->uidescpulldown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AddUIElementRequest)
  return target;
}

int AddUIElementRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 requestId = 1;
    if (has_requestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requestid());
    }

    // required .AnselIpc.ControlType controlType = 2;
    if (has_controltype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->controltype());
    }

    // optional bool visible = 3;
    if (has_visible()) {
      total_size += 1 + 1;
    }

  }
  switch (controlDescription_case()) {
    // optional .AnselIpc.UIDescButton uiDescButton = 4;
    case kUiDescButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescbutton());
      break;
    }
    // optional .AnselIpc.UIDescSlider uiDescSlider = 5;
    case kUiDescSlider: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescslider());
      break;
    }
    // optional .AnselIpc.UIDescEdit uiDescEdit = 6;
    case kUiDescEdit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescedit());
      break;
    }
    // optional .AnselIpc.UIDescBoolean uiDescBoolean = 7;
    case kUiDescBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescboolean());
      break;
    }
    // optional .AnselIpc.UIDescLabel uiDescLabel = 8;
    case kUiDescLabel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclabel());
      break;
    }
    // optional .AnselIpc.UIDescList uiDescList = 9;
    case kUiDescList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclist());
      break;
    }
    // optional .AnselIpc.UIDescPulldown uiDescPulldown = 10;
    case kUiDescPulldown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescpulldown());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AddUIElementRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddUIElementRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddUIElementRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddUIElementRequest::MergeFrom(const AddUIElementRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.controlDescription_case()) {
    case kUiDescButton: {
      mutable_uidescbutton()->::AnselIpc::UIDescButton::MergeFrom(from.uidescbutton());
      break;
    }
    case kUiDescSlider: {
      mutable_uidescslider()->::AnselIpc::UIDescSlider::MergeFrom(from.uidescslider());
      break;
    }
    case kUiDescEdit: {
      mutable_uidescedit()->::AnselIpc::UIDescEdit::MergeFrom(from.uidescedit());
      break;
    }
    case kUiDescBoolean: {
      mutable_uidescboolean()->::AnselIpc::UIDescBoolean::MergeFrom(from.uidescboolean());
      break;
    }
    case kUiDescLabel: {
      mutable_uidesclabel()->::AnselIpc::UIDescLabel::MergeFrom(from.uidesclabel());
      break;
    }
    case kUiDescList: {
      mutable_uidesclist()->::AnselIpc::UIDescList::MergeFrom(from.uidesclist());
      break;
    }
    case kUiDescPulldown: {
      mutable_uidescpulldown()->::AnselIpc::UIDescPulldown::MergeFrom(from.uidescpulldown());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_controltype()) {
      set_controltype(from.controltype());
    }
    if (from.has_visible()) {
      set_visible(from.visible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddUIElementRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUIElementRequest::CopyFrom(const AddUIElementRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUIElementRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_uidesclist()) {
    if (!this->uidesclist().IsInitialized()) return false;
  }
  return true;
}

void AddUIElementRequest::Swap(AddUIElementRequest* other) {
  if (other != this) {
    std::swap(requestid_, other->requestid_);
    std::swap(controltype_, other->controltype_);
    std::swap(visible_, other->visible_);
    std::swap(controlDescription_, other->controlDescription_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddUIElementRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddUIElementRequest_descriptor_;
  metadata.reflection = AddUIElementRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddUIElementResponse::kRequestIdFieldNumber;
const int AddUIElementResponse::kStatusFieldNumber;
const int AddUIElementResponse::kUiDescButtonFieldNumber;
const int AddUIElementResponse::kUiDescSliderFieldNumber;
const int AddUIElementResponse::kUiDescEditFieldNumber;
const int AddUIElementResponse::kUiDescBooleanFieldNumber;
const int AddUIElementResponse::kUiDescLabelFieldNumber;
const int AddUIElementResponse::kUiDescListFieldNumber;
const int AddUIElementResponse::kUiDescPulldownFieldNumber;
#endif  // !_MSC_VER

AddUIElementResponse::AddUIElementResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AddUIElementResponse)
}

void AddUIElementResponse::InitAsDefaultInstance() {
  AddUIElementResponse_default_oneof_instance_->uidescbutton_ = const_cast< ::AnselIpc::UIDescButton*>(&::AnselIpc::UIDescButton::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidescslider_ = const_cast< ::AnselIpc::UIDescSlider*>(&::AnselIpc::UIDescSlider::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidescedit_ = const_cast< ::AnselIpc::UIDescEdit*>(&::AnselIpc::UIDescEdit::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidescboolean_ = const_cast< ::AnselIpc::UIDescBoolean*>(&::AnselIpc::UIDescBoolean::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidesclabel_ = const_cast< ::AnselIpc::UIDescLabel*>(&::AnselIpc::UIDescLabel::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidesclist_ = const_cast< ::AnselIpc::UIDescList*>(&::AnselIpc::UIDescList::default_instance());
  AddUIElementResponse_default_oneof_instance_->uidescpulldown_ = const_cast< ::AnselIpc::UIDescPulldown*>(&::AnselIpc::UIDescPulldown::default_instance());
}

AddUIElementResponse::AddUIElementResponse(const AddUIElementResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AddUIElementResponse)
}

void AddUIElementResponse::SharedCtor() {
  _cached_size_ = 0;
  requestid_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_controlDescription();
}

AddUIElementResponse::~AddUIElementResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.AddUIElementResponse)
  SharedDtor();
}

void AddUIElementResponse::SharedDtor() {
  if (has_controlDescription()) {
    clear_controlDescription();
  }
  if (this != default_instance_) {
  }
}

void AddUIElementResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddUIElementResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddUIElementResponse_descriptor_;
}

const AddUIElementResponse& AddUIElementResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AddUIElementResponse* AddUIElementResponse::default_instance_ = NULL;

AddUIElementResponse* AddUIElementResponse::New() const {
  return new AddUIElementResponse;
}

void AddUIElementResponse::clear_controlDescription() {
  switch(controlDescription_case()) {
    case kUiDescButton: {
      delete controlDescription_.uidescbutton_;
      break;
    }
    case kUiDescSlider: {
      delete controlDescription_.uidescslider_;
      break;
    }
    case kUiDescEdit: {
      delete controlDescription_.uidescedit_;
      break;
    }
    case kUiDescBoolean: {
      delete controlDescription_.uidescboolean_;
      break;
    }
    case kUiDescLabel: {
      delete controlDescription_.uidesclabel_;
      break;
    }
    case kUiDescList: {
      delete controlDescription_.uidesclist_;
      break;
    }
    case kUiDescPulldown: {
      delete controlDescription_.uidescpulldown_;
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTROLDESCRIPTION_NOT_SET;
}


void AddUIElementResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    requestid_ = 0;
    status_ = 1;
  }
  clear_controlDescription();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddUIElementResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AddUIElementResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 requestId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
          set_has_requestid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .AnselIpc.Status status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_uiDescButton;
        break;
      }

      // optional .AnselIpc.UIDescButton uiDescButton = 3;
      case 3: {
        if (tag == 26) {
         parse_uiDescButton:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescbutton()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uiDescSlider;
        break;
      }

      // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
      case 4: {
        if (tag == 34) {
         parse_uiDescSlider:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescslider()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_uiDescEdit;
        break;
      }

      // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
      case 5: {
        if (tag == 42) {
         parse_uiDescEdit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescedit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_uiDescBoolean;
        break;
      }

      // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
      case 6: {
        if (tag == 50) {
         parse_uiDescBoolean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescboolean()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_uiDescLabel;
        break;
      }

      // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
      case 7: {
        if (tag == 58) {
         parse_uiDescLabel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclabel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_uiDescList;
        break;
      }

      // optional .AnselIpc.UIDescList uiDescList = 8;
      case 8: {
        if (tag == 66) {
         parse_uiDescList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_uiDescPulldown;
        break;
      }

      // optional .AnselIpc.UIDescPulldown uiDescPulldown = 9;
      case 9: {
        if (tag == 74) {
         parse_uiDescPulldown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescpulldown()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AddUIElementResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AddUIElementResponse)
  return false;
#undef DO_
}

void AddUIElementResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AddUIElementResponse)
  // required int32 requestId = 1;
  if (has_requestid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->requestid(), output);
  }

  // required .AnselIpc.Status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional .AnselIpc.UIDescButton uiDescButton = 3;
  if (has_uidescbutton()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uidescbutton(), output);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
  if (has_uidescslider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uidescslider(), output);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
  if (has_uidescedit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uidescedit(), output);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
  if (has_uidescboolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->uidescboolean(), output);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
  if (has_uidesclabel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->uidesclabel(), output);
  }

  // optional .AnselIpc.UIDescList uiDescList = 8;
  if (has_uidesclist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->uidesclist(), output);
  }

  // optional .AnselIpc.UIDescPulldown uiDescPulldown = 9;
  if (has_uidescpulldown()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->uidescpulldown(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AddUIElementResponse)
}

::google::protobuf::uint8* AddUIElementResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AddUIElementResponse)
  // required int32 requestId = 1;
  if (has_requestid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->requestid(), target);
  }

  // required .AnselIpc.Status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional .AnselIpc.UIDescButton uiDescButton = 3;
  if (has_uidescbutton()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->uidescbutton(), target);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
  if (has_uidescslider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->uidescslider(), target);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
  if (has_uidescedit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->uidescedit(), target);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
  if (has_uidescboolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->uidescboolean(), target);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
  if (has_uidesclabel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->uidesclabel(), target);
  }

  // optional .AnselIpc.UIDescList uiDescList = 8;
  if (has_uidesclist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->uidesclist(), target);
  }

  // optional .AnselIpc.UIDescPulldown uiDescPulldown = 9;
  if (has_uidescpulldown()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->uidescpulldown(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AddUIElementResponse)
  return target;
}

int AddUIElementResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 requestId = 1;
    if (has_requestid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requestid());
    }

    // required .AnselIpc.Status status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  switch (controlDescription_case()) {
    // optional .AnselIpc.UIDescButton uiDescButton = 3;
    case kUiDescButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescbutton());
      break;
    }
    // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
    case kUiDescSlider: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescslider());
      break;
    }
    // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
    case kUiDescEdit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescedit());
      break;
    }
    // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
    case kUiDescBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescboolean());
      break;
    }
    // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
    case kUiDescLabel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclabel());
      break;
    }
    // optional .AnselIpc.UIDescList uiDescList = 8;
    case kUiDescList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclist());
      break;
    }
    // optional .AnselIpc.UIDescPulldown uiDescPulldown = 9;
    case kUiDescPulldown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescpulldown());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AddUIElementResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddUIElementResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddUIElementResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddUIElementResponse::MergeFrom(const AddUIElementResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.controlDescription_case()) {
    case kUiDescButton: {
      mutable_uidescbutton()->::AnselIpc::UIDescButton::MergeFrom(from.uidescbutton());
      break;
    }
    case kUiDescSlider: {
      mutable_uidescslider()->::AnselIpc::UIDescSlider::MergeFrom(from.uidescslider());
      break;
    }
    case kUiDescEdit: {
      mutable_uidescedit()->::AnselIpc::UIDescEdit::MergeFrom(from.uidescedit());
      break;
    }
    case kUiDescBoolean: {
      mutable_uidescboolean()->::AnselIpc::UIDescBoolean::MergeFrom(from.uidescboolean());
      break;
    }
    case kUiDescLabel: {
      mutable_uidesclabel()->::AnselIpc::UIDescLabel::MergeFrom(from.uidesclabel());
      break;
    }
    case kUiDescList: {
      mutable_uidesclist()->::AnselIpc::UIDescList::MergeFrom(from.uidesclist());
      break;
    }
    case kUiDescPulldown: {
      mutable_uidescpulldown()->::AnselIpc::UIDescPulldown::MergeFrom(from.uidescpulldown());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestid()) {
      set_requestid(from.requestid());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddUIElementResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUIElementResponse::CopyFrom(const AddUIElementResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUIElementResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_uidesclist()) {
    if (!this->uidesclist().IsInitialized()) return false;
  }
  return true;
}

void AddUIElementResponse::Swap(AddUIElementResponse* other) {
  if (other != this) {
    std::swap(requestid_, other->requestid_);
    std::swap(status_, other->status_);
    std::swap(controlDescription_, other->controlDescription_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddUIElementResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddUIElementResponse_descriptor_;
  metadata.reflection = AddUIElementResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlChangedRequest::kUiDescButtonFieldNumber;
const int UIControlChangedRequest::kUiDescSliderFieldNumber;
const int UIControlChangedRequest::kUiDescEditFieldNumber;
const int UIControlChangedRequest::kUiDescBooleanFieldNumber;
const int UIControlChangedRequest::kUiDescLabelFieldNumber;
const int UIControlChangedRequest::kUiDescListFieldNumber;
#endif  // !_MSC_VER

UIControlChangedRequest::UIControlChangedRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlChangedRequest)
}

void UIControlChangedRequest::InitAsDefaultInstance() {
  UIControlChangedRequest_default_oneof_instance_->uidescbutton_ = const_cast< ::AnselIpc::UIDescButton*>(&::AnselIpc::UIDescButton::default_instance());
  UIControlChangedRequest_default_oneof_instance_->uidescslider_ = const_cast< ::AnselIpc::UIDescSlider*>(&::AnselIpc::UIDescSlider::default_instance());
  UIControlChangedRequest_default_oneof_instance_->uidescedit_ = const_cast< ::AnselIpc::UIDescEdit*>(&::AnselIpc::UIDescEdit::default_instance());
  UIControlChangedRequest_default_oneof_instance_->uidescboolean_ = const_cast< ::AnselIpc::UIDescBoolean*>(&::AnselIpc::UIDescBoolean::default_instance());
  UIControlChangedRequest_default_oneof_instance_->uidesclabel_ = const_cast< ::AnselIpc::UIDescLabel*>(&::AnselIpc::UIDescLabel::default_instance());
  UIControlChangedRequest_default_oneof_instance_->uidesclist_ = const_cast< ::AnselIpc::UIDescList*>(&::AnselIpc::UIDescList::default_instance());
}

UIControlChangedRequest::UIControlChangedRequest(const UIControlChangedRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlChangedRequest)
}

void UIControlChangedRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_controlDescription();
}

UIControlChangedRequest::~UIControlChangedRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlChangedRequest)
  SharedDtor();
}

void UIControlChangedRequest::SharedDtor() {
  if (has_controlDescription()) {
    clear_controlDescription();
  }
  if (this != default_instance_) {
  }
}

void UIControlChangedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlChangedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlChangedRequest_descriptor_;
}

const UIControlChangedRequest& UIControlChangedRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlChangedRequest* UIControlChangedRequest::default_instance_ = NULL;

UIControlChangedRequest* UIControlChangedRequest::New() const {
  return new UIControlChangedRequest;
}

void UIControlChangedRequest::clear_controlDescription() {
  switch(controlDescription_case()) {
    case kUiDescButton: {
      delete controlDescription_.uidescbutton_;
      break;
    }
    case kUiDescSlider: {
      delete controlDescription_.uidescslider_;
      break;
    }
    case kUiDescEdit: {
      delete controlDescription_.uidescedit_;
      break;
    }
    case kUiDescBoolean: {
      delete controlDescription_.uidescboolean_;
      break;
    }
    case kUiDescLabel: {
      delete controlDescription_.uidesclabel_;
      break;
    }
    case kUiDescList: {
      delete controlDescription_.uidesclist_;
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTROLDESCRIPTION_NOT_SET;
}


void UIControlChangedRequest::Clear() {
  clear_controlDescription();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlChangedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlChangedRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AnselIpc.UIDescButton uiDescButton = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescbutton()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uiDescSlider;
        break;
      }

      // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
      case 4: {
        if (tag == 34) {
         parse_uiDescSlider:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescslider()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_uiDescEdit;
        break;
      }

      // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
      case 5: {
        if (tag == 42) {
         parse_uiDescEdit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescedit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_uiDescBoolean;
        break;
      }

      // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
      case 6: {
        if (tag == 50) {
         parse_uiDescBoolean:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidescboolean()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_uiDescLabel;
        break;
      }

      // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
      case 7: {
        if (tag == 58) {
         parse_uiDescLabel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclabel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_uiDescList;
        break;
      }

      // optional .AnselIpc.UIDescList uiDescList = 8;
      case 8: {
        if (tag == 66) {
         parse_uiDescList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uidesclist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlChangedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlChangedRequest)
  return false;
#undef DO_
}

void UIControlChangedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlChangedRequest)
  // optional .AnselIpc.UIDescButton uiDescButton = 3;
  if (has_uidescbutton()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uidescbutton(), output);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
  if (has_uidescslider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->uidescslider(), output);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
  if (has_uidescedit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->uidescedit(), output);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
  if (has_uidescboolean()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->uidescboolean(), output);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
  if (has_uidesclabel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->uidesclabel(), output);
  }

  // optional .AnselIpc.UIDescList uiDescList = 8;
  if (has_uidesclist()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->uidesclist(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlChangedRequest)
}

::google::protobuf::uint8* UIControlChangedRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlChangedRequest)
  // optional .AnselIpc.UIDescButton uiDescButton = 3;
  if (has_uidescbutton()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->uidescbutton(), target);
  }

  // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
  if (has_uidescslider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->uidescslider(), target);
  }

  // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
  if (has_uidescedit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->uidescedit(), target);
  }

  // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
  if (has_uidescboolean()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->uidescboolean(), target);
  }

  // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
  if (has_uidesclabel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->uidesclabel(), target);
  }

  // optional .AnselIpc.UIDescList uiDescList = 8;
  if (has_uidesclist()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->uidesclist(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlChangedRequest)
  return target;
}

int UIControlChangedRequest::ByteSize() const {
  int total_size = 0;

  switch (controlDescription_case()) {
    // optional .AnselIpc.UIDescButton uiDescButton = 3;
    case kUiDescButton: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescbutton());
      break;
    }
    // optional .AnselIpc.UIDescSlider uiDescSlider = 4;
    case kUiDescSlider: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescslider());
      break;
    }
    // optional .AnselIpc.UIDescEdit uiDescEdit = 5;
    case kUiDescEdit: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescedit());
      break;
    }
    // optional .AnselIpc.UIDescBoolean uiDescBoolean = 6;
    case kUiDescBoolean: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidescboolean());
      break;
    }
    // optional .AnselIpc.UIDescLabel uiDescLabel = 7;
    case kUiDescLabel: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclabel());
      break;
    }
    // optional .AnselIpc.UIDescList uiDescList = 8;
    case kUiDescList: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uidesclist());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlChangedRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlChangedRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlChangedRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlChangedRequest::MergeFrom(const UIControlChangedRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.controlDescription_case()) {
    case kUiDescButton: {
      mutable_uidescbutton()->::AnselIpc::UIDescButton::MergeFrom(from.uidescbutton());
      break;
    }
    case kUiDescSlider: {
      mutable_uidescslider()->::AnselIpc::UIDescSlider::MergeFrom(from.uidescslider());
      break;
    }
    case kUiDescEdit: {
      mutable_uidescedit()->::AnselIpc::UIDescEdit::MergeFrom(from.uidescedit());
      break;
    }
    case kUiDescBoolean: {
      mutable_uidescboolean()->::AnselIpc::UIDescBoolean::MergeFrom(from.uidescboolean());
      break;
    }
    case kUiDescLabel: {
      mutable_uidesclabel()->::AnselIpc::UIDescLabel::MergeFrom(from.uidesclabel());
      break;
    }
    case kUiDescList: {
      mutable_uidesclist()->::AnselIpc::UIDescList::MergeFrom(from.uidesclist());
      break;
    }
    case CONTROLDESCRIPTION_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlChangedRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlChangedRequest::CopyFrom(const UIControlChangedRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlChangedRequest::IsInitialized() const {

  if (has_uidesclist()) {
    if (!this->uidesclist().IsInitialized()) return false;
  }
  return true;
}

void UIControlChangedRequest::Swap(UIControlChangedRequest* other) {
  if (other != this) {
    std::swap(controlDescription_, other->controlDescription_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlChangedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlChangedRequest_descriptor_;
  metadata.reflection = UIControlChangedRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlChangedResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UIControlChangedResponse::UIControlChangedResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlChangedResponse)
}

void UIControlChangedResponse::InitAsDefaultInstance() {
}

UIControlChangedResponse::UIControlChangedResponse(const UIControlChangedResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlChangedResponse)
}

void UIControlChangedResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlChangedResponse::~UIControlChangedResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlChangedResponse)
  SharedDtor();
}

void UIControlChangedResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlChangedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlChangedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlChangedResponse_descriptor_;
}

const UIControlChangedResponse& UIControlChangedResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlChangedResponse* UIControlChangedResponse::default_instance_ = NULL;

UIControlChangedResponse* UIControlChangedResponse::New() const {
  return new UIControlChangedResponse;
}

void UIControlChangedResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlChangedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlChangedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlChangedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlChangedResponse)
  return false;
#undef DO_
}

void UIControlChangedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlChangedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlChangedResponse)
}

::google::protobuf::uint8* UIControlChangedResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlChangedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlChangedResponse)
  return target;
}

int UIControlChangedResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlChangedResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlChangedResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlChangedResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlChangedResponse::MergeFrom(const UIControlChangedResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlChangedResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlChangedResponse::CopyFrom(const UIControlChangedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlChangedResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlChangedResponse::Swap(UIControlChangedResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlChangedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlChangedResponse_descriptor_;
  metadata.reflection = UIControlChangedResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

UIControlRemoveAllRequest::UIControlRemoveAllRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlRemoveAllRequest)
}

void UIControlRemoveAllRequest::InitAsDefaultInstance() {
}

UIControlRemoveAllRequest::UIControlRemoveAllRequest(const UIControlRemoveAllRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlRemoveAllRequest)
}

void UIControlRemoveAllRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlRemoveAllRequest::~UIControlRemoveAllRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlRemoveAllRequest)
  SharedDtor();
}

void UIControlRemoveAllRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlRemoveAllRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlRemoveAllRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlRemoveAllRequest_descriptor_;
}

const UIControlRemoveAllRequest& UIControlRemoveAllRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlRemoveAllRequest* UIControlRemoveAllRequest::default_instance_ = NULL;

UIControlRemoveAllRequest* UIControlRemoveAllRequest::New() const {
  return new UIControlRemoveAllRequest;
}

void UIControlRemoveAllRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlRemoveAllRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlRemoveAllRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlRemoveAllRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlRemoveAllRequest)
  return false;
#undef DO_
}

void UIControlRemoveAllRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlRemoveAllRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlRemoveAllRequest)
}

::google::protobuf::uint8* UIControlRemoveAllRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlRemoveAllRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlRemoveAllRequest)
  return target;
}

int UIControlRemoveAllRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlRemoveAllRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlRemoveAllRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlRemoveAllRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlRemoveAllRequest::MergeFrom(const UIControlRemoveAllRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlRemoveAllRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlRemoveAllRequest::CopyFrom(const UIControlRemoveAllRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlRemoveAllRequest::IsInitialized() const {

  return true;
}

void UIControlRemoveAllRequest::Swap(UIControlRemoveAllRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlRemoveAllRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlRemoveAllRequest_descriptor_;
  metadata.reflection = UIControlRemoveAllRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlRemoveAllResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UIControlRemoveAllResponse::UIControlRemoveAllResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlRemoveAllResponse)
}

void UIControlRemoveAllResponse::InitAsDefaultInstance() {
}

UIControlRemoveAllResponse::UIControlRemoveAllResponse(const UIControlRemoveAllResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlRemoveAllResponse)
}

void UIControlRemoveAllResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlRemoveAllResponse::~UIControlRemoveAllResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlRemoveAllResponse)
  SharedDtor();
}

void UIControlRemoveAllResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlRemoveAllResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlRemoveAllResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlRemoveAllResponse_descriptor_;
}

const UIControlRemoveAllResponse& UIControlRemoveAllResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlRemoveAllResponse* UIControlRemoveAllResponse::default_instance_ = NULL;

UIControlRemoveAllResponse* UIControlRemoveAllResponse::New() const {
  return new UIControlRemoveAllResponse;
}

void UIControlRemoveAllResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlRemoveAllResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlRemoveAllResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlRemoveAllResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlRemoveAllResponse)
  return false;
#undef DO_
}

void UIControlRemoveAllResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlRemoveAllResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlRemoveAllResponse)
}

::google::protobuf::uint8* UIControlRemoveAllResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlRemoveAllResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlRemoveAllResponse)
  return target;
}

int UIControlRemoveAllResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlRemoveAllResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlRemoveAllResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlRemoveAllResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlRemoveAllResponse::MergeFrom(const UIControlRemoveAllResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlRemoveAllResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlRemoveAllResponse::CopyFrom(const UIControlRemoveAllResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlRemoveAllResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlRemoveAllResponse::Swap(UIControlRemoveAllResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlRemoveAllResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlRemoveAllResponse_descriptor_;
  metadata.reflection = UIControlRemoveAllResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlRemoveRequest::kIdFieldNumber;
#endif  // !_MSC_VER

UIControlRemoveRequest::UIControlRemoveRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlRemoveRequest)
}

void UIControlRemoveRequest::InitAsDefaultInstance() {
}

UIControlRemoveRequest::UIControlRemoveRequest(const UIControlRemoveRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlRemoveRequest)
}

void UIControlRemoveRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlRemoveRequest::~UIControlRemoveRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlRemoveRequest)
  SharedDtor();
}

void UIControlRemoveRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlRemoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlRemoveRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlRemoveRequest_descriptor_;
}

const UIControlRemoveRequest& UIControlRemoveRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlRemoveRequest* UIControlRemoveRequest::default_instance_ = NULL;

UIControlRemoveRequest* UIControlRemoveRequest::New() const {
  return new UIControlRemoveRequest;
}

void UIControlRemoveRequest::Clear() {
  id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlRemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlRemoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 id = 1;
      case 1: {
        if (tag == 8) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_id())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_id;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlRemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlRemoveRequest)
  return false;
#undef DO_
}

void UIControlRemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlRemoveRequest)
  // repeated int32 id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->id(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlRemoveRequest)
}

::google::protobuf::uint8* UIControlRemoveRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlRemoveRequest)
  // repeated int32 id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->id(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlRemoveRequest)
  return target;
}

int UIControlRemoveRequest::ByteSize() const {
  int total_size = 0;

  // repeated int32 id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->id(i));
    }
    total_size += 1 * this->id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlRemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlRemoveRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlRemoveRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlRemoveRequest::MergeFrom(const UIControlRemoveRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlRemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlRemoveRequest::CopyFrom(const UIControlRemoveRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlRemoveRequest::IsInitialized() const {

  return true;
}

void UIControlRemoveRequest::Swap(UIControlRemoveRequest* other) {
  if (other != this) {
    id_.Swap(&other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlRemoveRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlRemoveRequest_descriptor_;
  metadata.reflection = UIControlRemoveRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlRemoveResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UIControlRemoveResponse::UIControlRemoveResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlRemoveResponse)
}

void UIControlRemoveResponse::InitAsDefaultInstance() {
}

UIControlRemoveResponse::UIControlRemoveResponse(const UIControlRemoveResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlRemoveResponse)
}

void UIControlRemoveResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlRemoveResponse::~UIControlRemoveResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlRemoveResponse)
  SharedDtor();
}

void UIControlRemoveResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlRemoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlRemoveResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlRemoveResponse_descriptor_;
}

const UIControlRemoveResponse& UIControlRemoveResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlRemoveResponse* UIControlRemoveResponse::default_instance_ = NULL;

UIControlRemoveResponse* UIControlRemoveResponse::New() const {
  return new UIControlRemoveResponse;
}

void UIControlRemoveResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlRemoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlRemoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlRemoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlRemoveResponse)
  return false;
#undef DO_
}

void UIControlRemoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlRemoveResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlRemoveResponse)
}

::google::protobuf::uint8* UIControlRemoveResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlRemoveResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlRemoveResponse)
  return target;
}

int UIControlRemoveResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlRemoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlRemoveResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlRemoveResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlRemoveResponse::MergeFrom(const UIControlRemoveResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlRemoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlRemoveResponse::CopyFrom(const UIControlRemoveResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlRemoveResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlRemoveResponse::Swap(UIControlRemoveResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlRemoveResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlRemoveResponse_descriptor_;
  metadata.reflection = UIControlRemoveResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlSetVisibilityRequest::kIdFieldNumber;
const int UIControlSetVisibilityRequest::kVisibleFieldNumber;
#endif  // !_MSC_VER

UIControlSetVisibilityRequest::UIControlSetVisibilityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlSetVisibilityRequest)
}

void UIControlSetVisibilityRequest::InitAsDefaultInstance() {
}

UIControlSetVisibilityRequest::UIControlSetVisibilityRequest(const UIControlSetVisibilityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlSetVisibilityRequest)
}

void UIControlSetVisibilityRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  visible_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlSetVisibilityRequest::~UIControlSetVisibilityRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlSetVisibilityRequest)
  SharedDtor();
}

void UIControlSetVisibilityRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlSetVisibilityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlSetVisibilityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlSetVisibilityRequest_descriptor_;
}

const UIControlSetVisibilityRequest& UIControlSetVisibilityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlSetVisibilityRequest* UIControlSetVisibilityRequest::default_instance_ = NULL;

UIControlSetVisibilityRequest* UIControlSetVisibilityRequest::New() const {
  return new UIControlSetVisibilityRequest;
}

void UIControlSetVisibilityRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<UIControlSetVisibilityRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(id_, visible_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlSetVisibilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlSetVisibilityRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_visible;
        break;
      }

      // required bool visible = 2;
      case 2: {
        if (tag == 16) {
         parse_visible:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlSetVisibilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlSetVisibilityRequest)
  return false;
#undef DO_
}

void UIControlSetVisibilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlSetVisibilityRequest)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required bool visible = 2;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->visible(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlSetVisibilityRequest)
}

::google::protobuf::uint8* UIControlSetVisibilityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlSetVisibilityRequest)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required bool visible = 2;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->visible(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlSetVisibilityRequest)
  return target;
}

int UIControlSetVisibilityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required bool visible = 2;
    if (has_visible()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlSetVisibilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlSetVisibilityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlSetVisibilityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlSetVisibilityRequest::MergeFrom(const UIControlSetVisibilityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_visible()) {
      set_visible(from.visible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlSetVisibilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlSetVisibilityRequest::CopyFrom(const UIControlSetVisibilityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlSetVisibilityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UIControlSetVisibilityRequest::Swap(UIControlSetVisibilityRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(visible_, other->visible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlSetVisibilityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlSetVisibilityRequest_descriptor_;
  metadata.reflection = UIControlSetVisibilityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlSetVisibilityResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UIControlSetVisibilityResponse::UIControlSetVisibilityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlSetVisibilityResponse)
}

void UIControlSetVisibilityResponse::InitAsDefaultInstance() {
}

UIControlSetVisibilityResponse::UIControlSetVisibilityResponse(const UIControlSetVisibilityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlSetVisibilityResponse)
}

void UIControlSetVisibilityResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlSetVisibilityResponse::~UIControlSetVisibilityResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlSetVisibilityResponse)
  SharedDtor();
}

void UIControlSetVisibilityResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlSetVisibilityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlSetVisibilityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlSetVisibilityResponse_descriptor_;
}

const UIControlSetVisibilityResponse& UIControlSetVisibilityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlSetVisibilityResponse* UIControlSetVisibilityResponse::default_instance_ = NULL;

UIControlSetVisibilityResponse* UIControlSetVisibilityResponse::New() const {
  return new UIControlSetVisibilityResponse;
}

void UIControlSetVisibilityResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlSetVisibilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlSetVisibilityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlSetVisibilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlSetVisibilityResponse)
  return false;
#undef DO_
}

void UIControlSetVisibilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlSetVisibilityResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlSetVisibilityResponse)
}

::google::protobuf::uint8* UIControlSetVisibilityResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlSetVisibilityResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlSetVisibilityResponse)
  return target;
}

int UIControlSetVisibilityResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlSetVisibilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlSetVisibilityResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlSetVisibilityResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlSetVisibilityResponse::MergeFrom(const UIControlSetVisibilityResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlSetVisibilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlSetVisibilityResponse::CopyFrom(const UIControlSetVisibilityResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlSetVisibilityResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlSetVisibilityResponse::Swap(UIControlSetVisibilityResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlSetVisibilityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlSetVisibilityResponse_descriptor_;
  metadata.reflection = UIControlSetVisibilityResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlGetVisibilityRequest::kIdFieldNumber;
#endif  // !_MSC_VER

UIControlGetVisibilityRequest::UIControlGetVisibilityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlGetVisibilityRequest)
}

void UIControlGetVisibilityRequest::InitAsDefaultInstance() {
}

UIControlGetVisibilityRequest::UIControlGetVisibilityRequest(const UIControlGetVisibilityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlGetVisibilityRequest)
}

void UIControlGetVisibilityRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlGetVisibilityRequest::~UIControlGetVisibilityRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlGetVisibilityRequest)
  SharedDtor();
}

void UIControlGetVisibilityRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlGetVisibilityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlGetVisibilityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlGetVisibilityRequest_descriptor_;
}

const UIControlGetVisibilityRequest& UIControlGetVisibilityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlGetVisibilityRequest* UIControlGetVisibilityRequest::default_instance_ = NULL;

UIControlGetVisibilityRequest* UIControlGetVisibilityRequest::New() const {
  return new UIControlGetVisibilityRequest;
}

void UIControlGetVisibilityRequest::Clear() {
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlGetVisibilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlGetVisibilityRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlGetVisibilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlGetVisibilityRequest)
  return false;
#undef DO_
}

void UIControlGetVisibilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlGetVisibilityRequest)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlGetVisibilityRequest)
}

::google::protobuf::uint8* UIControlGetVisibilityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlGetVisibilityRequest)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlGetVisibilityRequest)
  return target;
}

int UIControlGetVisibilityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlGetVisibilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlGetVisibilityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlGetVisibilityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlGetVisibilityRequest::MergeFrom(const UIControlGetVisibilityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlGetVisibilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlGetVisibilityRequest::CopyFrom(const UIControlGetVisibilityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlGetVisibilityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlGetVisibilityRequest::Swap(UIControlGetVisibilityRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlGetVisibilityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlGetVisibilityRequest_descriptor_;
  metadata.reflection = UIControlGetVisibilityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UIControlGetVisibilityResponse::kVisibleFieldNumber;
#endif  // !_MSC_VER

UIControlGetVisibilityResponse::UIControlGetVisibilityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UIControlGetVisibilityResponse)
}

void UIControlGetVisibilityResponse::InitAsDefaultInstance() {
}

UIControlGetVisibilityResponse::UIControlGetVisibilityResponse(const UIControlGetVisibilityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UIControlGetVisibilityResponse)
}

void UIControlGetVisibilityResponse::SharedCtor() {
  _cached_size_ = 0;
  visible_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UIControlGetVisibilityResponse::~UIControlGetVisibilityResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UIControlGetVisibilityResponse)
  SharedDtor();
}

void UIControlGetVisibilityResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UIControlGetVisibilityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UIControlGetVisibilityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UIControlGetVisibilityResponse_descriptor_;
}

const UIControlGetVisibilityResponse& UIControlGetVisibilityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UIControlGetVisibilityResponse* UIControlGetVisibilityResponse::default_instance_ = NULL;

UIControlGetVisibilityResponse* UIControlGetVisibilityResponse::New() const {
  return new UIControlGetVisibilityResponse;
}

void UIControlGetVisibilityResponse::Clear() {
  visible_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UIControlGetVisibilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UIControlGetVisibilityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool visible = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
          set_has_visible();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UIControlGetVisibilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UIControlGetVisibilityResponse)
  return false;
#undef DO_
}

void UIControlGetVisibilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UIControlGetVisibilityResponse)
  // required bool visible = 1;
  if (has_visible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UIControlGetVisibilityResponse)
}

::google::protobuf::uint8* UIControlGetVisibilityResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UIControlGetVisibilityResponse)
  // required bool visible = 1;
  if (has_visible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UIControlGetVisibilityResponse)
  return target;
}

int UIControlGetVisibilityResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool visible = 1;
    if (has_visible()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UIControlGetVisibilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UIControlGetVisibilityResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UIControlGetVisibilityResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UIControlGetVisibilityResponse::MergeFrom(const UIControlGetVisibilityResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_visible()) {
      set_visible(from.visible());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UIControlGetVisibilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UIControlGetVisibilityResponse::CopyFrom(const UIControlGetVisibilityResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UIControlGetVisibilityResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UIControlGetVisibilityResponse::Swap(UIControlGetVisibilityResponse* other) {
  if (other != this) {
    std::swap(visible_, other->visible_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UIControlGetVisibilityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UIControlGetVisibilityResponse_descriptor_;
  metadata.reflection = UIControlGetVisibilityResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetGameSpecificControlsRequest::GetGameSpecificControlsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetGameSpecificControlsRequest)
}

void GetGameSpecificControlsRequest::InitAsDefaultInstance() {
}

GetGameSpecificControlsRequest::GetGameSpecificControlsRequest(const GetGameSpecificControlsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetGameSpecificControlsRequest)
}

void GetGameSpecificControlsRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetGameSpecificControlsRequest::~GetGameSpecificControlsRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetGameSpecificControlsRequest)
  SharedDtor();
}

void GetGameSpecificControlsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetGameSpecificControlsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameSpecificControlsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetGameSpecificControlsRequest_descriptor_;
}

const GetGameSpecificControlsRequest& GetGameSpecificControlsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetGameSpecificControlsRequest* GetGameSpecificControlsRequest::default_instance_ = NULL;

GetGameSpecificControlsRequest* GetGameSpecificControlsRequest::New() const {
  return new GetGameSpecificControlsRequest;
}

void GetGameSpecificControlsRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetGameSpecificControlsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetGameSpecificControlsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetGameSpecificControlsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetGameSpecificControlsRequest)
  return false;
#undef DO_
}

void GetGameSpecificControlsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetGameSpecificControlsRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetGameSpecificControlsRequest)
}

::google::protobuf::uint8* GetGameSpecificControlsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetGameSpecificControlsRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetGameSpecificControlsRequest)
  return target;
}

int GetGameSpecificControlsRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetGameSpecificControlsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetGameSpecificControlsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetGameSpecificControlsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetGameSpecificControlsRequest::MergeFrom(const GetGameSpecificControlsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetGameSpecificControlsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameSpecificControlsRequest::CopyFrom(const GetGameSpecificControlsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameSpecificControlsRequest::IsInitialized() const {

  return true;
}

void GetGameSpecificControlsRequest::Swap(GetGameSpecificControlsRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetGameSpecificControlsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetGameSpecificControlsRequest_descriptor_;
  metadata.reflection = GetGameSpecificControlsRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetSettingsRequest::GetSettingsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetSettingsRequest)
}

void GetSettingsRequest::InitAsDefaultInstance() {
}

GetSettingsRequest::GetSettingsRequest(const GetSettingsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetSettingsRequest)
}

void GetSettingsRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSettingsRequest::~GetSettingsRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetSettingsRequest)
  SharedDtor();
}

void GetSettingsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetSettingsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSettingsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSettingsRequest_descriptor_;
}

const GetSettingsRequest& GetSettingsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetSettingsRequest* GetSettingsRequest::default_instance_ = NULL;

GetSettingsRequest* GetSettingsRequest::New() const {
  return new GetSettingsRequest;
}

void GetSettingsRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSettingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetSettingsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetSettingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetSettingsRequest)
  return false;
#undef DO_
}

void GetSettingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetSettingsRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetSettingsRequest)
}

::google::protobuf::uint8* GetSettingsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetSettingsRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetSettingsRequest)
  return target;
}

int GetSettingsRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetSettingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSettingsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSettingsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSettingsRequest::MergeFrom(const GetSettingsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSettingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSettingsRequest::CopyFrom(const GetSettingsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSettingsRequest::IsInitialized() const {

  return true;
}

void GetSettingsRequest::Swap(GetSettingsRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetSettingsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSettingsRequest_descriptor_;
  metadata.reflection = GetSettingsRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetSettingsResponse_Setting::kNameFieldNumber;
const int GetSettingsResponse_Setting::kValueFieldNumber;
#endif  // !_MSC_VER

GetSettingsResponse_Setting::GetSettingsResponse_Setting()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetSettingsResponse.Setting)
}

void GetSettingsResponse_Setting::InitAsDefaultInstance() {
}

GetSettingsResponse_Setting::GetSettingsResponse_Setting(const GetSettingsResponse_Setting& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetSettingsResponse.Setting)
}

void GetSettingsResponse_Setting::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSettingsResponse_Setting::~GetSettingsResponse_Setting() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetSettingsResponse.Setting)
  SharedDtor();
}

void GetSettingsResponse_Setting::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (this != default_instance_) {
  }
}

void GetSettingsResponse_Setting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSettingsResponse_Setting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSettingsResponse_Setting_descriptor_;
}

const GetSettingsResponse_Setting& GetSettingsResponse_Setting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetSettingsResponse_Setting* GetSettingsResponse_Setting::default_instance_ = NULL;

GetSettingsResponse_Setting* GetSettingsResponse_Setting::New() const {
  return new GetSettingsResponse_Setting;
}

void GetSettingsResponse_Setting::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        value_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSettingsResponse_Setting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetSettingsResponse.Setting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetSettingsResponse.Setting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetSettingsResponse.Setting)
  return false;
#undef DO_
}

void GetSettingsResponse_Setting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetSettingsResponse.Setting)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetSettingsResponse.Setting)
}

::google::protobuf::uint8* GetSettingsResponse_Setting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetSettingsResponse.Setting)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetSettingsResponse.Setting)
  return target;
}

int GetSettingsResponse_Setting::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetSettingsResponse_Setting::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSettingsResponse_Setting* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSettingsResponse_Setting*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSettingsResponse_Setting::MergeFrom(const GetSettingsResponse_Setting& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSettingsResponse_Setting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSettingsResponse_Setting::CopyFrom(const GetSettingsResponse_Setting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSettingsResponse_Setting::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetSettingsResponse_Setting::Swap(GetSettingsResponse_Setting* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetSettingsResponse_Setting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSettingsResponse_Setting_descriptor_;
  metadata.reflection = GetSettingsResponse_Setting_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int GetSettingsResponse::kSettingsFieldNumber;
#endif  // !_MSC_VER

GetSettingsResponse::GetSettingsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetSettingsResponse)
}

void GetSettingsResponse::InitAsDefaultInstance() {
}

GetSettingsResponse::GetSettingsResponse(const GetSettingsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetSettingsResponse)
}

void GetSettingsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetSettingsResponse::~GetSettingsResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetSettingsResponse)
  SharedDtor();
}

void GetSettingsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetSettingsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSettingsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetSettingsResponse_descriptor_;
}

const GetSettingsResponse& GetSettingsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetSettingsResponse* GetSettingsResponse::default_instance_ = NULL;

GetSettingsResponse* GetSettingsResponse::New() const {
  return new GetSettingsResponse;
}

void GetSettingsResponse::Clear() {
  settings_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetSettingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetSettingsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AnselIpc.GetSettingsResponse.Setting settings = 1;
      case 1: {
        if (tag == 10) {
         parse_settings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_settings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_settings;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetSettingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetSettingsResponse)
  return false;
#undef DO_
}

void GetSettingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetSettingsResponse)
  // repeated .AnselIpc.GetSettingsResponse.Setting settings = 1;
  for (int i = 0; i < this->settings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->settings(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetSettingsResponse)
}

::google::protobuf::uint8* GetSettingsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetSettingsResponse)
  // repeated .AnselIpc.GetSettingsResponse.Setting settings = 1;
  for (int i = 0; i < this->settings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->settings(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetSettingsResponse)
  return target;
}

int GetSettingsResponse::ByteSize() const {
  int total_size = 0;

  // repeated .AnselIpc.GetSettingsResponse.Setting settings = 1;
  total_size += 1 * this->settings_size();
  for (int i = 0; i < this->settings_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->settings(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetSettingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetSettingsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetSettingsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetSettingsResponse::MergeFrom(const GetSettingsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  settings_.MergeFrom(from.settings_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetSettingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSettingsResponse::CopyFrom(const GetSettingsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSettingsResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->settings())) return false;
  return true;
}

void GetSettingsResponse::Swap(GetSettingsResponse* other) {
  if (other != this) {
    settings_.Swap(&other->settings_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetSettingsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetSettingsResponse_descriptor_;
  metadata.reflection = GetSettingsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFeatureSetRequest::kRequestorsIPCVersionFieldNumber;
#endif  // !_MSC_VER

GetFeatureSetRequest::GetFeatureSetRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFeatureSetRequest)
}

void GetFeatureSetRequest::InitAsDefaultInstance() {
  requestorsipcversion_ = const_cast< ::AnselIpc::IpcVersionResponse*>(&::AnselIpc::IpcVersionResponse::default_instance());
}

GetFeatureSetRequest::GetFeatureSetRequest(const GetFeatureSetRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFeatureSetRequest)
}

void GetFeatureSetRequest::SharedCtor() {
  _cached_size_ = 0;
  requestorsipcversion_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFeatureSetRequest::~GetFeatureSetRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFeatureSetRequest)
  SharedDtor();
}

void GetFeatureSetRequest::SharedDtor() {
  if (this != default_instance_) {
    delete requestorsipcversion_;
  }
}

void GetFeatureSetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFeatureSetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFeatureSetRequest_descriptor_;
}

const GetFeatureSetRequest& GetFeatureSetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFeatureSetRequest* GetFeatureSetRequest::default_instance_ = NULL;

GetFeatureSetRequest* GetFeatureSetRequest::New() const {
  return new GetFeatureSetRequest;
}

void GetFeatureSetRequest::Clear() {
  if (has_requestorsipcversion()) {
    if (requestorsipcversion_ != NULL) requestorsipcversion_->::AnselIpc::IpcVersionResponse::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFeatureSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFeatureSetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AnselIpc.IpcVersionResponse requestorsIPCVersion = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_requestorsipcversion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFeatureSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFeatureSetRequest)
  return false;
#undef DO_
}

void GetFeatureSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFeatureSetRequest)
  // optional .AnselIpc.IpcVersionResponse requestorsIPCVersion = 1;
  if (has_requestorsipcversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->requestorsipcversion(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFeatureSetRequest)
}

::google::protobuf::uint8* GetFeatureSetRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFeatureSetRequest)
  // optional .AnselIpc.IpcVersionResponse requestorsIPCVersion = 1;
  if (has_requestorsipcversion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->requestorsipcversion(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFeatureSetRequest)
  return target;
}

int GetFeatureSetRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .AnselIpc.IpcVersionResponse requestorsIPCVersion = 1;
    if (has_requestorsipcversion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->requestorsipcversion());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFeatureSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFeatureSetRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFeatureSetRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFeatureSetRequest::MergeFrom(const GetFeatureSetRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_requestorsipcversion()) {
      mutable_requestorsipcversion()->::AnselIpc::IpcVersionResponse::MergeFrom(from.requestorsipcversion());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFeatureSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeatureSetRequest::CopyFrom(const GetFeatureSetRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureSetRequest::IsInitialized() const {

  if (has_requestorsipcversion()) {
    if (!this->requestorsipcversion().IsInitialized()) return false;
  }
  return true;
}

void GetFeatureSetRequest::Swap(GetFeatureSetRequest* other) {
  if (other != this) {
    std::swap(requestorsipcversion_, other->requestorsipcversion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFeatureSetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFeatureSetRequest_descriptor_;
  metadata.reflection = GetFeatureSetRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFeatureSetResponse::kSdkDetectedFieldNumber;
const int GetFeatureSetResponse::kModsAvailableFieldNumber;
const int GetFeatureSetResponse::kRestyleAvailableFieldNumber;
const int GetFeatureSetResponse::kAllowOfflineFieldNumber;
#endif  // !_MSC_VER

GetFeatureSetResponse::GetFeatureSetResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFeatureSetResponse)
}

void GetFeatureSetResponse::InitAsDefaultInstance() {
}

GetFeatureSetResponse::GetFeatureSetResponse(const GetFeatureSetResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFeatureSetResponse)
}

void GetFeatureSetResponse::SharedCtor() {
  _cached_size_ = 0;
  sdkdetected_ = false;
  modsavailable_ = false;
  restyleavailable_ = false;
  allowoffline_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFeatureSetResponse::~GetFeatureSetResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFeatureSetResponse)
  SharedDtor();
}

void GetFeatureSetResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFeatureSetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFeatureSetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFeatureSetResponse_descriptor_;
}

const GetFeatureSetResponse& GetFeatureSetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFeatureSetResponse* GetFeatureSetResponse::default_instance_ = NULL;

GetFeatureSetResponse* GetFeatureSetResponse::New() const {
  return new GetFeatureSetResponse;
}

void GetFeatureSetResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetFeatureSetResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(sdkdetected_, allowoffline_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFeatureSetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFeatureSetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool sdkDetected = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sdkdetected_)));
          set_has_sdkdetected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_modsAvailable;
        break;
      }

      // required bool modsAvailable = 2;
      case 2: {
        if (tag == 16) {
         parse_modsAvailable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &modsavailable_)));
          set_has_modsavailable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_restyleAvailable;
        break;
      }

      // required bool restyleAvailable = 3;
      case 3: {
        if (tag == 24) {
         parse_restyleAvailable:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restyleavailable_)));
          set_has_restyleavailable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_allowOffline;
        break;
      }

      // optional bool allowOffline = 4;
      case 4: {
        if (tag == 32) {
         parse_allowOffline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allowoffline_)));
          set_has_allowoffline();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFeatureSetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFeatureSetResponse)
  return false;
#undef DO_
}

void GetFeatureSetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFeatureSetResponse)
  // required bool sdkDetected = 1;
  if (has_sdkdetected()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->sdkdetected(), output);
  }

  // required bool modsAvailable = 2;
  if (has_modsavailable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->modsavailable(), output);
  }

  // required bool restyleAvailable = 3;
  if (has_restyleavailable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->restyleavailable(), output);
  }

  // optional bool allowOffline = 4;
  if (has_allowoffline()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->allowoffline(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFeatureSetResponse)
}

::google::protobuf::uint8* GetFeatureSetResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFeatureSetResponse)
  // required bool sdkDetected = 1;
  if (has_sdkdetected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->sdkdetected(), target);
  }

  // required bool modsAvailable = 2;
  if (has_modsavailable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->modsavailable(), target);
  }

  // required bool restyleAvailable = 3;
  if (has_restyleavailable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->restyleavailable(), target);
  }

  // optional bool allowOffline = 4;
  if (has_allowoffline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->allowoffline(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFeatureSetResponse)
  return target;
}

int GetFeatureSetResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool sdkDetected = 1;
    if (has_sdkdetected()) {
      total_size += 1 + 1;
    }

    // required bool modsAvailable = 2;
    if (has_modsavailable()) {
      total_size += 1 + 1;
    }

    // required bool restyleAvailable = 3;
    if (has_restyleavailable()) {
      total_size += 1 + 1;
    }

    // optional bool allowOffline = 4;
    if (has_allowoffline()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFeatureSetResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFeatureSetResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFeatureSetResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFeatureSetResponse::MergeFrom(const GetFeatureSetResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sdkdetected()) {
      set_sdkdetected(from.sdkdetected());
    }
    if (from.has_modsavailable()) {
      set_modsavailable(from.modsavailable());
    }
    if (from.has_restyleavailable()) {
      set_restyleavailable(from.restyleavailable());
    }
    if (from.has_allowoffline()) {
      set_allowoffline(from.allowoffline());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFeatureSetResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeatureSetResponse::CopyFrom(const GetFeatureSetResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureSetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetFeatureSetResponse::Swap(GetFeatureSetResponse* other) {
  if (other != this) {
    std::swap(sdkdetected_, other->sdkdetected_);
    std::swap(modsavailable_, other->modsavailable_);
    std::swap(restyleavailable_, other->restyleavailable_);
    std::swap(allowoffline_, other->allowoffline_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFeatureSetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFeatureSetResponse_descriptor_;
  metadata.reflection = GetFeatureSetResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetCMSInfoRequest::kCmsidFieldNumber;
const int SetCMSInfoRequest::kShortNameFieldNumber;
#endif  // !_MSC_VER

SetCMSInfoRequest::SetCMSInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetCMSInfoRequest)
}

void SetCMSInfoRequest::InitAsDefaultInstance() {
}

SetCMSInfoRequest::SetCMSInfoRequest(const SetCMSInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetCMSInfoRequest)
}

void SetCMSInfoRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  cmsid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetCMSInfoRequest::~SetCMSInfoRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetCMSInfoRequest)
  SharedDtor();
}

void SetCMSInfoRequest::SharedDtor() {
  if (cmsid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cmsid_;
  }
  if (shortname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete shortname_;
  }
  if (this != default_instance_) {
  }
}

void SetCMSInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetCMSInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetCMSInfoRequest_descriptor_;
}

const SetCMSInfoRequest& SetCMSInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetCMSInfoRequest* SetCMSInfoRequest::default_instance_ = NULL;

SetCMSInfoRequest* SetCMSInfoRequest::New() const {
  return new SetCMSInfoRequest;
}

void SetCMSInfoRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_cmsid()) {
      if (cmsid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        cmsid_->clear();
      }
    }
    if (has_shortname()) {
      if (shortname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        shortname_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetCMSInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetCMSInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string cmsid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmsid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmsid().data(), this->cmsid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "cmsid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shortName;
        break;
      }

      // optional string shortName = 2;
      case 2: {
        if (tag == 18) {
         parse_shortName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortname().data(), this->shortname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "shortname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetCMSInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetCMSInfoRequest)
  return false;
#undef DO_
}

void SetCMSInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetCMSInfoRequest)
  // optional string cmsid = 1;
  if (has_cmsid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmsid().data(), this->cmsid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cmsid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cmsid(), output);
  }

  // optional string shortName = 2;
  if (has_shortname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortname().data(), this->shortname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "shortname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shortname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetCMSInfoRequest)
}

::google::protobuf::uint8* SetCMSInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetCMSInfoRequest)
  // optional string cmsid = 1;
  if (has_cmsid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmsid().data(), this->cmsid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "cmsid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cmsid(), target);
  }

  // optional string shortName = 2;
  if (has_shortname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortname().data(), this->shortname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "shortname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shortname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetCMSInfoRequest)
  return target;
}

int SetCMSInfoRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string cmsid = 1;
    if (has_cmsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmsid());
    }

    // optional string shortName = 2;
    if (has_shortname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shortname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetCMSInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetCMSInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetCMSInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetCMSInfoRequest::MergeFrom(const SetCMSInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmsid()) {
      set_cmsid(from.cmsid());
    }
    if (from.has_shortname()) {
      set_shortname(from.shortname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetCMSInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCMSInfoRequest::CopyFrom(const SetCMSInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCMSInfoRequest::IsInitialized() const {

  return true;
}

void SetCMSInfoRequest::Swap(SetCMSInfoRequest* other) {
  if (other != this) {
    std::swap(cmsid_, other->cmsid_);
    std::swap(shortname_, other->shortname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetCMSInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetCMSInfoRequest_descriptor_;
  metadata.reflection = SetCMSInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetCMSInfoResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetCMSInfoResponse::SetCMSInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetCMSInfoResponse)
}

void SetCMSInfoResponse::InitAsDefaultInstance() {
}

SetCMSInfoResponse::SetCMSInfoResponse(const SetCMSInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetCMSInfoResponse)
}

void SetCMSInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetCMSInfoResponse::~SetCMSInfoResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetCMSInfoResponse)
  SharedDtor();
}

void SetCMSInfoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetCMSInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetCMSInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetCMSInfoResponse_descriptor_;
}

const SetCMSInfoResponse& SetCMSInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetCMSInfoResponse* SetCMSInfoResponse::default_instance_ = NULL;

SetCMSInfoResponse* SetCMSInfoResponse::New() const {
  return new SetCMSInfoResponse;
}

void SetCMSInfoResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetCMSInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetCMSInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetCMSInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetCMSInfoResponse)
  return false;
#undef DO_
}

void SetCMSInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetCMSInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetCMSInfoResponse)
}

::google::protobuf::uint8* SetCMSInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetCMSInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetCMSInfoResponse)
  return target;
}

int SetCMSInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetCMSInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetCMSInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetCMSInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetCMSInfoResponse::MergeFrom(const SetCMSInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetCMSInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetCMSInfoResponse::CopyFrom(const SetCMSInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetCMSInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetCMSInfoResponse::Swap(SetCMSInfoResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetCMSInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetCMSInfoResponse_descriptor_;
  metadata.reflection = SetCMSInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetEnabledFeatureSetRequest::GetEnabledFeatureSetRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetEnabledFeatureSetRequest)
}

void GetEnabledFeatureSetRequest::InitAsDefaultInstance() {
}

GetEnabledFeatureSetRequest::GetEnabledFeatureSetRequest(const GetEnabledFeatureSetRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetEnabledFeatureSetRequest)
}

void GetEnabledFeatureSetRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetEnabledFeatureSetRequest::~GetEnabledFeatureSetRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetEnabledFeatureSetRequest)
  SharedDtor();
}

void GetEnabledFeatureSetRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetEnabledFeatureSetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetEnabledFeatureSetRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetEnabledFeatureSetRequest_descriptor_;
}

const GetEnabledFeatureSetRequest& GetEnabledFeatureSetRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetEnabledFeatureSetRequest* GetEnabledFeatureSetRequest::default_instance_ = NULL;

GetEnabledFeatureSetRequest* GetEnabledFeatureSetRequest::New() const {
  return new GetEnabledFeatureSetRequest;
}

void GetEnabledFeatureSetRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetEnabledFeatureSetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetEnabledFeatureSetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetEnabledFeatureSetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetEnabledFeatureSetRequest)
  return false;
#undef DO_
}

void GetEnabledFeatureSetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetEnabledFeatureSetRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetEnabledFeatureSetRequest)
}

::google::protobuf::uint8* GetEnabledFeatureSetRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetEnabledFeatureSetRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetEnabledFeatureSetRequest)
  return target;
}

int GetEnabledFeatureSetRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetEnabledFeatureSetRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetEnabledFeatureSetRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetEnabledFeatureSetRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetEnabledFeatureSetRequest::MergeFrom(const GetEnabledFeatureSetRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetEnabledFeatureSetRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnabledFeatureSetRequest::CopyFrom(const GetEnabledFeatureSetRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnabledFeatureSetRequest::IsInitialized() const {

  return true;
}

void GetEnabledFeatureSetRequest::Swap(GetEnabledFeatureSetRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetEnabledFeatureSetRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetEnabledFeatureSetRequest_descriptor_;
  metadata.reflection = GetEnabledFeatureSetRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetEnabledFeatureSetResponse::kModsAvailableFieldNumber;
#endif  // !_MSC_VER

GetEnabledFeatureSetResponse::GetEnabledFeatureSetResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetEnabledFeatureSetResponse)
}

void GetEnabledFeatureSetResponse::InitAsDefaultInstance() {
}

GetEnabledFeatureSetResponse::GetEnabledFeatureSetResponse(const GetEnabledFeatureSetResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetEnabledFeatureSetResponse)
}

void GetEnabledFeatureSetResponse::SharedCtor() {
  _cached_size_ = 0;
  modsavailable_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetEnabledFeatureSetResponse::~GetEnabledFeatureSetResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetEnabledFeatureSetResponse)
  SharedDtor();
}

void GetEnabledFeatureSetResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetEnabledFeatureSetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetEnabledFeatureSetResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetEnabledFeatureSetResponse_descriptor_;
}

const GetEnabledFeatureSetResponse& GetEnabledFeatureSetResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetEnabledFeatureSetResponse* GetEnabledFeatureSetResponse::default_instance_ = NULL;

GetEnabledFeatureSetResponse* GetEnabledFeatureSetResponse::New() const {
  return new GetEnabledFeatureSetResponse;
}

void GetEnabledFeatureSetResponse::Clear() {
  modsavailable_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetEnabledFeatureSetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetEnabledFeatureSetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool modsAvailable = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &modsavailable_)));
          set_has_modsavailable();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetEnabledFeatureSetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetEnabledFeatureSetResponse)
  return false;
#undef DO_
}

void GetEnabledFeatureSetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetEnabledFeatureSetResponse)
  // required bool modsAvailable = 1;
  if (has_modsavailable()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->modsavailable(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetEnabledFeatureSetResponse)
}

::google::protobuf::uint8* GetEnabledFeatureSetResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetEnabledFeatureSetResponse)
  // required bool modsAvailable = 1;
  if (has_modsavailable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->modsavailable(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetEnabledFeatureSetResponse)
  return target;
}

int GetEnabledFeatureSetResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool modsAvailable = 1;
    if (has_modsavailable()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetEnabledFeatureSetResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetEnabledFeatureSetResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetEnabledFeatureSetResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetEnabledFeatureSetResponse::MergeFrom(const GetEnabledFeatureSetResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_modsavailable()) {
      set_modsavailable(from.modsavailable());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetEnabledFeatureSetResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnabledFeatureSetResponse::CopyFrom(const GetEnabledFeatureSetResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnabledFeatureSetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetEnabledFeatureSetResponse::Swap(GetEnabledFeatureSetResponse* other) {
  if (other != this) {
    std::swap(modsavailable_, other->modsavailable_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetEnabledFeatureSetResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetEnabledFeatureSetResponse_descriptor_;
  metadata.reflection = GetEnabledFeatureSetResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

IsAnselModdingAvailableRequest::IsAnselModdingAvailableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselModdingAvailableRequest)
}

void IsAnselModdingAvailableRequest::InitAsDefaultInstance() {
}

IsAnselModdingAvailableRequest::IsAnselModdingAvailableRequest(const IsAnselModdingAvailableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselModdingAvailableRequest)
}

void IsAnselModdingAvailableRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselModdingAvailableRequest::~IsAnselModdingAvailableRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselModdingAvailableRequest)
  SharedDtor();
}

void IsAnselModdingAvailableRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselModdingAvailableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselModdingAvailableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselModdingAvailableRequest_descriptor_;
}

const IsAnselModdingAvailableRequest& IsAnselModdingAvailableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselModdingAvailableRequest* IsAnselModdingAvailableRequest::default_instance_ = NULL;

IsAnselModdingAvailableRequest* IsAnselModdingAvailableRequest::New() const {
  return new IsAnselModdingAvailableRequest;
}

void IsAnselModdingAvailableRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselModdingAvailableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselModdingAvailableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselModdingAvailableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselModdingAvailableRequest)
  return false;
#undef DO_
}

void IsAnselModdingAvailableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselModdingAvailableRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselModdingAvailableRequest)
}

::google::protobuf::uint8* IsAnselModdingAvailableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselModdingAvailableRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselModdingAvailableRequest)
  return target;
}

int IsAnselModdingAvailableRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselModdingAvailableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselModdingAvailableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselModdingAvailableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselModdingAvailableRequest::MergeFrom(const IsAnselModdingAvailableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselModdingAvailableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselModdingAvailableRequest::CopyFrom(const IsAnselModdingAvailableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselModdingAvailableRequest::IsInitialized() const {

  return true;
}

void IsAnselModdingAvailableRequest::Swap(IsAnselModdingAvailableRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselModdingAvailableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselModdingAvailableRequest_descriptor_;
  metadata.reflection = IsAnselModdingAvailableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IsAnselModdingAvailableResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

IsAnselModdingAvailableResponse::IsAnselModdingAvailableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselModdingAvailableResponse)
}

void IsAnselModdingAvailableResponse::InitAsDefaultInstance() {
}

IsAnselModdingAvailableResponse::IsAnselModdingAvailableResponse(const IsAnselModdingAvailableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselModdingAvailableResponse)
}

void IsAnselModdingAvailableResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselModdingAvailableResponse::~IsAnselModdingAvailableResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselModdingAvailableResponse)
  SharedDtor();
}

void IsAnselModdingAvailableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselModdingAvailableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselModdingAvailableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselModdingAvailableResponse_descriptor_;
}

const IsAnselModdingAvailableResponse& IsAnselModdingAvailableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselModdingAvailableResponse* IsAnselModdingAvailableResponse::default_instance_ = NULL;

IsAnselModdingAvailableResponse* IsAnselModdingAvailableResponse::New() const {
  return new IsAnselModdingAvailableResponse;
}

void IsAnselModdingAvailableResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselModdingAvailableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselModdingAvailableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselModdingAvailableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselModdingAvailableResponse)
  return false;
#undef DO_
}

void IsAnselModdingAvailableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselModdingAvailableResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselModdingAvailableResponse)
}

::google::protobuf::uint8* IsAnselModdingAvailableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselModdingAvailableResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselModdingAvailableResponse)
  return target;
}

int IsAnselModdingAvailableResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselModdingAvailableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselModdingAvailableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselModdingAvailableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselModdingAvailableResponse::MergeFrom(const IsAnselModdingAvailableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselModdingAvailableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselModdingAvailableResponse::CopyFrom(const IsAnselModdingAvailableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselModdingAvailableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IsAnselModdingAvailableResponse::Swap(IsAnselModdingAvailableResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselModdingAvailableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselModdingAvailableResponse_descriptor_;
  metadata.reflection = IsAnselModdingAvailableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

IsAnselSDKIntegrationAvailableRequest::IsAnselSDKIntegrationAvailableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
}

void IsAnselSDKIntegrationAvailableRequest::InitAsDefaultInstance() {
}

IsAnselSDKIntegrationAvailableRequest::IsAnselSDKIntegrationAvailableRequest(const IsAnselSDKIntegrationAvailableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
}

void IsAnselSDKIntegrationAvailableRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselSDKIntegrationAvailableRequest::~IsAnselSDKIntegrationAvailableRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  SharedDtor();
}

void IsAnselSDKIntegrationAvailableRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselSDKIntegrationAvailableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselSDKIntegrationAvailableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselSDKIntegrationAvailableRequest_descriptor_;
}

const IsAnselSDKIntegrationAvailableRequest& IsAnselSDKIntegrationAvailableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselSDKIntegrationAvailableRequest* IsAnselSDKIntegrationAvailableRequest::default_instance_ = NULL;

IsAnselSDKIntegrationAvailableRequest* IsAnselSDKIntegrationAvailableRequest::New() const {
  return new IsAnselSDKIntegrationAvailableRequest;
}

void IsAnselSDKIntegrationAvailableRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselSDKIntegrationAvailableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  return false;
#undef DO_
}

void IsAnselSDKIntegrationAvailableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
}

::google::protobuf::uint8* IsAnselSDKIntegrationAvailableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselSDKIntegrationAvailableRequest)
  return target;
}

int IsAnselSDKIntegrationAvailableRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselSDKIntegrationAvailableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselSDKIntegrationAvailableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselSDKIntegrationAvailableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselSDKIntegrationAvailableRequest::MergeFrom(const IsAnselSDKIntegrationAvailableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselSDKIntegrationAvailableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselSDKIntegrationAvailableRequest::CopyFrom(const IsAnselSDKIntegrationAvailableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselSDKIntegrationAvailableRequest::IsInitialized() const {

  return true;
}

void IsAnselSDKIntegrationAvailableRequest::Swap(IsAnselSDKIntegrationAvailableRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselSDKIntegrationAvailableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselSDKIntegrationAvailableRequest_descriptor_;
  metadata.reflection = IsAnselSDKIntegrationAvailableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IsAnselSDKIntegrationAvailableResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

IsAnselSDKIntegrationAvailableResponse::IsAnselSDKIntegrationAvailableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
}

void IsAnselSDKIntegrationAvailableResponse::InitAsDefaultInstance() {
}

IsAnselSDKIntegrationAvailableResponse::IsAnselSDKIntegrationAvailableResponse(const IsAnselSDKIntegrationAvailableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
}

void IsAnselSDKIntegrationAvailableResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselSDKIntegrationAvailableResponse::~IsAnselSDKIntegrationAvailableResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  SharedDtor();
}

void IsAnselSDKIntegrationAvailableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselSDKIntegrationAvailableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselSDKIntegrationAvailableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselSDKIntegrationAvailableResponse_descriptor_;
}

const IsAnselSDKIntegrationAvailableResponse& IsAnselSDKIntegrationAvailableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselSDKIntegrationAvailableResponse* IsAnselSDKIntegrationAvailableResponse::default_instance_ = NULL;

IsAnselSDKIntegrationAvailableResponse* IsAnselSDKIntegrationAvailableResponse::New() const {
  return new IsAnselSDKIntegrationAvailableResponse;
}

void IsAnselSDKIntegrationAvailableResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselSDKIntegrationAvailableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  return false;
#undef DO_
}

void IsAnselSDKIntegrationAvailableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
}

::google::protobuf::uint8* IsAnselSDKIntegrationAvailableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselSDKIntegrationAvailableResponse)
  return target;
}

int IsAnselSDKIntegrationAvailableResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselSDKIntegrationAvailableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselSDKIntegrationAvailableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselSDKIntegrationAvailableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselSDKIntegrationAvailableResponse::MergeFrom(const IsAnselSDKIntegrationAvailableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselSDKIntegrationAvailableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselSDKIntegrationAvailableResponse::CopyFrom(const IsAnselSDKIntegrationAvailableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselSDKIntegrationAvailableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IsAnselSDKIntegrationAvailableResponse::Swap(IsAnselSDKIntegrationAvailableResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselSDKIntegrationAvailableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselSDKIntegrationAvailableResponse_descriptor_;
  metadata.reflection = IsAnselSDKIntegrationAvailableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ScreenResolutionChangedRequest::ScreenResolutionChangedRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ScreenResolutionChangedRequest)
}

void ScreenResolutionChangedRequest::InitAsDefaultInstance() {
}

ScreenResolutionChangedRequest::ScreenResolutionChangedRequest(const ScreenResolutionChangedRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ScreenResolutionChangedRequest)
}

void ScreenResolutionChangedRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScreenResolutionChangedRequest::~ScreenResolutionChangedRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.ScreenResolutionChangedRequest)
  SharedDtor();
}

void ScreenResolutionChangedRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScreenResolutionChangedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScreenResolutionChangedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScreenResolutionChangedRequest_descriptor_;
}

const ScreenResolutionChangedRequest& ScreenResolutionChangedRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ScreenResolutionChangedRequest* ScreenResolutionChangedRequest::default_instance_ = NULL;

ScreenResolutionChangedRequest* ScreenResolutionChangedRequest::New() const {
  return new ScreenResolutionChangedRequest;
}

void ScreenResolutionChangedRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScreenResolutionChangedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ScreenResolutionChangedRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ScreenResolutionChangedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ScreenResolutionChangedRequest)
  return false;
#undef DO_
}

void ScreenResolutionChangedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ScreenResolutionChangedRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ScreenResolutionChangedRequest)
}

::google::protobuf::uint8* ScreenResolutionChangedRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ScreenResolutionChangedRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ScreenResolutionChangedRequest)
  return target;
}

int ScreenResolutionChangedRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ScreenResolutionChangedRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScreenResolutionChangedRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScreenResolutionChangedRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScreenResolutionChangedRequest::MergeFrom(const ScreenResolutionChangedRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScreenResolutionChangedRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenResolutionChangedRequest::CopyFrom(const ScreenResolutionChangedRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenResolutionChangedRequest::IsInitialized() const {

  return true;
}

void ScreenResolutionChangedRequest::Swap(ScreenResolutionChangedRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScreenResolutionChangedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScreenResolutionChangedRequest_descriptor_;
  metadata.reflection = ScreenResolutionChangedRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ScreenResolutionChangedResponse::ScreenResolutionChangedResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ScreenResolutionChangedResponse)
}

void ScreenResolutionChangedResponse::InitAsDefaultInstance() {
}

ScreenResolutionChangedResponse::ScreenResolutionChangedResponse(const ScreenResolutionChangedResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ScreenResolutionChangedResponse)
}

void ScreenResolutionChangedResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScreenResolutionChangedResponse::~ScreenResolutionChangedResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.ScreenResolutionChangedResponse)
  SharedDtor();
}

void ScreenResolutionChangedResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScreenResolutionChangedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScreenResolutionChangedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScreenResolutionChangedResponse_descriptor_;
}

const ScreenResolutionChangedResponse& ScreenResolutionChangedResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ScreenResolutionChangedResponse* ScreenResolutionChangedResponse::default_instance_ = NULL;

ScreenResolutionChangedResponse* ScreenResolutionChangedResponse::New() const {
  return new ScreenResolutionChangedResponse;
}

void ScreenResolutionChangedResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScreenResolutionChangedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ScreenResolutionChangedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ScreenResolutionChangedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ScreenResolutionChangedResponse)
  return false;
#undef DO_
}

void ScreenResolutionChangedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ScreenResolutionChangedResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ScreenResolutionChangedResponse)
}

::google::protobuf::uint8* ScreenResolutionChangedResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ScreenResolutionChangedResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ScreenResolutionChangedResponse)
  return target;
}

int ScreenResolutionChangedResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ScreenResolutionChangedResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScreenResolutionChangedResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScreenResolutionChangedResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScreenResolutionChangedResponse::MergeFrom(const ScreenResolutionChangedResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScreenResolutionChangedResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScreenResolutionChangedResponse::CopyFrom(const ScreenResolutionChangedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScreenResolutionChangedResponse::IsInitialized() const {

  return true;
}

void ScreenResolutionChangedResponse::Swap(ScreenResolutionChangedResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScreenResolutionChangedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScreenResolutionChangedResponse_descriptor_;
  metadata.reflection = ScreenResolutionChangedResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetGridOfThirdsEnabledRequest::kEnabledFieldNumber;
#endif  // !_MSC_VER

SetGridOfThirdsEnabledRequest::SetGridOfThirdsEnabledRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetGridOfThirdsEnabledRequest)
}

void SetGridOfThirdsEnabledRequest::InitAsDefaultInstance() {
}

SetGridOfThirdsEnabledRequest::SetGridOfThirdsEnabledRequest(const SetGridOfThirdsEnabledRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetGridOfThirdsEnabledRequest)
}

void SetGridOfThirdsEnabledRequest::SharedCtor() {
  _cached_size_ = 0;
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetGridOfThirdsEnabledRequest::~SetGridOfThirdsEnabledRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetGridOfThirdsEnabledRequest)
  SharedDtor();
}

void SetGridOfThirdsEnabledRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetGridOfThirdsEnabledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetGridOfThirdsEnabledRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetGridOfThirdsEnabledRequest_descriptor_;
}

const SetGridOfThirdsEnabledRequest& SetGridOfThirdsEnabledRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetGridOfThirdsEnabledRequest* SetGridOfThirdsEnabledRequest::default_instance_ = NULL;

SetGridOfThirdsEnabledRequest* SetGridOfThirdsEnabledRequest::New() const {
  return new SetGridOfThirdsEnabledRequest;
}

void SetGridOfThirdsEnabledRequest::Clear() {
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetGridOfThirdsEnabledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetGridOfThirdsEnabledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool enabled = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
          set_has_enabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetGridOfThirdsEnabledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetGridOfThirdsEnabledRequest)
  return false;
#undef DO_
}

void SetGridOfThirdsEnabledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetGridOfThirdsEnabledRequest)
  // required bool enabled = 1;
  if (has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetGridOfThirdsEnabledRequest)
}

::google::protobuf::uint8* SetGridOfThirdsEnabledRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetGridOfThirdsEnabledRequest)
  // required bool enabled = 1;
  if (has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetGridOfThirdsEnabledRequest)
  return target;
}

int SetGridOfThirdsEnabledRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool enabled = 1;
    if (has_enabled()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetGridOfThirdsEnabledRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetGridOfThirdsEnabledRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetGridOfThirdsEnabledRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetGridOfThirdsEnabledRequest::MergeFrom(const SetGridOfThirdsEnabledRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enabled()) {
      set_enabled(from.enabled());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetGridOfThirdsEnabledRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGridOfThirdsEnabledRequest::CopyFrom(const SetGridOfThirdsEnabledRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGridOfThirdsEnabledRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetGridOfThirdsEnabledRequest::Swap(SetGridOfThirdsEnabledRequest* other) {
  if (other != this) {
    std::swap(enabled_, other->enabled_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetGridOfThirdsEnabledRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetGridOfThirdsEnabledRequest_descriptor_;
  metadata.reflection = SetGridOfThirdsEnabledRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetGridOfThirdsEnabledResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetGridOfThirdsEnabledResponse::SetGridOfThirdsEnabledResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetGridOfThirdsEnabledResponse)
}

void SetGridOfThirdsEnabledResponse::InitAsDefaultInstance() {
}

SetGridOfThirdsEnabledResponse::SetGridOfThirdsEnabledResponse(const SetGridOfThirdsEnabledResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetGridOfThirdsEnabledResponse)
}

void SetGridOfThirdsEnabledResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetGridOfThirdsEnabledResponse::~SetGridOfThirdsEnabledResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetGridOfThirdsEnabledResponse)
  SharedDtor();
}

void SetGridOfThirdsEnabledResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetGridOfThirdsEnabledResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetGridOfThirdsEnabledResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetGridOfThirdsEnabledResponse_descriptor_;
}

const SetGridOfThirdsEnabledResponse& SetGridOfThirdsEnabledResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetGridOfThirdsEnabledResponse* SetGridOfThirdsEnabledResponse::default_instance_ = NULL;

SetGridOfThirdsEnabledResponse* SetGridOfThirdsEnabledResponse::New() const {
  return new SetGridOfThirdsEnabledResponse;
}

void SetGridOfThirdsEnabledResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetGridOfThirdsEnabledResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetGridOfThirdsEnabledResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetGridOfThirdsEnabledResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetGridOfThirdsEnabledResponse)
  return false;
#undef DO_
}

void SetGridOfThirdsEnabledResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetGridOfThirdsEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetGridOfThirdsEnabledResponse)
}

::google::protobuf::uint8* SetGridOfThirdsEnabledResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetGridOfThirdsEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetGridOfThirdsEnabledResponse)
  return target;
}

int SetGridOfThirdsEnabledResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetGridOfThirdsEnabledResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetGridOfThirdsEnabledResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetGridOfThirdsEnabledResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetGridOfThirdsEnabledResponse::MergeFrom(const SetGridOfThirdsEnabledResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetGridOfThirdsEnabledResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetGridOfThirdsEnabledResponse::CopyFrom(const SetGridOfThirdsEnabledResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetGridOfThirdsEnabledResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetGridOfThirdsEnabledResponse::Swap(SetGridOfThirdsEnabledResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetGridOfThirdsEnabledResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetGridOfThirdsEnabledResponse_descriptor_;
  metadata.reflection = SetGridOfThirdsEnabledResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetProcessInfoRequest::GetProcessInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetProcessInfoRequest)
}

void GetProcessInfoRequest::InitAsDefaultInstance() {
}

GetProcessInfoRequest::GetProcessInfoRequest(const GetProcessInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetProcessInfoRequest)
}

void GetProcessInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetProcessInfoRequest::~GetProcessInfoRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetProcessInfoRequest)
  SharedDtor();
}

void GetProcessInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetProcessInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProcessInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetProcessInfoRequest_descriptor_;
}

const GetProcessInfoRequest& GetProcessInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetProcessInfoRequest* GetProcessInfoRequest::default_instance_ = NULL;

GetProcessInfoRequest* GetProcessInfoRequest::New() const {
  return new GetProcessInfoRequest;
}

void GetProcessInfoRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetProcessInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetProcessInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetProcessInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetProcessInfoRequest)
  return false;
#undef DO_
}

void GetProcessInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetProcessInfoRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetProcessInfoRequest)
}

::google::protobuf::uint8* GetProcessInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetProcessInfoRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetProcessInfoRequest)
  return target;
}

int GetProcessInfoRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetProcessInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetProcessInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetProcessInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetProcessInfoRequest::MergeFrom(const GetProcessInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetProcessInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProcessInfoRequest::CopyFrom(const GetProcessInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProcessInfoRequest::IsInitialized() const {

  return true;
}

void GetProcessInfoRequest::Swap(GetProcessInfoRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetProcessInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetProcessInfoRequest_descriptor_;
  metadata.reflection = GetProcessInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetProcessInfoResponse::kStatusFieldNumber;
const int GetProcessInfoResponse::kProcessIdFieldNumber;
const int GetProcessInfoResponse::kProcessPathFieldNumber;
#endif  // !_MSC_VER

GetProcessInfoResponse::GetProcessInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetProcessInfoResponse)
}

void GetProcessInfoResponse::InitAsDefaultInstance() {
}

GetProcessInfoResponse::GetProcessInfoResponse(const GetProcessInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetProcessInfoResponse)
}

void GetProcessInfoResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 1;
  processid_ = 0u;
  processpath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetProcessInfoResponse::~GetProcessInfoResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetProcessInfoResponse)
  SharedDtor();
}

void GetProcessInfoResponse::SharedDtor() {
  if (processpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete processpath_;
  }
  if (this != default_instance_) {
  }
}

void GetProcessInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProcessInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetProcessInfoResponse_descriptor_;
}

const GetProcessInfoResponse& GetProcessInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetProcessInfoResponse* GetProcessInfoResponse::default_instance_ = NULL;

GetProcessInfoResponse* GetProcessInfoResponse::New() const {
  return new GetProcessInfoResponse;
}

void GetProcessInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    status_ = 1;
    processid_ = 0u;
    if (has_processpath()) {
      if (processpath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        processpath_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetProcessInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetProcessInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_processId;
        break;
      }

      // required uint32 processId = 2;
      case 2: {
        if (tag == 16) {
         parse_processId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &processid_)));
          set_has_processid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_processPath;
        break;
      }

      // required string processPath = 3;
      case 3: {
        if (tag == 26) {
         parse_processPath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processpath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->processpath().data(), this->processpath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "processpath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetProcessInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetProcessInfoResponse)
  return false;
#undef DO_
}

void GetProcessInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetProcessInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required uint32 processId = 2;
  if (has_processid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->processid(), output);
  }

  // required string processPath = 3;
  if (has_processpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processpath().data(), this->processpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "processpath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->processpath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetProcessInfoResponse)
}

::google::protobuf::uint8* GetProcessInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetProcessInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required uint32 processId = 2;
  if (has_processid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->processid(), target);
  }

  // required string processPath = 3;
  if (has_processpath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processpath().data(), this->processpath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "processpath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->processpath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetProcessInfoResponse)
  return target;
}

int GetProcessInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required uint32 processId = 2;
    if (has_processid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->processid());
    }

    // required string processPath = 3;
    if (has_processpath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->processpath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetProcessInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetProcessInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetProcessInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetProcessInfoResponse::MergeFrom(const GetProcessInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_processid()) {
      set_processid(from.processid());
    }
    if (from.has_processpath()) {
      set_processpath(from.processpath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetProcessInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProcessInfoResponse::CopyFrom(const GetProcessInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProcessInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetProcessInfoResponse::Swap(GetProcessInfoResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(processid_, other->processid_);
    std::swap(processpath_, other->processpath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetProcessInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetProcessInfoResponse_descriptor_;
  metadata.reflection = GetProcessInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetAnselEnabledRequest::kMajorFieldNumber;
const int SetAnselEnabledRequest::kMinorFieldNumber;
const int SetAnselEnabledRequest::kPatchFieldNumber;
const int SetAnselEnabledRequest::kEnabledFieldNumber;
const int SetAnselEnabledRequest::kLeaveFiltersEnabledFieldNumber;
const int SetAnselEnabledRequest::kPauseApplicationFieldNumber;
#endif  // !_MSC_VER

SetAnselEnabledRequest::SetAnselEnabledRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetAnselEnabledRequest)
}

void SetAnselEnabledRequest::InitAsDefaultInstance() {
}

SetAnselEnabledRequest::SetAnselEnabledRequest(const SetAnselEnabledRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetAnselEnabledRequest)
}

void SetAnselEnabledRequest::SharedCtor() {
  _cached_size_ = 0;
  major_ = 0u;
  minor_ = 0u;
  patch_ = 0u;
  enabled_ = false;
  leavefiltersenabled_ = false;
  pauseapplication_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetAnselEnabledRequest::~SetAnselEnabledRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetAnselEnabledRequest)
  SharedDtor();
}

void SetAnselEnabledRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetAnselEnabledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAnselEnabledRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetAnselEnabledRequest_descriptor_;
}

const SetAnselEnabledRequest& SetAnselEnabledRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetAnselEnabledRequest* SetAnselEnabledRequest::default_instance_ = NULL;

SetAnselEnabledRequest* SetAnselEnabledRequest::New() const {
  return new SetAnselEnabledRequest;
}

void SetAnselEnabledRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SetAnselEnabledRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(major_, pauseapplication_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetAnselEnabledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetAnselEnabledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 major = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
          set_has_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_minor;
        break;
      }

      // required uint32 minor = 2;
      case 2: {
        if (tag == 16) {
         parse_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
          set_has_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_patch;
        break;
      }

      // required uint32 patch = 3;
      case 3: {
        if (tag == 24) {
         parse_patch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &patch_)));
          set_has_patch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_enabled;
        break;
      }

      // required bool enabled = 4;
      case 4: {
        if (tag == 32) {
         parse_enabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
          set_has_enabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_leaveFiltersEnabled;
        break;
      }

      // optional bool leaveFiltersEnabled = 5;
      case 5: {
        if (tag == 40) {
         parse_leaveFiltersEnabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &leavefiltersenabled_)));
          set_has_leavefiltersenabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pauseApplication;
        break;
      }

      // optional bool pauseApplication = 6;
      case 6: {
        if (tag == 48) {
         parse_pauseApplication:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pauseapplication_)));
          set_has_pauseapplication();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetAnselEnabledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetAnselEnabledRequest)
  return false;
#undef DO_
}

void SetAnselEnabledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetAnselEnabledRequest)
  // required uint32 major = 1;
  if (has_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // required uint32 minor = 2;
  if (has_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  // required uint32 patch = 3;
  if (has_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->patch(), output);
  }

  // required bool enabled = 4;
  if (has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->enabled(), output);
  }

  // optional bool leaveFiltersEnabled = 5;
  if (has_leavefiltersenabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->leavefiltersenabled(), output);
  }

  // optional bool pauseApplication = 6;
  if (has_pauseapplication()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->pauseapplication(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetAnselEnabledRequest)
}

::google::protobuf::uint8* SetAnselEnabledRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetAnselEnabledRequest)
  // required uint32 major = 1;
  if (has_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // required uint32 minor = 2;
  if (has_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  // required uint32 patch = 3;
  if (has_patch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->patch(), target);
  }

  // required bool enabled = 4;
  if (has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->enabled(), target);
  }

  // optional bool leaveFiltersEnabled = 5;
  if (has_leavefiltersenabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->leavefiltersenabled(), target);
  }

  // optional bool pauseApplication = 6;
  if (has_pauseapplication()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->pauseapplication(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetAnselEnabledRequest)
  return target;
}

int SetAnselEnabledRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 major = 1;
    if (has_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->major());
    }

    // required uint32 minor = 2;
    if (has_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minor());
    }

    // required uint32 patch = 3;
    if (has_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->patch());
    }

    // required bool enabled = 4;
    if (has_enabled()) {
      total_size += 1 + 1;
    }

    // optional bool leaveFiltersEnabled = 5;
    if (has_leavefiltersenabled()) {
      total_size += 1 + 1;
    }

    // optional bool pauseApplication = 6;
    if (has_pauseapplication()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetAnselEnabledRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetAnselEnabledRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetAnselEnabledRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetAnselEnabledRequest::MergeFrom(const SetAnselEnabledRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_major()) {
      set_major(from.major());
    }
    if (from.has_minor()) {
      set_minor(from.minor());
    }
    if (from.has_patch()) {
      set_patch(from.patch());
    }
    if (from.has_enabled()) {
      set_enabled(from.enabled());
    }
    if (from.has_leavefiltersenabled()) {
      set_leavefiltersenabled(from.leavefiltersenabled());
    }
    if (from.has_pauseapplication()) {
      set_pauseapplication(from.pauseapplication());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetAnselEnabledRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAnselEnabledRequest::CopyFrom(const SetAnselEnabledRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAnselEnabledRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void SetAnselEnabledRequest::Swap(SetAnselEnabledRequest* other) {
  if (other != this) {
    std::swap(major_, other->major_);
    std::swap(minor_, other->minor_);
    std::swap(patch_, other->patch_);
    std::swap(enabled_, other->enabled_);
    std::swap(leavefiltersenabled_, other->leavefiltersenabled_);
    std::swap(pauseapplication_, other->pauseapplication_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetAnselEnabledRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetAnselEnabledRequest_descriptor_;
  metadata.reflection = SetAnselEnabledRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetAnselEnabledResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetAnselEnabledResponse::SetAnselEnabledResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetAnselEnabledResponse)
}

void SetAnselEnabledResponse::InitAsDefaultInstance() {
}

SetAnselEnabledResponse::SetAnselEnabledResponse(const SetAnselEnabledResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetAnselEnabledResponse)
}

void SetAnselEnabledResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetAnselEnabledResponse::~SetAnselEnabledResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetAnselEnabledResponse)
  SharedDtor();
}

void SetAnselEnabledResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetAnselEnabledResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAnselEnabledResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetAnselEnabledResponse_descriptor_;
}

const SetAnselEnabledResponse& SetAnselEnabledResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetAnselEnabledResponse* SetAnselEnabledResponse::default_instance_ = NULL;

SetAnselEnabledResponse* SetAnselEnabledResponse::New() const {
  return new SetAnselEnabledResponse;
}

void SetAnselEnabledResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetAnselEnabledResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetAnselEnabledResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetAnselEnabledResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetAnselEnabledResponse)
  return false;
#undef DO_
}

void SetAnselEnabledResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetAnselEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetAnselEnabledResponse)
}

::google::protobuf::uint8* SetAnselEnabledResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetAnselEnabledResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetAnselEnabledResponse)
  return target;
}

int SetAnselEnabledResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetAnselEnabledResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetAnselEnabledResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetAnselEnabledResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetAnselEnabledResponse::MergeFrom(const SetAnselEnabledResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetAnselEnabledResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAnselEnabledResponse::CopyFrom(const SetAnselEnabledResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAnselEnabledResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetAnselEnabledResponse::Swap(SetAnselEnabledResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetAnselEnabledResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetAnselEnabledResponse_descriptor_;
  metadata.reflection = SetAnselEnabledResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetAnselEnabledRequest::GetAnselEnabledRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetAnselEnabledRequest)
}

void GetAnselEnabledRequest::InitAsDefaultInstance() {
}

GetAnselEnabledRequest::GetAnselEnabledRequest(const GetAnselEnabledRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetAnselEnabledRequest)
}

void GetAnselEnabledRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAnselEnabledRequest::~GetAnselEnabledRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetAnselEnabledRequest)
  SharedDtor();
}

void GetAnselEnabledRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAnselEnabledRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAnselEnabledRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAnselEnabledRequest_descriptor_;
}

const GetAnselEnabledRequest& GetAnselEnabledRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetAnselEnabledRequest* GetAnselEnabledRequest::default_instance_ = NULL;

GetAnselEnabledRequest* GetAnselEnabledRequest::New() const {
  return new GetAnselEnabledRequest;
}

void GetAnselEnabledRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAnselEnabledRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetAnselEnabledRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetAnselEnabledRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetAnselEnabledRequest)
  return false;
#undef DO_
}

void GetAnselEnabledRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetAnselEnabledRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetAnselEnabledRequest)
}

::google::protobuf::uint8* GetAnselEnabledRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetAnselEnabledRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetAnselEnabledRequest)
  return target;
}

int GetAnselEnabledRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetAnselEnabledRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAnselEnabledRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAnselEnabledRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAnselEnabledRequest::MergeFrom(const GetAnselEnabledRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAnselEnabledRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnselEnabledRequest::CopyFrom(const GetAnselEnabledRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnselEnabledRequest::IsInitialized() const {

  return true;
}

void GetAnselEnabledRequest::Swap(GetAnselEnabledRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAnselEnabledRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAnselEnabledRequest_descriptor_;
  metadata.reflection = GetAnselEnabledRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetAnselEnabledResponse::kEnabledFieldNumber;
#endif  // !_MSC_VER

GetAnselEnabledResponse::GetAnselEnabledResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetAnselEnabledResponse)
}

void GetAnselEnabledResponse::InitAsDefaultInstance() {
}

GetAnselEnabledResponse::GetAnselEnabledResponse(const GetAnselEnabledResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetAnselEnabledResponse)
}

void GetAnselEnabledResponse::SharedCtor() {
  _cached_size_ = 0;
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAnselEnabledResponse::~GetAnselEnabledResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetAnselEnabledResponse)
  SharedDtor();
}

void GetAnselEnabledResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAnselEnabledResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAnselEnabledResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAnselEnabledResponse_descriptor_;
}

const GetAnselEnabledResponse& GetAnselEnabledResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetAnselEnabledResponse* GetAnselEnabledResponse::default_instance_ = NULL;

GetAnselEnabledResponse* GetAnselEnabledResponse::New() const {
  return new GetAnselEnabledResponse;
}

void GetAnselEnabledResponse::Clear() {
  enabled_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAnselEnabledResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetAnselEnabledResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool enabled = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enabled_)));
          set_has_enabled();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetAnselEnabledResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetAnselEnabledResponse)
  return false;
#undef DO_
}

void GetAnselEnabledResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetAnselEnabledResponse)
  // required bool enabled = 1;
  if (has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->enabled(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetAnselEnabledResponse)
}

::google::protobuf::uint8* GetAnselEnabledResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetAnselEnabledResponse)
  // required bool enabled = 1;
  if (has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->enabled(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetAnselEnabledResponse)
  return target;
}

int GetAnselEnabledResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool enabled = 1;
    if (has_enabled()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetAnselEnabledResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAnselEnabledResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAnselEnabledResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAnselEnabledResponse::MergeFrom(const GetAnselEnabledResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enabled()) {
      set_enabled(from.enabled());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAnselEnabledResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnselEnabledResponse::CopyFrom(const GetAnselEnabledResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnselEnabledResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetAnselEnabledResponse::Swap(GetAnselEnabledResponse* other) {
  if (other != this) {
    std::swap(enabled_, other->enabled_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAnselEnabledResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAnselEnabledResponse_descriptor_;
  metadata.reflection = GetAnselEnabledResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetAnselShotPermissionsRequest::GetAnselShotPermissionsRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetAnselShotPermissionsRequest)
}

void GetAnselShotPermissionsRequest::InitAsDefaultInstance() {
}

GetAnselShotPermissionsRequest::GetAnselShotPermissionsRequest(const GetAnselShotPermissionsRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetAnselShotPermissionsRequest)
}

void GetAnselShotPermissionsRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAnselShotPermissionsRequest::~GetAnselShotPermissionsRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetAnselShotPermissionsRequest)
  SharedDtor();
}

void GetAnselShotPermissionsRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAnselShotPermissionsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAnselShotPermissionsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAnselShotPermissionsRequest_descriptor_;
}

const GetAnselShotPermissionsRequest& GetAnselShotPermissionsRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetAnselShotPermissionsRequest* GetAnselShotPermissionsRequest::default_instance_ = NULL;

GetAnselShotPermissionsRequest* GetAnselShotPermissionsRequest::New() const {
  return new GetAnselShotPermissionsRequest;
}

void GetAnselShotPermissionsRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAnselShotPermissionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetAnselShotPermissionsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetAnselShotPermissionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetAnselShotPermissionsRequest)
  return false;
#undef DO_
}

void GetAnselShotPermissionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetAnselShotPermissionsRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetAnselShotPermissionsRequest)
}

::google::protobuf::uint8* GetAnselShotPermissionsRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetAnselShotPermissionsRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetAnselShotPermissionsRequest)
  return target;
}

int GetAnselShotPermissionsRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetAnselShotPermissionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAnselShotPermissionsRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAnselShotPermissionsRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAnselShotPermissionsRequest::MergeFrom(const GetAnselShotPermissionsRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAnselShotPermissionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnselShotPermissionsRequest::CopyFrom(const GetAnselShotPermissionsRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnselShotPermissionsRequest::IsInitialized() const {

  return true;
}

void GetAnselShotPermissionsRequest::Swap(GetAnselShotPermissionsRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAnselShotPermissionsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAnselShotPermissionsRequest_descriptor_;
  metadata.reflection = GetAnselShotPermissionsRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetAnselShotPermissionsResponse::kIsIntegrationDetectedFieldNumber;
const int GetAnselShotPermissionsResponse::kIsHDRAllowedFieldNumber;
const int GetAnselShotPermissionsResponse::kIsShotAllowedFieldNumber;
#endif  // !_MSC_VER

GetAnselShotPermissionsResponse::GetAnselShotPermissionsResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetAnselShotPermissionsResponse)
}

void GetAnselShotPermissionsResponse::InitAsDefaultInstance() {
}

GetAnselShotPermissionsResponse::GetAnselShotPermissionsResponse(const GetAnselShotPermissionsResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetAnselShotPermissionsResponse)
}

void GetAnselShotPermissionsResponse::SharedCtor() {
  _cached_size_ = 0;
  isintegrationdetected_ = false;
  ishdrallowed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetAnselShotPermissionsResponse::~GetAnselShotPermissionsResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetAnselShotPermissionsResponse)
  SharedDtor();
}

void GetAnselShotPermissionsResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetAnselShotPermissionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAnselShotPermissionsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAnselShotPermissionsResponse_descriptor_;
}

const GetAnselShotPermissionsResponse& GetAnselShotPermissionsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetAnselShotPermissionsResponse* GetAnselShotPermissionsResponse::default_instance_ = NULL;

GetAnselShotPermissionsResponse* GetAnselShotPermissionsResponse::New() const {
  return new GetAnselShotPermissionsResponse;
}

void GetAnselShotPermissionsResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetAnselShotPermissionsResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(isintegrationdetected_, ishdrallowed_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  isshotallowed_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetAnselShotPermissionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetAnselShotPermissionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool isIntegrationDetected = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isintegrationdetected_)));
          set_has_isintegrationdetected();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_isHDRAllowed;
        break;
      }

      // required bool isHDRAllowed = 2;
      case 2: {
        if (tag == 16) {
         parse_isHDRAllowed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ishdrallowed_)));
          set_has_ishdrallowed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isShotAllowed;
        break;
      }

      // repeated bool isShotAllowed = 3;
      case 3: {
        if (tag == 24) {
         parse_isShotAllowed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 24, input, this->mutable_isshotallowed())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_isshotallowed())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_isShotAllowed;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetAnselShotPermissionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetAnselShotPermissionsResponse)
  return false;
#undef DO_
}

void GetAnselShotPermissionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetAnselShotPermissionsResponse)
  // required bool isIntegrationDetected = 1;
  if (has_isintegrationdetected()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isintegrationdetected(), output);
  }

  // required bool isHDRAllowed = 2;
  if (has_ishdrallowed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ishdrallowed(), output);
  }

  // repeated bool isShotAllowed = 3;
  for (int i = 0; i < this->isshotallowed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      3, this->isshotallowed(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetAnselShotPermissionsResponse)
}

::google::protobuf::uint8* GetAnselShotPermissionsResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetAnselShotPermissionsResponse)
  // required bool isIntegrationDetected = 1;
  if (has_isintegrationdetected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isintegrationdetected(), target);
  }

  // required bool isHDRAllowed = 2;
  if (has_ishdrallowed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ishdrallowed(), target);
  }

  // repeated bool isShotAllowed = 3;
  for (int i = 0; i < this->isshotallowed_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(3, this->isshotallowed(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetAnselShotPermissionsResponse)
  return target;
}

int GetAnselShotPermissionsResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool isIntegrationDetected = 1;
    if (has_isintegrationdetected()) {
      total_size += 1 + 1;
    }

    // required bool isHDRAllowed = 2;
    if (has_ishdrallowed()) {
      total_size += 1 + 1;
    }

  }
  // repeated bool isShotAllowed = 3;
  {
    int data_size = 0;
    data_size = 1 * this->isshotallowed_size();
    total_size += 1 * this->isshotallowed_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetAnselShotPermissionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetAnselShotPermissionsResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetAnselShotPermissionsResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAnselShotPermissionsResponse::MergeFrom(const GetAnselShotPermissionsResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  isshotallowed_.MergeFrom(from.isshotallowed_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isintegrationdetected()) {
      set_isintegrationdetected(from.isintegrationdetected());
    }
    if (from.has_ishdrallowed()) {
      set_ishdrallowed(from.ishdrallowed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetAnselShotPermissionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAnselShotPermissionsResponse::CopyFrom(const GetAnselShotPermissionsResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAnselShotPermissionsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetAnselShotPermissionsResponse::Swap(GetAnselShotPermissionsResponse* other) {
  if (other != this) {
    std::swap(isintegrationdetected_, other->isintegrationdetected_);
    std::swap(ishdrallowed_, other->ishdrallowed_);
    isshotallowed_.Swap(&other->isshotallowed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetAnselShotPermissionsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAnselShotPermissionsResponse_descriptor_;
  metadata.reflection = GetAnselShotPermissionsResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetLangIdRequest::kLangFieldNumber;
const int SetLangIdRequest::kSubLangFieldNumber;
#endif  // !_MSC_VER

SetLangIdRequest::SetLangIdRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetLangIdRequest)
}

void SetLangIdRequest::InitAsDefaultInstance() {
}

SetLangIdRequest::SetLangIdRequest(const SetLangIdRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetLangIdRequest)
}

void SetLangIdRequest::SharedCtor() {
  _cached_size_ = 0;
  lang_ = 0;
  sublang_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLangIdRequest::~SetLangIdRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetLangIdRequest)
  SharedDtor();
}

void SetLangIdRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetLangIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLangIdRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLangIdRequest_descriptor_;
}

const SetLangIdRequest& SetLangIdRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetLangIdRequest* SetLangIdRequest::default_instance_ = NULL;

SetLangIdRequest* SetLangIdRequest::New() const {
  return new SetLangIdRequest;
}

void SetLangIdRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SetLangIdRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(lang_, sublang_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLangIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetLangIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lang = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lang_)));
          set_has_lang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_subLang;
        break;
      }

      // required int32 subLang = 2;
      case 2: {
        if (tag == 16) {
         parse_subLang:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sublang_)));
          set_has_sublang();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetLangIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetLangIdRequest)
  return false;
#undef DO_
}

void SetLangIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetLangIdRequest)
  // required int32 lang = 1;
  if (has_lang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lang(), output);
  }

  // required int32 subLang = 2;
  if (has_sublang()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sublang(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetLangIdRequest)
}

::google::protobuf::uint8* SetLangIdRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetLangIdRequest)
  // required int32 lang = 1;
  if (has_lang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lang(), target);
  }

  // required int32 subLang = 2;
  if (has_sublang()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sublang(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetLangIdRequest)
  return target;
}

int SetLangIdRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 lang = 1;
    if (has_lang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lang());
    }

    // required int32 subLang = 2;
    if (has_sublang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sublang());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetLangIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLangIdRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLangIdRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLangIdRequest::MergeFrom(const SetLangIdRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lang()) {
      set_lang(from.lang());
    }
    if (from.has_sublang()) {
      set_sublang(from.sublang());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLangIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLangIdRequest::CopyFrom(const SetLangIdRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLangIdRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetLangIdRequest::Swap(SetLangIdRequest* other) {
  if (other != this) {
    std::swap(lang_, other->lang_);
    std::swap(sublang_, other->sublang_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLangIdRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLangIdRequest_descriptor_;
  metadata.reflection = SetLangIdRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetLangIdResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetLangIdResponse::SetLangIdResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetLangIdResponse)
}

void SetLangIdResponse::InitAsDefaultInstance() {
}

SetLangIdResponse::SetLangIdResponse(const SetLangIdResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetLangIdResponse)
}

void SetLangIdResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetLangIdResponse::~SetLangIdResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetLangIdResponse)
  SharedDtor();
}

void SetLangIdResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetLangIdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetLangIdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetLangIdResponse_descriptor_;
}

const SetLangIdResponse& SetLangIdResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetLangIdResponse* SetLangIdResponse::default_instance_ = NULL;

SetLangIdResponse* SetLangIdResponse::New() const {
  return new SetLangIdResponse;
}

void SetLangIdResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetLangIdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetLangIdResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetLangIdResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetLangIdResponse)
  return false;
#undef DO_
}

void SetLangIdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetLangIdResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetLangIdResponse)
}

::google::protobuf::uint8* SetLangIdResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetLangIdResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetLangIdResponse)
  return target;
}

int SetLangIdResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetLangIdResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetLangIdResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetLangIdResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetLangIdResponse::MergeFrom(const SetLangIdResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetLangIdResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetLangIdResponse::CopyFrom(const SetLangIdResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetLangIdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetLangIdResponse::Swap(SetLangIdResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetLangIdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetLangIdResponse_descriptor_;
  metadata.reflection = SetLangIdResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetFOVRangeRequest::GetFOVRangeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFOVRangeRequest)
}

void GetFOVRangeRequest::InitAsDefaultInstance() {
}

GetFOVRangeRequest::GetFOVRangeRequest(const GetFOVRangeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFOVRangeRequest)
}

void GetFOVRangeRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFOVRangeRequest::~GetFOVRangeRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFOVRangeRequest)
  SharedDtor();
}

void GetFOVRangeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFOVRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFOVRangeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFOVRangeRequest_descriptor_;
}

const GetFOVRangeRequest& GetFOVRangeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFOVRangeRequest* GetFOVRangeRequest::default_instance_ = NULL;

GetFOVRangeRequest* GetFOVRangeRequest::New() const {
  return new GetFOVRangeRequest;
}

void GetFOVRangeRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFOVRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFOVRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFOVRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFOVRangeRequest)
  return false;
#undef DO_
}

void GetFOVRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFOVRangeRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFOVRangeRequest)
}

::google::protobuf::uint8* GetFOVRangeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFOVRangeRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFOVRangeRequest)
  return target;
}

int GetFOVRangeRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFOVRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFOVRangeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFOVRangeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFOVRangeRequest::MergeFrom(const GetFOVRangeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFOVRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFOVRangeRequest::CopyFrom(const GetFOVRangeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFOVRangeRequest::IsInitialized() const {

  return true;
}

void GetFOVRangeRequest::Swap(GetFOVRangeRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFOVRangeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFOVRangeRequest_descriptor_;
  metadata.reflection = GetFOVRangeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFOVRangeResponse::kMinFovFieldNumber;
const int GetFOVRangeResponse::kMaxFovFieldNumber;
#endif  // !_MSC_VER

GetFOVRangeResponse::GetFOVRangeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFOVRangeResponse)
}

void GetFOVRangeResponse::InitAsDefaultInstance() {
}

GetFOVRangeResponse::GetFOVRangeResponse(const GetFOVRangeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFOVRangeResponse)
}

void GetFOVRangeResponse::SharedCtor() {
  _cached_size_ = 0;
  minfov_ = 0;
  maxfov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFOVRangeResponse::~GetFOVRangeResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFOVRangeResponse)
  SharedDtor();
}

void GetFOVRangeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFOVRangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFOVRangeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFOVRangeResponse_descriptor_;
}

const GetFOVRangeResponse& GetFOVRangeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFOVRangeResponse* GetFOVRangeResponse::default_instance_ = NULL;

GetFOVRangeResponse* GetFOVRangeResponse::New() const {
  return new GetFOVRangeResponse;
}

void GetFOVRangeResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetFOVRangeResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(minfov_, maxfov_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFOVRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFOVRangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float minFov = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minfov_)));
          set_has_minfov();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_maxFov;
        break;
      }

      // required float maxFov = 2;
      case 2: {
        if (tag == 21) {
         parse_maxFov:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxfov_)));
          set_has_maxfov();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFOVRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFOVRangeResponse)
  return false;
#undef DO_
}

void GetFOVRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFOVRangeResponse)
  // required float minFov = 1;
  if (has_minfov()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->minfov(), output);
  }

  // required float maxFov = 2;
  if (has_maxfov()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->maxfov(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFOVRangeResponse)
}

::google::protobuf::uint8* GetFOVRangeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFOVRangeResponse)
  // required float minFov = 1;
  if (has_minfov()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->minfov(), target);
  }

  // required float maxFov = 2;
  if (has_maxfov()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->maxfov(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFOVRangeResponse)
  return target;
}

int GetFOVRangeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float minFov = 1;
    if (has_minfov()) {
      total_size += 1 + 4;
    }

    // required float maxFov = 2;
    if (has_maxfov()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFOVRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFOVRangeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFOVRangeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFOVRangeResponse::MergeFrom(const GetFOVRangeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minfov()) {
      set_minfov(from.minfov());
    }
    if (from.has_maxfov()) {
      set_maxfov(from.maxfov());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFOVRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFOVRangeResponse::CopyFrom(const GetFOVRangeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFOVRangeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetFOVRangeResponse::Swap(GetFOVRangeResponse* other) {
  if (other != this) {
    std::swap(minfov_, other->minfov_);
    std::swap(maxfov_, other->maxfov_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFOVRangeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFOVRangeResponse_descriptor_;
  metadata.reflection = GetFOVRangeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFOVRequest::kFovFieldNumber;
#endif  // !_MSC_VER

SetFOVRequest::SetFOVRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFOVRequest)
}

void SetFOVRequest::InitAsDefaultInstance() {
}

SetFOVRequest::SetFOVRequest(const SetFOVRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFOVRequest)
}

void SetFOVRequest::SharedCtor() {
  _cached_size_ = 0;
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFOVRequest::~SetFOVRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFOVRequest)
  SharedDtor();
}

void SetFOVRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFOVRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFOVRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFOVRequest_descriptor_;
}

const SetFOVRequest& SetFOVRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFOVRequest* SetFOVRequest::default_instance_ = NULL;

SetFOVRequest* SetFOVRequest::New() const {
  return new SetFOVRequest;
}

void SetFOVRequest::Clear() {
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFOVRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFOVRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fov = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));
          set_has_fov();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFOVRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFOVRequest)
  return false;
#undef DO_
}

void SetFOVRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFOVRequest)
  // required float fov = 1;
  if (has_fov()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fov(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFOVRequest)
}

::google::protobuf::uint8* SetFOVRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFOVRequest)
  // required float fov = 1;
  if (has_fov()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fov(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFOVRequest)
  return target;
}

int SetFOVRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float fov = 1;
    if (has_fov()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFOVRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFOVRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFOVRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFOVRequest::MergeFrom(const SetFOVRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fov()) {
      set_fov(from.fov());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFOVRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFOVRequest::CopyFrom(const SetFOVRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFOVRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetFOVRequest::Swap(SetFOVRequest* other) {
  if (other != this) {
    std::swap(fov_, other->fov_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFOVRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFOVRequest_descriptor_;
  metadata.reflection = SetFOVRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFOVResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetFOVResponse::SetFOVResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFOVResponse)
}

void SetFOVResponse::InitAsDefaultInstance() {
}

SetFOVResponse::SetFOVResponse(const SetFOVResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFOVResponse)
}

void SetFOVResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFOVResponse::~SetFOVResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFOVResponse)
  SharedDtor();
}

void SetFOVResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFOVResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFOVResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFOVResponse_descriptor_;
}

const SetFOVResponse& SetFOVResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFOVResponse* SetFOVResponse::default_instance_ = NULL;

SetFOVResponse* SetFOVResponse::New() const {
  return new SetFOVResponse;
}

void SetFOVResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFOVResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFOVResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFOVResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFOVResponse)
  return false;
#undef DO_
}

void SetFOVResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFOVResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFOVResponse)
}

::google::protobuf::uint8* SetFOVResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFOVResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFOVResponse)
  return target;
}

int SetFOVResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFOVResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFOVResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFOVResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFOVResponse::MergeFrom(const SetFOVResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFOVResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFOVResponse::CopyFrom(const SetFOVResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFOVResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetFOVResponse::Swap(SetFOVResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFOVResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFOVResponse_descriptor_;
  metadata.reflection = SetFOVResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetLwrrentFOVRequest::GetLwrrentFOVRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetLwrrentFOVRequest)
}

void GetLwrrentFOVRequest::InitAsDefaultInstance() {
}

GetLwrrentFOVRequest::GetLwrrentFOVRequest(const GetLwrrentFOVRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetLwrrentFOVRequest)
}

void GetLwrrentFOVRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLwrrentFOVRequest::~GetLwrrentFOVRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetLwrrentFOVRequest)
  SharedDtor();
}

void GetLwrrentFOVRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetLwrrentFOVRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLwrrentFOVRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLwrrentFOVRequest_descriptor_;
}

const GetLwrrentFOVRequest& GetLwrrentFOVRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetLwrrentFOVRequest* GetLwrrentFOVRequest::default_instance_ = NULL;

GetLwrrentFOVRequest* GetLwrrentFOVRequest::New() const {
  return new GetLwrrentFOVRequest;
}

void GetLwrrentFOVRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLwrrentFOVRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetLwrrentFOVRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetLwrrentFOVRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetLwrrentFOVRequest)
  return false;
#undef DO_
}

void GetLwrrentFOVRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetLwrrentFOVRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetLwrrentFOVRequest)
}

::google::protobuf::uint8* GetLwrrentFOVRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetLwrrentFOVRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetLwrrentFOVRequest)
  return target;
}

int GetLwrrentFOVRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetLwrrentFOVRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLwrrentFOVRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLwrrentFOVRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLwrrentFOVRequest::MergeFrom(const GetLwrrentFOVRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLwrrentFOVRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLwrrentFOVRequest::CopyFrom(const GetLwrrentFOVRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLwrrentFOVRequest::IsInitialized() const {

  return true;
}

void GetLwrrentFOVRequest::Swap(GetLwrrentFOVRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLwrrentFOVRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLwrrentFOVRequest_descriptor_;
  metadata.reflection = GetLwrrentFOVRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetLwrrentFOVResponse::kFovFieldNumber;
#endif  // !_MSC_VER

GetLwrrentFOVResponse::GetLwrrentFOVResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetLwrrentFOVResponse)
}

void GetLwrrentFOVResponse::InitAsDefaultInstance() {
}

GetLwrrentFOVResponse::GetLwrrentFOVResponse(const GetLwrrentFOVResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetLwrrentFOVResponse)
}

void GetLwrrentFOVResponse::SharedCtor() {
  _cached_size_ = 0;
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetLwrrentFOVResponse::~GetLwrrentFOVResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetLwrrentFOVResponse)
  SharedDtor();
}

void GetLwrrentFOVResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetLwrrentFOVResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLwrrentFOVResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetLwrrentFOVResponse_descriptor_;
}

const GetLwrrentFOVResponse& GetLwrrentFOVResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetLwrrentFOVResponse* GetLwrrentFOVResponse::default_instance_ = NULL;

GetLwrrentFOVResponse* GetLwrrentFOVResponse::New() const {
  return new GetLwrrentFOVResponse;
}

void GetLwrrentFOVResponse::Clear() {
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetLwrrentFOVResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetLwrrentFOVResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fov = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));
          set_has_fov();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetLwrrentFOVResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetLwrrentFOVResponse)
  return false;
#undef DO_
}

void GetLwrrentFOVResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetLwrrentFOVResponse)
  // required float fov = 1;
  if (has_fov()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fov(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetLwrrentFOVResponse)
}

::google::protobuf::uint8* GetLwrrentFOVResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetLwrrentFOVResponse)
  // required float fov = 1;
  if (has_fov()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fov(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetLwrrentFOVResponse)
  return target;
}

int GetLwrrentFOVResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float fov = 1;
    if (has_fov()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetLwrrentFOVResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetLwrrentFOVResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetLwrrentFOVResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetLwrrentFOVResponse::MergeFrom(const GetLwrrentFOVResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fov()) {
      set_fov(from.fov());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetLwrrentFOVResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLwrrentFOVResponse::CopyFrom(const GetLwrrentFOVResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLwrrentFOVResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetLwrrentFOVResponse::Swap(GetLwrrentFOVResponse* other) {
  if (other != this) {
    std::swap(fov_, other->fov_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetLwrrentFOVResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetLwrrentFOVResponse_descriptor_;
  metadata.reflection = GetLwrrentFOVResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetRollRangeRequest::GetRollRangeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetRollRangeRequest)
}

void GetRollRangeRequest::InitAsDefaultInstance() {
}

GetRollRangeRequest::GetRollRangeRequest(const GetRollRangeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetRollRangeRequest)
}

void GetRollRangeRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRollRangeRequest::~GetRollRangeRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetRollRangeRequest)
  SharedDtor();
}

void GetRollRangeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetRollRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRollRangeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRollRangeRequest_descriptor_;
}

const GetRollRangeRequest& GetRollRangeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetRollRangeRequest* GetRollRangeRequest::default_instance_ = NULL;

GetRollRangeRequest* GetRollRangeRequest::New() const {
  return new GetRollRangeRequest;
}

void GetRollRangeRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRollRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetRollRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetRollRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetRollRangeRequest)
  return false;
#undef DO_
}

void GetRollRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetRollRangeRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetRollRangeRequest)
}

::google::protobuf::uint8* GetRollRangeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetRollRangeRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetRollRangeRequest)
  return target;
}

int GetRollRangeRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetRollRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRollRangeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRollRangeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRollRangeRequest::MergeFrom(const GetRollRangeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRollRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRollRangeRequest::CopyFrom(const GetRollRangeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRollRangeRequest::IsInitialized() const {

  return true;
}

void GetRollRangeRequest::Swap(GetRollRangeRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRollRangeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRollRangeRequest_descriptor_;
  metadata.reflection = GetRollRangeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetRollRangeResponse::kMinRollFieldNumber;
const int GetRollRangeResponse::kMaxRollFieldNumber;
#endif  // !_MSC_VER

GetRollRangeResponse::GetRollRangeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetRollRangeResponse)
}

void GetRollRangeResponse::InitAsDefaultInstance() {
}

GetRollRangeResponse::GetRollRangeResponse(const GetRollRangeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetRollRangeResponse)
}

void GetRollRangeResponse::SharedCtor() {
  _cached_size_ = 0;
  minroll_ = 0;
  maxroll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetRollRangeResponse::~GetRollRangeResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetRollRangeResponse)
  SharedDtor();
}

void GetRollRangeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetRollRangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRollRangeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRollRangeResponse_descriptor_;
}

const GetRollRangeResponse& GetRollRangeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetRollRangeResponse* GetRollRangeResponse::default_instance_ = NULL;

GetRollRangeResponse* GetRollRangeResponse::New() const {
  return new GetRollRangeResponse;
}

void GetRollRangeResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetRollRangeResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(minroll_, maxroll_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetRollRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetRollRangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float minRoll = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minroll_)));
          set_has_minroll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_maxRoll;
        break;
      }

      // required float maxRoll = 2;
      case 2: {
        if (tag == 21) {
         parse_maxRoll:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxroll_)));
          set_has_maxroll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetRollRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetRollRangeResponse)
  return false;
#undef DO_
}

void GetRollRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetRollRangeResponse)
  // required float minRoll = 1;
  if (has_minroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->minroll(), output);
  }

  // required float maxRoll = 2;
  if (has_maxroll()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->maxroll(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetRollRangeResponse)
}

::google::protobuf::uint8* GetRollRangeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetRollRangeResponse)
  // required float minRoll = 1;
  if (has_minroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->minroll(), target);
  }

  // required float maxRoll = 2;
  if (has_maxroll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->maxroll(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetRollRangeResponse)
  return target;
}

int GetRollRangeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float minRoll = 1;
    if (has_minroll()) {
      total_size += 1 + 4;
    }

    // required float maxRoll = 2;
    if (has_maxroll()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetRollRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetRollRangeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetRollRangeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetRollRangeResponse::MergeFrom(const GetRollRangeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minroll()) {
      set_minroll(from.minroll());
    }
    if (from.has_maxroll()) {
      set_maxroll(from.maxroll());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetRollRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRollRangeResponse::CopyFrom(const GetRollRangeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRollRangeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void GetRollRangeResponse::Swap(GetRollRangeResponse* other) {
  if (other != this) {
    std::swap(minroll_, other->minroll_);
    std::swap(maxroll_, other->maxroll_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetRollRangeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRollRangeResponse_descriptor_;
  metadata.reflection = GetRollRangeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetRollRequest::kRollFieldNumber;
#endif  // !_MSC_VER

SetRollRequest::SetRollRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetRollRequest)
}

void SetRollRequest::InitAsDefaultInstance() {
}

SetRollRequest::SetRollRequest(const SetRollRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetRollRequest)
}

void SetRollRequest::SharedCtor() {
  _cached_size_ = 0;
  roll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetRollRequest::~SetRollRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetRollRequest)
  SharedDtor();
}

void SetRollRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetRollRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetRollRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetRollRequest_descriptor_;
}

const SetRollRequest& SetRollRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetRollRequest* SetRollRequest::default_instance_ = NULL;

SetRollRequest* SetRollRequest::New() const {
  return new SetRollRequest;
}

void SetRollRequest::Clear() {
  roll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetRollRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetRollRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float roll = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
          set_has_roll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetRollRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetRollRequest)
  return false;
#undef DO_
}

void SetRollRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetRollRequest)
  // required float roll = 1;
  if (has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->roll(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetRollRequest)
}

::google::protobuf::uint8* SetRollRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetRollRequest)
  // required float roll = 1;
  if (has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->roll(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetRollRequest)
  return target;
}

int SetRollRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float roll = 1;
    if (has_roll()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetRollRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetRollRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetRollRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetRollRequest::MergeFrom(const SetRollRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roll()) {
      set_roll(from.roll());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetRollRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRollRequest::CopyFrom(const SetRollRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRollRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetRollRequest::Swap(SetRollRequest* other) {
  if (other != this) {
    std::swap(roll_, other->roll_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetRollRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetRollRequest_descriptor_;
  metadata.reflection = SetRollRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetRollResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetRollResponse::SetRollResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetRollResponse)
}

void SetRollResponse::InitAsDefaultInstance() {
}

SetRollResponse::SetRollResponse(const SetRollResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetRollResponse)
}

void SetRollResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetRollResponse::~SetRollResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetRollResponse)
  SharedDtor();
}

void SetRollResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetRollResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetRollResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetRollResponse_descriptor_;
}

const SetRollResponse& SetRollResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetRollResponse* SetRollResponse::default_instance_ = NULL;

SetRollResponse* SetRollResponse::New() const {
  return new SetRollResponse;
}

void SetRollResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetRollResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetRollResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetRollResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetRollResponse)
  return false;
#undef DO_
}

void SetRollResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetRollResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetRollResponse)
}

::google::protobuf::uint8* SetRollResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetRollResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetRollResponse)
  return target;
}

int SetRollResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetRollResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetRollResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetRollResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetRollResponse::MergeFrom(const SetRollResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetRollResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRollResponse::CopyFrom(const SetRollResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRollResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetRollResponse::Swap(SetRollResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetRollResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetRollResponse_descriptor_;
  metadata.reflection = SetRollResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateRollRequest::kRollFieldNumber;
#endif  // !_MSC_VER

UpdateRollRequest::UpdateRollRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UpdateRollRequest)
}

void UpdateRollRequest::InitAsDefaultInstance() {
}

UpdateRollRequest::UpdateRollRequest(const UpdateRollRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UpdateRollRequest)
}

void UpdateRollRequest::SharedCtor() {
  _cached_size_ = 0;
  roll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRollRequest::~UpdateRollRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UpdateRollRequest)
  SharedDtor();
}

void UpdateRollRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateRollRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRollRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRollRequest_descriptor_;
}

const UpdateRollRequest& UpdateRollRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UpdateRollRequest* UpdateRollRequest::default_instance_ = NULL;

UpdateRollRequest* UpdateRollRequest::New() const {
  return new UpdateRollRequest;
}

void UpdateRollRequest::Clear() {
  roll_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateRollRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UpdateRollRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float roll = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &roll_)));
          set_has_roll();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UpdateRollRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UpdateRollRequest)
  return false;
#undef DO_
}

void UpdateRollRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UpdateRollRequest)
  // required float roll = 1;
  if (has_roll()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->roll(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UpdateRollRequest)
}

::google::protobuf::uint8* UpdateRollRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UpdateRollRequest)
  // required float roll = 1;
  if (has_roll()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->roll(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UpdateRollRequest)
  return target;
}

int UpdateRollRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float roll = 1;
    if (has_roll()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UpdateRollRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateRollRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateRollRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateRollRequest::MergeFrom(const UpdateRollRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roll()) {
      set_roll(from.roll());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateRollRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRollRequest::CopyFrom(const UpdateRollRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRollRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateRollRequest::Swap(UpdateRollRequest* other) {
  if (other != this) {
    std::swap(roll_, other->roll_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateRollRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRollRequest_descriptor_;
  metadata.reflection = UpdateRollRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateRollResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UpdateRollResponse::UpdateRollResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UpdateRollResponse)
}

void UpdateRollResponse::InitAsDefaultInstance() {
}

UpdateRollResponse::UpdateRollResponse(const UpdateRollResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UpdateRollResponse)
}

void UpdateRollResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateRollResponse::~UpdateRollResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UpdateRollResponse)
  SharedDtor();
}

void UpdateRollResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateRollResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRollResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRollResponse_descriptor_;
}

const UpdateRollResponse& UpdateRollResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UpdateRollResponse* UpdateRollResponse::default_instance_ = NULL;

UpdateRollResponse* UpdateRollResponse::New() const {
  return new UpdateRollResponse;
}

void UpdateRollResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateRollResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UpdateRollResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UpdateRollResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UpdateRollResponse)
  return false;
#undef DO_
}

void UpdateRollResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UpdateRollResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UpdateRollResponse)
}

::google::protobuf::uint8* UpdateRollResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UpdateRollResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UpdateRollResponse)
  return target;
}

int UpdateRollResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UpdateRollResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateRollResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateRollResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateRollResponse::MergeFrom(const UpdateRollResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateRollResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRollResponse::CopyFrom(const UpdateRollResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRollResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateRollResponse::Swap(UpdateRollResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateRollResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRollResponse_descriptor_;
  metadata.reflection = UpdateRollResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateFovRequest::kFovFieldNumber;
#endif  // !_MSC_VER

UpdateFovRequest::UpdateFovRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UpdateFovRequest)
}

void UpdateFovRequest::InitAsDefaultInstance() {
}

UpdateFovRequest::UpdateFovRequest(const UpdateFovRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UpdateFovRequest)
}

void UpdateFovRequest::SharedCtor() {
  _cached_size_ = 0;
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateFovRequest::~UpdateFovRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.UpdateFovRequest)
  SharedDtor();
}

void UpdateFovRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateFovRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFovRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateFovRequest_descriptor_;
}

const UpdateFovRequest& UpdateFovRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UpdateFovRequest* UpdateFovRequest::default_instance_ = NULL;

UpdateFovRequest* UpdateFovRequest::New() const {
  return new UpdateFovRequest;
}

void UpdateFovRequest::Clear() {
  fov_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateFovRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UpdateFovRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float fov = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fov_)));
          set_has_fov();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UpdateFovRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UpdateFovRequest)
  return false;
#undef DO_
}

void UpdateFovRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UpdateFovRequest)
  // required float fov = 1;
  if (has_fov()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->fov(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UpdateFovRequest)
}

::google::protobuf::uint8* UpdateFovRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UpdateFovRequest)
  // required float fov = 1;
  if (has_fov()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->fov(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UpdateFovRequest)
  return target;
}

int UpdateFovRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float fov = 1;
    if (has_fov()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UpdateFovRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateFovRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateFovRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateFovRequest::MergeFrom(const UpdateFovRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fov()) {
      set_fov(from.fov());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateFovRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFovRequest::CopyFrom(const UpdateFovRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFovRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateFovRequest::Swap(UpdateFovRequest* other) {
  if (other != this) {
    std::swap(fov_, other->fov_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateFovRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateFovRequest_descriptor_;
  metadata.reflection = UpdateFovRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpdateFovResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

UpdateFovResponse::UpdateFovResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.UpdateFovResponse)
}

void UpdateFovResponse::InitAsDefaultInstance() {
}

UpdateFovResponse::UpdateFovResponse(const UpdateFovResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.UpdateFovResponse)
}

void UpdateFovResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpdateFovResponse::~UpdateFovResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.UpdateFovResponse)
  SharedDtor();
}

void UpdateFovResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpdateFovResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateFovResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateFovResponse_descriptor_;
}

const UpdateFovResponse& UpdateFovResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

UpdateFovResponse* UpdateFovResponse::default_instance_ = NULL;

UpdateFovResponse* UpdateFovResponse::New() const {
  return new UpdateFovResponse;
}

void UpdateFovResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpdateFovResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.UpdateFovResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.UpdateFovResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.UpdateFovResponse)
  return false;
#undef DO_
}

void UpdateFovResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.UpdateFovResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.UpdateFovResponse)
}

::google::protobuf::uint8* UpdateFovResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.UpdateFovResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.UpdateFovResponse)
  return target;
}

int UpdateFovResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void UpdateFovResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpdateFovResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpdateFovResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpdateFovResponse::MergeFrom(const UpdateFovResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpdateFovResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateFovResponse::CopyFrom(const UpdateFovResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateFovResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void UpdateFovResponse::Swap(UpdateFovResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpdateFovResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateFovResponse_descriptor_;
  metadata.reflection = UpdateFovResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetScreenResolutionRequest::GetScreenResolutionRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetScreenResolutionRequest)
}

void GetScreenResolutionRequest::InitAsDefaultInstance() {
}

GetScreenResolutionRequest::GetScreenResolutionRequest(const GetScreenResolutionRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetScreenResolutionRequest)
}

void GetScreenResolutionRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetScreenResolutionRequest::~GetScreenResolutionRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetScreenResolutionRequest)
  SharedDtor();
}

void GetScreenResolutionRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetScreenResolutionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScreenResolutionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetScreenResolutionRequest_descriptor_;
}

const GetScreenResolutionRequest& GetScreenResolutionRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetScreenResolutionRequest* GetScreenResolutionRequest::default_instance_ = NULL;

GetScreenResolutionRequest* GetScreenResolutionRequest::New() const {
  return new GetScreenResolutionRequest;
}

void GetScreenResolutionRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetScreenResolutionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetScreenResolutionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetScreenResolutionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetScreenResolutionRequest)
  return false;
#undef DO_
}

void GetScreenResolutionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetScreenResolutionRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetScreenResolutionRequest)
}

::google::protobuf::uint8* GetScreenResolutionRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetScreenResolutionRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetScreenResolutionRequest)
  return target;
}

int GetScreenResolutionRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetScreenResolutionRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetScreenResolutionRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetScreenResolutionRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetScreenResolutionRequest::MergeFrom(const GetScreenResolutionRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetScreenResolutionRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScreenResolutionRequest::CopyFrom(const GetScreenResolutionRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScreenResolutionRequest::IsInitialized() const {

  return true;
}

void GetScreenResolutionRequest::Swap(GetScreenResolutionRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetScreenResolutionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetScreenResolutionRequest_descriptor_;
  metadata.reflection = GetScreenResolutionRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetScreenResolutionResponse::kStatusFieldNumber;
const int GetScreenResolutionResponse::kXResolutionFieldNumber;
const int GetScreenResolutionResponse::kYResolutionFieldNumber;
#endif  // !_MSC_VER

GetScreenResolutionResponse::GetScreenResolutionResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetScreenResolutionResponse)
}

void GetScreenResolutionResponse::InitAsDefaultInstance() {
}

GetScreenResolutionResponse::GetScreenResolutionResponse(const GetScreenResolutionResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetScreenResolutionResponse)
}

void GetScreenResolutionResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  xresolution_ = 0;
  yresolution_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetScreenResolutionResponse::~GetScreenResolutionResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetScreenResolutionResponse)
  SharedDtor();
}

void GetScreenResolutionResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetScreenResolutionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScreenResolutionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetScreenResolutionResponse_descriptor_;
}

const GetScreenResolutionResponse& GetScreenResolutionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetScreenResolutionResponse* GetScreenResolutionResponse::default_instance_ = NULL;

GetScreenResolutionResponse* GetScreenResolutionResponse::New() const {
  return new GetScreenResolutionResponse;
}

void GetScreenResolutionResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetScreenResolutionResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(xresolution_, yresolution_);
    status_ = 1;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetScreenResolutionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetScreenResolutionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_xResolution;
        break;
      }

      // required int32 xResolution = 2;
      case 2: {
        if (tag == 16) {
         parse_xResolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xresolution_)));
          set_has_xresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_yResolution;
        break;
      }

      // required int32 yResolution = 3;
      case 3: {
        if (tag == 24) {
         parse_yResolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yresolution_)));
          set_has_yresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetScreenResolutionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetScreenResolutionResponse)
  return false;
#undef DO_
}

void GetScreenResolutionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetScreenResolutionResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required int32 xResolution = 2;
  if (has_xresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->xresolution(), output);
  }

  // required int32 yResolution = 3;
  if (has_yresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yresolution(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetScreenResolutionResponse)
}

::google::protobuf::uint8* GetScreenResolutionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetScreenResolutionResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required int32 xResolution = 2;
  if (has_xresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->xresolution(), target);
  }

  // required int32 yResolution = 3;
  if (has_yresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yresolution(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetScreenResolutionResponse)
  return target;
}

int GetScreenResolutionResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required int32 xResolution = 2;
    if (has_xresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xresolution());
    }

    // required int32 yResolution = 3;
    if (has_yresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yresolution());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetScreenResolutionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetScreenResolutionResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetScreenResolutionResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetScreenResolutionResponse::MergeFrom(const GetScreenResolutionResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_xresolution()) {
      set_xresolution(from.xresolution());
    }
    if (from.has_yresolution()) {
      set_yresolution(from.yresolution());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetScreenResolutionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScreenResolutionResponse::CopyFrom(const GetScreenResolutionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScreenResolutionResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetScreenResolutionResponse::Swap(GetScreenResolutionResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(xresolution_, other->xresolution_);
    std::swap(yresolution_, other->yresolution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetScreenResolutionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetScreenResolutionResponse_descriptor_;
  metadata.reflection = GetScreenResolutionResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CaptureShotRequest::kTypeFieldNumber;
const int CaptureShotRequest::kHighresMultiplierFieldNumber;
const int CaptureShotRequest::kHorizontal360ResolutionFieldNumber;
const int CaptureShotRequest::kGenerateThumbnailFieldNumber;
const int CaptureShotRequest::kIsExrFieldNumber;
const int CaptureShotRequest::kHighresEnhanceFieldNumber;
const int CaptureShotRequest::kIsJxrFieldNumber;
#endif  // !_MSC_VER

CaptureShotRequest::CaptureShotRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.CaptureShotRequest)
}

void CaptureShotRequest::InitAsDefaultInstance() {
}

CaptureShotRequest::CaptureShotRequest(const CaptureShotRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.CaptureShotRequest)
}

void CaptureShotRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  highresmultiplier_ = 0;
  horizontal360resolution_ = 0;
  generatethumbnail_ = false;
  isexr_ = false;
  highresenhance_ = false;
  isjxr_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CaptureShotRequest::~CaptureShotRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.CaptureShotRequest)
  SharedDtor();
}

void CaptureShotRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CaptureShotRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptureShotRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CaptureShotRequest_descriptor_;
}

const CaptureShotRequest& CaptureShotRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

CaptureShotRequest* CaptureShotRequest::default_instance_ = NULL;

CaptureShotRequest* CaptureShotRequest::New() const {
  return new CaptureShotRequest;
}

void CaptureShotRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<CaptureShotRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(type_, isjxr_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CaptureShotRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.CaptureShotRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.ShotTypeIPC type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ShotTypeIPC_IsValid(value)) {
            set_type(static_cast< ::AnselIpc::ShotTypeIPC >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_highresMultiplier;
        break;
      }

      // optional int32 highresMultiplier = 2;
      case 2: {
        if (tag == 16) {
         parse_highresMultiplier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highresmultiplier_)));
          set_has_highresmultiplier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_horizontal360Resolution;
        break;
      }

      // optional int32 horizontal360Resolution = 3;
      case 3: {
        if (tag == 24) {
         parse_horizontal360Resolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horizontal360resolution_)));
          set_has_horizontal360resolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_generateThumbnail;
        break;
      }

      // optional bool generateThumbnail = 4;
      case 4: {
        if (tag == 32) {
         parse_generateThumbnail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generatethumbnail_)));
          set_has_generatethumbnail();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_isExr;
        break;
      }

      // optional bool isExr = 5;
      case 5: {
        if (tag == 40) {
         parse_isExr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexr_)));
          set_has_isexr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_highresEnhance;
        break;
      }

      // optional bool highresEnhance = 6;
      case 6: {
        if (tag == 48) {
         parse_highresEnhance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &highresenhance_)));
          set_has_highresenhance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_isJxr;
        break;
      }

      // optional bool isJxr = 7;
      case 7: {
        if (tag == 56) {
         parse_isJxr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isjxr_)));
          set_has_isjxr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.CaptureShotRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.CaptureShotRequest)
  return false;
#undef DO_
}

void CaptureShotRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.CaptureShotRequest)
  // required .AnselIpc.ShotTypeIPC type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 highresMultiplier = 2;
  if (has_highresmultiplier()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->highresmultiplier(), output);
  }

  // optional int32 horizontal360Resolution = 3;
  if (has_horizontal360resolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->horizontal360resolution(), output);
  }

  // optional bool generateThumbnail = 4;
  if (has_generatethumbnail()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->generatethumbnail(), output);
  }

  // optional bool isExr = 5;
  if (has_isexr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isexr(), output);
  }

  // optional bool highresEnhance = 6;
  if (has_highresenhance()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->highresenhance(), output);
  }

  // optional bool isJxr = 7;
  if (has_isjxr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isjxr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.CaptureShotRequest)
}

::google::protobuf::uint8* CaptureShotRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.CaptureShotRequest)
  // required .AnselIpc.ShotTypeIPC type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 highresMultiplier = 2;
  if (has_highresmultiplier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->highresmultiplier(), target);
  }

  // optional int32 horizontal360Resolution = 3;
  if (has_horizontal360resolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->horizontal360resolution(), target);
  }

  // optional bool generateThumbnail = 4;
  if (has_generatethumbnail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->generatethumbnail(), target);
  }

  // optional bool isExr = 5;
  if (has_isexr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isexr(), target);
  }

  // optional bool highresEnhance = 6;
  if (has_highresenhance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->highresenhance(), target);
  }

  // optional bool isJxr = 7;
  if (has_isjxr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isjxr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.CaptureShotRequest)
  return target;
}

int CaptureShotRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.ShotTypeIPC type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 highresMultiplier = 2;
    if (has_highresmultiplier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->highresmultiplier());
    }

    // optional int32 horizontal360Resolution = 3;
    if (has_horizontal360resolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horizontal360resolution());
    }

    // optional bool generateThumbnail = 4;
    if (has_generatethumbnail()) {
      total_size += 1 + 1;
    }

    // optional bool isExr = 5;
    if (has_isexr()) {
      total_size += 1 + 1;
    }

    // optional bool highresEnhance = 6;
    if (has_highresenhance()) {
      total_size += 1 + 1;
    }

    // optional bool isJxr = 7;
    if (has_isjxr()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void CaptureShotRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CaptureShotRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CaptureShotRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CaptureShotRequest::MergeFrom(const CaptureShotRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_highresmultiplier()) {
      set_highresmultiplier(from.highresmultiplier());
    }
    if (from.has_horizontal360resolution()) {
      set_horizontal360resolution(from.horizontal360resolution());
    }
    if (from.has_generatethumbnail()) {
      set_generatethumbnail(from.generatethumbnail());
    }
    if (from.has_isexr()) {
      set_isexr(from.isexr());
    }
    if (from.has_highresenhance()) {
      set_highresenhance(from.highresenhance());
    }
    if (from.has_isjxr()) {
      set_isjxr(from.isjxr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CaptureShotRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptureShotRequest::CopyFrom(const CaptureShotRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureShotRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CaptureShotRequest::Swap(CaptureShotRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(highresmultiplier_, other->highresmultiplier_);
    std::swap(horizontal360resolution_, other->horizontal360resolution_);
    std::swap(generatethumbnail_, other->generatethumbnail_);
    std::swap(isexr_, other->isexr_);
    std::swap(highresenhance_, other->highresenhance_);
    std::swap(isjxr_, other->isjxr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CaptureShotRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CaptureShotRequest_descriptor_;
  metadata.reflection = CaptureShotRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CaptureShotStartedResponse::kStatusFieldNumber;
const int CaptureShotStartedResponse::kTotalShotCountFieldNumber;
#endif  // !_MSC_VER

CaptureShotStartedResponse::CaptureShotStartedResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.CaptureShotStartedResponse)
}

void CaptureShotStartedResponse::InitAsDefaultInstance() {
}

CaptureShotStartedResponse::CaptureShotStartedResponse(const CaptureShotStartedResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.CaptureShotStartedResponse)
}

void CaptureShotStartedResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  totalshotcount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CaptureShotStartedResponse::~CaptureShotStartedResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.CaptureShotStartedResponse)
  SharedDtor();
}

void CaptureShotStartedResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CaptureShotStartedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptureShotStartedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CaptureShotStartedResponse_descriptor_;
}

const CaptureShotStartedResponse& CaptureShotStartedResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

CaptureShotStartedResponse* CaptureShotStartedResponse::default_instance_ = NULL;

CaptureShotStartedResponse* CaptureShotStartedResponse::New() const {
  return new CaptureShotStartedResponse;
}

void CaptureShotStartedResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 1;
    totalshotcount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CaptureShotStartedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.CaptureShotStartedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_totalShotCount;
        break;
      }

      // optional int32 totalShotCount = 3;
      case 3: {
        if (tag == 24) {
         parse_totalShotCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalshotcount_)));
          set_has_totalshotcount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.CaptureShotStartedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.CaptureShotStartedResponse)
  return false;
#undef DO_
}

void CaptureShotStartedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.CaptureShotStartedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional int32 totalShotCount = 3;
  if (has_totalshotcount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totalshotcount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.CaptureShotStartedResponse)
}

::google::protobuf::uint8* CaptureShotStartedResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.CaptureShotStartedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional int32 totalShotCount = 3;
  if (has_totalshotcount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totalshotcount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.CaptureShotStartedResponse)
  return target;
}

int CaptureShotStartedResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional int32 totalShotCount = 3;
    if (has_totalshotcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalshotcount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void CaptureShotStartedResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CaptureShotStartedResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CaptureShotStartedResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CaptureShotStartedResponse::MergeFrom(const CaptureShotStartedResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_totalshotcount()) {
      set_totalshotcount(from.totalshotcount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CaptureShotStartedResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptureShotStartedResponse::CopyFrom(const CaptureShotStartedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureShotStartedResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CaptureShotStartedResponse::Swap(CaptureShotStartedResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(totalshotcount_, other->totalshotcount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CaptureShotStartedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CaptureShotStartedResponse_descriptor_;
  metadata.reflection = CaptureShotStartedResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CaptureShotProgressResponse::kLwrrentShotFieldNumber;
#endif  // !_MSC_VER

CaptureShotProgressResponse::CaptureShotProgressResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.CaptureShotProgressResponse)
}

void CaptureShotProgressResponse::InitAsDefaultInstance() {
}

CaptureShotProgressResponse::CaptureShotProgressResponse(const CaptureShotProgressResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.CaptureShotProgressResponse)
}

void CaptureShotProgressResponse::SharedCtor() {
  _cached_size_ = 0;
  lwrrentshot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CaptureShotProgressResponse::~CaptureShotProgressResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.CaptureShotProgressResponse)
  SharedDtor();
}

void CaptureShotProgressResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CaptureShotProgressResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptureShotProgressResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CaptureShotProgressResponse_descriptor_;
}

const CaptureShotProgressResponse& CaptureShotProgressResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

CaptureShotProgressResponse* CaptureShotProgressResponse::default_instance_ = NULL;

CaptureShotProgressResponse* CaptureShotProgressResponse::New() const {
  return new CaptureShotProgressResponse;
}

void CaptureShotProgressResponse::Clear() {
  lwrrentshot_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CaptureShotProgressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.CaptureShotProgressResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 lwrrentShot = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lwrrentshot_)));
          set_has_lwrrentshot();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.CaptureShotProgressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.CaptureShotProgressResponse)
  return false;
#undef DO_
}

void CaptureShotProgressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.CaptureShotProgressResponse)
  // required int32 lwrrentShot = 1;
  if (has_lwrrentshot()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lwrrentshot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.CaptureShotProgressResponse)
}

::google::protobuf::uint8* CaptureShotProgressResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.CaptureShotProgressResponse)
  // required int32 lwrrentShot = 1;
  if (has_lwrrentshot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lwrrentshot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.CaptureShotProgressResponse)
  return target;
}

int CaptureShotProgressResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 lwrrentShot = 1;
    if (has_lwrrentshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lwrrentshot());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void CaptureShotProgressResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CaptureShotProgressResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CaptureShotProgressResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CaptureShotProgressResponse::MergeFrom(const CaptureShotProgressResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lwrrentshot()) {
      set_lwrrentshot(from.lwrrentshot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CaptureShotProgressResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptureShotProgressResponse::CopyFrom(const CaptureShotProgressResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureShotProgressResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CaptureShotProgressResponse::Swap(CaptureShotProgressResponse* other) {
  if (other != this) {
    std::swap(lwrrentshot_, other->lwrrentshot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CaptureShotProgressResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CaptureShotProgressResponse_descriptor_;
  metadata.reflection = CaptureShotProgressResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CaptureShotFinishedResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

CaptureShotFinishedResponse::CaptureShotFinishedResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.CaptureShotFinishedResponse)
}

void CaptureShotFinishedResponse::InitAsDefaultInstance() {
}

CaptureShotFinishedResponse::CaptureShotFinishedResponse(const CaptureShotFinishedResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.CaptureShotFinishedResponse)
}

void CaptureShotFinishedResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CaptureShotFinishedResponse::~CaptureShotFinishedResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.CaptureShotFinishedResponse)
  SharedDtor();
}

void CaptureShotFinishedResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CaptureShotFinishedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptureShotFinishedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CaptureShotFinishedResponse_descriptor_;
}

const CaptureShotFinishedResponse& CaptureShotFinishedResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

CaptureShotFinishedResponse* CaptureShotFinishedResponse::default_instance_ = NULL;

CaptureShotFinishedResponse* CaptureShotFinishedResponse::New() const {
  return new CaptureShotFinishedResponse;
}

void CaptureShotFinishedResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CaptureShotFinishedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.CaptureShotFinishedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.CaptureShotFinishedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.CaptureShotFinishedResponse)
  return false;
#undef DO_
}

void CaptureShotFinishedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.CaptureShotFinishedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.CaptureShotFinishedResponse)
}

::google::protobuf::uint8* CaptureShotFinishedResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.CaptureShotFinishedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.CaptureShotFinishedResponse)
  return target;
}

int CaptureShotFinishedResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void CaptureShotFinishedResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CaptureShotFinishedResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CaptureShotFinishedResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CaptureShotFinishedResponse::MergeFrom(const CaptureShotFinishedResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CaptureShotFinishedResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptureShotFinishedResponse::CopyFrom(const CaptureShotFinishedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureShotFinishedResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CaptureShotFinishedResponse::Swap(CaptureShotFinishedResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CaptureShotFinishedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CaptureShotFinishedResponse_descriptor_;
  metadata.reflection = CaptureShotFinishedResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CaptureShotProcessingFinishedResponse::kStatusFieldNumber;
const int CaptureShotProcessingFinishedResponse::kAbsoluteFilePathFieldNumber;
#endif  // !_MSC_VER

CaptureShotProcessingFinishedResponse::CaptureShotProcessingFinishedResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.CaptureShotProcessingFinishedResponse)
}

void CaptureShotProcessingFinishedResponse::InitAsDefaultInstance() {
}

CaptureShotProcessingFinishedResponse::CaptureShotProcessingFinishedResponse(const CaptureShotProcessingFinishedResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.CaptureShotProcessingFinishedResponse)
}

void CaptureShotProcessingFinishedResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 1;
  absolutefilepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CaptureShotProcessingFinishedResponse::~CaptureShotProcessingFinishedResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.CaptureShotProcessingFinishedResponse)
  SharedDtor();
}

void CaptureShotProcessingFinishedResponse::SharedDtor() {
  if (absolutefilepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete absolutefilepath_;
  }
  if (this != default_instance_) {
  }
}

void CaptureShotProcessingFinishedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CaptureShotProcessingFinishedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CaptureShotProcessingFinishedResponse_descriptor_;
}

const CaptureShotProcessingFinishedResponse& CaptureShotProcessingFinishedResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

CaptureShotProcessingFinishedResponse* CaptureShotProcessingFinishedResponse::default_instance_ = NULL;

CaptureShotProcessingFinishedResponse* CaptureShotProcessingFinishedResponse::New() const {
  return new CaptureShotProcessingFinishedResponse;
}

void CaptureShotProcessingFinishedResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 1;
    if (has_absolutefilepath()) {
      if (absolutefilepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        absolutefilepath_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CaptureShotProcessingFinishedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.CaptureShotProcessingFinishedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_absoluteFilePath;
        break;
      }

      // optional string absoluteFilePath = 2;
      case 2: {
        if (tag == 18) {
         parse_absoluteFilePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_absolutefilepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->absolutefilepath().data(), this->absolutefilepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "absolutefilepath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.CaptureShotProcessingFinishedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.CaptureShotProcessingFinishedResponse)
  return false;
#undef DO_
}

void CaptureShotProcessingFinishedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.CaptureShotProcessingFinishedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional string absoluteFilePath = 2;
  if (has_absolutefilepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->absolutefilepath().data(), this->absolutefilepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "absolutefilepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->absolutefilepath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.CaptureShotProcessingFinishedResponse)
}

::google::protobuf::uint8* CaptureShotProcessingFinishedResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.CaptureShotProcessingFinishedResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional string absoluteFilePath = 2;
  if (has_absolutefilepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->absolutefilepath().data(), this->absolutefilepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "absolutefilepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->absolutefilepath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.CaptureShotProcessingFinishedResponse)
  return target;
}

int CaptureShotProcessingFinishedResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string absoluteFilePath = 2;
    if (has_absolutefilepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->absolutefilepath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void CaptureShotProcessingFinishedResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CaptureShotProcessingFinishedResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CaptureShotProcessingFinishedResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CaptureShotProcessingFinishedResponse::MergeFrom(const CaptureShotProcessingFinishedResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_absolutefilepath()) {
      set_absolutefilepath(from.absolutefilepath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CaptureShotProcessingFinishedResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CaptureShotProcessingFinishedResponse::CopyFrom(const CaptureShotProcessingFinishedResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CaptureShotProcessingFinishedResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CaptureShotProcessingFinishedResponse::Swap(CaptureShotProcessingFinishedResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(absolutefilepath_, other->absolutefilepath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CaptureShotProcessingFinishedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CaptureShotProcessingFinishedResponse_descriptor_;
  metadata.reflection = CaptureShotProcessingFinishedResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EstimateCaptureRequest::kTypeFieldNumber;
const int EstimateCaptureRequest::kHighresMultiplierFieldNumber;
const int EstimateCaptureRequest::kHorizontal360ResolutionFieldNumber;
const int EstimateCaptureRequest::kGenerateThumbnailFieldNumber;
const int EstimateCaptureRequest::kIsExrFieldNumber;
const int EstimateCaptureRequest::kHighresEnhanceFieldNumber;
#endif  // !_MSC_VER

EstimateCaptureRequest::EstimateCaptureRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.EstimateCaptureRequest)
}

void EstimateCaptureRequest::InitAsDefaultInstance() {
}

EstimateCaptureRequest::EstimateCaptureRequest(const EstimateCaptureRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.EstimateCaptureRequest)
}

void EstimateCaptureRequest::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  highresmultiplier_ = 0;
  horizontal360resolution_ = 0;
  generatethumbnail_ = false;
  isexr_ = false;
  highresenhance_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EstimateCaptureRequest::~EstimateCaptureRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.EstimateCaptureRequest)
  SharedDtor();
}

void EstimateCaptureRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EstimateCaptureRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EstimateCaptureRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EstimateCaptureRequest_descriptor_;
}

const EstimateCaptureRequest& EstimateCaptureRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

EstimateCaptureRequest* EstimateCaptureRequest::default_instance_ = NULL;

EstimateCaptureRequest* EstimateCaptureRequest::New() const {
  return new EstimateCaptureRequest;
}

void EstimateCaptureRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EstimateCaptureRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(type_, highresenhance_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EstimateCaptureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.EstimateCaptureRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.ShotTypeIPC type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ShotTypeIPC_IsValid(value)) {
            set_type(static_cast< ::AnselIpc::ShotTypeIPC >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_highresMultiplier;
        break;
      }

      // optional int32 highresMultiplier = 2;
      case 2: {
        if (tag == 16) {
         parse_highresMultiplier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highresmultiplier_)));
          set_has_highresmultiplier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_horizontal360Resolution;
        break;
      }

      // optional int32 horizontal360Resolution = 3;
      case 3: {
        if (tag == 24) {
         parse_horizontal360Resolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horizontal360resolution_)));
          set_has_horizontal360resolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_generateThumbnail;
        break;
      }

      // optional bool generateThumbnail = 4;
      case 4: {
        if (tag == 32) {
         parse_generateThumbnail:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &generatethumbnail_)));
          set_has_generatethumbnail();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_isExr;
        break;
      }

      // optional bool isExr = 5;
      case 5: {
        if (tag == 40) {
         parse_isExr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isexr_)));
          set_has_isexr();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_highresEnhance;
        break;
      }

      // optional bool highresEnhance = 6;
      case 6: {
        if (tag == 48) {
         parse_highresEnhance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &highresenhance_)));
          set_has_highresenhance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.EstimateCaptureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.EstimateCaptureRequest)
  return false;
#undef DO_
}

void EstimateCaptureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.EstimateCaptureRequest)
  // required .AnselIpc.ShotTypeIPC type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 highresMultiplier = 2;
  if (has_highresmultiplier()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->highresmultiplier(), output);
  }

  // optional int32 horizontal360Resolution = 3;
  if (has_horizontal360resolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->horizontal360resolution(), output);
  }

  // optional bool generateThumbnail = 4;
  if (has_generatethumbnail()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->generatethumbnail(), output);
  }

  // optional bool isExr = 5;
  if (has_isexr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isexr(), output);
  }

  // optional bool highresEnhance = 6;
  if (has_highresenhance()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->highresenhance(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.EstimateCaptureRequest)
}

::google::protobuf::uint8* EstimateCaptureRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.EstimateCaptureRequest)
  // required .AnselIpc.ShotTypeIPC type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 highresMultiplier = 2;
  if (has_highresmultiplier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->highresmultiplier(), target);
  }

  // optional int32 horizontal360Resolution = 3;
  if (has_horizontal360resolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->horizontal360resolution(), target);
  }

  // optional bool generateThumbnail = 4;
  if (has_generatethumbnail()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->generatethumbnail(), target);
  }

  // optional bool isExr = 5;
  if (has_isexr()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isexr(), target);
  }

  // optional bool highresEnhance = 6;
  if (has_highresenhance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->highresenhance(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.EstimateCaptureRequest)
  return target;
}

int EstimateCaptureRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.ShotTypeIPC type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 highresMultiplier = 2;
    if (has_highresmultiplier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->highresmultiplier());
    }

    // optional int32 horizontal360Resolution = 3;
    if (has_horizontal360resolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->horizontal360resolution());
    }

    // optional bool generateThumbnail = 4;
    if (has_generatethumbnail()) {
      total_size += 1 + 1;
    }

    // optional bool isExr = 5;
    if (has_isexr()) {
      total_size += 1 + 1;
    }

    // optional bool highresEnhance = 6;
    if (has_highresenhance()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void EstimateCaptureRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EstimateCaptureRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EstimateCaptureRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EstimateCaptureRequest::MergeFrom(const EstimateCaptureRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_highresmultiplier()) {
      set_highresmultiplier(from.highresmultiplier());
    }
    if (from.has_horizontal360resolution()) {
      set_horizontal360resolution(from.horizontal360resolution());
    }
    if (from.has_generatethumbnail()) {
      set_generatethumbnail(from.generatethumbnail());
    }
    if (from.has_isexr()) {
      set_isexr(from.isexr());
    }
    if (from.has_highresenhance()) {
      set_highresenhance(from.highresenhance());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EstimateCaptureRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstimateCaptureRequest::CopyFrom(const EstimateCaptureRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateCaptureRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void EstimateCaptureRequest::Swap(EstimateCaptureRequest* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(highresmultiplier_, other->highresmultiplier_);
    std::swap(horizontal360resolution_, other->horizontal360resolution_);
    std::swap(generatethumbnail_, other->generatethumbnail_);
    std::swap(isexr_, other->isexr_);
    std::swap(highresenhance_, other->highresenhance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EstimateCaptureRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EstimateCaptureRequest_descriptor_;
  metadata.reflection = EstimateCaptureRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EstimateCaptureResponse::kInputDatasetSizeTotalInBytesFieldNumber;
const int EstimateCaptureResponse::kInputDatasetFrameCountFieldNumber;
const int EstimateCaptureResponse::kInputDatasetFrameSizeInBytesFieldNumber;
const int EstimateCaptureResponse::kStitcherMemoryRequirementsInBytesFieldNumber;
const int EstimateCaptureResponse::kOutputResolutionXFieldNumber;
const int EstimateCaptureResponse::kOutputResolutionYFieldNumber;
const int EstimateCaptureResponse::kOutputMPixelsFieldNumber;
const int EstimateCaptureResponse::kOutputSizeInBytesFieldNumber;
#endif  // !_MSC_VER

EstimateCaptureResponse::EstimateCaptureResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.EstimateCaptureResponse)
}

void EstimateCaptureResponse::InitAsDefaultInstance() {
}

EstimateCaptureResponse::EstimateCaptureResponse(const EstimateCaptureResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.EstimateCaptureResponse)
}

void EstimateCaptureResponse::SharedCtor() {
  _cached_size_ = 0;
  inputdatasetsizetotalinbytes_ = GOOGLE_ULONGLONG(0);
  inputdatasetframecount_ = GOOGLE_ULONGLONG(0);
  inputdatasetframesizeinbytes_ = GOOGLE_ULONGLONG(0);
  stitchermemoryrequirementsinbytes_ = GOOGLE_ULONGLONG(0);
  outputresolutionx_ = GOOGLE_ULONGLONG(0);
  outputresolutiony_ = GOOGLE_ULONGLONG(0);
  outputmpixels_ = GOOGLE_ULONGLONG(0);
  outputsizeinbytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EstimateCaptureResponse::~EstimateCaptureResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.EstimateCaptureResponse)
  SharedDtor();
}

void EstimateCaptureResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EstimateCaptureResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EstimateCaptureResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EstimateCaptureResponse_descriptor_;
}

const EstimateCaptureResponse& EstimateCaptureResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

EstimateCaptureResponse* EstimateCaptureResponse::default_instance_ = NULL;

EstimateCaptureResponse* EstimateCaptureResponse::New() const {
  return new EstimateCaptureResponse;
}

void EstimateCaptureResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<EstimateCaptureResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(inputdatasetsizetotalinbytes_, outputsizeinbytes_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EstimateCaptureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.EstimateCaptureResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 inputDatasetSizeTotalInBytes = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inputdatasetsizetotalinbytes_)));
          set_has_inputdatasetsizetotalinbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_inputDatasetFrameCount;
        break;
      }

      // required uint64 inputDatasetFrameCount = 2;
      case 2: {
        if (tag == 16) {
         parse_inputDatasetFrameCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inputdatasetframecount_)));
          set_has_inputdatasetframecount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_inputDatasetFrameSizeInBytes;
        break;
      }

      // required uint64 inputDatasetFrameSizeInBytes = 3;
      case 3: {
        if (tag == 24) {
         parse_inputDatasetFrameSizeInBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &inputdatasetframesizeinbytes_)));
          set_has_inputdatasetframesizeinbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stitcherMemoryRequirementsInBytes;
        break;
      }

      // required uint64 stitcherMemoryRequirementsInBytes = 4;
      case 4: {
        if (tag == 32) {
         parse_stitcherMemoryRequirementsInBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &stitchermemoryrequirementsinbytes_)));
          set_has_stitchermemoryrequirementsinbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_outputResolutionX;
        break;
      }

      // required uint64 outputResolutionX = 5;
      case 5: {
        if (tag == 40) {
         parse_outputResolutionX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &outputresolutionx_)));
          set_has_outputresolutionx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_outputResolutionY;
        break;
      }

      // required uint64 outputResolutionY = 6;
      case 6: {
        if (tag == 48) {
         parse_outputResolutionY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &outputresolutiony_)));
          set_has_outputresolutiony();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_outputMPixels;
        break;
      }

      // required uint64 outputMPixels = 7;
      case 7: {
        if (tag == 56) {
         parse_outputMPixels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &outputmpixels_)));
          set_has_outputmpixels();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_outputSizeInBytes;
        break;
      }

      // required uint64 outputSizeInBytes = 8;
      case 8: {
        if (tag == 64) {
         parse_outputSizeInBytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &outputsizeinbytes_)));
          set_has_outputsizeinbytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.EstimateCaptureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.EstimateCaptureResponse)
  return false;
#undef DO_
}

void EstimateCaptureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.EstimateCaptureResponse)
  // required uint64 inputDatasetSizeTotalInBytes = 1;
  if (has_inputdatasetsizetotalinbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->inputdatasetsizetotalinbytes(), output);
  }

  // required uint64 inputDatasetFrameCount = 2;
  if (has_inputdatasetframecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->inputdatasetframecount(), output);
  }

  // required uint64 inputDatasetFrameSizeInBytes = 3;
  if (has_inputdatasetframesizeinbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->inputdatasetframesizeinbytes(), output);
  }

  // required uint64 stitcherMemoryRequirementsInBytes = 4;
  if (has_stitchermemoryrequirementsinbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->stitchermemoryrequirementsinbytes(), output);
  }

  // required uint64 outputResolutionX = 5;
  if (has_outputresolutionx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->outputresolutionx(), output);
  }

  // required uint64 outputResolutionY = 6;
  if (has_outputresolutiony()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->outputresolutiony(), output);
  }

  // required uint64 outputMPixels = 7;
  if (has_outputmpixels()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->outputmpixels(), output);
  }

  // required uint64 outputSizeInBytes = 8;
  if (has_outputsizeinbytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->outputsizeinbytes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.EstimateCaptureResponse)
}

::google::protobuf::uint8* EstimateCaptureResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.EstimateCaptureResponse)
  // required uint64 inputDatasetSizeTotalInBytes = 1;
  if (has_inputdatasetsizetotalinbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->inputdatasetsizetotalinbytes(), target);
  }

  // required uint64 inputDatasetFrameCount = 2;
  if (has_inputdatasetframecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->inputdatasetframecount(), target);
  }

  // required uint64 inputDatasetFrameSizeInBytes = 3;
  if (has_inputdatasetframesizeinbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->inputdatasetframesizeinbytes(), target);
  }

  // required uint64 stitcherMemoryRequirementsInBytes = 4;
  if (has_stitchermemoryrequirementsinbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->stitchermemoryrequirementsinbytes(), target);
  }

  // required uint64 outputResolutionX = 5;
  if (has_outputresolutionx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->outputresolutionx(), target);
  }

  // required uint64 outputResolutionY = 6;
  if (has_outputresolutiony()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->outputresolutiony(), target);
  }

  // required uint64 outputMPixels = 7;
  if (has_outputmpixels()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->outputmpixels(), target);
  }

  // required uint64 outputSizeInBytes = 8;
  if (has_outputsizeinbytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->outputsizeinbytes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.EstimateCaptureResponse)
  return target;
}

int EstimateCaptureResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 inputDatasetSizeTotalInBytes = 1;
    if (has_inputdatasetsizetotalinbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->inputdatasetsizetotalinbytes());
    }

    // required uint64 inputDatasetFrameCount = 2;
    if (has_inputdatasetframecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->inputdatasetframecount());
    }

    // required uint64 inputDatasetFrameSizeInBytes = 3;
    if (has_inputdatasetframesizeinbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->inputdatasetframesizeinbytes());
    }

    // required uint64 stitcherMemoryRequirementsInBytes = 4;
    if (has_stitchermemoryrequirementsinbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->stitchermemoryrequirementsinbytes());
    }

    // required uint64 outputResolutionX = 5;
    if (has_outputresolutionx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->outputresolutionx());
    }

    // required uint64 outputResolutionY = 6;
    if (has_outputresolutiony()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->outputresolutiony());
    }

    // required uint64 outputMPixels = 7;
    if (has_outputmpixels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->outputmpixels());
    }

    // required uint64 outputSizeInBytes = 8;
    if (has_outputsizeinbytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->outputsizeinbytes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void EstimateCaptureResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EstimateCaptureResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EstimateCaptureResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EstimateCaptureResponse::MergeFrom(const EstimateCaptureResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_inputdatasetsizetotalinbytes()) {
      set_inputdatasetsizetotalinbytes(from.inputdatasetsizetotalinbytes());
    }
    if (from.has_inputdatasetframecount()) {
      set_inputdatasetframecount(from.inputdatasetframecount());
    }
    if (from.has_inputdatasetframesizeinbytes()) {
      set_inputdatasetframesizeinbytes(from.inputdatasetframesizeinbytes());
    }
    if (from.has_stitchermemoryrequirementsinbytes()) {
      set_stitchermemoryrequirementsinbytes(from.stitchermemoryrequirementsinbytes());
    }
    if (from.has_outputresolutionx()) {
      set_outputresolutionx(from.outputresolutionx());
    }
    if (from.has_outputresolutiony()) {
      set_outputresolutiony(from.outputresolutiony());
    }
    if (from.has_outputmpixels()) {
      set_outputmpixels(from.outputmpixels());
    }
    if (from.has_outputsizeinbytes()) {
      set_outputsizeinbytes(from.outputsizeinbytes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EstimateCaptureResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EstimateCaptureResponse::CopyFrom(const EstimateCaptureResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateCaptureResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void EstimateCaptureResponse::Swap(EstimateCaptureResponse* other) {
  if (other != this) {
    std::swap(inputdatasetsizetotalinbytes_, other->inputdatasetsizetotalinbytes_);
    std::swap(inputdatasetframecount_, other->inputdatasetframecount_);
    std::swap(inputdatasetframesizeinbytes_, other->inputdatasetframesizeinbytes_);
    std::swap(stitchermemoryrequirementsinbytes_, other->stitchermemoryrequirementsinbytes_);
    std::swap(outputresolutionx_, other->outputresolutionx_);
    std::swap(outputresolutiony_, other->outputresolutiony_);
    std::swap(outputmpixels_, other->outputmpixels_);
    std::swap(outputsizeinbytes_, other->outputsizeinbytes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EstimateCaptureResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EstimateCaptureResponse_descriptor_;
  metadata.reflection = EstimateCaptureResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

AbortCaptureRequest::AbortCaptureRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AbortCaptureRequest)
}

void AbortCaptureRequest::InitAsDefaultInstance() {
}

AbortCaptureRequest::AbortCaptureRequest(const AbortCaptureRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AbortCaptureRequest)
}

void AbortCaptureRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AbortCaptureRequest::~AbortCaptureRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.AbortCaptureRequest)
  SharedDtor();
}

void AbortCaptureRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortCaptureRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortCaptureRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortCaptureRequest_descriptor_;
}

const AbortCaptureRequest& AbortCaptureRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AbortCaptureRequest* AbortCaptureRequest::default_instance_ = NULL;

AbortCaptureRequest* AbortCaptureRequest::New() const {
  return new AbortCaptureRequest;
}

void AbortCaptureRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AbortCaptureRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AbortCaptureRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AbortCaptureRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AbortCaptureRequest)
  return false;
#undef DO_
}

void AbortCaptureRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AbortCaptureRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AbortCaptureRequest)
}

::google::protobuf::uint8* AbortCaptureRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AbortCaptureRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AbortCaptureRequest)
  return target;
}

int AbortCaptureRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AbortCaptureRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AbortCaptureRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AbortCaptureRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AbortCaptureRequest::MergeFrom(const AbortCaptureRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AbortCaptureRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortCaptureRequest::CopyFrom(const AbortCaptureRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortCaptureRequest::IsInitialized() const {

  return true;
}

void AbortCaptureRequest::Swap(AbortCaptureRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AbortCaptureRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortCaptureRequest_descriptor_;
  metadata.reflection = AbortCaptureRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AbortCaptureResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

AbortCaptureResponse::AbortCaptureResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AbortCaptureResponse)
}

void AbortCaptureResponse::InitAsDefaultInstance() {
}

AbortCaptureResponse::AbortCaptureResponse(const AbortCaptureResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AbortCaptureResponse)
}

void AbortCaptureResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AbortCaptureResponse::~AbortCaptureResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.AbortCaptureResponse)
  SharedDtor();
}

void AbortCaptureResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AbortCaptureResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbortCaptureResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AbortCaptureResponse_descriptor_;
}

const AbortCaptureResponse& AbortCaptureResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AbortCaptureResponse* AbortCaptureResponse::default_instance_ = NULL;

AbortCaptureResponse* AbortCaptureResponse::New() const {
  return new AbortCaptureResponse;
}

void AbortCaptureResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AbortCaptureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AbortCaptureResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AbortCaptureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AbortCaptureResponse)
  return false;
#undef DO_
}

void AbortCaptureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AbortCaptureResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AbortCaptureResponse)
}

::google::protobuf::uint8* AbortCaptureResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AbortCaptureResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AbortCaptureResponse)
  return target;
}

int AbortCaptureResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AbortCaptureResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AbortCaptureResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AbortCaptureResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AbortCaptureResponse::MergeFrom(const AbortCaptureResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AbortCaptureResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbortCaptureResponse::CopyFrom(const AbortCaptureResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbortCaptureResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AbortCaptureResponse::Swap(AbortCaptureResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AbortCaptureResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AbortCaptureResponse_descriptor_;
  metadata.reflection = AbortCaptureResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetHighresResolutionListRequest::GetHighresResolutionListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetHighresResolutionListRequest)
}

void GetHighresResolutionListRequest::InitAsDefaultInstance() {
}

GetHighresResolutionListRequest::GetHighresResolutionListRequest(const GetHighresResolutionListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetHighresResolutionListRequest)
}

void GetHighresResolutionListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHighresResolutionListRequest::~GetHighresResolutionListRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetHighresResolutionListRequest)
  SharedDtor();
}

void GetHighresResolutionListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetHighresResolutionListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHighresResolutionListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHighresResolutionListRequest_descriptor_;
}

const GetHighresResolutionListRequest& GetHighresResolutionListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetHighresResolutionListRequest* GetHighresResolutionListRequest::default_instance_ = NULL;

GetHighresResolutionListRequest* GetHighresResolutionListRequest::New() const {
  return new GetHighresResolutionListRequest;
}

void GetHighresResolutionListRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHighresResolutionListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetHighresResolutionListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetHighresResolutionListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetHighresResolutionListRequest)
  return false;
#undef DO_
}

void GetHighresResolutionListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetHighresResolutionListRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetHighresResolutionListRequest)
}

::google::protobuf::uint8* GetHighresResolutionListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetHighresResolutionListRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetHighresResolutionListRequest)
  return target;
}

int GetHighresResolutionListRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetHighresResolutionListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHighresResolutionListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHighresResolutionListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHighresResolutionListRequest::MergeFrom(const GetHighresResolutionListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHighresResolutionListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHighresResolutionListRequest::CopyFrom(const GetHighresResolutionListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHighresResolutionListRequest::IsInitialized() const {

  return true;
}

void GetHighresResolutionListRequest::Swap(GetHighresResolutionListRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHighresResolutionListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHighresResolutionListRequest_descriptor_;
  metadata.reflection = GetHighresResolutionListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetHighresResolutionListResponse_HighresResolution::kMultiplierFieldNumber;
const int GetHighresResolutionListResponse_HighresResolution::kXResolutionFieldNumber;
const int GetHighresResolutionListResponse_HighresResolution::kYResolutionFieldNumber;
#endif  // !_MSC_VER

GetHighresResolutionListResponse_HighresResolution::GetHighresResolutionListResponse_HighresResolution()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
}

void GetHighresResolutionListResponse_HighresResolution::InitAsDefaultInstance() {
}

GetHighresResolutionListResponse_HighresResolution::GetHighresResolutionListResponse_HighresResolution(const GetHighresResolutionListResponse_HighresResolution& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
}

void GetHighresResolutionListResponse_HighresResolution::SharedCtor() {
  _cached_size_ = 0;
  multiplier_ = 0;
  xresolution_ = 0;
  yresolution_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHighresResolutionListResponse_HighresResolution::~GetHighresResolutionListResponse_HighresResolution() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  SharedDtor();
}

void GetHighresResolutionListResponse_HighresResolution::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetHighresResolutionListResponse_HighresResolution::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHighresResolutionListResponse_HighresResolution::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHighresResolutionListResponse_HighresResolution_descriptor_;
}

const GetHighresResolutionListResponse_HighresResolution& GetHighresResolutionListResponse_HighresResolution::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetHighresResolutionListResponse_HighresResolution* GetHighresResolutionListResponse_HighresResolution::default_instance_ = NULL;

GetHighresResolutionListResponse_HighresResolution* GetHighresResolutionListResponse_HighresResolution::New() const {
  return new GetHighresResolutionListResponse_HighresResolution;
}

void GetHighresResolutionListResponse_HighresResolution::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<GetHighresResolutionListResponse_HighresResolution*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(multiplier_, yresolution_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHighresResolutionListResponse_HighresResolution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 multiplier = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &multiplier_)));
          set_has_multiplier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_xResolution;
        break;
      }

      // required int32 xResolution = 2;
      case 2: {
        if (tag == 16) {
         parse_xResolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xresolution_)));
          set_has_xresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_yResolution;
        break;
      }

      // required int32 yResolution = 3;
      case 3: {
        if (tag == 24) {
         parse_yResolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yresolution_)));
          set_has_yresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  return false;
#undef DO_
}

void GetHighresResolutionListResponse_HighresResolution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  // required int32 multiplier = 1;
  if (has_multiplier()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->multiplier(), output);
  }

  // required int32 xResolution = 2;
  if (has_xresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->xresolution(), output);
  }

  // required int32 yResolution = 3;
  if (has_yresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yresolution(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
}

::google::protobuf::uint8* GetHighresResolutionListResponse_HighresResolution::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  // required int32 multiplier = 1;
  if (has_multiplier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->multiplier(), target);
  }

  // required int32 xResolution = 2;
  if (has_xresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->xresolution(), target);
  }

  // required int32 yResolution = 3;
  if (has_yresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yresolution(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetHighresResolutionListResponse.HighresResolution)
  return target;
}

int GetHighresResolutionListResponse_HighresResolution::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 multiplier = 1;
    if (has_multiplier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->multiplier());
    }

    // required int32 xResolution = 2;
    if (has_xresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xresolution());
    }

    // required int32 yResolution = 3;
    if (has_yresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yresolution());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetHighresResolutionListResponse_HighresResolution::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHighresResolutionListResponse_HighresResolution* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHighresResolutionListResponse_HighresResolution*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHighresResolutionListResponse_HighresResolution::MergeFrom(const GetHighresResolutionListResponse_HighresResolution& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_multiplier()) {
      set_multiplier(from.multiplier());
    }
    if (from.has_xresolution()) {
      set_xresolution(from.xresolution());
    }
    if (from.has_yresolution()) {
      set_yresolution(from.yresolution());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHighresResolutionListResponse_HighresResolution::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHighresResolutionListResponse_HighresResolution::CopyFrom(const GetHighresResolutionListResponse_HighresResolution& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHighresResolutionListResponse_HighresResolution::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void GetHighresResolutionListResponse_HighresResolution::Swap(GetHighresResolutionListResponse_HighresResolution* other) {
  if (other != this) {
    std::swap(multiplier_, other->multiplier_);
    std::swap(xresolution_, other->xresolution_);
    std::swap(yresolution_, other->yresolution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHighresResolutionListResponse_HighresResolution::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHighresResolutionListResponse_HighresResolution_descriptor_;
  metadata.reflection = GetHighresResolutionListResponse_HighresResolution_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int GetHighresResolutionListResponse::kResolutionsFieldNumber;
#endif  // !_MSC_VER

GetHighresResolutionListResponse::GetHighresResolutionListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetHighresResolutionListResponse)
}

void GetHighresResolutionListResponse::InitAsDefaultInstance() {
}

GetHighresResolutionListResponse::GetHighresResolutionListResponse(const GetHighresResolutionListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetHighresResolutionListResponse)
}

void GetHighresResolutionListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetHighresResolutionListResponse::~GetHighresResolutionListResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetHighresResolutionListResponse)
  SharedDtor();
}

void GetHighresResolutionListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetHighresResolutionListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetHighresResolutionListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetHighresResolutionListResponse_descriptor_;
}

const GetHighresResolutionListResponse& GetHighresResolutionListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetHighresResolutionListResponse* GetHighresResolutionListResponse::default_instance_ = NULL;

GetHighresResolutionListResponse* GetHighresResolutionListResponse::New() const {
  return new GetHighresResolutionListResponse;
}

void GetHighresResolutionListResponse::Clear() {
  resolutions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetHighresResolutionListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetHighresResolutionListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AnselIpc.GetHighresResolutionListResponse.HighresResolution resolutions = 1;
      case 1: {
        if (tag == 10) {
         parse_resolutions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_resolutions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_resolutions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetHighresResolutionListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetHighresResolutionListResponse)
  return false;
#undef DO_
}

void GetHighresResolutionListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetHighresResolutionListResponse)
  // repeated .AnselIpc.GetHighresResolutionListResponse.HighresResolution resolutions = 1;
  for (int i = 0; i < this->resolutions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->resolutions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetHighresResolutionListResponse)
}

::google::protobuf::uint8* GetHighresResolutionListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetHighresResolutionListResponse)
  // repeated .AnselIpc.GetHighresResolutionListResponse.HighresResolution resolutions = 1;
  for (int i = 0; i < this->resolutions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->resolutions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetHighresResolutionListResponse)
  return target;
}

int GetHighresResolutionListResponse::ByteSize() const {
  int total_size = 0;

  // repeated .AnselIpc.GetHighresResolutionListResponse.HighresResolution resolutions = 1;
  total_size += 1 * this->resolutions_size();
  for (int i = 0; i < this->resolutions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->resolutions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetHighresResolutionListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetHighresResolutionListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetHighresResolutionListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetHighresResolutionListResponse::MergeFrom(const GetHighresResolutionListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  resolutions_.MergeFrom(from.resolutions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetHighresResolutionListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetHighresResolutionListResponse::CopyFrom(const GetHighresResolutionListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetHighresResolutionListResponse::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->resolutions())) return false;
  return true;
}

void GetHighresResolutionListResponse::Swap(GetHighresResolutionListResponse* other) {
  if (other != this) {
    resolutions_.Swap(&other->resolutions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetHighresResolutionListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetHighresResolutionListResponse_descriptor_;
  metadata.reflection = GetHighresResolutionListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Get360ResolutionRangeRequest::Get360ResolutionRangeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.Get360ResolutionRangeRequest)
}

void Get360ResolutionRangeRequest::InitAsDefaultInstance() {
}

Get360ResolutionRangeRequest::Get360ResolutionRangeRequest(const Get360ResolutionRangeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.Get360ResolutionRangeRequest)
}

void Get360ResolutionRangeRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Get360ResolutionRangeRequest::~Get360ResolutionRangeRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.Get360ResolutionRangeRequest)
  SharedDtor();
}

void Get360ResolutionRangeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Get360ResolutionRangeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Get360ResolutionRangeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Get360ResolutionRangeRequest_descriptor_;
}

const Get360ResolutionRangeRequest& Get360ResolutionRangeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

Get360ResolutionRangeRequest* Get360ResolutionRangeRequest::default_instance_ = NULL;

Get360ResolutionRangeRequest* Get360ResolutionRangeRequest::New() const {
  return new Get360ResolutionRangeRequest;
}

void Get360ResolutionRangeRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Get360ResolutionRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.Get360ResolutionRangeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.Get360ResolutionRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.Get360ResolutionRangeRequest)
  return false;
#undef DO_
}

void Get360ResolutionRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.Get360ResolutionRangeRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.Get360ResolutionRangeRequest)
}

::google::protobuf::uint8* Get360ResolutionRangeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.Get360ResolutionRangeRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.Get360ResolutionRangeRequest)
  return target;
}

int Get360ResolutionRangeRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void Get360ResolutionRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Get360ResolutionRangeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Get360ResolutionRangeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Get360ResolutionRangeRequest::MergeFrom(const Get360ResolutionRangeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Get360ResolutionRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Get360ResolutionRangeRequest::CopyFrom(const Get360ResolutionRangeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Get360ResolutionRangeRequest::IsInitialized() const {

  return true;
}

void Get360ResolutionRangeRequest::Swap(Get360ResolutionRangeRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Get360ResolutionRangeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Get360ResolutionRangeRequest_descriptor_;
  metadata.reflection = Get360ResolutionRangeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Get360ResolutionRangeResponse::kMinimumXResolutionFieldNumber;
const int Get360ResolutionRangeResponse::kMaximumXResolutionFieldNumber;
#endif  // !_MSC_VER

Get360ResolutionRangeResponse::Get360ResolutionRangeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.Get360ResolutionRangeResponse)
}

void Get360ResolutionRangeResponse::InitAsDefaultInstance() {
}

Get360ResolutionRangeResponse::Get360ResolutionRangeResponse(const Get360ResolutionRangeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.Get360ResolutionRangeResponse)
}

void Get360ResolutionRangeResponse::SharedCtor() {
  _cached_size_ = 0;
  minimumxresolution_ = 0;
  maximumxresolution_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Get360ResolutionRangeResponse::~Get360ResolutionRangeResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.Get360ResolutionRangeResponse)
  SharedDtor();
}

void Get360ResolutionRangeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Get360ResolutionRangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Get360ResolutionRangeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Get360ResolutionRangeResponse_descriptor_;
}

const Get360ResolutionRangeResponse& Get360ResolutionRangeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

Get360ResolutionRangeResponse* Get360ResolutionRangeResponse::default_instance_ = NULL;

Get360ResolutionRangeResponse* Get360ResolutionRangeResponse::New() const {
  return new Get360ResolutionRangeResponse;
}

void Get360ResolutionRangeResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Get360ResolutionRangeResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(minimumxresolution_, maximumxresolution_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Get360ResolutionRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.Get360ResolutionRangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 minimumXResolution = 3;
      case 3: {
        if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minimumxresolution_)));
          set_has_minimumxresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maximumXResolution;
        break;
      }

      // required int32 maximumXResolution = 4;
      case 4: {
        if (tag == 32) {
         parse_maximumXResolution:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximumxresolution_)));
          set_has_maximumxresolution();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.Get360ResolutionRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.Get360ResolutionRangeResponse)
  return false;
#undef DO_
}

void Get360ResolutionRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.Get360ResolutionRangeResponse)
  // required int32 minimumXResolution = 3;
  if (has_minimumxresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minimumxresolution(), output);
  }

  // required int32 maximumXResolution = 4;
  if (has_maximumxresolution()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maximumxresolution(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.Get360ResolutionRangeResponse)
}

::google::protobuf::uint8* Get360ResolutionRangeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.Get360ResolutionRangeResponse)
  // required int32 minimumXResolution = 3;
  if (has_minimumxresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minimumxresolution(), target);
  }

  // required int32 maximumXResolution = 4;
  if (has_maximumxresolution()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maximumxresolution(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.Get360ResolutionRangeResponse)
  return target;
}

int Get360ResolutionRangeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 minimumXResolution = 3;
    if (has_minimumxresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minimumxresolution());
    }

    // required int32 maximumXResolution = 4;
    if (has_maximumxresolution()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maximumxresolution());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void Get360ResolutionRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Get360ResolutionRangeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Get360ResolutionRangeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Get360ResolutionRangeResponse::MergeFrom(const Get360ResolutionRangeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_minimumxresolution()) {
      set_minimumxresolution(from.minimumxresolution());
    }
    if (from.has_maximumxresolution()) {
      set_maximumxresolution(from.maximumxresolution());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Get360ResolutionRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Get360ResolutionRangeResponse::CopyFrom(const Get360ResolutionRangeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Get360ResolutionRangeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Get360ResolutionRangeResponse::Swap(Get360ResolutionRangeResponse* other) {
  if (other != this) {
    std::swap(minimumxresolution_, other->minimumxresolution_);
    std::swap(maximumxresolution_, other->maximumxresolution_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Get360ResolutionRangeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Get360ResolutionRangeResponse_descriptor_;
  metadata.reflection = Get360ResolutionRangeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetFilterListRequest::GetFilterListRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFilterListRequest)
}

void GetFilterListRequest::InitAsDefaultInstance() {
}

GetFilterListRequest::GetFilterListRequest(const GetFilterListRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFilterListRequest)
}

void GetFilterListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFilterListRequest::~GetFilterListRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFilterListRequest)
  SharedDtor();
}

void GetFilterListRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFilterListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFilterListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFilterListRequest_descriptor_;
}

const GetFilterListRequest& GetFilterListRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFilterListRequest* GetFilterListRequest::default_instance_ = NULL;

GetFilterListRequest* GetFilterListRequest::New() const {
  return new GetFilterListRequest;
}

void GetFilterListRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFilterListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFilterListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFilterListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFilterListRequest)
  return false;
#undef DO_
}

void GetFilterListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFilterListRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFilterListRequest)
}

::google::protobuf::uint8* GetFilterListRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFilterListRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFilterListRequest)
  return target;
}

int GetFilterListRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFilterListRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFilterListRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFilterListRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFilterListRequest::MergeFrom(const GetFilterListRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFilterListRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFilterListRequest::CopyFrom(const GetFilterListRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFilterListRequest::IsInitialized() const {

  return true;
}

void GetFilterListRequest::Swap(GetFilterListRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFilterListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFilterListRequest_descriptor_;
  metadata.reflection = GetFilterListRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFilterListResponse::kFilterIdListFieldNumber;
const int GetFilterListResponse::kFilterNameListFieldNumber;
#endif  // !_MSC_VER

GetFilterListResponse::GetFilterListResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFilterListResponse)
}

void GetFilterListResponse::InitAsDefaultInstance() {
}

GetFilterListResponse::GetFilterListResponse(const GetFilterListResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFilterListResponse)
}

void GetFilterListResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFilterListResponse::~GetFilterListResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFilterListResponse)
  SharedDtor();
}

void GetFilterListResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFilterListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFilterListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFilterListResponse_descriptor_;
}

const GetFilterListResponse& GetFilterListResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFilterListResponse* GetFilterListResponse::default_instance_ = NULL;

GetFilterListResponse* GetFilterListResponse::New() const {
  return new GetFilterListResponse;
}

void GetFilterListResponse::Clear() {
  filteridlist_.Clear();
  filternamelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFilterListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFilterListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string filterIdList = 1;
      case 1: {
        if (tag == 10) {
         parse_filterIdList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filteridlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filteridlist(this->filteridlist_size() - 1).data(),
            this->filteridlist(this->filteridlist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filteridlist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_filterIdList;
        if (input->ExpectTag(18)) goto parse_filterNameList;
        break;
      }

      // repeated string filterNameList = 2;
      case 2: {
        if (tag == 18) {
         parse_filterNameList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filternamelist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filternamelist(this->filternamelist_size() - 1).data(),
            this->filternamelist(this->filternamelist_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filternamelist");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_filterNameList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFilterListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFilterListResponse)
  return false;
#undef DO_
}

void GetFilterListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFilterListResponse)
  // repeated string filterIdList = 1;
  for (int i = 0; i < this->filteridlist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->filteridlist(i).data(), this->filteridlist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "filteridlist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->filteridlist(i), output);
  }

  // repeated string filterNameList = 2;
  for (int i = 0; i < this->filternamelist_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->filternamelist(i).data(), this->filternamelist(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "filternamelist");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->filternamelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFilterListResponse)
}

::google::protobuf::uint8* GetFilterListResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFilterListResponse)
  // repeated string filterIdList = 1;
  for (int i = 0; i < this->filteridlist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filteridlist(i).data(), this->filteridlist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filteridlist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->filteridlist(i), target);
  }

  // repeated string filterNameList = 2;
  for (int i = 0; i < this->filternamelist_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filternamelist(i).data(), this->filternamelist(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filternamelist");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->filternamelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFilterListResponse)
  return target;
}

int GetFilterListResponse::ByteSize() const {
  int total_size = 0;

  // repeated string filterIdList = 1;
  total_size += 1 * this->filteridlist_size();
  for (int i = 0; i < this->filteridlist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filteridlist(i));
  }

  // repeated string filterNameList = 2;
  total_size += 1 * this->filternamelist_size();
  for (int i = 0; i < this->filternamelist_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filternamelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFilterListResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFilterListResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFilterListResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFilterListResponse::MergeFrom(const GetFilterListResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  filteridlist_.MergeFrom(from.filteridlist_);
  filternamelist_.MergeFrom(from.filternamelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFilterListResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFilterListResponse::CopyFrom(const GetFilterListResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFilterListResponse::IsInitialized() const {

  return true;
}

void GetFilterListResponse::Swap(GetFilterListResponse* other) {
  if (other != this) {
    filteridlist_.Swap(&other->filteridlist_);
    filternamelist_.Swap(&other->filternamelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFilterListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFilterListResponse_descriptor_;
  metadata.reflection = GetFilterListResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ResetEntireStackRequest::ResetEntireStackRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ResetEntireStackRequest)
}

void ResetEntireStackRequest::InitAsDefaultInstance() {
}

ResetEntireStackRequest::ResetEntireStackRequest(const ResetEntireStackRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ResetEntireStackRequest)
}

void ResetEntireStackRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetEntireStackRequest::~ResetEntireStackRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.ResetEntireStackRequest)
  SharedDtor();
}

void ResetEntireStackRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetEntireStackRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetEntireStackRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetEntireStackRequest_descriptor_;
}

const ResetEntireStackRequest& ResetEntireStackRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ResetEntireStackRequest* ResetEntireStackRequest::default_instance_ = NULL;

ResetEntireStackRequest* ResetEntireStackRequest::New() const {
  return new ResetEntireStackRequest;
}

void ResetEntireStackRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetEntireStackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ResetEntireStackRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ResetEntireStackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ResetEntireStackRequest)
  return false;
#undef DO_
}

void ResetEntireStackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ResetEntireStackRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ResetEntireStackRequest)
}

::google::protobuf::uint8* ResetEntireStackRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ResetEntireStackRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ResetEntireStackRequest)
  return target;
}

int ResetEntireStackRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ResetEntireStackRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetEntireStackRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetEntireStackRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetEntireStackRequest::MergeFrom(const ResetEntireStackRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetEntireStackRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEntireStackRequest::CopyFrom(const ResetEntireStackRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEntireStackRequest::IsInitialized() const {

  return true;
}

void ResetEntireStackRequest::Swap(ResetEntireStackRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetEntireStackRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetEntireStackRequest_descriptor_;
  metadata.reflection = ResetEntireStackRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetEntireStackResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

ResetEntireStackResponse::ResetEntireStackResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ResetEntireStackResponse)
}

void ResetEntireStackResponse::InitAsDefaultInstance() {
}

ResetEntireStackResponse::ResetEntireStackResponse(const ResetEntireStackResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ResetEntireStackResponse)
}

void ResetEntireStackResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetEntireStackResponse::~ResetEntireStackResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.ResetEntireStackResponse)
  SharedDtor();
}

void ResetEntireStackResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetEntireStackResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetEntireStackResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetEntireStackResponse_descriptor_;
}

const ResetEntireStackResponse& ResetEntireStackResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ResetEntireStackResponse* ResetEntireStackResponse::default_instance_ = NULL;

ResetEntireStackResponse* ResetEntireStackResponse::New() const {
  return new ResetEntireStackResponse;
}

void ResetEntireStackResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetEntireStackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ResetEntireStackResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ResetEntireStackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ResetEntireStackResponse)
  return false;
#undef DO_
}

void ResetEntireStackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ResetEntireStackResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ResetEntireStackResponse)
}

::google::protobuf::uint8* ResetEntireStackResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ResetEntireStackResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ResetEntireStackResponse)
  return target;
}

int ResetEntireStackResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ResetEntireStackResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetEntireStackResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetEntireStackResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetEntireStackResponse::MergeFrom(const ResetEntireStackResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetEntireStackResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetEntireStackResponse::CopyFrom(const ResetEntireStackResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetEntireStackResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResetEntireStackResponse::Swap(ResetEntireStackResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetEntireStackResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetEntireStackResponse_descriptor_;
  metadata.reflection = ResetEntireStackResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetFilterValuesRequest::kStackIdxFieldNumber;
#endif  // !_MSC_VER

ResetFilterValuesRequest::ResetFilterValuesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ResetFilterValuesRequest)
}

void ResetFilterValuesRequest::InitAsDefaultInstance() {
}

ResetFilterValuesRequest::ResetFilterValuesRequest(const ResetFilterValuesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ResetFilterValuesRequest)
}

void ResetFilterValuesRequest::SharedCtor() {
  _cached_size_ = 0;
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetFilterValuesRequest::~ResetFilterValuesRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.ResetFilterValuesRequest)
  SharedDtor();
}

void ResetFilterValuesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetFilterValuesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetFilterValuesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetFilterValuesRequest_descriptor_;
}

const ResetFilterValuesRequest& ResetFilterValuesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ResetFilterValuesRequest* ResetFilterValuesRequest::default_instance_ = NULL;

ResetFilterValuesRequest* ResetFilterValuesRequest::New() const {
  return new ResetFilterValuesRequest;
}

void ResetFilterValuesRequest::Clear() {
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetFilterValuesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ResetFilterValuesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stackIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ResetFilterValuesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ResetFilterValuesRequest)
  return false;
#undef DO_
}

void ResetFilterValuesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ResetFilterValuesRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stackidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ResetFilterValuesRequest)
}

::google::protobuf::uint8* ResetFilterValuesRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ResetFilterValuesRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stackidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ResetFilterValuesRequest)
  return target;
}

int ResetFilterValuesRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stackIdx = 1;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ResetFilterValuesRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetFilterValuesRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetFilterValuesRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetFilterValuesRequest::MergeFrom(const ResetFilterValuesRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetFilterValuesRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetFilterValuesRequest::CopyFrom(const ResetFilterValuesRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetFilterValuesRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResetFilterValuesRequest::Swap(ResetFilterValuesRequest* other) {
  if (other != this) {
    std::swap(stackidx_, other->stackidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetFilterValuesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetFilterValuesRequest_descriptor_;
  metadata.reflection = ResetFilterValuesRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ResetFilterValuesResponse::kStackIdxFieldNumber;
const int ResetFilterValuesResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

ResetFilterValuesResponse::ResetFilterValuesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ResetFilterValuesResponse)
}

void ResetFilterValuesResponse::InitAsDefaultInstance() {
}

ResetFilterValuesResponse::ResetFilterValuesResponse(const ResetFilterValuesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ResetFilterValuesResponse)
}

void ResetFilterValuesResponse::SharedCtor() {
  _cached_size_ = 0;
  stackidx_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetFilterValuesResponse::~ResetFilterValuesResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.ResetFilterValuesResponse)
  SharedDtor();
}

void ResetFilterValuesResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetFilterValuesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetFilterValuesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetFilterValuesResponse_descriptor_;
}

const ResetFilterValuesResponse& ResetFilterValuesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ResetFilterValuesResponse* ResetFilterValuesResponse::default_instance_ = NULL;

ResetFilterValuesResponse* ResetFilterValuesResponse::New() const {
  return new ResetFilterValuesResponse;
}

void ResetFilterValuesResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    stackidx_ = 0;
    status_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetFilterValuesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ResetFilterValuesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stackIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // required .AnselIpc.Status status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ResetFilterValuesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ResetFilterValuesResponse)
  return false;
#undef DO_
}

void ResetFilterValuesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ResetFilterValuesResponse)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stackidx(), output);
  }

  // required .AnselIpc.Status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ResetFilterValuesResponse)
}

::google::protobuf::uint8* ResetFilterValuesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ResetFilterValuesResponse)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stackidx(), target);
  }

  // required .AnselIpc.Status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ResetFilterValuesResponse)
  return target;
}

int ResetFilterValuesResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stackIdx = 1;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

    // required .AnselIpc.Status status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ResetFilterValuesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetFilterValuesResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetFilterValuesResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetFilterValuesResponse::MergeFrom(const ResetFilterValuesResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetFilterValuesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetFilterValuesResponse::CopyFrom(const ResetFilterValuesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetFilterValuesResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ResetFilterValuesResponse::Swap(ResetFilterValuesResponse* other) {
  if (other != this) {
    std::swap(stackidx_, other->stackidx_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetFilterValuesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetFilterValuesResponse_descriptor_;
  metadata.reflection = ResetFilterValuesResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

ResetAllFilterValuesRequest::ResetAllFilterValuesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ResetAllFilterValuesRequest)
}

void ResetAllFilterValuesRequest::InitAsDefaultInstance() {
}

ResetAllFilterValuesRequest::ResetAllFilterValuesRequest(const ResetAllFilterValuesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ResetAllFilterValuesRequest)
}

void ResetAllFilterValuesRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResetAllFilterValuesRequest::~ResetAllFilterValuesRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.ResetAllFilterValuesRequest)
  SharedDtor();
}

void ResetAllFilterValuesRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResetAllFilterValuesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetAllFilterValuesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResetAllFilterValuesRequest_descriptor_;
}

const ResetAllFilterValuesRequest& ResetAllFilterValuesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ResetAllFilterValuesRequest* ResetAllFilterValuesRequest::default_instance_ = NULL;

ResetAllFilterValuesRequest* ResetAllFilterValuesRequest::New() const {
  return new ResetAllFilterValuesRequest;
}

void ResetAllFilterValuesRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ResetAllFilterValuesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ResetAllFilterValuesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ResetAllFilterValuesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ResetAllFilterValuesRequest)
  return false;
#undef DO_
}

void ResetAllFilterValuesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ResetAllFilterValuesRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ResetAllFilterValuesRequest)
}

::google::protobuf::uint8* ResetAllFilterValuesRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ResetAllFilterValuesRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ResetAllFilterValuesRequest)
  return target;
}

int ResetAllFilterValuesRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ResetAllFilterValuesRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ResetAllFilterValuesRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ResetAllFilterValuesRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResetAllFilterValuesRequest::MergeFrom(const ResetAllFilterValuesRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ResetAllFilterValuesRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetAllFilterValuesRequest::CopyFrom(const ResetAllFilterValuesRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetAllFilterValuesRequest::IsInitialized() const {

  return true;
}

void ResetAllFilterValuesRequest::Swap(ResetAllFilterValuesRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ResetAllFilterValuesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResetAllFilterValuesRequest_descriptor_;
  metadata.reflection = ResetAllFilterValuesRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterRequest::kFilterIdFieldNumber;
const int SetFilterRequest::kStackIdxFieldNumber;
#endif  // !_MSC_VER

SetFilterRequest::SetFilterRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterRequest)
}

void SetFilterRequest::InitAsDefaultInstance() {
}

SetFilterRequest::SetFilterRequest(const SetFilterRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterRequest)
}

void SetFilterRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterRequest::~SetFilterRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterRequest)
  SharedDtor();
}

void SetFilterRequest::SharedDtor() {
  if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterid_;
  }
  if (this != default_instance_) {
  }
}

void SetFilterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterRequest_descriptor_;
}

const SetFilterRequest& SetFilterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterRequest* SetFilterRequest::default_instance_ = NULL;

SetFilterRequest* SetFilterRequest::New() const {
  return new SetFilterRequest;
}

void SetFilterRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_filterid()) {
      if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterid_->clear();
      }
    }
    stackidx_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filterId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterid().data(), this->filterid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterRequest)
  return false;
#undef DO_
}

void SetFilterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filterid(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterRequest)
}

::google::protobuf::uint8* SetFilterRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filterid(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterRequest)
  return target;
}

int SetFilterRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filterId = 1;
    if (has_filterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterid());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterRequest::MergeFrom(const SetFilterRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filterid()) {
      set_filterid(from.filterid());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterRequest::CopyFrom(const SetFilterRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetFilterRequest::Swap(SetFilterRequest* other) {
  if (other != this) {
    std::swap(filterid_, other->filterid_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterRequest_descriptor_;
  metadata.reflection = SetFilterRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterResponse::kStatusFieldNumber;
const int SetFilterResponse::kStackIdxFieldNumber;
const int SetFilterResponse::kFilterPropertiesFieldNumber;
#endif  // !_MSC_VER

SetFilterResponse::SetFilterResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterResponse)
}

void SetFilterResponse::InitAsDefaultInstance() {
  filterproperties_ = const_cast< ::AnselIpc::FilterProperties*>(&::AnselIpc::FilterProperties::default_instance());
}

SetFilterResponse::SetFilterResponse(const SetFilterResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterResponse)
}

void SetFilterResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  stackidx_ = 0;
  filterproperties_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterResponse::~SetFilterResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterResponse)
  SharedDtor();
}

void SetFilterResponse::SharedDtor() {
  if (this != default_instance_) {
    delete filterproperties_;
  }
}

void SetFilterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterResponse_descriptor_;
}

const SetFilterResponse& SetFilterResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterResponse* SetFilterResponse::default_instance_ = NULL;

SetFilterResponse* SetFilterResponse::New() const {
  return new SetFilterResponse;
}

void SetFilterResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    status_ = 1;
    stackidx_ = 0;
    if (has_filterproperties()) {
      if (filterproperties_ != NULL) filterproperties_->::AnselIpc::FilterProperties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filterProperties;
        break;
      }

      // optional .AnselIpc.FilterProperties filterProperties = 3;
      case 3: {
        if (tag == 26) {
         parse_filterProperties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filterproperties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterResponse)
  return false;
#undef DO_
}

void SetFilterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->filterproperties(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterResponse)
}

::google::protobuf::uint8* SetFilterResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->filterproperties(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterResponse)
  return target;
}

int SetFilterResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

    // optional .AnselIpc.FilterProperties filterProperties = 3;
    if (has_filterproperties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filterproperties());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterResponse::MergeFrom(const SetFilterResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
    if (from.has_filterproperties()) {
      mutable_filterproperties()->::AnselIpc::FilterProperties::MergeFrom(from.filterproperties());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterResponse::CopyFrom(const SetFilterResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_filterproperties()) {
    if (!this->filterproperties().IsInitialized()) return false;
  }
  return true;
}

void SetFilterResponse::Swap(SetFilterResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(filterproperties_, other->filterproperties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterResponse_descriptor_;
  metadata.reflection = SetFilterResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterAndAttributesRequest::kFilterIdFieldNumber;
const int SetFilterAndAttributesRequest::kStackIdxFieldNumber;
const int SetFilterAndAttributesRequest::kIntControlIdsFieldNumber;
const int SetFilterAndAttributesRequest::kIntValuesFieldNumber;
const int SetFilterAndAttributesRequest::kUintControlIdsFieldNumber;
const int SetFilterAndAttributesRequest::kUintValuesFieldNumber;
const int SetFilterAndAttributesRequest::kFloatControlIdsFieldNumber;
const int SetFilterAndAttributesRequest::kFloatValuesFieldNumber;
const int SetFilterAndAttributesRequest::kBoolControlIdsFieldNumber;
const int SetFilterAndAttributesRequest::kBoolValuesFieldNumber;
#endif  // !_MSC_VER

SetFilterAndAttributesRequest::SetFilterAndAttributesRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterAndAttributesRequest)
}

void SetFilterAndAttributesRequest::InitAsDefaultInstance() {
}

SetFilterAndAttributesRequest::SetFilterAndAttributesRequest(const SetFilterAndAttributesRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterAndAttributesRequest)
}

void SetFilterAndAttributesRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterAndAttributesRequest::~SetFilterAndAttributesRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterAndAttributesRequest)
  SharedDtor();
}

void SetFilterAndAttributesRequest::SharedDtor() {
  if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterid_;
  }
  if (this != default_instance_) {
  }
}

void SetFilterAndAttributesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterAndAttributesRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterAndAttributesRequest_descriptor_;
}

const SetFilterAndAttributesRequest& SetFilterAndAttributesRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterAndAttributesRequest* SetFilterAndAttributesRequest::default_instance_ = NULL;

SetFilterAndAttributesRequest* SetFilterAndAttributesRequest::New() const {
  return new SetFilterAndAttributesRequest;
}

void SetFilterAndAttributesRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_filterid()) {
      if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterid_->clear();
      }
    }
    stackidx_ = 0;
  }
  intcontrolids_.Clear();
  intvalues_.Clear();
  uintcontrolids_.Clear();
  uintvalues_.Clear();
  floatcontrolids_.Clear();
  floatvalues_.Clear();
  boolcontrolids_.Clear();
  boolvalues_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterAndAttributesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterAndAttributesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filterId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterid().data(), this->filterid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_intControlIds;
        break;
      }

      // repeated int32 intControlIds = 3;
      case 3: {
        if (tag == 24) {
         parse_intControlIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_intcontrolids())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_intcontrolids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_intControlIds;
        if (input->ExpectTag(32)) goto parse_intValues;
        break;
      }

      // repeated int32 intValues = 4;
      case 4: {
        if (tag == 32) {
         parse_intValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_intvalues())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_intvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_intValues;
        if (input->ExpectTag(40)) goto parse_uintControlIds;
        break;
      }

      // repeated int32 uintControlIds = 5;
      case 5: {
        if (tag == 40) {
         parse_uintControlIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_uintcontrolids())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_uintcontrolids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_uintControlIds;
        if (input->ExpectTag(48)) goto parse_uintValues;
        break;
      }

      // repeated uint32 uintValues = 6;
      case 6: {
        if (tag == 48) {
         parse_uintValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_uintvalues())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uintvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uintValues;
        if (input->ExpectTag(56)) goto parse_floatControlIds;
        break;
      }

      // repeated int32 floatControlIds = 7;
      case 7: {
        if (tag == 56) {
         parse_floatControlIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_floatcontrolids())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_floatcontrolids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_floatControlIds;
        if (input->ExpectTag(69)) goto parse_floatValues;
        break;
      }

      // repeated float floatValues = 8;
      case 8: {
        if (tag == 69) {
         parse_floatValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 69, input, this->mutable_floatvalues())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floatvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_floatValues;
        if (input->ExpectTag(72)) goto parse_boolControlIds;
        break;
      }

      // repeated int32 boolControlIds = 9;
      case 9: {
        if (tag == 72) {
         parse_boolControlIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72, input, this->mutable_boolcontrolids())));
        } else if (tag == 74) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_boolcontrolids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_boolControlIds;
        if (input->ExpectTag(80)) goto parse_boolValues;
        break;
      }

      // repeated bool boolValues = 10;
      case 10: {
        if (tag == 80) {
         parse_boolValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 80, input, this->mutable_boolvalues())));
        } else if (tag == 82) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_boolvalues())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_boolValues;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterAndAttributesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterAndAttributesRequest)
  return false;
#undef DO_
}

void SetFilterAndAttributesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterAndAttributesRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filterid(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  // repeated int32 intControlIds = 3;
  for (int i = 0; i < this->intcontrolids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->intcontrolids(i), output);
  }

  // repeated int32 intValues = 4;
  for (int i = 0; i < this->intvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->intvalues(i), output);
  }

  // repeated int32 uintControlIds = 5;
  for (int i = 0; i < this->uintcontrolids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->uintcontrolids(i), output);
  }

  // repeated uint32 uintValues = 6;
  for (int i = 0; i < this->uintvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->uintvalues(i), output);
  }

  // repeated int32 floatControlIds = 7;
  for (int i = 0; i < this->floatcontrolids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->floatcontrolids(i), output);
  }

  // repeated float floatValues = 8;
  for (int i = 0; i < this->floatvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      8, this->floatvalues(i), output);
  }

  // repeated int32 boolControlIds = 9;
  for (int i = 0; i < this->boolcontrolids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->boolcontrolids(i), output);
  }

  // repeated bool boolValues = 10;
  for (int i = 0; i < this->boolvalues_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      10, this->boolvalues(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterAndAttributesRequest)
}

::google::protobuf::uint8* SetFilterAndAttributesRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterAndAttributesRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filterid(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  // repeated int32 intControlIds = 3;
  for (int i = 0; i < this->intcontrolids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->intcontrolids(i), target);
  }

  // repeated int32 intValues = 4;
  for (int i = 0; i < this->intvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->intvalues(i), target);
  }

  // repeated int32 uintControlIds = 5;
  for (int i = 0; i < this->uintcontrolids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->uintcontrolids(i), target);
  }

  // repeated uint32 uintValues = 6;
  for (int i = 0; i < this->uintvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->uintvalues(i), target);
  }

  // repeated int32 floatControlIds = 7;
  for (int i = 0; i < this->floatcontrolids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->floatcontrolids(i), target);
  }

  // repeated float floatValues = 8;
  for (int i = 0; i < this->floatvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(8, this->floatvalues(i), target);
  }

  // repeated int32 boolControlIds = 9;
  for (int i = 0; i < this->boolcontrolids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->boolcontrolids(i), target);
  }

  // repeated bool boolValues = 10;
  for (int i = 0; i < this->boolvalues_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(10, this->boolvalues(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterAndAttributesRequest)
  return target;
}

int SetFilterAndAttributesRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filterId = 1;
    if (has_filterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterid());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  // repeated int32 intControlIds = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->intcontrolids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->intcontrolids(i));
    }
    total_size += 1 * this->intcontrolids_size() + data_size;
  }

  // repeated int32 intValues = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->intvalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->intvalues(i));
    }
    total_size += 1 * this->intvalues_size() + data_size;
  }

  // repeated int32 uintControlIds = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->uintcontrolids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->uintcontrolids(i));
    }
    total_size += 1 * this->uintcontrolids_size() + data_size;
  }

  // repeated uint32 uintValues = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->uintvalues_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->uintvalues(i));
    }
    total_size += 1 * this->uintvalues_size() + data_size;
  }

  // repeated int32 floatControlIds = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->floatcontrolids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->floatcontrolids(i));
    }
    total_size += 1 * this->floatcontrolids_size() + data_size;
  }

  // repeated float floatValues = 8;
  {
    int data_size = 0;
    data_size = 4 * this->floatvalues_size();
    total_size += 1 * this->floatvalues_size() + data_size;
  }

  // repeated int32 boolControlIds = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->boolcontrolids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->boolcontrolids(i));
    }
    total_size += 1 * this->boolcontrolids_size() + data_size;
  }

  // repeated bool boolValues = 10;
  {
    int data_size = 0;
    data_size = 1 * this->boolvalues_size();
    total_size += 1 * this->boolvalues_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterAndAttributesRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterAndAttributesRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterAndAttributesRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterAndAttributesRequest::MergeFrom(const SetFilterAndAttributesRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  intcontrolids_.MergeFrom(from.intcontrolids_);
  intvalues_.MergeFrom(from.intvalues_);
  uintcontrolids_.MergeFrom(from.uintcontrolids_);
  uintvalues_.MergeFrom(from.uintvalues_);
  floatcontrolids_.MergeFrom(from.floatcontrolids_);
  floatvalues_.MergeFrom(from.floatvalues_);
  boolcontrolids_.MergeFrom(from.boolcontrolids_);
  boolvalues_.MergeFrom(from.boolvalues_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filterid()) {
      set_filterid(from.filterid());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterAndAttributesRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterAndAttributesRequest::CopyFrom(const SetFilterAndAttributesRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterAndAttributesRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void SetFilterAndAttributesRequest::Swap(SetFilterAndAttributesRequest* other) {
  if (other != this) {
    std::swap(filterid_, other->filterid_);
    std::swap(stackidx_, other->stackidx_);
    intcontrolids_.Swap(&other->intcontrolids_);
    intvalues_.Swap(&other->intvalues_);
    uintcontrolids_.Swap(&other->uintcontrolids_);
    uintvalues_.Swap(&other->uintvalues_);
    floatcontrolids_.Swap(&other->floatcontrolids_);
    floatvalues_.Swap(&other->floatvalues_);
    boolcontrolids_.Swap(&other->boolcontrolids_);
    boolvalues_.Swap(&other->boolvalues_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterAndAttributesRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterAndAttributesRequest_descriptor_;
  metadata.reflection = SetFilterAndAttributesRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterAndAttributesResponse::kSetFilterResponseFieldNumber;
const int SetFilterAndAttributesResponse::kAttributeControlIdsFieldNumber;
const int SetFilterAndAttributesResponse::kSetFilterAttributeResponsesFieldNumber;
#endif  // !_MSC_VER

SetFilterAndAttributesResponse::SetFilterAndAttributesResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterAndAttributesResponse)
}

void SetFilterAndAttributesResponse::InitAsDefaultInstance() {
  setfilterresponse_ = const_cast< ::AnselIpc::SetFilterResponse*>(&::AnselIpc::SetFilterResponse::default_instance());
}

SetFilterAndAttributesResponse::SetFilterAndAttributesResponse(const SetFilterAndAttributesResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterAndAttributesResponse)
}

void SetFilterAndAttributesResponse::SharedCtor() {
  _cached_size_ = 0;
  setfilterresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterAndAttributesResponse::~SetFilterAndAttributesResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterAndAttributesResponse)
  SharedDtor();
}

void SetFilterAndAttributesResponse::SharedDtor() {
  if (this != default_instance_) {
    delete setfilterresponse_;
  }
}

void SetFilterAndAttributesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterAndAttributesResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterAndAttributesResponse_descriptor_;
}

const SetFilterAndAttributesResponse& SetFilterAndAttributesResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterAndAttributesResponse* SetFilterAndAttributesResponse::default_instance_ = NULL;

SetFilterAndAttributesResponse* SetFilterAndAttributesResponse::New() const {
  return new SetFilterAndAttributesResponse;
}

void SetFilterAndAttributesResponse::Clear() {
  if (has_setfilterresponse()) {
    if (setfilterresponse_ != NULL) setfilterresponse_->::AnselIpc::SetFilterResponse::Clear();
  }
  attributecontrolids_.Clear();
  setfilterattributeresponses_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterAndAttributesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterAndAttributesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.SetFilterResponse setFilterResponse = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attributeControlIds;
        break;
      }

      // repeated int32 attributeControlIds = 2;
      case 2: {
        if (tag == 16) {
         parse_attributeControlIds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_attributecontrolids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_attributecontrolids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attributeControlIds;
        if (input->ExpectTag(26)) goto parse_setFilterAttributeResponses;
        break;
      }

      // repeated .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponses = 3;
      case 3: {
        if (tag == 26) {
         parse_setFilterAttributeResponses:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_setfilterattributeresponses()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_setFilterAttributeResponses;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterAndAttributesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterAndAttributesResponse)
  return false;
#undef DO_
}

void SetFilterAndAttributesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterAndAttributesResponse)
  // required .AnselIpc.SetFilterResponse setFilterResponse = 1;
  if (has_setfilterresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->setfilterresponse(), output);
  }

  // repeated int32 attributeControlIds = 2;
  for (int i = 0; i < this->attributecontrolids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->attributecontrolids(i), output);
  }

  // repeated .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponses = 3;
  for (int i = 0; i < this->setfilterattributeresponses_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->setfilterattributeresponses(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterAndAttributesResponse)
}

::google::protobuf::uint8* SetFilterAndAttributesResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterAndAttributesResponse)
  // required .AnselIpc.SetFilterResponse setFilterResponse = 1;
  if (has_setfilterresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->setfilterresponse(), target);
  }

  // repeated int32 attributeControlIds = 2;
  for (int i = 0; i < this->attributecontrolids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->attributecontrolids(i), target);
  }

  // repeated .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponses = 3;
  for (int i = 0; i < this->setfilterattributeresponses_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->setfilterattributeresponses(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterAndAttributesResponse)
  return target;
}

int SetFilterAndAttributesResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.SetFilterResponse setFilterResponse = 1;
    if (has_setfilterresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterresponse());
    }

  }
  // repeated int32 attributeControlIds = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->attributecontrolids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->attributecontrolids(i));
    }
    total_size += 1 * this->attributecontrolids_size() + data_size;
  }

  // repeated .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponses = 3;
  total_size += 1 * this->setfilterattributeresponses_size();
  for (int i = 0; i < this->setfilterattributeresponses_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->setfilterattributeresponses(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterAndAttributesResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterAndAttributesResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterAndAttributesResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterAndAttributesResponse::MergeFrom(const SetFilterAndAttributesResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  attributecontrolids_.MergeFrom(from.attributecontrolids_);
  setfilterattributeresponses_.MergeFrom(from.setfilterattributeresponses_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_setfilterresponse()) {
      mutable_setfilterresponse()->::AnselIpc::SetFilterResponse::MergeFrom(from.setfilterresponse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterAndAttributesResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterAndAttributesResponse::CopyFrom(const SetFilterAndAttributesResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterAndAttributesResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_setfilterresponse()) {
    if (!this->setfilterresponse().IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->setfilterattributeresponses())) return false;
  return true;
}

void SetFilterAndAttributesResponse::Swap(SetFilterAndAttributesResponse* other) {
  if (other != this) {
    std::swap(setfilterresponse_, other->setfilterresponse_);
    attributecontrolids_.Swap(&other->attributecontrolids_);
    setfilterattributeresponses_.Swap(&other->setfilterattributeresponses_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterAndAttributesResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterAndAttributesResponse_descriptor_;
  metadata.reflection = SetFilterAndAttributesResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InsertFilterRequest::kFilterIdFieldNumber;
const int InsertFilterRequest::kStackIdxFieldNumber;
#endif  // !_MSC_VER

InsertFilterRequest::InsertFilterRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.InsertFilterRequest)
}

void InsertFilterRequest::InitAsDefaultInstance() {
}

InsertFilterRequest::InsertFilterRequest(const InsertFilterRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.InsertFilterRequest)
}

void InsertFilterRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InsertFilterRequest::~InsertFilterRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.InsertFilterRequest)
  SharedDtor();
}

void InsertFilterRequest::SharedDtor() {
  if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterid_;
  }
  if (this != default_instance_) {
  }
}

void InsertFilterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertFilterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertFilterRequest_descriptor_;
}

const InsertFilterRequest& InsertFilterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

InsertFilterRequest* InsertFilterRequest::default_instance_ = NULL;

InsertFilterRequest* InsertFilterRequest::New() const {
  return new InsertFilterRequest;
}

void InsertFilterRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_filterid()) {
      if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterid_->clear();
      }
    }
    stackidx_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InsertFilterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.InsertFilterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filterId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterid().data(), this->filterid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.InsertFilterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.InsertFilterRequest)
  return false;
#undef DO_
}

void InsertFilterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.InsertFilterRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filterid(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.InsertFilterRequest)
}

::google::protobuf::uint8* InsertFilterRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.InsertFilterRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filterid(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.InsertFilterRequest)
  return target;
}

int InsertFilterRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filterId = 1;
    if (has_filterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterid());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void InsertFilterRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InsertFilterRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InsertFilterRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertFilterRequest::MergeFrom(const InsertFilterRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filterid()) {
      set_filterid(from.filterid());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InsertFilterRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertFilterRequest::CopyFrom(const InsertFilterRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertFilterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void InsertFilterRequest::Swap(InsertFilterRequest* other) {
  if (other != this) {
    std::swap(filterid_, other->filterid_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InsertFilterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertFilterRequest_descriptor_;
  metadata.reflection = InsertFilterRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InsertFilterResponse::kStatusFieldNumber;
const int InsertFilterResponse::kStackIdxFieldNumber;
const int InsertFilterResponse::kFilterPropertiesFieldNumber;
#endif  // !_MSC_VER

InsertFilterResponse::InsertFilterResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.InsertFilterResponse)
}

void InsertFilterResponse::InitAsDefaultInstance() {
  filterproperties_ = const_cast< ::AnselIpc::FilterProperties*>(&::AnselIpc::FilterProperties::default_instance());
}

InsertFilterResponse::InsertFilterResponse(const InsertFilterResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.InsertFilterResponse)
}

void InsertFilterResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  stackidx_ = 0;
  filterproperties_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InsertFilterResponse::~InsertFilterResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.InsertFilterResponse)
  SharedDtor();
}

void InsertFilterResponse::SharedDtor() {
  if (this != default_instance_) {
    delete filterproperties_;
  }
}

void InsertFilterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InsertFilterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InsertFilterResponse_descriptor_;
}

const InsertFilterResponse& InsertFilterResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

InsertFilterResponse* InsertFilterResponse::default_instance_ = NULL;

InsertFilterResponse* InsertFilterResponse::New() const {
  return new InsertFilterResponse;
}

void InsertFilterResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    status_ = 1;
    stackidx_ = 0;
    if (has_filterproperties()) {
      if (filterproperties_ != NULL) filterproperties_->::AnselIpc::FilterProperties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InsertFilterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.InsertFilterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filterProperties;
        break;
      }

      // optional .AnselIpc.FilterProperties filterProperties = 3;
      case 3: {
        if (tag == 26) {
         parse_filterProperties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filterproperties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.InsertFilterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.InsertFilterResponse)
  return false;
#undef DO_
}

void InsertFilterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.InsertFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->filterproperties(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.InsertFilterResponse)
}

::google::protobuf::uint8* InsertFilterResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.InsertFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->filterproperties(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.InsertFilterResponse)
  return target;
}

int InsertFilterResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

    // optional .AnselIpc.FilterProperties filterProperties = 3;
    if (has_filterproperties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filterproperties());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void InsertFilterResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InsertFilterResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InsertFilterResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InsertFilterResponse::MergeFrom(const InsertFilterResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
    if (from.has_filterproperties()) {
      mutable_filterproperties()->::AnselIpc::FilterProperties::MergeFrom(from.filterproperties());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InsertFilterResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertFilterResponse::CopyFrom(const InsertFilterResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertFilterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_filterproperties()) {
    if (!this->filterproperties().IsInitialized()) return false;
  }
  return true;
}

void InsertFilterResponse::Swap(InsertFilterResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(filterproperties_, other->filterproperties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InsertFilterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InsertFilterResponse_descriptor_;
  metadata.reflection = InsertFilterResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveFilterRequest::kStackIdxFieldNumber;
#endif  // !_MSC_VER

RemoveFilterRequest::RemoveFilterRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.RemoveFilterRequest)
}

void RemoveFilterRequest::InitAsDefaultInstance() {
}

RemoveFilterRequest::RemoveFilterRequest(const RemoveFilterRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.RemoveFilterRequest)
}

void RemoveFilterRequest::SharedCtor() {
  _cached_size_ = 0;
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveFilterRequest::~RemoveFilterRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.RemoveFilterRequest)
  SharedDtor();
}

void RemoveFilterRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveFilterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveFilterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveFilterRequest_descriptor_;
}

const RemoveFilterRequest& RemoveFilterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

RemoveFilterRequest* RemoveFilterRequest::default_instance_ = NULL;

RemoveFilterRequest* RemoveFilterRequest::New() const {
  return new RemoveFilterRequest;
}

void RemoveFilterRequest::Clear() {
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveFilterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.RemoveFilterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stackIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.RemoveFilterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.RemoveFilterRequest)
  return false;
#undef DO_
}

void RemoveFilterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.RemoveFilterRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stackidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.RemoveFilterRequest)
}

::google::protobuf::uint8* RemoveFilterRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.RemoveFilterRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stackidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.RemoveFilterRequest)
  return target;
}

int RemoveFilterRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stackIdx = 1;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void RemoveFilterRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveFilterRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveFilterRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveFilterRequest::MergeFrom(const RemoveFilterRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveFilterRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveFilterRequest::CopyFrom(const RemoveFilterRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFilterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveFilterRequest::Swap(RemoveFilterRequest* other) {
  if (other != this) {
    std::swap(stackidx_, other->stackidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveFilterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveFilterRequest_descriptor_;
  metadata.reflection = RemoveFilterRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RemoveFilterResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

RemoveFilterResponse::RemoveFilterResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.RemoveFilterResponse)
}

void RemoveFilterResponse::InitAsDefaultInstance() {
}

RemoveFilterResponse::RemoveFilterResponse(const RemoveFilterResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.RemoveFilterResponse)
}

void RemoveFilterResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RemoveFilterResponse::~RemoveFilterResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.RemoveFilterResponse)
  SharedDtor();
}

void RemoveFilterResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RemoveFilterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveFilterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RemoveFilterResponse_descriptor_;
}

const RemoveFilterResponse& RemoveFilterResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

RemoveFilterResponse* RemoveFilterResponse::default_instance_ = NULL;

RemoveFilterResponse* RemoveFilterResponse::New() const {
  return new RemoveFilterResponse;
}

void RemoveFilterResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RemoveFilterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.RemoveFilterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.RemoveFilterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.RemoveFilterResponse)
  return false;
#undef DO_
}

void RemoveFilterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.RemoveFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.RemoveFilterResponse)
}

::google::protobuf::uint8* RemoveFilterResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.RemoveFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.RemoveFilterResponse)
  return target;
}

int RemoveFilterResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void RemoveFilterResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RemoveFilterResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RemoveFilterResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RemoveFilterResponse::MergeFrom(const RemoveFilterResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RemoveFilterResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveFilterResponse::CopyFrom(const RemoveFilterResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveFilterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RemoveFilterResponse::Swap(RemoveFilterResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RemoveFilterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RemoveFilterResponse_descriptor_;
  metadata.reflection = RemoveFilterResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveFilterRequest::kDesiredStackIndicesFieldNumber;
#endif  // !_MSC_VER

MoveFilterRequest::MoveFilterRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.MoveFilterRequest)
}

void MoveFilterRequest::InitAsDefaultInstance() {
}

MoveFilterRequest::MoveFilterRequest(const MoveFilterRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.MoveFilterRequest)
}

void MoveFilterRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveFilterRequest::~MoveFilterRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.MoveFilterRequest)
  SharedDtor();
}

void MoveFilterRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoveFilterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveFilterRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveFilterRequest_descriptor_;
}

const MoveFilterRequest& MoveFilterRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

MoveFilterRequest* MoveFilterRequest::default_instance_ = NULL;

MoveFilterRequest* MoveFilterRequest::New() const {
  return new MoveFilterRequest;
}

void MoveFilterRequest::Clear() {
  desiredstackindices_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveFilterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.MoveFilterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 desiredStackIndices = 1;
      case 1: {
        if (tag == 8) {
         parse_desiredStackIndices:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_desiredstackindices())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_desiredstackindices())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_desiredStackIndices;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.MoveFilterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.MoveFilterRequest)
  return false;
#undef DO_
}

void MoveFilterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.MoveFilterRequest)
  // repeated uint32 desiredStackIndices = 1;
  for (int i = 0; i < this->desiredstackindices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->desiredstackindices(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.MoveFilterRequest)
}

::google::protobuf::uint8* MoveFilterRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.MoveFilterRequest)
  // repeated uint32 desiredStackIndices = 1;
  for (int i = 0; i < this->desiredstackindices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->desiredstackindices(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.MoveFilterRequest)
  return target;
}

int MoveFilterRequest::ByteSize() const {
  int total_size = 0;

  // repeated uint32 desiredStackIndices = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->desiredstackindices_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->desiredstackindices(i));
    }
    total_size += 1 * this->desiredstackindices_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void MoveFilterRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveFilterRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveFilterRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveFilterRequest::MergeFrom(const MoveFilterRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  desiredstackindices_.MergeFrom(from.desiredstackindices_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveFilterRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveFilterRequest::CopyFrom(const MoveFilterRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveFilterRequest::IsInitialized() const {

  return true;
}

void MoveFilterRequest::Swap(MoveFilterRequest* other) {
  if (other != this) {
    desiredstackindices_.Swap(&other->desiredstackindices_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveFilterRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveFilterRequest_descriptor_;
  metadata.reflection = MoveFilterRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoveFilterResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

MoveFilterResponse::MoveFilterResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.MoveFilterResponse)
}

void MoveFilterResponse::InitAsDefaultInstance() {
}

MoveFilterResponse::MoveFilterResponse(const MoveFilterResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.MoveFilterResponse)
}

void MoveFilterResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoveFilterResponse::~MoveFilterResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.MoveFilterResponse)
  SharedDtor();
}

void MoveFilterResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MoveFilterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveFilterResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveFilterResponse_descriptor_;
}

const MoveFilterResponse& MoveFilterResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

MoveFilterResponse* MoveFilterResponse::default_instance_ = NULL;

MoveFilterResponse* MoveFilterResponse::New() const {
  return new MoveFilterResponse;
}

void MoveFilterResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoveFilterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.MoveFilterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.MoveFilterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.MoveFilterResponse)
  return false;
#undef DO_
}

void MoveFilterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.MoveFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.MoveFilterResponse)
}

::google::protobuf::uint8* MoveFilterResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.MoveFilterResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.MoveFilterResponse)
  return target;
}

int MoveFilterResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void MoveFilterResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoveFilterResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoveFilterResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoveFilterResponse::MergeFrom(const MoveFilterResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoveFilterResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveFilterResponse::CopyFrom(const MoveFilterResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveFilterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MoveFilterResponse::Swap(MoveFilterResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoveFilterResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveFilterResponse_descriptor_;
  metadata.reflection = MoveFilterResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

GetStackInfoRequest::GetStackInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetStackInfoRequest)
}

void GetStackInfoRequest::InitAsDefaultInstance() {
}

GetStackInfoRequest::GetStackInfoRequest(const GetStackInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetStackInfoRequest)
}

void GetStackInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStackInfoRequest::~GetStackInfoRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetStackInfoRequest)
  SharedDtor();
}

void GetStackInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStackInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStackInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStackInfoRequest_descriptor_;
}

const GetStackInfoRequest& GetStackInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetStackInfoRequest* GetStackInfoRequest::default_instance_ = NULL;

GetStackInfoRequest* GetStackInfoRequest::New() const {
  return new GetStackInfoRequest;
}

void GetStackInfoRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStackInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetStackInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetStackInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetStackInfoRequest)
  return false;
#undef DO_
}

void GetStackInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetStackInfoRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetStackInfoRequest)
}

::google::protobuf::uint8* GetStackInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetStackInfoRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetStackInfoRequest)
  return target;
}

int GetStackInfoRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetStackInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStackInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStackInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStackInfoRequest::MergeFrom(const GetStackInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStackInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStackInfoRequest::CopyFrom(const GetStackInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStackInfoRequest::IsInitialized() const {

  return true;
}

void GetStackInfoRequest::Swap(GetStackInfoRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStackInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStackInfoRequest_descriptor_;
  metadata.reflection = GetStackInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetStackInfoResponse::kFilterIdsFieldNumber;
#endif  // !_MSC_VER

GetStackInfoResponse::GetStackInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetStackInfoResponse)
}

void GetStackInfoResponse::InitAsDefaultInstance() {
}

GetStackInfoResponse::GetStackInfoResponse(const GetStackInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetStackInfoResponse)
}

void GetStackInfoResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStackInfoResponse::~GetStackInfoResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetStackInfoResponse)
  SharedDtor();
}

void GetStackInfoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetStackInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStackInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStackInfoResponse_descriptor_;
}

const GetStackInfoResponse& GetStackInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetStackInfoResponse* GetStackInfoResponse::default_instance_ = NULL;

GetStackInfoResponse* GetStackInfoResponse::New() const {
  return new GetStackInfoResponse;
}

void GetStackInfoResponse::Clear() {
  filterids_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStackInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetStackInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string filterIds = 1;
      case 1: {
        if (tag == 10) {
         parse_filterIds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filterids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterids(this->filterids_size() - 1).data(),
            this->filterids(this->filterids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_filterIds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetStackInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetStackInfoResponse)
  return false;
#undef DO_
}

void GetStackInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetStackInfoResponse)
  // repeated string filterIds = 1;
  for (int i = 0; i < this->filterids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->filterids(i).data(), this->filterids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "filterids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->filterids(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetStackInfoResponse)
}

::google::protobuf::uint8* GetStackInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetStackInfoResponse)
  // repeated string filterIds = 1;
  for (int i = 0; i < this->filterids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterids(i).data(), this->filterids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->filterids(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetStackInfoResponse)
  return target;
}

int GetStackInfoResponse::ByteSize() const {
  int total_size = 0;

  // repeated string filterIds = 1;
  total_size += 1 * this->filterids_size();
  for (int i = 0; i < this->filterids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filterids(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetStackInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStackInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStackInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStackInfoResponse::MergeFrom(const GetStackInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  filterids_.MergeFrom(from.filterids_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStackInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStackInfoResponse::CopyFrom(const GetStackInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStackInfoResponse::IsInitialized() const {

  return true;
}

void GetStackInfoResponse::Swap(GetStackInfoResponse* other) {
  if (other != this) {
    filterids_.Swap(&other->filterids_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStackInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStackInfoResponse_descriptor_;
  metadata.reflection = GetStackInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FilterProperties_ValuesFloat::kLwrrentFieldNumber;
const int FilterProperties_ValuesFloat::kDefaultFieldNumber;
const int FilterProperties_ValuesFloat::kMinimumFieldNumber;
const int FilterProperties_ValuesFloat::kMaximumFieldNumber;
const int FilterProperties_ValuesFloat::kStepSizeFieldNumber;
const int FilterProperties_ValuesFloat::kStepSizeUiFieldNumber;
const int FilterProperties_ValuesFloat::kMilwalueUiFieldNumber;
const int FilterProperties_ValuesFloat::kMaxValueUiFieldNumber;
const int FilterProperties_ValuesFloat::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

FilterProperties_ValuesFloat::FilterProperties_ValuesFloat()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties.ValuesFloat)
}

void FilterProperties_ValuesFloat::InitAsDefaultInstance() {
}

FilterProperties_ValuesFloat::FilterProperties_ValuesFloat(const FilterProperties_ValuesFloat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties.ValuesFloat)
}

void FilterProperties_ValuesFloat::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lwrrent_ = 0;
  default__ = 0;
  minimum_ = 0;
  maximum_ = 0;
  stepsize_ = 0;
  stepsizeui_ = 0;
  milwalueui_ = 0;
  maxvalueui_ = 0;
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties_ValuesFloat::~FilterProperties_ValuesFloat() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties.ValuesFloat)
  SharedDtor();
}

void FilterProperties_ValuesFloat::SharedDtor() {
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties_ValuesFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties_ValuesFloat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_ValuesFloat_descriptor_;
}

const FilterProperties_ValuesFloat& FilterProperties_ValuesFloat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties_ValuesFloat* FilterProperties_ValuesFloat::default_instance_ = NULL;

FilterProperties_ValuesFloat* FilterProperties_ValuesFloat::New() const {
  return new FilterProperties_ValuesFloat;
}

void FilterProperties_ValuesFloat::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FilterProperties_ValuesFloat*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(lwrrent_, maxvalueui_);
  }
  if (has_displayname()) {
    if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      displayname_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties_ValuesFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties.ValuesFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float current = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lwrrent_)));
          set_has_lwrrent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_default;
        break;
      }

      // required float default = 2;
      case 2: {
        if (tag == 21) {
         parse_default:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &default__)));
          set_has_default_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_minimum;
        break;
      }

      // required float minimum = 3;
      case 3: {
        if (tag == 29) {
         parse_minimum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &minimum_)));
          set_has_minimum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_maximum;
        break;
      }

      // required float maximum = 4;
      case 4: {
        if (tag == 37) {
         parse_maximum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maximum_)));
          set_has_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_stepSize;
        break;
      }

      // required float stepSize = 5;
      case 5: {
        if (tag == 45) {
         parse_stepSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stepsize_)));
          set_has_stepsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_stepSizeUi;
        break;
      }

      // optional float stepSizeUi = 6;
      case 6: {
        if (tag == 53) {
         parse_stepSizeUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stepsizeui_)));
          set_has_stepsizeui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_milwalueUi;
        break;
      }

      // optional float milwalueUi = 7;
      case 7: {
        if (tag == 61) {
         parse_milwalueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &milwalueui_)));
          set_has_milwalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_maxValueUi;
        break;
      }

      // optional float maxValueUi = 8;
      case 8: {
        if (tag == 69) {
         parse_maxValueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxvalueui_)));
          set_has_maxvalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_displayName;
        break;
      }

      // optional string displayName = 9;
      case 9: {
        if (tag == 74) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties.ValuesFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties.ValuesFloat)
  return false;
#undef DO_
}

void FilterProperties_ValuesFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties.ValuesFloat)
  // required float current = 1;
  if (has_lwrrent()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->current(), output);
  }

  // required float default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->default_(), output);
  }

  // required float minimum = 3;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->minimum(), output);
  }

  // required float maximum = 4;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->maximum(), output);
  }

  // required float stepSize = 5;
  if (has_stepsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->stepsize(), output);
  }

  // optional float stepSizeUi = 6;
  if (has_stepsizeui()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->stepsizeui(), output);
  }

  // optional float milwalueUi = 7;
  if (has_milwalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->milwalueui(), output);
  }

  // optional float maxValueUi = 8;
  if (has_maxvalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->maxvalueui(), output);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->displayname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties.ValuesFloat)
}

::google::protobuf::uint8* FilterProperties_ValuesFloat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties.ValuesFloat)
  // required float current = 1;
  if (has_lwrrent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->current(), target);
  }

  // required float default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->default_(), target);
  }

  // required float minimum = 3;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->minimum(), target);
  }

  // required float maximum = 4;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->maximum(), target);
  }

  // required float stepSize = 5;
  if (has_stepsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->stepsize(), target);
  }

  // optional float stepSizeUi = 6;
  if (has_stepsizeui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->stepsizeui(), target);
  }

  // optional float milwalueUi = 7;
  if (has_milwalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->milwalueui(), target);
  }

  // optional float maxValueUi = 8;
  if (has_maxvalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->maxvalueui(), target);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->displayname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties.ValuesFloat)
  return target;
}

int FilterProperties_ValuesFloat::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float current = 1;
    if (has_lwrrent()) {
      total_size += 1 + 4;
    }

    // required float default = 2;
    if (has_default_()) {
      total_size += 1 + 4;
    }

    // required float minimum = 3;
    if (has_minimum()) {
      total_size += 1 + 4;
    }

    // required float maximum = 4;
    if (has_maximum()) {
      total_size += 1 + 4;
    }

    // required float stepSize = 5;
    if (has_stepsize()) {
      total_size += 1 + 4;
    }

    // optional float stepSizeUi = 6;
    if (has_stepsizeui()) {
      total_size += 1 + 4;
    }

    // optional float milwalueUi = 7;
    if (has_milwalueui()) {
      total_size += 1 + 4;
    }

    // optional float maxValueUi = 8;
    if (has_maxvalueui()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string displayName = 9;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties_ValuesFloat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties_ValuesFloat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties_ValuesFloat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties_ValuesFloat::MergeFrom(const FilterProperties_ValuesFloat& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lwrrent()) {
      set_lwrrent(from.current());
    }
    if (from.has_default_()) {
      set_default_(from.default_());
    }
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_stepsize()) {
      set_stepsize(from.stepsize());
    }
    if (from.has_stepsizeui()) {
      set_stepsizeui(from.stepsizeui());
    }
    if (from.has_milwalueui()) {
      set_milwalueui(from.milwalueui());
    }
    if (from.has_maxvalueui()) {
      set_maxvalueui(from.maxvalueui());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties_ValuesFloat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties_ValuesFloat::CopyFrom(const FilterProperties_ValuesFloat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties_ValuesFloat::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void FilterProperties_ValuesFloat::Swap(FilterProperties_ValuesFloat* other) {
  if (other != this) {
    std::swap(lwrrent_, other->lwrrent_);
    std::swap(default__, other->default__);
    std::swap(minimum_, other->minimum_);
    std::swap(maximum_, other->maximum_);
    std::swap(stepsize_, other->stepsize_);
    std::swap(stepsizeui_, other->stepsizeui_);
    std::swap(milwalueui_, other->milwalueui_);
    std::swap(maxvalueui_, other->maxvalueui_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties_ValuesFloat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_ValuesFloat_descriptor_;
  metadata.reflection = FilterProperties_ValuesFloat_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FilterProperties_ValuesInt::kLwrrentFieldNumber;
const int FilterProperties_ValuesInt::kDefaultFieldNumber;
const int FilterProperties_ValuesInt::kMinimumFieldNumber;
const int FilterProperties_ValuesInt::kMaximumFieldNumber;
const int FilterProperties_ValuesInt::kStepSizeFieldNumber;
const int FilterProperties_ValuesInt::kStepSizeUiFieldNumber;
const int FilterProperties_ValuesInt::kMilwalueUiFieldNumber;
const int FilterProperties_ValuesInt::kMaxValueUiFieldNumber;
const int FilterProperties_ValuesInt::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

FilterProperties_ValuesInt::FilterProperties_ValuesInt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties.ValuesInt)
}

void FilterProperties_ValuesInt::InitAsDefaultInstance() {
}

FilterProperties_ValuesInt::FilterProperties_ValuesInt(const FilterProperties_ValuesInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties.ValuesInt)
}

void FilterProperties_ValuesInt::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lwrrent_ = 0;
  default__ = 0;
  minimum_ = 0;
  maximum_ = 0;
  stepsize_ = 0u;
  stepsizeui_ = 0u;
  milwalueui_ = 0;
  maxvalueui_ = 0;
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties_ValuesInt::~FilterProperties_ValuesInt() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties.ValuesInt)
  SharedDtor();
}

void FilterProperties_ValuesInt::SharedDtor() {
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties_ValuesInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties_ValuesInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_ValuesInt_descriptor_;
}

const FilterProperties_ValuesInt& FilterProperties_ValuesInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties_ValuesInt* FilterProperties_ValuesInt::default_instance_ = NULL;

FilterProperties_ValuesInt* FilterProperties_ValuesInt::New() const {
  return new FilterProperties_ValuesInt;
}

void FilterProperties_ValuesInt::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FilterProperties_ValuesInt*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(lwrrent_, maxvalueui_);
  }
  if (has_displayname()) {
    if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      displayname_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties_ValuesInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties.ValuesInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 current = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lwrrent_)));
          set_has_lwrrent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_default;
        break;
      }

      // required int32 default = 2;
      case 2: {
        if (tag == 16) {
         parse_default:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &default__)));
          set_has_default_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_minimum;
        break;
      }

      // required int32 minimum = 3;
      case 3: {
        if (tag == 24) {
         parse_minimum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minimum_)));
          set_has_minimum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maximum;
        break;
      }

      // required int32 maximum = 4;
      case 4: {
        if (tag == 32) {
         parse_maximum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maximum_)));
          set_has_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_stepSize;
        break;
      }

      // required uint32 stepSize = 5;
      case 5: {
        if (tag == 40) {
         parse_stepSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stepsize_)));
          set_has_stepsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_stepSizeUi;
        break;
      }

      // optional uint32 stepSizeUi = 6;
      case 6: {
        if (tag == 48) {
         parse_stepSizeUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stepsizeui_)));
          set_has_stepsizeui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_milwalueUi;
        break;
      }

      // optional int32 milwalueUi = 7;
      case 7: {
        if (tag == 56) {
         parse_milwalueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &milwalueui_)));
          set_has_milwalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_maxValueUi;
        break;
      }

      // optional int32 maxValueUi = 8;
      case 8: {
        if (tag == 64) {
         parse_maxValueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxvalueui_)));
          set_has_maxvalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_displayName;
        break;
      }

      // optional string displayName = 9;
      case 9: {
        if (tag == 74) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties.ValuesInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties.ValuesInt)
  return false;
#undef DO_
}

void FilterProperties_ValuesInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties.ValuesInt)
  // required int32 current = 1;
  if (has_lwrrent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->current(), output);
  }

  // required int32 default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->default_(), output);
  }

  // required int32 minimum = 3;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->minimum(), output);
  }

  // required int32 maximum = 4;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maximum(), output);
  }

  // required uint32 stepSize = 5;
  if (has_stepsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->stepsize(), output);
  }

  // optional uint32 stepSizeUi = 6;
  if (has_stepsizeui()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->stepsizeui(), output);
  }

  // optional int32 milwalueUi = 7;
  if (has_milwalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->milwalueui(), output);
  }

  // optional int32 maxValueUi = 8;
  if (has_maxvalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->maxvalueui(), output);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->displayname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties.ValuesInt)
}

::google::protobuf::uint8* FilterProperties_ValuesInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties.ValuesInt)
  // required int32 current = 1;
  if (has_lwrrent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->current(), target);
  }

  // required int32 default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->default_(), target);
  }

  // required int32 minimum = 3;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->minimum(), target);
  }

  // required int32 maximum = 4;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maximum(), target);
  }

  // required uint32 stepSize = 5;
  if (has_stepsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->stepsize(), target);
  }

  // optional uint32 stepSizeUi = 6;
  if (has_stepsizeui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->stepsizeui(), target);
  }

  // optional int32 milwalueUi = 7;
  if (has_milwalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->milwalueui(), target);
  }

  // optional int32 maxValueUi = 8;
  if (has_maxvalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->maxvalueui(), target);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->displayname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties.ValuesInt)
  return target;
}

int FilterProperties_ValuesInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 current = 1;
    if (has_lwrrent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current());
    }

    // required int32 default = 2;
    if (has_default_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->default_());
    }

    // required int32 minimum = 3;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minimum());
    }

    // required int32 maximum = 4;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maximum());
    }

    // required uint32 stepSize = 5;
    if (has_stepsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stepsize());
    }

    // optional uint32 stepSizeUi = 6;
    if (has_stepsizeui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stepsizeui());
    }

    // optional int32 milwalueUi = 7;
    if (has_milwalueui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->milwalueui());
    }

    // optional int32 maxValueUi = 8;
    if (has_maxvalueui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxvalueui());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string displayName = 9;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties_ValuesInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties_ValuesInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties_ValuesInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties_ValuesInt::MergeFrom(const FilterProperties_ValuesInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lwrrent()) {
      set_lwrrent(from.current());
    }
    if (from.has_default_()) {
      set_default_(from.default_());
    }
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_stepsize()) {
      set_stepsize(from.stepsize());
    }
    if (from.has_stepsizeui()) {
      set_stepsizeui(from.stepsizeui());
    }
    if (from.has_milwalueui()) {
      set_milwalueui(from.milwalueui());
    }
    if (from.has_maxvalueui()) {
      set_maxvalueui(from.maxvalueui());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties_ValuesInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties_ValuesInt::CopyFrom(const FilterProperties_ValuesInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties_ValuesInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void FilterProperties_ValuesInt::Swap(FilterProperties_ValuesInt* other) {
  if (other != this) {
    std::swap(lwrrent_, other->lwrrent_);
    std::swap(default__, other->default__);
    std::swap(minimum_, other->minimum_);
    std::swap(maximum_, other->maximum_);
    std::swap(stepsize_, other->stepsize_);
    std::swap(stepsizeui_, other->stepsizeui_);
    std::swap(milwalueui_, other->milwalueui_);
    std::swap(maxvalueui_, other->maxvalueui_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties_ValuesInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_ValuesInt_descriptor_;
  metadata.reflection = FilterProperties_ValuesInt_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FilterProperties_ValuesUInt::kLwrrentFieldNumber;
const int FilterProperties_ValuesUInt::kDefaultFieldNumber;
const int FilterProperties_ValuesUInt::kMinimumFieldNumber;
const int FilterProperties_ValuesUInt::kMaximumFieldNumber;
const int FilterProperties_ValuesUInt::kStepSizeFieldNumber;
const int FilterProperties_ValuesUInt::kStepSizeUiFieldNumber;
const int FilterProperties_ValuesUInt::kMilwalueUiFieldNumber;
const int FilterProperties_ValuesUInt::kMaxValueUiFieldNumber;
const int FilterProperties_ValuesUInt::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

FilterProperties_ValuesUInt::FilterProperties_ValuesUInt()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties.ValuesUInt)
}

void FilterProperties_ValuesUInt::InitAsDefaultInstance() {
}

FilterProperties_ValuesUInt::FilterProperties_ValuesUInt(const FilterProperties_ValuesUInt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties.ValuesUInt)
}

void FilterProperties_ValuesUInt::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lwrrent_ = 0u;
  default__ = 0u;
  minimum_ = 0u;
  maximum_ = 0u;
  stepsize_ = 0u;
  stepsizeui_ = 0u;
  milwalueui_ = 0u;
  maxvalueui_ = 0u;
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties_ValuesUInt::~FilterProperties_ValuesUInt() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties.ValuesUInt)
  SharedDtor();
}

void FilterProperties_ValuesUInt::SharedDtor() {
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties_ValuesUInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties_ValuesUInt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_ValuesUInt_descriptor_;
}

const FilterProperties_ValuesUInt& FilterProperties_ValuesUInt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties_ValuesUInt* FilterProperties_ValuesUInt::default_instance_ = NULL;

FilterProperties_ValuesUInt* FilterProperties_ValuesUInt::New() const {
  return new FilterProperties_ValuesUInt;
}

void FilterProperties_ValuesUInt::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FilterProperties_ValuesUInt*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(lwrrent_, maxvalueui_);
  }
  if (has_displayname()) {
    if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      displayname_->clear();
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties_ValuesUInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties.ValuesUInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 current = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lwrrent_)));
          set_has_lwrrent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_default;
        break;
      }

      // required uint32 default = 2;
      case 2: {
        if (tag == 16) {
         parse_default:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default__)));
          set_has_default_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_minimum;
        break;
      }

      // required uint32 minimum = 3;
      case 3: {
        if (tag == 24) {
         parse_minimum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minimum_)));
          set_has_minimum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maximum;
        break;
      }

      // required uint32 maximum = 4;
      case 4: {
        if (tag == 32) {
         parse_maximum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maximum_)));
          set_has_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_stepSize;
        break;
      }

      // required uint32 stepSize = 5;
      case 5: {
        if (tag == 40) {
         parse_stepSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stepsize_)));
          set_has_stepsize();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_stepSizeUi;
        break;
      }

      // optional uint32 stepSizeUi = 6;
      case 6: {
        if (tag == 48) {
         parse_stepSizeUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stepsizeui_)));
          set_has_stepsizeui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_milwalueUi;
        break;
      }

      // optional uint32 milwalueUi = 7;
      case 7: {
        if (tag == 56) {
         parse_milwalueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &milwalueui_)));
          set_has_milwalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_maxValueUi;
        break;
      }

      // optional uint32 maxValueUi = 8;
      case 8: {
        if (tag == 64) {
         parse_maxValueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvalueui_)));
          set_has_maxvalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_displayName;
        break;
      }

      // optional string displayName = 9;
      case 9: {
        if (tag == 74) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties.ValuesUInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties.ValuesUInt)
  return false;
#undef DO_
}

void FilterProperties_ValuesUInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties.ValuesUInt)
  // required uint32 current = 1;
  if (has_lwrrent()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->current(), output);
  }

  // required uint32 default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->default_(), output);
  }

  // required uint32 minimum = 3;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->minimum(), output);
  }

  // required uint32 maximum = 4;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maximum(), output);
  }

  // required uint32 stepSize = 5;
  if (has_stepsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->stepsize(), output);
  }

  // optional uint32 stepSizeUi = 6;
  if (has_stepsizeui()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->stepsizeui(), output);
  }

  // optional uint32 milwalueUi = 7;
  if (has_milwalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->milwalueui(), output);
  }

  // optional uint32 maxValueUi = 8;
  if (has_maxvalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->maxvalueui(), output);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->displayname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties.ValuesUInt)
}

::google::protobuf::uint8* FilterProperties_ValuesUInt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties.ValuesUInt)
  // required uint32 current = 1;
  if (has_lwrrent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->current(), target);
  }

  // required uint32 default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->default_(), target);
  }

  // required uint32 minimum = 3;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->minimum(), target);
  }

  // required uint32 maximum = 4;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maximum(), target);
  }

  // required uint32 stepSize = 5;
  if (has_stepsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->stepsize(), target);
  }

  // optional uint32 stepSizeUi = 6;
  if (has_stepsizeui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->stepsizeui(), target);
  }

  // optional uint32 milwalueUi = 7;
  if (has_milwalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->milwalueui(), target);
  }

  // optional uint32 maxValueUi = 8;
  if (has_maxvalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->maxvalueui(), target);
  }

  // optional string displayName = 9;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->displayname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties.ValuesUInt)
  return target;
}

int FilterProperties_ValuesUInt::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 current = 1;
    if (has_lwrrent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current());
    }

    // required uint32 default = 2;
    if (has_default_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_());
    }

    // required uint32 minimum = 3;
    if (has_minimum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->minimum());
    }

    // required uint32 maximum = 4;
    if (has_maximum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maximum());
    }

    // required uint32 stepSize = 5;
    if (has_stepsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stepsize());
    }

    // optional uint32 stepSizeUi = 6;
    if (has_stepsizeui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stepsizeui());
    }

    // optional uint32 milwalueUi = 7;
    if (has_milwalueui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->milwalueui());
    }

    // optional uint32 maxValueUi = 8;
    if (has_maxvalueui()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxvalueui());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string displayName = 9;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties_ValuesUInt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties_ValuesUInt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties_ValuesUInt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties_ValuesUInt::MergeFrom(const FilterProperties_ValuesUInt& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lwrrent()) {
      set_lwrrent(from.current());
    }
    if (from.has_default_()) {
      set_default_(from.default_());
    }
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_stepsize()) {
      set_stepsize(from.stepsize());
    }
    if (from.has_stepsizeui()) {
      set_stepsizeui(from.stepsizeui());
    }
    if (from.has_milwalueui()) {
      set_milwalueui(from.milwalueui());
    }
    if (from.has_maxvalueui()) {
      set_maxvalueui(from.maxvalueui());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties_ValuesUInt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties_ValuesUInt::CopyFrom(const FilterProperties_ValuesUInt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties_ValuesUInt::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void FilterProperties_ValuesUInt::Swap(FilterProperties_ValuesUInt* other) {
  if (other != this) {
    std::swap(lwrrent_, other->lwrrent_);
    std::swap(default__, other->default__);
    std::swap(minimum_, other->minimum_);
    std::swap(maximum_, other->maximum_);
    std::swap(stepsize_, other->stepsize_);
    std::swap(stepsizeui_, other->stepsizeui_);
    std::swap(milwalueui_, other->milwalueui_);
    std::swap(maxvalueui_, other->maxvalueui_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties_ValuesUInt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_ValuesUInt_descriptor_;
  metadata.reflection = FilterProperties_ValuesUInt_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FilterProperties_ValuesBool::kLwrrentFieldNumber;
const int FilterProperties_ValuesBool::kDefaultFieldNumber;
const int FilterProperties_ValuesBool::kMinimumFieldNumber;
const int FilterProperties_ValuesBool::kMaximumFieldNumber;
const int FilterProperties_ValuesBool::kDisplayNameFieldNumber;
#endif  // !_MSC_VER

FilterProperties_ValuesBool::FilterProperties_ValuesBool()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties.ValuesBool)
}

void FilterProperties_ValuesBool::InitAsDefaultInstance() {
}

FilterProperties_ValuesBool::FilterProperties_ValuesBool(const FilterProperties_ValuesBool& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties.ValuesBool)
}

void FilterProperties_ValuesBool::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lwrrent_ = false;
  default__ = false;
  minimum_ = false;
  maximum_ = false;
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties_ValuesBool::~FilterProperties_ValuesBool() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties.ValuesBool)
  SharedDtor();
}

void FilterProperties_ValuesBool::SharedDtor() {
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties_ValuesBool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties_ValuesBool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_ValuesBool_descriptor_;
}

const FilterProperties_ValuesBool& FilterProperties_ValuesBool::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties_ValuesBool* FilterProperties_ValuesBool::default_instance_ = NULL;

FilterProperties_ValuesBool* FilterProperties_ValuesBool::New() const {
  return new FilterProperties_ValuesBool;
}

void FilterProperties_ValuesBool::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FilterProperties_ValuesBool*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(lwrrent_, maximum_);
    if (has_displayname()) {
      if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displayname_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties_ValuesBool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties.ValuesBool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool current = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &lwrrent_)));
          set_has_lwrrent();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_default;
        break;
      }

      // required bool default = 2;
      case 2: {
        if (tag == 16) {
         parse_default:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default__)));
          set_has_default_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_minimum;
        break;
      }

      // required bool minimum = 3;
      case 3: {
        if (tag == 24) {
         parse_minimum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &minimum_)));
          set_has_minimum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maximum;
        break;
      }

      // required bool maximum = 4;
      case 4: {
        if (tag == 32) {
         parse_maximum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maximum_)));
          set_has_maximum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_displayName;
        break;
      }

      // optional string displayName = 5;
      case 5: {
        if (tag == 42) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties.ValuesBool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties.ValuesBool)
  return false;
#undef DO_
}

void FilterProperties_ValuesBool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties.ValuesBool)
  // required bool current = 1;
  if (has_lwrrent()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->current(), output);
  }

  // required bool default = 2;
  if (has_default_()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->default_(), output);
  }

  // required bool minimum = 3;
  if (has_minimum()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->minimum(), output);
  }

  // required bool maximum = 4;
  if (has_maximum()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->maximum(), output);
  }

  // optional string displayName = 5;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->displayname(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties.ValuesBool)
}

::google::protobuf::uint8* FilterProperties_ValuesBool::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties.ValuesBool)
  // required bool current = 1;
  if (has_lwrrent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->current(), target);
  }

  // required bool default = 2;
  if (has_default_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->default_(), target);
  }

  // required bool minimum = 3;
  if (has_minimum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->minimum(), target);
  }

  // required bool maximum = 4;
  if (has_maximum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->maximum(), target);
  }

  // optional string displayName = 5;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->displayname(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties.ValuesBool)
  return target;
}

int FilterProperties_ValuesBool::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool current = 1;
    if (has_lwrrent()) {
      total_size += 1 + 1;
    }

    // required bool default = 2;
    if (has_default_()) {
      total_size += 1 + 1;
    }

    // required bool minimum = 3;
    if (has_minimum()) {
      total_size += 1 + 1;
    }

    // required bool maximum = 4;
    if (has_maximum()) {
      total_size += 1 + 1;
    }

    // optional string displayName = 5;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties_ValuesBool::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties_ValuesBool* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties_ValuesBool*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties_ValuesBool::MergeFrom(const FilterProperties_ValuesBool& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lwrrent()) {
      set_lwrrent(from.current());
    }
    if (from.has_default_()) {
      set_default_(from.default_());
    }
    if (from.has_minimum()) {
      set_minimum(from.minimum());
    }
    if (from.has_maximum()) {
      set_maximum(from.maximum());
    }
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties_ValuesBool::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties_ValuesBool::CopyFrom(const FilterProperties_ValuesBool& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties_ValuesBool::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FilterProperties_ValuesBool::Swap(FilterProperties_ValuesBool* other) {
  if (other != this) {
    std::swap(lwrrent_, other->lwrrent_);
    std::swap(default__, other->default__);
    std::swap(minimum_, other->minimum_);
    std::swap(maximum_, other->maximum_);
    std::swap(displayname_, other->displayname_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties_ValuesBool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_ValuesBool_descriptor_;
  metadata.reflection = FilterProperties_ValuesBool_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FilterProperties_ControlDescription::kControlIdFieldNumber;
const int FilterProperties_ControlDescription::kDisplayNameFieldNumber;
const int FilterProperties_ControlDescription::kMilwalueUiFieldNumber;
const int FilterProperties_ControlDescription::kMaxValueUiFieldNumber;
const int FilterProperties_ControlDescription::kTypeFieldNumber;
const int FilterProperties_ControlDescription::kValuesFloatFieldNumber;
const int FilterProperties_ControlDescription::kValuesBoolFieldNumber;
const int FilterProperties_ControlDescription::kValuesIntFieldNumber;
const int FilterProperties_ControlDescription::kValuesUIntFieldNumber;
const int FilterProperties_ControlDescription::kUiPrecisionFieldNumber;
const int FilterProperties_ControlDescription::kUiMeasurementUnitFieldNumber;
const int FilterProperties_ControlDescription::kLabelsUiFieldNumber;
const int FilterProperties_ControlDescription::kTooltipFieldNumber;
const int FilterProperties_ControlDescription::kDisplayNameEnglishFieldNumber;
#endif  // !_MSC_VER

FilterProperties_ControlDescription::FilterProperties_ControlDescription()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties.ControlDescription)
}

void FilterProperties_ControlDescription::InitAsDefaultInstance() {
}

FilterProperties_ControlDescription::FilterProperties_ControlDescription(const FilterProperties_ControlDescription& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties.ControlDescription)
}

void FilterProperties_ControlDescription::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  controlid_ = 0;
  displayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  milwalueui_ = 0;
  maxvalueui_ = 0;
  type_ = 1;
  uiprecision_ = 0;
  uimeasurementunit_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tooltip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  displaynameenglish_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties_ControlDescription::~FilterProperties_ControlDescription() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties.ControlDescription)
  SharedDtor();
}

void FilterProperties_ControlDescription::SharedDtor() {
  if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displayname_;
  }
  if (uimeasurementunit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uimeasurementunit_;
  }
  if (tooltip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tooltip_;
  }
  if (displaynameenglish_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete displaynameenglish_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties_ControlDescription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties_ControlDescription::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_ControlDescription_descriptor_;
}

const FilterProperties_ControlDescription& FilterProperties_ControlDescription::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties_ControlDescription* FilterProperties_ControlDescription::default_instance_ = NULL;

FilterProperties_ControlDescription* FilterProperties_ControlDescription::New() const {
  return new FilterProperties_ControlDescription;
}

void FilterProperties_ControlDescription::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<FilterProperties_ControlDescription*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(controlid_, maxvalueui_);
    if (has_displayname()) {
      if (displayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displayname_->clear();
      }
    }
    type_ = 1;
  }
  if (_has_bits_[8 / 32] & 13824) {
    uiprecision_ = 0;
    if (has_uimeasurementunit()) {
      if (uimeasurementunit_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        uimeasurementunit_->clear();
      }
    }
    if (has_tooltip()) {
      if (tooltip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tooltip_->clear();
      }
    }
    if (has_displaynameenglish()) {
      if (displaynameenglish_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        displaynameenglish_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  valuesfloat_.Clear();
  valuesbool_.Clear();
  valuesint_.Clear();
  valuesuint_.Clear();
  labelsui_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties_ControlDescription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties.ControlDescription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 controlId = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controlid_)));
          set_has_controlid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_displayName;
        break;
      }

      // required string displayName = 2;
      case 2: {
        if (tag == 18) {
         parse_displayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displayname().data(), this->displayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_milwalueUi;
        break;
      }

      // required float milwalueUi = 3;
      case 3: {
        if (tag == 29) {
         parse_milwalueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &milwalueui_)));
          set_has_milwalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_maxValueUi;
        break;
      }

      // required float maxValueUi = 4;
      case 4: {
        if (tag == 37) {
         parse_maxValueUi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxvalueui_)));
          set_has_maxvalueui();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // required .AnselIpc.ControlType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ControlType_IsValid(value)) {
            set_type(static_cast< ::AnselIpc::ControlType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_valuesFloat;
        break;
      }

      // repeated .AnselIpc.FilterProperties.ValuesFloat valuesFloat = 6;
      case 6: {
        if (tag == 50) {
         parse_valuesFloat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_valuesfloat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_valuesFloat;
        if (input->ExpectTag(58)) goto parse_valuesBool;
        break;
      }

      // repeated .AnselIpc.FilterProperties.ValuesBool valuesBool = 7;
      case 7: {
        if (tag == 58) {
         parse_valuesBool:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_valuesbool()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_valuesBool;
        if (input->ExpectTag(66)) goto parse_valuesInt;
        break;
      }

      // repeated .AnselIpc.FilterProperties.ValuesInt valuesInt = 8;
      case 8: {
        if (tag == 66) {
         parse_valuesInt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_valuesint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_valuesInt;
        if (input->ExpectTag(74)) goto parse_valuesUInt;
        break;
      }

      // repeated .AnselIpc.FilterProperties.ValuesUInt valuesUInt = 9;
      case 9: {
        if (tag == 74) {
         parse_valuesUInt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_valuesuint()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_valuesUInt;
        if (input->ExpectTag(80)) goto parse_uiPrecision;
        break;
      }

      // required int32 uiPrecision = 10;
      case 10: {
        if (tag == 80) {
         parse_uiPrecision:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uiprecision_)));
          set_has_uiprecision();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_uiMeasurementUnit;
        break;
      }

      // optional string uiMeasurementUnit = 11;
      case 11: {
        if (tag == 90) {
         parse_uiMeasurementUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uimeasurementunit()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uimeasurementunit().data(), this->uimeasurementunit().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "uimeasurementunit");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_labelsUi;
        break;
      }

      // repeated string labelsUi = 12;
      case 12: {
        if (tag == 98) {
         parse_labelsUi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_labelsui()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->labelsui(this->labelsui_size() - 1).data(),
            this->labelsui(this->labelsui_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "labelsui");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_labelsUi;
        if (input->ExpectTag(106)) goto parse_tooltip;
        break;
      }

      // optional string tooltip = 13;
      case 13: {
        if (tag == 106) {
         parse_tooltip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tooltip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tooltip().data(), this->tooltip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tooltip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_displayNameEnglish;
        break;
      }

      // optional string displayNameEnglish = 14;
      case 14: {
        if (tag == 114) {
         parse_displayNameEnglish:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_displaynameenglish()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->displaynameenglish().data(), this->displaynameenglish().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "displaynameenglish");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties.ControlDescription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties.ControlDescription)
  return false;
#undef DO_
}

void FilterProperties_ControlDescription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties.ControlDescription)
  // required int32 controlId = 1;
  if (has_controlid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->controlid(), output);
  }

  // required string displayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->displayname(), output);
  }

  // required float milwalueUi = 3;
  if (has_milwalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->milwalueui(), output);
  }

  // required float maxValueUi = 4;
  if (has_maxvalueui()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->maxvalueui(), output);
  }

  // required .AnselIpc.ControlType type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // repeated .AnselIpc.FilterProperties.ValuesFloat valuesFloat = 6;
  for (int i = 0; i < this->valuesfloat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->valuesfloat(i), output);
  }

  // repeated .AnselIpc.FilterProperties.ValuesBool valuesBool = 7;
  for (int i = 0; i < this->valuesbool_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->valuesbool(i), output);
  }

  // repeated .AnselIpc.FilterProperties.ValuesInt valuesInt = 8;
  for (int i = 0; i < this->valuesint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->valuesint(i), output);
  }

  // repeated .AnselIpc.FilterProperties.ValuesUInt valuesUInt = 9;
  for (int i = 0; i < this->valuesuint_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->valuesuint(i), output);
  }

  // required int32 uiPrecision = 10;
  if (has_uiprecision()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->uiprecision(), output);
  }

  // optional string uiMeasurementUnit = 11;
  if (has_uimeasurementunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uimeasurementunit().data(), this->uimeasurementunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uimeasurementunit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->uimeasurementunit(), output);
  }

  // repeated string labelsUi = 12;
  for (int i = 0; i < this->labelsui_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->labelsui(i).data(), this->labelsui(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "labelsui");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->labelsui(i), output);
  }

  // optional string tooltip = 13;
  if (has_tooltip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tooltip().data(), this->tooltip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tooltip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->tooltip(), output);
  }

  // optional string displayNameEnglish = 14;
  if (has_displaynameenglish()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displaynameenglish().data(), this->displaynameenglish().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displaynameenglish");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->displaynameenglish(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties.ControlDescription)
}

::google::protobuf::uint8* FilterProperties_ControlDescription::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties.ControlDescription)
  // required int32 controlId = 1;
  if (has_controlid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->controlid(), target);
  }

  // required string displayName = 2;
  if (has_displayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displayname().data(), this->displayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->displayname(), target);
  }

  // required float milwalueUi = 3;
  if (has_milwalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->milwalueui(), target);
  }

  // required float maxValueUi = 4;
  if (has_maxvalueui()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->maxvalueui(), target);
  }

  // required .AnselIpc.ControlType type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // repeated .AnselIpc.FilterProperties.ValuesFloat valuesFloat = 6;
  for (int i = 0; i < this->valuesfloat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->valuesfloat(i), target);
  }

  // repeated .AnselIpc.FilterProperties.ValuesBool valuesBool = 7;
  for (int i = 0; i < this->valuesbool_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->valuesbool(i), target);
  }

  // repeated .AnselIpc.FilterProperties.ValuesInt valuesInt = 8;
  for (int i = 0; i < this->valuesint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->valuesint(i), target);
  }

  // repeated .AnselIpc.FilterProperties.ValuesUInt valuesUInt = 9;
  for (int i = 0; i < this->valuesuint_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->valuesuint(i), target);
  }

  // required int32 uiPrecision = 10;
  if (has_uiprecision()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->uiprecision(), target);
  }

  // optional string uiMeasurementUnit = 11;
  if (has_uimeasurementunit()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uimeasurementunit().data(), this->uimeasurementunit().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "uimeasurementunit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->uimeasurementunit(), target);
  }

  // repeated string labelsUi = 12;
  for (int i = 0; i < this->labelsui_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->labelsui(i).data(), this->labelsui(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "labelsui");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->labelsui(i), target);
  }

  // optional string tooltip = 13;
  if (has_tooltip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tooltip().data(), this->tooltip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tooltip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->tooltip(), target);
  }

  // optional string displayNameEnglish = 14;
  if (has_displaynameenglish()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->displaynameenglish().data(), this->displaynameenglish().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "displaynameenglish");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->displaynameenglish(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties.ControlDescription)
  return target;
}

int FilterProperties_ControlDescription::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 controlId = 1;
    if (has_controlid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controlid());
    }

    // required string displayName = 2;
    if (has_displayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displayname());
    }

    // required float milwalueUi = 3;
    if (has_milwalueui()) {
      total_size += 1 + 4;
    }

    // required float maxValueUi = 4;
    if (has_maxvalueui()) {
      total_size += 1 + 4;
    }

    // required .AnselIpc.ControlType type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // required int32 uiPrecision = 10;
    if (has_uiprecision()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uiprecision());
    }

    // optional string uiMeasurementUnit = 11;
    if (has_uimeasurementunit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uimeasurementunit());
    }

    // optional string tooltip = 13;
    if (has_tooltip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tooltip());
    }

    // optional string displayNameEnglish = 14;
    if (has_displaynameenglish()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->displaynameenglish());
    }

  }
  // repeated .AnselIpc.FilterProperties.ValuesFloat valuesFloat = 6;
  total_size += 1 * this->valuesfloat_size();
  for (int i = 0; i < this->valuesfloat_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->valuesfloat(i));
  }

  // repeated .AnselIpc.FilterProperties.ValuesBool valuesBool = 7;
  total_size += 1 * this->valuesbool_size();
  for (int i = 0; i < this->valuesbool_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->valuesbool(i));
  }

  // repeated .AnselIpc.FilterProperties.ValuesInt valuesInt = 8;
  total_size += 1 * this->valuesint_size();
  for (int i = 0; i < this->valuesint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->valuesint(i));
  }

  // repeated .AnselIpc.FilterProperties.ValuesUInt valuesUInt = 9;
  total_size += 1 * this->valuesuint_size();
  for (int i = 0; i < this->valuesuint_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->valuesuint(i));
  }

  // repeated string labelsUi = 12;
  total_size += 1 * this->labelsui_size();
  for (int i = 0; i < this->labelsui_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->labelsui(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties_ControlDescription::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties_ControlDescription* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties_ControlDescription*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties_ControlDescription::MergeFrom(const FilterProperties_ControlDescription& from) {
  GOOGLE_CHECK_NE(&from, this);
  valuesfloat_.MergeFrom(from.valuesfloat_);
  valuesbool_.MergeFrom(from.valuesbool_);
  valuesint_.MergeFrom(from.valuesint_);
  valuesuint_.MergeFrom(from.valuesuint_);
  labelsui_.MergeFrom(from.labelsui_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_controlid()) {
      set_controlid(from.controlid());
    }
    if (from.has_displayname()) {
      set_displayname(from.displayname());
    }
    if (from.has_milwalueui()) {
      set_milwalueui(from.milwalueui());
    }
    if (from.has_maxvalueui()) {
      set_maxvalueui(from.maxvalueui());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_uiprecision()) {
      set_uiprecision(from.uiprecision());
    }
    if (from.has_uimeasurementunit()) {
      set_uimeasurementunit(from.uimeasurementunit());
    }
    if (from.has_tooltip()) {
      set_tooltip(from.tooltip());
    }
    if (from.has_displaynameenglish()) {
      set_displaynameenglish(from.displaynameenglish());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties_ControlDescription::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties_ControlDescription::CopyFrom(const FilterProperties_ControlDescription& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties_ControlDescription::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000021f) != 0x0000021f) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->valuesfloat())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->valuesbool())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->valuesint())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->valuesuint())) return false;
  return true;
}

void FilterProperties_ControlDescription::Swap(FilterProperties_ControlDescription* other) {
  if (other != this) {
    std::swap(controlid_, other->controlid_);
    std::swap(displayname_, other->displayname_);
    std::swap(milwalueui_, other->milwalueui_);
    std::swap(maxvalueui_, other->maxvalueui_);
    std::swap(type_, other->type_);
    valuesfloat_.Swap(&other->valuesfloat_);
    valuesbool_.Swap(&other->valuesbool_);
    valuesint_.Swap(&other->valuesint_);
    valuesuint_.Swap(&other->valuesuint_);
    std::swap(uiprecision_, other->uiprecision_);
    std::swap(uimeasurementunit_, other->uimeasurementunit_);
    labelsui_.Swap(&other->labelsui_);
    std::swap(tooltip_, other->tooltip_);
    std::swap(displaynameenglish_, other->displaynameenglish_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties_ControlDescription::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_ControlDescription_descriptor_;
  metadata.reflection = FilterProperties_ControlDescription_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FilterProperties::kFilterIdFieldNumber;
const int FilterProperties::kFilterDisplayNameFieldNumber;
const int FilterProperties::kControlsFieldNumber;
const int FilterProperties::kFilterDisplayNameEnglishFieldNumber;
#endif  // !_MSC_VER

FilterProperties::FilterProperties()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.FilterProperties)
}

void FilterProperties::InitAsDefaultInstance() {
}

FilterProperties::FilterProperties(const FilterProperties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.FilterProperties)
}

void FilterProperties::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filterdisplayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filterdisplaynameenglish_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FilterProperties::~FilterProperties() {
  // @@protoc_insertion_point(destructor:AnselIpc.FilterProperties)
  SharedDtor();
}

void FilterProperties::SharedDtor() {
  if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterid_;
  }
  if (filterdisplayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterdisplayname_;
  }
  if (filterdisplaynameenglish_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterdisplaynameenglish_;
  }
  if (this != default_instance_) {
  }
}

void FilterProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilterProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FilterProperties_descriptor_;
}

const FilterProperties& FilterProperties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

FilterProperties* FilterProperties::default_instance_ = NULL;

FilterProperties* FilterProperties::New() const {
  return new FilterProperties;
}

void FilterProperties::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    if (has_filterid()) {
      if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterid_->clear();
      }
    }
    if (has_filterdisplayname()) {
      if (filterdisplayname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterdisplayname_->clear();
      }
    }
    if (has_filterdisplaynameenglish()) {
      if (filterdisplaynameenglish_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterdisplaynameenglish_->clear();
      }
    }
  }
  controls_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FilterProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.FilterProperties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filterId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterid().data(), this->filterid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_filterDisplayName;
        break;
      }

      // required string filterDisplayName = 2;
      case 2: {
        if (tag == 18) {
         parse_filterDisplayName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterdisplayname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterdisplayname().data(), this->filterdisplayname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterdisplayname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_controls;
        break;
      }

      // repeated .AnselIpc.FilterProperties.ControlDescription controls = 3;
      case 3: {
        if (tag == 26) {
         parse_controls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_controls()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_controls;
        if (input->ExpectTag(34)) goto parse_filterDisplayNameEnglish;
        break;
      }

      // optional string filterDisplayNameEnglish = 4;
      case 4: {
        if (tag == 34) {
         parse_filterDisplayNameEnglish:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterdisplaynameenglish()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterdisplaynameenglish().data(), this->filterdisplaynameenglish().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterdisplaynameenglish");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.FilterProperties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.FilterProperties)
  return false;
#undef DO_
}

void FilterProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.FilterProperties)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filterid(), output);
  }

  // required string filterDisplayName = 2;
  if (has_filterdisplayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterdisplayname().data(), this->filterdisplayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterdisplayname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filterdisplayname(), output);
  }

  // repeated .AnselIpc.FilterProperties.ControlDescription controls = 3;
  for (int i = 0; i < this->controls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->controls(i), output);
  }

  // optional string filterDisplayNameEnglish = 4;
  if (has_filterdisplaynameenglish()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterdisplaynameenglish().data(), this->filterdisplaynameenglish().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterdisplaynameenglish");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filterdisplaynameenglish(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.FilterProperties)
}

::google::protobuf::uint8* FilterProperties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.FilterProperties)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filterid(), target);
  }

  // required string filterDisplayName = 2;
  if (has_filterdisplayname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterdisplayname().data(), this->filterdisplayname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterdisplayname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filterdisplayname(), target);
  }

  // repeated .AnselIpc.FilterProperties.ControlDescription controls = 3;
  for (int i = 0; i < this->controls_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->controls(i), target);
  }

  // optional string filterDisplayNameEnglish = 4;
  if (has_filterdisplaynameenglish()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterdisplaynameenglish().data(), this->filterdisplaynameenglish().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterdisplaynameenglish");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filterdisplaynameenglish(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.FilterProperties)
  return target;
}

int FilterProperties::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filterId = 1;
    if (has_filterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterid());
    }

    // required string filterDisplayName = 2;
    if (has_filterdisplayname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterdisplayname());
    }

    // optional string filterDisplayNameEnglish = 4;
    if (has_filterdisplaynameenglish()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterdisplaynameenglish());
    }

  }
  // repeated .AnselIpc.FilterProperties.ControlDescription controls = 3;
  total_size += 1 * this->controls_size();
  for (int i = 0; i < this->controls_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->controls(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void FilterProperties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FilterProperties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FilterProperties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FilterProperties::MergeFrom(const FilterProperties& from) {
  GOOGLE_CHECK_NE(&from, this);
  controls_.MergeFrom(from.controls_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filterid()) {
      set_filterid(from.filterid());
    }
    if (from.has_filterdisplayname()) {
      set_filterdisplayname(from.filterdisplayname());
    }
    if (from.has_filterdisplaynameenglish()) {
      set_filterdisplaynameenglish(from.filterdisplaynameenglish());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FilterProperties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterProperties::CopyFrom(const FilterProperties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterProperties::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->controls())) return false;
  return true;
}

void FilterProperties::Swap(FilterProperties* other) {
  if (other != this) {
    std::swap(filterid_, other->filterid_);
    std::swap(filterdisplayname_, other->filterdisplayname_);
    controls_.Swap(&other->controls_);
    std::swap(filterdisplaynameenglish_, other->filterdisplaynameenglish_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FilterProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FilterProperties_descriptor_;
  metadata.reflection = FilterProperties_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFilterInfoRequest::kStackIdxFieldNumber;
#endif  // !_MSC_VER

GetFilterInfoRequest::GetFilterInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFilterInfoRequest)
}

void GetFilterInfoRequest::InitAsDefaultInstance() {
}

GetFilterInfoRequest::GetFilterInfoRequest(const GetFilterInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFilterInfoRequest)
}

void GetFilterInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFilterInfoRequest::~GetFilterInfoRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFilterInfoRequest)
  SharedDtor();
}

void GetFilterInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetFilterInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFilterInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFilterInfoRequest_descriptor_;
}

const GetFilterInfoRequest& GetFilterInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFilterInfoRequest* GetFilterInfoRequest::default_instance_ = NULL;

GetFilterInfoRequest* GetFilterInfoRequest::New() const {
  return new GetFilterInfoRequest;
}

void GetFilterInfoRequest::Clear() {
  stackidx_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFilterInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFilterInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 stackIdx = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFilterInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFilterInfoRequest)
  return false;
#undef DO_
}

void GetFilterInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFilterInfoRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stackidx(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFilterInfoRequest)
}

::google::protobuf::uint8* GetFilterInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFilterInfoRequest)
  // required int32 stackIdx = 1;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stackidx(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFilterInfoRequest)
  return target;
}

int GetFilterInfoRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 stackIdx = 1;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFilterInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFilterInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFilterInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFilterInfoRequest::MergeFrom(const GetFilterInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFilterInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFilterInfoRequest::CopyFrom(const GetFilterInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFilterInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GetFilterInfoRequest::Swap(GetFilterInfoRequest* other) {
  if (other != this) {
    std::swap(stackidx_, other->stackidx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFilterInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFilterInfoRequest_descriptor_;
  metadata.reflection = GetFilterInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetFilterInfoResponse::kStatusFieldNumber;
const int GetFilterInfoResponse::kStackIdxFieldNumber;
const int GetFilterInfoResponse::kFilterPropertiesFieldNumber;
#endif  // !_MSC_VER

GetFilterInfoResponse::GetFilterInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.GetFilterInfoResponse)
}

void GetFilterInfoResponse::InitAsDefaultInstance() {
  filterproperties_ = const_cast< ::AnselIpc::FilterProperties*>(&::AnselIpc::FilterProperties::default_instance());
}

GetFilterInfoResponse::GetFilterInfoResponse(const GetFilterInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.GetFilterInfoResponse)
}

void GetFilterInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  stackidx_ = 0;
  filterproperties_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetFilterInfoResponse::~GetFilterInfoResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.GetFilterInfoResponse)
  SharedDtor();
}

void GetFilterInfoResponse::SharedDtor() {
  if (this != default_instance_) {
    delete filterproperties_;
  }
}

void GetFilterInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetFilterInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetFilterInfoResponse_descriptor_;
}

const GetFilterInfoResponse& GetFilterInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

GetFilterInfoResponse* GetFilterInfoResponse::default_instance_ = NULL;

GetFilterInfoResponse* GetFilterInfoResponse::New() const {
  return new GetFilterInfoResponse;
}

void GetFilterInfoResponse::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    status_ = 1;
    stackidx_ = 0;
    if (has_filterproperties()) {
      if (filterproperties_ != NULL) filterproperties_->::AnselIpc::FilterProperties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetFilterInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.GetFilterInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filterProperties;
        break;
      }

      // optional .AnselIpc.FilterProperties filterProperties = 3;
      case 3: {
        if (tag == 26) {
         parse_filterProperties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_filterproperties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.GetFilterInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.GetFilterInfoResponse)
  return false;
#undef DO_
}

void GetFilterInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.GetFilterInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->filterproperties(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.GetFilterInfoResponse)
}

::google::protobuf::uint8* GetFilterInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.GetFilterInfoResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  // optional .AnselIpc.FilterProperties filterProperties = 3;
  if (has_filterproperties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->filterproperties(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.GetFilterInfoResponse)
  return target;
}

int GetFilterInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

    // optional .AnselIpc.FilterProperties filterProperties = 3;
    if (has_filterproperties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filterproperties());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void GetFilterInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetFilterInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetFilterInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetFilterInfoResponse::MergeFrom(const GetFilterInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
    if (from.has_filterproperties()) {
      mutable_filterproperties()->::AnselIpc::FilterProperties::MergeFrom(from.filterproperties());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetFilterInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFilterInfoResponse::CopyFrom(const GetFilterInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFilterInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_filterproperties()) {
    if (!this->filterproperties().IsInitialized()) return false;
  }
  return true;
}

void GetFilterInfoResponse::Swap(GetFilterInfoResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(filterproperties_, other->filterproperties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetFilterInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetFilterInfoResponse_descriptor_;
  metadata.reflection = GetFilterInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

IsAnselAvailableRequest::IsAnselAvailableRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselAvailableRequest)
}

void IsAnselAvailableRequest::InitAsDefaultInstance() {
}

IsAnselAvailableRequest::IsAnselAvailableRequest(const IsAnselAvailableRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselAvailableRequest)
}

void IsAnselAvailableRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselAvailableRequest::~IsAnselAvailableRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselAvailableRequest)
  SharedDtor();
}

void IsAnselAvailableRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselAvailableRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselAvailableRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselAvailableRequest_descriptor_;
}

const IsAnselAvailableRequest& IsAnselAvailableRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselAvailableRequest* IsAnselAvailableRequest::default_instance_ = NULL;

IsAnselAvailableRequest* IsAnselAvailableRequest::New() const {
  return new IsAnselAvailableRequest;
}

void IsAnselAvailableRequest::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselAvailableRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselAvailableRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselAvailableRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselAvailableRequest)
  return false;
#undef DO_
}

void IsAnselAvailableRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselAvailableRequest)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselAvailableRequest)
}

::google::protobuf::uint8* IsAnselAvailableRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselAvailableRequest)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselAvailableRequest)
  return target;
}

int IsAnselAvailableRequest::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselAvailableRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselAvailableRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselAvailableRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselAvailableRequest::MergeFrom(const IsAnselAvailableRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselAvailableRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselAvailableRequest::CopyFrom(const IsAnselAvailableRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselAvailableRequest::IsInitialized() const {

  return true;
}

void IsAnselAvailableRequest::Swap(IsAnselAvailableRequest* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselAvailableRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselAvailableRequest_descriptor_;
  metadata.reflection = IsAnselAvailableRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int IsAnselAvailableResponse::kAvailableFieldNumber;
#endif  // !_MSC_VER

IsAnselAvailableResponse::IsAnselAvailableResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.IsAnselAvailableResponse)
}

void IsAnselAvailableResponse::InitAsDefaultInstance() {
}

IsAnselAvailableResponse::IsAnselAvailableResponse(const IsAnselAvailableResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.IsAnselAvailableResponse)
}

void IsAnselAvailableResponse::SharedCtor() {
  _cached_size_ = 0;
  available_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IsAnselAvailableResponse::~IsAnselAvailableResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.IsAnselAvailableResponse)
  SharedDtor();
}

void IsAnselAvailableResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IsAnselAvailableResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsAnselAvailableResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsAnselAvailableResponse_descriptor_;
}

const IsAnselAvailableResponse& IsAnselAvailableResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

IsAnselAvailableResponse* IsAnselAvailableResponse::default_instance_ = NULL;

IsAnselAvailableResponse* IsAnselAvailableResponse::New() const {
  return new IsAnselAvailableResponse;
}

void IsAnselAvailableResponse::Clear() {
  available_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool IsAnselAvailableResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.IsAnselAvailableResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool available = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &available_)));
          set_has_available();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.IsAnselAvailableResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.IsAnselAvailableResponse)
  return false;
#undef DO_
}

void IsAnselAvailableResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.IsAnselAvailableResponse)
  // required bool available = 1;
  if (has_available()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->available(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.IsAnselAvailableResponse)
}

::google::protobuf::uint8* IsAnselAvailableResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.IsAnselAvailableResponse)
  // required bool available = 1;
  if (has_available()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->available(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.IsAnselAvailableResponse)
  return target;
}

int IsAnselAvailableResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool available = 1;
    if (has_available()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void IsAnselAvailableResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const IsAnselAvailableResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const IsAnselAvailableResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IsAnselAvailableResponse::MergeFrom(const IsAnselAvailableResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_available()) {
      set_available(from.available());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void IsAnselAvailableResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsAnselAvailableResponse::CopyFrom(const IsAnselAvailableResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IsAnselAvailableResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void IsAnselAvailableResponse::Swap(IsAnselAvailableResponse* other) {
  if (other != this) {
    std::swap(available_, other->available_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata IsAnselAvailableResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsAnselAvailableResponse_descriptor_;
  metadata.reflection = IsAnselAvailableResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterAttributeRequest::kFilterIdFieldNumber;
const int SetFilterAttributeRequest::kStackIdxFieldNumber;
const int SetFilterAttributeRequest::kControlIdFieldNumber;
const int SetFilterAttributeRequest::kFloatValueFieldNumber;
const int SetFilterAttributeRequest::kBoolValueFieldNumber;
const int SetFilterAttributeRequest::kUintValueFieldNumber;
const int SetFilterAttributeRequest::kIntValueFieldNumber;
#endif  // !_MSC_VER

SetFilterAttributeRequest::SetFilterAttributeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterAttributeRequest)
}

void SetFilterAttributeRequest::InitAsDefaultInstance() {
}

SetFilterAttributeRequest::SetFilterAttributeRequest(const SetFilterAttributeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterAttributeRequest)
}

void SetFilterAttributeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filterid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stackidx_ = 0;
  controlid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterAttributeRequest::~SetFilterAttributeRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterAttributeRequest)
  SharedDtor();
}

void SetFilterAttributeRequest::SharedDtor() {
  if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filterid_;
  }
  if (this != default_instance_) {
  }
}

void SetFilterAttributeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterAttributeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterAttributeRequest_descriptor_;
}

const SetFilterAttributeRequest& SetFilterAttributeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterAttributeRequest* SetFilterAttributeRequest::default_instance_ = NULL;

SetFilterAttributeRequest* SetFilterAttributeRequest::New() const {
  return new SetFilterAttributeRequest;
}

void SetFilterAttributeRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<SetFilterAttributeRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(stackidx_, controlid_);
    if (has_filterid()) {
      if (filterid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filterid_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  floatvalue_.Clear();
  boolvalue_.Clear();
  uintvalue_.Clear();
  intvalue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterAttributeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterAttributeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filterId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filterid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filterid().data(), this->filterid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filterid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_stackIdx;
        break;
      }

      // required int32 stackIdx = 2;
      case 2: {
        if (tag == 16) {
         parse_stackIdx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stackidx_)));
          set_has_stackidx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_controlId;
        break;
      }

      // required int32 controlId = 3;
      case 3: {
        if (tag == 24) {
         parse_controlId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controlid_)));
          set_has_controlid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_floatValue;
        break;
      }

      // repeated float floatValue = 4;
      case 4: {
        if (tag == 37) {
         parse_floatValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 37, input, this->mutable_floatvalue())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floatvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_floatValue;
        if (input->ExpectTag(40)) goto parse_boolValue;
        break;
      }

      // repeated bool boolValue = 5;
      case 5: {
        if (tag == 40) {
         parse_boolValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 40, input, this->mutable_boolvalue())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_boolvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_boolValue;
        if (input->ExpectTag(48)) goto parse_uintValue;
        break;
      }

      // repeated uint32 uintValue = 6;
      case 6: {
        if (tag == 48) {
         parse_uintValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48, input, this->mutable_uintvalue())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uintvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_uintValue;
        if (input->ExpectTag(56)) goto parse_intValue;
        break;
      }

      // repeated int32 intValue = 7;
      case 7: {
        if (tag == 56) {
         parse_intValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_intvalue())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_intvalue())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_intValue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterAttributeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterAttributeRequest)
  return false;
#undef DO_
}

void SetFilterAttributeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterAttributeRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filterid(), output);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stackidx(), output);
  }

  // required int32 controlId = 3;
  if (has_controlid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->controlid(), output);
  }

  // repeated float floatValue = 4;
  for (int i = 0; i < this->floatvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      4, this->floatvalue(i), output);
  }

  // repeated bool boolValue = 5;
  for (int i = 0; i < this->boolvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      5, this->boolvalue(i), output);
  }

  // repeated uint32 uintValue = 6;
  for (int i = 0; i < this->uintvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->uintvalue(i), output);
  }

  // repeated int32 intValue = 7;
  for (int i = 0; i < this->intvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->intvalue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterAttributeRequest)
}

::google::protobuf::uint8* SetFilterAttributeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterAttributeRequest)
  // required string filterId = 1;
  if (has_filterid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filterid().data(), this->filterid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filterid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filterid(), target);
  }

  // required int32 stackIdx = 2;
  if (has_stackidx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stackidx(), target);
  }

  // required int32 controlId = 3;
  if (has_controlid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->controlid(), target);
  }

  // repeated float floatValue = 4;
  for (int i = 0; i < this->floatvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(4, this->floatvalue(i), target);
  }

  // repeated bool boolValue = 5;
  for (int i = 0; i < this->boolvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(5, this->boolvalue(i), target);
  }

  // repeated uint32 uintValue = 6;
  for (int i = 0; i < this->uintvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(6, this->uintvalue(i), target);
  }

  // repeated int32 intValue = 7;
  for (int i = 0; i < this->intvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->intvalue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterAttributeRequest)
  return target;
}

int SetFilterAttributeRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filterId = 1;
    if (has_filterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filterid());
    }

    // required int32 stackIdx = 2;
    if (has_stackidx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stackidx());
    }

    // required int32 controlId = 3;
    if (has_controlid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->controlid());
    }

  }
  // repeated float floatValue = 4;
  {
    int data_size = 0;
    data_size = 4 * this->floatvalue_size();
    total_size += 1 * this->floatvalue_size() + data_size;
  }

  // repeated bool boolValue = 5;
  {
    int data_size = 0;
    data_size = 1 * this->boolvalue_size();
    total_size += 1 * this->boolvalue_size() + data_size;
  }

  // repeated uint32 uintValue = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->uintvalue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->uintvalue(i));
    }
    total_size += 1 * this->uintvalue_size() + data_size;
  }

  // repeated int32 intValue = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->intvalue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->intvalue(i));
    }
    total_size += 1 * this->intvalue_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterAttributeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterAttributeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterAttributeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterAttributeRequest::MergeFrom(const SetFilterAttributeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  floatvalue_.MergeFrom(from.floatvalue_);
  boolvalue_.MergeFrom(from.boolvalue_);
  uintvalue_.MergeFrom(from.uintvalue_);
  intvalue_.MergeFrom(from.intvalue_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filterid()) {
      set_filterid(from.filterid());
    }
    if (from.has_stackidx()) {
      set_stackidx(from.stackidx());
    }
    if (from.has_controlid()) {
      set_controlid(from.controlid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterAttributeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterAttributeRequest::CopyFrom(const SetFilterAttributeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterAttributeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void SetFilterAttributeRequest::Swap(SetFilterAttributeRequest* other) {
  if (other != this) {
    std::swap(filterid_, other->filterid_);
    std::swap(stackidx_, other->stackidx_);
    std::swap(controlid_, other->controlid_);
    floatvalue_.Swap(&other->floatvalue_);
    boolvalue_.Swap(&other->boolvalue_);
    uintvalue_.Swap(&other->uintvalue_);
    intvalue_.Swap(&other->intvalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterAttributeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterAttributeRequest_descriptor_;
  metadata.reflection = SetFilterAttributeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetFilterAttributeResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetFilterAttributeResponse::SetFilterAttributeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetFilterAttributeResponse)
}

void SetFilterAttributeResponse::InitAsDefaultInstance() {
}

SetFilterAttributeResponse::SetFilterAttributeResponse(const SetFilterAttributeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetFilterAttributeResponse)
}

void SetFilterAttributeResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetFilterAttributeResponse::~SetFilterAttributeResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetFilterAttributeResponse)
  SharedDtor();
}

void SetFilterAttributeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetFilterAttributeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetFilterAttributeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetFilterAttributeResponse_descriptor_;
}

const SetFilterAttributeResponse& SetFilterAttributeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetFilterAttributeResponse* SetFilterAttributeResponse::default_instance_ = NULL;

SetFilterAttributeResponse* SetFilterAttributeResponse::New() const {
  return new SetFilterAttributeResponse;
}

void SetFilterAttributeResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetFilterAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetFilterAttributeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetFilterAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetFilterAttributeResponse)
  return false;
#undef DO_
}

void SetFilterAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetFilterAttributeResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetFilterAttributeResponse)
}

::google::protobuf::uint8* SetFilterAttributeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetFilterAttributeResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetFilterAttributeResponse)
  return target;
}

int SetFilterAttributeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetFilterAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetFilterAttributeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetFilterAttributeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetFilterAttributeResponse::MergeFrom(const SetFilterAttributeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetFilterAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetFilterAttributeResponse::CopyFrom(const SetFilterAttributeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetFilterAttributeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetFilterAttributeResponse::Swap(SetFilterAttributeResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetFilterAttributeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetFilterAttributeResponse_descriptor_;
  metadata.reflection = SetFilterAttributeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MouseEventRequest::kAbsoluteXFieldNumber;
const int MouseEventRequest::kAbsoluteYFieldNumber;
const int MouseEventRequest::kDeltaXFieldNumber;
const int MouseEventRequest::kDeltaYFieldNumber;
const int MouseEventRequest::kKeyStateFieldNumber;
#endif  // !_MSC_VER

MouseEventRequest::MouseEventRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.MouseEventRequest)
}

void MouseEventRequest::InitAsDefaultInstance() {
}

MouseEventRequest::MouseEventRequest(const MouseEventRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.MouseEventRequest)
}

void MouseEventRequest::SharedCtor() {
  _cached_size_ = 0;
  absolutex_ = 0;
  absolutey_ = 0;
  deltax_ = 0;
  deltay_ = 0;
  keystate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MouseEventRequest::~MouseEventRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.MouseEventRequest)
  SharedDtor();
}

void MouseEventRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MouseEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MouseEventRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MouseEventRequest_descriptor_;
}

const MouseEventRequest& MouseEventRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

MouseEventRequest* MouseEventRequest::default_instance_ = NULL;

MouseEventRequest* MouseEventRequest::New() const {
  return new MouseEventRequest;
}

void MouseEventRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<MouseEventRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(absolutex_, keystate_);
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MouseEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.MouseEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float absoluteX = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &absolutex_)));
          set_has_absolutex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_absoluteY;
        break;
      }

      // optional float absoluteY = 2;
      case 2: {
        if (tag == 21) {
         parse_absoluteY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &absolutey_)));
          set_has_absolutey();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_deltaX;
        break;
      }

      // optional float deltaX = 3;
      case 3: {
        if (tag == 29) {
         parse_deltaX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deltax_)));
          set_has_deltax();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_deltaY;
        break;
      }

      // optional float deltaY = 4;
      case 4: {
        if (tag == 37) {
         parse_deltaY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deltay_)));
          set_has_deltay();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_keyState;
        break;
      }

      // required int32 keyState = 5;
      case 5: {
        if (tag == 40) {
         parse_keyState:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keystate_)));
          set_has_keystate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.MouseEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.MouseEventRequest)
  return false;
#undef DO_
}

void MouseEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.MouseEventRequest)
  // optional float absoluteX = 1;
  if (has_absolutex()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->absolutex(), output);
  }

  // optional float absoluteY = 2;
  if (has_absolutey()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->absolutey(), output);
  }

  // optional float deltaX = 3;
  if (has_deltax()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->deltax(), output);
  }

  // optional float deltaY = 4;
  if (has_deltay()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->deltay(), output);
  }

  // required int32 keyState = 5;
  if (has_keystate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->keystate(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.MouseEventRequest)
}

::google::protobuf::uint8* MouseEventRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.MouseEventRequest)
  // optional float absoluteX = 1;
  if (has_absolutex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->absolutex(), target);
  }

  // optional float absoluteY = 2;
  if (has_absolutey()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->absolutey(), target);
  }

  // optional float deltaX = 3;
  if (has_deltax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->deltax(), target);
  }

  // optional float deltaY = 4;
  if (has_deltay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->deltay(), target);
  }

  // required int32 keyState = 5;
  if (has_keystate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->keystate(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.MouseEventRequest)
  return target;
}

int MouseEventRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional float absoluteX = 1;
    if (has_absolutex()) {
      total_size += 1 + 4;
    }

    // optional float absoluteY = 2;
    if (has_absolutey()) {
      total_size += 1 + 4;
    }

    // optional float deltaX = 3;
    if (has_deltax()) {
      total_size += 1 + 4;
    }

    // optional float deltaY = 4;
    if (has_deltay()) {
      total_size += 1 + 4;
    }

    // required int32 keyState = 5;
    if (has_keystate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keystate());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void MouseEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MouseEventRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MouseEventRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MouseEventRequest::MergeFrom(const MouseEventRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_absolutex()) {
      set_absolutex(from.absolutex());
    }
    if (from.has_absolutey()) {
      set_absolutey(from.absolutey());
    }
    if (from.has_deltax()) {
      set_deltax(from.deltax());
    }
    if (from.has_deltay()) {
      set_deltay(from.deltay());
    }
    if (from.has_keystate()) {
      set_keystate(from.keystate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MouseEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MouseEventRequest::CopyFrom(const MouseEventRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MouseEventRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;

  return true;
}

void MouseEventRequest::Swap(MouseEventRequest* other) {
  if (other != this) {
    std::swap(absolutex_, other->absolutex_);
    std::swap(absolutey_, other->absolutey_);
    std::swap(deltax_, other->deltax_);
    std::swap(deltay_, other->deltay_);
    std::swap(keystate_, other->keystate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MouseEventRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MouseEventRequest_descriptor_;
  metadata.reflection = MouseEventRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KeyboardEventRequest::kKeyFieldNumber;
const int KeyboardEventRequest::kStateFieldNumber;
#endif  // !_MSC_VER

KeyboardEventRequest::KeyboardEventRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.KeyboardEventRequest)
}

void KeyboardEventRequest::InitAsDefaultInstance() {
}

KeyboardEventRequest::KeyboardEventRequest(const KeyboardEventRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.KeyboardEventRequest)
}

void KeyboardEventRequest::SharedCtor() {
  _cached_size_ = 0;
  key_ = 0;
  state_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KeyboardEventRequest::~KeyboardEventRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.KeyboardEventRequest)
  SharedDtor();
}

void KeyboardEventRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KeyboardEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyboardEventRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeyboardEventRequest_descriptor_;
}

const KeyboardEventRequest& KeyboardEventRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

KeyboardEventRequest* KeyboardEventRequest::default_instance_ = NULL;

KeyboardEventRequest* KeyboardEventRequest::New() const {
  return new KeyboardEventRequest;
}

void KeyboardEventRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    key_ = 0;
    state_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KeyboardEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.KeyboardEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 key = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &key_)));
          set_has_key();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // required .AnselIpc.State state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::State_IsValid(value)) {
            set_state(static_cast< ::AnselIpc::State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.KeyboardEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.KeyboardEventRequest)
  return false;
#undef DO_
}

void KeyboardEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.KeyboardEventRequest)
  // required int32 key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->key(), output);
  }

  // required .AnselIpc.State state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.KeyboardEventRequest)
}

::google::protobuf::uint8* KeyboardEventRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.KeyboardEventRequest)
  // required int32 key = 1;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->key(), target);
  }

  // required .AnselIpc.State state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.KeyboardEventRequest)
  return target;
}

int KeyboardEventRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->key());
    }

    // required .AnselIpc.State state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void KeyboardEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KeyboardEventRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KeyboardEventRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KeyboardEventRequest::MergeFrom(const KeyboardEventRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_key(from.key());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KeyboardEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyboardEventRequest::CopyFrom(const KeyboardEventRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyboardEventRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void KeyboardEventRequest::Swap(KeyboardEventRequest* other) {
  if (other != this) {
    std::swap(key_, other->key_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KeyboardEventRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeyboardEventRequest_descriptor_;
  metadata.reflection = KeyboardEventRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InputEventRequest::kMessageFieldNumber;
const int InputEventRequest::kWParamFieldNumber;
const int InputEventRequest::kLParamFieldNumber;
const int InputEventRequest::kIsDeltaCoordsFieldNumber;
const int InputEventRequest::kLeftStickXValueFieldNumber;
const int InputEventRequest::kLeftStickYValueFieldNumber;
const int InputEventRequest::kRightStickXValueFieldNumber;
const int InputEventRequest::kRightStickYValueFieldNumber;
const int InputEventRequest::kLeftTriggerValueFieldNumber;
const int InputEventRequest::kRightTriggerValueFieldNumber;
#endif  // !_MSC_VER

InputEventRequest::InputEventRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.InputEventRequest)
}

void InputEventRequest::InitAsDefaultInstance() {
}

InputEventRequest::InputEventRequest(const InputEventRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.InputEventRequest)
}

void InputEventRequest::SharedCtor() {
  _cached_size_ = 0;
  message_ = 0;
  wparam_ = 0;
  lparam_ = 0;
  isdeltacoords_ = false;
  leftstickxvalue_ = 0;
  leftstickyvalue_ = 0;
  rightstickxvalue_ = 0;
  rightstickyvalue_ = 0;
  lefttriggervalue_ = 0;
  righttriggervalue_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputEventRequest::~InputEventRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.InputEventRequest)
  SharedDtor();
}

void InputEventRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InputEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputEventRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputEventRequest_descriptor_;
}

const InputEventRequest& InputEventRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

InputEventRequest* InputEventRequest::default_instance_ = NULL;

InputEventRequest* InputEventRequest::New() const {
  return new InputEventRequest;
}

void InputEventRequest::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<InputEventRequest*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(message_, rightstickyvalue_);
  }
  ZR_(lefttriggervalue_, righttriggervalue_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InputEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.InputEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 message = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_)));
          set_has_message();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_wParam;
        break;
      }

      // required int32 wParam = 2;
      case 2: {
        if (tag == 16) {
         parse_wParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wparam_)));
          set_has_wparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_lParam;
        break;
      }

      // required int32 lParam = 3;
      case 3: {
        if (tag == 24) {
         parse_lParam:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lparam_)));
          set_has_lparam();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_isDeltaCoords;
        break;
      }

      // optional bool isDeltaCoords = 4;
      case 4: {
        if (tag == 32) {
         parse_isDeltaCoords:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeltacoords_)));
          set_has_isdeltacoords();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_leftStickXValue;
        break;
      }

      // optional float leftStickXValue = 5;
      case 5: {
        if (tag == 45) {
         parse_leftStickXValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &leftstickxvalue_)));
          set_has_leftstickxvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_leftStickYValue;
        break;
      }

      // optional float leftStickYValue = 6;
      case 6: {
        if (tag == 53) {
         parse_leftStickYValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &leftstickyvalue_)));
          set_has_leftstickyvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_rightStickXValue;
        break;
      }

      // optional float rightStickXValue = 7;
      case 7: {
        if (tag == 61) {
         parse_rightStickXValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rightstickxvalue_)));
          set_has_rightstickxvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_rightStickYValue;
        break;
      }

      // optional float rightStickYValue = 8;
      case 8: {
        if (tag == 69) {
         parse_rightStickYValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rightstickyvalue_)));
          set_has_rightstickyvalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_leftTriggerValue;
        break;
      }

      // optional float leftTriggerValue = 9;
      case 9: {
        if (tag == 77) {
         parse_leftTriggerValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &lefttriggervalue_)));
          set_has_lefttriggervalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_rightTriggerValue;
        break;
      }

      // optional float rightTriggerValue = 10;
      case 10: {
        if (tag == 85) {
         parse_rightTriggerValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &righttriggervalue_)));
          set_has_righttriggervalue();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.InputEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.InputEventRequest)
  return false;
#undef DO_
}

void InputEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.InputEventRequest)
  // required int32 message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->message(), output);
  }

  // required int32 wParam = 2;
  if (has_wparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->wparam(), output);
  }

  // required int32 lParam = 3;
  if (has_lparam()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lparam(), output);
  }

  // optional bool isDeltaCoords = 4;
  if (has_isdeltacoords()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isdeltacoords(), output);
  }

  // optional float leftStickXValue = 5;
  if (has_leftstickxvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->leftstickxvalue(), output);
  }

  // optional float leftStickYValue = 6;
  if (has_leftstickyvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->leftstickyvalue(), output);
  }

  // optional float rightStickXValue = 7;
  if (has_rightstickxvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->rightstickxvalue(), output);
  }

  // optional float rightStickYValue = 8;
  if (has_rightstickyvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rightstickyvalue(), output);
  }

  // optional float leftTriggerValue = 9;
  if (has_lefttriggervalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->lefttriggervalue(), output);
  }

  // optional float rightTriggerValue = 10;
  if (has_righttriggervalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->righttriggervalue(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.InputEventRequest)
}

::google::protobuf::uint8* InputEventRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.InputEventRequest)
  // required int32 message = 1;
  if (has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->message(), target);
  }

  // required int32 wParam = 2;
  if (has_wparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->wparam(), target);
  }

  // required int32 lParam = 3;
  if (has_lparam()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lparam(), target);
  }

  // optional bool isDeltaCoords = 4;
  if (has_isdeltacoords()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isdeltacoords(), target);
  }

  // optional float leftStickXValue = 5;
  if (has_leftstickxvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->leftstickxvalue(), target);
  }

  // optional float leftStickYValue = 6;
  if (has_leftstickyvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->leftstickyvalue(), target);
  }

  // optional float rightStickXValue = 7;
  if (has_rightstickxvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->rightstickxvalue(), target);
  }

  // optional float rightStickYValue = 8;
  if (has_rightstickyvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rightstickyvalue(), target);
  }

  // optional float leftTriggerValue = 9;
  if (has_lefttriggervalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->lefttriggervalue(), target);
  }

  // optional float rightTriggerValue = 10;
  if (has_righttriggervalue()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->righttriggervalue(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.InputEventRequest)
  return target;
}

int InputEventRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->message());
    }

    // required int32 wParam = 2;
    if (has_wparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wparam());
    }

    // required int32 lParam = 3;
    if (has_lparam()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lparam());
    }

    // optional bool isDeltaCoords = 4;
    if (has_isdeltacoords()) {
      total_size += 1 + 1;
    }

    // optional float leftStickXValue = 5;
    if (has_leftstickxvalue()) {
      total_size += 1 + 4;
    }

    // optional float leftStickYValue = 6;
    if (has_leftstickyvalue()) {
      total_size += 1 + 4;
    }

    // optional float rightStickXValue = 7;
    if (has_rightstickxvalue()) {
      total_size += 1 + 4;
    }

    // optional float rightStickYValue = 8;
    if (has_rightstickyvalue()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional float leftTriggerValue = 9;
    if (has_lefttriggervalue()) {
      total_size += 1 + 4;
    }

    // optional float rightTriggerValue = 10;
    if (has_righttriggervalue()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void InputEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InputEventRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InputEventRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InputEventRequest::MergeFrom(const InputEventRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_message(from.message());
    }
    if (from.has_wparam()) {
      set_wparam(from.wparam());
    }
    if (from.has_lparam()) {
      set_lparam(from.lparam());
    }
    if (from.has_isdeltacoords()) {
      set_isdeltacoords(from.isdeltacoords());
    }
    if (from.has_leftstickxvalue()) {
      set_leftstickxvalue(from.leftstickxvalue());
    }
    if (from.has_leftstickyvalue()) {
      set_leftstickyvalue(from.leftstickyvalue());
    }
    if (from.has_rightstickxvalue()) {
      set_rightstickxvalue(from.rightstickxvalue());
    }
    if (from.has_rightstickyvalue()) {
      set_rightstickyvalue(from.rightstickyvalue());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_lefttriggervalue()) {
      set_lefttriggervalue(from.lefttriggervalue());
    }
    if (from.has_righttriggervalue()) {
      set_righttriggervalue(from.righttriggervalue());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InputEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputEventRequest::CopyFrom(const InputEventRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputEventRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void InputEventRequest::Swap(InputEventRequest* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(wparam_, other->wparam_);
    std::swap(lparam_, other->lparam_);
    std::swap(isdeltacoords_, other->isdeltacoords_);
    std::swap(leftstickxvalue_, other->leftstickxvalue_);
    std::swap(leftstickyvalue_, other->leftstickyvalue_);
    std::swap(rightstickxvalue_, other->rightstickxvalue_);
    std::swap(rightstickyvalue_, other->rightstickyvalue_);
    std::swap(lefttriggervalue_, other->lefttriggervalue_);
    std::swap(righttriggervalue_, other->righttriggervalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InputEventRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputEventRequest_descriptor_;
  metadata.reflection = InputEventRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InputEventResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

InputEventResponse::InputEventResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.InputEventResponse)
}

void InputEventResponse::InitAsDefaultInstance() {
}

InputEventResponse::InputEventResponse(const InputEventResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.InputEventResponse)
}

void InputEventResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InputEventResponse::~InputEventResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.InputEventResponse)
  SharedDtor();
}

void InputEventResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InputEventResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InputEventResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InputEventResponse_descriptor_;
}

const InputEventResponse& InputEventResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

InputEventResponse* InputEventResponse::default_instance_ = NULL;

InputEventResponse* InputEventResponse::New() const {
  return new InputEventResponse;
}

void InputEventResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InputEventResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.InputEventResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.InputEventResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.InputEventResponse)
  return false;
#undef DO_
}

void InputEventResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.InputEventResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.InputEventResponse)
}

::google::protobuf::uint8* InputEventResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.InputEventResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.InputEventResponse)
  return target;
}

int InputEventResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void InputEventResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InputEventResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InputEventResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InputEventResponse::MergeFrom(const InputEventResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InputEventResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputEventResponse::CopyFrom(const InputEventResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputEventResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InputEventResponse::Swap(InputEventResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InputEventResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InputEventResponse_descriptor_;
  metadata.reflection = InputEventResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MultipleInputEventRequest::kInputEventsFieldNumber;
#endif  // !_MSC_VER

MultipleInputEventRequest::MultipleInputEventRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.MultipleInputEventRequest)
}

void MultipleInputEventRequest::InitAsDefaultInstance() {
}

MultipleInputEventRequest::MultipleInputEventRequest(const MultipleInputEventRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.MultipleInputEventRequest)
}

void MultipleInputEventRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MultipleInputEventRequest::~MultipleInputEventRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.MultipleInputEventRequest)
  SharedDtor();
}

void MultipleInputEventRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MultipleInputEventRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultipleInputEventRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MultipleInputEventRequest_descriptor_;
}

const MultipleInputEventRequest& MultipleInputEventRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

MultipleInputEventRequest* MultipleInputEventRequest::default_instance_ = NULL;

MultipleInputEventRequest* MultipleInputEventRequest::New() const {
  return new MultipleInputEventRequest;
}

void MultipleInputEventRequest::Clear() {
  inputevents_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MultipleInputEventRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.MultipleInputEventRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AnselIpc.InputEventRequest inputEvents = 1;
      case 1: {
        if (tag == 10) {
         parse_inputEvents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputevents()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_inputEvents;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.MultipleInputEventRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.MultipleInputEventRequest)
  return false;
#undef DO_
}

void MultipleInputEventRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.MultipleInputEventRequest)
  // repeated .AnselIpc.InputEventRequest inputEvents = 1;
  for (int i = 0; i < this->inputevents_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inputevents(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.MultipleInputEventRequest)
}

::google::protobuf::uint8* MultipleInputEventRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.MultipleInputEventRequest)
  // repeated .AnselIpc.InputEventRequest inputEvents = 1;
  for (int i = 0; i < this->inputevents_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inputevents(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.MultipleInputEventRequest)
  return target;
}

int MultipleInputEventRequest::ByteSize() const {
  int total_size = 0;

  // repeated .AnselIpc.InputEventRequest inputEvents = 1;
  total_size += 1 * this->inputevents_size();
  for (int i = 0; i < this->inputevents_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputevents(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void MultipleInputEventRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MultipleInputEventRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MultipleInputEventRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MultipleInputEventRequest::MergeFrom(const MultipleInputEventRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputevents_.MergeFrom(from.inputevents_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MultipleInputEventRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultipleInputEventRequest::CopyFrom(const MultipleInputEventRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultipleInputEventRequest::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->inputevents())) return false;
  return true;
}

void MultipleInputEventRequest::Swap(MultipleInputEventRequest* other) {
  if (other != this) {
    inputevents_.Swap(&other->inputevents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MultipleInputEventRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MultipleInputEventRequest_descriptor_;
  metadata.reflection = MultipleInputEventRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LogFilenameResponse::kFilenameFieldNumber;
#endif  // !_MSC_VER

LogFilenameResponse::LogFilenameResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.LogFilenameResponse)
}

void LogFilenameResponse::InitAsDefaultInstance() {
}

LogFilenameResponse::LogFilenameResponse(const LogFilenameResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.LogFilenameResponse)
}

void LogFilenameResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogFilenameResponse::~LogFilenameResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.LogFilenameResponse)
  SharedDtor();
}

void LogFilenameResponse::SharedDtor() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (this != default_instance_) {
  }
}

void LogFilenameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogFilenameResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogFilenameResponse_descriptor_;
}

const LogFilenameResponse& LogFilenameResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

LogFilenameResponse* LogFilenameResponse::default_instance_ = NULL;

LogFilenameResponse* LogFilenameResponse::New() const {
  return new LogFilenameResponse;
}

void LogFilenameResponse::Clear() {
  if (has_filename()) {
    if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      filename_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LogFilenameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.LogFilenameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filename = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.LogFilenameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.LogFilenameResponse)
  return false;
#undef DO_
}

void LogFilenameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.LogFilenameResponse)
  // required string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.LogFilenameResponse)
}

::google::protobuf::uint8* LogFilenameResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.LogFilenameResponse)
  // required string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.LogFilenameResponse)
  return target;
}

int LogFilenameResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void LogFilenameResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LogFilenameResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogFilenameResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogFilenameResponse::MergeFrom(const LogFilenameResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filename()) {
      set_filename(from.filename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LogFilenameResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogFilenameResponse::CopyFrom(const LogFilenameResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogFilenameResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LogFilenameResponse::Swap(LogFilenameResponse* other) {
  if (other != this) {
    std::swap(filename_, other->filename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LogFilenameResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogFilenameResponse_descriptor_;
  metadata.reflection = LogFilenameResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReportErrorResponse::kTypeFieldNumber;
const int ReportErrorResponse::kCodeFieldNumber;
const int ReportErrorResponse::kFilenameFieldNumber;
const int ReportErrorResponse::kLineFieldNumber;
const int ReportErrorResponse::kReasonFieldNumber;
#endif  // !_MSC_VER

ReportErrorResponse::ReportErrorResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.ReportErrorResponse)
}

void ReportErrorResponse::InitAsDefaultInstance() {
}

ReportErrorResponse::ReportErrorResponse(const ReportErrorResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.ReportErrorResponse)
}

void ReportErrorResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1;
  code_ = 0u;
  filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line_ = 0u;
  reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReportErrorResponse::~ReportErrorResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.ReportErrorResponse)
  SharedDtor();
}

void ReportErrorResponse::SharedDtor() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (this != default_instance_) {
  }
}

void ReportErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportErrorResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportErrorResponse_descriptor_;
}

const ReportErrorResponse& ReportErrorResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

ReportErrorResponse* ReportErrorResponse::default_instance_ = NULL;

ReportErrorResponse* ReportErrorResponse::New() const {
  return new ReportErrorResponse;
}

void ReportErrorResponse::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    type_ = 1;
    code_ = 0u;
    if (has_filename()) {
      if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filename_->clear();
      }
    }
    line_ = 0u;
    if (has_reason()) {
      if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        reason_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReportErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.ReportErrorResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.ErrorType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::ErrorType_IsValid(value)) {
            set_type(static_cast< ::AnselIpc::ErrorType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_code;
        break;
      }

      // required uint32 code = 2;
      case 2: {
        if (tag == 16) {
         parse_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
          set_has_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_filename;
        break;
      }

      // required string filename = 3;
      case 3: {
        if (tag == 26) {
         parse_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_line;
        break;
      }

      // required uint32 line = 4;
      case 4: {
        if (tag == 32) {
         parse_line:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &line_)));
          set_has_line();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_reason;
        break;
      }

      // required string reason = 5;
      case 5: {
        if (tag == 42) {
         parse_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "reason");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.ReportErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.ReportErrorResponse)
  return false;
#undef DO_
}

void ReportErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.ReportErrorResponse)
  // required .AnselIpc.ErrorType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required uint32 code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->code(), output);
  }

  // required string filename = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // required uint32 line = 4;
  if (has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->line(), output);
  }

  // required string reason = 5;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->reason(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.ReportErrorResponse)
}

::google::protobuf::uint8* ReportErrorResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.ReportErrorResponse)
  // required .AnselIpc.ErrorType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required uint32 code = 2;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->code(), target);
  }

  // required string filename = 3;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // required uint32 line = 4;
  if (has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->line(), target);
  }

  // required string reason = 5;
  if (has_reason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->reason(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.ReportErrorResponse)
  return target;
}

int ReportErrorResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.ErrorType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required uint32 code = 2;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->code());
    }

    // required string filename = 3;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // required uint32 line = 4;
    if (has_line()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->line());
    }

    // required string reason = 5;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reason());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void ReportErrorResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReportErrorResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReportErrorResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReportErrorResponse::MergeFrom(const ReportErrorResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_filename()) {
      set_filename(from.filename());
    }
    if (from.has_line()) {
      set_line(from.line());
    }
    if (from.has_reason()) {
      set_reason(from.reason());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReportErrorResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportErrorResponse::CopyFrom(const ReportErrorResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void ReportErrorResponse::Swap(ReportErrorResponse* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(code_, other->code_);
    std::swap(filename_, other->filename_);
    std::swap(line_, other->line_);
    std::swap(reason_, other->reason_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReportErrorResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportErrorResponse_descriptor_;
  metadata.reflection = ReportErrorResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetHighQualityRequest::kSettingFieldNumber;
#endif  // !_MSC_VER

SetHighQualityRequest::SetHighQualityRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetHighQualityRequest)
}

void SetHighQualityRequest::InitAsDefaultInstance() {
}

SetHighQualityRequest::SetHighQualityRequest(const SetHighQualityRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetHighQualityRequest)
}

void SetHighQualityRequest::SharedCtor() {
  _cached_size_ = 0;
  setting_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetHighQualityRequest::~SetHighQualityRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetHighQualityRequest)
  SharedDtor();
}

void SetHighQualityRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetHighQualityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetHighQualityRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetHighQualityRequest_descriptor_;
}

const SetHighQualityRequest& SetHighQualityRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetHighQualityRequest* SetHighQualityRequest::default_instance_ = NULL;

SetHighQualityRequest* SetHighQualityRequest::New() const {
  return new SetHighQualityRequest;
}

void SetHighQualityRequest::Clear() {
  setting_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetHighQualityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetHighQualityRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool setting = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &setting_)));
          set_has_setting();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetHighQualityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetHighQualityRequest)
  return false;
#undef DO_
}

void SetHighQualityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetHighQualityRequest)
  // required bool setting = 1;
  if (has_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->setting(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetHighQualityRequest)
}

::google::protobuf::uint8* SetHighQualityRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetHighQualityRequest)
  // required bool setting = 1;
  if (has_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->setting(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetHighQualityRequest)
  return target;
}

int SetHighQualityRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool setting = 1;
    if (has_setting()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetHighQualityRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetHighQualityRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetHighQualityRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetHighQualityRequest::MergeFrom(const SetHighQualityRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_setting()) {
      set_setting(from.setting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetHighQualityRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetHighQualityRequest::CopyFrom(const SetHighQualityRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetHighQualityRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetHighQualityRequest::Swap(SetHighQualityRequest* other) {
  if (other != this) {
    std::swap(setting_, other->setting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetHighQualityRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetHighQualityRequest_descriptor_;
  metadata.reflection = SetHighQualityRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetHighQualityResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SetHighQualityResponse::SetHighQualityResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.SetHighQualityResponse)
}

void SetHighQualityResponse::InitAsDefaultInstance() {
}

SetHighQualityResponse::SetHighQualityResponse(const SetHighQualityResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.SetHighQualityResponse)
}

void SetHighQualityResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetHighQualityResponse::~SetHighQualityResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.SetHighQualityResponse)
  SharedDtor();
}

void SetHighQualityResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetHighQualityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetHighQualityResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetHighQualityResponse_descriptor_;
}

const SetHighQualityResponse& SetHighQualityResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

SetHighQualityResponse* SetHighQualityResponse::default_instance_ = NULL;

SetHighQualityResponse* SetHighQualityResponse::New() const {
  return new SetHighQualityResponse;
}

void SetHighQualityResponse::Clear() {
  status_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetHighQualityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.SetHighQualityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .AnselIpc.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::AnselIpc::Status_IsValid(value)) {
            set_status(static_cast< ::AnselIpc::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.SetHighQualityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.SetHighQualityResponse)
  return false;
#undef DO_
}

void SetHighQualityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.SetHighQualityResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.SetHighQualityResponse)
}

::google::protobuf::uint8* SetHighQualityResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.SetHighQualityResponse)
  // required .AnselIpc.Status status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.SetHighQualityResponse)
  return target;
}

int SetHighQualityResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .AnselIpc.Status status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void SetHighQualityResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetHighQualityResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetHighQualityResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetHighQualityResponse::MergeFrom(const SetHighQualityResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetHighQualityResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetHighQualityResponse::CopyFrom(const SetHighQualityResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetHighQualityResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetHighQualityResponse::Swap(SetHighQualityResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetHighQualityResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetHighQualityResponse_descriptor_;
  metadata.reflection = SetHighQualityResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselIPCRequest::kSetAnselEnabledRequestFieldNumber;
const int AnselIPCRequest::kCaptureShotRequestFieldNumber;
const int AnselIPCRequest::kGetFilterListRequestFieldNumber;
const int AnselIPCRequest::kGetHighresResolutionListRequestFieldNumber;
const int AnselIPCRequest::kAbortCaptureRequestFieldNumber;
const int AnselIPCRequest::kGet360ResolutionRangeRequestFieldNumber;
const int AnselIPCRequest::kGetFOVRangeRequestFieldNumber;
const int AnselIPCRequest::kSetFOVRequestFieldNumber;
const int AnselIPCRequest::kGetRollRangeRequestFieldNumber;
const int AnselIPCRequest::kSetRollRequestFieldNumber;
const int AnselIPCRequest::kGetAnselEnabledRequestFieldNumber;
const int AnselIPCRequest::kGetLwrrentFOVRequestFieldNumber;
const int AnselIPCRequest::kSetFilterRequestFieldNumber;
const int AnselIPCRequest::kSetFilterAttributeRequestFieldNumber;
const int AnselIPCRequest::kIsAnselAvailableRequestFieldNumber;
const int AnselIPCRequest::kScreenResolutionChangedRequestFieldNumber;
const int AnselIPCRequest::kGetAnselShotPermissionsRequestFieldNumber;
const int AnselIPCRequest::kInputEventRequestFieldNumber;
const int AnselIPCRequest::kSetLangIdRequestFieldNumber;
const int AnselIPCRequest::kGetFilterInfoRequestFieldNumber;
const int AnselIPCRequest::kResetFilterValuesRequestFieldNumber;
const int AnselIPCRequest::kResetAllFilterValuesRequestFieldNumber;
const int AnselIPCRequest::kIsAnselSDKIntegrationAvailableRequestFieldNumber;
const int AnselIPCRequest::kIpcVersionRequestFieldNumber;
const int AnselIPCRequest::kAddUIElementRequestFieldNumber;
const int AnselIPCRequest::kUiReadyRequestFieldNumber;
const int AnselIPCRequest::kUiControlChangedRequestFieldNumber;
const int AnselIPCRequest::kUiControlRemoveRequestFieldNumber;
const int AnselIPCRequest::kUiControlSetVisibilityRequestFieldNumber;
const int AnselIPCRequest::kUiControlGetVisibilityRequestFieldNumber;
const int AnselIPCRequest::kGetProcessInfoRequestFieldNumber;
const int AnselIPCRequest::kGetScreenResolutionRequestFieldNumber;
const int AnselIPCRequest::kIsAnselModdingAvailableRequestFieldNumber;
const int AnselIPCRequest::kSetGridOfThirdsEnabledRequestFieldNumber;
const int AnselIPCRequest::kResetEntireStackRequestFieldNumber;
const int AnselIPCRequest::kGetFeatureSetRequestFieldNumber;
const int AnselIPCRequest::kSetStyleTransferEnabledRequestFieldNumber;
const int AnselIPCRequest::kSetStyleTransferStyleRequestFieldNumber;
const int AnselIPCRequest::kGetStyleTransferModelListRequestFieldNumber;
const int AnselIPCRequest::kSetStyleTransferModelRequestFieldNumber;
const int AnselIPCRequest::kStyleTransferStatusRequestFieldNumber;
const int AnselIPCRequest::kInsertFilterRequestFieldNumber;
const int AnselIPCRequest::kRemoveFilterRequestFieldNumber;
const int AnselIPCRequest::kMoveFilterRequestFieldNumber;
const int AnselIPCRequest::kGetStackInfoRequestFieldNumber;
const int AnselIPCRequest::kEstimateCaptureRequestFieldNumber;
const int AnselIPCRequest::kUiControlRemoveAllRequestFieldNumber;
const int AnselIPCRequest::kGetSettingsRequestFieldNumber;
const int AnselIPCRequest::kAnselStatusReportRequestFieldNumber;
const int AnselIPCRequest::kStyleTransferSideloadChoiceRequestFieldNumber;
const int AnselIPCRequest::kStyleTransferSideloadProgressRequestFieldNumber;
const int AnselIPCRequest::kUpdateRollRequestFieldNumber;
const int AnselIPCRequest::kGetGameSpecificControlsRequestFieldNumber;
const int AnselIPCRequest::kGetEnabledFeatureSetRequestFieldNumber;
const int AnselIPCRequest::kUpdateFovRequestFieldNumber;
const int AnselIPCRequest::kAnselReadyRequestFieldNumber;
const int AnselIPCRequest::kSetHighQualityRequestFieldNumber;
const int AnselIPCRequest::kSetFilterAndAttributesRequestFieldNumber;
const int AnselIPCRequest::kSetCMSInfoRequestFieldNumber;
const int AnselIPCRequest::kMultipleInputEventRequestFieldNumber;
#endif  // !_MSC_VER

AnselIPCRequest::AnselIPCRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselIPCRequest)
}

void AnselIPCRequest::InitAsDefaultInstance() {
  AnselIPCRequest_default_oneof_instance_->setanselenabledrequest_ = const_cast< ::AnselIpc::SetAnselEnabledRequest*>(&::AnselIpc::SetAnselEnabledRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->captureshotrequest_ = const_cast< ::AnselIpc::CaptureShotRequest*>(&::AnselIpc::CaptureShotRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getfilterlistrequest_ = const_cast< ::AnselIpc::GetFilterListRequest*>(&::AnselIpc::GetFilterListRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->gethighresresolutionlistrequest_ = const_cast< ::AnselIpc::GetHighresResolutionListRequest*>(&::AnselIpc::GetHighresResolutionListRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->abortcapturerequest_ = const_cast< ::AnselIpc::AbortCaptureRequest*>(&::AnselIpc::AbortCaptureRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->get360resolutionrangerequest_ = const_cast< ::AnselIpc::Get360ResolutionRangeRequest*>(&::AnselIpc::Get360ResolutionRangeRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getfovrangerequest_ = const_cast< ::AnselIpc::GetFOVRangeRequest*>(&::AnselIpc::GetFOVRangeRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setfovrequest_ = const_cast< ::AnselIpc::SetFOVRequest*>(&::AnselIpc::SetFOVRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getrollrangerequest_ = const_cast< ::AnselIpc::GetRollRangeRequest*>(&::AnselIpc::GetRollRangeRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setrollrequest_ = const_cast< ::AnselIpc::SetRollRequest*>(&::AnselIpc::SetRollRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getanselenabledrequest_ = const_cast< ::AnselIpc::GetAnselEnabledRequest*>(&::AnselIpc::GetAnselEnabledRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getlwrrentfovrequest_ = const_cast< ::AnselIpc::GetLwrrentFOVRequest*>(&::AnselIpc::GetLwrrentFOVRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setfilterrequest_ = const_cast< ::AnselIpc::SetFilterRequest*>(&::AnselIpc::SetFilterRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setfilterattributerequest_ = const_cast< ::AnselIpc::SetFilterAttributeRequest*>(&::AnselIpc::SetFilterAttributeRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->isanselavailablerequest_ = const_cast< ::AnselIpc::IsAnselAvailableRequest*>(&::AnselIpc::IsAnselAvailableRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->screenresolutionchangedrequest_ = const_cast< ::AnselIpc::ScreenResolutionChangedRequest*>(&::AnselIpc::ScreenResolutionChangedRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getanselshotpermissionsrequest_ = const_cast< ::AnselIpc::GetAnselShotPermissionsRequest*>(&::AnselIpc::GetAnselShotPermissionsRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->inputeventrequest_ = const_cast< ::AnselIpc::InputEventRequest*>(&::AnselIpc::InputEventRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setlangidrequest_ = const_cast< ::AnselIpc::SetLangIdRequest*>(&::AnselIpc::SetLangIdRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getfilterinforequest_ = const_cast< ::AnselIpc::GetFilterInfoRequest*>(&::AnselIpc::GetFilterInfoRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->resetfiltervaluesrequest_ = const_cast< ::AnselIpc::ResetFilterValuesRequest*>(&::AnselIpc::ResetFilterValuesRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->resetallfiltervaluesrequest_ = const_cast< ::AnselIpc::ResetAllFilterValuesRequest*>(&::AnselIpc::ResetAllFilterValuesRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->isanselsdkintegrationavailablerequest_ = const_cast< ::AnselIpc::IsAnselSDKIntegrationAvailableRequest*>(&::AnselIpc::IsAnselSDKIntegrationAvailableRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->ipcversionrequest_ = const_cast< ::AnselIpc::IpcVersionRequest*>(&::AnselIpc::IpcVersionRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->adduielementrequest_ = const_cast< ::AnselIpc::AddUIElementRequest*>(&::AnselIpc::AddUIElementRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uireadyrequest_ = const_cast< ::AnselIpc::UIReadyRequest*>(&::AnselIpc::UIReadyRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uicontrolchangedrequest_ = const_cast< ::AnselIpc::UIControlChangedRequest*>(&::AnselIpc::UIControlChangedRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uicontrolremoverequest_ = const_cast< ::AnselIpc::UIControlRemoveRequest*>(&::AnselIpc::UIControlRemoveRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uicontrolsetvisibilityrequest_ = const_cast< ::AnselIpc::UIControlSetVisibilityRequest*>(&::AnselIpc::UIControlSetVisibilityRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uicontrolgetvisibilityrequest_ = const_cast< ::AnselIpc::UIControlGetVisibilityRequest*>(&::AnselIpc::UIControlGetVisibilityRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getprocessinforequest_ = const_cast< ::AnselIpc::GetProcessInfoRequest*>(&::AnselIpc::GetProcessInfoRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getscreenresolutionrequest_ = const_cast< ::AnselIpc::GetScreenResolutionRequest*>(&::AnselIpc::GetScreenResolutionRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->isanselmoddingavailablerequest_ = const_cast< ::AnselIpc::IsAnselModdingAvailableRequest*>(&::AnselIpc::IsAnselModdingAvailableRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setgridofthirdsenabledrequest_ = const_cast< ::AnselIpc::SetGridOfThirdsEnabledRequest*>(&::AnselIpc::SetGridOfThirdsEnabledRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->resetentirestackrequest_ = const_cast< ::AnselIpc::ResetEntireStackRequest*>(&::AnselIpc::ResetEntireStackRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getfeaturesetrequest_ = const_cast< ::AnselIpc::GetFeatureSetRequest*>(&::AnselIpc::GetFeatureSetRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setstyletransferenabledrequest_ = const_cast< ::AnselIpc::SetStyleTransferEnabledRequest*>(&::AnselIpc::SetStyleTransferEnabledRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setstyletransferstylerequest_ = const_cast< ::AnselIpc::SetStyleTransferStyleRequest*>(&::AnselIpc::SetStyleTransferStyleRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getstyletransfermodellistrequest_ = const_cast< ::AnselIpc::GetStyleTransferModelListRequest*>(&::AnselIpc::GetStyleTransferModelListRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setstyletransfermodelrequest_ = const_cast< ::AnselIpc::SetStyleTransferModelRequest*>(&::AnselIpc::SetStyleTransferModelRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->styletransferstatusrequest_ = const_cast< ::AnselIpc::StyleTransferStatusRequest*>(&::AnselIpc::StyleTransferStatusRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->insertfilterrequest_ = const_cast< ::AnselIpc::InsertFilterRequest*>(&::AnselIpc::InsertFilterRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->removefilterrequest_ = const_cast< ::AnselIpc::RemoveFilterRequest*>(&::AnselIpc::RemoveFilterRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->movefilterrequest_ = const_cast< ::AnselIpc::MoveFilterRequest*>(&::AnselIpc::MoveFilterRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getstackinforequest_ = const_cast< ::AnselIpc::GetStackInfoRequest*>(&::AnselIpc::GetStackInfoRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->estimatecapturerequest_ = const_cast< ::AnselIpc::EstimateCaptureRequest*>(&::AnselIpc::EstimateCaptureRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->uicontrolremoveallrequest_ = const_cast< ::AnselIpc::UIControlRemoveAllRequest*>(&::AnselIpc::UIControlRemoveAllRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getsettingsrequest_ = const_cast< ::AnselIpc::GetSettingsRequest*>(&::AnselIpc::GetSettingsRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->anselstatusreportrequest_ = const_cast< ::AnselIpc::AnselStatusReportRequest*>(&::AnselIpc::AnselStatusReportRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->styletransfersideloadchoicerequest_ = const_cast< ::AnselIpc::StyleTransferSideloadChoiceRequest*>(&::AnselIpc::StyleTransferSideloadChoiceRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->styletransfersideloadprogressrequest_ = const_cast< ::AnselIpc::StyleTransferSideloadProgressRequest*>(&::AnselIpc::StyleTransferSideloadProgressRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->updaterollrequest_ = const_cast< ::AnselIpc::UpdateRollRequest*>(&::AnselIpc::UpdateRollRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getgamespecificcontrolsrequest_ = const_cast< ::AnselIpc::GetGameSpecificControlsRequest*>(&::AnselIpc::GetGameSpecificControlsRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->getenabledfeaturesetrequest_ = const_cast< ::AnselIpc::GetEnabledFeatureSetRequest*>(&::AnselIpc::GetEnabledFeatureSetRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->updatefovrequest_ = const_cast< ::AnselIpc::UpdateFovRequest*>(&::AnselIpc::UpdateFovRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->anselreadyrequest_ = const_cast< ::AnselIpc::AnselReadyRequest*>(&::AnselIpc::AnselReadyRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->sethighqualityrequest_ = const_cast< ::AnselIpc::SetHighQualityRequest*>(&::AnselIpc::SetHighQualityRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setfilterandattributesrequest_ = const_cast< ::AnselIpc::SetFilterAndAttributesRequest*>(&::AnselIpc::SetFilterAndAttributesRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->setcmsinforequest_ = const_cast< ::AnselIpc::SetCMSInfoRequest*>(&::AnselIpc::SetCMSInfoRequest::default_instance());
  AnselIPCRequest_default_oneof_instance_->multipleinputeventrequest_ = const_cast< ::AnselIpc::MultipleInputEventRequest*>(&::AnselIpc::MultipleInputEventRequest::default_instance());
}

AnselIPCRequest::AnselIPCRequest(const AnselIPCRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselIPCRequest)
}

void AnselIPCRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_request();
}

AnselIPCRequest::~AnselIPCRequest() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselIPCRequest)
  SharedDtor();
}

void AnselIPCRequest::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
  if (this != default_instance_) {
  }
}

void AnselIPCRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselIPCRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselIPCRequest_descriptor_;
}

const AnselIPCRequest& AnselIPCRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselIPCRequest* AnselIPCRequest::default_instance_ = NULL;

AnselIPCRequest* AnselIPCRequest::New() const {
  return new AnselIPCRequest;
}

void AnselIPCRequest::clear_request() {
  switch(request_case()) {
    case kSetAnselEnabledRequest: {
      delete request_.setanselenabledrequest_;
      break;
    }
    case kCaptureShotRequest: {
      delete request_.captureshotrequest_;
      break;
    }
    case kGetFilterListRequest: {
      delete request_.getfilterlistrequest_;
      break;
    }
    case kGetHighresResolutionListRequest: {
      delete request_.gethighresresolutionlistrequest_;
      break;
    }
    case kAbortCaptureRequest: {
      delete request_.abortcapturerequest_;
      break;
    }
    case kGet360ResolutionRangeRequest: {
      delete request_.get360resolutionrangerequest_;
      break;
    }
    case kGetFOVRangeRequest: {
      delete request_.getfovrangerequest_;
      break;
    }
    case kSetFOVRequest: {
      delete request_.setfovrequest_;
      break;
    }
    case kGetRollRangeRequest: {
      delete request_.getrollrangerequest_;
      break;
    }
    case kSetRollRequest: {
      delete request_.setrollrequest_;
      break;
    }
    case kGetAnselEnabledRequest: {
      delete request_.getanselenabledrequest_;
      break;
    }
    case kGetLwrrentFOVRequest: {
      delete request_.getlwrrentfovrequest_;
      break;
    }
    case kSetFilterRequest: {
      delete request_.setfilterrequest_;
      break;
    }
    case kSetFilterAttributeRequest: {
      delete request_.setfilterattributerequest_;
      break;
    }
    case kIsAnselAvailableRequest: {
      delete request_.isanselavailablerequest_;
      break;
    }
    case kScreenResolutionChangedRequest: {
      delete request_.screenresolutionchangedrequest_;
      break;
    }
    case kGetAnselShotPermissionsRequest: {
      delete request_.getanselshotpermissionsrequest_;
      break;
    }
    case kInputEventRequest: {
      delete request_.inputeventrequest_;
      break;
    }
    case kSetLangIdRequest: {
      delete request_.setlangidrequest_;
      break;
    }
    case kGetFilterInfoRequest: {
      delete request_.getfilterinforequest_;
      break;
    }
    case kResetFilterValuesRequest: {
      delete request_.resetfiltervaluesrequest_;
      break;
    }
    case kResetAllFilterValuesRequest: {
      delete request_.resetallfiltervaluesrequest_;
      break;
    }
    case kIsAnselSDKIntegrationAvailableRequest: {
      delete request_.isanselsdkintegrationavailablerequest_;
      break;
    }
    case kIpcVersionRequest: {
      delete request_.ipcversionrequest_;
      break;
    }
    case kAddUIElementRequest: {
      delete request_.adduielementrequest_;
      break;
    }
    case kUiReadyRequest: {
      delete request_.uireadyrequest_;
      break;
    }
    case kUiControlChangedRequest: {
      delete request_.uicontrolchangedrequest_;
      break;
    }
    case kUiControlRemoveRequest: {
      delete request_.uicontrolremoverequest_;
      break;
    }
    case kUiControlSetVisibilityRequest: {
      delete request_.uicontrolsetvisibilityrequest_;
      break;
    }
    case kUiControlGetVisibilityRequest: {
      delete request_.uicontrolgetvisibilityrequest_;
      break;
    }
    case kGetProcessInfoRequest: {
      delete request_.getprocessinforequest_;
      break;
    }
    case kGetScreenResolutionRequest: {
      delete request_.getscreenresolutionrequest_;
      break;
    }
    case kIsAnselModdingAvailableRequest: {
      delete request_.isanselmoddingavailablerequest_;
      break;
    }
    case kSetGridOfThirdsEnabledRequest: {
      delete request_.setgridofthirdsenabledrequest_;
      break;
    }
    case kResetEntireStackRequest: {
      delete request_.resetentirestackrequest_;
      break;
    }
    case kGetFeatureSetRequest: {
      delete request_.getfeaturesetrequest_;
      break;
    }
    case kSetStyleTransferEnabledRequest: {
      delete request_.setstyletransferenabledrequest_;
      break;
    }
    case kSetStyleTransferStyleRequest: {
      delete request_.setstyletransferstylerequest_;
      break;
    }
    case kGetStyleTransferModelListRequest: {
      delete request_.getstyletransfermodellistrequest_;
      break;
    }
    case kSetStyleTransferModelRequest: {
      delete request_.setstyletransfermodelrequest_;
      break;
    }
    case kStyleTransferStatusRequest: {
      delete request_.styletransferstatusrequest_;
      break;
    }
    case kInsertFilterRequest: {
      delete request_.insertfilterrequest_;
      break;
    }
    case kRemoveFilterRequest: {
      delete request_.removefilterrequest_;
      break;
    }
    case kMoveFilterRequest: {
      delete request_.movefilterrequest_;
      break;
    }
    case kGetStackInfoRequest: {
      delete request_.getstackinforequest_;
      break;
    }
    case kEstimateCaptureRequest: {
      delete request_.estimatecapturerequest_;
      break;
    }
    case kUiControlRemoveAllRequest: {
      delete request_.uicontrolremoveallrequest_;
      break;
    }
    case kGetSettingsRequest: {
      delete request_.getsettingsrequest_;
      break;
    }
    case kAnselStatusReportRequest: {
      delete request_.anselstatusreportrequest_;
      break;
    }
    case kStyleTransferSideloadChoiceRequest: {
      delete request_.styletransfersideloadchoicerequest_;
      break;
    }
    case kStyleTransferSideloadProgressRequest: {
      delete request_.styletransfersideloadprogressrequest_;
      break;
    }
    case kUpdateRollRequest: {
      delete request_.updaterollrequest_;
      break;
    }
    case kGetGameSpecificControlsRequest: {
      delete request_.getgamespecificcontrolsrequest_;
      break;
    }
    case kGetEnabledFeatureSetRequest: {
      delete request_.getenabledfeaturesetrequest_;
      break;
    }
    case kUpdateFovRequest: {
      delete request_.updatefovrequest_;
      break;
    }
    case kAnselReadyRequest: {
      delete request_.anselreadyrequest_;
      break;
    }
    case kSetHighQualityRequest: {
      delete request_.sethighqualityrequest_;
      break;
    }
    case kSetFilterAndAttributesRequest: {
      delete request_.setfilterandattributesrequest_;
      break;
    }
    case kSetCMSInfoRequest: {
      delete request_.setcmsinforequest_;
      break;
    }
    case kMultipleInputEventRequest: {
      delete request_.multipleinputeventrequest_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void AnselIPCRequest::Clear() {
  clear_request();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselIPCRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselIPCRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AnselIpc.SetAnselEnabledRequest setAnselEnabledRequest = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setanselenabledrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_captureShotRequest;
        break;
      }

      // optional .AnselIpc.CaptureShotRequest captureShotRequest = 2;
      case 2: {
        if (tag == 18) {
         parse_captureShotRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_captureshotrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getFilterListRequest;
        break;
      }

      // optional .AnselIpc.GetFilterListRequest getFilterListRequest = 3;
      case 3: {
        if (tag == 26) {
         parse_getFilterListRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfilterlistrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_getHighresResolutionListRequest;
        break;
      }

      // optional .AnselIpc.GetHighresResolutionListRequest getHighresResolutionListRequest = 4;
      case 4: {
        if (tag == 34) {
         parse_getHighresResolutionListRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gethighresresolutionlistrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_abortCaptureRequest;
        break;
      }

      // optional .AnselIpc.AbortCaptureRequest abortCaptureRequest = 5;
      case 5: {
        if (tag == 42) {
         parse_abortCaptureRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_abortcapturerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_get360ResolutionRangeRequest;
        break;
      }

      // optional .AnselIpc.Get360ResolutionRangeRequest get360ResolutionRangeRequest = 6;
      case 6: {
        if (tag == 50) {
         parse_get360ResolutionRangeRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get360resolutionrangerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_getFOVRangeRequest;
        break;
      }

      // optional .AnselIpc.GetFOVRangeRequest getFOVRangeRequest = 7;
      case 7: {
        if (tag == 58) {
         parse_getFOVRangeRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfovrangerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_setFOVRequest;
        break;
      }

      // optional .AnselIpc.SetFOVRequest setFOVRequest = 8;
      case 8: {
        if (tag == 66) {
         parse_setFOVRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfovrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_getRollRangeRequest;
        break;
      }

      // optional .AnselIpc.GetRollRangeRequest getRollRangeRequest = 9;
      case 9: {
        if (tag == 74) {
         parse_getRollRangeRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getrollrangerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_setRollRequest;
        break;
      }

      // optional .AnselIpc.SetRollRequest setRollRequest = 10;
      case 10: {
        if (tag == 82) {
         parse_setRollRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setrollrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_getAnselEnabledRequest;
        break;
      }

      // optional .AnselIpc.GetAnselEnabledRequest getAnselEnabledRequest = 11;
      case 11: {
        if (tag == 90) {
         parse_getAnselEnabledRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getanselenabledrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_getLwrrentFOVRequest;
        break;
      }

      // optional .AnselIpc.GetLwrrentFOVRequest getLwrrentFOVRequest = 12;
      case 12: {
        if (tag == 98) {
         parse_getLwrrentFOVRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getlwrrentfovrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_setFilterRequest;
        break;
      }

      // optional .AnselIpc.SetFilterRequest setFilterRequest = 13;
      case 13: {
        if (tag == 106) {
         parse_setFilterRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_setFilterAttributeRequest;
        break;
      }

      // optional .AnselIpc.SetFilterAttributeRequest setFilterAttributeRequest = 14;
      case 14: {
        if (tag == 114) {
         parse_setFilterAttributeRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterattributerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_isAnselAvailableRequest;
        break;
      }

      // optional .AnselIpc.IsAnselAvailableRequest isAnselAvailableRequest = 17;
      case 17: {
        if (tag == 138) {
         parse_isAnselAvailableRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselavailablerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_screenResolutionChangedRequest;
        break;
      }

      // optional .AnselIpc.ScreenResolutionChangedRequest screenResolutionChangedRequest = 18;
      case 18: {
        if (tag == 146) {
         parse_screenResolutionChangedRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_screenresolutionchangedrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_getAnselShotPermissionsRequest;
        break;
      }

      // optional .AnselIpc.GetAnselShotPermissionsRequest getAnselShotPermissionsRequest = 19;
      case 19: {
        if (tag == 154) {
         parse_getAnselShotPermissionsRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getanselshotpermissionsrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_inputEventRequest;
        break;
      }

      // optional .AnselIpc.InputEventRequest inputEventRequest = 20;
      case 20: {
        if (tag == 162) {
         parse_inputEventRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inputeventrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_setLangIdRequest;
        break;
      }

      // optional .AnselIpc.SetLangIdRequest setLangIdRequest = 21;
      case 21: {
        if (tag == 170) {
         parse_setLangIdRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setlangidrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_getFilterInfoRequest;
        break;
      }

      // optional .AnselIpc.GetFilterInfoRequest getFilterInfoRequest = 22;
      case 22: {
        if (tag == 178) {
         parse_getFilterInfoRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfilterinforequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_resetFilterValuesRequest;
        break;
      }

      // optional .AnselIpc.ResetFilterValuesRequest resetFilterValuesRequest = 23;
      case 23: {
        if (tag == 186) {
         parse_resetFilterValuesRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resetfiltervaluesrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_resetAllFilterValuesRequest;
        break;
      }

      // optional .AnselIpc.ResetAllFilterValuesRequest resetAllFilterValuesRequest = 24;
      case 24: {
        if (tag == 194) {
         parse_resetAllFilterValuesRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resetallfiltervaluesrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_isAnselSDKIntegrationAvailableRequest;
        break;
      }

      // optional .AnselIpc.IsAnselSDKIntegrationAvailableRequest isAnselSDKIntegrationAvailableRequest = 25;
      case 25: {
        if (tag == 202) {
         parse_isAnselSDKIntegrationAvailableRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselsdkintegrationavailablerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_ipcVersionRequest;
        break;
      }

      // optional .AnselIpc.IpcVersionRequest ipcVersionRequest = 26;
      case 26: {
        if (tag == 210) {
         parse_ipcVersionRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ipcversionrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_addUIElementRequest;
        break;
      }

      // optional .AnselIpc.AddUIElementRequest addUIElementRequest = 27;
      case 27: {
        if (tag == 218) {
         parse_addUIElementRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adduielementrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_uiReadyRequest;
        break;
      }

      // optional .AnselIpc.UIReadyRequest uiReadyRequest = 28;
      case 28: {
        if (tag == 226) {
         parse_uiReadyRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uireadyrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_uiControlChangedRequest;
        break;
      }

      // optional .AnselIpc.UIControlChangedRequest uiControlChangedRequest = 29;
      case 29: {
        if (tag == 234) {
         parse_uiControlChangedRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolchangedrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_uiControlRemoveRequest;
        break;
      }

      // optional .AnselIpc.UIControlRemoveRequest uiControlRemoveRequest = 30;
      case 30: {
        if (tag == 242) {
         parse_uiControlRemoveRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolremoverequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_uiControlSetVisibilityRequest;
        break;
      }

      // optional .AnselIpc.UIControlSetVisibilityRequest uiControlSetVisibilityRequest = 31;
      case 31: {
        if (tag == 250) {
         parse_uiControlSetVisibilityRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolsetvisibilityrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_uiControlGetVisibilityRequest;
        break;
      }

      // optional .AnselIpc.UIControlGetVisibilityRequest uiControlGetVisibilityRequest = 32;
      case 32: {
        if (tag == 258) {
         parse_uiControlGetVisibilityRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolgetvisibilityrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_getProcessInfoRequest;
        break;
      }

      // optional .AnselIpc.GetProcessInfoRequest getProcessInfoRequest = 33;
      case 33: {
        if (tag == 266) {
         parse_getProcessInfoRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getprocessinforequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_getScreenResolutionRequest;
        break;
      }

      // optional .AnselIpc.GetScreenResolutionRequest getScreenResolutionRequest = 34;
      case 34: {
        if (tag == 274) {
         parse_getScreenResolutionRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getscreenresolutionrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_isAnselModdingAvailableRequest;
        break;
      }

      // optional .AnselIpc.IsAnselModdingAvailableRequest isAnselModdingAvailableRequest = 35;
      case 35: {
        if (tag == 282) {
         parse_isAnselModdingAvailableRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselmoddingavailablerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_setGridOfThirdsEnabledRequest;
        break;
      }

      // optional .AnselIpc.SetGridOfThirdsEnabledRequest setGridOfThirdsEnabledRequest = 36;
      case 36: {
        if (tag == 290) {
         parse_setGridOfThirdsEnabledRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setgridofthirdsenabledrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_resetEntireStackRequest;
        break;
      }

      // optional .AnselIpc.ResetEntireStackRequest resetEntireStackRequest = 37;
      case 37: {
        if (tag == 298) {
         parse_resetEntireStackRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resetentirestackrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_getFeatureSetRequest;
        break;
      }

      // optional .AnselIpc.GetFeatureSetRequest getFeatureSetRequest = 38;
      case 38: {
        if (tag == 306) {
         parse_getFeatureSetRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfeaturesetrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_setStyleTransferEnabledRequest;
        break;
      }

      // optional .AnselIpc.SetStyleTransferEnabledRequest setStyleTransferEnabledRequest = 39;
      case 39: {
        if (tag == 314) {
         parse_setStyleTransferEnabledRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransferenabledrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_setStyleTransferStyleRequest;
        break;
      }

      // optional .AnselIpc.SetStyleTransferStyleRequest setStyleTransferStyleRequest = 40;
      case 40: {
        if (tag == 322) {
         parse_setStyleTransferStyleRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransferstylerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_getStyleTransferModelListRequest;
        break;
      }

      // optional .AnselIpc.GetStyleTransferModelListRequest getStyleTransferModelListRequest = 41;
      case 41: {
        if (tag == 330) {
         parse_getStyleTransferModelListRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getstyletransfermodellistrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_setStyleTransferModelRequest;
        break;
      }

      // optional .AnselIpc.SetStyleTransferModelRequest setStyleTransferModelRequest = 42;
      case 42: {
        if (tag == 338) {
         parse_setStyleTransferModelRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransfermodelrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_styleTransferStatusRequest;
        break;
      }

      // optional .AnselIpc.StyleTransferStatusRequest styleTransferStatusRequest = 43;
      case 43: {
        if (tag == 346) {
         parse_styleTransferStatusRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransferstatusrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_insertFilterRequest;
        break;
      }

      // optional .AnselIpc.InsertFilterRequest insertFilterRequest = 44;
      case 44: {
        if (tag == 354) {
         parse_insertFilterRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_insertfilterrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_removeFilterRequest;
        break;
      }

      // optional .AnselIpc.RemoveFilterRequest removeFilterRequest = 45;
      case 45: {
        if (tag == 362) {
         parse_removeFilterRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_removefilterrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_moveFilterRequest;
        break;
      }

      // optional .AnselIpc.MoveFilterRequest moveFilterRequest = 46;
      case 46: {
        if (tag == 370) {
         parse_moveFilterRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_movefilterrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_getStackInfoRequest;
        break;
      }

      // optional .AnselIpc.GetStackInfoRequest getStackInfoRequest = 47;
      case 47: {
        if (tag == 378) {
         parse_getStackInfoRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getstackinforequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_estimateCaptureRequest;
        break;
      }

      // optional .AnselIpc.EstimateCaptureRequest estimateCaptureRequest = 48;
      case 48: {
        if (tag == 386) {
         parse_estimateCaptureRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_estimatecapturerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_uiControlRemoveAllRequest;
        break;
      }

      // optional .AnselIpc.UIControlRemoveAllRequest uiControlRemoveAllRequest = 49;
      case 49: {
        if (tag == 394) {
         parse_uiControlRemoveAllRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolremoveallrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_getSettingsRequest;
        break;
      }

      // optional .AnselIpc.GetSettingsRequest getSettingsRequest = 50;
      case 50: {
        if (tag == 402) {
         parse_getSettingsRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsettingsrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_anselStatusReportRequest;
        break;
      }

      // optional .AnselIpc.AnselStatusReportRequest anselStatusReportRequest = 51;
      case 51: {
        if (tag == 410) {
         parse_anselStatusReportRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anselstatusreportrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_styleTransferSideloadChoiceRequest;
        break;
      }

      // optional .AnselIpc.StyleTransferSideloadChoiceRequest styleTransferSideloadChoiceRequest = 52;
      case 52: {
        if (tag == 418) {
         parse_styleTransferSideloadChoiceRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransfersideloadchoicerequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_styleTransferSideloadProgressRequest;
        break;
      }

      // optional .AnselIpc.StyleTransferSideloadProgressRequest styleTransferSideloadProgressRequest = 53;
      case 53: {
        if (tag == 426) {
         parse_styleTransferSideloadProgressRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransfersideloadprogressrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_updateRollRequest;
        break;
      }

      // optional .AnselIpc.UpdateRollRequest updateRollRequest = 54;
      case 54: {
        if (tag == 434) {
         parse_updateRollRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updaterollrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_getGameSpecificControlsRequest;
        break;
      }

      // optional .AnselIpc.GetGameSpecificControlsRequest getGameSpecificControlsRequest = 55;
      case 55: {
        if (tag == 442) {
         parse_getGameSpecificControlsRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getgamespecificcontrolsrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_getEnabledFeatureSetRequest;
        break;
      }

      // optional .AnselIpc.GetEnabledFeatureSetRequest getEnabledFeatureSetRequest = 56;
      case 56: {
        if (tag == 450) {
         parse_getEnabledFeatureSetRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getenabledfeaturesetrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_updateFovRequest;
        break;
      }

      // optional .AnselIpc.UpdateFovRequest updateFovRequest = 57;
      case 57: {
        if (tag == 458) {
         parse_updateFovRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updatefovrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_anselReadyRequest;
        break;
      }

      // optional .AnselIpc.AnselReadyRequest anselReadyRequest = 58;
      case 58: {
        if (tag == 466) {
         parse_anselReadyRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anselreadyrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_setHighQualityRequest;
        break;
      }

      // optional .AnselIpc.SetHighQualityRequest setHighQualityRequest = 59;
      case 59: {
        if (tag == 474) {
         parse_setHighQualityRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sethighqualityrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_setFilterAndAttributesRequest;
        break;
      }

      // optional .AnselIpc.SetFilterAndAttributesRequest setFilterAndAttributesRequest = 60;
      case 60: {
        if (tag == 482) {
         parse_setFilterAndAttributesRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterandattributesrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_setCMSInfoRequest;
        break;
      }

      // optional .AnselIpc.SetCMSInfoRequest setCMSInfoRequest = 61;
      case 61: {
        if (tag == 490) {
         parse_setCMSInfoRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setcmsinforequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(498)) goto parse_multipleInputEventRequest;
        break;
      }

      // optional .AnselIpc.MultipleInputEventRequest multipleInputEventRequest = 62;
      case 62: {
        if (tag == 498) {
         parse_multipleInputEventRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_multipleinputeventrequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselIPCRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselIPCRequest)
  return false;
#undef DO_
}

void AnselIPCRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselIPCRequest)
  // optional .AnselIpc.SetAnselEnabledRequest setAnselEnabledRequest = 1;
  if (has_setanselenabledrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->setanselenabledrequest(), output);
  }

  // optional .AnselIpc.CaptureShotRequest captureShotRequest = 2;
  if (has_captureshotrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->captureshotrequest(), output);
  }

  // optional .AnselIpc.GetFilterListRequest getFilterListRequest = 3;
  if (has_getfilterlistrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->getfilterlistrequest(), output);
  }

  // optional .AnselIpc.GetHighresResolutionListRequest getHighresResolutionListRequest = 4;
  if (has_gethighresresolutionlistrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->gethighresresolutionlistrequest(), output);
  }

  // optional .AnselIpc.AbortCaptureRequest abortCaptureRequest = 5;
  if (has_abortcapturerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->abortcapturerequest(), output);
  }

  // optional .AnselIpc.Get360ResolutionRangeRequest get360ResolutionRangeRequest = 6;
  if (has_get360resolutionrangerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->get360resolutionrangerequest(), output);
  }

  // optional .AnselIpc.GetFOVRangeRequest getFOVRangeRequest = 7;
  if (has_getfovrangerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->getfovrangerequest(), output);
  }

  // optional .AnselIpc.SetFOVRequest setFOVRequest = 8;
  if (has_setfovrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->setfovrequest(), output);
  }

  // optional .AnselIpc.GetRollRangeRequest getRollRangeRequest = 9;
  if (has_getrollrangerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->getrollrangerequest(), output);
  }

  // optional .AnselIpc.SetRollRequest setRollRequest = 10;
  if (has_setrollrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->setrollrequest(), output);
  }

  // optional .AnselIpc.GetAnselEnabledRequest getAnselEnabledRequest = 11;
  if (has_getanselenabledrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->getanselenabledrequest(), output);
  }

  // optional .AnselIpc.GetLwrrentFOVRequest getLwrrentFOVRequest = 12;
  if (has_getlwrrentfovrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->getlwrrentfovrequest(), output);
  }

  // optional .AnselIpc.SetFilterRequest setFilterRequest = 13;
  if (has_setfilterrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->setfilterrequest(), output);
  }

  // optional .AnselIpc.SetFilterAttributeRequest setFilterAttributeRequest = 14;
  if (has_setfilterattributerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->setfilterattributerequest(), output);
  }

  // optional .AnselIpc.IsAnselAvailableRequest isAnselAvailableRequest = 17;
  if (has_isanselavailablerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->isanselavailablerequest(), output);
  }

  // optional .AnselIpc.ScreenResolutionChangedRequest screenResolutionChangedRequest = 18;
  if (has_screenresolutionchangedrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->screenresolutionchangedrequest(), output);
  }

  // optional .AnselIpc.GetAnselShotPermissionsRequest getAnselShotPermissionsRequest = 19;
  if (has_getanselshotpermissionsrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->getanselshotpermissionsrequest(), output);
  }

  // optional .AnselIpc.InputEventRequest inputEventRequest = 20;
  if (has_inputeventrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->inputeventrequest(), output);
  }

  // optional .AnselIpc.SetLangIdRequest setLangIdRequest = 21;
  if (has_setlangidrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->setlangidrequest(), output);
  }

  // optional .AnselIpc.GetFilterInfoRequest getFilterInfoRequest = 22;
  if (has_getfilterinforequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->getfilterinforequest(), output);
  }

  // optional .AnselIpc.ResetFilterValuesRequest resetFilterValuesRequest = 23;
  if (has_resetfiltervaluesrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->resetfiltervaluesrequest(), output);
  }

  // optional .AnselIpc.ResetAllFilterValuesRequest resetAllFilterValuesRequest = 24;
  if (has_resetallfiltervaluesrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->resetallfiltervaluesrequest(), output);
  }

  // optional .AnselIpc.IsAnselSDKIntegrationAvailableRequest isAnselSDKIntegrationAvailableRequest = 25;
  if (has_isanselsdkintegrationavailablerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->isanselsdkintegrationavailablerequest(), output);
  }

  // optional .AnselIpc.IpcVersionRequest ipcVersionRequest = 26;
  if (has_ipcversionrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->ipcversionrequest(), output);
  }

  // optional .AnselIpc.AddUIElementRequest addUIElementRequest = 27;
  if (has_adduielementrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->adduielementrequest(), output);
  }

  // optional .AnselIpc.UIReadyRequest uiReadyRequest = 28;
  if (has_uireadyrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->uireadyrequest(), output);
  }

  // optional .AnselIpc.UIControlChangedRequest uiControlChangedRequest = 29;
  if (has_uicontrolchangedrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->uicontrolchangedrequest(), output);
  }

  // optional .AnselIpc.UIControlRemoveRequest uiControlRemoveRequest = 30;
  if (has_uicontrolremoverequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->uicontrolremoverequest(), output);
  }

  // optional .AnselIpc.UIControlSetVisibilityRequest uiControlSetVisibilityRequest = 31;
  if (has_uicontrolsetvisibilityrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->uicontrolsetvisibilityrequest(), output);
  }

  // optional .AnselIpc.UIControlGetVisibilityRequest uiControlGetVisibilityRequest = 32;
  if (has_uicontrolgetvisibilityrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->uicontrolgetvisibilityrequest(), output);
  }

  // optional .AnselIpc.GetProcessInfoRequest getProcessInfoRequest = 33;
  if (has_getprocessinforequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->getprocessinforequest(), output);
  }

  // optional .AnselIpc.GetScreenResolutionRequest getScreenResolutionRequest = 34;
  if (has_getscreenresolutionrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->getscreenresolutionrequest(), output);
  }

  // optional .AnselIpc.IsAnselModdingAvailableRequest isAnselModdingAvailableRequest = 35;
  if (has_isanselmoddingavailablerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->isanselmoddingavailablerequest(), output);
  }

  // optional .AnselIpc.SetGridOfThirdsEnabledRequest setGridOfThirdsEnabledRequest = 36;
  if (has_setgridofthirdsenabledrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->setgridofthirdsenabledrequest(), output);
  }

  // optional .AnselIpc.ResetEntireStackRequest resetEntireStackRequest = 37;
  if (has_resetentirestackrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->resetentirestackrequest(), output);
  }

  // optional .AnselIpc.GetFeatureSetRequest getFeatureSetRequest = 38;
  if (has_getfeaturesetrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->getfeaturesetrequest(), output);
  }

  // optional .AnselIpc.SetStyleTransferEnabledRequest setStyleTransferEnabledRequest = 39;
  if (has_setstyletransferenabledrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->setstyletransferenabledrequest(), output);
  }

  // optional .AnselIpc.SetStyleTransferStyleRequest setStyleTransferStyleRequest = 40;
  if (has_setstyletransferstylerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->setstyletransferstylerequest(), output);
  }

  // optional .AnselIpc.GetStyleTransferModelListRequest getStyleTransferModelListRequest = 41;
  if (has_getstyletransfermodellistrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->getstyletransfermodellistrequest(), output);
  }

  // optional .AnselIpc.SetStyleTransferModelRequest setStyleTransferModelRequest = 42;
  if (has_setstyletransfermodelrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->setstyletransfermodelrequest(), output);
  }

  // optional .AnselIpc.StyleTransferStatusRequest styleTransferStatusRequest = 43;
  if (has_styletransferstatusrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->styletransferstatusrequest(), output);
  }

  // optional .AnselIpc.InsertFilterRequest insertFilterRequest = 44;
  if (has_insertfilterrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->insertfilterrequest(), output);
  }

  // optional .AnselIpc.RemoveFilterRequest removeFilterRequest = 45;
  if (has_removefilterrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->removefilterrequest(), output);
  }

  // optional .AnselIpc.MoveFilterRequest moveFilterRequest = 46;
  if (has_movefilterrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->movefilterrequest(), output);
  }

  // optional .AnselIpc.GetStackInfoRequest getStackInfoRequest = 47;
  if (has_getstackinforequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->getstackinforequest(), output);
  }

  // optional .AnselIpc.EstimateCaptureRequest estimateCaptureRequest = 48;
  if (has_estimatecapturerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->estimatecapturerequest(), output);
  }

  // optional .AnselIpc.UIControlRemoveAllRequest uiControlRemoveAllRequest = 49;
  if (has_uicontrolremoveallrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->uicontrolremoveallrequest(), output);
  }

  // optional .AnselIpc.GetSettingsRequest getSettingsRequest = 50;
  if (has_getsettingsrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->getsettingsrequest(), output);
  }

  // optional .AnselIpc.AnselStatusReportRequest anselStatusReportRequest = 51;
  if (has_anselstatusreportrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->anselstatusreportrequest(), output);
  }

  // optional .AnselIpc.StyleTransferSideloadChoiceRequest styleTransferSideloadChoiceRequest = 52;
  if (has_styletransfersideloadchoicerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->styletransfersideloadchoicerequest(), output);
  }

  // optional .AnselIpc.StyleTransferSideloadProgressRequest styleTransferSideloadProgressRequest = 53;
  if (has_styletransfersideloadprogressrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->styletransfersideloadprogressrequest(), output);
  }

  // optional .AnselIpc.UpdateRollRequest updateRollRequest = 54;
  if (has_updaterollrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->updaterollrequest(), output);
  }

  // optional .AnselIpc.GetGameSpecificControlsRequest getGameSpecificControlsRequest = 55;
  if (has_getgamespecificcontrolsrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->getgamespecificcontrolsrequest(), output);
  }

  // optional .AnselIpc.GetEnabledFeatureSetRequest getEnabledFeatureSetRequest = 56;
  if (has_getenabledfeaturesetrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, this->getenabledfeaturesetrequest(), output);
  }

  // optional .AnselIpc.UpdateFovRequest updateFovRequest = 57;
  if (has_updatefovrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->updatefovrequest(), output);
  }

  // optional .AnselIpc.AnselReadyRequest anselReadyRequest = 58;
  if (has_anselreadyrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, this->anselreadyrequest(), output);
  }

  // optional .AnselIpc.SetHighQualityRequest setHighQualityRequest = 59;
  if (has_sethighqualityrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->sethighqualityrequest(), output);
  }

  // optional .AnselIpc.SetFilterAndAttributesRequest setFilterAndAttributesRequest = 60;
  if (has_setfilterandattributesrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->setfilterandattributesrequest(), output);
  }

  // optional .AnselIpc.SetCMSInfoRequest setCMSInfoRequest = 61;
  if (has_setcmsinforequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->setcmsinforequest(), output);
  }

  // optional .AnselIpc.MultipleInputEventRequest multipleInputEventRequest = 62;
  if (has_multipleinputeventrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->multipleinputeventrequest(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselIPCRequest)
}

::google::protobuf::uint8* AnselIPCRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselIPCRequest)
  // optional .AnselIpc.SetAnselEnabledRequest setAnselEnabledRequest = 1;
  if (has_setanselenabledrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->setanselenabledrequest(), target);
  }

  // optional .AnselIpc.CaptureShotRequest captureShotRequest = 2;
  if (has_captureshotrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->captureshotrequest(), target);
  }

  // optional .AnselIpc.GetFilterListRequest getFilterListRequest = 3;
  if (has_getfilterlistrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->getfilterlistrequest(), target);
  }

  // optional .AnselIpc.GetHighresResolutionListRequest getHighresResolutionListRequest = 4;
  if (has_gethighresresolutionlistrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->gethighresresolutionlistrequest(), target);
  }

  // optional .AnselIpc.AbortCaptureRequest abortCaptureRequest = 5;
  if (has_abortcapturerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->abortcapturerequest(), target);
  }

  // optional .AnselIpc.Get360ResolutionRangeRequest get360ResolutionRangeRequest = 6;
  if (has_get360resolutionrangerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->get360resolutionrangerequest(), target);
  }

  // optional .AnselIpc.GetFOVRangeRequest getFOVRangeRequest = 7;
  if (has_getfovrangerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->getfovrangerequest(), target);
  }

  // optional .AnselIpc.SetFOVRequest setFOVRequest = 8;
  if (has_setfovrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->setfovrequest(), target);
  }

  // optional .AnselIpc.GetRollRangeRequest getRollRangeRequest = 9;
  if (has_getrollrangerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->getrollrangerequest(), target);
  }

  // optional .AnselIpc.SetRollRequest setRollRequest = 10;
  if (has_setrollrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->setrollrequest(), target);
  }

  // optional .AnselIpc.GetAnselEnabledRequest getAnselEnabledRequest = 11;
  if (has_getanselenabledrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->getanselenabledrequest(), target);
  }

  // optional .AnselIpc.GetLwrrentFOVRequest getLwrrentFOVRequest = 12;
  if (has_getlwrrentfovrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->getlwrrentfovrequest(), target);
  }

  // optional .AnselIpc.SetFilterRequest setFilterRequest = 13;
  if (has_setfilterrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->setfilterrequest(), target);
  }

  // optional .AnselIpc.SetFilterAttributeRequest setFilterAttributeRequest = 14;
  if (has_setfilterattributerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->setfilterattributerequest(), target);
  }

  // optional .AnselIpc.IsAnselAvailableRequest isAnselAvailableRequest = 17;
  if (has_isanselavailablerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->isanselavailablerequest(), target);
  }

  // optional .AnselIpc.ScreenResolutionChangedRequest screenResolutionChangedRequest = 18;
  if (has_screenresolutionchangedrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->screenresolutionchangedrequest(), target);
  }

  // optional .AnselIpc.GetAnselShotPermissionsRequest getAnselShotPermissionsRequest = 19;
  if (has_getanselshotpermissionsrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->getanselshotpermissionsrequest(), target);
  }

  // optional .AnselIpc.InputEventRequest inputEventRequest = 20;
  if (has_inputeventrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->inputeventrequest(), target);
  }

  // optional .AnselIpc.SetLangIdRequest setLangIdRequest = 21;
  if (has_setlangidrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->setlangidrequest(), target);
  }

  // optional .AnselIpc.GetFilterInfoRequest getFilterInfoRequest = 22;
  if (has_getfilterinforequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->getfilterinforequest(), target);
  }

  // optional .AnselIpc.ResetFilterValuesRequest resetFilterValuesRequest = 23;
  if (has_resetfiltervaluesrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->resetfiltervaluesrequest(), target);
  }

  // optional .AnselIpc.ResetAllFilterValuesRequest resetAllFilterValuesRequest = 24;
  if (has_resetallfiltervaluesrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->resetallfiltervaluesrequest(), target);
  }

  // optional .AnselIpc.IsAnselSDKIntegrationAvailableRequest isAnselSDKIntegrationAvailableRequest = 25;
  if (has_isanselsdkintegrationavailablerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->isanselsdkintegrationavailablerequest(), target);
  }

  // optional .AnselIpc.IpcVersionRequest ipcVersionRequest = 26;
  if (has_ipcversionrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->ipcversionrequest(), target);
  }

  // optional .AnselIpc.AddUIElementRequest addUIElementRequest = 27;
  if (has_adduielementrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->adduielementrequest(), target);
  }

  // optional .AnselIpc.UIReadyRequest uiReadyRequest = 28;
  if (has_uireadyrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->uireadyrequest(), target);
  }

  // optional .AnselIpc.UIControlChangedRequest uiControlChangedRequest = 29;
  if (has_uicontrolchangedrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->uicontrolchangedrequest(), target);
  }

  // optional .AnselIpc.UIControlRemoveRequest uiControlRemoveRequest = 30;
  if (has_uicontrolremoverequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->uicontrolremoverequest(), target);
  }

  // optional .AnselIpc.UIControlSetVisibilityRequest uiControlSetVisibilityRequest = 31;
  if (has_uicontrolsetvisibilityrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->uicontrolsetvisibilityrequest(), target);
  }

  // optional .AnselIpc.UIControlGetVisibilityRequest uiControlGetVisibilityRequest = 32;
  if (has_uicontrolgetvisibilityrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->uicontrolgetvisibilityrequest(), target);
  }

  // optional .AnselIpc.GetProcessInfoRequest getProcessInfoRequest = 33;
  if (has_getprocessinforequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->getprocessinforequest(), target);
  }

  // optional .AnselIpc.GetScreenResolutionRequest getScreenResolutionRequest = 34;
  if (has_getscreenresolutionrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->getscreenresolutionrequest(), target);
  }

  // optional .AnselIpc.IsAnselModdingAvailableRequest isAnselModdingAvailableRequest = 35;
  if (has_isanselmoddingavailablerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->isanselmoddingavailablerequest(), target);
  }

  // optional .AnselIpc.SetGridOfThirdsEnabledRequest setGridOfThirdsEnabledRequest = 36;
  if (has_setgridofthirdsenabledrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->setgridofthirdsenabledrequest(), target);
  }

  // optional .AnselIpc.ResetEntireStackRequest resetEntireStackRequest = 37;
  if (has_resetentirestackrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->resetentirestackrequest(), target);
  }

  // optional .AnselIpc.GetFeatureSetRequest getFeatureSetRequest = 38;
  if (has_getfeaturesetrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->getfeaturesetrequest(), target);
  }

  // optional .AnselIpc.SetStyleTransferEnabledRequest setStyleTransferEnabledRequest = 39;
  if (has_setstyletransferenabledrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        39, this->setstyletransferenabledrequest(), target);
  }

  // optional .AnselIpc.SetStyleTransferStyleRequest setStyleTransferStyleRequest = 40;
  if (has_setstyletransferstylerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        40, this->setstyletransferstylerequest(), target);
  }

  // optional .AnselIpc.GetStyleTransferModelListRequest getStyleTransferModelListRequest = 41;
  if (has_getstyletransfermodellistrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        41, this->getstyletransfermodellistrequest(), target);
  }

  // optional .AnselIpc.SetStyleTransferModelRequest setStyleTransferModelRequest = 42;
  if (has_setstyletransfermodelrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        42, this->setstyletransfermodelrequest(), target);
  }

  // optional .AnselIpc.StyleTransferStatusRequest styleTransferStatusRequest = 43;
  if (has_styletransferstatusrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        43, this->styletransferstatusrequest(), target);
  }

  // optional .AnselIpc.InsertFilterRequest insertFilterRequest = 44;
  if (has_insertfilterrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        44, this->insertfilterrequest(), target);
  }

  // optional .AnselIpc.RemoveFilterRequest removeFilterRequest = 45;
  if (has_removefilterrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        45, this->removefilterrequest(), target);
  }

  // optional .AnselIpc.MoveFilterRequest moveFilterRequest = 46;
  if (has_movefilterrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        46, this->movefilterrequest(), target);
  }

  // optional .AnselIpc.GetStackInfoRequest getStackInfoRequest = 47;
  if (has_getstackinforequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        47, this->getstackinforequest(), target);
  }

  // optional .AnselIpc.EstimateCaptureRequest estimateCaptureRequest = 48;
  if (has_estimatecapturerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        48, this->estimatecapturerequest(), target);
  }

  // optional .AnselIpc.UIControlRemoveAllRequest uiControlRemoveAllRequest = 49;
  if (has_uicontrolremoveallrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        49, this->uicontrolremoveallrequest(), target);
  }

  // optional .AnselIpc.GetSettingsRequest getSettingsRequest = 50;
  if (has_getsettingsrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->getsettingsrequest(), target);
  }

  // optional .AnselIpc.AnselStatusReportRequest anselStatusReportRequest = 51;
  if (has_anselstatusreportrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        51, this->anselstatusreportrequest(), target);
  }

  // optional .AnselIpc.StyleTransferSideloadChoiceRequest styleTransferSideloadChoiceRequest = 52;
  if (has_styletransfersideloadchoicerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->styletransfersideloadchoicerequest(), target);
  }

  // optional .AnselIpc.StyleTransferSideloadProgressRequest styleTransferSideloadProgressRequest = 53;
  if (has_styletransfersideloadprogressrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        53, this->styletransfersideloadprogressrequest(), target);
  }

  // optional .AnselIpc.UpdateRollRequest updateRollRequest = 54;
  if (has_updaterollrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        54, this->updaterollrequest(), target);
  }

  // optional .AnselIpc.GetGameSpecificControlsRequest getGameSpecificControlsRequest = 55;
  if (has_getgamespecificcontrolsrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        55, this->getgamespecificcontrolsrequest(), target);
  }

  // optional .AnselIpc.GetEnabledFeatureSetRequest getEnabledFeatureSetRequest = 56;
  if (has_getenabledfeaturesetrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        56, this->getenabledfeaturesetrequest(), target);
  }

  // optional .AnselIpc.UpdateFovRequest updateFovRequest = 57;
  if (has_updatefovrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        57, this->updatefovrequest(), target);
  }

  // optional .AnselIpc.AnselReadyRequest anselReadyRequest = 58;
  if (has_anselreadyrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        58, this->anselreadyrequest(), target);
  }

  // optional .AnselIpc.SetHighQualityRequest setHighQualityRequest = 59;
  if (has_sethighqualityrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        59, this->sethighqualityrequest(), target);
  }

  // optional .AnselIpc.SetFilterAndAttributesRequest setFilterAndAttributesRequest = 60;
  if (has_setfilterandattributesrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        60, this->setfilterandattributesrequest(), target);
  }

  // optional .AnselIpc.SetCMSInfoRequest setCMSInfoRequest = 61;
  if (has_setcmsinforequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        61, this->setcmsinforequest(), target);
  }

  // optional .AnselIpc.MultipleInputEventRequest multipleInputEventRequest = 62;
  if (has_multipleinputeventrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        62, this->multipleinputeventrequest(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselIPCRequest)
  return target;
}

int AnselIPCRequest::ByteSize() const {
  int total_size = 0;

  switch (request_case()) {
    // optional .AnselIpc.SetAnselEnabledRequest setAnselEnabledRequest = 1;
    case kSetAnselEnabledRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setanselenabledrequest());
      break;
    }
    // optional .AnselIpc.CaptureShotRequest captureShotRequest = 2;
    case kCaptureShotRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->captureshotrequest());
      break;
    }
    // optional .AnselIpc.GetFilterListRequest getFilterListRequest = 3;
    case kGetFilterListRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfilterlistrequest());
      break;
    }
    // optional .AnselIpc.GetHighresResolutionListRequest getHighresResolutionListRequest = 4;
    case kGetHighresResolutionListRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gethighresresolutionlistrequest());
      break;
    }
    // optional .AnselIpc.AbortCaptureRequest abortCaptureRequest = 5;
    case kAbortCaptureRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->abortcapturerequest());
      break;
    }
    // optional .AnselIpc.Get360ResolutionRangeRequest get360ResolutionRangeRequest = 6;
    case kGet360ResolutionRangeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->get360resolutionrangerequest());
      break;
    }
    // optional .AnselIpc.GetFOVRangeRequest getFOVRangeRequest = 7;
    case kGetFOVRangeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfovrangerequest());
      break;
    }
    // optional .AnselIpc.SetFOVRequest setFOVRequest = 8;
    case kSetFOVRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfovrequest());
      break;
    }
    // optional .AnselIpc.GetRollRangeRequest getRollRangeRequest = 9;
    case kGetRollRangeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getrollrangerequest());
      break;
    }
    // optional .AnselIpc.SetRollRequest setRollRequest = 10;
    case kSetRollRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setrollrequest());
      break;
    }
    // optional .AnselIpc.GetAnselEnabledRequest getAnselEnabledRequest = 11;
    case kGetAnselEnabledRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getanselenabledrequest());
      break;
    }
    // optional .AnselIpc.GetLwrrentFOVRequest getLwrrentFOVRequest = 12;
    case kGetLwrrentFOVRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getlwrrentfovrequest());
      break;
    }
    // optional .AnselIpc.SetFilterRequest setFilterRequest = 13;
    case kSetFilterRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterrequest());
      break;
    }
    // optional .AnselIpc.SetFilterAttributeRequest setFilterAttributeRequest = 14;
    case kSetFilterAttributeRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterattributerequest());
      break;
    }
    // optional .AnselIpc.IsAnselAvailableRequest isAnselAvailableRequest = 17;
    case kIsAnselAvailableRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselavailablerequest());
      break;
    }
    // optional .AnselIpc.ScreenResolutionChangedRequest screenResolutionChangedRequest = 18;
    case kScreenResolutionChangedRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->screenresolutionchangedrequest());
      break;
    }
    // optional .AnselIpc.GetAnselShotPermissionsRequest getAnselShotPermissionsRequest = 19;
    case kGetAnselShotPermissionsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getanselshotpermissionsrequest());
      break;
    }
    // optional .AnselIpc.InputEventRequest inputEventRequest = 20;
    case kInputEventRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputeventrequest());
      break;
    }
    // optional .AnselIpc.SetLangIdRequest setLangIdRequest = 21;
    case kSetLangIdRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setlangidrequest());
      break;
    }
    // optional .AnselIpc.GetFilterInfoRequest getFilterInfoRequest = 22;
    case kGetFilterInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfilterinforequest());
      break;
    }
    // optional .AnselIpc.ResetFilterValuesRequest resetFilterValuesRequest = 23;
    case kResetFilterValuesRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resetfiltervaluesrequest());
      break;
    }
    // optional .AnselIpc.ResetAllFilterValuesRequest resetAllFilterValuesRequest = 24;
    case kResetAllFilterValuesRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resetallfiltervaluesrequest());
      break;
    }
    // optional .AnselIpc.IsAnselSDKIntegrationAvailableRequest isAnselSDKIntegrationAvailableRequest = 25;
    case kIsAnselSDKIntegrationAvailableRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselsdkintegrationavailablerequest());
      break;
    }
    // optional .AnselIpc.IpcVersionRequest ipcVersionRequest = 26;
    case kIpcVersionRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ipcversionrequest());
      break;
    }
    // optional .AnselIpc.AddUIElementRequest addUIElementRequest = 27;
    case kAddUIElementRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adduielementrequest());
      break;
    }
    // optional .AnselIpc.UIReadyRequest uiReadyRequest = 28;
    case kUiReadyRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uireadyrequest());
      break;
    }
    // optional .AnselIpc.UIControlChangedRequest uiControlChangedRequest = 29;
    case kUiControlChangedRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolchangedrequest());
      break;
    }
    // optional .AnselIpc.UIControlRemoveRequest uiControlRemoveRequest = 30;
    case kUiControlRemoveRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolremoverequest());
      break;
    }
    // optional .AnselIpc.UIControlSetVisibilityRequest uiControlSetVisibilityRequest = 31;
    case kUiControlSetVisibilityRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolsetvisibilityrequest());
      break;
    }
    // optional .AnselIpc.UIControlGetVisibilityRequest uiControlGetVisibilityRequest = 32;
    case kUiControlGetVisibilityRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolgetvisibilityrequest());
      break;
    }
    // optional .AnselIpc.GetProcessInfoRequest getProcessInfoRequest = 33;
    case kGetProcessInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getprocessinforequest());
      break;
    }
    // optional .AnselIpc.GetScreenResolutionRequest getScreenResolutionRequest = 34;
    case kGetScreenResolutionRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getscreenresolutionrequest());
      break;
    }
    // optional .AnselIpc.IsAnselModdingAvailableRequest isAnselModdingAvailableRequest = 35;
    case kIsAnselModdingAvailableRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselmoddingavailablerequest());
      break;
    }
    // optional .AnselIpc.SetGridOfThirdsEnabledRequest setGridOfThirdsEnabledRequest = 36;
    case kSetGridOfThirdsEnabledRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setgridofthirdsenabledrequest());
      break;
    }
    // optional .AnselIpc.ResetEntireStackRequest resetEntireStackRequest = 37;
    case kResetEntireStackRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resetentirestackrequest());
      break;
    }
    // optional .AnselIpc.GetFeatureSetRequest getFeatureSetRequest = 38;
    case kGetFeatureSetRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfeaturesetrequest());
      break;
    }
    // optional .AnselIpc.SetStyleTransferEnabledRequest setStyleTransferEnabledRequest = 39;
    case kSetStyleTransferEnabledRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransferenabledrequest());
      break;
    }
    // optional .AnselIpc.SetStyleTransferStyleRequest setStyleTransferStyleRequest = 40;
    case kSetStyleTransferStyleRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransferstylerequest());
      break;
    }
    // optional .AnselIpc.GetStyleTransferModelListRequest getStyleTransferModelListRequest = 41;
    case kGetStyleTransferModelListRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getstyletransfermodellistrequest());
      break;
    }
    // optional .AnselIpc.SetStyleTransferModelRequest setStyleTransferModelRequest = 42;
    case kSetStyleTransferModelRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransfermodelrequest());
      break;
    }
    // optional .AnselIpc.StyleTransferStatusRequest styleTransferStatusRequest = 43;
    case kStyleTransferStatusRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransferstatusrequest());
      break;
    }
    // optional .AnselIpc.InsertFilterRequest insertFilterRequest = 44;
    case kInsertFilterRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->insertfilterrequest());
      break;
    }
    // optional .AnselIpc.RemoveFilterRequest removeFilterRequest = 45;
    case kRemoveFilterRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->removefilterrequest());
      break;
    }
    // optional .AnselIpc.MoveFilterRequest moveFilterRequest = 46;
    case kMoveFilterRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->movefilterrequest());
      break;
    }
    // optional .AnselIpc.GetStackInfoRequest getStackInfoRequest = 47;
    case kGetStackInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getstackinforequest());
      break;
    }
    // optional .AnselIpc.EstimateCaptureRequest estimateCaptureRequest = 48;
    case kEstimateCaptureRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->estimatecapturerequest());
      break;
    }
    // optional .AnselIpc.UIControlRemoveAllRequest uiControlRemoveAllRequest = 49;
    case kUiControlRemoveAllRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolremoveallrequest());
      break;
    }
    // optional .AnselIpc.GetSettingsRequest getSettingsRequest = 50;
    case kGetSettingsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getsettingsrequest());
      break;
    }
    // optional .AnselIpc.AnselStatusReportRequest anselStatusReportRequest = 51;
    case kAnselStatusReportRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anselstatusreportrequest());
      break;
    }
    // optional .AnselIpc.StyleTransferSideloadChoiceRequest styleTransferSideloadChoiceRequest = 52;
    case kStyleTransferSideloadChoiceRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransfersideloadchoicerequest());
      break;
    }
    // optional .AnselIpc.StyleTransferSideloadProgressRequest styleTransferSideloadProgressRequest = 53;
    case kStyleTransferSideloadProgressRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransfersideloadprogressrequest());
      break;
    }
    // optional .AnselIpc.UpdateRollRequest updateRollRequest = 54;
    case kUpdateRollRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updaterollrequest());
      break;
    }
    // optional .AnselIpc.GetGameSpecificControlsRequest getGameSpecificControlsRequest = 55;
    case kGetGameSpecificControlsRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getgamespecificcontrolsrequest());
      break;
    }
    // optional .AnselIpc.GetEnabledFeatureSetRequest getEnabledFeatureSetRequest = 56;
    case kGetEnabledFeatureSetRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getenabledfeaturesetrequest());
      break;
    }
    // optional .AnselIpc.UpdateFovRequest updateFovRequest = 57;
    case kUpdateFovRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updatefovrequest());
      break;
    }
    // optional .AnselIpc.AnselReadyRequest anselReadyRequest = 58;
    case kAnselReadyRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anselreadyrequest());
      break;
    }
    // optional .AnselIpc.SetHighQualityRequest setHighQualityRequest = 59;
    case kSetHighQualityRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sethighqualityrequest());
      break;
    }
    // optional .AnselIpc.SetFilterAndAttributesRequest setFilterAndAttributesRequest = 60;
    case kSetFilterAndAttributesRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterandattributesrequest());
      break;
    }
    // optional .AnselIpc.SetCMSInfoRequest setCMSInfoRequest = 61;
    case kSetCMSInfoRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setcmsinforequest());
      break;
    }
    // optional .AnselIpc.MultipleInputEventRequest multipleInputEventRequest = 62;
    case kMultipleInputEventRequest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->multipleinputeventrequest());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselIPCRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselIPCRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselIPCRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselIPCRequest::MergeFrom(const AnselIPCRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.request_case()) {
    case kSetAnselEnabledRequest: {
      mutable_setanselenabledrequest()->::AnselIpc::SetAnselEnabledRequest::MergeFrom(from.setanselenabledrequest());
      break;
    }
    case kCaptureShotRequest: {
      mutable_captureshotrequest()->::AnselIpc::CaptureShotRequest::MergeFrom(from.captureshotrequest());
      break;
    }
    case kGetFilterListRequest: {
      mutable_getfilterlistrequest()->::AnselIpc::GetFilterListRequest::MergeFrom(from.getfilterlistrequest());
      break;
    }
    case kGetHighresResolutionListRequest: {
      mutable_gethighresresolutionlistrequest()->::AnselIpc::GetHighresResolutionListRequest::MergeFrom(from.gethighresresolutionlistrequest());
      break;
    }
    case kAbortCaptureRequest: {
      mutable_abortcapturerequest()->::AnselIpc::AbortCaptureRequest::MergeFrom(from.abortcapturerequest());
      break;
    }
    case kGet360ResolutionRangeRequest: {
      mutable_get360resolutionrangerequest()->::AnselIpc::Get360ResolutionRangeRequest::MergeFrom(from.get360resolutionrangerequest());
      break;
    }
    case kGetFOVRangeRequest: {
      mutable_getfovrangerequest()->::AnselIpc::GetFOVRangeRequest::MergeFrom(from.getfovrangerequest());
      break;
    }
    case kSetFOVRequest: {
      mutable_setfovrequest()->::AnselIpc::SetFOVRequest::MergeFrom(from.setfovrequest());
      break;
    }
    case kGetRollRangeRequest: {
      mutable_getrollrangerequest()->::AnselIpc::GetRollRangeRequest::MergeFrom(from.getrollrangerequest());
      break;
    }
    case kSetRollRequest: {
      mutable_setrollrequest()->::AnselIpc::SetRollRequest::MergeFrom(from.setrollrequest());
      break;
    }
    case kGetAnselEnabledRequest: {
      mutable_getanselenabledrequest()->::AnselIpc::GetAnselEnabledRequest::MergeFrom(from.getanselenabledrequest());
      break;
    }
    case kGetLwrrentFOVRequest: {
      mutable_getlwrrentfovrequest()->::AnselIpc::GetLwrrentFOVRequest::MergeFrom(from.getlwrrentfovrequest());
      break;
    }
    case kSetFilterRequest: {
      mutable_setfilterrequest()->::AnselIpc::SetFilterRequest::MergeFrom(from.setfilterrequest());
      break;
    }
    case kSetFilterAttributeRequest: {
      mutable_setfilterattributerequest()->::AnselIpc::SetFilterAttributeRequest::MergeFrom(from.setfilterattributerequest());
      break;
    }
    case kIsAnselAvailableRequest: {
      mutable_isanselavailablerequest()->::AnselIpc::IsAnselAvailableRequest::MergeFrom(from.isanselavailablerequest());
      break;
    }
    case kScreenResolutionChangedRequest: {
      mutable_screenresolutionchangedrequest()->::AnselIpc::ScreenResolutionChangedRequest::MergeFrom(from.screenresolutionchangedrequest());
      break;
    }
    case kGetAnselShotPermissionsRequest: {
      mutable_getanselshotpermissionsrequest()->::AnselIpc::GetAnselShotPermissionsRequest::MergeFrom(from.getanselshotpermissionsrequest());
      break;
    }
    case kInputEventRequest: {
      mutable_inputeventrequest()->::AnselIpc::InputEventRequest::MergeFrom(from.inputeventrequest());
      break;
    }
    case kSetLangIdRequest: {
      mutable_setlangidrequest()->::AnselIpc::SetLangIdRequest::MergeFrom(from.setlangidrequest());
      break;
    }
    case kGetFilterInfoRequest: {
      mutable_getfilterinforequest()->::AnselIpc::GetFilterInfoRequest::MergeFrom(from.getfilterinforequest());
      break;
    }
    case kResetFilterValuesRequest: {
      mutable_resetfiltervaluesrequest()->::AnselIpc::ResetFilterValuesRequest::MergeFrom(from.resetfiltervaluesrequest());
      break;
    }
    case kResetAllFilterValuesRequest: {
      mutable_resetallfiltervaluesrequest()->::AnselIpc::ResetAllFilterValuesRequest::MergeFrom(from.resetallfiltervaluesrequest());
      break;
    }
    case kIsAnselSDKIntegrationAvailableRequest: {
      mutable_isanselsdkintegrationavailablerequest()->::AnselIpc::IsAnselSDKIntegrationAvailableRequest::MergeFrom(from.isanselsdkintegrationavailablerequest());
      break;
    }
    case kIpcVersionRequest: {
      mutable_ipcversionrequest()->::AnselIpc::IpcVersionRequest::MergeFrom(from.ipcversionrequest());
      break;
    }
    case kAddUIElementRequest: {
      mutable_adduielementrequest()->::AnselIpc::AddUIElementRequest::MergeFrom(from.adduielementrequest());
      break;
    }
    case kUiReadyRequest: {
      mutable_uireadyrequest()->::AnselIpc::UIReadyRequest::MergeFrom(from.uireadyrequest());
      break;
    }
    case kUiControlChangedRequest: {
      mutable_uicontrolchangedrequest()->::AnselIpc::UIControlChangedRequest::MergeFrom(from.uicontrolchangedrequest());
      break;
    }
    case kUiControlRemoveRequest: {
      mutable_uicontrolremoverequest()->::AnselIpc::UIControlRemoveRequest::MergeFrom(from.uicontrolremoverequest());
      break;
    }
    case kUiControlSetVisibilityRequest: {
      mutable_uicontrolsetvisibilityrequest()->::AnselIpc::UIControlSetVisibilityRequest::MergeFrom(from.uicontrolsetvisibilityrequest());
      break;
    }
    case kUiControlGetVisibilityRequest: {
      mutable_uicontrolgetvisibilityrequest()->::AnselIpc::UIControlGetVisibilityRequest::MergeFrom(from.uicontrolgetvisibilityrequest());
      break;
    }
    case kGetProcessInfoRequest: {
      mutable_getprocessinforequest()->::AnselIpc::GetProcessInfoRequest::MergeFrom(from.getprocessinforequest());
      break;
    }
    case kGetScreenResolutionRequest: {
      mutable_getscreenresolutionrequest()->::AnselIpc::GetScreenResolutionRequest::MergeFrom(from.getscreenresolutionrequest());
      break;
    }
    case kIsAnselModdingAvailableRequest: {
      mutable_isanselmoddingavailablerequest()->::AnselIpc::IsAnselModdingAvailableRequest::MergeFrom(from.isanselmoddingavailablerequest());
      break;
    }
    case kSetGridOfThirdsEnabledRequest: {
      mutable_setgridofthirdsenabledrequest()->::AnselIpc::SetGridOfThirdsEnabledRequest::MergeFrom(from.setgridofthirdsenabledrequest());
      break;
    }
    case kResetEntireStackRequest: {
      mutable_resetentirestackrequest()->::AnselIpc::ResetEntireStackRequest::MergeFrom(from.resetentirestackrequest());
      break;
    }
    case kGetFeatureSetRequest: {
      mutable_getfeaturesetrequest()->::AnselIpc::GetFeatureSetRequest::MergeFrom(from.getfeaturesetrequest());
      break;
    }
    case kSetStyleTransferEnabledRequest: {
      mutable_setstyletransferenabledrequest()->::AnselIpc::SetStyleTransferEnabledRequest::MergeFrom(from.setstyletransferenabledrequest());
      break;
    }
    case kSetStyleTransferStyleRequest: {
      mutable_setstyletransferstylerequest()->::AnselIpc::SetStyleTransferStyleRequest::MergeFrom(from.setstyletransferstylerequest());
      break;
    }
    case kGetStyleTransferModelListRequest: {
      mutable_getstyletransfermodellistrequest()->::AnselIpc::GetStyleTransferModelListRequest::MergeFrom(from.getstyletransfermodellistrequest());
      break;
    }
    case kSetStyleTransferModelRequest: {
      mutable_setstyletransfermodelrequest()->::AnselIpc::SetStyleTransferModelRequest::MergeFrom(from.setstyletransfermodelrequest());
      break;
    }
    case kStyleTransferStatusRequest: {
      mutable_styletransferstatusrequest()->::AnselIpc::StyleTransferStatusRequest::MergeFrom(from.styletransferstatusrequest());
      break;
    }
    case kInsertFilterRequest: {
      mutable_insertfilterrequest()->::AnselIpc::InsertFilterRequest::MergeFrom(from.insertfilterrequest());
      break;
    }
    case kRemoveFilterRequest: {
      mutable_removefilterrequest()->::AnselIpc::RemoveFilterRequest::MergeFrom(from.removefilterrequest());
      break;
    }
    case kMoveFilterRequest: {
      mutable_movefilterrequest()->::AnselIpc::MoveFilterRequest::MergeFrom(from.movefilterrequest());
      break;
    }
    case kGetStackInfoRequest: {
      mutable_getstackinforequest()->::AnselIpc::GetStackInfoRequest::MergeFrom(from.getstackinforequest());
      break;
    }
    case kEstimateCaptureRequest: {
      mutable_estimatecapturerequest()->::AnselIpc::EstimateCaptureRequest::MergeFrom(from.estimatecapturerequest());
      break;
    }
    case kUiControlRemoveAllRequest: {
      mutable_uicontrolremoveallrequest()->::AnselIpc::UIControlRemoveAllRequest::MergeFrom(from.uicontrolremoveallrequest());
      break;
    }
    case kGetSettingsRequest: {
      mutable_getsettingsrequest()->::AnselIpc::GetSettingsRequest::MergeFrom(from.getsettingsrequest());
      break;
    }
    case kAnselStatusReportRequest: {
      mutable_anselstatusreportrequest()->::AnselIpc::AnselStatusReportRequest::MergeFrom(from.anselstatusreportrequest());
      break;
    }
    case kStyleTransferSideloadChoiceRequest: {
      mutable_styletransfersideloadchoicerequest()->::AnselIpc::StyleTransferSideloadChoiceRequest::MergeFrom(from.styletransfersideloadchoicerequest());
      break;
    }
    case kStyleTransferSideloadProgressRequest: {
      mutable_styletransfersideloadprogressrequest()->::AnselIpc::StyleTransferSideloadProgressRequest::MergeFrom(from.styletransfersideloadprogressrequest());
      break;
    }
    case kUpdateRollRequest: {
      mutable_updaterollrequest()->::AnselIpc::UpdateRollRequest::MergeFrom(from.updaterollrequest());
      break;
    }
    case kGetGameSpecificControlsRequest: {
      mutable_getgamespecificcontrolsrequest()->::AnselIpc::GetGameSpecificControlsRequest::MergeFrom(from.getgamespecificcontrolsrequest());
      break;
    }
    case kGetEnabledFeatureSetRequest: {
      mutable_getenabledfeaturesetrequest()->::AnselIpc::GetEnabledFeatureSetRequest::MergeFrom(from.getenabledfeaturesetrequest());
      break;
    }
    case kUpdateFovRequest: {
      mutable_updatefovrequest()->::AnselIpc::UpdateFovRequest::MergeFrom(from.updatefovrequest());
      break;
    }
    case kAnselReadyRequest: {
      mutable_anselreadyrequest()->::AnselIpc::AnselReadyRequest::MergeFrom(from.anselreadyrequest());
      break;
    }
    case kSetHighQualityRequest: {
      mutable_sethighqualityrequest()->::AnselIpc::SetHighQualityRequest::MergeFrom(from.sethighqualityrequest());
      break;
    }
    case kSetFilterAndAttributesRequest: {
      mutable_setfilterandattributesrequest()->::AnselIpc::SetFilterAndAttributesRequest::MergeFrom(from.setfilterandattributesrequest());
      break;
    }
    case kSetCMSInfoRequest: {
      mutable_setcmsinforequest()->::AnselIpc::SetCMSInfoRequest::MergeFrom(from.setcmsinforequest());
      break;
    }
    case kMultipleInputEventRequest: {
      mutable_multipleinputeventrequest()->::AnselIpc::MultipleInputEventRequest::MergeFrom(from.multipleinputeventrequest());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselIPCRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselIPCRequest::CopyFrom(const AnselIPCRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselIPCRequest::IsInitialized() const {

  if (has_setanselenabledrequest()) {
    if (!this->setanselenabledrequest().IsInitialized()) return false;
  }
  if (has_captureshotrequest()) {
    if (!this->captureshotrequest().IsInitialized()) return false;
  }
  if (has_setfovrequest()) {
    if (!this->setfovrequest().IsInitialized()) return false;
  }
  if (has_setrollrequest()) {
    if (!this->setrollrequest().IsInitialized()) return false;
  }
  if (has_setfilterrequest()) {
    if (!this->setfilterrequest().IsInitialized()) return false;
  }
  if (has_setfilterattributerequest()) {
    if (!this->setfilterattributerequest().IsInitialized()) return false;
  }
  if (has_inputeventrequest()) {
    if (!this->inputeventrequest().IsInitialized()) return false;
  }
  if (has_setlangidrequest()) {
    if (!this->setlangidrequest().IsInitialized()) return false;
  }
  if (has_getfilterinforequest()) {
    if (!this->getfilterinforequest().IsInitialized()) return false;
  }
  if (has_resetfiltervaluesrequest()) {
    if (!this->resetfiltervaluesrequest().IsInitialized()) return false;
  }
  if (has_adduielementrequest()) {
    if (!this->adduielementrequest().IsInitialized()) return false;
  }
  if (has_uireadyrequest()) {
    if (!this->uireadyrequest().IsInitialized()) return false;
  }
  if (has_uicontrolchangedrequest()) {
    if (!this->uicontrolchangedrequest().IsInitialized()) return false;
  }
  if (has_uicontrolsetvisibilityrequest()) {
    if (!this->uicontrolsetvisibilityrequest().IsInitialized()) return false;
  }
  if (has_uicontrolgetvisibilityrequest()) {
    if (!this->uicontrolgetvisibilityrequest().IsInitialized()) return false;
  }
  if (has_setgridofthirdsenabledrequest()) {
    if (!this->setgridofthirdsenabledrequest().IsInitialized()) return false;
  }
  if (has_getfeaturesetrequest()) {
    if (!this->getfeaturesetrequest().IsInitialized()) return false;
  }
  if (has_setstyletransferenabledrequest()) {
    if (!this->setstyletransferenabledrequest().IsInitialized()) return false;
  }
  if (has_setstyletransferstylerequest()) {
    if (!this->setstyletransferstylerequest().IsInitialized()) return false;
  }
  if (has_setstyletransfermodelrequest()) {
    if (!this->setstyletransfermodelrequest().IsInitialized()) return false;
  }
  if (has_styletransferstatusrequest()) {
    if (!this->styletransferstatusrequest().IsInitialized()) return false;
  }
  if (has_insertfilterrequest()) {
    if (!this->insertfilterrequest().IsInitialized()) return false;
  }
  if (has_removefilterrequest()) {
    if (!this->removefilterrequest().IsInitialized()) return false;
  }
  if (has_estimatecapturerequest()) {
    if (!this->estimatecapturerequest().IsInitialized()) return false;
  }
  if (has_anselstatusreportrequest()) {
    if (!this->anselstatusreportrequest().IsInitialized()) return false;
  }
  if (has_styletransfersideloadchoicerequest()) {
    if (!this->styletransfersideloadchoicerequest().IsInitialized()) return false;
  }
  if (has_updaterollrequest()) {
    if (!this->updaterollrequest().IsInitialized()) return false;
  }
  if (has_updatefovrequest()) {
    if (!this->updatefovrequest().IsInitialized()) return false;
  }
  if (has_anselreadyrequest()) {
    if (!this->anselreadyrequest().IsInitialized()) return false;
  }
  if (has_sethighqualityrequest()) {
    if (!this->sethighqualityrequest().IsInitialized()) return false;
  }
  if (has_setfilterandattributesrequest()) {
    if (!this->setfilterandattributesrequest().IsInitialized()) return false;
  }
  if (has_multipleinputeventrequest()) {
    if (!this->multipleinputeventrequest().IsInitialized()) return false;
  }
  return true;
}

void AnselIPCRequest::Swap(AnselIPCRequest* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselIPCRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselIPCRequest_descriptor_;
  metadata.reflection = AnselIPCRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselIPCResponse::kGetFilterListResponseFieldNumber;
const int AnselIPCResponse::kGetHighresResolutionListResponseFieldNumber;
const int AnselIPCResponse::kCaptureShotStartedResponseFieldNumber;
const int AnselIPCResponse::kCaptureShotFinishedResponseFieldNumber;
const int AnselIPCResponse::kCaptureShotProcessingFinishedResponseFieldNumber;
const int AnselIPCResponse::kGet360ResolutionRangeResponseFieldNumber;
const int AnselIPCResponse::kGetFOVRangeResponseFieldNumber;
const int AnselIPCResponse::kSetFOVResponseFieldNumber;
const int AnselIPCResponse::kGetRollRangeResponseFieldNumber;
const int AnselIPCResponse::kSetRollResponseFieldNumber;
const int AnselIPCResponse::kSetAnselEnabledResponseFieldNumber;
const int AnselIPCResponse::kAbortCaptureResponseFieldNumber;
const int AnselIPCResponse::kGetAnselEnabledResponseFieldNumber;
const int AnselIPCResponse::kGetLwrrentFOVResponseFieldNumber;
const int AnselIPCResponse::kCaptureShotProgressResponseFieldNumber;
const int AnselIPCResponse::kLogFilenameResponseFieldNumber;
const int AnselIPCResponse::kSetFilterResponseFieldNumber;
const int AnselIPCResponse::kSetFilterAttributeResponseFieldNumber;
const int AnselIPCResponse::kIsAnselAvailableResponseFieldNumber;
const int AnselIPCResponse::kScreenResolutionChangedResponseFieldNumber;
const int AnselIPCResponse::kGetAnselShotPermissionsResponseFieldNumber;
const int AnselIPCResponse::kInputEventResponseFieldNumber;
const int AnselIPCResponse::kSetLangIdResponseFieldNumber;
const int AnselIPCResponse::kGetFilterInfoResponseFieldNumber;
const int AnselIPCResponse::kResetFilterValuesResponseFieldNumber;
const int AnselIPCResponse::kIsAnselSDKIntegrationAvailableResponseFieldNumber;
const int AnselIPCResponse::kIpcVersionResponseFieldNumber;
const int AnselIPCResponse::kAddUIElementResponseFieldNumber;
const int AnselIPCResponse::kUiReadyResponseFieldNumber;
const int AnselIPCResponse::kUiControlChangedResponseFieldNumber;
const int AnselIPCResponse::kUiControlRemoveResponseFieldNumber;
const int AnselIPCResponse::kUiControlSetVisibilityResponseFieldNumber;
const int AnselIPCResponse::kUiControlGetVisibilityResponseFieldNumber;
const int AnselIPCResponse::kGetProcessInfoResponseFieldNumber;
const int AnselIPCResponse::kGetScreenResolutionResponseFieldNumber;
const int AnselIPCResponse::kIsAnselModdingAvailableResponseFieldNumber;
const int AnselIPCResponse::kSetGridOfThirdsEnabledResponseFieldNumber;
const int AnselIPCResponse::kResetEntireStackResponseFieldNumber;
const int AnselIPCResponse::kGetFeatureSetResponseFieldNumber;
const int AnselIPCResponse::kSetStyleTransferEnabledResponseFieldNumber;
const int AnselIPCResponse::kSetStyleTransferStyleResponseFieldNumber;
const int AnselIPCResponse::kGetStyleTransferModelListResponseFieldNumber;
const int AnselIPCResponse::kSetStyleTransferModelResponseFieldNumber;
const int AnselIPCResponse::kStyleTransferStatusResponseFieldNumber;
const int AnselIPCResponse::kMoveFilterResponseFieldNumber;
const int AnselIPCResponse::kGetStackInfoResponseFieldNumber;
const int AnselIPCResponse::kInsertFilterResponseFieldNumber;
const int AnselIPCResponse::kRemoveFilterResponseFieldNumber;
const int AnselIPCResponse::kReportErrorResponseFieldNumber;
const int AnselIPCResponse::kEstimateCaptureResponseFieldNumber;
const int AnselIPCResponse::kUiControlRemoveAllResponseFieldNumber;
const int AnselIPCResponse::kGetSettingsResponseFieldNumber;
const int AnselIPCResponse::kAnselStatusReportResponseFieldNumber;
const int AnselIPCResponse::kStyleTransferSideloadChoiceResponseFieldNumber;
const int AnselIPCResponse::kStyleTransferSideloadProgressResponseFieldNumber;
const int AnselIPCResponse::kUpdateRollResponseFieldNumber;
const int AnselIPCResponse::kGetEnabledFeatureSetResponseFieldNumber;
const int AnselIPCResponse::kUpdateFovResponseFieldNumber;
const int AnselIPCResponse::kAnselReadyResponseFieldNumber;
const int AnselIPCResponse::kSetHighQualityResponseFieldNumber;
const int AnselIPCResponse::kSetFilterAndAttributesResponseFieldNumber;
const int AnselIPCResponse::kSetCMSInfoResponseFieldNumber;
#endif  // !_MSC_VER

AnselIPCResponse::AnselIPCResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselIPCResponse)
}

void AnselIPCResponse::InitAsDefaultInstance() {
  AnselIPCResponse_default_oneof_instance_->getfilterlistresponse_ = const_cast< ::AnselIpc::GetFilterListResponse*>(&::AnselIpc::GetFilterListResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->gethighresresolutionlistresponse_ = const_cast< ::AnselIpc::GetHighresResolutionListResponse*>(&::AnselIpc::GetHighresResolutionListResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->captureshotstartedresponse_ = const_cast< ::AnselIpc::CaptureShotStartedResponse*>(&::AnselIpc::CaptureShotStartedResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->captureshotfinishedresponse_ = const_cast< ::AnselIpc::CaptureShotFinishedResponse*>(&::AnselIpc::CaptureShotFinishedResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->captureshotprocessingfinishedresponse_ = const_cast< ::AnselIpc::CaptureShotProcessingFinishedResponse*>(&::AnselIpc::CaptureShotProcessingFinishedResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->get360resolutionrangeresponse_ = const_cast< ::AnselIpc::Get360ResolutionRangeResponse*>(&::AnselIpc::Get360ResolutionRangeResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getfovrangeresponse_ = const_cast< ::AnselIpc::GetFOVRangeResponse*>(&::AnselIpc::GetFOVRangeResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setfovresponse_ = const_cast< ::AnselIpc::SetFOVResponse*>(&::AnselIpc::SetFOVResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getrollrangeresponse_ = const_cast< ::AnselIpc::GetRollRangeResponse*>(&::AnselIpc::GetRollRangeResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setrollresponse_ = const_cast< ::AnselIpc::SetRollResponse*>(&::AnselIpc::SetRollResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setanselenabledresponse_ = const_cast< ::AnselIpc::SetAnselEnabledResponse*>(&::AnselIpc::SetAnselEnabledResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->abortcaptureresponse_ = const_cast< ::AnselIpc::AbortCaptureResponse*>(&::AnselIpc::AbortCaptureResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getanselenabledresponse_ = const_cast< ::AnselIpc::GetAnselEnabledResponse*>(&::AnselIpc::GetAnselEnabledResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getlwrrentfovresponse_ = const_cast< ::AnselIpc::GetLwrrentFOVResponse*>(&::AnselIpc::GetLwrrentFOVResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->captureshotprogressresponse_ = const_cast< ::AnselIpc::CaptureShotProgressResponse*>(&::AnselIpc::CaptureShotProgressResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->logfilenameresponse_ = const_cast< ::AnselIpc::LogFilenameResponse*>(&::AnselIpc::LogFilenameResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setfilterresponse_ = const_cast< ::AnselIpc::SetFilterResponse*>(&::AnselIpc::SetFilterResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setfilterattributeresponse_ = const_cast< ::AnselIpc::SetFilterAttributeResponse*>(&::AnselIpc::SetFilterAttributeResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->isanselavailableresponse_ = const_cast< ::AnselIpc::IsAnselAvailableResponse*>(&::AnselIpc::IsAnselAvailableResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->screenresolutionchangedresponse_ = const_cast< ::AnselIpc::ScreenResolutionChangedResponse*>(&::AnselIpc::ScreenResolutionChangedResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getanselshotpermissionsresponse_ = const_cast< ::AnselIpc::GetAnselShotPermissionsResponse*>(&::AnselIpc::GetAnselShotPermissionsResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->inputeventresponse_ = const_cast< ::AnselIpc::InputEventResponse*>(&::AnselIpc::InputEventResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setlangidresponse_ = const_cast< ::AnselIpc::SetLangIdResponse*>(&::AnselIpc::SetLangIdResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getfilterinforesponse_ = const_cast< ::AnselIpc::GetFilterInfoResponse*>(&::AnselIpc::GetFilterInfoResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->resetfiltervaluesresponse_ = const_cast< ::AnselIpc::ResetFilterValuesResponse*>(&::AnselIpc::ResetFilterValuesResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->isanselsdkintegrationavailableresponse_ = const_cast< ::AnselIpc::IsAnselSDKIntegrationAvailableResponse*>(&::AnselIpc::IsAnselSDKIntegrationAvailableResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->ipcversionresponse_ = const_cast< ::AnselIpc::IpcVersionResponse*>(&::AnselIpc::IpcVersionResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->adduielementresponse_ = const_cast< ::AnselIpc::AddUIElementResponse*>(&::AnselIpc::AddUIElementResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uireadyresponse_ = const_cast< ::AnselIpc::UIReadyResponse*>(&::AnselIpc::UIReadyResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uicontrolchangedresponse_ = const_cast< ::AnselIpc::UIControlChangedResponse*>(&::AnselIpc::UIControlChangedResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uicontrolremoveresponse_ = const_cast< ::AnselIpc::UIControlRemoveResponse*>(&::AnselIpc::UIControlRemoveResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uicontrolsetvisibilityresponse_ = const_cast< ::AnselIpc::UIControlSetVisibilityResponse*>(&::AnselIpc::UIControlSetVisibilityResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uicontrolgetvisibilityresponse_ = const_cast< ::AnselIpc::UIControlGetVisibilityResponse*>(&::AnselIpc::UIControlGetVisibilityResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getprocessinforesponse_ = const_cast< ::AnselIpc::GetProcessInfoResponse*>(&::AnselIpc::GetProcessInfoResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getscreenresolutionresponse_ = const_cast< ::AnselIpc::GetScreenResolutionResponse*>(&::AnselIpc::GetScreenResolutionResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->isanselmoddingavailableresponse_ = const_cast< ::AnselIpc::IsAnselModdingAvailableResponse*>(&::AnselIpc::IsAnselModdingAvailableResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setgridofthirdsenabledresponse_ = const_cast< ::AnselIpc::SetGridOfThirdsEnabledResponse*>(&::AnselIpc::SetGridOfThirdsEnabledResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->resetentirestackresponse_ = const_cast< ::AnselIpc::ResetEntireStackResponse*>(&::AnselIpc::ResetEntireStackResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getfeaturesetresponse_ = const_cast< ::AnselIpc::GetFeatureSetResponse*>(&::AnselIpc::GetFeatureSetResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setstyletransferenabledresponse_ = const_cast< ::AnselIpc::SetStyleTransferEnabledResponse*>(&::AnselIpc::SetStyleTransferEnabledResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setstyletransferstyleresponse_ = const_cast< ::AnselIpc::SetStyleTransferStyleResponse*>(&::AnselIpc::SetStyleTransferStyleResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getstyletransfermodellistresponse_ = const_cast< ::AnselIpc::GetStyleTransferModelListResponse*>(&::AnselIpc::GetStyleTransferModelListResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setstyletransfermodelresponse_ = const_cast< ::AnselIpc::SetStyleTransferModelResponse*>(&::AnselIpc::SetStyleTransferModelResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->styletransferstatusresponse_ = const_cast< ::AnselIpc::StyleTransferStatusResponse*>(&::AnselIpc::StyleTransferStatusResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->movefilterresponse_ = const_cast< ::AnselIpc::MoveFilterResponse*>(&::AnselIpc::MoveFilterResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getstackinforesponse_ = const_cast< ::AnselIpc::GetStackInfoResponse*>(&::AnselIpc::GetStackInfoResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->insertfilterresponse_ = const_cast< ::AnselIpc::InsertFilterResponse*>(&::AnselIpc::InsertFilterResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->removefilterresponse_ = const_cast< ::AnselIpc::RemoveFilterResponse*>(&::AnselIpc::RemoveFilterResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->reporterrorresponse_ = const_cast< ::AnselIpc::ReportErrorResponse*>(&::AnselIpc::ReportErrorResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->estimatecaptureresponse_ = const_cast< ::AnselIpc::EstimateCaptureResponse*>(&::AnselIpc::EstimateCaptureResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->uicontrolremoveallresponse_ = const_cast< ::AnselIpc::UIControlRemoveAllResponse*>(&::AnselIpc::UIControlRemoveAllResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getsettingsresponse_ = const_cast< ::AnselIpc::GetSettingsResponse*>(&::AnselIpc::GetSettingsResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->anselstatusreportresponse_ = const_cast< ::AnselIpc::AnselStatusReportResponse*>(&::AnselIpc::AnselStatusReportResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->styletransfersideloadchoiceresponse_ = const_cast< ::AnselIpc::StyleTransferSideloadChoiceResponse*>(&::AnselIpc::StyleTransferSideloadChoiceResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->styletransfersideloadprogressresponse_ = const_cast< ::AnselIpc::StyleTransferSideloadProgressResponse*>(&::AnselIpc::StyleTransferSideloadProgressResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->updaterollresponse_ = const_cast< ::AnselIpc::UpdateRollResponse*>(&::AnselIpc::UpdateRollResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->getenabledfeaturesetresponse_ = const_cast< ::AnselIpc::GetEnabledFeatureSetResponse*>(&::AnselIpc::GetEnabledFeatureSetResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->updatefovresponse_ = const_cast< ::AnselIpc::UpdateFovResponse*>(&::AnselIpc::UpdateFovResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->anselreadyresponse_ = const_cast< ::AnselIpc::AnselReadyResponse*>(&::AnselIpc::AnselReadyResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->sethighqualityresponse_ = const_cast< ::AnselIpc::SetHighQualityResponse*>(&::AnselIpc::SetHighQualityResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setfilterandattributesresponse_ = const_cast< ::AnselIpc::SetFilterAndAttributesResponse*>(&::AnselIpc::SetFilterAndAttributesResponse::default_instance());
  AnselIPCResponse_default_oneof_instance_->setcmsinforesponse_ = const_cast< ::AnselIpc::SetCMSInfoResponse*>(&::AnselIpc::SetCMSInfoResponse::default_instance());
}

AnselIPCResponse::AnselIPCResponse(const AnselIPCResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselIPCResponse)
}

void AnselIPCResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_response();
}

AnselIPCResponse::~AnselIPCResponse() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselIPCResponse)
  SharedDtor();
}

void AnselIPCResponse::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
  if (this != default_instance_) {
  }
}

void AnselIPCResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselIPCResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselIPCResponse_descriptor_;
}

const AnselIPCResponse& AnselIPCResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselIPCResponse* AnselIPCResponse::default_instance_ = NULL;

AnselIPCResponse* AnselIPCResponse::New() const {
  return new AnselIPCResponse;
}

void AnselIPCResponse::clear_response() {
  switch(response_case()) {
    case kGetFilterListResponse: {
      delete response_.getfilterlistresponse_;
      break;
    }
    case kGetHighresResolutionListResponse: {
      delete response_.gethighresresolutionlistresponse_;
      break;
    }
    case kCaptureShotStartedResponse: {
      delete response_.captureshotstartedresponse_;
      break;
    }
    case kCaptureShotFinishedResponse: {
      delete response_.captureshotfinishedresponse_;
      break;
    }
    case kCaptureShotProcessingFinishedResponse: {
      delete response_.captureshotprocessingfinishedresponse_;
      break;
    }
    case kGet360ResolutionRangeResponse: {
      delete response_.get360resolutionrangeresponse_;
      break;
    }
    case kGetFOVRangeResponse: {
      delete response_.getfovrangeresponse_;
      break;
    }
    case kSetFOVResponse: {
      delete response_.setfovresponse_;
      break;
    }
    case kGetRollRangeResponse: {
      delete response_.getrollrangeresponse_;
      break;
    }
    case kSetRollResponse: {
      delete response_.setrollresponse_;
      break;
    }
    case kSetAnselEnabledResponse: {
      delete response_.setanselenabledresponse_;
      break;
    }
    case kAbortCaptureResponse: {
      delete response_.abortcaptureresponse_;
      break;
    }
    case kGetAnselEnabledResponse: {
      delete response_.getanselenabledresponse_;
      break;
    }
    case kGetLwrrentFOVResponse: {
      delete response_.getlwrrentfovresponse_;
      break;
    }
    case kCaptureShotProgressResponse: {
      delete response_.captureshotprogressresponse_;
      break;
    }
    case kLogFilenameResponse: {
      delete response_.logfilenameresponse_;
      break;
    }
    case kSetFilterResponse: {
      delete response_.setfilterresponse_;
      break;
    }
    case kSetFilterAttributeResponse: {
      delete response_.setfilterattributeresponse_;
      break;
    }
    case kIsAnselAvailableResponse: {
      delete response_.isanselavailableresponse_;
      break;
    }
    case kScreenResolutionChangedResponse: {
      delete response_.screenresolutionchangedresponse_;
      break;
    }
    case kGetAnselShotPermissionsResponse: {
      delete response_.getanselshotpermissionsresponse_;
      break;
    }
    case kInputEventResponse: {
      delete response_.inputeventresponse_;
      break;
    }
    case kSetLangIdResponse: {
      delete response_.setlangidresponse_;
      break;
    }
    case kGetFilterInfoResponse: {
      delete response_.getfilterinforesponse_;
      break;
    }
    case kResetFilterValuesResponse: {
      delete response_.resetfiltervaluesresponse_;
      break;
    }
    case kIsAnselSDKIntegrationAvailableResponse: {
      delete response_.isanselsdkintegrationavailableresponse_;
      break;
    }
    case kIpcVersionResponse: {
      delete response_.ipcversionresponse_;
      break;
    }
    case kAddUIElementResponse: {
      delete response_.adduielementresponse_;
      break;
    }
    case kUiReadyResponse: {
      delete response_.uireadyresponse_;
      break;
    }
    case kUiControlChangedResponse: {
      delete response_.uicontrolchangedresponse_;
      break;
    }
    case kUiControlRemoveResponse: {
      delete response_.uicontrolremoveresponse_;
      break;
    }
    case kUiControlSetVisibilityResponse: {
      delete response_.uicontrolsetvisibilityresponse_;
      break;
    }
    case kUiControlGetVisibilityResponse: {
      delete response_.uicontrolgetvisibilityresponse_;
      break;
    }
    case kGetProcessInfoResponse: {
      delete response_.getprocessinforesponse_;
      break;
    }
    case kGetScreenResolutionResponse: {
      delete response_.getscreenresolutionresponse_;
      break;
    }
    case kIsAnselModdingAvailableResponse: {
      delete response_.isanselmoddingavailableresponse_;
      break;
    }
    case kSetGridOfThirdsEnabledResponse: {
      delete response_.setgridofthirdsenabledresponse_;
      break;
    }
    case kResetEntireStackResponse: {
      delete response_.resetentirestackresponse_;
      break;
    }
    case kGetFeatureSetResponse: {
      delete response_.getfeaturesetresponse_;
      break;
    }
    case kSetStyleTransferEnabledResponse: {
      delete response_.setstyletransferenabledresponse_;
      break;
    }
    case kSetStyleTransferStyleResponse: {
      delete response_.setstyletransferstyleresponse_;
      break;
    }
    case kGetStyleTransferModelListResponse: {
      delete response_.getstyletransfermodellistresponse_;
      break;
    }
    case kSetStyleTransferModelResponse: {
      delete response_.setstyletransfermodelresponse_;
      break;
    }
    case kStyleTransferStatusResponse: {
      delete response_.styletransferstatusresponse_;
      break;
    }
    case kMoveFilterResponse: {
      delete response_.movefilterresponse_;
      break;
    }
    case kGetStackInfoResponse: {
      delete response_.getstackinforesponse_;
      break;
    }
    case kInsertFilterResponse: {
      delete response_.insertfilterresponse_;
      break;
    }
    case kRemoveFilterResponse: {
      delete response_.removefilterresponse_;
      break;
    }
    case kReportErrorResponse: {
      delete response_.reporterrorresponse_;
      break;
    }
    case kEstimateCaptureResponse: {
      delete response_.estimatecaptureresponse_;
      break;
    }
    case kUiControlRemoveAllResponse: {
      delete response_.uicontrolremoveallresponse_;
      break;
    }
    case kGetSettingsResponse: {
      delete response_.getsettingsresponse_;
      break;
    }
    case kAnselStatusReportResponse: {
      delete response_.anselstatusreportresponse_;
      break;
    }
    case kStyleTransferSideloadChoiceResponse: {
      delete response_.styletransfersideloadchoiceresponse_;
      break;
    }
    case kStyleTransferSideloadProgressResponse: {
      delete response_.styletransfersideloadprogressresponse_;
      break;
    }
    case kUpdateRollResponse: {
      delete response_.updaterollresponse_;
      break;
    }
    case kGetEnabledFeatureSetResponse: {
      delete response_.getenabledfeaturesetresponse_;
      break;
    }
    case kUpdateFovResponse: {
      delete response_.updatefovresponse_;
      break;
    }
    case kAnselReadyResponse: {
      delete response_.anselreadyresponse_;
      break;
    }
    case kSetHighQualityResponse: {
      delete response_.sethighqualityresponse_;
      break;
    }
    case kSetFilterAndAttributesResponse: {
      delete response_.setfilterandattributesresponse_;
      break;
    }
    case kSetCMSInfoResponse: {
      delete response_.setcmsinforesponse_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void AnselIPCResponse::Clear() {
  clear_response();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselIPCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselIPCResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AnselIpc.GetFilterListResponse getFilterListResponse = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfilterlistresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_getHighresResolutionListResponse;
        break;
      }

      // optional .AnselIpc.GetHighresResolutionListResponse getHighresResolutionListResponse = 2;
      case 2: {
        if (tag == 18) {
         parse_getHighresResolutionListResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gethighresresolutionlistresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_captureShotStartedResponse;
        break;
      }

      // optional .AnselIpc.CaptureShotStartedResponse captureShotStartedResponse = 3;
      case 3: {
        if (tag == 26) {
         parse_captureShotStartedResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_captureshotstartedresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_captureShotFinishedResponse;
        break;
      }

      // optional .AnselIpc.CaptureShotFinishedResponse captureShotFinishedResponse = 4;
      case 4: {
        if (tag == 34) {
         parse_captureShotFinishedResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_captureshotfinishedresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_captureShotProcessingFinishedResponse;
        break;
      }

      // optional .AnselIpc.CaptureShotProcessingFinishedResponse captureShotProcessingFinishedResponse = 5;
      case 5: {
        if (tag == 42) {
         parse_captureShotProcessingFinishedResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_captureshotprocessingfinishedresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_get360ResolutionRangeResponse;
        break;
      }

      // optional .AnselIpc.Get360ResolutionRangeResponse get360ResolutionRangeResponse = 6;
      case 6: {
        if (tag == 50) {
         parse_get360ResolutionRangeResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get360resolutionrangeresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_getFOVRangeResponse;
        break;
      }

      // optional .AnselIpc.GetFOVRangeResponse getFOVRangeResponse = 7;
      case 7: {
        if (tag == 58) {
         parse_getFOVRangeResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfovrangeresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_setFOVResponse;
        break;
      }

      // optional .AnselIpc.SetFOVResponse setFOVResponse = 8;
      case 8: {
        if (tag == 66) {
         parse_setFOVResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfovresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_getRollRangeResponse;
        break;
      }

      // optional .AnselIpc.GetRollRangeResponse getRollRangeResponse = 9;
      case 9: {
        if (tag == 74) {
         parse_getRollRangeResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getrollrangeresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_setRollResponse;
        break;
      }

      // optional .AnselIpc.SetRollResponse setRollResponse = 10;
      case 10: {
        if (tag == 82) {
         parse_setRollResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setrollresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_setAnselEnabledResponse;
        break;
      }

      // optional .AnselIpc.SetAnselEnabledResponse setAnselEnabledResponse = 11;
      case 11: {
        if (tag == 90) {
         parse_setAnselEnabledResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setanselenabledresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_abortCaptureResponse;
        break;
      }

      // optional .AnselIpc.AbortCaptureResponse abortCaptureResponse = 12;
      case 12: {
        if (tag == 98) {
         parse_abortCaptureResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_abortcaptureresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_getAnselEnabledResponse;
        break;
      }

      // optional .AnselIpc.GetAnselEnabledResponse getAnselEnabledResponse = 13;
      case 13: {
        if (tag == 106) {
         parse_getAnselEnabledResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getanselenabledresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_getLwrrentFOVResponse;
        break;
      }

      // optional .AnselIpc.GetLwrrentFOVResponse getLwrrentFOVResponse = 14;
      case 14: {
        if (tag == 114) {
         parse_getLwrrentFOVResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getlwrrentfovresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_captureShotProgressResponse;
        break;
      }

      // optional .AnselIpc.CaptureShotProgressResponse captureShotProgressResponse = 15;
      case 15: {
        if (tag == 122) {
         parse_captureShotProgressResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_captureshotprogressresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_logFilenameResponse;
        break;
      }

      // optional .AnselIpc.LogFilenameResponse logFilenameResponse = 16;
      case 16: {
        if (tag == 130) {
         parse_logFilenameResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_logfilenameresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_setFilterResponse;
        break;
      }

      // optional .AnselIpc.SetFilterResponse setFilterResponse = 17;
      case 17: {
        if (tag == 138) {
         parse_setFilterResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_setFilterAttributeResponse;
        break;
      }

      // optional .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponse = 18;
      case 18: {
        if (tag == 146) {
         parse_setFilterAttributeResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterattributeresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_isAnselAvailableResponse;
        break;
      }

      // optional .AnselIpc.IsAnselAvailableResponse isAnselAvailableResponse = 19;
      case 19: {
        if (tag == 154) {
         parse_isAnselAvailableResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselavailableresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_screenResolutionChangedResponse;
        break;
      }

      // optional .AnselIpc.ScreenResolutionChangedResponse screenResolutionChangedResponse = 20;
      case 20: {
        if (tag == 162) {
         parse_screenResolutionChangedResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_screenresolutionchangedresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_getAnselShotPermissionsResponse;
        break;
      }

      // optional .AnselIpc.GetAnselShotPermissionsResponse getAnselShotPermissionsResponse = 21;
      case 21: {
        if (tag == 170) {
         parse_getAnselShotPermissionsResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getanselshotpermissionsresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_inputEventResponse;
        break;
      }

      // optional .AnselIpc.InputEventResponse inputEventResponse = 22;
      case 22: {
        if (tag == 178) {
         parse_inputEventResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inputeventresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(186)) goto parse_setLangIdResponse;
        break;
      }

      // optional .AnselIpc.SetLangIdResponse setLangIdResponse = 23;
      case 23: {
        if (tag == 186) {
         parse_setLangIdResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setlangidresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_getFilterInfoResponse;
        break;
      }

      // optional .AnselIpc.GetFilterInfoResponse getFilterInfoResponse = 24;
      case 24: {
        if (tag == 194) {
         parse_getFilterInfoResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfilterinforesponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(202)) goto parse_resetFilterValuesResponse;
        break;
      }

      // optional .AnselIpc.ResetFilterValuesResponse resetFilterValuesResponse = 25;
      case 25: {
        if (tag == 202) {
         parse_resetFilterValuesResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resetfiltervaluesresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(210)) goto parse_isAnselSDKIntegrationAvailableResponse;
        break;
      }

      // optional .AnselIpc.IsAnselSDKIntegrationAvailableResponse isAnselSDKIntegrationAvailableResponse = 26;
      case 26: {
        if (tag == 210) {
         parse_isAnselSDKIntegrationAvailableResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselsdkintegrationavailableresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(218)) goto parse_ipcVersionResponse;
        break;
      }

      // optional .AnselIpc.IpcVersionResponse ipcVersionResponse = 27;
      case 27: {
        if (tag == 218) {
         parse_ipcVersionResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ipcversionresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(226)) goto parse_addUIElementResponse;
        break;
      }

      // optional .AnselIpc.AddUIElementResponse addUIElementResponse = 28;
      case 28: {
        if (tag == 226) {
         parse_addUIElementResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_adduielementresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(234)) goto parse_uiReadyResponse;
        break;
      }

      // optional .AnselIpc.UIReadyResponse uiReadyResponse = 29;
      case 29: {
        if (tag == 234) {
         parse_uiReadyResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uireadyresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(242)) goto parse_uiControlChangedResponse;
        break;
      }

      // optional .AnselIpc.UIControlChangedResponse uiControlChangedResponse = 30;
      case 30: {
        if (tag == 242) {
         parse_uiControlChangedResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolchangedresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_uiControlRemoveResponse;
        break;
      }

      // optional .AnselIpc.UIControlRemoveResponse uiControlRemoveResponse = 31;
      case 31: {
        if (tag == 250) {
         parse_uiControlRemoveResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolremoveresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(258)) goto parse_uiControlSetVisibilityResponse;
        break;
      }

      // optional .AnselIpc.UIControlSetVisibilityResponse uiControlSetVisibilityResponse = 32;
      case 32: {
        if (tag == 258) {
         parse_uiControlSetVisibilityResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolsetvisibilityresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(266)) goto parse_uiControlGetVisibilityResponse;
        break;
      }

      // optional .AnselIpc.UIControlGetVisibilityResponse uiControlGetVisibilityResponse = 33;
      case 33: {
        if (tag == 266) {
         parse_uiControlGetVisibilityResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolgetvisibilityresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(274)) goto parse_getProcessInfoResponse;
        break;
      }

      // optional .AnselIpc.GetProcessInfoResponse getProcessInfoResponse = 34;
      case 34: {
        if (tag == 274) {
         parse_getProcessInfoResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getprocessinforesponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(282)) goto parse_getScreenResolutionResponse;
        break;
      }

      // optional .AnselIpc.GetScreenResolutionResponse getScreenResolutionResponse = 35;
      case 35: {
        if (tag == 282) {
         parse_getScreenResolutionResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getscreenresolutionresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(290)) goto parse_isAnselModdingAvailableResponse;
        break;
      }

      // optional .AnselIpc.IsAnselModdingAvailableResponse isAnselModdingAvailableResponse = 36;
      case 36: {
        if (tag == 290) {
         parse_isAnselModdingAvailableResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_isanselmoddingavailableresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(298)) goto parse_setGridOfThirdsEnabledResponse;
        break;
      }

      // optional .AnselIpc.SetGridOfThirdsEnabledResponse setGridOfThirdsEnabledResponse = 37;
      case 37: {
        if (tag == 298) {
         parse_setGridOfThirdsEnabledResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setgridofthirdsenabledresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(306)) goto parse_resetEntireStackResponse;
        break;
      }

      // optional .AnselIpc.ResetEntireStackResponse resetEntireStackResponse = 38;
      case 38: {
        if (tag == 306) {
         parse_resetEntireStackResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resetentirestackresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(314)) goto parse_getFeatureSetResponse;
        break;
      }

      // optional .AnselIpc.GetFeatureSetResponse getFeatureSetResponse = 39;
      case 39: {
        if (tag == 314) {
         parse_getFeatureSetResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getfeaturesetresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(322)) goto parse_setStyleTransferEnabledResponse;
        break;
      }

      // optional .AnselIpc.SetStyleTransferEnabledResponse setStyleTransferEnabledResponse = 40;
      case 40: {
        if (tag == 322) {
         parse_setStyleTransferEnabledResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransferenabledresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(330)) goto parse_setStyleTransferStyleResponse;
        break;
      }

      // optional .AnselIpc.SetStyleTransferStyleResponse setStyleTransferStyleResponse = 41;
      case 41: {
        if (tag == 330) {
         parse_setStyleTransferStyleResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransferstyleresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(338)) goto parse_getStyleTransferModelListResponse;
        break;
      }

      // optional .AnselIpc.GetStyleTransferModelListResponse getStyleTransferModelListResponse = 42;
      case 42: {
        if (tag == 338) {
         parse_getStyleTransferModelListResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getstyletransfermodellistresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(346)) goto parse_setStyleTransferModelResponse;
        break;
      }

      // optional .AnselIpc.SetStyleTransferModelResponse setStyleTransferModelResponse = 43;
      case 43: {
        if (tag == 346) {
         parse_setStyleTransferModelResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setstyletransfermodelresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(354)) goto parse_styleTransferStatusResponse;
        break;
      }

      // optional .AnselIpc.StyleTransferStatusResponse styleTransferStatusResponse = 44;
      case 44: {
        if (tag == 354) {
         parse_styleTransferStatusResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransferstatusresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(362)) goto parse_moveFilterResponse;
        break;
      }

      // optional .AnselIpc.MoveFilterResponse moveFilterResponse = 45;
      case 45: {
        if (tag == 362) {
         parse_moveFilterResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_movefilterresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(370)) goto parse_getStackInfoResponse;
        break;
      }

      // optional .AnselIpc.GetStackInfoResponse getStackInfoResponse = 46;
      case 46: {
        if (tag == 370) {
         parse_getStackInfoResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getstackinforesponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(378)) goto parse_insertFilterResponse;
        break;
      }

      // optional .AnselIpc.InsertFilterResponse insertFilterResponse = 47;
      case 47: {
        if (tag == 378) {
         parse_insertFilterResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_insertfilterresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(386)) goto parse_removeFilterResponse;
        break;
      }

      // optional .AnselIpc.RemoveFilterResponse removeFilterResponse = 48;
      case 48: {
        if (tag == 386) {
         parse_removeFilterResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_removefilterresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(394)) goto parse_reportErrorResponse;
        break;
      }

      // optional .AnselIpc.ReportErrorResponse reportErrorResponse = 49;
      case 49: {
        if (tag == 394) {
         parse_reportErrorResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reporterrorresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_estimateCaptureResponse;
        break;
      }

      // optional .AnselIpc.EstimateCaptureResponse estimateCaptureResponse = 50;
      case 50: {
        if (tag == 402) {
         parse_estimateCaptureResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_estimatecaptureresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_uiControlRemoveAllResponse;
        break;
      }

      // optional .AnselIpc.UIControlRemoveAllResponse uiControlRemoveAllResponse = 51;
      case 51: {
        if (tag == 410) {
         parse_uiControlRemoveAllResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_uicontrolremoveallresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_getSettingsResponse;
        break;
      }

      // optional .AnselIpc.GetSettingsResponse getSettingsResponse = 52;
      case 52: {
        if (tag == 418) {
         parse_getSettingsResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsettingsresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(426)) goto parse_anselStatusReportResponse;
        break;
      }

      // optional .AnselIpc.AnselStatusReportResponse anselStatusReportResponse = 53;
      case 53: {
        if (tag == 426) {
         parse_anselStatusReportResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anselstatusreportresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_styleTransferSideloadChoiceResponse;
        break;
      }

      // optional .AnselIpc.StyleTransferSideloadChoiceResponse styleTransferSideloadChoiceResponse = 54;
      case 54: {
        if (tag == 434) {
         parse_styleTransferSideloadChoiceResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransfersideloadchoiceresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(442)) goto parse_styleTransferSideloadProgressResponse;
        break;
      }

      // optional .AnselIpc.StyleTransferSideloadProgressResponse styleTransferSideloadProgressResponse = 55;
      case 55: {
        if (tag == 442) {
         parse_styleTransferSideloadProgressResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_styletransfersideloadprogressresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(450)) goto parse_updateRollResponse;
        break;
      }

      // optional .AnselIpc.UpdateRollResponse updateRollResponse = 56;
      case 56: {
        if (tag == 450) {
         parse_updateRollResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updaterollresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(458)) goto parse_getEnabledFeatureSetResponse;
        break;
      }

      // optional .AnselIpc.GetEnabledFeatureSetResponse getEnabledFeatureSetResponse = 57;
      case 57: {
        if (tag == 458) {
         parse_getEnabledFeatureSetResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getenabledfeaturesetresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(466)) goto parse_updateFovResponse;
        break;
      }

      // optional .AnselIpc.UpdateFovResponse updateFovResponse = 58;
      case 58: {
        if (tag == 466) {
         parse_updateFovResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updatefovresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(474)) goto parse_anselReadyResponse;
        break;
      }

      // optional .AnselIpc.AnselReadyResponse anselReadyResponse = 59;
      case 59: {
        if (tag == 474) {
         parse_anselReadyResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_anselreadyresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(482)) goto parse_setHighQualityResponse;
        break;
      }

      // optional .AnselIpc.SetHighQualityResponse setHighQualityResponse = 60;
      case 60: {
        if (tag == 482) {
         parse_setHighQualityResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sethighqualityresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(490)) goto parse_setFilterAndAttributesResponse;
        break;
      }

      // optional .AnselIpc.SetFilterAndAttributesResponse setFilterAndAttributesResponse = 61;
      case 61: {
        if (tag == 490) {
         parse_setFilterAndAttributesResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setfilterandattributesresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(498)) goto parse_setCMSInfoResponse;
        break;
      }

      // optional .AnselIpc.SetCMSInfoResponse setCMSInfoResponse = 62;
      case 62: {
        if (tag == 498) {
         parse_setCMSInfoResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setcmsinforesponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselIPCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselIPCResponse)
  return false;
#undef DO_
}

void AnselIPCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselIPCResponse)
  // optional .AnselIpc.GetFilterListResponse getFilterListResponse = 1;
  if (has_getfilterlistresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->getfilterlistresponse(), output);
  }

  // optional .AnselIpc.GetHighresResolutionListResponse getHighresResolutionListResponse = 2;
  if (has_gethighresresolutionlistresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gethighresresolutionlistresponse(), output);
  }

  // optional .AnselIpc.CaptureShotStartedResponse captureShotStartedResponse = 3;
  if (has_captureshotstartedresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->captureshotstartedresponse(), output);
  }

  // optional .AnselIpc.CaptureShotFinishedResponse captureShotFinishedResponse = 4;
  if (has_captureshotfinishedresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->captureshotfinishedresponse(), output);
  }

  // optional .AnselIpc.CaptureShotProcessingFinishedResponse captureShotProcessingFinishedResponse = 5;
  if (has_captureshotprocessingfinishedresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->captureshotprocessingfinishedresponse(), output);
  }

  // optional .AnselIpc.Get360ResolutionRangeResponse get360ResolutionRangeResponse = 6;
  if (has_get360resolutionrangeresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->get360resolutionrangeresponse(), output);
  }

  // optional .AnselIpc.GetFOVRangeResponse getFOVRangeResponse = 7;
  if (has_getfovrangeresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->getfovrangeresponse(), output);
  }

  // optional .AnselIpc.SetFOVResponse setFOVResponse = 8;
  if (has_setfovresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->setfovresponse(), output);
  }

  // optional .AnselIpc.GetRollRangeResponse getRollRangeResponse = 9;
  if (has_getrollrangeresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->getrollrangeresponse(), output);
  }

  // optional .AnselIpc.SetRollResponse setRollResponse = 10;
  if (has_setrollresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->setrollresponse(), output);
  }

  // optional .AnselIpc.SetAnselEnabledResponse setAnselEnabledResponse = 11;
  if (has_setanselenabledresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->setanselenabledresponse(), output);
  }

  // optional .AnselIpc.AbortCaptureResponse abortCaptureResponse = 12;
  if (has_abortcaptureresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->abortcaptureresponse(), output);
  }

  // optional .AnselIpc.GetAnselEnabledResponse getAnselEnabledResponse = 13;
  if (has_getanselenabledresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->getanselenabledresponse(), output);
  }

  // optional .AnselIpc.GetLwrrentFOVResponse getLwrrentFOVResponse = 14;
  if (has_getlwrrentfovresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->getlwrrentfovresponse(), output);
  }

  // optional .AnselIpc.CaptureShotProgressResponse captureShotProgressResponse = 15;
  if (has_captureshotprogressresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->captureshotprogressresponse(), output);
  }

  // optional .AnselIpc.LogFilenameResponse logFilenameResponse = 16;
  if (has_logfilenameresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->logfilenameresponse(), output);
  }

  // optional .AnselIpc.SetFilterResponse setFilterResponse = 17;
  if (has_setfilterresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->setfilterresponse(), output);
  }

  // optional .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponse = 18;
  if (has_setfilterattributeresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->setfilterattributeresponse(), output);
  }

  // optional .AnselIpc.IsAnselAvailableResponse isAnselAvailableResponse = 19;
  if (has_isanselavailableresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->isanselavailableresponse(), output);
  }

  // optional .AnselIpc.ScreenResolutionChangedResponse screenResolutionChangedResponse = 20;
  if (has_screenresolutionchangedresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->screenresolutionchangedresponse(), output);
  }

  // optional .AnselIpc.GetAnselShotPermissionsResponse getAnselShotPermissionsResponse = 21;
  if (has_getanselshotpermissionsresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->getanselshotpermissionsresponse(), output);
  }

  // optional .AnselIpc.InputEventResponse inputEventResponse = 22;
  if (has_inputeventresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->inputeventresponse(), output);
  }

  // optional .AnselIpc.SetLangIdResponse setLangIdResponse = 23;
  if (has_setlangidresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->setlangidresponse(), output);
  }

  // optional .AnselIpc.GetFilterInfoResponse getFilterInfoResponse = 24;
  if (has_getfilterinforesponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->getfilterinforesponse(), output);
  }

  // optional .AnselIpc.ResetFilterValuesResponse resetFilterValuesResponse = 25;
  if (has_resetfiltervaluesresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->resetfiltervaluesresponse(), output);
  }

  // optional .AnselIpc.IsAnselSDKIntegrationAvailableResponse isAnselSDKIntegrationAvailableResponse = 26;
  if (has_isanselsdkintegrationavailableresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->isanselsdkintegrationavailableresponse(), output);
  }

  // optional .AnselIpc.IpcVersionResponse ipcVersionResponse = 27;
  if (has_ipcversionresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->ipcversionresponse(), output);
  }

  // optional .AnselIpc.AddUIElementResponse addUIElementResponse = 28;
  if (has_adduielementresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->adduielementresponse(), output);
  }

  // optional .AnselIpc.UIReadyResponse uiReadyResponse = 29;
  if (has_uireadyresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->uireadyresponse(), output);
  }

  // optional .AnselIpc.UIControlChangedResponse uiControlChangedResponse = 30;
  if (has_uicontrolchangedresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->uicontrolchangedresponse(), output);
  }

  // optional .AnselIpc.UIControlRemoveResponse uiControlRemoveResponse = 31;
  if (has_uicontrolremoveresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->uicontrolremoveresponse(), output);
  }

  // optional .AnselIpc.UIControlSetVisibilityResponse uiControlSetVisibilityResponse = 32;
  if (has_uicontrolsetvisibilityresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->uicontrolsetvisibilityresponse(), output);
  }

  // optional .AnselIpc.UIControlGetVisibilityResponse uiControlGetVisibilityResponse = 33;
  if (has_uicontrolgetvisibilityresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->uicontrolgetvisibilityresponse(), output);
  }

  // optional .AnselIpc.GetProcessInfoResponse getProcessInfoResponse = 34;
  if (has_getprocessinforesponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->getprocessinforesponse(), output);
  }

  // optional .AnselIpc.GetScreenResolutionResponse getScreenResolutionResponse = 35;
  if (has_getscreenresolutionresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->getscreenresolutionresponse(), output);
  }

  // optional .AnselIpc.IsAnselModdingAvailableResponse isAnselModdingAvailableResponse = 36;
  if (has_isanselmoddingavailableresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->isanselmoddingavailableresponse(), output);
  }

  // optional .AnselIpc.SetGridOfThirdsEnabledResponse setGridOfThirdsEnabledResponse = 37;
  if (has_setgridofthirdsenabledresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->setgridofthirdsenabledresponse(), output);
  }

  // optional .AnselIpc.ResetEntireStackResponse resetEntireStackResponse = 38;
  if (has_resetentirestackresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38, this->resetentirestackresponse(), output);
  }

  // optional .AnselIpc.GetFeatureSetResponse getFeatureSetResponse = 39;
  if (has_getfeaturesetresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39, this->getfeaturesetresponse(), output);
  }

  // optional .AnselIpc.SetStyleTransferEnabledResponse setStyleTransferEnabledResponse = 40;
  if (has_setstyletransferenabledresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->setstyletransferenabledresponse(), output);
  }

  // optional .AnselIpc.SetStyleTransferStyleResponse setStyleTransferStyleResponse = 41;
  if (has_setstyletransferstyleresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, this->setstyletransferstyleresponse(), output);
  }

  // optional .AnselIpc.GetStyleTransferModelListResponse getStyleTransferModelListResponse = 42;
  if (has_getstyletransfermodellistresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, this->getstyletransfermodellistresponse(), output);
  }

  // optional .AnselIpc.SetStyleTransferModelResponse setStyleTransferModelResponse = 43;
  if (has_setstyletransfermodelresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, this->setstyletransfermodelresponse(), output);
  }

  // optional .AnselIpc.StyleTransferStatusResponse styleTransferStatusResponse = 44;
  if (has_styletransferstatusresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->styletransferstatusresponse(), output);
  }

  // optional .AnselIpc.MoveFilterResponse moveFilterResponse = 45;
  if (has_movefilterresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, this->movefilterresponse(), output);
  }

  // optional .AnselIpc.GetStackInfoResponse getStackInfoResponse = 46;
  if (has_getstackinforesponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46, this->getstackinforesponse(), output);
  }

  // optional .AnselIpc.InsertFilterResponse insertFilterResponse = 47;
  if (has_insertfilterresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47, this->insertfilterresponse(), output);
  }

  // optional .AnselIpc.RemoveFilterResponse removeFilterResponse = 48;
  if (has_removefilterresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48, this->removefilterresponse(), output);
  }

  // optional .AnselIpc.ReportErrorResponse reportErrorResponse = 49;
  if (has_reporterrorresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49, this->reporterrorresponse(), output);
  }

  // optional .AnselIpc.EstimateCaptureResponse estimateCaptureResponse = 50;
  if (has_estimatecaptureresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->estimatecaptureresponse(), output);
  }

  // optional .AnselIpc.UIControlRemoveAllResponse uiControlRemoveAllResponse = 51;
  if (has_uicontrolremoveallresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->uicontrolremoveallresponse(), output);
  }

  // optional .AnselIpc.GetSettingsResponse getSettingsResponse = 52;
  if (has_getsettingsresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->getsettingsresponse(), output);
  }

  // optional .AnselIpc.AnselStatusReportResponse anselStatusReportResponse = 53;
  if (has_anselstatusreportresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, this->anselstatusreportresponse(), output);
  }

  // optional .AnselIpc.StyleTransferSideloadChoiceResponse styleTransferSideloadChoiceResponse = 54;
  if (has_styletransfersideloadchoiceresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->styletransfersideloadchoiceresponse(), output);
  }

  // optional .AnselIpc.StyleTransferSideloadProgressResponse styleTransferSideloadProgressResponse = 55;
  if (has_styletransfersideloadprogressresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55, this->styletransfersideloadprogressresponse(), output);
  }

  // optional .AnselIpc.UpdateRollResponse updateRollResponse = 56;
  if (has_updaterollresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56, this->updaterollresponse(), output);
  }

  // optional .AnselIpc.GetEnabledFeatureSetResponse getEnabledFeatureSetResponse = 57;
  if (has_getenabledfeaturesetresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57, this->getenabledfeaturesetresponse(), output);
  }

  // optional .AnselIpc.UpdateFovResponse updateFovResponse = 58;
  if (has_updatefovresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58, this->updatefovresponse(), output);
  }

  // optional .AnselIpc.AnselReadyResponse anselReadyResponse = 59;
  if (has_anselreadyresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59, this->anselreadyresponse(), output);
  }

  // optional .AnselIpc.SetHighQualityResponse setHighQualityResponse = 60;
  if (has_sethighqualityresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->sethighqualityresponse(), output);
  }

  // optional .AnselIpc.SetFilterAndAttributesResponse setFilterAndAttributesResponse = 61;
  if (has_setfilterandattributesresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      61, this->setfilterandattributesresponse(), output);
  }

  // optional .AnselIpc.SetCMSInfoResponse setCMSInfoResponse = 62;
  if (has_setcmsinforesponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62, this->setcmsinforesponse(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselIPCResponse)
}

::google::protobuf::uint8* AnselIPCResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselIPCResponse)
  // optional .AnselIpc.GetFilterListResponse getFilterListResponse = 1;
  if (has_getfilterlistresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->getfilterlistresponse(), target);
  }

  // optional .AnselIpc.GetHighresResolutionListResponse getHighresResolutionListResponse = 2;
  if (has_gethighresresolutionlistresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->gethighresresolutionlistresponse(), target);
  }

  // optional .AnselIpc.CaptureShotStartedResponse captureShotStartedResponse = 3;
  if (has_captureshotstartedresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->captureshotstartedresponse(), target);
  }

  // optional .AnselIpc.CaptureShotFinishedResponse captureShotFinishedResponse = 4;
  if (has_captureshotfinishedresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->captureshotfinishedresponse(), target);
  }

  // optional .AnselIpc.CaptureShotProcessingFinishedResponse captureShotProcessingFinishedResponse = 5;
  if (has_captureshotprocessingfinishedresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->captureshotprocessingfinishedresponse(), target);
  }

  // optional .AnselIpc.Get360ResolutionRangeResponse get360ResolutionRangeResponse = 6;
  if (has_get360resolutionrangeresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->get360resolutionrangeresponse(), target);
  }

  // optional .AnselIpc.GetFOVRangeResponse getFOVRangeResponse = 7;
  if (has_getfovrangeresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->getfovrangeresponse(), target);
  }

  // optional .AnselIpc.SetFOVResponse setFOVResponse = 8;
  if (has_setfovresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->setfovresponse(), target);
  }

  // optional .AnselIpc.GetRollRangeResponse getRollRangeResponse = 9;
  if (has_getrollrangeresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->getrollrangeresponse(), target);
  }

  // optional .AnselIpc.SetRollResponse setRollResponse = 10;
  if (has_setrollresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->setrollresponse(), target);
  }

  // optional .AnselIpc.SetAnselEnabledResponse setAnselEnabledResponse = 11;
  if (has_setanselenabledresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->setanselenabledresponse(), target);
  }

  // optional .AnselIpc.AbortCaptureResponse abortCaptureResponse = 12;
  if (has_abortcaptureresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->abortcaptureresponse(), target);
  }

  // optional .AnselIpc.GetAnselEnabledResponse getAnselEnabledResponse = 13;
  if (has_getanselenabledresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->getanselenabledresponse(), target);
  }

  // optional .AnselIpc.GetLwrrentFOVResponse getLwrrentFOVResponse = 14;
  if (has_getlwrrentfovresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->getlwrrentfovresponse(), target);
  }

  // optional .AnselIpc.CaptureShotProgressResponse captureShotProgressResponse = 15;
  if (has_captureshotprogressresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->captureshotprogressresponse(), target);
  }

  // optional .AnselIpc.LogFilenameResponse logFilenameResponse = 16;
  if (has_logfilenameresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->logfilenameresponse(), target);
  }

  // optional .AnselIpc.SetFilterResponse setFilterResponse = 17;
  if (has_setfilterresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->setfilterresponse(), target);
  }

  // optional .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponse = 18;
  if (has_setfilterattributeresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->setfilterattributeresponse(), target);
  }

  // optional .AnselIpc.IsAnselAvailableResponse isAnselAvailableResponse = 19;
  if (has_isanselavailableresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->isanselavailableresponse(), target);
  }

  // optional .AnselIpc.ScreenResolutionChangedResponse screenResolutionChangedResponse = 20;
  if (has_screenresolutionchangedresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->screenresolutionchangedresponse(), target);
  }

  // optional .AnselIpc.GetAnselShotPermissionsResponse getAnselShotPermissionsResponse = 21;
  if (has_getanselshotpermissionsresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->getanselshotpermissionsresponse(), target);
  }

  // optional .AnselIpc.InputEventResponse inputEventResponse = 22;
  if (has_inputeventresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->inputeventresponse(), target);
  }

  // optional .AnselIpc.SetLangIdResponse setLangIdResponse = 23;
  if (has_setlangidresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->setlangidresponse(), target);
  }

  // optional .AnselIpc.GetFilterInfoResponse getFilterInfoResponse = 24;
  if (has_getfilterinforesponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->getfilterinforesponse(), target);
  }

  // optional .AnselIpc.ResetFilterValuesResponse resetFilterValuesResponse = 25;
  if (has_resetfiltervaluesresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->resetfiltervaluesresponse(), target);
  }

  // optional .AnselIpc.IsAnselSDKIntegrationAvailableResponse isAnselSDKIntegrationAvailableResponse = 26;
  if (has_isanselsdkintegrationavailableresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->isanselsdkintegrationavailableresponse(), target);
  }

  // optional .AnselIpc.IpcVersionResponse ipcVersionResponse = 27;
  if (has_ipcversionresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->ipcversionresponse(), target);
  }

  // optional .AnselIpc.AddUIElementResponse addUIElementResponse = 28;
  if (has_adduielementresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->adduielementresponse(), target);
  }

  // optional .AnselIpc.UIReadyResponse uiReadyResponse = 29;
  if (has_uireadyresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->uireadyresponse(), target);
  }

  // optional .AnselIpc.UIControlChangedResponse uiControlChangedResponse = 30;
  if (has_uicontrolchangedresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->uicontrolchangedresponse(), target);
  }

  // optional .AnselIpc.UIControlRemoveResponse uiControlRemoveResponse = 31;
  if (has_uicontrolremoveresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->uicontrolremoveresponse(), target);
  }

  // optional .AnselIpc.UIControlSetVisibilityResponse uiControlSetVisibilityResponse = 32;
  if (has_uicontrolsetvisibilityresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->uicontrolsetvisibilityresponse(), target);
  }

  // optional .AnselIpc.UIControlGetVisibilityResponse uiControlGetVisibilityResponse = 33;
  if (has_uicontrolgetvisibilityresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->uicontrolgetvisibilityresponse(), target);
  }

  // optional .AnselIpc.GetProcessInfoResponse getProcessInfoResponse = 34;
  if (has_getprocessinforesponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->getprocessinforesponse(), target);
  }

  // optional .AnselIpc.GetScreenResolutionResponse getScreenResolutionResponse = 35;
  if (has_getscreenresolutionresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->getscreenresolutionresponse(), target);
  }

  // optional .AnselIpc.IsAnselModdingAvailableResponse isAnselModdingAvailableResponse = 36;
  if (has_isanselmoddingavailableresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->isanselmoddingavailableresponse(), target);
  }

  // optional .AnselIpc.SetGridOfThirdsEnabledResponse setGridOfThirdsEnabledResponse = 37;
  if (has_setgridofthirdsenabledresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->setgridofthirdsenabledresponse(), target);
  }

  // optional .AnselIpc.ResetEntireStackResponse resetEntireStackResponse = 38;
  if (has_resetentirestackresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        38, this->resetentirestackresponse(), target);
  }

  // optional .AnselIpc.GetFeatureSetResponse getFeatureSetResponse = 39;
  if (has_getfeaturesetresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        39, this->getfeaturesetresponse(), target);
  }

  // optional .AnselIpc.SetStyleTransferEnabledResponse setStyleTransferEnabledResponse = 40;
  if (has_setstyletransferenabledresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        40, this->setstyletransferenabledresponse(), target);
  }

  // optional .AnselIpc.SetStyleTransferStyleResponse setStyleTransferStyleResponse = 41;
  if (has_setstyletransferstyleresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        41, this->setstyletransferstyleresponse(), target);
  }

  // optional .AnselIpc.GetStyleTransferModelListResponse getStyleTransferModelListResponse = 42;
  if (has_getstyletransfermodellistresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        42, this->getstyletransfermodellistresponse(), target);
  }

  // optional .AnselIpc.SetStyleTransferModelResponse setStyleTransferModelResponse = 43;
  if (has_setstyletransfermodelresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        43, this->setstyletransfermodelresponse(), target);
  }

  // optional .AnselIpc.StyleTransferStatusResponse styleTransferStatusResponse = 44;
  if (has_styletransferstatusresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        44, this->styletransferstatusresponse(), target);
  }

  // optional .AnselIpc.MoveFilterResponse moveFilterResponse = 45;
  if (has_movefilterresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        45, this->movefilterresponse(), target);
  }

  // optional .AnselIpc.GetStackInfoResponse getStackInfoResponse = 46;
  if (has_getstackinforesponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        46, this->getstackinforesponse(), target);
  }

  // optional .AnselIpc.InsertFilterResponse insertFilterResponse = 47;
  if (has_insertfilterresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        47, this->insertfilterresponse(), target);
  }

  // optional .AnselIpc.RemoveFilterResponse removeFilterResponse = 48;
  if (has_removefilterresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        48, this->removefilterresponse(), target);
  }

  // optional .AnselIpc.ReportErrorResponse reportErrorResponse = 49;
  if (has_reporterrorresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        49, this->reporterrorresponse(), target);
  }

  // optional .AnselIpc.EstimateCaptureResponse estimateCaptureResponse = 50;
  if (has_estimatecaptureresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        50, this->estimatecaptureresponse(), target);
  }

  // optional .AnselIpc.UIControlRemoveAllResponse uiControlRemoveAllResponse = 51;
  if (has_uicontrolremoveallresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        51, this->uicontrolremoveallresponse(), target);
  }

  // optional .AnselIpc.GetSettingsResponse getSettingsResponse = 52;
  if (has_getsettingsresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        52, this->getsettingsresponse(), target);
  }

  // optional .AnselIpc.AnselStatusReportResponse anselStatusReportResponse = 53;
  if (has_anselstatusreportresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        53, this->anselstatusreportresponse(), target);
  }

  // optional .AnselIpc.StyleTransferSideloadChoiceResponse styleTransferSideloadChoiceResponse = 54;
  if (has_styletransfersideloadchoiceresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        54, this->styletransfersideloadchoiceresponse(), target);
  }

  // optional .AnselIpc.StyleTransferSideloadProgressResponse styleTransferSideloadProgressResponse = 55;
  if (has_styletransfersideloadprogressresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        55, this->styletransfersideloadprogressresponse(), target);
  }

  // optional .AnselIpc.UpdateRollResponse updateRollResponse = 56;
  if (has_updaterollresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        56, this->updaterollresponse(), target);
  }

  // optional .AnselIpc.GetEnabledFeatureSetResponse getEnabledFeatureSetResponse = 57;
  if (has_getenabledfeaturesetresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        57, this->getenabledfeaturesetresponse(), target);
  }

  // optional .AnselIpc.UpdateFovResponse updateFovResponse = 58;
  if (has_updatefovresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        58, this->updatefovresponse(), target);
  }

  // optional .AnselIpc.AnselReadyResponse anselReadyResponse = 59;
  if (has_anselreadyresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        59, this->anselreadyresponse(), target);
  }

  // optional .AnselIpc.SetHighQualityResponse setHighQualityResponse = 60;
  if (has_sethighqualityresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        60, this->sethighqualityresponse(), target);
  }

  // optional .AnselIpc.SetFilterAndAttributesResponse setFilterAndAttributesResponse = 61;
  if (has_setfilterandattributesresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        61, this->setfilterandattributesresponse(), target);
  }

  // optional .AnselIpc.SetCMSInfoResponse setCMSInfoResponse = 62;
  if (has_setcmsinforesponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        62, this->setcmsinforesponse(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselIPCResponse)
  return target;
}

int AnselIPCResponse::ByteSize() const {
  int total_size = 0;

  switch (response_case()) {
    // optional .AnselIpc.GetFilterListResponse getFilterListResponse = 1;
    case kGetFilterListResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfilterlistresponse());
      break;
    }
    // optional .AnselIpc.GetHighresResolutionListResponse getHighresResolutionListResponse = 2;
    case kGetHighresResolutionListResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gethighresresolutionlistresponse());
      break;
    }
    // optional .AnselIpc.CaptureShotStartedResponse captureShotStartedResponse = 3;
    case kCaptureShotStartedResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->captureshotstartedresponse());
      break;
    }
    // optional .AnselIpc.CaptureShotFinishedResponse captureShotFinishedResponse = 4;
    case kCaptureShotFinishedResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->captureshotfinishedresponse());
      break;
    }
    // optional .AnselIpc.CaptureShotProcessingFinishedResponse captureShotProcessingFinishedResponse = 5;
    case kCaptureShotProcessingFinishedResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->captureshotprocessingfinishedresponse());
      break;
    }
    // optional .AnselIpc.Get360ResolutionRangeResponse get360ResolutionRangeResponse = 6;
    case kGet360ResolutionRangeResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->get360resolutionrangeresponse());
      break;
    }
    // optional .AnselIpc.GetFOVRangeResponse getFOVRangeResponse = 7;
    case kGetFOVRangeResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfovrangeresponse());
      break;
    }
    // optional .AnselIpc.SetFOVResponse setFOVResponse = 8;
    case kSetFOVResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfovresponse());
      break;
    }
    // optional .AnselIpc.GetRollRangeResponse getRollRangeResponse = 9;
    case kGetRollRangeResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getrollrangeresponse());
      break;
    }
    // optional .AnselIpc.SetRollResponse setRollResponse = 10;
    case kSetRollResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setrollresponse());
      break;
    }
    // optional .AnselIpc.SetAnselEnabledResponse setAnselEnabledResponse = 11;
    case kSetAnselEnabledResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setanselenabledresponse());
      break;
    }
    // optional .AnselIpc.AbortCaptureResponse abortCaptureResponse = 12;
    case kAbortCaptureResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->abortcaptureresponse());
      break;
    }
    // optional .AnselIpc.GetAnselEnabledResponse getAnselEnabledResponse = 13;
    case kGetAnselEnabledResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getanselenabledresponse());
      break;
    }
    // optional .AnselIpc.GetLwrrentFOVResponse getLwrrentFOVResponse = 14;
    case kGetLwrrentFOVResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getlwrrentfovresponse());
      break;
    }
    // optional .AnselIpc.CaptureShotProgressResponse captureShotProgressResponse = 15;
    case kCaptureShotProgressResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->captureshotprogressresponse());
      break;
    }
    // optional .AnselIpc.LogFilenameResponse logFilenameResponse = 16;
    case kLogFilenameResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->logfilenameresponse());
      break;
    }
    // optional .AnselIpc.SetFilterResponse setFilterResponse = 17;
    case kSetFilterResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterresponse());
      break;
    }
    // optional .AnselIpc.SetFilterAttributeResponse setFilterAttributeResponse = 18;
    case kSetFilterAttributeResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterattributeresponse());
      break;
    }
    // optional .AnselIpc.IsAnselAvailableResponse isAnselAvailableResponse = 19;
    case kIsAnselAvailableResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselavailableresponse());
      break;
    }
    // optional .AnselIpc.ScreenResolutionChangedResponse screenResolutionChangedResponse = 20;
    case kScreenResolutionChangedResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->screenresolutionchangedresponse());
      break;
    }
    // optional .AnselIpc.GetAnselShotPermissionsResponse getAnselShotPermissionsResponse = 21;
    case kGetAnselShotPermissionsResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getanselshotpermissionsresponse());
      break;
    }
    // optional .AnselIpc.InputEventResponse inputEventResponse = 22;
    case kInputEventResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->inputeventresponse());
      break;
    }
    // optional .AnselIpc.SetLangIdResponse setLangIdResponse = 23;
    case kSetLangIdResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setlangidresponse());
      break;
    }
    // optional .AnselIpc.GetFilterInfoResponse getFilterInfoResponse = 24;
    case kGetFilterInfoResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfilterinforesponse());
      break;
    }
    // optional .AnselIpc.ResetFilterValuesResponse resetFilterValuesResponse = 25;
    case kResetFilterValuesResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resetfiltervaluesresponse());
      break;
    }
    // optional .AnselIpc.IsAnselSDKIntegrationAvailableResponse isAnselSDKIntegrationAvailableResponse = 26;
    case kIsAnselSDKIntegrationAvailableResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselsdkintegrationavailableresponse());
      break;
    }
    // optional .AnselIpc.IpcVersionResponse ipcVersionResponse = 27;
    case kIpcVersionResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ipcversionresponse());
      break;
    }
    // optional .AnselIpc.AddUIElementResponse addUIElementResponse = 28;
    case kAddUIElementResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adduielementresponse());
      break;
    }
    // optional .AnselIpc.UIReadyResponse uiReadyResponse = 29;
    case kUiReadyResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uireadyresponse());
      break;
    }
    // optional .AnselIpc.UIControlChangedResponse uiControlChangedResponse = 30;
    case kUiControlChangedResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolchangedresponse());
      break;
    }
    // optional .AnselIpc.UIControlRemoveResponse uiControlRemoveResponse = 31;
    case kUiControlRemoveResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolremoveresponse());
      break;
    }
    // optional .AnselIpc.UIControlSetVisibilityResponse uiControlSetVisibilityResponse = 32;
    case kUiControlSetVisibilityResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolsetvisibilityresponse());
      break;
    }
    // optional .AnselIpc.UIControlGetVisibilityResponse uiControlGetVisibilityResponse = 33;
    case kUiControlGetVisibilityResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolgetvisibilityresponse());
      break;
    }
    // optional .AnselIpc.GetProcessInfoResponse getProcessInfoResponse = 34;
    case kGetProcessInfoResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getprocessinforesponse());
      break;
    }
    // optional .AnselIpc.GetScreenResolutionResponse getScreenResolutionResponse = 35;
    case kGetScreenResolutionResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getscreenresolutionresponse());
      break;
    }
    // optional .AnselIpc.IsAnselModdingAvailableResponse isAnselModdingAvailableResponse = 36;
    case kIsAnselModdingAvailableResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->isanselmoddingavailableresponse());
      break;
    }
    // optional .AnselIpc.SetGridOfThirdsEnabledResponse setGridOfThirdsEnabledResponse = 37;
    case kSetGridOfThirdsEnabledResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setgridofthirdsenabledresponse());
      break;
    }
    // optional .AnselIpc.ResetEntireStackResponse resetEntireStackResponse = 38;
    case kResetEntireStackResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resetentirestackresponse());
      break;
    }
    // optional .AnselIpc.GetFeatureSetResponse getFeatureSetResponse = 39;
    case kGetFeatureSetResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getfeaturesetresponse());
      break;
    }
    // optional .AnselIpc.SetStyleTransferEnabledResponse setStyleTransferEnabledResponse = 40;
    case kSetStyleTransferEnabledResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransferenabledresponse());
      break;
    }
    // optional .AnselIpc.SetStyleTransferStyleResponse setStyleTransferStyleResponse = 41;
    case kSetStyleTransferStyleResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransferstyleresponse());
      break;
    }
    // optional .AnselIpc.GetStyleTransferModelListResponse getStyleTransferModelListResponse = 42;
    case kGetStyleTransferModelListResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getstyletransfermodellistresponse());
      break;
    }
    // optional .AnselIpc.SetStyleTransferModelResponse setStyleTransferModelResponse = 43;
    case kSetStyleTransferModelResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setstyletransfermodelresponse());
      break;
    }
    // optional .AnselIpc.StyleTransferStatusResponse styleTransferStatusResponse = 44;
    case kStyleTransferStatusResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransferstatusresponse());
      break;
    }
    // optional .AnselIpc.MoveFilterResponse moveFilterResponse = 45;
    case kMoveFilterResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->movefilterresponse());
      break;
    }
    // optional .AnselIpc.GetStackInfoResponse getStackInfoResponse = 46;
    case kGetStackInfoResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getstackinforesponse());
      break;
    }
    // optional .AnselIpc.InsertFilterResponse insertFilterResponse = 47;
    case kInsertFilterResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->insertfilterresponse());
      break;
    }
    // optional .AnselIpc.RemoveFilterResponse removeFilterResponse = 48;
    case kRemoveFilterResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->removefilterresponse());
      break;
    }
    // optional .AnselIpc.ReportErrorResponse reportErrorResponse = 49;
    case kReportErrorResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reporterrorresponse());
      break;
    }
    // optional .AnselIpc.EstimateCaptureResponse estimateCaptureResponse = 50;
    case kEstimateCaptureResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->estimatecaptureresponse());
      break;
    }
    // optional .AnselIpc.UIControlRemoveAllResponse uiControlRemoveAllResponse = 51;
    case kUiControlRemoveAllResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->uicontrolremoveallresponse());
      break;
    }
    // optional .AnselIpc.GetSettingsResponse getSettingsResponse = 52;
    case kGetSettingsResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getsettingsresponse());
      break;
    }
    // optional .AnselIpc.AnselStatusReportResponse anselStatusReportResponse = 53;
    case kAnselStatusReportResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anselstatusreportresponse());
      break;
    }
    // optional .AnselIpc.StyleTransferSideloadChoiceResponse styleTransferSideloadChoiceResponse = 54;
    case kStyleTransferSideloadChoiceResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransfersideloadchoiceresponse());
      break;
    }
    // optional .AnselIpc.StyleTransferSideloadProgressResponse styleTransferSideloadProgressResponse = 55;
    case kStyleTransferSideloadProgressResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->styletransfersideloadprogressresponse());
      break;
    }
    // optional .AnselIpc.UpdateRollResponse updateRollResponse = 56;
    case kUpdateRollResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updaterollresponse());
      break;
    }
    // optional .AnselIpc.GetEnabledFeatureSetResponse getEnabledFeatureSetResponse = 57;
    case kGetEnabledFeatureSetResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->getenabledfeaturesetresponse());
      break;
    }
    // optional .AnselIpc.UpdateFovResponse updateFovResponse = 58;
    case kUpdateFovResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updatefovresponse());
      break;
    }
    // optional .AnselIpc.AnselReadyResponse anselReadyResponse = 59;
    case kAnselReadyResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->anselreadyresponse());
      break;
    }
    // optional .AnselIpc.SetHighQualityResponse setHighQualityResponse = 60;
    case kSetHighQualityResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sethighqualityresponse());
      break;
    }
    // optional .AnselIpc.SetFilterAndAttributesResponse setFilterAndAttributesResponse = 61;
    case kSetFilterAndAttributesResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setfilterandattributesresponse());
      break;
    }
    // optional .AnselIpc.SetCMSInfoResponse setCMSInfoResponse = 62;
    case kSetCMSInfoResponse: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->setcmsinforesponse());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselIPCResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselIPCResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselIPCResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselIPCResponse::MergeFrom(const AnselIPCResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.response_case()) {
    case kGetFilterListResponse: {
      mutable_getfilterlistresponse()->::AnselIpc::GetFilterListResponse::MergeFrom(from.getfilterlistresponse());
      break;
    }
    case kGetHighresResolutionListResponse: {
      mutable_gethighresresolutionlistresponse()->::AnselIpc::GetHighresResolutionListResponse::MergeFrom(from.gethighresresolutionlistresponse());
      break;
    }
    case kCaptureShotStartedResponse: {
      mutable_captureshotstartedresponse()->::AnselIpc::CaptureShotStartedResponse::MergeFrom(from.captureshotstartedresponse());
      break;
    }
    case kCaptureShotFinishedResponse: {
      mutable_captureshotfinishedresponse()->::AnselIpc::CaptureShotFinishedResponse::MergeFrom(from.captureshotfinishedresponse());
      break;
    }
    case kCaptureShotProcessingFinishedResponse: {
      mutable_captureshotprocessingfinishedresponse()->::AnselIpc::CaptureShotProcessingFinishedResponse::MergeFrom(from.captureshotprocessingfinishedresponse());
      break;
    }
    case kGet360ResolutionRangeResponse: {
      mutable_get360resolutionrangeresponse()->::AnselIpc::Get360ResolutionRangeResponse::MergeFrom(from.get360resolutionrangeresponse());
      break;
    }
    case kGetFOVRangeResponse: {
      mutable_getfovrangeresponse()->::AnselIpc::GetFOVRangeResponse::MergeFrom(from.getfovrangeresponse());
      break;
    }
    case kSetFOVResponse: {
      mutable_setfovresponse()->::AnselIpc::SetFOVResponse::MergeFrom(from.setfovresponse());
      break;
    }
    case kGetRollRangeResponse: {
      mutable_getrollrangeresponse()->::AnselIpc::GetRollRangeResponse::MergeFrom(from.getrollrangeresponse());
      break;
    }
    case kSetRollResponse: {
      mutable_setrollresponse()->::AnselIpc::SetRollResponse::MergeFrom(from.setrollresponse());
      break;
    }
    case kSetAnselEnabledResponse: {
      mutable_setanselenabledresponse()->::AnselIpc::SetAnselEnabledResponse::MergeFrom(from.setanselenabledresponse());
      break;
    }
    case kAbortCaptureResponse: {
      mutable_abortcaptureresponse()->::AnselIpc::AbortCaptureResponse::MergeFrom(from.abortcaptureresponse());
      break;
    }
    case kGetAnselEnabledResponse: {
      mutable_getanselenabledresponse()->::AnselIpc::GetAnselEnabledResponse::MergeFrom(from.getanselenabledresponse());
      break;
    }
    case kGetLwrrentFOVResponse: {
      mutable_getlwrrentfovresponse()->::AnselIpc::GetLwrrentFOVResponse::MergeFrom(from.getlwrrentfovresponse());
      break;
    }
    case kCaptureShotProgressResponse: {
      mutable_captureshotprogressresponse()->::AnselIpc::CaptureShotProgressResponse::MergeFrom(from.captureshotprogressresponse());
      break;
    }
    case kLogFilenameResponse: {
      mutable_logfilenameresponse()->::AnselIpc::LogFilenameResponse::MergeFrom(from.logfilenameresponse());
      break;
    }
    case kSetFilterResponse: {
      mutable_setfilterresponse()->::AnselIpc::SetFilterResponse::MergeFrom(from.setfilterresponse());
      break;
    }
    case kSetFilterAttributeResponse: {
      mutable_setfilterattributeresponse()->::AnselIpc::SetFilterAttributeResponse::MergeFrom(from.setfilterattributeresponse());
      break;
    }
    case kIsAnselAvailableResponse: {
      mutable_isanselavailableresponse()->::AnselIpc::IsAnselAvailableResponse::MergeFrom(from.isanselavailableresponse());
      break;
    }
    case kScreenResolutionChangedResponse: {
      mutable_screenresolutionchangedresponse()->::AnselIpc::ScreenResolutionChangedResponse::MergeFrom(from.screenresolutionchangedresponse());
      break;
    }
    case kGetAnselShotPermissionsResponse: {
      mutable_getanselshotpermissionsresponse()->::AnselIpc::GetAnselShotPermissionsResponse::MergeFrom(from.getanselshotpermissionsresponse());
      break;
    }
    case kInputEventResponse: {
      mutable_inputeventresponse()->::AnselIpc::InputEventResponse::MergeFrom(from.inputeventresponse());
      break;
    }
    case kSetLangIdResponse: {
      mutable_setlangidresponse()->::AnselIpc::SetLangIdResponse::MergeFrom(from.setlangidresponse());
      break;
    }
    case kGetFilterInfoResponse: {
      mutable_getfilterinforesponse()->::AnselIpc::GetFilterInfoResponse::MergeFrom(from.getfilterinforesponse());
      break;
    }
    case kResetFilterValuesResponse: {
      mutable_resetfiltervaluesresponse()->::AnselIpc::ResetFilterValuesResponse::MergeFrom(from.resetfiltervaluesresponse());
      break;
    }
    case kIsAnselSDKIntegrationAvailableResponse: {
      mutable_isanselsdkintegrationavailableresponse()->::AnselIpc::IsAnselSDKIntegrationAvailableResponse::MergeFrom(from.isanselsdkintegrationavailableresponse());
      break;
    }
    case kIpcVersionResponse: {
      mutable_ipcversionresponse()->::AnselIpc::IpcVersionResponse::MergeFrom(from.ipcversionresponse());
      break;
    }
    case kAddUIElementResponse: {
      mutable_adduielementresponse()->::AnselIpc::AddUIElementResponse::MergeFrom(from.adduielementresponse());
      break;
    }
    case kUiReadyResponse: {
      mutable_uireadyresponse()->::AnselIpc::UIReadyResponse::MergeFrom(from.uireadyresponse());
      break;
    }
    case kUiControlChangedResponse: {
      mutable_uicontrolchangedresponse()->::AnselIpc::UIControlChangedResponse::MergeFrom(from.uicontrolchangedresponse());
      break;
    }
    case kUiControlRemoveResponse: {
      mutable_uicontrolremoveresponse()->::AnselIpc::UIControlRemoveResponse::MergeFrom(from.uicontrolremoveresponse());
      break;
    }
    case kUiControlSetVisibilityResponse: {
      mutable_uicontrolsetvisibilityresponse()->::AnselIpc::UIControlSetVisibilityResponse::MergeFrom(from.uicontrolsetvisibilityresponse());
      break;
    }
    case kUiControlGetVisibilityResponse: {
      mutable_uicontrolgetvisibilityresponse()->::AnselIpc::UIControlGetVisibilityResponse::MergeFrom(from.uicontrolgetvisibilityresponse());
      break;
    }
    case kGetProcessInfoResponse: {
      mutable_getprocessinforesponse()->::AnselIpc::GetProcessInfoResponse::MergeFrom(from.getprocessinforesponse());
      break;
    }
    case kGetScreenResolutionResponse: {
      mutable_getscreenresolutionresponse()->::AnselIpc::GetScreenResolutionResponse::MergeFrom(from.getscreenresolutionresponse());
      break;
    }
    case kIsAnselModdingAvailableResponse: {
      mutable_isanselmoddingavailableresponse()->::AnselIpc::IsAnselModdingAvailableResponse::MergeFrom(from.isanselmoddingavailableresponse());
      break;
    }
    case kSetGridOfThirdsEnabledResponse: {
      mutable_setgridofthirdsenabledresponse()->::AnselIpc::SetGridOfThirdsEnabledResponse::MergeFrom(from.setgridofthirdsenabledresponse());
      break;
    }
    case kResetEntireStackResponse: {
      mutable_resetentirestackresponse()->::AnselIpc::ResetEntireStackResponse::MergeFrom(from.resetentirestackresponse());
      break;
    }
    case kGetFeatureSetResponse: {
      mutable_getfeaturesetresponse()->::AnselIpc::GetFeatureSetResponse::MergeFrom(from.getfeaturesetresponse());
      break;
    }
    case kSetStyleTransferEnabledResponse: {
      mutable_setstyletransferenabledresponse()->::AnselIpc::SetStyleTransferEnabledResponse::MergeFrom(from.setstyletransferenabledresponse());
      break;
    }
    case kSetStyleTransferStyleResponse: {
      mutable_setstyletransferstyleresponse()->::AnselIpc::SetStyleTransferStyleResponse::MergeFrom(from.setstyletransferstyleresponse());
      break;
    }
    case kGetStyleTransferModelListResponse: {
      mutable_getstyletransfermodellistresponse()->::AnselIpc::GetStyleTransferModelListResponse::MergeFrom(from.getstyletransfermodellistresponse());
      break;
    }
    case kSetStyleTransferModelResponse: {
      mutable_setstyletransfermodelresponse()->::AnselIpc::SetStyleTransferModelResponse::MergeFrom(from.setstyletransfermodelresponse());
      break;
    }
    case kStyleTransferStatusResponse: {
      mutable_styletransferstatusresponse()->::AnselIpc::StyleTransferStatusResponse::MergeFrom(from.styletransferstatusresponse());
      break;
    }
    case kMoveFilterResponse: {
      mutable_movefilterresponse()->::AnselIpc::MoveFilterResponse::MergeFrom(from.movefilterresponse());
      break;
    }
    case kGetStackInfoResponse: {
      mutable_getstackinforesponse()->::AnselIpc::GetStackInfoResponse::MergeFrom(from.getstackinforesponse());
      break;
    }
    case kInsertFilterResponse: {
      mutable_insertfilterresponse()->::AnselIpc::InsertFilterResponse::MergeFrom(from.insertfilterresponse());
      break;
    }
    case kRemoveFilterResponse: {
      mutable_removefilterresponse()->::AnselIpc::RemoveFilterResponse::MergeFrom(from.removefilterresponse());
      break;
    }
    case kReportErrorResponse: {
      mutable_reporterrorresponse()->::AnselIpc::ReportErrorResponse::MergeFrom(from.reporterrorresponse());
      break;
    }
    case kEstimateCaptureResponse: {
      mutable_estimatecaptureresponse()->::AnselIpc::EstimateCaptureResponse::MergeFrom(from.estimatecaptureresponse());
      break;
    }
    case kUiControlRemoveAllResponse: {
      mutable_uicontrolremoveallresponse()->::AnselIpc::UIControlRemoveAllResponse::MergeFrom(from.uicontrolremoveallresponse());
      break;
    }
    case kGetSettingsResponse: {
      mutable_getsettingsresponse()->::AnselIpc::GetSettingsResponse::MergeFrom(from.getsettingsresponse());
      break;
    }
    case kAnselStatusReportResponse: {
      mutable_anselstatusreportresponse()->::AnselIpc::AnselStatusReportResponse::MergeFrom(from.anselstatusreportresponse());
      break;
    }
    case kStyleTransferSideloadChoiceResponse: {
      mutable_styletransfersideloadchoiceresponse()->::AnselIpc::StyleTransferSideloadChoiceResponse::MergeFrom(from.styletransfersideloadchoiceresponse());
      break;
    }
    case kStyleTransferSideloadProgressResponse: {
      mutable_styletransfersideloadprogressresponse()->::AnselIpc::StyleTransferSideloadProgressResponse::MergeFrom(from.styletransfersideloadprogressresponse());
      break;
    }
    case kUpdateRollResponse: {
      mutable_updaterollresponse()->::AnselIpc::UpdateRollResponse::MergeFrom(from.updaterollresponse());
      break;
    }
    case kGetEnabledFeatureSetResponse: {
      mutable_getenabledfeaturesetresponse()->::AnselIpc::GetEnabledFeatureSetResponse::MergeFrom(from.getenabledfeaturesetresponse());
      break;
    }
    case kUpdateFovResponse: {
      mutable_updatefovresponse()->::AnselIpc::UpdateFovResponse::MergeFrom(from.updatefovresponse());
      break;
    }
    case kAnselReadyResponse: {
      mutable_anselreadyresponse()->::AnselIpc::AnselReadyResponse::MergeFrom(from.anselreadyresponse());
      break;
    }
    case kSetHighQualityResponse: {
      mutable_sethighqualityresponse()->::AnselIpc::SetHighQualityResponse::MergeFrom(from.sethighqualityresponse());
      break;
    }
    case kSetFilterAndAttributesResponse: {
      mutable_setfilterandattributesresponse()->::AnselIpc::SetFilterAndAttributesResponse::MergeFrom(from.setfilterandattributesresponse());
      break;
    }
    case kSetCMSInfoResponse: {
      mutable_setcmsinforesponse()->::AnselIpc::SetCMSInfoResponse::MergeFrom(from.setcmsinforesponse());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselIPCResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselIPCResponse::CopyFrom(const AnselIPCResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselIPCResponse::IsInitialized() const {

  if (has_gethighresresolutionlistresponse()) {
    if (!this->gethighresresolutionlistresponse().IsInitialized()) return false;
  }
  if (has_captureshotstartedresponse()) {
    if (!this->captureshotstartedresponse().IsInitialized()) return false;
  }
  if (has_captureshotfinishedresponse()) {
    if (!this->captureshotfinishedresponse().IsInitialized()) return false;
  }
  if (has_captureshotprocessingfinishedresponse()) {
    if (!this->captureshotprocessingfinishedresponse().IsInitialized()) return false;
  }
  if (has_get360resolutionrangeresponse()) {
    if (!this->get360resolutionrangeresponse().IsInitialized()) return false;
  }
  if (has_getfovrangeresponse()) {
    if (!this->getfovrangeresponse().IsInitialized()) return false;
  }
  if (has_setfovresponse()) {
    if (!this->setfovresponse().IsInitialized()) return false;
  }
  if (has_getrollrangeresponse()) {
    if (!this->getrollrangeresponse().IsInitialized()) return false;
  }
  if (has_setrollresponse()) {
    if (!this->setrollresponse().IsInitialized()) return false;
  }
  if (has_setanselenabledresponse()) {
    if (!this->setanselenabledresponse().IsInitialized()) return false;
  }
  if (has_abortcaptureresponse()) {
    if (!this->abortcaptureresponse().IsInitialized()) return false;
  }
  if (has_getanselenabledresponse()) {
    if (!this->getanselenabledresponse().IsInitialized()) return false;
  }
  if (has_getlwrrentfovresponse()) {
    if (!this->getlwrrentfovresponse().IsInitialized()) return false;
  }
  if (has_captureshotprogressresponse()) {
    if (!this->captureshotprogressresponse().IsInitialized()) return false;
  }
  if (has_logfilenameresponse()) {
    if (!this->logfilenameresponse().IsInitialized()) return false;
  }
  if (has_setfilterresponse()) {
    if (!this->setfilterresponse().IsInitialized()) return false;
  }
  if (has_setfilterattributeresponse()) {
    if (!this->setfilterattributeresponse().IsInitialized()) return false;
  }
  if (has_isanselavailableresponse()) {
    if (!this->isanselavailableresponse().IsInitialized()) return false;
  }
  if (has_getanselshotpermissionsresponse()) {
    if (!this->getanselshotpermissionsresponse().IsInitialized()) return false;
  }
  if (has_inputeventresponse()) {
    if (!this->inputeventresponse().IsInitialized()) return false;
  }
  if (has_setlangidresponse()) {
    if (!this->setlangidresponse().IsInitialized()) return false;
  }
  if (has_getfilterinforesponse()) {
    if (!this->getfilterinforesponse().IsInitialized()) return false;
  }
  if (has_resetfiltervaluesresponse()) {
    if (!this->resetfiltervaluesresponse().IsInitialized()) return false;
  }
  if (has_isanselsdkintegrationavailableresponse()) {
    if (!this->isanselsdkintegrationavailableresponse().IsInitialized()) return false;
  }
  if (has_ipcversionresponse()) {
    if (!this->ipcversionresponse().IsInitialized()) return false;
  }
  if (has_adduielementresponse()) {
    if (!this->adduielementresponse().IsInitialized()) return false;
  }
  if (has_uicontrolchangedresponse()) {
    if (!this->uicontrolchangedresponse().IsInitialized()) return false;
  }
  if (has_uicontrolremoveresponse()) {
    if (!this->uicontrolremoveresponse().IsInitialized()) return false;
  }
  if (has_uicontrolsetvisibilityresponse()) {
    if (!this->uicontrolsetvisibilityresponse().IsInitialized()) return false;
  }
  if (has_uicontrolgetvisibilityresponse()) {
    if (!this->uicontrolgetvisibilityresponse().IsInitialized()) return false;
  }
  if (has_getprocessinforesponse()) {
    if (!this->getprocessinforesponse().IsInitialized()) return false;
  }
  if (has_getscreenresolutionresponse()) {
    if (!this->getscreenresolutionresponse().IsInitialized()) return false;
  }
  if (has_isanselmoddingavailableresponse()) {
    if (!this->isanselmoddingavailableresponse().IsInitialized()) return false;
  }
  if (has_setgridofthirdsenabledresponse()) {
    if (!this->setgridofthirdsenabledresponse().IsInitialized()) return false;
  }
  if (has_resetentirestackresponse()) {
    if (!this->resetentirestackresponse().IsInitialized()) return false;
  }
  if (has_getfeaturesetresponse()) {
    if (!this->getfeaturesetresponse().IsInitialized()) return false;
  }
  if (has_setstyletransferenabledresponse()) {
    if (!this->setstyletransferenabledresponse().IsInitialized()) return false;
  }
  if (has_setstyletransferstyleresponse()) {
    if (!this->setstyletransferstyleresponse().IsInitialized()) return false;
  }
  if (has_getstyletransfermodellistresponse()) {
    if (!this->getstyletransfermodellistresponse().IsInitialized()) return false;
  }
  if (has_setstyletransfermodelresponse()) {
    if (!this->setstyletransfermodelresponse().IsInitialized()) return false;
  }
  if (has_movefilterresponse()) {
    if (!this->movefilterresponse().IsInitialized()) return false;
  }
  if (has_insertfilterresponse()) {
    if (!this->insertfilterresponse().IsInitialized()) return false;
  }
  if (has_removefilterresponse()) {
    if (!this->removefilterresponse().IsInitialized()) return false;
  }
  if (has_reporterrorresponse()) {
    if (!this->reporterrorresponse().IsInitialized()) return false;
  }
  if (has_estimatecaptureresponse()) {
    if (!this->estimatecaptureresponse().IsInitialized()) return false;
  }
  if (has_uicontrolremoveallresponse()) {
    if (!this->uicontrolremoveallresponse().IsInitialized()) return false;
  }
  if (has_getsettingsresponse()) {
    if (!this->getsettingsresponse().IsInitialized()) return false;
  }
  if (has_anselstatusreportresponse()) {
    if (!this->anselstatusreportresponse().IsInitialized()) return false;
  }
  if (has_styletransfersideloadchoiceresponse()) {
    if (!this->styletransfersideloadchoiceresponse().IsInitialized()) return false;
  }
  if (has_styletransfersideloadprogressresponse()) {
    if (!this->styletransfersideloadprogressresponse().IsInitialized()) return false;
  }
  if (has_updaterollresponse()) {
    if (!this->updaterollresponse().IsInitialized()) return false;
  }
  if (has_getenabledfeaturesetresponse()) {
    if (!this->getenabledfeaturesetresponse().IsInitialized()) return false;
  }
  if (has_updatefovresponse()) {
    if (!this->updatefovresponse().IsInitialized()) return false;
  }
  if (has_anselreadyresponse()) {
    if (!this->anselreadyresponse().IsInitialized()) return false;
  }
  if (has_sethighqualityresponse()) {
    if (!this->sethighqualityresponse().IsInitialized()) return false;
  }
  if (has_setfilterandattributesresponse()) {
    if (!this->setfilterandattributesresponse().IsInitialized()) return false;
  }
  if (has_setcmsinforesponse()) {
    if (!this->setcmsinforesponse().IsInitialized()) return false;
  }
  return true;
}

void AnselIPCResponse::Swap(AnselIPCResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselIPCResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselIPCResponse_descriptor_;
  metadata.reflection = AnselIPCResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnselIPCMessage::kRequestFieldNumber;
const int AnselIPCMessage::kResponseFieldNumber;
#endif  // !_MSC_VER

AnselIPCMessage::AnselIPCMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AnselIpc.AnselIPCMessage)
}

void AnselIPCMessage::InitAsDefaultInstance() {
  AnselIPCMessage_default_oneof_instance_->request_ = const_cast< ::AnselIpc::AnselIPCRequest*>(&::AnselIpc::AnselIPCRequest::default_instance());
  AnselIPCMessage_default_oneof_instance_->response_ = const_cast< ::AnselIpc::AnselIPCResponse*>(&::AnselIpc::AnselIPCResponse::default_instance());
}

AnselIPCMessage::AnselIPCMessage(const AnselIPCMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AnselIpc.AnselIPCMessage)
}

void AnselIPCMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_message();
}

AnselIPCMessage::~AnselIPCMessage() {
  // @@protoc_insertion_point(destructor:AnselIpc.AnselIPCMessage)
  SharedDtor();
}

void AnselIPCMessage::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
  if (this != default_instance_) {
  }
}

void AnselIPCMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnselIPCMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnselIPCMessage_descriptor_;
}

const AnselIPCMessage& AnselIPCMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ipc_2eproto();
  return *default_instance_;
}

AnselIPCMessage* AnselIPCMessage::default_instance_ = NULL;

AnselIPCMessage* AnselIPCMessage::New() const {
  return new AnselIPCMessage;
}

void AnselIPCMessage::clear_message() {
  switch(message_case()) {
    case kRequest: {
      delete message_.request_;
      break;
    }
    case kResponse: {
      delete message_.response_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void AnselIPCMessage::Clear() {
  clear_message();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnselIPCMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AnselIpc.AnselIPCMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithLwtoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .AnselIpc.AnselIPCRequest request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_response;
        break;
      }

      // optional .AnselIpc.AnselIPCResponse response = 2;
      case 2: {
        if (tag == 18) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AnselIpc.AnselIPCMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AnselIpc.AnselIPCMessage)
  return false;
#undef DO_
}

void AnselIPCMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AnselIpc.AnselIPCMessage)
  // optional .AnselIpc.AnselIPCRequest request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->request(), output);
  }

  // optional .AnselIpc.AnselIPCResponse response = 2;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AnselIpc.AnselIPCMessage)
}

::google::protobuf::uint8* AnselIPCMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AnselIpc.AnselIPCMessage)
  // optional .AnselIpc.AnselIPCRequest request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->request(), target);
  }

  // optional .AnselIpc.AnselIPCResponse response = 2;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AnselIpc.AnselIPCMessage)
  return target;
}

int AnselIPCMessage::ByteSize() const {
  int total_size = 0;

  switch (message_case()) {
    // optional .AnselIpc.AnselIPCRequest request = 1;
    case kRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
      break;
    }
    // optional .AnselIpc.AnselIPCResponse response = 2;
    case kResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONLWRRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONLWRRENT_WRITES_END();
  return total_size;
}

void AnselIPCMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnselIPCMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnselIPCMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnselIPCMessage::MergeFrom(const AnselIPCMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.message_case()) {
    case kRequest: {
      mutable_request()->::AnselIpc::AnselIPCRequest::MergeFrom(from.request());
      break;
    }
    case kResponse: {
      mutable_response()->::AnselIpc::AnselIPCResponse::MergeFrom(from.response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnselIPCMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnselIPCMessage::CopyFrom(const AnselIPCMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnselIPCMessage::IsInitialized() const {

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  if (has_response()) {
    if (!this->response().IsInitialized()) return false;
  }
  return true;
}

void AnselIPCMessage::Swap(AnselIPCMessage* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnselIPCMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnselIPCMessage_descriptor_;
  metadata.reflection = AnselIPCMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace AnselIpc

// @@protoc_insertion_point(global_scope)
