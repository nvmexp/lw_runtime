//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// LWPU Ansel shader file
// visit facebook.com/MartyMcModding for news/updates
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Yet Another Chromatic Aberration "YACA" by Marty McFly
// Copyright Â© 2008-2016 Marty McFly
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

struct VSOut
{
    float4 position : SV_Position;
    float2 texcoord: TexCoord;
};

cbuffer globalParams
{
	float2 screenSize;
	float elapsedTime;
	int captureState;
	float4 tileUV;
}
cbuffer ControlBuf
{
	float g_zoom;
}

Texture2D SamplerColor;
SamplerState colorLinearSampler;

// This should move to a centralized file but not appropriate to make that change now.
#ifndef LW_COMMON
#define LW_COMMON

#define CAPTURE_STATE_NOT_STARTED		0
#define CAPTURE_STATE_REGULAR			1
#define CAPTURE_STATE_REGULARSTEREO		2
#define CAPTURE_STATE_HIGHRES			3
#define CAPTURE_STATE_360				4
#define CAPTURE_STATE_360STEREO			5

#endif 

float4 PS_Zoom(VSOut IN) : SV_Target 
{
	float2 texCoords = IN.texcoord.xy;
	float tileSpaceDistortion = g_zoom;
	if (captureState == CAPTURE_STATE_HIGHRES) 
	{
		// Callwlate texture coordinates in the final high-res image space
		texCoords = float2((tileUV.z - tileUV.x) * IN.texcoord.x + tileUV.x, (tileUV.w - tileUV.y) * IN.texcoord.y + tileUV.y);
		
		float imageSpaceDistortStrength = g_zoom;
		float imageSpaceTileWidth = (tileUV.z - tileUV.x);
		tileSpaceDistortion = imageSpaceDistortStrength / imageSpaceTileWidth;
		// We shouldn't allow distortion of more than 0.5 tile (due to overlap)
		if (tileSpaceDistortion > 0.4)
			tileSpaceDistortion = 0.4;
	}
	//center of screen == 0,0 so scaling is easier
	float2 coord = texCoords - 0.5;
	float2 distortion = coord * tileSpaceDistortion;
	
	float4 scenecolor;
	scenecolor.xyz = SamplerColor.Sample(colorLinearSampler, IN.texcoord.xy - distortion).xyz; 

	return scenecolor;
}

