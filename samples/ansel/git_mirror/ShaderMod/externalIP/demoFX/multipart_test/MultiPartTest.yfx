struct VSOut
{
    float4 position : SV_Position;
    float2 texcoord: TexCoord;
};

cbuffer globalParams
{
	float2 screenSize;
	float elapsedTime;
	int captureState;
}

cbuffer controlBuf
{
	float g_sldIntensity;
}

Texture2D txDiffuse;

SamplerState samLinear;
SamplerState samLinearWrap;
SamplerState samNearestClamp;

// This should move to a centralized file but not appropriate to make that change now.
#ifndef LW_COMMON
#define LW_COMMON

#define CAPTURE_STATE_NOT_STARTED		0
#define CAPTURE_STATE_REGULAR			1
#define CAPTURE_STATE_REGULARSTEREO		2
#define CAPTURE_STATE_HIGHRES			3
#define CAPTURE_STATE_360				4
#define CAPTURE_STATE_360STEREO			5

#endif 

float4 PS_RedMonochrome( VSOut frag ): SV_Target
{
	float4 color = txDiffuse.Sample(samLinear, frag.texcoord);
	
	if (captureState == CAPTURE_STATE_REGULAR)
	{
		color = float4(1.0, 0.0, 0.0, 1.0);
	}
	else if (captureState == CAPTURE_STATE_REGULAR)
	{
		color = float4(0.0, 1.0, 0.0, 1.0);
	}
	else if (captureState == CAPTURE_STATE_REGULARSTEREO)
	{
		color = float4(0.0, 0.0, 1.0, 1.0);
	}
	else if (captureState == CAPTURE_STATE_HIGHRES)
	{
		color = float4(1.0, 1.0, 0.0, 1.0);
	}
	else if (captureState == CAPTURE_STATE_360)
	{
		color = float4(1.0, 0.0, 1.0, 1.0);
	}
	else if (captureState == CAPTURE_STATE_360STEREO)
	{
		color = float4(0.0, 1.0, 1.0, 1.0);
	}
	
	return color;
}
