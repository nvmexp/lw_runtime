#
# LWIDIA_COPYRIGHT_BEGIN
#
# Copyright 2008-2017 by LWPU Corporation.  All rights reserved.  All
# information contained herein is proprietary and confidential to LWPU
# Corporation.  Any use, reproduction, or disclosure without the written
# permission of LWPU Corporation is prohibited.
#
# LWIDIA_COPYRIGHT_END
#
# drivers/resman/lwwatch/config/makefile.mk
#
# Run lwwatch-config.pl to build lwwatch-config.h and lwwatch-config.mk
#
# *** Used by lwwatch builds that are lwwatch-config aware
#
# Each platform build will set LWWATCHCFG_DIR, LWWATCHCFG_OUTPUT_DIR and LWWATCHCFG_VERBOSE variables, then 'include' this file.
#
# Makefiles that 'include'/call this file:
#
#    lwalloc/mods/Makefile
#    lwwatch/GNUMakefile

LW_SOURCE ?= $(shell cd ../../..; pwd)

LWWATCHCFG_PERL          ?= $(if $(findstring undefined,$(origin PERL)), perl, $(PERL))
LWWATCHCFG_RM            ?= $(if $(findstring undefined,$(origin RM)), rm, $(RM))
LWWATCHCFG_PROFILE       ?= default
LWWATCHCFG_LWWATCH_ROOT  ?= $(LW_SOURCE)/apps/lwwatch
LWWATCHCFG_DIR           ?= $(LWWATCHCFG_LWWATCH_ROOT)/config
LWWATCHCFG_OUTPUTDIR     ?= $(LWWATCHCFG_DIR)
LWWATCHCFG_VERBOSE       ?= 
LWWATCHCFG_MK            ?= $(LWWATCHCFG_OUTPUTDIR)/lwwatch-config.mk
LWWATCHCFG_RESMAN_ROOT   ?= $(LW_SOURCE)/drivers/resman
LWWATCHCFG_CHIPCFG_ROOT  ?= $(LW_SOURCE)/drivers/common/chip-config
KERNEL_TOOLS_DIR         ?= $(LWWATCHCFG_RESMAN_ROOT)/kernel/inc/tools

# Files we create that should be deleted by 'make clean'.
# May be used by "calling" makefile.
LWWATCHCFG_CLEAN          =
LWWATCHCFG_CLEAN         += $(LWWATCHCFG_OUTPUTDIR)/g_*.h

# table to colwert LWWATCHCFG_VERBOSE into an option for lwwatch-config.pl
_lwwatchcfgVerbosity_quiet       = --quiet
_lwwatchcfgVerbosity_@           = --quiet
_lwwatchcfgVerbosity_default     = 
_lwwatchcfgVerbosity_verbose     = --verbose
_lwwatchcfgVerbosity_veryverbose = --verbose --verbose
_lwwatchcfgVerbosity_            = $(_lwwatchcfgVerbosity_default)
lwwatchcfgVerbosityFlag := $(_lwwatchcfgVerbosity_$(LWWATCHCFG_VERBOSE))

# files that implement lwwatch-config
lwwatchcfgSrcFiles += $(LWWATCHCFG_DIR)/Engines.pm
lwwatchcfgSrcFiles += $(LWWATCHCFG_DIR)/Features.pm
lwwatchcfgSrcFiles += $(LWWATCHCFG_DIR)/ChipsPatch.pm
lwwatchcfgSrcFiles += $(LWWATCHCFG_DIR)/makefile.mk
lwwatchcfgSrcFiles += $(LWWATCHCFG_DIR)/lwwatch-config.cfg

# pull in implementations list of chip-config to supplement $(lwwatchcfgSrcFiles)
include $(LWWATCHCFG_CHIPCFG_ROOT)/Implementation.mk
lwwatchcfgSrcFiles += $(addprefix $(LWWATCHCFG_CHIPCFG_ROOT)/, $(CHIPCONFIG_IMPLEMENTATION))

# update src file list with hal .def files
lwwatchcfgSrcFiles += $(wildcard $(LWWATCHCFG_DIR)/haldefs/*.def)

# update src file list with sources .def files
include $(LWWATCHCFG_DIR)/srcdefs/Srcdefs.mk
lwwatchcfgSrcFiles += $(foreach srcfile,$(LWWATCHCFG_SRCDEFS),$(LWWATCHCFG_DIR)/srcdefs/$(srcfile).def)

# pull in templates list to supplement $(lwwatchcfgSrcFiles)
include $(LWWATCHCFG_DIR)/templates/Templates.mk
lwwatchcfgSrcFiles += $(addprefix $(LWWATCHCFG_DIR)/templates/, $(LWWATCHCFG_TEMPLATES))


### Run chip-config.pl to generate lwwatch-config.mk

# lwwatch-config GZIP option
ifdef GZIP_CMD
RMCFG_GZIP_OPT = --gzip-cmd "$(GZIP_CMD)"
else
RMCFG_GZIP_OPT =
endif

# lwwatch-config invocation args
lwwatchcfgArgs = $(lwwatchcfgVerbosityFlag) \
             --mode lwwatch-config \
             --config $(LWWATCHCFG_DIR)/lwwatch-config.cfg \
             --profile $(LWWATCHCFG_PROFILE) \
             --source-root $(LWWATCHCFG_LWWATCH_ROOT) \
             --output-dir $(LWWATCHCFG_OUTPUTDIR) \
             $(RMCFG_GZIP_OPT)

# generate lwwatch-config.mk and lwwatch-config.h
# NOTE: This rule actually generates a lot more files than this, which aren't
# tracked by GNU make's dependencies.  But that /should/ be okay because:
# a) the include logic described below will ensure all of those files are
#    generated before building any C file when building from scratch
# b) for incremental builds, autogenerated dependencies should trigger
#    rebuilding object files if any other generated files change
$(LWWATCHCFG_MK): $(lwwatchcfgSrcFiles)
	$(LWWATCHCFG_PERL) -I$(LWWATCHCFG_DIR) $(LWWATCHCFG_CHIPCFG_ROOT)/chip-config.pl $(lwwatchcfgArgs)

# g_sources.mk is generated as a side-effect of generating lwwatch-config.mk
$(LWWATCHCFG_OUTPUTDIR)/g_sources.mk: $(LWWATCHCFG_MK)

# Include the generated lwwatch-config.mk.
#
# This actually serves two purposes:
# a) It makes the configuration visible to the makefile (lwwatch doesn't use
#    this lwrrently)
# b) It forces lwwatch-config.mk to be rebuilt if it is out of date, _and_ it
#    forces the makefile to be re-evaluated after doing so (see the GNU make
#    manual's section "How Makefiles Are Remade").  This is critical -- if we
#    used an order-only dependency (specified with "target:|dep") then if the
#    config run were out of date, it would trigger regeneration but wouldn't
#    trigger reevaluation of dependencies to notice which headers were modified
#    and need to trigger object file builds.
include $(LWWATCHCFG_MK)

# If lwwatch-config.mk doesn't exist, the 'include' above will generate a gmake
# warning even though gmake will recreate it.  The warning is unavoidable so we
# include a supplemental msg after gmake's warning so it should be apparent the
# missing lwwatch-config.mk is not a real problem.
#
# FAQ:  Why not use '-include' here to avoid a warning when lwwatch-config.mk
# does not exist?
#
#  '-include' would avoid the warning but it has a very bad side effect: any
#  errors during the regeneration are *ignored*.   So if lwwatchcfg failed with
#  an error, gmake would simply ignore that error and continue with a missing,
#  or even worse, stale, lwwatch-config.mk.
#
ifeq (,$(wildcard $(LWWATCHCFG_MK)))
  $(info )
  $(warning lwwatchcfg: $(notdir $(LWWATCHCFG_MK)) does not exist.  Creating it now ... )
  $(info )
endif

check_lwwatch:
	$(LWWATCHCFG_RM) -f check_lwwatch.succeeded
	$(LWWATCHCFG_PERL) $(LWWATCHCFG_LWWATCH_ROOT)/tools/mcheck/mcheck.pl
	touch check_lwwatch.succeeded

# test targets
.PHONY: _lwwatch_config_all _lwwatch_cfg_clean
_lwwatch_config_all: $(LWWATCHCFG_MK)

_lwwatch_cfg_clean: 
	$(LWWATCHCFG_RM) -f $(LWWATCHCFG_CLEAN)

