# -*- mode: perl; -*-

# LWJPG Hal interface definitions
# For a brief introduction to file format, see README in this directory.

my $lwjpgHal = [

    # per-GPU defaults for LWJPG engine for all interfaces below
    DEFAULTS => [
        # optional defaults for gpus not specifically setup by an interface
        _STUB       => [ CHEETAH, ],
    ],


    # HAL Interfaces
    # ********************************************************************************
    HAL_INTERFACES => [

        IS_VALID_ENGINE_ID => [

            DESCRIPTION   => "Determine if LWJPG engine ID is valid on this GPU",
            RETURN_TYPE   =>  BOOL,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => FALSE,

            _v02_02        => [ GH100, ],
            _v02_03        => [ dADA, ],
            _STUB          => [ ALL, -GH100, -dADA, ],
        ],

        IS_SUPPORTED => [

            DESCRIPTION   => "Determine if LWJPG is supported on this GPU",
            RETURN_TYPE   =>  BOOL,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => FALSE,

            _v02_00        => [ GA100, ],
            _v02_02        => [ GH100, ],
            _v02_03        => [ dADA, ],
            _STUB          => [ ALL, -GA100, -GH100, -dADA, ],
        ],
        
        GET_CLASS_ID => [

            DESCRIPTION   => "Retuns class ID",
            RETURN_TYPE   => LwU32,
            ARGUMENTS     => "void",
            STUB_RETURNS  => ZERO,

            _v02_00        => [ GA100, ],
            _v02_02        => [ GH100, ],
            _v02_03        => [ dADA, ],
            _STUB          => [ ALL, -GA100, -GH100, -dADA, ],
        ],

        DUMP_PRIV => [

            DESCRIPTION   => "Dump LWJPG priv space",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,
            
            _v02_00        => [ GA100, ],
            _v02_02        => [ GH100, ],
            _v02_03        => [ dADA, ],
            _STUB          => [ ALL, -GA100, -GH100, -dADA, ],
        ],

        DUMP_FUSE => [

            DESCRIPTION   => "Dump LWJPG fuse related registers",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,
 
            _v02_02        => [ GH100, ],
            _v02_03        => [ dADA, ],
            _STUB          => [ ALL, -GH100, -dADA, ],
        ],

        IS_PRIV_BLOCKED => [

            DESCRIPTION   => "Determine if LWJPG priv registers are accessible on this GPU",
            RETURN_TYPE   =>  BOOL,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => TRUE,

            LIKE_INTERFACE => DUMP_PRIV,
        ],

        DUMP_IMEM => [

            DESCRIPTION   => "Dump LWJPG instruction memory",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,

            _v02_00        => [ GA100, ],
            _v02_02        => [ dADA, GH100, ],
            _STUB          => [ ALL, -GA100, -GH100, -dADA, ],
        ],

        DUMP_DMEM => [

            DESCRIPTION   => "Dump LWJPG data memory",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,
            
            LIKE_INTERFACE => DUMP_IMEM,
        ],

        PRINT_PRIV => [

            DESCRIPTION   => "Print LWJPG priv space",
            RETURN_TYPE   =>  void,
            ARGUMENTS     => "LwU32, char*, LwU32",

            LIKE_INTERFACE => DUMP_PRIV,
        ],

        TEST_STATE => [

            DESCRIPTION   => "Test if LWJPG engine is in a valid state",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,

            LIKE_INTERFACE => DUMP_PRIV,
        ],

        DISPLAY_HWCFG => [

            DESCRIPTION   => "Display LWJPG hardware configuration",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,

            LIKE_INTERFACE => DUMP_IMEM,
        ],

        DISPLAY_FLCN_SPR => [

            DESCRIPTION   => "Dump LWJPG Special Purpose Registers",
            INTERFACE_TAG => "lwjpgDisplayFlcnSPR",
            RETURN_TYPE   =>  LW_STATUS,
            ARGUMENTS     => "LwU32, LwU32",
            STUB_RETURNS  => LW_ERR_NOT_SUPPORTED,

            LIKE_INTERFACE => DUMP_IMEM,
        ],

    ],   # HAL interfaces

];


# return a reference to the Hal definition
return $lwjpgHal;
