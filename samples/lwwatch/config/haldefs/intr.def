# -*- mode: perl; -*-

my $intrHal = [

    DEFAULTS => [
        _STUB => [ ALL, -TURING_and_later, ],
    ],

    HAL_INTERFACES => [

        INIT => [
            DESCRIPTION     => "intrInit",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "void",

            _TU102          => [ TURING, ],
            _GA100          => [ GA100, ],
            _GA102          => [ AMPERE_thru_ADA, -GA100, ],
            _GH100          => [ GH100, ],
            _GH202          => [ HOPPER_and_later, -GH100, ],
        ],

        SET_INTERRUPT => [
            DESCRIPTION     => "intrSetInterrupt",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwU32",

            _TU102          => [ TURING_and_later, ],
        ],

        CLEAR_INTERRUPT => [
            DESCRIPTION     => "intrClearInterrupt",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwU32",

            _TU102          => [ TURING_and_later, ],
        ],

        ENABLE_INTERRUPT => [
            DESCRIPTION     => "intrEnableInterrupt",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwU32, LwBool",

            _TU102          => [ TURING_and_later, ],
        ],

        DISABLE_INTERRUPT => [
            DESCRIPTION     => "intrDisableInterrupt",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwU32, LwBool",

            _TU102          => [ TURING_and_later, ],
        ],

        DUMP_RAW_REGS => [
            DESCRIPTION     => "intrDumpRawRegs",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwBool",

            _TU102          => [ TURING_and_later, ],
        ],

        PRINT_LIST => [
            DESCRIPTION     => "intrPrintList",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwBool, LwU32, LwBool",

            _TU102          => [ TURING, ],
            _GA100          => [ AMPERE_and_later ],
        ],

        ADD_LWENC => [
            DESCRIPTION     => "intrAddLwenc",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "void",

            _GA102          => [ AMPERE_thru_ADA, -GA100, HOPPER_and_later, -GH100, -GB100],
            _STUB           => [ TURING, GA100, GH100, GB100],
        ],

        ADD_LWJPG => [
            DESCRIPTION     => "intrAddLwjpg",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "void",

            _GA100          => [ GA100, ],
            _GH100          => [ HOPPER_and_later, -GH202 ],
            _STUB           => [ TURING, AMPERE_thru_ADA, -GA100, GH202 ],
        ],

        GET_RUNLIST_INTR_CTRL => [
            DESCRIPTION     => "Get Runlist INTR_CTRL register value",
            RETURN_TYPE     => "LwU32",
            ARGUMENTS       => "LwU32",
            STUB_RETURNS    => ZERO,
            _GA100          => [ AMPERE_thru_ADA, ],
            _GH100          => [ HOPPER_and_later, ],
            _STUB           => [ TURING, ],
        ],

        FETCH_VECTOR_ID => [
            DESCRIPTION     => "Extract interrupt vector ID from INTR_CTRL register",
            RETURN_TYPE     => "LwU32",
            ARGUMENTS       => "LwU32, LwBool *",
            INTERFACE_TAG   => "intrFetchVectorID", # intrFetchVectorID instead of intrFetchVectorId
            STUB_RETURNS    => ZERO,
            _GA100          => [ AMPERE_thru_ADA, ],
            _GH100          => [ HOPPER_and_later, ],
            _STUB           => [ TURING, ],
        ],

        REGISTER => [
            DESCRIPTION     => "Register interrupt information",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "LwU32, LwBool, char *, LwBool, LwBool, LwU32, char *",

            _TU102          => [ TURING, ],
            _GA100          => [ AMPERE_and_later ],
        ],

        INIT_DISC_ALL => [
            DESCRIPTION     => "Init all interrupts for engines discovered in PTOP",
            RETURN_TYPE     => "void",
            ARGUMENTS       => "void",

            _TU102          => [ TURING, ],
            _GA100          => [ AMPERE_and_later, ],
        ],

        # [HACK] stub so that the HAL def struct is not empty on unsupported builds
        STUB => [
            DESCRIPTION     => "intrStub",
            ARGUMENTS       => "void",
            RETURN_TYPE     => "void",
            STUB_RETURNS    => "void",

            _STUB           => [ ALL, ]
        ],
    ],

];

return $intrHal;
