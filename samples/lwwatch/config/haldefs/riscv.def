# -*- mode: perl; -*-

my $riscvHal = [

    DEFAULTS => [
        _STUB => [ ALL ],
    ],

    HAL_INTERFACES => [
        # riscv_adv

        RISCV_IS_SUPPORTED => [
            DESCRIPTION   => "riscvIsSupported",
            INTERFACE_TAG => "riscvIsSupported",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_IS_INSTANCE_SUPPORTED => [
            DESCRIPTION   => "riscvIsInstanceSupported",
            INTERFACE_TAG => "riscvIsInstanceSupported",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "RiscvInstanceType",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100, GA10X, AD10X ],
            _GH100        => [ GH100 ],
            _T234         => [ T234 ],
        ],

        RISCV_IS_ACTIVE => [
            DESCRIPTION   => "riscvIsActive",
            INTERFACE_TAG => "riscvIsActive",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, -GA100, GH100, T234 ],
            _AD10X        => [ AD10X ],
        ],

        RISCV_IS_IN_ICD => [
            DESCRIPTION   => "riscvIsInIcd",
            INTERFACE_TAG => "riscvIsInIcd",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_IS_IN_LS => [
            DESCRIPTION   => "riscvIsInLs",
            INTERFACE_TAG => "riscvIsInLs",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_HAS_MPU_ENABLED => [
            DESCRIPTION   => "riscvHasMpuEnabled",
            INTERFACE_TAG => "riscvHasMpuEnabled",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_DUMP_BREAKPOINT => [
            DESCRIPTION   => "riscvDumpBreakpoint",
            INTERFACE_TAG => "riscvDumpBreakpoint",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_DEFAULT_BP_FLAGS => [
            DESCRIPTION   => "riscvDefaultBpFlags",
            INTERFACE_TAG => "riscvDefaultBpFlags",
            RETURN_TYPE   => "LwU64",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ZERO,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_SET_BREAKPOINT => [
            DESCRIPTION   => "riscvSetBreakpoint",
            INTERFACE_TAG => "riscvSetBreakpoint",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "int, LwU64, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_CLEAR_BREAKPOINT => [
            DESCRIPTION   => "riscvClearBreakpoint",
            INTERFACE_TAG => "riscvClearBreakpoint",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_DUMP_MPU => [
            DESCRIPTION   => "riscvDumpMpu",
            INTERFACE_TAG => "riscvDumpMpu",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_DUMP_PMP => [
            DESCRIPTION   => "riscvDumpPmp",
            INTERFACE_TAG => "riscvDumpPmp",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _STUB         => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100, T234 ],
            _GH100        => [ GH100 ],
        ],

        RISCV_DUMP_IO_PMP => [
            DESCRIPTION   => "riscvDumpIoPmp",
            INTERFACE_TAG => "riscvDumpIoPmp",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _STUB         => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100, T234 ],
            _GH100        => [ GH100 ],
        ],

        RISCV_GET_LS_INFO => [
            DESCRIPTION   => "riscvGetLsInfo",
            INTERFACE_TAG => "riscvGetLsInfo",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_CHECK_BREAKPOINT_FLAG_IS_ENABLED => [
            DESCRIPTION   => "riscvCheckBreakpointFlagIsEnabled",
            INTERFACE_TAG => "riscvCheckBreakpointFlagIsEnabled",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "LwU64",
            STUB_RETURNS  => LW_FALSE,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_DECODE_CSR => [
            DESCRIPTION   => "riscvDecodeCsr",
            INTERFACE_TAG => "riscvDecodeCsr",
            RETURN_TYPE   => "LwS16",
            ARGUMENTS     => "const char *, size_t",
            STUB_RETURNS  => NEG1,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_REG_READ_GDB => [
            DESCRIPTION   => "riscvRegReadGdb",
            INTERFACE_TAG => "riscvRegReadGdb",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_REG_WRITE_GDB => [
            DESCRIPTION   => "riscvRegWriteGdb",
            INTERFACE_TAG => "riscvRegWriteGdb",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_TARGET => [
            DESCRIPTION   => "_riscvTarget",
            INTERFACE_TAG => "_riscvTarget",
            RETURN_TYPE   => "const char *",
            ARGUMENTS     => "LwU64, LwU64",
            STUB_RETURNS  => "NULL",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_BR_STATUS => [
            DESCRIPTION   => "riscvBrStatus",
            INTERFACE_TAG => "riscvBrStatus",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_BR_BOOT => [
            DESCRIPTION   => "riscvBrBoot",
            INTERFACE_TAG => "riscvBrBoot",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_BR_RESET => [
            DESCRIPTION   => "riscvBrReset",
            INTERFACE_TAG => "riscvBrReset",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GA10X        => [ GA10X, -GA100 ],
            _GH100        => [ GH100, T234 ],
            _AD10X        => [ AD10X ],
        ],

        # riscv_bp.c
        TRIGGER_WRITE => [
            DESCRIPTION   => "_triggerWrite",
            INTERFACE_TAG => "_triggerWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU8, LwU64, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_TRIGGER_SET_AT => [
            DESCRIPTION   => "riscvTriggerSetAt",
            INTERFACE_TAG => "riscvTriggerSetAt",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, TRIGGER_EVENT",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_TRIGGER_CLEAR_AT => [
            DESCRIPTION   => "riscvTriggerClearAt",
            INTERFACE_TAG => "riscvTriggerClearAt",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, TRIGGER_EVENT",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],

        ],

        # riscv_gdbmon.c
        MONITOR_READ_COMMS => [
            DESCRIPTION   => "_monitorReadComms",
            INTERFACE_TAG => "_monitorReadComms",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "void",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        MONITOR_WRITE_HOST => [
            DESCRIPTION   => "_monitorWriteHost",
            INTERFACE_TAG => "_monitorWriteHost",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "void",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        # riscv_icd.c
        ICD_READ => [
            DESCRIPTION   => "_icdRead",
            INTERFACE_TAG => "_icdRead",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "ICD_REGS arg1, LwU64 *, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        ICD_WRITE => [
            DESCRIPTION   => "_icdWrite",
            INTERFACE_TAG => "_icdWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "ICD_REGS arg1, LwU64, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        ICD_WAIT_FOR_COMPLETION => [
            DESCRIPTION   => "_icdWaitForCompletion",
            INTERFACE_TAG => "_icdWaitForCompletion",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_READ_RSTAT => [
            DESCRIPTION   => "_icdReadRstat",
            INTERFACE_TAG => "_icdReadRstat",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "ICD_RSTAT no, LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_ICD_R_REG => [
            DESCRIPTION   => "riscvIcdRReg",
            INTERFACE_TAG => "riscvIcdRReg",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_ICD_W_REG => [
            DESCRIPTION   => "riscvIcdWReg",
            INTERFACE_TAG => "riscvIcdWReg",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_ICD_R_F_REG => [
            DESCRIPTION   => "riscvIcdRFReg",
            INTERFACE_TAG => "riscvIcdRFReg",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU32 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        ICD_ICD_W_F_REG => [
            DESCRIPTION   => "riscvIcdWFReg",
            INTERFACE_TAG => "riscvIcdWFReg",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "unsigned, LwU32",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        ICD_RDM_INT => [
            DESCRIPTION   => "_riscvIcdRdmInt",
            INTERFACE_TAG => "_riscvIcdRdmInt",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, void *, ICD_ACCESS_WIDTH width, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100,  GA10X, AD10X, GH100, T234 ],
        ],

        ICD_WDM_INT => [
            DESCRIPTION   => "_riscvIcdWdmInt",
            INTERFACE_TAG => "_riscvIcdWdmInt",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, LwU64, ICD_ACCESS_WIDTH width, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100,  GA10X, AD10X, GH100, T234 ],
        ],

        ICD_RCM => [
            DESCRIPTION   => "riscvIcdRcm",
            INTERFACE_TAG => "riscvIcdRcm",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_WCM => [
            DESCRIPTION   => "riscvIcdWcm",
            INTERFACE_TAG => "riscvIcdWcm",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_W_CSR => [
            DESCRIPTION   => "riscvIcdWcsr",
            INTERFACE_TAG => "riscvIcdWcsr",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU16, LwU64",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_R_CSR => [
            DESCRIPTION   => "riscvIcdRcsr",
            INTERFACE_TAG => "riscvIcdRcsr",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU16, LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_R_PC => [
            DESCRIPTION   => "riscvIcdRPc",
            INTERFACE_TAG => "riscvIcdRPc",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        ICD_DUMP_REGS => [
            DESCRIPTION   => "riscvIcdDumpRegs",
            INTERFACE_TAG => "riscvIcdDumpRegs",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "void",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        # riscv_io.c
        RISCV_BOOT => [
            DESCRIPTION   => "riscvBoot",
            INTERFACE_TAG => "riscvBoot",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU64, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  T234 ],
            _GH100        => [ GH100 ],
        ],

        RISCV_RESET => [
            DESCRIPTION   => "riscvReset",
            INTERFACE_TAG => "riscvReset",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100, GA10X, AD10X ],
            _GH100        => [ GH100, T234 ],
        ],

        RISCV_DUMP_STATE => [
            DESCRIPTION   => "riscvDumpState",
            INTERFACE_TAG => "riscvDumpState",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "void",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  USED_BY_GH100 ],
            _GH100        => [ GH100, T234 ],
        ],

        RISCV_IS_FB_BUSY => [
            DESCRIPTION   => "riscvIsFbBusy",
            INTERFACE_TAG => "riscvIsFbBusy",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  T234 ],
            _GH100        => [ GH100 ],
        ],

        RISCV_IS_BUSY => [
            DESCRIPTION   => "riscvIsBusy",
            INTERFACE_TAG => "riscvIsBusy",
            RETURN_TYPE   => "LwBool",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "LW_FALSE",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100, GA10X, AD10X, USED_BY_GH100 ],
            _GH100        => [ GH100, USED_BY_T234 ],
            _T234         => [ T234 ],
        ],

        RISCV_POPULATE_CORE_INFO => [
            DESCRIPTION   => "riscvPopulateCoreInfo",
            INTERFACE_TAG => "riscvPopulateCoreInfo",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "RiscVInstance *, RiscvInstanceType",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X ],
            _GA100        => [ GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  USED_BY_GH100 ],
            _GH100        => [ GH100 ],
            _T234         => [ T234 ],
        ],

        # riscv_io_dio.c
        RISCV_DIO_READ_WRITE => [
            DESCRIPTION   => "riscvDioReadWrite",
            INTERFACE_TAG => "riscvDioReadWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void *, void *, LwU32, LwU32 *",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _T234         => [ T234 ],
        ],

        # riscv_mem.c
        RISCV_IMEM_READ => [
            DESCRIPTION   => "riscvImemRead",
            INTERFACE_TAG => "riscvImemRead",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, void *, int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_DMEM_READ => [
            DESCRIPTION   => "riscvDmemRead",
            INTERFACE_TAG => "riscvDmemRead",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, void *, int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_EMEM_READ => [
            DESCRIPTION   => "riscvEmemRead",
            INTERFACE_TAG => "riscvEmemRead",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, void *, int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_IMEM_WRITE => [
            DESCRIPTION   => "riscvImemWrite",
            INTERFACE_TAG => "riscvImemWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, const void *, int, LwBool",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        RISCV_DMEM_WRITE => [
            DESCRIPTION   => "riscvDmemWrite",
            INTERFACE_TAG => "riscvDmemWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, const void *, int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],

        ],

        RISCV_EMEM_WRITE => [
            DESCRIPTION   => "riscvEmemWrite",
            INTERFACE_TAG => "riscvEmemWrite",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "LwU32, unsigned, const void *, int",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        # riscv_misc.c
        RISCV_DUMP_CSR => [
            DESCRIPTION   => "riscvDumpCsr",
            INTERFACE_TAG => "riscvDumpCsr",
            RETURN_TYPE   => "void",
            ARGUMENTS     => "void",
            STUB_RETURNS  => void,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        # riscv_trace.c
        RISCV_TRACE_ENABLE => [
            DESCRIPTION   => "riscvTraceEnable",
            INTERFACE_TAG => "riscvTraceEnable",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "TRACE_MODE arg1",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_TRACE_DISABLE => [
            DESCRIPTION   => "riscvTraceDisable",
            INTERFACE_TAG => "riscvTraceDisable",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_TRACE_FLUSH => [
            DESCRIPTION   => "riscvTraceFlush",
            INTERFACE_TAG => "riscvTraceFlush",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        RISCV_TRACE_DUMP => [
            DESCRIPTION   => "riscvTraceDump",
            INTERFACE_TAG => "riscvTraceDump",
            RETURN_TYPE   => "LW_STATUS",
            ARGUMENTS     => "void",
            STUB_RETURNS  => ERROR,
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100 ],
            _GA10X        => [ GA10X, AD10X, -GA100,  GH100, T234 ],
        ],

        # tdbg_legacy_messaging.c
        QUEUE_HEAD => [
            DESCRIPTION   => "_queueHead",
            INTERFACE_TAG => "_queueHead",
            RETURN_TYPE   => "LwU32",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "(LwU32) -1",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        QUEUE_TAIL => [
            DESCRIPTION   => "_queueTail",
            INTERFACE_TAG => "_queueTail",
            RETURN_TYPE   => "LwU32",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "(LwU32) -1",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        MSGQ_HEAD => [
            DESCRIPTION   => "_msgqHead",
            INTERFACE_TAG => "_msgqHead",
            RETURN_TYPE   => "LwU32",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "(LwU32) -1",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        MSGQ_Tail => [
            DESCRIPTION   => "_msgqTail",
            INTERFACE_TAG => "_msgqTail",
            RETURN_TYPE   => "LwU32",
            ARGUMENTS     => "void",
            STUB_RETURNS  => "(LwU32) -1",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _TU10X        => [ TU10X, GA100, GA10X, AD10X, GH100, T234 ],
        ],

        GET_RISCV_DEF => [
            DESCRIPTION   => "getRiscvDef",
            INTERFACE_TAG => "getRiscvDef",
            RETURN_TYPE   => "LwU64",
            ARGUMENTS     => "RiscvInstanceType, const char *",
            STUB_RETURNS  => "(LwU64) 0",
            ONLY_IF       => 'PLATFORM_UNIX || MODS_UNIX || PLATFORM_WINDOWS',

            _GH100        => [ GH100 ],
            _T234         => [ T234 ],
        ],

        # [HACK] stub so that the HAL def struct is not empty on platform builds
        # (i.e. Windows MODS) that do not support RISC-V",
        RISCV_STUB => [
            DESCRIPTION   => "riscvStub",
            INTERFACE_TAG => "riscvStub",
            ARGUMENTS     => "void",
            RETURN_TYPE   => "void",
            STUB_RETURNS  => "void",

            _STUB         => [ ALL ]
        ],
    ],

];

return $riscvHal;
