'\" t
.\"     Title: drf-lookup
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 10/27/2012
.\"    Manual: DRF Manual
.\"    Source: drf-lookup 0.1
.\"  Language: English
.\"
.TH "DRF\-LOOKUP" "1" "10/27/2012" "drf\-lookup 0\&.1" "DRF Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
drf-lookup \- DRF manual parser utility
.SH "SYNOPSIS"
.sp
\fBdrf\-lookup\fR [\fIoptions\fR] [\fIname\fR|\fIoffset\fR|\fIexpr\fR] [\fIvalue\fR]
.SH "DESCRIPTION"
.sp
The \fBdrf\-lookup(1)\fR command is a utility designed to parse and extract device/register definitions from header files formatted in DRF (device, register, field) notation, such as the LWPU GPU manual header files\&.
.SH "OPTIONS"
.sp
When ilwoked, \fBdrf\-lookup\fR interprets the following command line options:
.PP
\fB\-d, \-\-decode\-register\fR
.RS 4
Instruct
\fBdrf\-lookup\fR
to decode the given
\fIvalue\fR
as if it had been read from a specific register\&. This register must be identified via its
\fIname\fR
or
\fIoffset\fR\&.
.RE
.PP
\fB\-h, \-\-help\fR
.RS 4
Print usage information\&.
.RE
.PP
\fB\-i, \-\-dump\-index\fR
.RS 4
Print the table of devices defined by the manual header files found in the path (or paths) specified via the
\fB\-p\fR
option\&.
.RE
.PP
\fB\-l, \-\-list\-files\fR
.RS 4
List the manual header files found in the path (or paths) specified via the
\fB\-p\fR
option\&.
.RE
.PP
\fB\-r, \-\-match\-regex\fR
.RS 4
When specified, this option prompts
\fBdrf\-lookup\fR
to print the addresses, fields and possible field values of any registers with names that match the regular expression
\fIexpr\fR\&.
.RE
.PP
\fB\-p, \-\-path\fR=\fIpath\fR
.RS 4
Specify a directory in which to search for DRF\-style header files\&. This argument must be given at least once, and can be specified multiple times\&.
.RE
.PP
\fB\-t, \-\-terse\fR
.RS 4
Make
\fBdrf\-lookup\fR
omit field and possible field value information when listing registers\&.
.RE
.sp
If no option (other than the mandatory \fB\-p\fR option) is given, the \fBdrf\-lookup\fR utility requires that a register (or set of registers) is specified via the \fIname\fR or \fIoffset\fR argument\&. It will then look up any matching registers, and print their addresses, the names and bit ranges of their fields, and the names and values of their fields\*(Aq possible values\&.
.SH "EXAMPLES"
.PP
\fBdrf\-lookup \-p /path/to/g84 \-l\fR
.RS 4
List the devices defined by the manual header files found in the directory
\fI/path/to/g84\fR\&.
.RE
.PP
\fBdrf\-lookup \-p /path/to/gk107 \-d LW_PMC_BOOT_0 0x0e43a0a2\fR
.RS 4
Decode the value
\fI0x0e43a0a2\fR
as if it had been read from the register
\fILW_PMC_BOOT_0\fR\&.
.RE
.PP
\fBdrf\-lookup \-p /path/to/g92 \-r \*(AqLW_PBUS_DEBUG_[0\-9]\*(Aq\fR
.RS 4
Look up and print information about any registers with names that match the regular expression
\fILW_PBUS_DEBUG_[0\-9]\fR\&.
.RE
.SH "AUTHOR"
.sp
Andy Ritger <aritger@lwpu\&.com>, Christian Zander <czander@lwpu\&.com>
.SH "COPYRIGHT"
.sp
(C) 2012 LWPU Corporation
