
//
//  Copyright (c) 2019 LWPU Corporation.  All rights reserved.
//
//  LWPU Corporation and its licensors retain all intellectual property and proprietary
//  rights in and to this software, related documentation and any modifications thereto.
//  Any use, reproduction, disclosure or distribution of this software and related
//  documentation without an express license agreement from LWPU Corporation is strictly
//  prohibited.
//
//  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
//  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
//  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
//  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
//  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
//  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
//  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
//  SUCH DAMAGES
//

#include "test_DeviceAPI_reportIntersection.common.lw.h"

extern "C" __global__ void __intersection__Default_First_6()
{
    unsigned int* payloads = (unsigned int*)params.payloads;
    float3        dir      = optixGetWorldRayDirection();
    if( dir.z > 0.0f )
    {
        optixReportIntersection( 1.0f, 0, payloads[0], payloads[1], payloads[2], payloads[3], payloads[4], payloads[5],
                                 payloads[6] );
        optixReportIntersection( 1.1f, 0, 7, 8, 9, 10, 11, 12, 13 );
        optixReportIntersection( 1.2f, 0, 14, 15, 16, 17, 18, 19, 20 );
    }
}
extern "C" __global__ void __intersection__Default_Second_6()
{
    unsigned int* payloads = (unsigned int*)params.payloads;
    float3        dir      = optixGetWorldRayDirection();
    if( dir.z > 0.0f )
    {
        optixReportIntersection( 1.1f, 0, 0, 1, 2, 3, 4, 5, 6 );
        optixReportIntersection( 1.0f, 0, payloads[0], payloads[1], payloads[2], payloads[3], payloads[4], payloads[5],
                                 payloads[6] );
        optixReportIntersection( 1.2f, 0, 14, 15, 16, 17, 18, 19, 20 );
    }
}
extern "C" __global__ void __intersection__Default_Third_6()
{
    unsigned int* payloads = (unsigned int*)params.payloads;
    float3        dir      = optixGetWorldRayDirection();
    if( dir.z > 0.0f )
    {
        optixReportIntersection( 1.2f, 0, 0, 1, 2, 3, 4, 5, 6 );
        optixReportIntersection( 1.1f, 0, 7, 8, 9, 10, 11, 12, 13 );
        optixReportIntersection( 1.0f, 0, payloads[0], payloads[1], payloads[2], payloads[3], payloads[4], payloads[5],
                                 payloads[6] );
    }
}

extern "C" __global__ void __closesthit__6()
{
    unsigned int* payloads = (unsigned int*)params.payloads;
    payloads[0]            = optixGetAttribute_0() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[1]            = optixGetAttribute_1() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[2]            = optixGetAttribute_2() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[3]            = optixGetAttribute_3() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[4]            = optixGetAttribute_4() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[5]            = optixGetAttribute_5() | PROGRAM_TYPE_PAYLOAD_CH;
    payloads[6]            = optixGetAttribute_6() | PROGRAM_TYPE_PAYLOAD_CH;
}
