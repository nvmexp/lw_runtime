# Parse version information from version.lwh:
unset(_LWB_VERSION_INCLUDE_DIR CACHE) # Clear old result to force search
find_path(_LWB_VERSION_INCLUDE_DIR lwb/version.lwh
  NO_DEFAULT_PATH # Only search explicit paths below:
  PATHS
    ${CMAKE_LWRRENT_LIST_DIR}/../..            # Source tree
    ${CMAKE_LWRRENT_LIST_DIR}/../../../include # Install tree
)
file(READ "${_LWB_VERSION_INCLUDE_DIR}/lwb/version.lwh" LWB_VERSION_HEADER)
string(REGEX MATCH "#define[ \t]+LWB_VERSION[ \t]+([0-9]+)" DUMMY "${LWB_VERSION_HEADER}")
set(LWB_VERSION_FLAT ${CMAKE_MATCH_1})
# Note that LWB calls this the PATCH number, CMake calls it the TWEAK number:
string(REGEX MATCH "#define[ \t]+LWB_PATCH_NUMBER[ \t]+([0-9]+)" DUMMY "${LWB_VERSION_HEADER}")
set(LWB_VERSION_TWEAK ${CMAKE_MATCH_1})

math(EXPR LWB_VERSION_MAJOR "${LWB_VERSION_FLAT} / 100000")
math(EXPR LWB_VERSION_MINOR "(${LWB_VERSION_FLAT} / 100) % 1000")
math(EXPR LWB_VERSION_PATCH "${LWB_VERSION_FLAT} % 100") # LWB: "subminor" CMake: "patch"

set(LWB_VERSION "${LWB_VERSION_MAJOR}.${LWB_VERSION_MINOR}.${LWB_VERSION_PATCH}.${LWB_VERSION_TWEAK}")

set(PACKAGE_VERSION ${LWB_VERSION})
set(PACKAGE_VERSION_COMPATIBLE FALSE)
set(PACKAGE_VERSION_EXACT FALSE)
set(PACKAGE_VERSION_UNSUITABLE FALSE)

if(PACKAGE_VERSION VERSION_GREATER_EQUAL PACKAGE_FIND_VERSION)
  if(PACKAGE_FIND_VERSION_MAJOR STREQUAL LWB_VERSION_MAJOR)
    set(PACKAGE_VERSION_COMPATIBLE TRUE)
  endif()

  if(PACKAGE_FIND_VERSION STREQUAL PACKAGE_VERSION)
    set(PACKAGE_VERSION_EXACT TRUE)
  endif()
endif()
