#
#  Copyright (c) 2021 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#

# HostTool.lwmk
#
# Functions to generate rules and targets to compile a standalone tool exelwtable built for
# the host environment.  These are exelwtables that are ilwoked during the process of the build,
# so they must be built for the host environment, not the target environment.
#

include $(LW_OPTIX)/make/HostTool$(LW_HOST_OS_FAMILY).lwmk

# Global "host-tools" target that builds every tool built with this template.
.PHONY: host-tools

# BUILD_OPTIX_HOST_TOOL_OBJECT_LIST
#
# Helper to build in subdirs. From lwvm/Justin Holewinski
#
# $(1): Component Name
# $(2): Source List
#
# Object files are in $(OUTPUTDIR)/_$(1)
BUILD_OPTIX_HOST_TOOL_OBJECT_LIST = $(patsubst $(OUTPUTDIR)/%,$(OUTPUTDIR)/_$(1)/%,$(call BUILD_OBJECT_LIST,$(2)))

# This will hold all the host exelwtables after every makefile snippet has been included.
optix_host_tool_exelwtables =

# optix_host_tool
#
# Return text that generates rules and targets for compiling a standalone exelwtable for tools.
#
# Input variables:
# $(1)
#   The name of the tool exelwtable, without any platform specific suffix.
#
# $(1)_SOURCES
#   A list of absolute paths to C++ source files to be compiled and linked into the exelwtable.
#
# $(1)_CFLAGS
#   A list of compiler flags specific to this exelwtable.
#
# $(1)_DEFINES
#   A list of defines specific to this exelwtable.
# 
# $(1)_INCLUDES
#   A list of include directories specific to this exelwtable.
#
# $(1)_DEPS
#   A list of additional dependencies to be built before linking.
#
# $(1)_RESOURCES
#   (Windows only) A list of compiled resource files to be linked into the tool.
#
# $(1)_LFLAGS
#   A list of linker flags specific to this exelwtable.
#
# $(1)_LIBS
#   A list of additional libraries to be passed to the linker.
#
# Targets:
#
# $(1)
#   Builds only this tool
#
# clean-$(1)
#   Cleans only this tool's object files and exelwtables
#
# Usage:
#   sometool_SOURCES := foo.cpp bar.cpp
#   $(eval $(call optix_host_tool,sometool))
#
define optix_host_tool_impl
  # Provide defaults for some target specific variables:
  # Target specific compiler flags
  $(1)_CFLAGS ?=
  # Target specific defines
  $(1)_DEFINES ?=
  # Target specific includes
  $(1)_INCLUDES ?=
  # Target specific link dependencies
  $(1)_DEPS ?=
  # (Windows only) Target specific compiled resources.
  $(1)_RESOURCES ?=
  # Target specific link flags
  $(1)_LFLAGS ?=
  # Target specific libraries
  $(1)_LIBS ?=
  # The makefile that ilwoked this template.  The module objects depend on this makefile.
  $(1)_MAKEFILE ?= $$(call ILWOKING_MAKEFILE)

  # Add this tool to the global "host-tools" target.
  host-tools:: $(1)

  # Name a target that builds this exelwtable only.
  .PHONY: $(1)

  # List of C++ objects for this exelwtable.
  $(1)_OBJECTS = $$(call BUILD_OPTIX_HOST_TOOL_OBJECT_LIST,$(1),$$($(1)_SOURCES))

  # Objects depend on relevant makefiles
  $$($(1)_OBJECTS): $$($(1)_MAKEFILE) $$(LW_OPTIX)/make/HostTool.lwmk

  # These objects are built for the host.
  $$($(1)_OBJECTS): LW_HOST_BUILD = 1

  # Apply user-specified includes to this exelwtable.
  $$($(1)_OBJECTS): LW_HOST_INCLUDES += $$($(1)_INCLUDES)

  # $(1)_EXE holds the path of the exelwtable
  $(1)_EXE = $$(OUTPUTDIR)/$(1)$$(EXESUFFIX)

  # Accumulate tool exelwtables for linking sequentially
  optix_host_tool_exelwtables += $$($(1)_EXE)

  # Tool target depends on the exelwtable
  $(1): $$($(1)_EXE)

  # Assume OPTIX_CFLAGS by default and add exelwtable-specific CFLAGS.
  $$($(1)_OBJECTS): HOST_CFLAGS += $$($(1)_CFLAGS)

  # Add global and tool specific defines.
  $$($(1)_OBJECTS): LW_HOST_DEFINES += $$($(1)_DEFINES)

  # Generate rules to build exelwtable object files from source files
  $$(foreach f,$$(sort $$($(1)_SOURCES)),$$(eval $$(call LW_OBJECT_FROM_SOURCE_RULE,$$(f),$$(call BUILD_OPTIX_HOST_TOOL_OBJECT_LIST,$(1),$$(f)))))

  # Create rules to generate the exelwtable
  $$(eval $$(call link_optix_host_tool,$(1),$$($(1)_OBJECTS)))

  # Clean built files for this tool.
  .PHONY: clean-$(1)

  clean-$(1):
	@$$(ECHO) Cleaning $(1)
	@$$(RM) $$($(1)_OBJECTS) $$($(1)_RESOURCES) $$($(1)_EXE)
endef
optix_host_tool = $(eval $(call optix_host_tool_impl,$(1)))
