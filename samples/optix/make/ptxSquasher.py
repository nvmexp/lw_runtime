#
#  Copyright (c) 2021 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#
# Use this script to copy a ptx file while removing redundant or useless whitespace and comments
#
# This expects the arguments to be -i [input file] -o [output file]

import os
import sys

import argparse
parser = argparse.ArgumentParser()
parser.add_argument( "-i","--input-file",    help="Input file to read", default=None, required=True)
parser.add_argument( "-o","--output-file",   help="Output file to write", default=None, required=True)
args = parser.parse_args()

import re

# Open with binary mode, so we can control the line ending encoding
with open(args.input_file, "rb") as input_file:
    # By reading the whole file up front, we can write the output to the same file
    input = input_file.read()

with open(args.output_file, "wb") if args.output_file != "-" else sys.stdout as output_file:
    # Note the order of the substitutions is designed such that subsequent ilwocations
    # can take advantage of the patterns generated by previous ones.
    input = re.sub( b'//.*', b'', input ) # comments
    input = re.sub( b'^[ \t]+', b'', input, flags=re.MULTILINE ) # leading whitespace
    input = re.sub( b'[ \t]+', b' ', input ) # multiple whitespace characters
    input = input.replace( b', ', b',' ) # space after ,
    input = input.replace( b' {', b'{' ) # space before {,[,(
    input = input.replace( b' [', b'[' )
    input = input.replace( b' (', b'(' )
    input = input.replace( b'%r', b'r' ) # Remove redundant % on variable names. Only safe
    input = input.replace( b'%f', b'f' ) # if you know the input comes from lwcc.
    input = input.replace( b'%p', b'p' )
    input = input.replace( b'\r', b'' )  # get rid of \r.
    input = re.sub( b'^\s*$\n', b'', input, flags=re.MULTILINE ) # empty lines
    output_file.write( input )


# Note stdout is closed now due to the use of stdout in the with statement above
