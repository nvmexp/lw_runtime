#
#  Copyright (c) 2018 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#

# ToolWindows.lwmk - Variable definitions specific to compiling and linking Windows tool exelwtables

SRC_TOOLS_LFLAGS = \
  /ignore:4099 \
  -nologo \
  -subsystem:console \
  $(OPTIX_LWDA_LFLAGS) \
  ws2_32.lib \
  Ole32.lib \
  Rpcrt4.lib \

# link_optix_tool
#
# Link OptiX tool exelwtable $(1) from objects $(2).
#
# Input variables:
# $(1)
#   The name of the tool exelwtable, without any platform specific suffix.
#
# $(2)
#   List of object files to link together to form the exelwtable.
#
# Example: for Windows sometool,
#   $(call link_optix_tool,sometool,$(sometool_OBJECTS))
#
define link_optix_tool
  # Handle linking against additional LWVM libraries if necessary
  $(1)_LWVM_LFLAGS ?=
  $(1)_LWVM_LIBS ?=
  ifeq ($$($(1)_NEEDS_LWVM),1)
    $(1)_LWVM_LFLAGS += -libpath:$$(OUTPUTDIR)
    $(1)_LWVM_LIBS += $(notdir $$(LWVM_LIBRARIES)) 
  endif

  ifeq ($(OPTIX_ENABLE_STACK_TRACE),1)
    # On Windows, we need dbghelp functions to get symbol names for the backtrace
    $(1)_LFLAGS += dbghelp.lib
  endif

  $(1)_DEPS ?=
  $(1)_RESOURCES ?=
  ifeq ($$($(1)_NEEDS_OPTIX_LIBS),1)
    $(1)_DEPS += $$(OUTPUTDIR)/optix_static.lib
    $(1)_RESOURCES += $$(OPTIX_RESOURCES)
    SRC_TOOLS_LFLAGS += $$(OUTPUTDIR)/Corelib.lib
  endif

  # Link tool exelwtable from built objects and necessary libraries.
  $$($(1)_EXE): $$($(1)_DEPS) $(2) $$($(1)_RESOURCES)
	@$$(ECHO) Building Exelwtable $$@
	$$(file >$$(OUTPUTDIR)/$(1)_linkParameters.txt,\
          $$(strip \
            $$(LFLAGS) \
            $$(SRC_TOOLS_LFLAGS) \
            $$($(1)_DEPS) \
            $$($(1)_LWVM_LFLAGS) \
            $$($(1)_LFLAGS) \
            -out:$$@ \
            $$(LWVM_LIBRARIES) \
            $$($(1)_RESOURCES) \
            $(2) \
            $$($(1)_LWVM_LIBS)))
	$$(call call_linker_print_params_on_verbose,$$(OUTPUTDIR)/$(1)_linkParameters.txt)
	$$(LINK) @$$(OUTPUTDIR)/$(1)_linkParameters.txt
endef
