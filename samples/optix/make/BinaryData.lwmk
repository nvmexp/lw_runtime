#
#  Copyright (c) 2019 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#

# optix_binary_lw_ptx_header
#
# Given a .lw file that will be compiled into ptx that is embedded as binary
# data, return the path in $(OUTPUTDIR) of the generated header file.  This
# is used to explicitly declare dependencies of object files on generated
# header files
#
optix_binary_lw_ptx_header = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.lw=_ptx_bin.h))

# optix_binary_lw_ptx_source
#
# Given a .lw file that will be compiled into ptx that is embedded as binary
# data, return the path in $(OUTPUTDIR) of the generated source file.  This
# is used to build source file lists for input to C++ compilation.
#
optix_binary_lw_ptx_source = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.lw=_ptx_bin.cpp))

# optix_binary_data_ptx_header_file_contents
#
# Expands to a string that is the contents of a C++ header file that declares
# the getXXXSources() and getXXXSourceSizes() functions.  These functions
# are for wrapping binary data that contains PTX programs for use with the program manager.
#
# $(1)  The symbol name
#
define optix_binary_data_ptx_header_file_contents
// Generated by lwmake
// DO NOT EDIT!

#pragma once

#include <stddef.h>

namespace optix {
namespace data {

extern const char** get$(strip $(1))Sources();
extern const size_t* get$(strip $(1))SourceSizes();

} // namespace data
} // namespace optix
endef

# optix_binary_data_header_file_contents
#
# Expands to a string that is the contents of a C++ header file that contains
# declarations for getXXXData() and getXXXDataLength() functions.  These functions
# are for arbitrary binary data.
#
#
# $(1)  The symbol name
#
define optix_binary_data_header_file_contents
// Generated by lwmake
// DO NOT EDIT!

#pragma once

#include <stddef.h>

namespace optix {
namespace data {

extern const char* get$(strip $(1))Data();
extern size_t get$(strip $(1))DataLength();

} // namespace data
} // namespace optix
endef

# The following relationships are assumed for a LWCA file named apps/optix/src/Objects/Foo.lw
#
# Symbol name used in generated headers/sources     Foo
# Path to directory containing generated files      $(OUTPUTDIR)/apps/optix/src/Objects
# Path to generated header                          $(OUTPUTDIR)/apps/optix/src/Objects/Foo_ptx_bin.h
# Path to generated source                          $(OUTPUTDIR)/apps/optix/src/Objects/Foo_ptx_bin.cpp
# Path to compiled source file                      $(OUTPUTDIR)/$(MOD_NAME)_Foo_ptx_bin.obj
#
optix_binary_lw_ptx_symbol        = $(notdir $(1:.lw=))
optix_binary_lw_ptx_file          = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.lw=.lw.ptx))
optix_binary_lw_ptx_generated_dir = $(patsubst %/,%,$(dir $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1))))

optix_binary_header = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.bin=_bin.h))
optix_binary_source = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.bin=_bin.cpp))

optix_binary_bitcode_header = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:_linked_opt.bc=_bin.h))
optix_binary_bitcode_source = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:_linked_opt.bc=_bin.cpp))

optix_binary_fatbin_header = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.fatbin=_fatbin.h))
optix_binary_fatbin_source = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.fatbin=_fatbin.cpp))

# optix_declare_binary_bitcode_header_dependency_rule
#
# Generate a rule that says a compiled object file depends on the generated
# header file for embedded binary data.
#
# $(1)    The path to the source file that depends on the generated header.
# $(2)    The path to the binary file that will be used to generate the header.
#
define optix_declare_binary_bitcode_header_dependency_rule
$(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(1)): $(call optix_binary_bitcode_header,$(2))
endef

# optix_declare_binary_bitcode_header_dependency
#
# Generate the text for the dependency rule and evaluate it.
#
# $(1)    The path to the source file that depends on the generated header.
# $(2)    The path to the binary file that will be used to generate the header.
#
# Example:
# $(call optix_declare_binary_bitcode_header_dependency,$(LW_OPTIX)/src/AS/ASManager.cpp,$(LW_OPTIX)/src/AS/blob.bin)
#
optix_declare_binary_bitcode_header_dependency = $(eval $(call optix_declare_binary_bitcode_header_dependency_rule,$(1),$(2)))

optix_binary_llvm_ir_header = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.ll=_bin.h))
optix_binary_llvm_ir_source = $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1:.ll=_bin.cpp))

# optix_declare_binary_llvm_ir_header_dependency_rule
#
# Generate a rule that says a compiled object file depends on the generated
# header file for embedded binary data.
#
# $(1)    The path to the source file that depends on the generated header.
# $(2)    The path to the binary file that will be used to generate the header.
#
define optix_declare_binary_llvm_ir_header_dependency_rule
$(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(1)): $(call optix_binary_llvm_ir_header,$(2))
endef

# optix_declare_binary_llvm_ir_header_dependency
#
# Generate the text for the dependency rule and evaluate it.
#
# $(1)    The path to the source file that depends on the generated header.
# $(2)    The path to the binary file that will be used to generate the header.
#
# Example:
# $(call optix_declare_binary_llvm_ir_header_dependency,$(LW_OPTIX)/src/AS/ASManager.cpp,$(LW_OPTIX)/src/FrontEnd/Canonical/C14nRuntime.ll)
#
optix_declare_binary_llvm_ir_header_dependency = $(eval $(call optix_declare_binary_llvm_ir_header_dependency_rule,$(1),$(2)))

# Platform specific implementation of optix_binary_lw_ptx, optix_binary_file, optix_binary_bitcode_file, optix_binary_llvm_ir_file
include $(LW_OPTIX)/make/BinaryData$(LW_HOST_OS_FAMILY).lwmk
