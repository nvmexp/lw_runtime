#
#  Copyright (c) 2018 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#

# link_static_library
#
# Generate rules to link a static library from objects.
#
# Arguments:
# $(1)
#   Library name (will be colwerted to platform-specific colwentions)
# $(2)
#   Objects to include in the library
#
# Related variables:
# $(1)_LIBFLAGS
#   Any target specific linker flags; defaults to $(LIBFLAGS).
# $(1)_DEPS
#   Any target specific dependencies; defaults to empty.
#
# Usage:
#   # We need lwvm-build as an order dependency of this library
#   foo_DEPS := |lwvm-build
#   $(eval $(call link_static_library,foo,$(OUTPUTDIR)/foo.obj $(OUTPUTDIR)/bar.obj))
#
define link_static_library
.PHONY: $(1)

# The phony target depends on the built library.
$(1): $$(OUTPUTDIR)/$(1)$(LIBSUFFIX)

# Default library flags
$(1)_LIBFLAGS ?= $$(LIBFLAGS)

# Default library additional dependencies
$(1)_DEPS ?=

# Library file depends on input objects and additional dependencies
$$(OUTPUTDIR)/$(1)$(LIBSUFFIX): $(2) $$($(1)_DEPS)
	@$$(ECHO) Building Static Lib $$@
	$$(file >$$(OUTPUTDIR)/$(1)_libParameters.txt,$(strip $$($(1)_LIBFLAGS)) $(2) -out:$$@)
	$$(call call_linker_print_params_on_verbose,$$(OUTPUTDIR)/$(1)_libParameters.txt)
	$$(LIBEXE) @$$(OUTPUTDIR)/$(1)_libParameters.txt
endef
