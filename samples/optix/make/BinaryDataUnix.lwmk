#
#  Copyright (c) 2019 LWPU Corporation.  All rights reserved.
#
#  LWPU Corporation and its licensors retain all intellectual property and proprietary
#  rights in and to this software, related documentation and any modifications thereto.
#  Any use, reproduction, disclosure or distribution of this software and related
#  documentation without an express license agreement from LWPU Corporation is strictly
#  prohibited.
#
#  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS*
#  AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED,
#  INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
#  PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS BE LIABLE FOR ANY
#  SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT
#  LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
#  BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS) ARISING OUT OF THE USE OF OR
#  INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS BEEN ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGES
#

# optix_binary_data_ptx_source_file_contents
#
# Expands to a string that is the contents of a C++ source file that contains
# definitions for getXXXSources() and getXXXSourceSizes() functions.  These functions
# are for wrapping binary data that contains PTX programs for use with the program manager.
#
# $(1)  The include file corresponding to this source file, e.g. ComputeAabb_ptx_bin.h
# $(2)  The symbol name for the data, e.g. ComputeAabb
# $(3)  The path to the .lw.ptx file, e.g. $(OUTPUTDIR)/apps/optix/src/AS/ComputeAabb.lw.ptx
#
define optix_binary_data_ptx_source_file_contents
// Generated by lwmake
// DO NOT EDIT!

#include "$(1)"

#define INCBIN_PREFIX g_
#include <incbin/incbin.h>

#include <cstddef>

namespace {

INCBIN( $(2), "$(3:.lw.ptx=.lw.ptx.dat)" );

}  // namespace

namespace optix {
namespace data {

const char** get$(2)Sources()
{
    static const char *sources[] =
    {
        "$(notdir $(3))", reinterpret_cast<const char*>( g_$(2)Data ),
        0, 0,
    };
    return sources;
}

const size_t* get$(2)SourceSizes()
{
    static const size_t sizes[] =
    {
        static_cast<size_t>( g_$(2)Size ),
        static_cast<size_t>( ~0U )
    };
    return sizes;
};

}  // namespace data
}  // namespace optix
endef

# optix_binary_data_source_file_contents
#
# Expands to a string that is the contents of a C++ source file that contains
# definitions for getXXXData() and getXXXDataLength() functions.  These functions
# are for arbitrary binary data.
#
# $(1)  The include file corresponding to this source file, e.g. TraverserRuntime_bin.h
# $(2)  The symbol name for the data, e.g. TraverserRuntime
# $(3)  The path the binary file, e.g. $(OUTPUTDIR)/apps/optix/src/AS/TraverserRuntime_linked_opt.bc
#
define optix_binary_data_source_file_contents
// Generated by lwmake
// DO NOT EDIT!

#include "$(1)"

#define INCBIN_PREFIX g_
#include <incbin/incbin.h>

#include <cstddef>

namespace {

INCBIN( $(2), "$(3:.lw.ptx=.lw.ptx.dat)" );

}  // namespace

namespace optix {
namespace data {

const char* get$(2)Data()
{
    return reinterpret_cast<const char*>( g_$(2)Data );
}

size_t get$(2)DataLength()
{
    return g_$(2)Size;
}

}  // namespace data
}  // namespace optix
endef

# optix_binary_lw_ptx_impl
#
# Implementation of .lw to PTX to embedded binary resource.
#
# $(1)    Path to .lw file
# $(2)    Path to .lw.ptx file
# $(3)    Symbol name used in generated headers/sources
# $(4)    Path to directory containing generated files
# $(5)    Path to generated header file
# $(6)    Path to generated source file
# $(7)    Path to compiled generated source file
# $(8)    Whether to encrypt the embedded PTX
#
define optix_binary_lw_ptx_impl
# Directory holding generated files must be created
LW_DIRS_TO_CREATE += $(strip $(4))

# Generated header depends on output directory
$(strip $(5)): | $(strip $(4))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_ptx_header_file_contents,$(strip $(3))))

# Generated NUL terminated data depends on .lw.ptx
$(strip $(2:.lw.ptx=.lw.ptx.dat)): $(strip $(2)) $$(ptxEncryptionBuildTool_EXE)
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(RM) $$(@)
	$$(COPY) $$(<) $$(@).tmp
	$$(PYTHON) $(LW_OPTIX)/make/appendNulByte.py $$(@).tmp
ifeq ($(strip $(8)),1)
	$$(ECHO) Encrypting $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(ptxEncryptionBuildTool_EXE) -if $$(@).tmp -of $$(@)
else
	$$(COPY) $$(@).tmp $$(@)
endif

# Generated source depends on output directory
$(strip $(6)): | $(strip $(4))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_ptx_source_file_contents,$(notdir $(5)),$(strip $(3)),$(strip $(2))))

# Compiled C++ object depends on generated header, generated source and generated NUL terminated binary data
$(strip $(7)): $(strip $(5)) $(strip $(6)) $(strip $(2:.lw.ptx=.lw.ptx.dat))

# Compiled C++ object depends on apps/optix/support/incbin/incbin.h
$(strip $(7)): LW_INCLUDES += $(LW_OPTIX)/support

# Generated files depend on makefiles with generating rules
$(strip $(5)) $(strip $(6)): $(LW_OPTIX)/make/BinaryData.lwmk $(LW_OPTIX)/make/BinaryDataUnix.lwmk
endef

# optix_binary_lw_ptx
#
# Generate rules to compile a .lw file into PTX and then embed the PTX
# as a binary resource.
#
# $(1)    The path to the .lw file in $(LW_SOURCE)
# $(2)    Whether to encrypt the embedded PTX
#
define optix_binary_lw_ptx
  $(eval $(call optix_binary_lw_ptx_impl,                                               \
    $(1),                                                                               \
    $(call optix_binary_lw_ptx_file,$(1)),                                              \
    $(call optix_binary_lw_ptx_symbol,$(1)),                                            \
    $(call optix_binary_lw_ptx_generated_dir,$(1)),                                     \
    $(call optix_binary_lw_ptx_header,$(1)),                                            \
    $(call optix_binary_lw_ptx_source,$(1)),                                            \
    $(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(call optix_binary_lw_ptx_source,$(1))),\
    $(2)                                                                                \
  ))
endef

# optix_test_binary_lw_ptx
#
# Generate rules to compile a .lw file into PTX and then embed the PTX
# as a binary resource.
#
# $(1)    The test case name
# $(2)    The path to the .lw file in $(LW_SOURCE)
#
define optix_test_binary_lw_ptx
  $(eval $(call optix_binary_lw_ptx_impl,                                               \
    $(2),                                                                               \
    $(call optix_binary_lw_ptx_file,$(2)),                                              \
    $(call optix_binary_lw_ptx_symbol,$(2)),                                            \
    $(call optix_binary_lw_ptx_generated_dir,$(2)),                                     \
    $(call optix_binary_lw_ptx_header,$(2)),                                            \
    $(call optix_binary_lw_ptx_source,$(2)),                                            \
    $(call BUILD_OPTIX_TEST_OBJECT_LIST,$(1),$(call optix_binary_lw_ptx_source,$(2))),  \
    0                                                                                   \
  ))
endef

# Implementation of embedded binary resource.
#
# $(1)    Path to binary file.
# $(2)    Symbol name used in generated headers/sources
# $(3)    Path to directory containing generated files
# $(4)    Path to generated header file
# $(5)    Path to generated source file
# $(6)    Path to compiled generated source file
#
define optix_binary_file_impl
# Directory holding generated files must be created
LW_DIRS_TO_CREATE += $(strip $(3))

# Generated header depends on output directory
$(strip $(4)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_header_file_contents,$(strip $(2))))

# Generated source depends on output directory
$(strip $(5)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_source_file_contents,$(notdir $(4)),$(strip $(2)),$(strip $(1))))

# Compiled C++ object depends on generated header, generated source and binary data
$(strip $(6)): $(strip $(4)) $(strip $(5)) $(strip $(1))

# Compiled C++ object depends on apps/optix/support/incbin/incbin.h
$(strip $(6)): LW_INCLUDES += $(LW_OPTIX)/support

# Generated files depend on makefiles with generating rules
$(strip $(4)) $(strip $(5)): $(LW_OPTIX)/make/BinaryData.lwmk $(LW_OPTIX)/make/BinaryDataUnix.lwmk
endef

# Replace '-' and '.' with '_' to transform the filename into a valid C++ identifier.
optix_binary_symbol = $(subst -,_,$(subst .,_,$(notdir $(1:.bin=))))
optix_binary_fatbin_symbol = $(subst -,_,$(subst .,_,$(notdir $(1:.fatbin=))))
optix_binary_generated_dir = $(patsubst %/,%,$(dir $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1))))

define optix_binary_file
  $(eval $(call optix_binary_file_impl,                                           \
    $(1),                                                                         \
    $(call optix_binary_symbol,$(1)),                                             \
    $(call optix_binary_generated_dir,$(1)),                                      \
    $(call optix_binary_header,$(1)),                                             \
    $(call optix_binary_source,$(1)),                                             \
    $(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(call optix_binary_source,$(1)))  \
  ))
endef

define optix_test_binary_file
  $(eval $(call optix_binary_file_impl,                                           \
    $(2),                                                                         \
    $(call optix_binary_symbol,$(2)),                                             \
    $(call optix_binary_generated_dir,$(2)),                                      \
    $(call optix_binary_header,$(2)),                                             \
    $(call optix_binary_source,$(2)),                                             \
    $(call BUILD_OPTIX_TEST_OBJECT_LIST,$(1),$(call optix_binary_source,$(2)))    \
  ))
endef

define optix_binary_fatbin_file
  $(eval $(call optix_binary_file_impl,                                           \
    $(1),                                                                         \
    $(call optix_binary_fatbin_symbol,$(1)),                                      \
    $(call optix_binary_generated_dir,$(1)),                                      \
    $(call optix_binary_fatbin_header,$(1)),                                      \
    $(call optix_binary_fatbin_source,$(1)),                                      \
    $(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(call optix_binary_fatbin_source,$(1)))  \
  ))
endef

# Implementation of embedded bitcode resource.
#
# $(1)    Path to bitcode file.
# $(2)    Symbol name used in generated headers/sources
# $(3)    Path to directory containing generated files
# $(4)    Path to generated header file
# $(5)    Path to generated source file
# $(6)    Path to compiled generated source file
#
define optix_binary_bitcode_file_impl
# Directory holding generated files must be created
LW_DIRS_TO_CREATE += $(strip $(3))

# Generated header depends on output directory
$(strip $(4)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_header_file_contents,$(strip $(2))))

# Generated source depends on output directory
$(strip $(5)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_source_file_contents,$(notdir $(4)),$(strip $(2)),$(strip $(1))))

# Compiled C++ object depends on generated header, generated source and binary data
$(strip $(6)): $(strip $(4)) $(strip $(5)) $(strip $(1))

# Compiled C++ object depends on apps/optix/support/incbin/incbin.h
$(strip $(6)): LW_INCLUDES += $(LW_OPTIX)/support

# Generated files depend on makefiles with generating rules
$(strip $(4)) $(strip $(5)): $(LW_OPTIX)/make/BinaryData.lwmk $(LW_OPTIX)/make/BinaryDataUnix.lwmk
endef

# Replace '-' and '.' with '_' to transform the filename into a valid C++ identifier.
optix_binary_bitcode_symbol = $(subst -,_,$(subst .,_,$(notdir $(1:_linked_opt.bc=))))
optix_binary_bitcode_generated_dir = $(patsubst %/,%,$(dir $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1))))

define optix_binary_bitcode_file
  $(eval $(call optix_binary_bitcode_file_impl,                                           \
    $(1),                                                                                 \
    $(call optix_binary_bitcode_symbol,$(1)),                                             \
    $(call optix_binary_bitcode_generated_dir,$(1)),                                      \
    $(call optix_binary_bitcode_header,$(1)),                                             \
    $(call optix_binary_bitcode_source,$(1)),                                             \
    $(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(call optix_binary_bitcode_source,$(1)))  \
  ))
endef

# Implementation of embedded LLVM IR bitcode resource.
#
# $(1)    Path to bitcode file.
# $(2)    Symbol name used in generated headers/sources
# $(3)    Path to directory containing generated files
# $(4)    Path to generated header file
# $(5)    Path to generated source file
# $(6)    Path to compiled generated source file
#
define optix_binary_llvm_ir_file_impl
# Directory holding generated files must be created
LW_DIRS_TO_CREATE += $(strip $(3))

# Generated header depends on output directory
$(strip $(4)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_header_file_contents,$(strip $(2))))

# Generated source depends on output directory
$(strip $(5)): | $(strip $(3))
	$$(ECHO) Generating $$(subst $$(LW_OPTIX_OUTPUTDIR)/,,$$(@))
	$$(file >$$(@),$$(call optix_binary_data_source_file_contents,$(notdir $(4)),$(strip $(2)),$(strip $(1))))

# Compiled C++ object depends on generated header, generated source and binary data
$(strip $(6)): $(strip $(4)) $(strip $(5)) $(strip $(1))

# Compiled C++ object depends on apps/optix/support/incbin/incbin.h
$(strip $(6)): LW_INCLUDES += $(LW_OPTIX)/support

# Generated files depend on makefiles with generating rules
$(strip $(4)) $(strip $(5)): $(LW_OPTIX)/make/BinaryData.lwmk $(LW_OPTIX)/make/BinaryDataUnix.lwmk
endef

# Replace '-' and '.' with '_' to transform the filename into a valid C++ identifier.
optix_binary_llvm_ir_symbol = $(subst -,_,$(subst .,_,$(notdir $(1:.ll=))))
optix_binary_llvm_ir_generated_dir = $(patsubst %/,%,$(dir $(subst $(LW_SOURCE),$(OUTPUTDIR),$(1))))

define optix_binary_llvm_ir_file
  $(eval $(call optix_binary_llvm_ir_file_impl,                                           \
    $(subst $(LW_OPTIX),$(LW_OPTIX_OUTPUTDIR),$(1:.ll=.bc)),                              \
    $(call optix_binary_llvm_ir_symbol,$(1)),                                             \
    $(call optix_binary_llvm_ir_generated_dir,$(1)),                                      \
    $(call optix_binary_llvm_ir_header,$(1)),                                             \
    $(call optix_binary_llvm_ir_source,$(1)),                                             \
    $(call BUILD_OPTIX_OBJECT_LIST,$(MOD_NAME),$(call optix_binary_llvm_ir_source,$(1)))  \
  ))
endef
