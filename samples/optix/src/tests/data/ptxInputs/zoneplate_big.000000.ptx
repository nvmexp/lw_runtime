//
// Generated by LWPU LWVM Compiler
// Compiler built on Sun Jul 29 19:44:09 2012 (1343612649)
// Lwca compilation tools, release 5.0, V0.2.1221
//

.version 3.1
.target sm_20
.address_size 64

	.file	1 "C:/Users/davemc/AppData/Local/Temp/tmpxft_00001ac0_00000000-11_zoneplate.cpp3.i"
	.file	2 "C:/sw/wsapps/raytracing/rtsdk/rel2.6/samples/zoneplate/zoneplate.lw"
	.file	3 "C:/Program Files/LWPU GPU Computing Toolkit/LWCA/v5.0/lwvm/ci_include.h"
	.file	4 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.0\\include\\device_functions.h"
	.file	5 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.0\\include\\math_functions.h"
	.file	6 "c:\\sw\\wsapps\\raytracing\\rtsdk\\rel2.6\\include\\internal/optix_internal.h"
	.file	7 "c:\\sw\\wsapps\\raytracing\\rtsdk\\rel2.6\\include\\optix_device.h"
	.file	8 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.0\\include\\sm_20_atomic_functions.h"
.global .align 4 .b8 ray[36];
.global .align 1 .b8 output_color_only[1];
.global .align 1 .b8 adaptive_sample_locations[1];
.global .align 1 .b8 output_samples[1];
.global .align 1 .b8 filter_weights[1];
.global .align 1 .b8 weighted_scatter_sums[1];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 window_size[8];
.global .align 4 .u32 filter_type;
.global .align 4 .u32 render_type;
.global .align 4 .f32 filter_width;
.global .align 4 .f32 checkerboard_rotate;
.global .align 4 .u32 checkerboard_width;
.global .align 4 .u32 sqrt_samples_per_pixel;
.global .align 4 .f32 gaussian_alpha;
.global .align 4 .f32 jitter_amount;
.global .align 4 .f32 sinc_tau;
.global .align 4 .u32 contrast_window_width;
.global .align 4 .f32 adaptive_contrast_threshold;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11window_sizeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11filter_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11render_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12filter_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19checkerboard_rotateE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18checkerboard_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo22sqrt_samples_per_pixelE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14gaussian_alphaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13jitter_amountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8sinc_tauE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21contrast_window_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo27adaptive_contrast_thresholdE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11window_sizeE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11filter_typeE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11render_typeE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12filter_widthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19checkerboard_rotateE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18checkerboard_widthE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename22sqrt_samples_per_pixelE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14gaussian_alphaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13jitter_amountE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8sinc_tauE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename21contrast_window_widthE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename27adaptive_contrast_thresholdE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11window_sizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11filter_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11render_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12filter_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19checkerboard_rotateE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18checkerboard_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic22sqrt_samples_per_pixelE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14gaussian_alphaE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13jitter_amountE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8sinc_tauE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic21contrast_window_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic27adaptive_contrast_thresholdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11window_sizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11filter_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11render_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12filter_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19checkerboard_rotateE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18checkerboard_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation22sqrt_samples_per_pixelE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14gaussian_alphaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13jitter_amountE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8sinc_tauE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation21contrast_window_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation27adaptive_contrast_thresholdE[1];
.const .align 1 .b8 $str[47] = {67, 97, 117, 103, 104, 116, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z13zp_color_onlyv(

)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rc<23>;
	.reg .s32 	%r<29>;
	.reg .f32 	%f<40>;
	.reg .s64 	%rd<9>;


	.loc 2 82 1
	ldu.global.u64 	%rd1, [launch_index];
	cvt.u32.u64 	%r2, %rd1;
	cvt.rn.f32.u32 	%f6, %r2;
	add.ftz.f32 	%f1, %f6, 0f3F000000;
	shr.u64 	%rd2, %rd1, 32;
	cvt.u32.u64 	%r3, %rd2;
	.loc 2 82 1
	cvt.rn.f32.u32 	%f7, %r3;
	add.ftz.f32 	%f2, %f7, 0f3F000000;
	.loc 2 72 1
	ldu.global.u32 	%r1, [render_type];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	BB0_3;

	.loc 2 74 1
	setp.ne.s32 	%p2, %r1, 1;
	mov.f32 	%f39, 0f00000000;
	@%p2 bra 	BB0_4;

	.loc 2 61 1
	ldu.global.f32 	%f9, [checkerboard_rotate];
	mul.ftz.f32 	%f10, %f9, 0f40490FDB;
	mov.f32 	%f11, 0f43340000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f12, %f10, %f11;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f13, %f12;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f14, %f12;
	.loc 2 63 1
	mul.ftz.f32 	%f15, %f14, %f2;
	fma.rn.ftz.f32 	%f16, %f13, %f1, %f15;
	ldu.global.u32 	%r4, [checkerboard_width];
	cvt.rn.f32.s32 	%f17, %r4;
	.loc 3 749 5
	div.approx.ftz.f32 	%f18, %f16, %f17;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f19, %f18;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r5, %f19;
	.loc 3 338 5
	abs.s32 	%r6, %r5;
	.loc 2 64 1
	mul.ftz.f32 	%f20, %f13, %f2;
	mul.ftz.f32 	%f21, %f14, %f1;
	sub.ftz.f32 	%f22, %f20, %f21;
	.loc 3 749 5
	div.approx.ftz.f32 	%f23, %f22, %f17;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f24, %f23;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r7, %f24;
	.loc 3 338 5
	abs.s32 	%r8, %r7;
	.loc 2 66 1
	shr.u32 	%r9, %r6, 31;
	add.s32 	%r10, %r6, %r9;
	and.b32  	%r11, %r10, -2;
	sub.s32 	%r12, %r6, %r11;
	shr.u32 	%r13, %r8, 31;
	add.s32 	%r14, %r8, %r13;
	and.b32  	%r15, %r14, -2;
	sub.s32 	%r16, %r8, %r15;
	setp.eq.s32 	%p3, %r12, %r16;
	.loc 2 66 1
	selp.f32 	%f39, 0f3F800000, 0f00000000, %p3;
	bra.uni 	BB0_4;

BB0_3:
	.loc 2 52 1
	ld.global.v2.u32 	{%r27, %r28}, [window_size];
	.loc 2 53 1
	cvt.rn.f32.u32 	%f25, %r27;
	cvt.rn.f32.u32 	%f26, %r28;
	.loc 3 749 5
	div.approx.ftz.f32 	%f27, %f1, %f25;
	div.approx.ftz.f32 	%f28, %f2, %f26;
	.loc 2 54 1
	mul.ftz.f32 	%f29, %f28, %f28;
	fma.rn.ftz.f32 	%f30, %f27, %f27, %f29;
	.loc 3 996 5
	sqrt.approx.ftz.f32 	%f31, %f30;
	.loc 2 55 1
	mul.ftz.f32 	%f32, %f31, 0f44FA0000;
	mul.ftz.f32 	%f33, %f32, %f31;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f34, %f33;
	.loc 2 55 1
	add.ftz.f32 	%f35, %f34, 0f3F800000;
	mov.f32 	%f36, 0f40000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f39, %f35, %f36;

BB0_4:
	.loc 2 83 1
	ld.global.v2.u32 	{%r25, %r26}, [launch_index];
	cvt.u64.u32 	%rd5, %r25;
	cvt.u64.u32 	%rd6, %r26;
	cvta.global.u64 	%rd4, output_color_only;
	mov.u32 	%r19, 2;
	mov.u32 	%r20, 4;
	mov.u64 	%rd8, 0;
	.loc 3 633 5
	cvt.sat.ftz.f32.f32 	%f37, %f39;
	.loc 2 83 1
	mul.ftz.f32 	%f38, %f37, 0f437FFD71;
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r23, %f38;
	.loc 2 83 1
	cvt.u8.u32 	%rc1, %r23;
	mov.u16 	%rc2, -1;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r19, %r20, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	.loc 2 83 1
	st.v4.u8 	[%rd3], {%rc1, %rc1, %rc1, %rc2};
	.loc 2 84 2
	ret;
}

.visible .entry _Z19zp_generate_samplesv(

)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<41>;
	.reg .f32 	%f<41>;
	.reg .s64 	%rd<20>;


	.loc 2 96 1
	ld.global.v2.u32 	{%r37, %r38}, [launch_index];
	.loc 2 88 1
	cvt.rn.f32.u32 	%f6, %r37;
	add.ftz.f32 	%f7, %f6, 0f3F000000;
	ldu.global.u32 	%r7, [sqrt_samples_per_pixel];
	cvt.rn.f32.u32 	%f8, %r7;
	.loc 3 749 5
	div.approx.ftz.f32 	%f1, %f7, %f8;
	.loc 2 88 1
	cvt.rn.f32.u32 	%f9, %r38;
	add.ftz.f32 	%f10, %f9, 0f3F000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f2, %f10, %f8;
	.loc 2 97 1
	cvt.u64.u32 	%rd4, %r37;
	cvt.u64.u32 	%rd5, %r38;
	cvta.global.u64 	%rd9, output_samples;
	mov.u32 	%r4, 2;
	mov.u32 	%r5, 12;
	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd9, %r4, %r5, %rd4, %rd5, %rd13, %rd13);
	// inline asm
	.loc 2 97 1
	st.f32 	[%rd2+4], %f1;
	.loc 2 98 1
	ld.global.v2.u32 	{%r39, %r40}, [launch_index];
	cvt.u64.u32 	%rd10, %r39;
	cvt.u64.u32 	%rd11, %r40;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r4, %r5, %rd10, %rd11, %rd13, %rd13);
	// inline asm
	st.f32 	[%rd8+8], %f2;
	.loc 2 72 1
	ld.global.u32 	%r1, [render_type];
	setp.eq.s32 	%p1, %r1, 0;
	@%p1 bra 	BB1_3;

	.loc 2 74 1
	setp.ne.s32 	%p2, %r1, 1;
	mov.f32 	%f40, 0f00000000;
	@%p2 bra 	BB1_4;

	.loc 2 61 1
	ld.global.f32 	%f12, [checkerboard_rotate];
	mul.ftz.f32 	%f13, %f12, 0f40490FDB;
	mov.f32 	%f14, 0f43340000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f15, %f13, %f14;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f16, %f15;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f17, %f15;
	.loc 2 63 1
	mul.ftz.f32 	%f18, %f17, %f2;
	fma.rn.ftz.f32 	%f19, %f16, %f1, %f18;
	ld.global.u32 	%r13, [checkerboard_width];
	cvt.rn.f32.s32 	%f20, %r13;
	.loc 3 749 5
	div.approx.ftz.f32 	%f21, %f19, %f20;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f22, %f21;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r14, %f22;
	.loc 3 338 5
	abs.s32 	%r15, %r14;
	.loc 2 64 1
	mul.ftz.f32 	%f23, %f16, %f2;
	mul.ftz.f32 	%f24, %f17, %f1;
	sub.ftz.f32 	%f25, %f23, %f24;
	.loc 3 749 5
	div.approx.ftz.f32 	%f26, %f25, %f20;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f27, %f26;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r16, %f27;
	.loc 3 338 5
	abs.s32 	%r17, %r16;
	.loc 2 66 1
	shr.u32 	%r18, %r15, 31;
	add.s32 	%r19, %r15, %r18;
	and.b32  	%r20, %r19, -2;
	sub.s32 	%r21, %r15, %r20;
	shr.u32 	%r22, %r17, 31;
	add.s32 	%r23, %r17, %r22;
	and.b32  	%r24, %r23, -2;
	sub.s32 	%r25, %r17, %r24;
	setp.eq.s32 	%p3, %r21, %r25;
	.loc 2 66 1
	selp.f32 	%f40, 0f3F800000, 0f00000000, %p3;
	bra.uni 	BB1_4;

BB1_3:
	.loc 2 52 1
	ld.global.v2.u32 	{%r35, %r36}, [window_size];
	.loc 2 53 1
	cvt.rn.f32.u32 	%f28, %r35;
	cvt.rn.f32.u32 	%f29, %r36;
	.loc 3 749 5
	div.approx.ftz.f32 	%f30, %f1, %f28;
	div.approx.ftz.f32 	%f31, %f2, %f29;
	.loc 2 54 1
	mul.ftz.f32 	%f32, %f31, %f31;
	fma.rn.ftz.f32 	%f33, %f30, %f30, %f32;
	.loc 3 996 5
	sqrt.approx.ftz.f32 	%f34, %f33;
	.loc 2 55 1
	mul.ftz.f32 	%f35, %f34, 0f44FA0000;
	mul.ftz.f32 	%f36, %f35, %f34;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f37, %f36;
	.loc 2 55 1
	add.ftz.f32 	%f38, %f37, 0f3F800000;
	mov.f32 	%f39, 0f40000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f40, %f38, %f39;

BB1_4:
	.loc 2 99 1
	ld.global.v2.u32 	{%r33, %r34}, [launch_index];
	cvt.u64.u32 	%rd16, %r33;
	cvt.u64.u32 	%rd17, %r34;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd9, %r4, %r5, %rd16, %rd17, %rd13, %rd13);
	// inline asm
	st.f32 	[%rd14], %f40;
	.loc 2 100 2
	ret;
}

.visible .entry _Z17zp_gather_samplesv(

)
{
	.reg .pred 	%p<19>;
	.reg .s16 	%rc<23>;
	.reg .s32 	%r<57>;
	.reg .f32 	%f<173>;
	.reg .s64 	%rd<30>;


	.loc 2 159 1
	ldu.global.u32 	%r53, [sqrt_samples_per_pixel];
	cvt.rn.f32.u32 	%f46, %r53;
	ldu.global.u64 	%rd2, [launch_index];
	cvt.u32.u64 	%r20, %rd2;
	cvt.rn.f32.u32 	%f47, %r20;
	add.ftz.f32 	%f48, %f47, 0f3F000000;
	ldu.global.f32 	%f164, [filter_width];
	sub.ftz.f32 	%f49, %f48, %f164;
	mul.ftz.f32 	%f50, %f46, %f49;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f51, %f50;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r21, %f51;
	mov.u32 	%r22, 0;
	.loc 3 238 5
	max.s32 	%r2, %r21, %r22;
	.loc 2 160 1
	add.ftz.f32 	%f52, %f48, %f164;
	mul.ftz.f32 	%f53, %f46, %f52;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f54, %f53;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r23, %f54;
	.loc 2 160 1
	ldu.global.u64 	%rd3, [window_size];
	cvt.u32.u64 	%r24, %rd3;
	mad.lo.s32 	%r25, %r24, %r53, -1;
	.loc 3 217 5
	min.u32 	%r54, %r23, %r25;
	shr.u64 	%rd4, %rd2, 32;
	cvt.u32.u64 	%r26, %rd4;
	.loc 2 161 1
	cvt.rn.f32.u32 	%f55, %r26;
	add.ftz.f32 	%f56, %f55, 0f3F000000;
	sub.ftz.f32 	%f57, %f56, %f164;
	mul.ftz.f32 	%f58, %f46, %f57;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f59, %f58;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r27, %f59;
	.loc 3 238 5
	max.s32 	%r4, %r27, %r22;
	.loc 2 166 1
	setp.eq.s32 	%p1, %r54, %r2;
	shr.u64 	%rd5, %rd3, 32;
	cvt.u32.u64 	%r52, %rd5;
	mov.f32 	%f172, 0f00000000;
	mov.f32 	%f171, %f172;
	@%p1 bra 	BB2_29;

	mov.f32 	%f62, 0fBEAAAAAB;
	mov.f32 	%f63, 0f40C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f64, %f63, 0f3EAAAAAB;
	sub.ftz.f32 	%f2, %f62, %f64;
	mov.f32 	%f65, 0f41F00000;
	.loc 2 108 1
	mul.ftz.f32 	%f66, %f65, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f3, %f63, 0f3EAAAAAB, %f66;
	mov.f32 	%f67, 0fC1400000;
	mov.f32 	%f68, 0fC2400000;
	.loc 2 108 1
	mul.ftz.f32 	%f69, %f68, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f4, %f67, 0f3EAAAAAB, %f69;
	mov.f32 	%f70, 0f41C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f71, %f70, 0f3EAAAAAB;
	mov.f32 	%f72, 0f41000000;
	.loc 2 108 1
	fma.rn.ftz.f32 	%f5, %f72, 0f3EAAAAAB, %f71;
	mov.f32 	%f73, 0fC1100000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f74, %f73, 0f3EAAAAAB, 0f41400000;
	mov.f32 	%f75, 0f41400000;
	.loc 2 111 1
	sub.ftz.f32 	%f6, %f74, %f64;
	fma.rn.ftz.f32 	%f76, %f75, 0f3EAAAAAB, 0fC1900000;
	fma.rn.ftz.f32 	%f7, %f63, 0f3EAAAAAB, %f76;
	mov.f32 	%f77, 0fC0000000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f8, %f77, 0f3EAAAAAB, 0f40C00000;
	mov.f32 	%f172, 0f00000000;
	mov.f32 	%f171, %f172;

BB2_2:
	.loc 2 166 1
	mov.u32 	%r7, %r53;
	mov.f32 	%f9, %f164;
	mov.u32 	%r6, %r52;
	add.s32 	%r54, %r54, -1;
	.loc 2 167 1
	ld.global.u32 	%r28, [launch_index+4];
	cvt.rn.f32.u32 	%f78, %r28;
	add.ftz.f32 	%f79, %f78, 0f3F000000;
	add.ftz.f32 	%f80, %f79, %f9;
	cvt.rn.f32.u32 	%f81, %r7;
	mul.ftz.f32 	%f82, %f81, %f80;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f83, %f82;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r29, %f83;
	.loc 2 167 1
	mad.lo.s32 	%r30, %r6, %r7, -1;
	.loc 3 217 5
	min.u32 	%r10, %r29, %r30;
	.loc 2 169 1
	setp.eq.s32 	%p2, %r10, %r4;
	@%p2 bra 	BB2_27;

	.loc 2 169 1
	add.s32 	%r56, %r10, -1;
	sub.s32 	%r55, %r10, %r4;

BB2_4:
	.loc 2 171 1
	cvt.u64.u32 	%rd14, %r54;
	cvta.global.u64 	%rd13, output_samples;
	cvt.u64.u32 	%rd15, %r56;
	mov.u32 	%r33, 2;
	mov.u32 	%r34, 12;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd13, %r33, %r34, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	.loc 2 171 1
	ld.f32 	%f85, [%rd6+4];
	// inline asm
	call (%rd12), _rt_buffer_get_64, (%rd13, %r33, %r34, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	ld.global.v2.u32 	{%r50, %r51}, [launch_index];
	.loc 2 130 1
	cvt.rn.f32.u32 	%f86, %r50;
	add.ftz.f32 	%f87, %f86, 0f3F000000;
	sub.ftz.f32 	%f88, %f85, %f87;
	.loc 3 392 5
	abs.ftz.f32 	%f14, %f88;
	.loc 2 131 1
	cvt.rn.f32.u32 	%f89, %r51;
	add.ftz.f32 	%f90, %f89, 0f3F000000;
	.loc 2 171 1
	ld.f32 	%f91, [%rd12+8];
	.loc 2 131 1
	sub.ftz.f32 	%f92, %f91, %f90;
	.loc 3 392 5
	abs.ftz.f32 	%f15, %f92;
	.loc 2 133 1
	ld.global.f32 	%f16, [filter_width];
	setp.gt.ftz.f32 	%p3, %f14, %f16;
	setp.gt.ftz.f32 	%p4, %f15, %f16;
	or.pred  	%p5, %p3, %p4;
	mov.f32 	%f170, 0f00000000;
	@%p5 bra 	BB2_26;

	.loc 2 137 1
	ld.global.u32 	%r15, [filter_type];
	setp.eq.s32 	%p6, %r15, 0;
	mov.f32 	%f170, 0f3F800000;
	@%p6 bra 	BB2_26;

	.loc 2 137 1
	setp.eq.s32 	%p7, %r15, 1;
	@%p7 bra 	BB2_25;

	.loc 2 137 1
	setp.eq.s32 	%p8, %r15, 2;
	@%p8 bra 	BB2_24;

	.loc 2 137 1
	setp.eq.s32 	%p9, %r15, 3;
	@%p9 bra 	BB2_17;

	.loc 2 137 1
	setp.ne.s32 	%p10, %r15, 4;
	mov.f32 	%f170, 0f3F800000;
	@%p10 bra 	BB2_26;

	.loc 3 749 5
	div.approx.ftz.f32 	%f17, %f14, %f16;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p11, %f17, 0f3727C5AC;
	mov.f32 	%f95, 0f3F800000;
	.loc 2 117 1
	mov.f32 	%f167, %f95;
	@%p11 bra 	BB2_13;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p12, %f17, 0f3F800000;
	mov.f32 	%f96, 0f00000000;
	.loc 2 118 1
	mov.f32 	%f167, %f96;
	@%p12 bra 	BB2_13;

	.loc 2 119 1
	mul.ftz.f32 	%f97, %f17, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f98, [sinc_tau];
	mul.ftz.f32 	%f99, %f97, %f98;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f100, %f99;
	.loc 3 749 5
	div.approx.ftz.f32 	%f101, %f100, %f99;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f102, %f97;
	.loc 3 749 5
	div.approx.ftz.f32 	%f103, %f102, %f97;
	.loc 2 122 1
	mul.ftz.f32 	%f18, %f101, %f103;
	mov.f32 	%f167, %f18;

BB2_13:
	.loc 2 122 1
	mov.f32 	%f19, %f167;
	.loc 3 749 5
	div.approx.ftz.f32 	%f20, %f15, %f16;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p13, %f20, 0f3727C5AC;
	mov.f32 	%f166, %f95;
	@%p13 bra 	BB2_16;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p14, %f20, 0f3F800000;
	mov.f32 	%f166, 0f00000000;
	@%p14 bra 	BB2_16;

	.loc 2 119 1
	mul.ftz.f32 	%f106, %f20, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f107, [sinc_tau];
	mul.ftz.f32 	%f108, %f106, %f107;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f109, %f108;
	.loc 3 749 5
	div.approx.ftz.f32 	%f110, %f109, %f108;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f111, %f106;
	.loc 3 749 5
	div.approx.ftz.f32 	%f112, %f111, %f106;
	.loc 2 122 1
	mul.ftz.f32 	%f166, %f110, %f112;

BB2_16:
	.loc 2 148 1
	mul.ftz.f32 	%f170, %f19, %f166;
	bra.uni 	BB2_26;

BB2_17:
	.loc 3 749 5
	div.approx.ftz.f32 	%f24, %f14, %f16;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p15, %f24, 0f3F800000;
	@%p15 bra 	BB2_19;

	.loc 2 111 1
	mul.ftz.f32 	%f113, %f6, %f24;
	mul.ftz.f32 	%f114, %f113, %f24;
	mul.ftz.f32 	%f115, %f7, %f24;
	mul.ftz.f32 	%f116, %f115, %f24;
	fma.rn.ftz.f32 	%f117, %f114, %f24, %f116;
	add.ftz.f32 	%f168, %f117, %f8;
	bra.uni 	BB2_20;

BB2_19:
	.loc 2 108 1
	mul.ftz.f32 	%f118, %f2, %f24;
	mul.ftz.f32 	%f119, %f118, %f24;
	mul.ftz.f32 	%f120, %f3, %f24;
	mul.ftz.f32 	%f121, %f120, %f24;
	fma.rn.ftz.f32 	%f122, %f119, %f24, %f121;
	fma.rn.ftz.f32 	%f123, %f4, %f24, %f122;
	add.ftz.f32 	%f168, %f123, %f5;

BB2_20:
	.loc 2 111 1
	mul.ftz.f32 	%f28, %f168, 0f3E2AAAAB;
	.loc 3 749 5
	div.approx.ftz.f32 	%f29, %f15, %f16;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p16, %f29, 0f3F800000;
	@%p16 bra 	BB2_22;

	.loc 2 111 1
	mul.ftz.f32 	%f124, %f6, %f29;
	mul.ftz.f32 	%f125, %f124, %f29;
	mul.ftz.f32 	%f126, %f7, %f29;
	mul.ftz.f32 	%f127, %f126, %f29;
	fma.rn.ftz.f32 	%f128, %f125, %f29, %f127;
	add.ftz.f32 	%f169, %f128, %f8;
	bra.uni 	BB2_23;

BB2_22:
	.loc 2 108 1
	mul.ftz.f32 	%f129, %f2, %f29;
	mul.ftz.f32 	%f130, %f129, %f29;
	mul.ftz.f32 	%f131, %f3, %f29;
	mul.ftz.f32 	%f132, %f131, %f29;
	fma.rn.ftz.f32 	%f133, %f130, %f29, %f132;
	fma.rn.ftz.f32 	%f134, %f4, %f29, %f133;
	add.ftz.f32 	%f169, %f134, %f5;

BB2_23:
	.loc 2 111 1
	mul.ftz.f32 	%f135, %f169, 0f3E2AAAAB;
	.loc 2 146 1
	mul.ftz.f32 	%f170, %f28, %f135;
	bra.uni 	BB2_26;

BB2_24:
	.loc 2 143 1
	ld.global.f32 	%f136, [gaussian_alpha];
	neg.ftz.f32 	%f137, %f136;
	mul.ftz.f32 	%f138, %f16, %f137;
	mul.ftz.f32 	%f139, %f138, %f16;
	.loc 4 1294 3
	mul.ftz.f32 	%f140, %f139, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f141, %f140;
	.loc 2 144 1
	mul.ftz.f32 	%f142, %f14, %f137;
	mul.ftz.f32 	%f143, %f142, %f14;
	.loc 4 1294 3
	mul.ftz.f32 	%f144, %f143, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f145, %f144;
	.loc 2 144 1
	sub.ftz.f32 	%f146, %f145, %f141;
	mov.f32 	%f147, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f148, %f147, %f146;
	.loc 2 144 1
	mul.ftz.f32 	%f149, %f15, %f137;
	mul.ftz.f32 	%f150, %f149, %f15;
	.loc 4 1294 3
	mul.ftz.f32 	%f151, %f150, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f152, %f151;
	.loc 2 144 1
	sub.ftz.f32 	%f153, %f152, %f141;
	.loc 3 432 5
	max.ftz.f32 	%f154, %f147, %f153;
	.loc 2 144 1
	mul.ftz.f32 	%f170, %f148, %f154;
	bra.uni 	BB2_26;

BB2_25:
	.loc 2 141 1
	sub.ftz.f32 	%f155, %f16, %f14;
	mov.f32 	%f156, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f157, %f156, %f155;
	.loc 2 141 1
	sub.ftz.f32 	%f158, %f16, %f15;
	.loc 3 432 5
	max.ftz.f32 	%f159, %f156, %f158;
	.loc 2 141 1
	mul.ftz.f32 	%f170, %f157, %f159;

BB2_26:
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd13, %r33, %r34, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	.loc 2 172 1
	ld.f32 	%f160, [%rd18];
	fma.rn.ftz.f32 	%f172, %f170, %f160, %f172;
	.loc 2 173 1
	add.ftz.f32 	%f171, %f171, %f170;
	.loc 2 169 1
	add.s32 	%r56, %r56, -1;
	add.s32 	%r55, %r55, -1;
	setp.ne.s32 	%p17, %r55, 0;
	@%p17 bra 	BB2_4;

BB2_27:
	.loc 2 166 1
	setp.eq.s32 	%p18, %r54, %r2;
	@%p18 bra 	BB2_29;

	.loc 2 167 1
	ld.global.u32 	%r53, [sqrt_samples_per_pixel];
	ld.global.f32 	%f164, [filter_width];
	ld.global.u32 	%r52, [window_size+4];
	bra.uni 	BB2_2;

BB2_29:
	.loc 2 177 1
	ld.global.v2.u32 	{%r48, %r49}, [launch_index];
	cvt.u64.u32 	%rd26, %r48;
	cvt.u64.u32 	%rd27, %r49;
	cvta.global.u64 	%rd25, output_color_only;
	mov.u32 	%r42, 2;
	mov.u32 	%r43, 4;
	mov.u64 	%rd29, 0;
	.loc 3 749 5
	div.approx.ftz.f32 	%f161, %f172, %f171;
	.loc 3 633 5
	cvt.sat.ftz.f32.f32 	%f162, %f161;
	.loc 2 177 1
	mul.ftz.f32 	%f163, %f162, 0f437FFD71;
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r46, %f163;
	.loc 2 177 1
	cvt.u8.u32 	%rc1, %r46;
	mov.u16 	%rc2, -1;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r42, %r43, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	.loc 2 177 1
	st.v4.u8 	[%rd24], {%rc1, %rc1, %rc1, %rc2};
	.loc 2 178 2
	ret;
}

.visible .entry _Z23zp_zero_scatter_buffersv(

)
{
	.reg .s32 	%r<16>;
	.reg .s64 	%rd<13>;


	.loc 2 182 1
	cvta.global.u64 	%rd2, weighted_scatter_sums;
	ld.global.v2.u32 	{%r12, %r13}, [launch_index];
	cvt.u64.u32 	%rd3, %r12;
	cvt.u64.u32 	%rd4, %r13;
	mov.u32 	%r3, 2;
	mov.u32 	%r4, 4;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r3, %r4, %rd3, %rd4, %rd12, %rd12);
	// inline asm
	mov.u32 	%r7, 0;
	.loc 2 182 1
	st.u32 	[%rd1], %r7;
	.loc 2 183 1
	ld.global.v2.u32 	{%r14, %r15}, [launch_index];
	cvt.u64.u32 	%rd9, %r14;
	cvt.u64.u32 	%rd10, %r15;
	cvta.global.u64 	%rd8, filter_weights;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r3, %r4, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	st.u32 	[%rd7], %r7;
	.loc 2 184 2
	ret;
}

.visible .entry _Z18zp_scatter_samplesv(

)
{
	.reg .pred 	%p<47>;
	.reg .s32 	%r<87>;
	.reg .f32 	%f<295>;
	.reg .s64 	%rd<32>;


	.loc 2 234 1
	ldu.global.u32 	%r79, [sqrt_samples_per_pixel];
	setp.eq.s32 	%p3, %r79, 0;
	@%p3 bra 	BB4_64;

	.loc 2 203 1
	cvta.global.u64 	%rd1, weighted_scatter_sums;
	.loc 2 204 1
	cvta.global.u64 	%rd2, filter_weights;
	mov.f32 	%f63, 0f40C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f64, %f63, 0f3EAAAAAB;
	mov.f32 	%f65, 0fBEAAAAAB;
	.loc 2 108 1
	sub.ftz.f32 	%f1, %f65, %f64;
	mov.f32 	%f66, 0f41F00000;
	.loc 2 108 1
	mul.ftz.f32 	%f67, %f66, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f2, %f63, 0f3EAAAAAB, %f67;
	mov.f32 	%f68, 0fC1400000;
	mov.f32 	%f69, 0fC2400000;
	.loc 2 108 1
	mul.ftz.f32 	%f70, %f69, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f3, %f68, 0f3EAAAAAB, %f70;
	mov.f32 	%f71, 0f41C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f72, %f71, 0f3EAAAAAB;
	mov.f32 	%f73, 0f41000000;
	.loc 2 108 1
	fma.rn.ftz.f32 	%f4, %f73, 0f3EAAAAAB, %f72;
	mov.f32 	%f74, 0fC1100000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f75, %f74, 0f3EAAAAAB, 0f41400000;
	mov.f32 	%f76, 0f41400000;
	.loc 2 111 1
	sub.ftz.f32 	%f5, %f75, %f64;
	fma.rn.ftz.f32 	%f77, %f76, 0f3EAAAAAB, 0fC1900000;
	fma.rn.ftz.f32 	%f6, %f63, 0f3EAAAAAB, %f77;
	mov.f32 	%f78, 0fC0000000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f7, %f78, 0f3EAAAAAB, 0f40C00000;
	mov.u32 	%r30, 0;
	mov.u32 	%r82, %r30;

BB4_2:
	.loc 2 235 1
	mov.u32 	%r74, %r79;
	mov.u32 	%r77, %r74;
	setp.eq.s32 	%p4, %r77, 0;
	mov.u32 	%r78, %r77;
	mov.u32 	%r81, %r30;
	@%p4 bra 	BB4_63;

BB4_3:
	.loc 2 236 1
	mov.u32 	%r5, %r81;
	mov.u32 	%r4, %r77;
	ld.global.u64 	%rd4, [launch_index];
	cvt.u32.u64 	%r32, %rd4;
	mad.lo.s32 	%r33, %r4, %r32, %r82;
	shr.u64 	%rd5, %rd4, 32;
	cvt.u32.u64 	%r34, %rd5;
	.loc 2 236 1
	mad.lo.s32 	%r35, %r34, %r4, %r5;
	.loc 2 88 1
	cvt.rn.f32.u32 	%f79, %r33;
	add.ftz.f32 	%f80, %f79, 0f3F000000;
	cvt.rn.f32.u32 	%f81, %r4;
	.loc 3 749 5
	div.approx.ftz.f32 	%f8, %f80, %f81;
	.loc 2 88 1
	cvt.rn.f32.u32 	%f82, %r35;
	add.ftz.f32 	%f83, %f82, 0f3F000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f9, %f83, %f81;
	.loc 2 72 1
	ld.global.u32 	%r6, [render_type];
	setp.eq.s32 	%p5, %r6, 0;
	@%p5 bra 	BB4_6;

	.loc 2 74 1
	setp.ne.s32 	%p6, %r6, 1;
	mov.f32 	%f281, 0f00000000;
	@%p6 bra 	BB4_7;

	.loc 2 61 1
	ld.global.f32 	%f85, [checkerboard_rotate];
	mul.ftz.f32 	%f86, %f85, 0f40490FDB;
	mov.f32 	%f87, 0f43340000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f88, %f86, %f87;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f89, %f88;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f90, %f88;
	.loc 2 63 1
	mul.ftz.f32 	%f91, %f90, %f9;
	fma.rn.ftz.f32 	%f92, %f89, %f8, %f91;
	ld.global.u32 	%r36, [checkerboard_width];
	cvt.rn.f32.s32 	%f93, %r36;
	.loc 3 749 5
	div.approx.ftz.f32 	%f94, %f92, %f93;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f95, %f94;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r37, %f95;
	.loc 3 338 5
	abs.s32 	%r38, %r37;
	.loc 2 64 1
	mul.ftz.f32 	%f96, %f89, %f9;
	mul.ftz.f32 	%f97, %f90, %f8;
	sub.ftz.f32 	%f98, %f96, %f97;
	.loc 3 749 5
	div.approx.ftz.f32 	%f99, %f98, %f93;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f100, %f99;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r39, %f100;
	.loc 3 338 5
	abs.s32 	%r40, %r39;
	.loc 2 66 1
	shr.u32 	%r41, %r38, 31;
	add.s32 	%r42, %r38, %r41;
	and.b32  	%r43, %r42, -2;
	sub.s32 	%r44, %r38, %r43;
	shr.u32 	%r45, %r40, 31;
	add.s32 	%r46, %r40, %r45;
	and.b32  	%r47, %r46, -2;
	sub.s32 	%r48, %r40, %r47;
	setp.eq.s32 	%p7, %r44, %r48;
	.loc 2 66 1
	selp.f32 	%f281, 0f3F800000, 0f00000000, %p7;
	bra.uni 	BB4_7;

BB4_6:
	.loc 2 52 1
	ld.global.v2.u32 	{%r71, %r72}, [window_size];
	.loc 2 53 1
	cvt.rn.f32.u32 	%f101, %r71;
	cvt.rn.f32.u32 	%f102, %r72;
	.loc 3 749 5
	div.approx.ftz.f32 	%f103, %f8, %f101;
	div.approx.ftz.f32 	%f104, %f9, %f102;
	.loc 2 54 1
	mul.ftz.f32 	%f105, %f104, %f104;
	fma.rn.ftz.f32 	%f106, %f103, %f103, %f105;
	.loc 3 996 5
	sqrt.approx.ftz.f32 	%f107, %f106;
	.loc 2 55 1
	mul.ftz.f32 	%f108, %f107, 0f44FA0000;
	mul.ftz.f32 	%f109, %f108, %f107;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f110, %f109;
	.loc 2 55 1
	add.ftz.f32 	%f111, %f110, 0f3F800000;
	mov.f32 	%f112, 0f40000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f281, %f111, %f112;

BB4_7:
	.loc 2 191 1
	ld.global.f32 	%f282, [filter_width];
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f14, %f8;
	.loc 2 196 1
	setp.eq.ftz.f32 	%p9, %f14, %f8;
	mov.pred 	%p46, 0;
	@%p9 bra 	BB4_9;

	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f113, %f9;
	.loc 2 196 1
	setp.neu.ftz.f32 	%p46, %f113, %f9;

BB4_9:
	.loc 2 198 1
	setp.leu.ftz.f32 	%p10, %f282, 0f3F000000;
	and.pred  	%p11, %p46, %p10;
	@%p11 bra 	BB4_39;

	.loc 2 208 1
	add.ftz.f32 	%f114, %f8, 0fBF000000;
	.loc 2 210 1
	sub.ftz.f32 	%f115, %f114, %f282;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f116, %f115;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r51, %f116;
	.loc 2 211 1
	add.ftz.f32 	%f117, %f114, %f282;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f118, %f117;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r52, %f118;
	.loc 2 209 1
	add.ftz.f32 	%f119, %f9, 0fBF000000;
	.loc 2 212 1
	sub.ftz.f32 	%f120, %f119, %f282;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f121, %f120;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r53, %f121;
	mov.u32 	%r54, 0;
	.loc 3 238 5
	max.s32 	%r7, %r51, %r54;
	.loc 2 214 1
	ld.global.u64 	%rd6, [window_size];
	cvt.u32.u64 	%r55, %rd6;
	add.s32 	%r56, %r55, -1;
	.loc 3 217 5
	min.u32 	%r84, %r52, %r56;
	.loc 3 238 5
	max.s32 	%r9, %r53, %r54;
	.loc 2 217 1
	setp.eq.s32 	%p12, %r84, %r7;
	shr.u64 	%rd7, %rd6, 32;
	cvt.u32.u64 	%r83, %rd7;
	@%p12 bra 	BB4_62;

BB4_11:
	.loc 2 217 1
	mov.u32 	%r11, %r83;
	add.s32 	%r84, %r84, -1;
	.loc 2 218 1
	add.ftz.f32 	%f123, %f119, %f282;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f124, %f123;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r57, %f124;
	.loc 2 219 1
	add.s32 	%r58, %r11, -1;
	.loc 3 217 5
	min.u32 	%r14, %r57, %r58;
	.loc 2 220 1
	setp.eq.s32 	%p13, %r14, %r9;
	@%p13 bra 	BB4_37;

	.loc 2 130 1
	cvt.rn.f32.u32 	%f125, %r84;
	add.ftz.f32 	%f126, %f125, 0f3F000000;
	sub.ftz.f32 	%f127, %f8, %f126;
	.loc 3 392 5
	abs.ftz.f32 	%f16, %f127;
	.loc 2 223 1
	cvt.u64.u32 	%rd3, %r84;
	.loc 2 220 1
	add.s32 	%r86, %r14, -1;
	sub.s32 	%r85, %r14, %r9;

BB4_13:
	.loc 2 131 1
	cvt.rn.f32.u32 	%f129, %r86;
	add.ftz.f32 	%f130, %f129, 0f3F000000;
	sub.ftz.f32 	%f131, %f9, %f130;
	.loc 3 392 5
	abs.ftz.f32 	%f18, %f131;
	.loc 2 133 1
	setp.gt.ftz.f32 	%p14, %f18, %f282;
	setp.gt.ftz.f32 	%p15, %f16, %f282;
	or.pred  	%p16, %p15, %p14;
	mov.f32 	%f288, 0f00000000;
	@%p16 bra 	BB4_35;

	.loc 2 137 1
	ld.global.u32 	%r19, [filter_type];
	setp.eq.s32 	%p17, %r19, 0;
	mov.f32 	%f288, 0f3F800000;
	@%p17 bra 	BB4_35;

	.loc 2 137 1
	setp.eq.s32 	%p18, %r19, 1;
	@%p18 bra 	BB4_34;

	.loc 2 137 1
	setp.eq.s32 	%p19, %r19, 2;
	@%p19 bra 	BB4_33;

	.loc 2 137 1
	setp.eq.s32 	%p20, %r19, 3;
	@%p20 bra 	BB4_26;

	.loc 2 137 1
	setp.ne.s32 	%p21, %r19, 4;
	mov.f32 	%f288, 0f3F800000;
	@%p21 bra 	BB4_35;

	.loc 3 749 5
	div.approx.ftz.f32 	%f19, %f16, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p22, %f19, 0f3727C5AC;
	mov.f32 	%f134, 0f3F800000;
	.loc 2 117 1
	mov.f32 	%f285, %f134;
	@%p22 bra 	BB4_22;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p23, %f19, 0f3F800000;
	mov.f32 	%f135, 0f00000000;
	.loc 2 118 1
	mov.f32 	%f285, %f135;
	@%p23 bra 	BB4_22;

	.loc 2 119 1
	mul.ftz.f32 	%f136, %f19, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f137, [sinc_tau];
	mul.ftz.f32 	%f138, %f136, %f137;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f139, %f138;
	.loc 3 749 5
	div.approx.ftz.f32 	%f140, %f139, %f138;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f141, %f136;
	.loc 3 749 5
	div.approx.ftz.f32 	%f142, %f141, %f136;
	.loc 2 122 1
	mul.ftz.f32 	%f20, %f140, %f142;
	mov.f32 	%f285, %f20;

BB4_22:
	.loc 2 122 1
	mov.f32 	%f21, %f285;
	.loc 3 749 5
	div.approx.ftz.f32 	%f22, %f18, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p24, %f22, 0f3727C5AC;
	mov.f32 	%f284, %f134;
	@%p24 bra 	BB4_25;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p25, %f22, 0f3F800000;
	mov.f32 	%f284, 0f00000000;
	@%p25 bra 	BB4_25;

	.loc 2 119 1
	mul.ftz.f32 	%f145, %f22, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f146, [sinc_tau];
	mul.ftz.f32 	%f147, %f145, %f146;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f148, %f147;
	.loc 3 749 5
	div.approx.ftz.f32 	%f149, %f148, %f147;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f150, %f145;
	.loc 3 749 5
	div.approx.ftz.f32 	%f151, %f150, %f145;
	.loc 2 122 1
	mul.ftz.f32 	%f284, %f149, %f151;

BB4_25:
	.loc 2 148 1
	mul.ftz.f32 	%f288, %f21, %f284;
	bra.uni 	BB4_35;

BB4_26:
	.loc 3 749 5
	div.approx.ftz.f32 	%f26, %f16, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p26, %f26, 0f3F800000;
	@%p26 bra 	BB4_28;

	.loc 2 111 1
	mul.ftz.f32 	%f152, %f5, %f26;
	mul.ftz.f32 	%f153, %f152, %f26;
	mul.ftz.f32 	%f154, %f6, %f26;
	mul.ftz.f32 	%f155, %f154, %f26;
	fma.rn.ftz.f32 	%f156, %f153, %f26, %f155;
	add.ftz.f32 	%f286, %f156, %f7;
	bra.uni 	BB4_29;

BB4_28:
	.loc 2 108 1
	mul.ftz.f32 	%f157, %f1, %f26;
	mul.ftz.f32 	%f158, %f157, %f26;
	mul.ftz.f32 	%f159, %f2, %f26;
	mul.ftz.f32 	%f160, %f159, %f26;
	fma.rn.ftz.f32 	%f161, %f158, %f26, %f160;
	fma.rn.ftz.f32 	%f162, %f3, %f26, %f161;
	add.ftz.f32 	%f286, %f162, %f4;

BB4_29:
	.loc 2 111 1
	mul.ftz.f32 	%f30, %f286, 0f3E2AAAAB;
	.loc 3 749 5
	div.approx.ftz.f32 	%f31, %f18, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p27, %f31, 0f3F800000;
	@%p27 bra 	BB4_31;

	.loc 2 111 1
	mul.ftz.f32 	%f163, %f5, %f31;
	mul.ftz.f32 	%f164, %f163, %f31;
	mul.ftz.f32 	%f165, %f6, %f31;
	mul.ftz.f32 	%f166, %f165, %f31;
	fma.rn.ftz.f32 	%f167, %f164, %f31, %f166;
	add.ftz.f32 	%f287, %f167, %f7;
	bra.uni 	BB4_32;

BB4_31:
	.loc 2 108 1
	mul.ftz.f32 	%f168, %f1, %f31;
	mul.ftz.f32 	%f169, %f168, %f31;
	mul.ftz.f32 	%f170, %f2, %f31;
	mul.ftz.f32 	%f171, %f170, %f31;
	fma.rn.ftz.f32 	%f172, %f169, %f31, %f171;
	fma.rn.ftz.f32 	%f173, %f3, %f31, %f172;
	add.ftz.f32 	%f287, %f173, %f4;

BB4_32:
	.loc 2 111 1
	mul.ftz.f32 	%f174, %f287, 0f3E2AAAAB;
	.loc 2 146 1
	mul.ftz.f32 	%f288, %f30, %f174;
	bra.uni 	BB4_35;

BB4_33:
	.loc 2 143 1
	ld.global.f32 	%f175, [gaussian_alpha];
	neg.ftz.f32 	%f176, %f175;
	mul.ftz.f32 	%f177, %f282, %f176;
	mul.ftz.f32 	%f178, %f177, %f282;
	.loc 4 1294 3
	mul.ftz.f32 	%f179, %f178, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f180, %f179;
	.loc 2 144 1
	mul.ftz.f32 	%f181, %f16, %f176;
	mul.ftz.f32 	%f182, %f181, %f16;
	.loc 4 1294 3
	mul.ftz.f32 	%f183, %f182, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f184, %f183;
	.loc 2 144 1
	sub.ftz.f32 	%f185, %f184, %f180;
	mov.f32 	%f186, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f187, %f186, %f185;
	.loc 2 144 1
	mul.ftz.f32 	%f188, %f18, %f176;
	mul.ftz.f32 	%f189, %f188, %f18;
	.loc 4 1294 3
	mul.ftz.f32 	%f190, %f189, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f191, %f190;
	.loc 2 144 1
	sub.ftz.f32 	%f192, %f191, %f180;
	.loc 3 432 5
	max.ftz.f32 	%f193, %f186, %f192;
	.loc 2 144 1
	mul.ftz.f32 	%f288, %f187, %f193;
	bra.uni 	BB4_35;

BB4_34:
	.loc 2 141 1
	sub.ftz.f32 	%f194, %f282, %f16;
	mov.f32 	%f195, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f196, %f195, %f194;
	.loc 2 141 1
	sub.ftz.f32 	%f197, %f282, %f18;
	.loc 3 432 5
	max.ftz.f32 	%f198, %f195, %f197;
	.loc 2 141 1
	mul.ftz.f32 	%f288, %f196, %f198;

BB4_35:
	.loc 2 223 1
	cvt.u64.u32 	%rd17, %r86;
	mov.u32 	%r61, 2;
	mov.u32 	%r62, 4;
	mov.u64 	%rd19, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd1, %r61, %r62, %rd3, %rd17, %rd19, %rd19);
	// inline asm
	.loc 2 223 1
	mul.ftz.f32 	%f199, %f281, %f288;
	.loc 3 1844 5
	atom.add.f32 	%f200, [%rd8], %f199;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd2, %r61, %r62, %rd3, %rd17, %rd19, %rd19);
	// inline asm
	.loc 3 1844 5
	atom.add.f32 	%f201, [%rd14], %f288;
	.loc 2 220 1
	setp.eq.s32 	%p28, %r85, 1;
	@%p28 bra 	BB4_37;

	.loc 2 133 1
	ld.global.f32 	%f282, [filter_width];
	.loc 2 220 1
	add.s32 	%r86, %r86, -1;
	add.s32 	%r85, %r85, -1;
	bra.uni 	BB4_13;

BB4_37:
	.loc 2 217 1
	setp.eq.s32 	%p29, %r84, %r7;
	@%p29 bra 	BB4_62;

	.loc 2 218 1
	ld.global.f32 	%f282, [filter_width];
	.loc 2 219 1
	ld.global.u32 	%r83, [window_size+4];
	bra.uni 	BB4_11;

BB4_39:
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r23, %f14;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f203, %f9;
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r24, %f203;
	.loc 2 130 1
	cvt.rn.f32.u32 	%f204, %r23;
	add.ftz.f32 	%f205, %f204, 0f3F000000;
	sub.ftz.f32 	%f206, %f8, %f205;
	.loc 3 392 5
	abs.ftz.f32 	%f41, %f206;
	.loc 2 131 1
	cvt.rn.f32.u32 	%f207, %r24;
	add.ftz.f32 	%f208, %f207, 0f3F000000;
	sub.ftz.f32 	%f209, %f9, %f208;
	.loc 3 392 5
	abs.ftz.f32 	%f42, %f209;
	.loc 2 133 1
	setp.gt.ftz.f32 	%p30, %f41, %f282;
	setp.gt.ftz.f32 	%p31, %f42, %f282;
	or.pred  	%p32, %p30, %p31;
	mov.f32 	%f294, 0f00000000;
	@%p32 bra 	BB4_61;

	.loc 2 137 1
	ld.global.u32 	%r25, [filter_type];
	setp.eq.s32 	%p33, %r25, 0;
	mov.f32 	%f294, 0f3F800000;
	@%p33 bra 	BB4_61;

	.loc 2 137 1
	setp.eq.s32 	%p34, %r25, 1;
	@%p34 bra 	BB4_60;

	.loc 2 137 1
	setp.eq.s32 	%p35, %r25, 2;
	@%p35 bra 	BB4_59;

	.loc 2 137 1
	setp.eq.s32 	%p36, %r25, 3;
	@%p36 bra 	BB4_52;

	.loc 2 137 1
	setp.ne.s32 	%p37, %r25, 4;
	mov.f32 	%f294, 0f3F800000;
	@%p37 bra 	BB4_61;

	.loc 3 749 5
	div.approx.ftz.f32 	%f43, %f41, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p38, %f43, 0f3727C5AC;
	mov.f32 	%f212, 0f3F800000;
	.loc 2 117 1
	mov.f32 	%f291, %f212;
	@%p38 bra 	BB4_48;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p39, %f43, 0f3F800000;
	mov.f32 	%f213, 0f00000000;
	.loc 2 118 1
	mov.f32 	%f291, %f213;
	@%p39 bra 	BB4_48;

	.loc 2 119 1
	mul.ftz.f32 	%f214, %f43, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f215, [sinc_tau];
	mul.ftz.f32 	%f216, %f214, %f215;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f217, %f216;
	.loc 3 749 5
	div.approx.ftz.f32 	%f218, %f217, %f216;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f219, %f214;
	.loc 3 749 5
	div.approx.ftz.f32 	%f220, %f219, %f214;
	.loc 2 122 1
	mul.ftz.f32 	%f44, %f218, %f220;
	mov.f32 	%f291, %f44;

BB4_48:
	.loc 2 122 1
	mov.f32 	%f45, %f291;
	.loc 3 749 5
	div.approx.ftz.f32 	%f46, %f42, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p40, %f46, 0f3727C5AC;
	mov.f32 	%f290, %f212;
	@%p40 bra 	BB4_51;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p41, %f46, 0f3F800000;
	mov.f32 	%f290, 0f00000000;
	@%p41 bra 	BB4_51;

	.loc 2 119 1
	mul.ftz.f32 	%f223, %f46, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f224, [sinc_tau];
	mul.ftz.f32 	%f225, %f223, %f224;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f226, %f225;
	.loc 3 749 5
	div.approx.ftz.f32 	%f227, %f226, %f225;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f228, %f223;
	.loc 3 749 5
	div.approx.ftz.f32 	%f229, %f228, %f223;
	.loc 2 122 1
	mul.ftz.f32 	%f290, %f227, %f229;

BB4_51:
	.loc 2 148 1
	mul.ftz.f32 	%f294, %f45, %f290;
	bra.uni 	BB4_61;

BB4_52:
	.loc 3 749 5
	div.approx.ftz.f32 	%f50, %f41, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p42, %f50, 0f3F800000;
	@%p42 bra 	BB4_54;

	.loc 2 111 1
	mul.ftz.f32 	%f230, %f5, %f50;
	mul.ftz.f32 	%f231, %f230, %f50;
	mul.ftz.f32 	%f232, %f6, %f50;
	mul.ftz.f32 	%f233, %f232, %f50;
	fma.rn.ftz.f32 	%f234, %f231, %f50, %f233;
	add.ftz.f32 	%f292, %f234, %f7;
	bra.uni 	BB4_55;

BB4_54:
	.loc 2 108 1
	mul.ftz.f32 	%f235, %f1, %f50;
	mul.ftz.f32 	%f236, %f235, %f50;
	mul.ftz.f32 	%f237, %f2, %f50;
	mul.ftz.f32 	%f238, %f237, %f50;
	fma.rn.ftz.f32 	%f239, %f236, %f50, %f238;
	fma.rn.ftz.f32 	%f240, %f3, %f50, %f239;
	add.ftz.f32 	%f292, %f240, %f4;

BB4_55:
	.loc 2 111 1
	mul.ftz.f32 	%f54, %f292, 0f3E2AAAAB;
	.loc 3 749 5
	div.approx.ftz.f32 	%f55, %f42, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p43, %f55, 0f3F800000;
	@%p43 bra 	BB4_57;

	.loc 2 111 1
	mul.ftz.f32 	%f241, %f5, %f55;
	mul.ftz.f32 	%f242, %f241, %f55;
	mul.ftz.f32 	%f243, %f6, %f55;
	mul.ftz.f32 	%f244, %f243, %f55;
	fma.rn.ftz.f32 	%f245, %f242, %f55, %f244;
	add.ftz.f32 	%f293, %f245, %f7;
	bra.uni 	BB4_58;

BB4_57:
	.loc 2 108 1
	mul.ftz.f32 	%f246, %f1, %f55;
	mul.ftz.f32 	%f247, %f246, %f55;
	mul.ftz.f32 	%f248, %f2, %f55;
	mul.ftz.f32 	%f249, %f248, %f55;
	fma.rn.ftz.f32 	%f250, %f247, %f55, %f249;
	fma.rn.ftz.f32 	%f251, %f3, %f55, %f250;
	add.ftz.f32 	%f293, %f251, %f4;

BB4_58:
	.loc 2 111 1
	mul.ftz.f32 	%f252, %f293, 0f3E2AAAAB;
	.loc 2 146 1
	mul.ftz.f32 	%f294, %f54, %f252;
	bra.uni 	BB4_61;

BB4_59:
	.loc 2 143 1
	ld.global.f32 	%f253, [gaussian_alpha];
	neg.ftz.f32 	%f254, %f253;
	mul.ftz.f32 	%f255, %f282, %f254;
	mul.ftz.f32 	%f256, %f255, %f282;
	.loc 4 1294 3
	mul.ftz.f32 	%f257, %f256, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f258, %f257;
	.loc 2 144 1
	mul.ftz.f32 	%f259, %f41, %f254;
	mul.ftz.f32 	%f260, %f259, %f41;
	.loc 4 1294 3
	mul.ftz.f32 	%f261, %f260, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f262, %f261;
	.loc 2 144 1
	sub.ftz.f32 	%f263, %f262, %f258;
	mov.f32 	%f264, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f265, %f264, %f263;
	.loc 2 144 1
	mul.ftz.f32 	%f266, %f42, %f254;
	mul.ftz.f32 	%f267, %f266, %f42;
	.loc 4 1294 3
	mul.ftz.f32 	%f268, %f267, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f269, %f268;
	.loc 2 144 1
	sub.ftz.f32 	%f270, %f269, %f258;
	.loc 3 432 5
	max.ftz.f32 	%f271, %f264, %f270;
	.loc 2 144 1
	mul.ftz.f32 	%f294, %f265, %f271;
	bra.uni 	BB4_61;

BB4_60:
	.loc 2 141 1
	sub.ftz.f32 	%f272, %f282, %f41;
	mov.f32 	%f273, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f274, %f273, %f272;
	.loc 2 141 1
	sub.ftz.f32 	%f275, %f282, %f42;
	.loc 3 432 5
	max.ftz.f32 	%f276, %f273, %f275;
	.loc 2 141 1
	mul.ftz.f32 	%f294, %f274, %f276;

BB4_61:
	.loc 2 203 1
	cvt.u64.u32 	%rd29, %r24;
	cvt.u64.u32 	%rd28, %r23;
	mov.u32 	%r65, 2;
	mov.u32 	%r66, 4;
	mov.u64 	%rd31, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd1, %r65, %r66, %rd28, %rd29, %rd31, %rd31);
	// inline asm
	.loc 2 203 1
	ld.f32 	%f277, [%rd20];
	fma.rn.ftz.f32 	%f278, %f281, %f294, %f277;
	st.f32 	[%rd20], %f278;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd2, %r65, %r66, %rd28, %rd29, %rd31, %rd31);
	// inline asm
	.loc 2 204 1
	ld.f32 	%f279, [%rd26];
	add.ftz.f32 	%f280, %f279, %f294;
	st.f32 	[%rd26], %f280;

BB4_62:
	.loc 2 235 50
	add.s32 	%r26, %r5, 1;
	.loc 2 235 1
	ld.global.u32 	%r77, [sqrt_samples_per_pixel];
	setp.lt.u32 	%p44, %r26, %r77;
	mov.u32 	%r78, %r77;
	mov.u32 	%r81, %r26;
	@%p44 bra 	BB4_3;

BB4_63:
	.loc 2 234 50
	mov.u32 	%r79, %r78;
	add.s32 	%r82, %r82, 1;
	.loc 2 234 1
	setp.lt.u32 	%p45, %r82, %r79;
	@%p45 bra 	BB4_2;

BB4_64:
	.loc 2 241 2
	ret;
}

.visible .entry _Z20zp_scatter_do_dividev(

)
{
	.reg .s16 	%rc<23>;
	.reg .s32 	%r<23>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<19>;


	.loc 2 244 1
	cvta.global.u64 	%rd2, output_color_only;
	ld.global.v2.u32 	{%r17, %r18}, [launch_index];
	cvt.u64.u32 	%rd3, %r17;
	cvt.u64.u32 	%rd4, %r18;
	mov.u32 	%r5, 2;
	mov.u32 	%r6, 4;
	mov.u64 	%rd18, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r5, %r6, %rd3, %rd4, %rd18, %rd18);
	// inline asm
	.loc 2 244 1
	ld.global.v2.u32 	{%r19, %r20}, [launch_index];
	cvt.u64.u32 	%rd9, %r19;
	cvt.u64.u32 	%rd10, %r20;
	cvta.global.u64 	%rd8, weighted_scatter_sums;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r5, %r6, %rd9, %rd10, %rd18, %rd18);
	// inline asm
	ld.f32 	%f1, [%rd7];
	ld.global.v2.u32 	{%r21, %r22}, [launch_index];
	cvt.u64.u32 	%rd15, %r21;
	cvt.u64.u32 	%rd16, %r22;
	cvta.global.u64 	%rd14, filter_weights;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r5, %r6, %rd15, %rd16, %rd18, %rd18);
	// inline asm
	ld.f32 	%f2, [%rd13];
	.loc 3 749 5
	div.approx.ftz.f32 	%f3, %f1, %f2;
	.loc 3 633 5
	cvt.sat.ftz.f32.f32 	%f4, %f3;
	.loc 2 244 1
	mul.ftz.f32 	%f5, %f4, 0f437FFD71;
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r15, %f5;
	.loc 2 244 1
	cvt.u8.u32 	%rc1, %r15;
	mov.u16 	%rc2, -1;
	.loc 2 244 1
	st.v4.u8 	[%rd1], {%rc1, %rc1, %rc1, %rc2};
	.loc 2 245 2
	ret;
}

.visible .entry _Z26zp_find_contrast_locationsv(

)
{
	.reg .pred 	%p<7>;
	.reg .s16 	%rc<2>;
	.reg .s32 	%r<64>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<19>;


	.loc 2 250 1
	ldu.global.u64 	%rd3, [launch_index];
	cvt.u32.u64 	%r32, %rd3;
	ldu.global.u32 	%r58, [contrast_window_width];
	sub.s32 	%r33, %r32, %r58;
	mov.u32 	%r63, 0;
	.loc 3 238 5
	max.s32 	%r2, %r33, %r63;
	shr.u64 	%rd4, %rd3, 32;
	cvt.u32.u64 	%r34, %rd4;
	.loc 2 251 1
	sub.s32 	%r35, %r34, %r58;
	.loc 3 238 5
	max.s32 	%r3, %r35, %r63;
	.loc 2 252 1
	add.s32 	%r36, %r58, %r32;
	ldu.global.u64 	%rd5, [window_size];
	cvt.u32.u64 	%r37, %rd5;
	add.s32 	%r38, %r37, -1;
	.loc 3 217 5
	min.u32 	%r59, %r36, %r38;
	.loc 2 256 1
	setp.eq.s32 	%p1, %r59, %r2;
	shr.u64 	%rd6, %rd5, 32;
	cvt.u32.u64 	%r57, %rd6;
	mov.u32 	%r62, 255;
	@%p1 bra 	BB6_7;

	.loc 2 262 1
	cvta.global.u64 	%rd1, output_color_only;
	.loc 2 256 1
	neg.s32 	%r6, %r3;
	mov.u32 	%r63, 0;
	mov.u32 	%r62, 255;

BB6_2:
	.loc 2 256 1
	mov.u32 	%r8, %r58;
	mov.u32 	%r7, %r57;
	add.s32 	%r59, %r59, -1;
	.loc 2 258 1
	ld.global.u32 	%r41, [launch_index+4];
	add.s32 	%r42, %r8, %r41;
	add.s32 	%r43, %r7, -1;
	.loc 3 217 5
	min.u32 	%r13, %r42, %r43;
	.loc 2 259 1
	setp.eq.s32 	%p2, %r13, %r3;
	@%p2 bra 	BB6_5;

	.loc 2 262 1
	cvt.u64.u32 	%rd2, %r59;
	.loc 2 259 1
	add.s32 	%r61, %r13, -1;
	add.s32 	%r60, %r6, %r13;

BB6_4:
	.loc 2 262 1
	cvt.u64.u32 	%rd10, %r61;
	mov.u32 	%r44, 2;
	mov.u32 	%r45, 4;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd1, %r44, %r45, %rd2, %rd10, %rd12, %rd12);
	// inline asm
	.loc 2 262 1
	ld.u8 	%r46, [%rd7];
	.loc 3 245 5
	max.u32 	%r63, %r63, %r46;
	.loc 3 217 5
	min.u32 	%r62, %r62, %r46;
	.loc 2 259 1
	add.s32 	%r61, %r61, -1;
	add.s32 	%r60, %r60, -1;
	setp.ne.s32 	%p3, %r60, 0;
	@%p3 bra 	BB6_4;

BB6_5:
	.loc 2 256 1
	setp.eq.s32 	%p4, %r59, %r2;
	@%p4 bra 	BB6_7;

	.loc 2 258 1
	ld.global.u32 	%r58, [contrast_window_width];
	ld.global.u32 	%r57, [window_size+4];
	bra.uni 	BB6_2;

BB6_7:
	.loc 2 270 1
	setp.eq.s32 	%p5, %r63, 0;
	mov.f32 	%f7, 0f00000000;
	@%p5 bra 	BB6_9;

	.loc 2 275 1
	sub.s32 	%r48, %r63, %r62;
	cvt.rn.f32.u32 	%f4, %r48;
	add.s32 	%r49, %r62, %r63;
	cvt.rn.f32.u32 	%f5, %r49;
	.loc 3 749 5
	div.approx.ftz.f32 	%f7, %f4, %f5;

BB6_9:
	.loc 2 277 1
	ld.global.f32 	%f6, [adaptive_contrast_threshold];
	setp.ge.ftz.f32 	%p6, %f7, %f6;
	selp.b16 	%rc1, -1, 0, %p6;
	ld.global.v2.u32 	{%r55, %r56}, [launch_index];
	cvt.u64.u32 	%rd15, %r55;
	cvt.u64.u32 	%rd16, %r56;
	cvta.global.u64 	%rd14, adaptive_sample_locations;
	mov.u32 	%r50, 2;
	mov.u32 	%r51, 1;
	mov.u64 	%rd18, 0;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r50, %r51, %rd15, %rd16, %rd18, %rd18);
	// inline asm
	.loc 2 277 1
	st.u8 	[%rd13], %rc1;
	.loc 2 278 2
	ret;
}

.visible .entry _Z37zp_coalesce_adaptive_sample_locationsv(

)
{



	.loc 2 281 2
	ret;
}

.visible .entry _Z20zp_adaptive_resamplev(

)
{
	.reg .pred 	%p<48>;
	.reg .s16 	%rc<2>;
	.reg .s32 	%r<94>;
	.reg .f32 	%f<295>;
	.reg .s64 	%rd<38>;


	.loc 2 284 1
	cvta.global.u64 	%rd5, adaptive_sample_locations;
	ld.global.v2.u32 	{%r78, %r79}, [launch_index];
	cvt.u64.u32 	%rd6, %r78;
	cvt.u64.u32 	%rd7, %r79;
	mov.u32 	%r30, 2;
	mov.u32 	%r31, 1;
	mov.u64 	%rd9, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r30, %r31, %rd6, %rd7, %rd9, %rd9);
	// inline asm
	.loc 2 284 1
	ld.u8 	%rc1, [%rd4];
	{
	.reg .s16 	%temp1;
	.reg .s16 	%temp2;
	cvt.s16.s8 	%temp1, %rc1;
	mov.b16 	%temp2, 0;
	cvt.s16.s8 	%temp2, %temp2;
	setp.eq.s16 	%p3, %temp1, %temp2;
	}
	@%p3 bra 	BB8_65;

	.loc 2 288 1
	ld.global.u32 	%r86, [sqrt_samples_per_pixel];
	setp.eq.s32 	%p4, %r86, 0;
	@%p4 bra 	BB8_65;

	.loc 2 203 1
	cvta.global.u64 	%rd1, weighted_scatter_sums;
	.loc 2 204 1
	cvta.global.u64 	%rd2, filter_weights;
	mov.f32 	%f63, 0f40C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f64, %f63, 0f3EAAAAAB;
	mov.f32 	%f65, 0fBEAAAAAB;
	.loc 2 108 1
	sub.ftz.f32 	%f1, %f65, %f64;
	mov.f32 	%f66, 0f41F00000;
	.loc 2 108 1
	mul.ftz.f32 	%f67, %f66, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f2, %f63, 0f3EAAAAAB, %f67;
	mov.f32 	%f68, 0fC1400000;
	mov.f32 	%f69, 0fC2400000;
	.loc 2 108 1
	mul.ftz.f32 	%f70, %f69, 0f3EAAAAAB;
	fma.rn.ftz.f32 	%f3, %f68, 0f3EAAAAAB, %f70;
	mov.f32 	%f71, 0f41C00000;
	.loc 2 108 1
	mul.ftz.f32 	%f72, %f71, 0f3EAAAAAB;
	mov.f32 	%f73, 0f41000000;
	.loc 2 108 1
	fma.rn.ftz.f32 	%f4, %f73, 0f3EAAAAAB, %f72;
	mov.f32 	%f74, 0fC1100000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f75, %f74, 0f3EAAAAAB, 0f41400000;
	mov.f32 	%f76, 0f41400000;
	.loc 2 111 1
	sub.ftz.f32 	%f5, %f75, %f64;
	fma.rn.ftz.f32 	%f77, %f76, 0f3EAAAAAB, 0fC1900000;
	fma.rn.ftz.f32 	%f6, %f63, 0f3EAAAAAB, %f77;
	mov.f32 	%f78, 0fC0000000;
	.loc 2 111 1
	fma.rn.ftz.f32 	%f7, %f78, 0f3EAAAAAB, 0f40C00000;
	mov.u32 	%r35, 0;
	mov.u32 	%r89, %r35;

BB8_3:
	.loc 2 289 1
	mov.u32 	%r81, %r86;
	mov.u32 	%r84, %r81;
	setp.eq.s32 	%p5, %r84, 0;
	mov.u32 	%r85, %r84;
	mov.u32 	%r88, %r35;
	@%p5 bra 	BB8_64;

BB8_4:
	.loc 2 290 1
	mov.u32 	%r5, %r88;
	mov.u32 	%r4, %r84;
	ld.global.u64 	%rd10, [launch_index];
	cvt.u32.u64 	%r37, %rd10;
	mad.lo.s32 	%r38, %r4, %r37, %r89;
	shr.u64 	%rd11, %rd10, 32;
	cvt.u32.u64 	%r39, %rd11;
	.loc 2 290 1
	mad.lo.s32 	%r40, %r39, %r4, %r5;
	.loc 2 88 1
	cvt.rn.f32.u32 	%f79, %r38;
	add.ftz.f32 	%f80, %f79, 0f3F000000;
	cvt.rn.f32.u32 	%f81, %r4;
	.loc 3 749 5
	div.approx.ftz.f32 	%f8, %f80, %f81;
	.loc 2 88 1
	cvt.rn.f32.u32 	%f82, %r40;
	add.ftz.f32 	%f83, %f82, 0f3F000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f9, %f83, %f81;
	.loc 2 72 1
	ld.global.u32 	%r6, [render_type];
	setp.eq.s32 	%p6, %r6, 0;
	@%p6 bra 	BB8_7;

	.loc 2 74 1
	setp.ne.s32 	%p7, %r6, 1;
	mov.f32 	%f281, 0f00000000;
	@%p7 bra 	BB8_8;

	.loc 2 61 1
	ld.global.f32 	%f85, [checkerboard_rotate];
	mul.ftz.f32 	%f86, %f85, 0f40490FDB;
	mov.f32 	%f87, 0f43340000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f88, %f86, %f87;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f89, %f88;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f90, %f88;
	.loc 2 63 1
	mul.ftz.f32 	%f91, %f90, %f9;
	fma.rn.ftz.f32 	%f92, %f89, %f8, %f91;
	ld.global.u32 	%r41, [checkerboard_width];
	cvt.rn.f32.s32 	%f93, %r41;
	.loc 3 749 5
	div.approx.ftz.f32 	%f94, %f92, %f93;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f95, %f94;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r42, %f95;
	.loc 3 338 5
	abs.s32 	%r43, %r42;
	.loc 2 64 1
	mul.ftz.f32 	%f96, %f89, %f9;
	mul.ftz.f32 	%f97, %f90, %f8;
	sub.ftz.f32 	%f98, %f96, %f97;
	.loc 3 749 5
	div.approx.ftz.f32 	%f99, %f98, %f93;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f100, %f99;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r44, %f100;
	.loc 3 338 5
	abs.s32 	%r45, %r44;
	.loc 2 66 1
	shr.u32 	%r46, %r43, 31;
	add.s32 	%r47, %r43, %r46;
	and.b32  	%r48, %r47, -2;
	sub.s32 	%r49, %r43, %r48;
	shr.u32 	%r50, %r45, 31;
	add.s32 	%r51, %r45, %r50;
	and.b32  	%r52, %r51, -2;
	sub.s32 	%r53, %r45, %r52;
	setp.eq.s32 	%p8, %r49, %r53;
	.loc 2 66 1
	selp.f32 	%f281, 0f3F800000, 0f00000000, %p8;
	bra.uni 	BB8_8;

BB8_7:
	.loc 2 52 1
	ld.global.v2.u32 	{%r76, %r77}, [window_size];
	.loc 2 53 1
	cvt.rn.f32.u32 	%f101, %r76;
	cvt.rn.f32.u32 	%f102, %r77;
	.loc 3 749 5
	div.approx.ftz.f32 	%f103, %f8, %f101;
	div.approx.ftz.f32 	%f104, %f9, %f102;
	.loc 2 54 1
	mul.ftz.f32 	%f105, %f104, %f104;
	fma.rn.ftz.f32 	%f106, %f103, %f103, %f105;
	.loc 3 996 5
	sqrt.approx.ftz.f32 	%f107, %f106;
	.loc 2 55 1
	mul.ftz.f32 	%f108, %f107, 0f44FA0000;
	mul.ftz.f32 	%f109, %f108, %f107;
	.loc 3 569 5
	cos.approx.ftz.f32 	%f110, %f109;
	.loc 2 55 1
	add.ftz.f32 	%f111, %f110, 0f3F800000;
	mov.f32 	%f112, 0f40000000;
	.loc 3 749 5
	div.approx.ftz.f32 	%f281, %f111, %f112;

BB8_8:
	.loc 2 191 1
	ld.global.f32 	%f282, [filter_width];
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f14, %f8;
	.loc 2 196 1
	setp.eq.ftz.f32 	%p10, %f14, %f8;
	mov.pred 	%p47, 0;
	@%p10 bra 	BB8_10;

	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f113, %f9;
	.loc 2 196 1
	setp.neu.ftz.f32 	%p47, %f113, %f9;

BB8_10:
	.loc 2 198 1
	setp.leu.ftz.f32 	%p11, %f282, 0f3F000000;
	and.pred  	%p12, %p47, %p11;
	@%p12 bra 	BB8_40;

	.loc 2 208 1
	add.ftz.f32 	%f114, %f8, 0fBF000000;
	.loc 2 210 1
	sub.ftz.f32 	%f115, %f114, %f282;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f116, %f115;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r56, %f116;
	.loc 2 211 1
	add.ftz.f32 	%f117, %f114, %f282;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f118, %f117;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r57, %f118;
	.loc 2 209 1
	add.ftz.f32 	%f119, %f9, 0fBF000000;
	.loc 2 212 1
	sub.ftz.f32 	%f120, %f119, %f282;
	.loc 3 613 5
	cvt.rpi.ftz.f32.f32 	%f121, %f120;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r58, %f121;
	mov.u32 	%r59, 0;
	.loc 3 238 5
	max.s32 	%r7, %r56, %r59;
	.loc 2 214 1
	ld.global.u64 	%rd12, [window_size];
	cvt.u32.u64 	%r60, %rd12;
	add.s32 	%r61, %r60, -1;
	.loc 3 217 5
	min.u32 	%r91, %r57, %r61;
	.loc 3 238 5
	max.s32 	%r9, %r58, %r59;
	.loc 2 217 1
	setp.eq.s32 	%p13, %r91, %r7;
	shr.u64 	%rd13, %rd12, 32;
	cvt.u32.u64 	%r90, %rd13;
	@%p13 bra 	BB8_63;

BB8_12:
	.loc 2 217 1
	mov.u32 	%r11, %r90;
	add.s32 	%r91, %r91, -1;
	.loc 2 218 1
	add.ftz.f32 	%f123, %f119, %f282;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f124, %f123;
	.loc 3 1340 5
	cvt.rzi.ftz.s32.f32 	%r62, %f124;
	.loc 2 219 1
	add.s32 	%r63, %r11, -1;
	.loc 3 217 5
	min.u32 	%r14, %r62, %r63;
	.loc 2 220 1
	setp.eq.s32 	%p14, %r14, %r9;
	@%p14 bra 	BB8_38;

	.loc 2 130 1
	cvt.rn.f32.u32 	%f125, %r91;
	add.ftz.f32 	%f126, %f125, 0f3F000000;
	sub.ftz.f32 	%f127, %f8, %f126;
	.loc 3 392 5
	abs.ftz.f32 	%f16, %f127;
	.loc 2 223 1
	cvt.u64.u32 	%rd3, %r91;
	.loc 2 220 1
	add.s32 	%r93, %r14, -1;
	sub.s32 	%r92, %r14, %r9;

BB8_14:
	.loc 2 131 1
	cvt.rn.f32.u32 	%f129, %r93;
	add.ftz.f32 	%f130, %f129, 0f3F000000;
	sub.ftz.f32 	%f131, %f9, %f130;
	.loc 3 392 5
	abs.ftz.f32 	%f18, %f131;
	.loc 2 133 1
	setp.gt.ftz.f32 	%p15, %f18, %f282;
	setp.gt.ftz.f32 	%p16, %f16, %f282;
	or.pred  	%p17, %p16, %p15;
	mov.f32 	%f288, 0f00000000;
	@%p17 bra 	BB8_36;

	.loc 2 137 1
	ld.global.u32 	%r19, [filter_type];
	setp.eq.s32 	%p18, %r19, 0;
	mov.f32 	%f288, 0f3F800000;
	@%p18 bra 	BB8_36;

	.loc 2 137 1
	setp.eq.s32 	%p19, %r19, 1;
	@%p19 bra 	BB8_35;

	.loc 2 137 1
	setp.eq.s32 	%p20, %r19, 2;
	@%p20 bra 	BB8_34;

	.loc 2 137 1
	setp.eq.s32 	%p21, %r19, 3;
	@%p21 bra 	BB8_27;

	.loc 2 137 1
	setp.ne.s32 	%p22, %r19, 4;
	mov.f32 	%f288, 0f3F800000;
	@%p22 bra 	BB8_36;

	.loc 3 749 5
	div.approx.ftz.f32 	%f19, %f16, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p23, %f19, 0f3727C5AC;
	mov.f32 	%f134, 0f3F800000;
	.loc 2 117 1
	mov.f32 	%f285, %f134;
	@%p23 bra 	BB8_23;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p24, %f19, 0f3F800000;
	mov.f32 	%f135, 0f00000000;
	.loc 2 118 1
	mov.f32 	%f285, %f135;
	@%p24 bra 	BB8_23;

	.loc 2 119 1
	mul.ftz.f32 	%f136, %f19, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f137, [sinc_tau];
	mul.ftz.f32 	%f138, %f136, %f137;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f139, %f138;
	.loc 3 749 5
	div.approx.ftz.f32 	%f140, %f139, %f138;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f141, %f136;
	.loc 3 749 5
	div.approx.ftz.f32 	%f142, %f141, %f136;
	.loc 2 122 1
	mul.ftz.f32 	%f20, %f140, %f142;
	mov.f32 	%f285, %f20;

BB8_23:
	.loc 2 122 1
	mov.f32 	%f21, %f285;
	.loc 3 749 5
	div.approx.ftz.f32 	%f22, %f18, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p25, %f22, 0f3727C5AC;
	mov.f32 	%f284, %f134;
	@%p25 bra 	BB8_26;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p26, %f22, 0f3F800000;
	mov.f32 	%f284, 0f00000000;
	@%p26 bra 	BB8_26;

	.loc 2 119 1
	mul.ftz.f32 	%f145, %f22, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f146, [sinc_tau];
	mul.ftz.f32 	%f147, %f145, %f146;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f148, %f147;
	.loc 3 749 5
	div.approx.ftz.f32 	%f149, %f148, %f147;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f150, %f145;
	.loc 3 749 5
	div.approx.ftz.f32 	%f151, %f150, %f145;
	.loc 2 122 1
	mul.ftz.f32 	%f284, %f149, %f151;

BB8_26:
	.loc 2 148 1
	mul.ftz.f32 	%f288, %f21, %f284;
	bra.uni 	BB8_36;

BB8_27:
	.loc 3 749 5
	div.approx.ftz.f32 	%f26, %f16, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p27, %f26, 0f3F800000;
	@%p27 bra 	BB8_29;

	.loc 2 111 1
	mul.ftz.f32 	%f152, %f5, %f26;
	mul.ftz.f32 	%f153, %f152, %f26;
	mul.ftz.f32 	%f154, %f6, %f26;
	mul.ftz.f32 	%f155, %f154, %f26;
	fma.rn.ftz.f32 	%f156, %f153, %f26, %f155;
	add.ftz.f32 	%f286, %f156, %f7;
	bra.uni 	BB8_30;

BB8_29:
	.loc 2 108 1
	mul.ftz.f32 	%f157, %f1, %f26;
	mul.ftz.f32 	%f158, %f157, %f26;
	mul.ftz.f32 	%f159, %f2, %f26;
	mul.ftz.f32 	%f160, %f159, %f26;
	fma.rn.ftz.f32 	%f161, %f158, %f26, %f160;
	fma.rn.ftz.f32 	%f162, %f3, %f26, %f161;
	add.ftz.f32 	%f286, %f162, %f4;

BB8_30:
	.loc 2 111 1
	mul.ftz.f32 	%f30, %f286, 0f3E2AAAAB;
	.loc 3 749 5
	div.approx.ftz.f32 	%f31, %f18, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p28, %f31, 0f3F800000;
	@%p28 bra 	BB8_32;

	.loc 2 111 1
	mul.ftz.f32 	%f163, %f5, %f31;
	mul.ftz.f32 	%f164, %f163, %f31;
	mul.ftz.f32 	%f165, %f6, %f31;
	mul.ftz.f32 	%f166, %f165, %f31;
	fma.rn.ftz.f32 	%f167, %f164, %f31, %f166;
	add.ftz.f32 	%f287, %f167, %f7;
	bra.uni 	BB8_33;

BB8_32:
	.loc 2 108 1
	mul.ftz.f32 	%f168, %f1, %f31;
	mul.ftz.f32 	%f169, %f168, %f31;
	mul.ftz.f32 	%f170, %f2, %f31;
	mul.ftz.f32 	%f171, %f170, %f31;
	fma.rn.ftz.f32 	%f172, %f169, %f31, %f171;
	fma.rn.ftz.f32 	%f173, %f3, %f31, %f172;
	add.ftz.f32 	%f287, %f173, %f4;

BB8_33:
	.loc 2 111 1
	mul.ftz.f32 	%f174, %f287, 0f3E2AAAAB;
	.loc 2 146 1
	mul.ftz.f32 	%f288, %f30, %f174;
	bra.uni 	BB8_36;

BB8_34:
	.loc 2 143 1
	ld.global.f32 	%f175, [gaussian_alpha];
	neg.ftz.f32 	%f176, %f175;
	mul.ftz.f32 	%f177, %f282, %f176;
	mul.ftz.f32 	%f178, %f177, %f282;
	.loc 4 1294 3
	mul.ftz.f32 	%f179, %f178, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f180, %f179;
	.loc 2 144 1
	mul.ftz.f32 	%f181, %f16, %f176;
	mul.ftz.f32 	%f182, %f181, %f16;
	.loc 4 1294 3
	mul.ftz.f32 	%f183, %f182, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f184, %f183;
	.loc 2 144 1
	sub.ftz.f32 	%f185, %f184, %f180;
	mov.f32 	%f186, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f187, %f186, %f185;
	.loc 2 144 1
	mul.ftz.f32 	%f188, %f18, %f176;
	mul.ftz.f32 	%f189, %f188, %f18;
	.loc 4 1294 3
	mul.ftz.f32 	%f190, %f189, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f191, %f190;
	.loc 2 144 1
	sub.ftz.f32 	%f192, %f191, %f180;
	.loc 3 432 5
	max.ftz.f32 	%f193, %f186, %f192;
	.loc 2 144 1
	mul.ftz.f32 	%f288, %f187, %f193;
	bra.uni 	BB8_36;

BB8_35:
	.loc 2 141 1
	sub.ftz.f32 	%f194, %f282, %f16;
	mov.f32 	%f195, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f196, %f195, %f194;
	.loc 2 141 1
	sub.ftz.f32 	%f197, %f282, %f18;
	.loc 3 432 5
	max.ftz.f32 	%f198, %f195, %f197;
	.loc 2 141 1
	mul.ftz.f32 	%f288, %f196, %f198;

BB8_36:
	.loc 2 223 1
	cvt.u64.u32 	%rd23, %r93;
	mov.u32 	%r67, 4;
	// inline asm
	call (%rd14), _rt_buffer_get_64, (%rd1, %r30, %r67, %rd3, %rd23, %rd9, %rd9);
	// inline asm
	.loc 2 223 1
	mul.ftz.f32 	%f199, %f281, %f288;
	.loc 3 1844 5
	atom.add.f32 	%f200, [%rd14], %f199;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd2, %r30, %r67, %rd3, %rd23, %rd9, %rd9);
	// inline asm
	.loc 3 1844 5
	atom.add.f32 	%f201, [%rd20], %f288;
	.loc 2 220 1
	setp.eq.s32 	%p29, %r92, 1;
	@%p29 bra 	BB8_38;

	.loc 2 133 1
	ld.global.f32 	%f282, [filter_width];
	.loc 2 220 1
	add.s32 	%r93, %r93, -1;
	add.s32 	%r92, %r92, -1;
	bra.uni 	BB8_14;

BB8_38:
	.loc 2 217 1
	setp.eq.s32 	%p30, %r91, %r7;
	@%p30 bra 	BB8_63;

	.loc 2 218 1
	ld.global.f32 	%f282, [filter_width];
	.loc 2 219 1
	ld.global.u32 	%r90, [window_size+4];
	bra.uni 	BB8_12;

BB8_40:
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r23, %f14;
	.loc 3 370 5
	cvt.rmi.ftz.f32.f32 	%f203, %f9;
	.loc 3 1386 5
	cvt.rzi.ftz.u32.f32 	%r24, %f203;
	.loc 2 130 1
	cvt.rn.f32.u32 	%f204, %r23;
	add.ftz.f32 	%f205, %f204, 0f3F000000;
	sub.ftz.f32 	%f206, %f8, %f205;
	.loc 3 392 5
	abs.ftz.f32 	%f41, %f206;
	.loc 2 131 1
	cvt.rn.f32.u32 	%f207, %r24;
	add.ftz.f32 	%f208, %f207, 0f3F000000;
	sub.ftz.f32 	%f209, %f9, %f208;
	.loc 3 392 5
	abs.ftz.f32 	%f42, %f209;
	.loc 2 133 1
	setp.gt.ftz.f32 	%p31, %f41, %f282;
	setp.gt.ftz.f32 	%p32, %f42, %f282;
	or.pred  	%p33, %p31, %p32;
	mov.f32 	%f294, 0f00000000;
	@%p33 bra 	BB8_62;

	.loc 2 137 1
	ld.global.u32 	%r25, [filter_type];
	setp.eq.s32 	%p34, %r25, 0;
	mov.f32 	%f294, 0f3F800000;
	@%p34 bra 	BB8_62;

	.loc 2 137 1
	setp.eq.s32 	%p35, %r25, 1;
	@%p35 bra 	BB8_61;

	.loc 2 137 1
	setp.eq.s32 	%p36, %r25, 2;
	@%p36 bra 	BB8_60;

	.loc 2 137 1
	setp.eq.s32 	%p37, %r25, 3;
	@%p37 bra 	BB8_53;

	.loc 2 137 1
	setp.ne.s32 	%p38, %r25, 4;
	mov.f32 	%f294, 0f3F800000;
	@%p38 bra 	BB8_62;

	.loc 3 749 5
	div.approx.ftz.f32 	%f43, %f41, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p39, %f43, 0f3727C5AC;
	mov.f32 	%f212, 0f3F800000;
	.loc 2 117 1
	mov.f32 	%f291, %f212;
	@%p39 bra 	BB8_49;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p40, %f43, 0f3F800000;
	mov.f32 	%f213, 0f00000000;
	.loc 2 118 1
	mov.f32 	%f291, %f213;
	@%p40 bra 	BB8_49;

	.loc 2 119 1
	mul.ftz.f32 	%f214, %f43, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f215, [sinc_tau];
	mul.ftz.f32 	%f216, %f214, %f215;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f217, %f216;
	.loc 3 749 5
	div.approx.ftz.f32 	%f218, %f217, %f216;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f219, %f214;
	.loc 3 749 5
	div.approx.ftz.f32 	%f220, %f219, %f214;
	.loc 2 122 1
	mul.ftz.f32 	%f44, %f218, %f220;
	mov.f32 	%f291, %f44;

BB8_49:
	.loc 2 122 1
	mov.f32 	%f45, %f291;
	.loc 3 749 5
	div.approx.ftz.f32 	%f46, %f42, %f282;
	.loc 2 117 1
	setp.lt.ftz.f32 	%p41, %f46, 0f3727C5AC;
	mov.f32 	%f290, %f212;
	@%p41 bra 	BB8_52;

	.loc 2 118 1
	setp.gt.ftz.f32 	%p42, %f46, 0f3F800000;
	mov.f32 	%f290, 0f00000000;
	@%p42 bra 	BB8_52;

	.loc 2 119 1
	mul.ftz.f32 	%f223, %f46, 0f40490FDB;
	.loc 2 120 1
	ld.global.f32 	%f224, [sinc_tau];
	mul.ftz.f32 	%f225, %f223, %f224;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f226, %f225;
	.loc 3 749 5
	div.approx.ftz.f32 	%f227, %f226, %f225;
	.loc 3 557 5
	sin.approx.ftz.f32 	%f228, %f223;
	.loc 3 749 5
	div.approx.ftz.f32 	%f229, %f228, %f223;
	.loc 2 122 1
	mul.ftz.f32 	%f290, %f227, %f229;

BB8_52:
	.loc 2 148 1
	mul.ftz.f32 	%f294, %f45, %f290;
	bra.uni 	BB8_62;

BB8_53:
	.loc 3 749 5
	div.approx.ftz.f32 	%f50, %f41, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p43, %f50, 0f3F800000;
	@%p43 bra 	BB8_55;

	.loc 2 111 1
	mul.ftz.f32 	%f230, %f5, %f50;
	mul.ftz.f32 	%f231, %f230, %f50;
	mul.ftz.f32 	%f232, %f6, %f50;
	mul.ftz.f32 	%f233, %f232, %f50;
	fma.rn.ftz.f32 	%f234, %f231, %f50, %f233;
	add.ftz.f32 	%f292, %f234, %f7;
	bra.uni 	BB8_56;

BB8_55:
	.loc 2 108 1
	mul.ftz.f32 	%f235, %f1, %f50;
	mul.ftz.f32 	%f236, %f235, %f50;
	mul.ftz.f32 	%f237, %f2, %f50;
	mul.ftz.f32 	%f238, %f237, %f50;
	fma.rn.ftz.f32 	%f239, %f236, %f50, %f238;
	fma.rn.ftz.f32 	%f240, %f3, %f50, %f239;
	add.ftz.f32 	%f292, %f240, %f4;

BB8_56:
	.loc 2 111 1
	mul.ftz.f32 	%f54, %f292, 0f3E2AAAAB;
	.loc 3 749 5
	div.approx.ftz.f32 	%f55, %f42, %f282;
	.loc 2 107 1
	setp.gt.ftz.f32 	%p44, %f55, 0f3F800000;
	@%p44 bra 	BB8_58;

	.loc 2 111 1
	mul.ftz.f32 	%f241, %f5, %f55;
	mul.ftz.f32 	%f242, %f241, %f55;
	mul.ftz.f32 	%f243, %f6, %f55;
	mul.ftz.f32 	%f244, %f243, %f55;
	fma.rn.ftz.f32 	%f245, %f242, %f55, %f244;
	add.ftz.f32 	%f293, %f245, %f7;
	bra.uni 	BB8_59;

BB8_58:
	.loc 2 108 1
	mul.ftz.f32 	%f246, %f1, %f55;
	mul.ftz.f32 	%f247, %f246, %f55;
	mul.ftz.f32 	%f248, %f2, %f55;
	mul.ftz.f32 	%f249, %f248, %f55;
	fma.rn.ftz.f32 	%f250, %f247, %f55, %f249;
	fma.rn.ftz.f32 	%f251, %f3, %f55, %f250;
	add.ftz.f32 	%f293, %f251, %f4;

BB8_59:
	.loc 2 111 1
	mul.ftz.f32 	%f252, %f293, 0f3E2AAAAB;
	.loc 2 146 1
	mul.ftz.f32 	%f294, %f54, %f252;
	bra.uni 	BB8_62;

BB8_60:
	.loc 2 143 1
	ld.global.f32 	%f253, [gaussian_alpha];
	neg.ftz.f32 	%f254, %f253;
	mul.ftz.f32 	%f255, %f282, %f254;
	mul.ftz.f32 	%f256, %f255, %f282;
	.loc 4 1294 3
	mul.ftz.f32 	%f257, %f256, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f258, %f257;
	.loc 2 144 1
	mul.ftz.f32 	%f259, %f41, %f254;
	mul.ftz.f32 	%f260, %f259, %f41;
	.loc 4 1294 3
	mul.ftz.f32 	%f261, %f260, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f262, %f261;
	.loc 2 144 1
	sub.ftz.f32 	%f263, %f262, %f258;
	mov.f32 	%f264, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f265, %f264, %f263;
	.loc 2 144 1
	mul.ftz.f32 	%f266, %f42, %f254;
	mul.ftz.f32 	%f267, %f266, %f42;
	.loc 4 1294 3
	mul.ftz.f32 	%f268, %f267, 0f3FB8AA3B;
	.loc 3 528 5
	ex2.approx.ftz.f32 	%f269, %f268;
	.loc 2 144 1
	sub.ftz.f32 	%f270, %f269, %f258;
	.loc 3 432 5
	max.ftz.f32 	%f271, %f264, %f270;
	.loc 2 144 1
	mul.ftz.f32 	%f294, %f265, %f271;
	bra.uni 	BB8_62;

BB8_61:
	.loc 2 141 1
	sub.ftz.f32 	%f272, %f282, %f41;
	mov.f32 	%f273, 0f00000000;
	.loc 3 432 5
	max.ftz.f32 	%f274, %f273, %f272;
	.loc 2 141 1
	sub.ftz.f32 	%f275, %f282, %f42;
	.loc 3 432 5
	max.ftz.f32 	%f276, %f273, %f275;
	.loc 2 141 1
	mul.ftz.f32 	%f294, %f274, %f276;

BB8_62:
	.loc 2 203 1
	cvt.u64.u32 	%rd35, %r24;
	cvt.u64.u32 	%rd34, %r23;
	mov.u32 	%r71, 4;
	// inline asm
	call (%rd26), _rt_buffer_get_64, (%rd1, %r30, %r71, %rd34, %rd35, %rd9, %rd9);
	// inline asm
	.loc 2 203 1
	ld.f32 	%f277, [%rd26];
	fma.rn.ftz.f32 	%f278, %f281, %f294, %f277;
	st.f32 	[%rd26], %f278;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd2, %r30, %r71, %rd34, %rd35, %rd9, %rd9);
	// inline asm
	.loc 2 204 1
	ld.f32 	%f279, [%rd32];
	add.ftz.f32 	%f280, %f279, %f294;
	st.f32 	[%rd32], %f280;

BB8_63:
	.loc 2 289 50
	add.s32 	%r26, %r5, 1;
	.loc 2 289 1
	ld.global.u32 	%r84, [sqrt_samples_per_pixel];
	setp.lt.u32 	%p45, %r26, %r84;
	mov.u32 	%r85, %r84;
	mov.u32 	%r88, %r26;
	@%p45 bra 	BB8_4;

BB8_64:
	.loc 2 288 50
	mov.u32 	%r86, %r85;
	add.s32 	%r89, %r89, 1;
	.loc 2 288 1
	setp.lt.u32 	%p46, %r89, %r86;
	@%p46 bra 	BB8_3;

BB8_65:
	.loc 2 295 2
	ret;
}

.visible .entry _Z9exceptiolw(

)
{
	.local .align 4 .b8 	__local_depot9[12];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .s16 	%rc<2>;
	.reg .s32 	%r<78>;
	.reg .s64 	%rd<36>;


	mov.u64 	%SPL, __local_depot9;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd19, %SPL, 0;
	add.u64 	%rd20, %SPL, 8;
	// inline asm
	call (%r29), _rt_get_exception_code, ();
	// inline asm
	.loc 2 300 1
	cvta.const.u64 	%rd3, $str;
	ld.global.u64 	%rd4, [launch_index];
	// inline asm
	call (%r30), _rt_print_active, ();
	// inline asm
	.loc 7 292 1
	setp.eq.s32 	%p1, %r30, 0;
	.loc 2 300 1
	mov.u64 	%rd32, $str;
	.loc 6 213 1
	mov.u32 	%r71, %r29;
	@%p1 bra 	BB9_16;

	mov.u64 	%rd31, %rd3;

BB9_2:
	.loc 6 239 1
	mov.u64 	%rd6, %rd32;
	mov.u64 	%rd5, %rd31;
	add.s64 	%rd7, %rd5, 1;
	add.s64 	%rd32, %rd6, 1;
	.loc 6 239 1
	ld.const.u8 	%rc1, [%rd6+1];
	{
	.reg .s16 	%temp1;
	.reg .s16 	%temp2;
	cvt.s16.s8 	%temp1, %rc1;
	mov.b16 	%temp2, 0;
	cvt.s16.s8 	%temp2, %temp2;
	setp.ne.s16 	%p2, %temp1, %temp2;
	}
	mov.u64 	%rd31, %rd7;
	@%p2 bra 	BB9_2;

	.loc 6 240 1
	sub.s64 	%rd22, %rd7, %rd3;
	cvt.u32.u64 	%r34, %rd22;
	.loc 7 294 1
	add.s32 	%r35, %r34, 20;
	and.b32  	%r36, %r35, -4;
	mov.u32 	%r37, 4;
	.loc 3 245 5
	max.u32 	%r38, %r37, %r37;
	.loc 7 295 1
	mad.lo.s32 	%r33, %r38, 3, %r36;
	// inline asm
	call (%r32), _rt_print_start_64, (%rd3, %r33);
	// inline asm
	.loc 7 296 1
	setp.eq.s32 	%p3, %r32, 0;
	@%p3 bra 	BB9_16;

	st.local.u32 	[%rd19], %r29;
	mov.u32 	%r39, 0;
	// inline asm
	call (), _rt_print_write32, (%r39, %r32);
	// inline asm
	.loc 3 238 5
	max.s32 	%r3, %r37, %r37;
	.loc 6 270 1
	shr.s32 	%r43, %r3, 31;
	shr.u32 	%r44, %r43, 30;
	add.s32 	%r45, %r3, %r44;
	shr.s32 	%r4, %r45, 2;
	setp.lt.s32 	%p4, %r3, 4;
	@%p4 bra 	BB9_7;

	.loc 6 272 1
	add.s32 	%r70, %r32, 4;
	.loc 6 270 1
	add.s64 	%rd33, %rd19, 4;
	mov.u32 	%r69, 1;

BB9_6:
	.loc 6 272 1
	mov.u32 	%r8, %r71;
	// inline asm
	call (), _rt_print_write32, (%r8, %r70);
	// inline asm
	.loc 6 270 1
	setp.lt.s32 	%p5, %r69, %r4;
	@%p5 bra 	BB9_15;

BB9_7:
	.loc 6 272 1
	add.s32 	%r51, %r32, %r3;
	.loc 7 297 1
	add.s32 	%r9, %r51, 4;
	add.u64 	%rd25, %SP, 4;
	cvta.to.local.u64 	%rd26, %rd25;
	st.local.u32 	[%rd26], %rd4;
	// inline asm
	call (), _rt_print_write32, (%r39, %r9);
	// inline asm
	@%p4 bra 	BB9_10;

	.loc 6 272 1
	add.s32 	%r73, %r51, 8;
	.loc 6 270 1
	add.s64 	%rd34, %rd26, 4;
	.loc 2 300 1
	cvt.u32.u64 	%r74, %rd4;
	mov.u32 	%r72, 1;

BB9_9:
	.loc 6 272 1
	mov.u32 	%r14, %r74;
	// inline asm
	call (), _rt_print_write32, (%r14, %r73);
	// inline asm
	.loc 6 270 1
	setp.lt.s32 	%p7, %r72, %r4;
	@%p7 bra 	BB9_14;

BB9_10:
	.loc 6 272 1
	add.s32 	%r59, %r9, %r3;
	.loc 7 298 1
	add.s32 	%r58, %r59, 4;
	shr.u64 	%rd29, %rd4, 32;
	st.local.u32 	[%rd20], %rd29;
	// inline asm
	call (), _rt_print_write32, (%r39, %r58);
	// inline asm
	@%p4 bra 	BB9_16;

	.loc 6 270 1
	shl.b32 	%r62, %r3, 1;
	add.s32 	%r63, %r32, %r62;
	add.s32 	%r76, %r63, 12;
	add.s64 	%rd35, %rd20, 4;
	cvt.u32.u64 	%r77, %rd29;
	mov.u32 	%r75, 1;

BB9_12:
	.loc 6 272 1
	mov.u32 	%r19, %r77;
	// inline asm
	call (), _rt_print_write32, (%r19, %r76);
	// inline asm
	.loc 6 270 1
	setp.ge.s32 	%p9, %r75, %r4;
	@%p9 bra 	BB9_16;

	.loc 6 272 1
	ld.local.u32 	%r77, [%rd35];
	.loc 6 270 1
	add.s32 	%r76, %r76, 4;
	add.s32 	%r75, %r75, 1;
	add.s64 	%rd35, %rd35, 4;
	bra.uni 	BB9_12;

BB9_14:
	.loc 6 272 1
	ld.local.u32 	%r74, [%rd34];
	.loc 6 270 1
	add.s32 	%r73, %r73, 4;
	add.s32 	%r72, %r72, 1;
	add.s64 	%rd34, %rd34, 4;
	bra.uni 	BB9_9;

BB9_15:
	.loc 6 272 1
	ld.local.u32 	%r71, [%rd33];
	.loc 6 270 1
	add.s32 	%r70, %r70, 4;
	add.s32 	%r69, %r69, 1;
	add.s64 	%rd33, %rd33, 4;
	bra.uni 	BB9_6;

BB9_16:
	.loc 2 301 2
	ret;
}


