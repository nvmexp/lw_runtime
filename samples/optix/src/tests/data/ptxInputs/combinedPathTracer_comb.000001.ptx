//
// Generated by LWPU LWVM Compiler
// Compiler built on Sun Jul 29 19:44:09 2012 (1343612649)
// Lwca compilation tools, release 5.0, V0.2.1221
//

.version 3.1
.target sm_20
.address_size 64

	.file	1 "C:/Users/davemc/AppData/Local/Temp/tmpxft_000017ec_00000000-11_IntersectionProgram.cpp3.i"
	.file	2 "C:/sw/wsapps/raytracing/rtsdk/rtmain/samples/combinedPathTracer/IntersectionProgram.lw"
	.file	3 "c:\\sw\\wsapps\\raytracing\\rtsdk\\rtmain\\include\\internal/optix_internal.h"
	.file	4 "c:\\sw\\wsapps\\raytracing\\rtsdk\\rtmain\\include\\optix_device.h"
	.file	5 "C:/Program Files/LWPU GPU Computing Toolkit/LWCA/v5.0/lwvm/ci_include.h"
	.file	6 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.0\\include\\device_functions.h"
.global .align 1 .b8 vBuffer[1];
.global .align 1 .b8 nBuffer[1];
.global .align 1 .b8 tBuffer[1];
.global .align 1 .b8 viBuffer[1];
.global .align 1 .b8 niBuffer[1];
.global .align 1 .b8 tiBuffer[1];
.global .align 1 .b8 miBuffer[1];
.global .align 8 .b8 gRay[36];
.global .align 8 .b8 gGeometricNormal[12];
.global .align 8 .b8 gShadingNormal[12];
.global .align 8 .b8 gTexCoord[8];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo4gRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16gGeometricNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14gShadingNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9gTexCoordE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4gRayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16gGeometricNormalE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14gShadingNormalE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9gTexCoordE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4gRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16gGeometricNormalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 71, 101, 111, 109, 101, 116, 114, 105, 99, 78, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14gShadingNormalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 83, 104, 97, 100, 105, 110, 103, 78, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9gTexCoordE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 84, 101, 120, 67, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation4gRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16gGeometricNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14gShadingNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9gTexCoordE[1];

.visible .entry _Z9intersecti(
	.param .u32 _Z9intersecti_param_0
)
{
	.reg .pred 	%p<10>;
	.reg .s32 	%r<68>;
	.reg .f32 	%f<151>;
	.reg .s64 	%rd<79>;


	ld.param.u32 	%r7, [_Z9intersecti_param_0];
	.loc 2 44 1
	cvta.global.u64 	%rd2, viBuffer;
	cvt.s64.s32 	%rd3, %r7;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 46 1
	ld.s32 	%rd9, [%rd1];
	cvta.global.u64 	%rd20, vBuffer;
	.loc 2 47 1
	ld.s32 	%rd15, [%rd1+4];
	.loc 2 48 1
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd20, %r14, %r15, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 46 1
	ld.f32 	%f23, [%rd7+8];
	ld.f32 	%f24, [%rd7+4];
	ld.f32 	%f25, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd20, %r14, %r15, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 47 1
	ld.f32 	%f26, [%rd13+8];
	ld.f32 	%f27, [%rd13+4];
	ld.f32 	%f28, [%rd13];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r14, %r15, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 48 1
	ld.f32 	%f3, [%rd19+8];
	ld.f32 	%f2, [%rd19+4];
	ld.f32 	%f1, [%rd19];
	.loc 2 50 1
	sub.ftz.f32 	%f4, %f25, %f1;
	sub.ftz.f32 	%f5, %f24, %f2;
	sub.ftz.f32 	%f6, %f23, %f3;
	.loc 2 51 1
	sub.ftz.f32 	%f7, %f28, %f1;
	sub.ftz.f32 	%f8, %f27, %f2;
	sub.ftz.f32 	%f9, %f26, %f3;
	.loc 2 52 1
	ld.global.f32 	%f10, [gRay+12];
	ld.global.f32 	%f12, [gRay+20];
	ld.global.f32 	%f11, [gRay+16];
	mul.ftz.f32 	%f29, %f11, %f9;
	mul.ftz.f32 	%f30, %f12, %f8;
	sub.ftz.f32 	%f13, %f29, %f30;
	mul.ftz.f32 	%f31, %f12, %f7;
	mul.ftz.f32 	%f32, %f10, %f9;
	sub.ftz.f32 	%f14, %f31, %f32;
	mul.ftz.f32 	%f33, %f10, %f8;
	mul.ftz.f32 	%f34, %f11, %f7;
	sub.ftz.f32 	%f15, %f33, %f34;
	.loc 2 53 1
	mul.ftz.f32 	%f35, %f5, %f14;
	fma.rn.ftz.f32 	%f36, %f4, %f13, %f35;
	fma.rn.ftz.f32 	%f16, %f6, %f15, %f36;
	.loc 5 392 5
	abs.ftz.f32 	%f37, %f16;
	.loc 2 54 1
	setp.leu.ftz.f32 	%p1, %f37, 0f38D1B717;
	@%p1 bra 	BB0_8;

	.loc 2 56 1
	ld.global.f32 	%f38, [gRay+8];
	ld.global.v2.f32 	{%f149, %f150}, [gRay];
	sub.ftz.f32 	%f40, %f149, %f1;
	sub.ftz.f32 	%f42, %f150, %f2;
	sub.ftz.f32 	%f43, %f38, %f3;
	.loc 2 57 1
	mul.ftz.f32 	%f44, %f42, %f6;
	mul.ftz.f32 	%f45, %f43, %f5;
	sub.ftz.f32 	%f17, %f44, %f45;
	mul.ftz.f32 	%f46, %f43, %f4;
	mul.ftz.f32 	%f47, %f40, %f6;
	sub.ftz.f32 	%f18, %f46, %f47;
	mul.ftz.f32 	%f48, %f40, %f5;
	mul.ftz.f32 	%f49, %f42, %f4;
	sub.ftz.f32 	%f19, %f48, %f49;
	.loc 2 58 1
	mul.ftz.f32 	%f50, %f42, %f14;
	fma.rn.ftz.f32 	%f51, %f40, %f13, %f50;
	fma.rn.ftz.f32 	%f52, %f43, %f15, %f51;
	.loc 5 749 5
	div.approx.ftz.f32 	%f20, %f52, %f16;
	.loc 2 59 1
	mul.ftz.f32 	%f53, %f11, %f18;
	fma.rn.ftz.f32 	%f54, %f10, %f17, %f53;
	fma.rn.ftz.f32 	%f55, %f12, %f19, %f54;
	.loc 5 749 5
	div.approx.ftz.f32 	%f21, %f55, %f16;
	.loc 2 60 1
	setp.ge.ftz.f32 	%p2, %f20, 0f00000000;
	setp.ge.ftz.f32 	%p3, %f21, 0f00000000;
	and.pred  	%p4, %p2, %p3;
	add.ftz.f32 	%f56, %f20, %f21;
	setp.le.ftz.f32 	%p5, %f56, 0f3F800000;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB0_8;
	bra.uni 	BB0_2;

BB0_2:
	.loc 2 62 1
	mul.ftz.f32 	%f58, %f8, %f18;
	fma.rn.ftz.f32 	%f59, %f7, %f17, %f58;
	fma.rn.ftz.f32 	%f60, %f9, %f19, %f59;
	.loc 5 749 5
	div.approx.ftz.f32 	%f57, %f60, %f16;
	// inline asm
	call (%r28), _rt_potential_intersection, (%f57);
	// inline asm
	.loc 3 171 1
	setp.eq.s32 	%p7, %r28, 0;
	@%p7 bra 	BB0_8;

	.loc 2 65 1
	cvta.global.u64 	%rd26, niBuffer;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r3, [%rd25+8];
	ld.u32 	%r2, [%rd25+4];
	ld.u32 	%r1, [%rd25];
	.loc 2 66 1
	cvta.global.u64 	%rd32, tiBuffer;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r14, %r15, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r6, [%rd31+8];
	ld.u32 	%r5, [%rd31+4];
	ld.u32 	%r4, [%rd31];
	mov.f32 	%f61, 0f3F800000;
	.loc 2 67 1
	sub.ftz.f32 	%f62, %f61, %f20;
	sub.ftz.f32 	%f22, %f62, %f21;
	.loc 2 69 1
	mul.ftz.f32 	%f63, %f6, %f8;
	mul.ftz.f32 	%f64, %f5, %f9;
	sub.ftz.f32 	%f65, %f64, %f63;
	mul.ftz.f32 	%f66, %f4, %f9;
	mul.ftz.f32 	%f67, %f6, %f7;
	sub.ftz.f32 	%f68, %f67, %f66;
	mul.ftz.f32 	%f69, %f5, %f7;
	mul.ftz.f32 	%f70, %f4, %f8;
	sub.ftz.f32 	%f71, %f70, %f69;
	mul.ftz.f32 	%f72, %f68, %f68;
	fma.rn.ftz.f32 	%f73, %f65, %f65, %f72;
	fma.rn.ftz.f32 	%f74, %f71, %f71, %f73;
	.loc 5 996 5
	sqrt.approx.ftz.f32 	%f75, %f74;
	.loc 2 69 1
	rcp.approx.ftz.f32 	%f76, %f75;
	mul.ftz.f32 	%f77, %f65, %f76;
	mul.ftz.f32 	%f78, %f68, %f76;
	mul.ftz.f32 	%f79, %f71, %f76;
	st.global.f32 	[gGeometricNormal+8], %f79;
	st.global.v2.f32 	[gGeometricNormal], {%f77, %f78};
	.loc 2 70 1
	st.global.f32 	[gShadingNormal+8], %f79;
	mov.f32 	%f80, 0f00000000;
	.loc 2 70 1
	st.global.v2.f32 	[gShadingNormal], {%f77, %f78};
	.loc 2 71 1
	st.global.v2.f32 	[gTexCoord], {%f80, %f80};
	.loc 2 73 1
	setp.eq.s32 	%p8, %r1, -1;
	@%p8 bra 	BB0_5;

	.loc 2 74 1
	cvta.global.u64 	%rd50, nBuffer;
	cvt.s64.s32 	%rd39, %r1;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd50, %r14, %r15, %rd39, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f81, [%rd37+8];
	ld.f32 	%f82, [%rd37+4];
	ld.f32 	%f83, [%rd37];
	cvt.s64.s32 	%rd45, %r2;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd50, %r14, %r15, %rd45, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f84, [%rd43+8];
	ld.f32 	%f85, [%rd43+4];
	ld.f32 	%f86, [%rd43];
	mul.ftz.f32 	%f87, %f86, %f21;
	mul.ftz.f32 	%f88, %f85, %f21;
	mul.ftz.f32 	%f89, %f84, %f21;
	fma.rn.ftz.f32 	%f90, %f83, %f20, %f87;
	fma.rn.ftz.f32 	%f91, %f82, %f20, %f88;
	fma.rn.ftz.f32 	%f92, %f81, %f20, %f89;
	cvt.s64.s32 	%rd51, %r3;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r14, %r15, %rd51, %rd24, %rd24, %rd24);
	// inline asm
	ld.f32 	%f93, [%rd49+8];
	ld.f32 	%f94, [%rd49+4];
	ld.f32 	%f95, [%rd49];
	fma.rn.ftz.f32 	%f96, %f95, %f22, %f90;
	fma.rn.ftz.f32 	%f97, %f94, %f22, %f91;
	fma.rn.ftz.f32 	%f98, %f93, %f22, %f92;
	mul.ftz.f32 	%f99, %f97, %f97;
	fma.rn.ftz.f32 	%f100, %f96, %f96, %f99;
	fma.rn.ftz.f32 	%f101, %f98, %f98, %f100;
	.loc 5 996 5
	sqrt.approx.ftz.f32 	%f102, %f101;
	.loc 2 74 1
	rcp.approx.ftz.f32 	%f103, %f102;
	mul.ftz.f32 	%f104, %f96, %f103;
	mul.ftz.f32 	%f105, %f97, %f103;
	mul.ftz.f32 	%f106, %f98, %f103;
	st.global.f32 	[gShadingNormal+8], %f106;
	st.global.v2.f32 	[gShadingNormal], {%f104, %f105};

BB0_5:
	.loc 2 76 1
	setp.eq.s32 	%p9, %r4, -1;
	@%p9 bra 	BB0_7;

	.loc 2 77 1
	cvta.global.u64 	%rd68, tBuffer;
	cvt.s64.s32 	%rd57, %r4;
	mov.u32 	%r59, 8;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd68, %r14, %r59, %rd57, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 77 1
	ld.v2.f32 	{%f119, %f120}, [%rd55];
	cvt.s64.s32 	%rd63, %r5;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd68, %r14, %r59, %rd63, %rd24, %rd24, %rd24);
	// inline asm
	ld.v2.f32 	{%f121, %f122}, [%rd61];
	mul.ftz.f32 	%f108, %f121, %f21;
	mul.ftz.f32 	%f110, %f122, %f21;
	fma.rn.ftz.f32 	%f112, %f119, %f20, %f108;
	fma.rn.ftz.f32 	%f114, %f120, %f20, %f110;
	cvt.s64.s32 	%rd69, %r6;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd68, %r14, %r59, %rd69, %rd24, %rd24, %rd24);
	// inline asm
	ld.v2.f32 	{%f123, %f124}, [%rd67];
	fma.rn.ftz.f32 	%f116, %f123, %f22, %f112;
	fma.rn.ftz.f32 	%f118, %f124, %f22, %f114;
	st.global.v2.f32 	[gTexCoord], {%f116, %f118};

BB0_7:
	.loc 2 79 1
	cvta.global.u64 	%rd74, miBuffer;
	mov.u32 	%r64, 4;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd74, %r14, %r64, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 79 1
	ld.u32 	%r66, [%rd73];
	// inline asm
	call (%r65), _rt_report_intersection, (%r66);
	// inline asm

BB0_8:
	.loc 2 83 2
	ret;
}

.visible .entry _Z6boundsiPf(
	.param .u32 _Z6boundsiPf_param_0,
	.param .u64 _Z6boundsiPf_param_1
)
{
	.reg .s32 	%r<27>;
	.reg .f32 	%f<22>;
	.reg .s64 	%rd<27>;


	ld.param.u64 	%rd25, [_Z6boundsiPf_param_1];
	cvta.to.global.u64 	%rd26, %rd25;
	.loc 2 90 1
	ld.param.s32 	%rd3, [_Z6boundsiPf_param_0];
	cvta.global.u64 	%rd2, viBuffer;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r8, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 91 1
	ld.s32 	%rd9, [%rd1];
	cvta.global.u64 	%rd20, vBuffer;
	.loc 2 92 1
	ld.s32 	%rd15, [%rd1+4];
	.loc 2 93 1
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 91 1
	ld.f32 	%f1, [%rd7+8];
	ld.f32 	%f2, [%rd7+4];
	ld.f32 	%f3, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	.loc 2 92 1
	ld.f32 	%f4, [%rd13+8];
	ld.f32 	%f5, [%rd13+4];
	ld.f32 	%f6, [%rd13];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	.loc 5 420 5
	min.ftz.f32 	%f7, %f3, %f6;
	min.ftz.f32 	%f8, %f2, %f5;
	min.ftz.f32 	%f9, %f1, %f4;
	.loc 2 93 1
	ld.f32 	%f10, [%rd19+8];
	ld.f32 	%f11, [%rd19+4];
	ld.f32 	%f12, [%rd19];
	.loc 5 420 5
	min.ftz.f32 	%f13, %f7, %f12;
	min.ftz.f32 	%f14, %f8, %f11;
	min.ftz.f32 	%f15, %f9, %f10;
	.loc 2 96 1
	st.global.f32 	[%rd26], %f13;
	st.global.f32 	[%rd26+4], %f14;
	st.global.f32 	[%rd26+8], %f15;
	.loc 5 432 5
	max.ftz.f32 	%f16, %f3, %f6;
	max.ftz.f32 	%f17, %f2, %f5;
	max.ftz.f32 	%f18, %f1, %f4;
	max.ftz.f32 	%f19, %f16, %f12;
	max.ftz.f32 	%f20, %f17, %f11;
	max.ftz.f32 	%f21, %f18, %f10;
	.loc 2 97 1
	st.global.f32 	[%rd26+12], %f19;
	st.global.f32 	[%rd26+16], %f20;
	st.global.f32 	[%rd26+20], %f21;
	.loc 2 98 2
	ret;
}


