//
// Generated by LWPU LWVM Compiler
// Compiler built on Wed Jul 10 13:41:20 2013 (1373485280)
// Lwca compilation tools, release 5.5, V5.5.0
//

.version 3.2
.target sm_20
.address_size 64

	.file	1 "D:/ProgramData/LWPU Corporation/OptiX SDK 3.6.3/SDK/shadeTree/materials.lw", 1394052404, 4176
	.file	2 "d:\\programdata\\lwpu corporation\\optix sdk 3.6.3\\include\\internal/optix_internal.h", 1400871720, 15781
	.file	3 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.5\\include\\device_functions.h", 1373547992, 191626
	.file	4 "c:\\program files\\lwpu gpu computing toolkit\\lwca\\v5.5\\include\\math_functions.h", 1373547992, 404374
	.file	5 "d:\\programdata\\lwpu corporation\\optix sdk 3.6.3\\include\\optix_device.h", 1410820354, 114414
	.file	6 "d:\\programdata\\lwpu corporation\\optix sdk 3.6.3\\include\\optixu/optixu_math_namespace.h", 1400871720, 64294
.global .align 1 .b8 lights[1];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 8 .b8 prd[20];
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 4 .b8 shading_tangent[12];
.global .align 8 .b8 uv[8];
.global .align 4 .b8 colorShader[4];
.global .align 4 .b8 normalShader[4];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 ambient_light_color[12];
.global .align 4 .b8 spelwlar_color[12] = {0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63};
.global .align 4 .f32 phong_exp = 0f42200000;
.global .align 4 .b8 _ZN21rti_internal_typeinfo19ambient_light_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14spelwlar_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9phong_expE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3prdE[8] = {82, 97, 121, 0, 20, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15shading_tangentE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2uvE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11colorShaderE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12normalShaderE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19ambient_light_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14spelwlar_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9phong_expE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3prdE[20] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 114, 97, 100, 105, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15shading_tangentE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2uvE[7] = {102, 108, 111, 97, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11colorShaderE[59] = {111, 112, 116, 105, 120, 58, 58, 98, 111, 117, 110, 100, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 51, 32, 40, 83, 104, 97, 100, 105, 110, 103, 83, 116, 97, 116, 101, 32, 99, 111, 110, 115, 116, 41, 62, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12normalShaderE[76] = {111, 112, 116, 105, 120, 58, 58, 98, 111, 117, 110, 100, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 51, 32, 40, 83, 104, 97, 100, 105, 110, 103, 83, 116, 97, 116, 101, 32, 99, 111, 110, 115, 116, 44, 32, 102, 108, 111, 97, 116, 51, 44, 32, 102, 108, 111, 97, 116, 51, 32, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum19ambient_light_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14spelwlar_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9phong_expE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3prdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15shading_tangentE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2uvE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11colorShaderE = 4921;
.global .align 4 .u32 _ZN21rti_internal_typeenum12normalShaderE = 4921;
.global .align 1 .b8 _ZN21rti_internal_semantic19ambient_light_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14spelwlar_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9phong_expE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic15shading_tangentE[26] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 116, 97, 110, 103, 101, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic2uvE[13] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 117, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11colorShaderE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12normalShaderE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19ambient_light_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14spelwlar_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9phong_expE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3prdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15shading_tangentE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2uvE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11colorShaderE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12normalShaderE[1];
.global .align 1 .b8 $str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90, 0};

.visible .entry _Z19shade_tree_materialv(

)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<19>;
	.reg .f32 	%f<172>;
	.reg .s64 	%rd<22>;


	.loc 2 314 1
	ldu.global.f32 	%f39, [shading_normal];
	mov.u64 	%rd9, shading_normal;
	add.s64 	%rd10, %rd9, 8;
	ldu.global.f32 	%f41, [%rd10];
	add.s64 	%rd11, %rd9, 4;
	ldu.global.f32 	%f40, [%rd11];
	mov.u32 	%r6, 7937;
	mov.f32 	%f171, 0f00000000;
	.loc 2 314 1
	// inline asm
	call (%f35, %f36, %f37, %f38), _rt_transform_tuple, (%r6, %f39, %f40, %f41, %f171);
	// inline asm
	.loc 1 58 142
	mul.ftz.f32 	%f59, %f36, %f36;
	fma.rn.ftz.f32 	%f60, %f35, %f35, %f59;
	fma.rn.ftz.f32 	%f61, %f37, %f37, %f60;
	.loc 3 3055 10
	sqrt.approx.ftz.f32 	%f62, %f61;
	rcp.approx.ftz.f32 	%f63, %f62;
	mul.ftz.f32 	%f64, %f35, %f63;
	mul.ftz.f32 	%f65, %f36, %f63;
	mul.ftz.f32 	%f66, %f37, %f63;
	.loc 2 314 1
	ld.global.f32 	%f49, [geometric_normal+8];
	ld.global.f32 	%f48, [geometric_normal+4];
	ld.global.f32 	%f47, [geometric_normal];
	// inline asm
	call (%f43, %f44, %f45, %f46), _rt_transform_tuple, (%r6, %f47, %f48, %f49, %f171);
	// inline asm
	.loc 1 59 145
	mul.ftz.f32 	%f67, %f44, %f44;
	fma.rn.ftz.f32 	%f68, %f43, %f43, %f67;
	fma.rn.ftz.f32 	%f69, %f45, %f45, %f68;
	.loc 3 3055 10
	sqrt.approx.ftz.f32 	%f70, %f69;
	rcp.approx.ftz.f32 	%f71, %f70;
	mul.ftz.f32 	%f72, %f43, %f71;
	mul.ftz.f32 	%f73, %f44, %f71;
	mul.ftz.f32 	%f74, %f45, %f71;
	.loc 2 314 1
	ld.global.f32 	%f57, [shading_tangent+8];
	ld.global.f32 	%f56, [shading_tangent+4];
	ld.global.f32 	%f55, [shading_tangent];
	// inline asm
	call (%f51, %f52, %f53, %f54), _rt_transform_tuple, (%r6, %f55, %f56, %f57, %f171);
	// inline asm
	.loc 1 60 146
	mul.ftz.f32 	%f75, %f52, %f52;
	fma.rn.ftz.f32 	%f76, %f51, %f51, %f75;
	fma.rn.ftz.f32 	%f77, %f53, %f53, %f76;
	.loc 3 3055 10
	sqrt.approx.ftz.f32 	%f78, %f77;
	rcp.approx.ftz.f32 	%f79, %f78;
	mul.ftz.f32 	%f80, %f51, %f79;
	mul.ftz.f32 	%f81, %f52, %f79;
	mul.ftz.f32 	%f82, %f53, %f79;
	.loc 1 63 1
	ld.global.f32 	%f83, [ray+12];
	neg.ftz.f32 	%f84, %f83;
	ld.global.f32 	%f85, [ray+16];
	ld.global.f32 	%f86, [ray+20];
	mul.ftz.f32 	%f87, %f72, %f84;
	mul.ftz.f32 	%f88, %f73, %f85;
	sub.ftz.f32 	%f89, %f87, %f88;
	mul.ftz.f32 	%f90, %f74, %f86;
	sub.ftz.f32 	%f91, %f89, %f90;
	.loc 4 8311 10
	mov.b32 	 %r10, %f91;
	and.b32  	%r11, %r10, -2147483648;
	or.b32  	%r12, %r11, 1065353216;
	mov.b32 	 %f92, %r12;
	.loc 1 64 1
	mul.ftz.f32 	%f93, %f64, %f92;
	mul.ftz.f32 	%f94, %f65, %f92;
	mul.ftz.f32 	%f95, %f66, %f92;
	.loc 1 67 1
	ld.global.f32 	%f96, [t_hit];
	ld.global.f32 	%f97, [ray];
	fma.rn.ftz.f32 	%f1, %f83, %f96, %f97;
	ld.global.f32 	%f98, [ray+4];
	fma.rn.ftz.f32 	%f2, %f85, %f96, %f98;
	ld.global.f32 	%f99, [ray+8];
	fma.rn.ftz.f32 	%f3, %f86, %f96, %f99;
	.loc 1 74 1
	mul.ftz.f32 	%f100, %f80, %f92;
	mul.ftz.f32 	%f101, %f81, %f92;
	mul.ftz.f32 	%f102, %f82, %f92;
	.loc 5 1601 1
	ld.global.u32 	%r7, [normalShader];
	.loc 1 71 1
	ld.global.v2.f32 	{%f103, %f104}, [uv];
	.loc 2 190 1
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.f32	[param0+0], %f103;
	st.param.f32	[param0+4], %f104;
	.param .align 4 .b8 param1[12];
	st.param.f32	[param1+0], %f93;
	st.param.f32	[param1+4], %f94;
	st.param.f32	[param1+8], %f95;
	.param .align 4 .b8 param2[12];
	st.param.f32	[param2+0], %f100;
	st.param.f32	[param2+4], %f101;
	st.param.f32	[param2+8], %f102;
	.param .align 4 .b8 retval0[12];
	.loc 5 1602 8
	// inline asm
	prototype_0 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 8 .b8 _[8], .param .align 4 .b8 _[12], .param .align 4 .b8 _[12]);
	// inline asm
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_0;
	ld.param.f32	%f6, [retval0+0];
	ld.param.f32	%f7, [retval0+4];
	ld.param.f32	%f8, [retval0+8];
	}
	// Callseq End 0
	mov.u32 	%r8, 1;
	.loc 1 77 1
	cvta.global.u64 	%rd8, lights;
	mov.u32 	%r9, 32;
	.loc 2 168 1
	// inline asm
	call (%rd4, %rd5, %rd6, %rd7), _rt_buffer_get_size_64, (%rd8, %r8, %r9);
	// inline asm
	.loc 5 422 20
	cvt.u32.u64	%r1, %rd4;
	.loc 1 78 1
	setp.ne.s32	%p1, %r1, 0;
	@%p1 bra 	BB0_2;

	mov.f32 	%f171, 0f00000000;
	mov.f32 	%f170, %f171;
	mov.f32 	%f169, %f171;
	bra.uni 	BB0_7;

BB0_2:
	mov.f32 	%f170, %f171;
	mov.f32 	%f169, %f171;
	mov.u32 	%r18, 0;
	mov.u64 	%rd12, 0;
	.loc 5 1575 8
	// inline asm
	prototype_1 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 8 .b8 _[8]);
	// inline asm
	mov.u64 	%rd21, %rd12;

BB0_3:
	.loc 2 126 1
	mov.u64 	%rd1, %rd21;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r8, %r9, %rd1, %rd12, %rd12, %rd12);
	// inline asm
	.loc 1 79 49
	ld.f32 	%f14, [%rd13+20];
	ld.f32 	%f13, [%rd13+16];
	ld.f32 	%f12, [%rd13+12];
	ld.f32 	%f108, [%rd13+8];
	ld.f32 	%f109, [%rd13+4];
	ld.f32 	%f110, [%rd13];
	.loc 1 80 1
	sub.ftz.f32 	%f111, %f110, %f1;
	sub.ftz.f32 	%f112, %f109, %f2;
	sub.ftz.f32 	%f113, %f108, %f3;
	mul.ftz.f32 	%f114, %f112, %f112;
	fma.rn.ftz.f32 	%f115, %f111, %f111, %f114;
	fma.rn.ftz.f32 	%f116, %f113, %f113, %f115;
	.loc 3 3055 10
	sqrt.approx.ftz.f32 	%f117, %f116;
	rcp.approx.ftz.f32 	%f118, %f117;
	mul.ftz.f32 	%f15, %f111, %f118;
	mul.ftz.f32 	%f16, %f112, %f118;
	mul.ftz.f32 	%f17, %f113, %f118;
	.loc 1 81 1
	mul.ftz.f32 	%f119, %f7, %f16;
	fma.rn.ftz.f32 	%f120, %f6, %f15, %f119;
	fma.rn.ftz.f32 	%f18, %f8, %f17, %f120;
	.loc 1 82 1
	setp.leu.ftz.f32	%p2, %f18, 0f00000000;
	@%p2 bra 	BB0_6;

	.loc 5 1574 1
	ld.global.u32 	%r16, [colorShader];
	.loc 2 190 1
	// inline asm
	call (%rd19), _rt_callable_program_from_id_64, (%r16);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.f32	[param0+0], %f103;
	st.param.f32	[param0+4], %f104;
	.param .align 4 .b8 retval0[12];
	.loc 5 1575 8
	call (retval0), 
	%rd19, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f19, [retval0+0];
	ld.param.f32	%f20, [retval0+4];
	ld.param.f32	%f21, [retval0+8];
	}
	// Callseq End 1
	.loc 1 84 1
	mul.ftz.f32 	%f121, %f19, %f18;
	mul.ftz.f32 	%f122, %f20, %f18;
	mul.ftz.f32 	%f123, %f21, %f18;
	.loc 1 84 1
	fma.rn.ftz.f32 	%f171, %f121, %f12, %f171;
	fma.rn.ftz.f32 	%f170, %f122, %f13, %f170;
	fma.rn.ftz.f32 	%f169, %f123, %f14, %f169;
	.loc 1 86 1
	ld.global.f32 	%f124, [ray+12];
	sub.ftz.f32 	%f125, %f15, %f124;
	ld.global.f32 	%f126, [ray+16];
	sub.ftz.f32 	%f127, %f16, %f126;
	ld.global.f32 	%f128, [ray+20];
	sub.ftz.f32 	%f129, %f17, %f128;
	mul.ftz.f32 	%f130, %f127, %f127;
	fma.rn.ftz.f32 	%f131, %f125, %f125, %f130;
	fma.rn.ftz.f32 	%f132, %f129, %f129, %f131;
	.loc 3 3055 10
	sqrt.approx.ftz.f32 	%f133, %f132;
	rcp.approx.ftz.f32 	%f134, %f133;
	mul.ftz.f32 	%f135, %f125, %f134;
	mul.ftz.f32 	%f136, %f127, %f134;
	mul.ftz.f32 	%f137, %f129, %f134;
	.loc 1 87 1
	mul.ftz.f32 	%f138, %f7, %f136;
	fma.rn.ftz.f32 	%f139, %f6, %f135, %f138;
	fma.rn.ftz.f32 	%f25, %f8, %f137, %f139;
	.loc 1 88 1
	setp.leu.ftz.f32	%p3, %f25, 0f00000000;
	@%p3 bra 	BB0_6;

	.loc 1 89 1
	ld.global.f32 	%f140, [phong_exp];
	.loc 4 8682 10
	lg2.approx.ftz.f32 	%f141, %f25;
	mul.ftz.f32 	%f142, %f140, %f141;
	ex2.approx.ftz.f32 	%f143, %f142;
	.loc 6 2076 1
	mul.ftz.f32 	%f144, %f20, 0f3F170A3D;
	fma.rn.ftz.f32 	%f145, %f19, 0f3E99999A, %f144;
	fma.rn.ftz.f32 	%f146, %f21, 0f3DE147AE, %f145;
	.loc 1 90 85
	fma.rn.ftz.f32 	%f147, %f146, 0fBECCCCCD, 0f3F800000;
	.loc 1 91 1
	ld.global.f32 	%f148, [spelwlar_color];
	mul.ftz.f32 	%f149, %f148, %f143;
	ld.global.f32 	%f150, [spelwlar_color+4];
	mul.ftz.f32 	%f151, %f150, %f143;
	ld.global.f32 	%f152, [spelwlar_color+8];
	mul.ftz.f32 	%f153, %f152, %f143;
	mul.ftz.f32 	%f154, %f149, %f12;
	mul.ftz.f32 	%f155, %f151, %f13;
	mul.ftz.f32 	%f156, %f153, %f14;
	.loc 1 91 1
	fma.rn.ftz.f32 	%f171, %f154, %f147, %f171;
	fma.rn.ftz.f32 	%f170, %f155, %f147, %f170;
	fma.rn.ftz.f32 	%f169, %f156, %f147, %f169;

BB0_6:
	.loc 1 78 1
	add.s64 	%rd2, %rd1, 1;
	.loc 1 78 75
	add.s32 	%r18, %r18, 1;
	.loc 1 78 1
	setp.lt.u32	%p4, %r18, %r1;
	mov.u64 	%rd21, %rd2;
	@%p4 bra 	BB0_3;

BB0_7:
	.loc 5 1574 1
	ld.global.u32 	%r17, [colorShader];
	.loc 2 190 1
	// inline asm
	call (%rd20), _rt_callable_program_from_id_64, (%r17);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.f32	[param0+0], %f103;
	st.param.f32	[param0+4], %f104;
	.param .align 4 .b8 retval0[12];
	.loc 5 1575 8
	// inline asm
	prototype_2 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 8 .b8 _[8]);
	// inline asm
	call (retval0), 
	%rd20, 
	(
	param0
	)
	, prototype_2;
	ld.param.f32	%f160, [retval0+0];
	ld.param.f32	%f161, [retval0+4];
	ld.param.f32	%f162, [retval0+8];
	}
	// Callseq End 2
	.loc 1 96 1
	ld.global.f32 	%f163, [ambient_light_color];
	ld.global.f32 	%f164, [ambient_light_color+4];
	ld.global.f32 	%f165, [ambient_light_color+8];
	fma.rn.ftz.f32 	%f166, %f160, %f163, %f171;
	fma.rn.ftz.f32 	%f167, %f161, %f164, %f170;
	fma.rn.ftz.f32 	%f168, %f162, %f165, %f169;
	st.global.v2.f32 	[prd], {%f166, %f167};
	st.global.f32 	[prd+8], %f168;
	.loc 1 97 2
	ret;
}

.visible .entry _Z14flat_modulatedv(

)
{
	.reg .s32 	%r<2>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<2>;


	.loc 5 1574 1
	ldu.global.u32 	%r1, [colorShader];
	.loc 1 105 1
	ld.global.v2.f32 	{%f1, %f2}, [uv];
	.loc 2 190 1
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r1);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.f32	[param0+0], %f1;
	st.param.f32	[param0+4], %f2;
	.param .align 4 .b8 retval0[12];
	.loc 5 1575 8
	// inline asm
	prototype_3 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .align 8 .b8 _[8]);
	// inline asm
	call (retval0), 
	%rd1, 
	(
	param0
	)
	, prototype_3;
	ld.param.f32	%f5, [retval0+0];
	ld.param.f32	%f6, [retval0+4];
	ld.param.f32	%f7, [retval0+8];
	}
	// Callseq End 3
	.loc 1 107 1
	st.global.f32 	[prd+8], %f7;
	st.global.v2.f32 	[prd], {%f5, %f6};
	.loc 1 108 2
	ret;
}


