//
// Generated by LLVM LWPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	stlr_create_for_stellarcheck

.visible .func stlr_create_for_stellarcheck(
	.param .b64 stlr_create_for_stellarcheck_param_0,
	.param .b64 stlr_create_for_stellarcheck_param_1,
	.param .b64 stlr_create_for_stellarcheck_param_2
)
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<3>;

	ld.param.u64 	%rd1, [stlr_create_for_stellarcheck_param_0];
	ld.param.u64 	%rd2, [stlr_create_for_stellarcheck_param_2];
	ld.u32 	%r1, [%rd2];
	st.u32 	[%rd1], %r1;
	ret;
}

	// .globl	stlr_light_closures_type
.visible .func stlr_light_closures_type(
	.param .b64 stlr_light_closures_type_param_0,
	.param .b64 stlr_light_closures_type_param_1,
	.param .b64 stlr_light_closures_type_param_2
)
{
	.reg .s64 	%rd<13>;

	ld.param.u64 	%rd1, [stlr_light_closures_type_param_0];
	ld.param.u64 	%rd2, [stlr_light_closures_type_param_2];
	ld.u64 	%rd3, [%rd2];
	ld.u64 	%rd4, [%rd2+8];
	ld.u64 	%rd5, [%rd2+16];
	ld.u64 	%rd6, [%rd2+24];
	ld.u64 	%rd7, [%rd2+32];
	ld.u64 	%rd8, [%rd2+40];
	ld.u64 	%rd9, [%rd2+48];
	ld.u64 	%rd10, [%rd2+56];
	ld.u64 	%rd11, [%rd2+64];
	ld.u64 	%rd12, [%rd2+72];
	st.u64 	[%rd1+72], %rd12;
	st.u64 	[%rd1+64], %rd11;
	st.u64 	[%rd1+56], %rd10;
	st.u64 	[%rd1+48], %rd9;
	st.u64 	[%rd1+40], %rd8;
	st.u64 	[%rd1+32], %rd7;
	st.u64 	[%rd1+24], %rd6;
	st.u64 	[%rd1+16], %rd5;
	st.u64 	[%rd1+8], %rd4;
	st.u64 	[%rd1], %rd3;
	ret;
}

	// .globl	stlr_intersect
.visible .func stlr_intersect(
	.param .b64 stlr_intersect_param_0,
	.param .b64 stlr_intersect_param_1,
	.param .b64 stlr_intersect_param_2,
	.param .b64 stlr_intersect_param_3,
	.param .b64 stlr_intersect_param_4
)
{
	.local .align 16 .b8 	__local_depot2[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<15>;
	.reg .f32 	%f<219>;
	.reg .s32 	%r<51>;
	.reg .s64 	%rd<61>;

	mov.u64 	%rd60, __local_depot2;
	cvta.local.u64 	%SP, %rd60;
	ld.param.u64 	%rd6, [stlr_intersect_param_2];
	ld.param.u64 	%rd7, [stlr_intersect_param_1];
	ld.param.u64 	%rd4, [stlr_intersect_param_0];
	ld.param.u64 	%rd25, [stlr_intersect_param_4];
	ld.u32 	%r13, [%rd6];
	// inline asm
	mov.b64 {_,%r1}, %rd7;
	// inline asm
	mov.u32 	%r11, 1;
	mov.u64 	%rd23, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_id_64, (%r1, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	ld.u64 	%rd13, [%rd8+536];
	mul.wide.s32 	%rd26, %r13, 176;
	// inline asm
	mov.b64 {_,%r5}, %rd13;
	// inline asm
	// inline asm
	call (%rd14), _rt_buffer_get_id_64, (%r5, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	add.s64 	%rd27, %rd14, %rd26;
	ld.v4.f32 	{%f27, %f28, %f29, %f30}, [%rd27+528];
	ld.v4.f32 	{%f31, %f32, %f33, %f34}, [%rd27+544];
	ld.v4.f32 	{%f35, %f36, %f37, %f38}, [%rd27+560];
	mul.ftz.f32 	%f39, %f37, %f28;
	mul.ftz.f32 	%f40, %f33, %f36;
	mul.ftz.f32 	%f41, %f29, %f32;
	neg.ftz.f32 	%f42, %f41;
	fma.rn.ftz.f32 	%f43, %f28, %f33, %f42;
	neg.ftz.f32 	%f44, %f40;
	fma.rn.ftz.f32 	%f45, %f32, %f37, %f44;
	neg.ftz.f32 	%f46, %f39;
	fma.rn.ftz.f32 	%f47, %f36, %f29, %f46;
	mul.ftz.f32 	%f48, %f35, %f29;
	mul.ftz.f32 	%f49, %f27, %f33;
	mul.ftz.f32 	%f50, %f31, %f37;
	neg.ftz.f32 	%f51, %f50;
	fma.rn.ftz.f32 	%f52, %f33, %f35, %f51;
	neg.ftz.f32 	%f53, %f49;
	fma.rn.ftz.f32 	%f54, %f29, %f31, %f53;
	neg.ftz.f32 	%f55, %f48;
	fma.rn.ftz.f32 	%f56, %f37, %f27, %f55;
	mul.ftz.f32 	%f57, %f36, %f27;
	mul.ftz.f32 	%f58, %f28, %f31;
	mul.ftz.f32 	%f59, %f32, %f35;
	neg.ftz.f32 	%f60, %f59;
	fma.rn.ftz.f32 	%f61, %f31, %f36, %f60;
	neg.ftz.f32 	%f62, %f58;
	fma.rn.ftz.f32 	%f63, %f27, %f32, %f62;
	neg.ftz.f32 	%f64, %f57;
	fma.rn.ftz.f32 	%f65, %f35, %f28, %f64;
	mul.ftz.f32 	%f66, %f31, %f47;
	fma.rn.ftz.f32 	%f67, %f27, %f45, %f66;
	fma.rn.ftz.f32 	%f68, %f35, %f43, %f67;
	mov.f32 	%f69, 0f3F800000;
	div.approx.ftz.f32 	%f70, %f69, %f68;
	mul.ftz.f32 	%f71, %f70, %f45;
	mul.ftz.f32 	%f72, %f70, %f43;
	mul.ftz.f32 	%f73, %f70, %f47;
	mul.ftz.f32 	%f74, %f70, %f56;
	mul.ftz.f32 	%f75, %f70, %f54;
	mul.ftz.f32 	%f76, %f70, %f52;
	mul.ftz.f32 	%f77, %f70, %f65;
	mul.ftz.f32 	%f78, %f70, %f63;
	mul.ftz.f32 	%f79, %f70, %f61;
	ld.f32 	%f80, [%rd25+8];
	ld.f32 	%f81, [%rd25];
	ld.f32 	%f82, [%rd25+4];
	mul.ftz.f32 	%f83, %f82, %f76;
	mul.ftz.f32 	%f84, %f82, %f75;
	mul.ftz.f32 	%f85, %f82, %f74;
	fma.rn.ftz.f32 	%f86, %f81, %f73, %f85;
	fma.rn.ftz.f32 	%f87, %f81, %f72, %f84;
	fma.rn.ftz.f32 	%f88, %f81, %f71, %f83;
	fma.rn.ftz.f32 	%f89, %f80, %f79, %f88;
	fma.rn.ftz.f32 	%f90, %f80, %f78, %f87;
	fma.rn.ftz.f32 	%f91, %f80, %f77, %f86;
	neg.ftz.f32 	%f92, %f91;
	neg.ftz.f32 	%f93, %f90;
	ld.u32 	%r14, [%rd27+656];
	ld.u64 	%rd1, [%rd27+664];
	ld.u64 	%rd19, [%rd8+520];
	cvt.s64.s32	%rd2, %r14;
	mul.wide.s32 	%rd28, %r14, 32;
	// inline asm
	mov.b64 {_,%r9}, %rd19;
	// inline asm
	// inline asm
	call (%rd20), _rt_buffer_get_id_64, (%r9, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	add.s64 	%rd3, %rd20, 512;
	add.s64 	%rd29, %rd28, %rd3;
	ld.u32 	%r15, [%rd29+8];
	setp.eq.s32	%p1, %r15, 1;
	mul.ftz.f32 	%f94, %f91, %f91;
	fma.rn.ftz.f32 	%f95, %f89, %f89, %f94;
	fma.rn.ftz.f32 	%f96, %f90, %f90, %f95;
	sqrt.approx.ftz.f32 	%f1, %f96;
	rsqrt.approx.ftz.f32 	%f97, %f96;
	mul.ftz.f32 	%f4, %f93, %f97;
	mul.ftz.f32 	%f3, %f92, %f97;
	mul.ftz.f32 	%f2, %f89, %f97;
	@%p1 bra 	LBB2_4;
	bra.uni 	LBB2_1;
LBB2_4:
	setp.leu.ftz.f32	%p13, %f1, 0f40A00000;
	@%p13 bra 	LBB2_6;
	shl.b64 	%rd32, %rd2, 5;
	add.s64 	%rd33, %rd32, %rd3;
	ld.v2.u32 	{%r30, %r31}, [%rd33+16];
	add.ftz.f32 	%f200, %f1, 0fC1200000;
	mul.lo.s32 	%r32, %r30, %r31;
	cvt.rn.f32.s32	%f201, %r32;
	lg2.approx.ftz.f32 	%f202, %f201;
	lg2.approx.ftz.f32 	%f203, %f200;
	mul.ftz.f32 	%f204, %f203, 0fBF317218;
	fma.rn.ftz.f32 	%f205, %f202, 0f3F317218, %f204;
	mul.ftz.f32 	%f206, %f205, 0f3F38AA3B;
	mov.f32 	%f207, 0f00000000;
	max.ftz.f32 	%f208, %f206, %f207;
	mov.f32 	%f209, 0f41800000;
	min.ftz.f32 	%f199, %f208, %f209;
	st.u64 	[%SP+80], %rd1;
	cvt.u32.u64	%r27, %rd1;
	mov.u32 	%r28, 6;
	mov.u32 	%r29, 0;
	// inline asm
	call (%f216,%f217,%f218,%f195), _rt_texture_get_level_id, (%r27, %r28, %f2, %f3, %f4, %r29, %f199);
	// inline asm
	st.v4.f32 	[%SP+64], {%f216, %f217, %f218, %f195};
	bra.uni 	LBB2_7;
LBB2_1:
	neg.ftz.f32 	%f98, %f3;
	abs.ftz.f32 	%f99, %f2;
	abs.ftz.f32 	%f100, %f98;
	max.ftz.f32 	%f101, %f99, %f100;
	min.ftz.f32 	%f102, %f99, %f100;
	div.approx.ftz.f32 	%f104, %f69, %f101;
	mul.ftz.f32 	%f105, %f102, %f104;
	mul.ftz.f32 	%f106, %f105, %f105;
	mov.f32 	%f107, 0f3D6B6D55;
	mov.f32 	%f108, 0fBC5CDD30;
	fma.rn.ftz.f32 	%f109, %f108, %f106, %f107;
	fma.rn.ftz.f32 	%f110, %f109, %f106, 0fBDF84C31;
	mov.f32 	%f111, 0f3E4854C9;
	fma.rn.ftz.f32 	%f112, %f110, %f106, %f111;
	fma.rn.ftz.f32 	%f113, %f112, %f106, 0fBEAA7E45;
	mov.f32 	%f114, 0f3F7FFFB7;
	fma.rn.ftz.f32 	%f115, %f113, %f106, %f114;
	mul.ftz.f32 	%f116, %f105, %f115;
	setp.gt.ftz.f32	%p2, %f100, %f99;
	neg.ftz.f32 	%f117, %f105;
	fma.rn.ftz.f32 	%f118, %f117, %f115, 0f3FC90FDB;
	selp.f32	%f119, %f118, %f116, %p2;
	setp.lt.ftz.f32	%p3, %f2, 0f00000000;
	mov.f32 	%f120, 0f40490FDB;
	sub.ftz.f32 	%f121, %f120, %f119;
	selp.f32	%f122, %f121, %f119, %p3;
	setp.lt.ftz.f32	%p4, %f98, 0f00000000;
	neg.ftz.f32 	%f123, %f122;
	selp.f32	%f124, %f123, %f122, %p4;
	setp.eq.ftz.f32	%p5, %f101, 0f00000000;
	selp.f32	%f125, 0f00000000, %f124, %p5;
	mul.ftz.f32 	%f5, %f125, 0f3E22F983;
	neg.ftz.f32 	%f126, %f4;
	setp.lt.ftz.f32	%p6, %f126, 0f00000000;
	abs.ftz.f32 	%f127, %f126;
	neg.ftz.f32 	%f128, %f127;
	fma.rn.ftz.f32 	%f129, %f128, %f127, 0f3F800000;
	sqrt.approx.ftz.f32 	%f130, %f129;
	setp.gt.ftz.f32	%p7, %f127, 0f3F3504F3;
	selp.f32	%f131, %f130, %f127, %p7;
	selp.f32	%f132, %f127, %f130, %p7;
	abs.ftz.f32 	%f133, %f132;
	abs.ftz.f32 	%f134, %f131;
	max.ftz.f32 	%f135, %f133, %f134;
	min.ftz.f32 	%f136, %f133, %f134;
	div.approx.ftz.f32 	%f137, %f69, %f135;
	mul.ftz.f32 	%f138, %f136, %f137;
	mul.ftz.f32 	%f139, %f138, %f138;
	fma.rn.ftz.f32 	%f140, %f108, %f139, %f107;
	fma.rn.ftz.f32 	%f141, %f140, %f139, 0fBDF84C31;
	fma.rn.ftz.f32 	%f142, %f141, %f139, %f111;
	fma.rn.ftz.f32 	%f143, %f142, %f139, 0fBEAA7E45;
	fma.rn.ftz.f32 	%f144, %f143, %f139, %f114;
	mul.ftz.f32 	%f145, %f138, %f144;
	setp.gt.ftz.f32	%p8, %f134, %f133;
	neg.ftz.f32 	%f146, %f138;
	fma.rn.ftz.f32 	%f147, %f146, %f144, 0f3FC90FDB;
	selp.f32	%f148, %f147, %f145, %p8;
	setp.lt.ftz.f32	%p9, %f132, 0f00000000;
	sub.ftz.f32 	%f149, %f120, %f148;
	selp.f32	%f150, %f149, %f148, %p9;
	setp.lt.ftz.f32	%p10, %f131, 0f00000000;
	neg.ftz.f32 	%f151, %f150;
	selp.f32	%f152, %f151, %f150, %p10;
	setp.eq.ftz.f32	%p11, %f135, 0f00000000;
	selp.f32	%f153, 0f00000000, %f152, %p11;
	mov.f32 	%f154, 0f3FC90FDB;
	sub.ftz.f32 	%f155, %f154, %f153;
	selp.f32	%f156, %f155, %f153, %p7;
	neg.ftz.f32 	%f157, %f156;
	selp.f32	%f158, %f157, %f156, %p6;
	sub.ftz.f32 	%f159, %f154, %f158;
	mul.ftz.f32 	%f6, %f159, 0f3EA2F983;
	setp.leu.ftz.f32	%p12, %f1, 0f40A00000;
	@%p12 bra 	LBB2_3;
	shl.b64 	%rd30, %rd2, 5;
	add.s64 	%rd31, %rd30, %rd3;
	ld.v2.u32 	{%r21, %r22}, [%rd31+16];
	add.ftz.f32 	%f176, %f1, 0fC1200000;
	mul.lo.s32 	%r23, %r21, %r22;
	cvt.rn.f32.s32	%f177, %r23;
	lg2.approx.ftz.f32 	%f178, %f177;
	lg2.approx.ftz.f32 	%f179, %f176;
	mul.ftz.f32 	%f180, %f179, 0fBF317218;
	fma.rn.ftz.f32 	%f181, %f178, 0f3F317218, %f180;
	fma.rn.ftz.f32 	%f182, %f181, 0f3F38AA3B, 0fC0000000;
	mov.f32 	%f174, 0f00000000;
	max.ftz.f32 	%f183, %f182, %f174;
	mov.f32 	%f184, 0f41800000;
	min.ftz.f32 	%f175, %f183, %f184;
	st.u64 	[%SP+16], %rd1;
	cvt.u32.u64	%r18, %rd1;
	mov.u32 	%r19, 2;
	mov.u32 	%r20, 0;
	// inline asm
	call (%f216,%f217,%f218,%f171), _rt_texture_get_level_id, (%r18, %r19, %f5, %f6, %f174, %r20, %f175);
	// inline asm
	st.v4.f32 	[%SP+0], {%f216, %f217, %f218, %f171};
	bra.uni 	LBB2_7;
LBB2_6:
	st.u64 	[%SP+112], %rd1;
	cvt.u32.u64	%r24, %rd1;
	mov.u32 	%r25, 6;
	mov.u32 	%r26, 0;
	// inline asm
	call (%f216,%f217,%f218,%f188), _rt_texture_get_base_id, (%r24, %r25, %f2, %f3, %f4, %r26);
	// inline asm
	st.v4.f32 	[%SP+96], {%f216, %f217, %f218, %f188};
	bra.uni 	LBB2_7;
LBB2_3:
	st.u64 	[%SP+48], %rd1;
	cvt.u32.u64	%r16, %rd1;
	mov.u32 	%r17, 2;
	mov.f32 	%f166, 0f00000000;
	// inline asm
	call (%f216,%f217,%f218,%f163), _rt_texture_get_f_id, (%r16, %r17, %f5, %f6, %f166, %f166);
	// inline asm
	st.v4.f32 	[%SP+32], {%f216, %f217, %f218, %f163};
LBB2_7:
	// inline asm
	mov.b64 {_,%r34}, %rd7;
	// inline asm
	// inline asm
	call (%rd35), _rt_buffer_get_id_64, (%r34, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	ld.u64 	%rd40, [%rd35+520];
	shl.b64 	%rd52, %rd2, 5;
	// inline asm
	mov.b64 {_,%r38}, %rd40;
	// inline asm
	// inline asm
	call (%rd41), _rt_buffer_get_id_64, (%r38, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	add.s64 	%rd53, %rd52, %rd41;
	ld.u32 	%r45, [%rd53+512];
	setp.lt.s32	%p14, %r45, 4;
	selp.f32	%f210, %f216, %f218, %p14;
	selp.f32	%f211, %f216, %f217, %p14;
	ld.u32 	%r46, [%rd6];
	ld.u64 	%rd46, [%rd35+536];
	mul.wide.s32 	%rd54, %r46, 176;
	// inline asm
	mov.b64 {_,%r42}, %rd46;
	// inline asm
	// inline asm
	call (%rd47), _rt_buffer_get_id_64, (%r42, %r11, %r11, %rd23, %rd23, %rd23, %rd23);
	// inline asm
	add.s64 	%rd55, %rd54, %rd47;
	ld.f32 	%f212, [%rd55+672];
	mul.ftz.f32 	%f213, %f211, %f212;
	mov.b32 	 %r47, %f213;
	cvt.u64.u32	%rd56, %r47;
	shl.b64 	%rd57, %rd56, 32;
	mul.ftz.f32 	%f214, %f216, %f212;
	mov.b32 	 %r48, %f214;
	cvt.u64.u32	%rd58, %r48;
	or.b64  	%rd59, %rd58, %rd57;
	mul.ftz.f32 	%f215, %f210, %f212;
	mov.u32 	%r49, 0;
	st.u32 	[%rd4+24], %r49;
	st.u32 	[%rd4+20], %r49;
	mov.u32 	%r50, 2139095040;
	st.u32 	[%rd4+16], %r50;
	st.f32 	[%rd4+8], %f215;
	st.u64 	[%rd4], %rd59;
	ret;
}

	// .globl	stlr_illuminate
.visible .func stlr_illuminate(
	.param .b64 stlr_illuminate_param_0,
	.param .b64 stlr_illuminate_param_1,
	.param .b64 stlr_illuminate_param_2,
	.param .b64 stlr_illuminate_param_3,
	.param .b64 stlr_illuminate_param_4
)
{
	.local .align 16 .b8 	__local_depot3[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<122>;
	.reg .f32 	%f<433>;
	.reg .s32 	%r<888>;
	.reg .s64 	%rd<311>;

	mov.u64 	%rd310, __local_depot3;
	cvta.local.u64 	%SP, %rd310;
	ld.param.u64 	%rd24, [stlr_illuminate_param_4];
	ld.param.u64 	%rd23, [stlr_illuminate_param_2];
	ld.param.u64 	%rd286, [stlr_illuminate_param_1];
	ld.param.u64 	%rd21, [stlr_illuminate_param_0];
	ld.u32 	%r119, [%rd23];
	// inline asm
	mov.b64 {_,%r107}, %rd286;
	// inline asm
	mov.u32 	%r837, 1;
	mov.u64 	%rd296, 0;
	// inline asm
	call (%rd26), _rt_buffer_get_id_64, (%r107, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd31, [%rd26+536];
	mul.wide.s32 	%rd43, %r119, 176;
	// inline asm
	mov.b64 {_,%r111}, %rd31;
	// inline asm
	// inline asm
	call (%rd32), _rt_buffer_get_id_64, (%r111, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd44, %rd32, %rd43;
	ld.v4.f32 	{%f1, %f2, %f3, %f183}, [%rd44+528];
	ld.v4.f32 	{%f4, %f5, %f6, %f184}, [%rd44+544];
	ld.v4.f32 	{%f7, %f8, %f9, %f185}, [%rd44+560];
	ld.u32 	%r120, [%rd44+656];
	ld.u64 	%rd2, [%rd44+664];
	ld.u64 	%rd37, [%rd26+528];
	cvt.s64.s32	%rd3, %r120;
	mul.wide.s32 	%rd45, %r120, 40;
	// inline asm
	mov.b64 {_,%r115}, %rd37;
	// inline asm
	// inline asm
	call (%rd38), _rt_buffer_get_id_64, (%r115, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd46, %rd45, %rd38;
	ld.u32 	%r1, [%rd46+512];
	ld.u32 	%r2, [%rd46+516];
	ld.u32 	%r121, [%rd24];
	setp.eq.s32	%p1, %r121, 1;
	@%p1 bra 	LBB3_20;
	bra.uni 	LBB3_1;
LBB3_20:
	ld.u32 	%r869, [%rd24+36];
	cvt.rn.f32.s32	%f204, %r869;
	rcp.approx.ftz.f32 	%f205, %f204;
	mul.ftz.f32 	%f37, %f205, 0f3F000000;
	ld.u32 	%r868, [%rd24+32];
	cvt.rn.f32.s32	%f206, %r868;
	mul.ftz.f32 	%f207, %f205, %f206;
	fma.rn.ftz.f32 	%f38, %f205, 0f3F000000, %f207;
	setp.gt.s32	%p14, %r869, 1;
	selp.u32	%r408, 1, 0, %p14;
	setp.gt.s32	%p15, %r869, 2;
	selp.b32	%r409, 2, 1, %p14;
	selp.b32	%r410, %r409, %r408, %p15;
	setp.gt.s32	%p16, %r869, 4;
	selp.u32	%r411, 1, 0, %p16;
	setp.gt.s32	%p17, %r869, 8;
	selp.u32	%r412, 1, 0, %p17;
	setp.gt.s32	%p18, %r869, 16;
	selp.u32	%r413, 1, 0, %p18;
	setp.gt.s32	%p19, %r869, 32;
	selp.u32	%r414, 1, 0, %p19;
	setp.gt.s32	%p20, %r869, 64;
	selp.u32	%r415, 1, 0, %p20;
	setp.gt.s32	%p21, %r869, 128;
	selp.u32	%r416, 1, 0, %p21;
	setp.gt.s32	%p22, %r869, 256;
	selp.u32	%r417, 1, 0, %p22;
	setp.gt.s32	%p23, %r869, 512;
	selp.u32	%r418, 1, 0, %p23;
	setp.gt.s32	%p24, %r869, 1024;
	selp.u32	%r419, 1, 0, %p24;
	setp.gt.s32	%p25, %r869, 2048;
	selp.u32	%r420, 1, 0, %p25;
	setp.gt.s32	%p26, %r869, 4096;
	selp.u32	%r421, 1, 0, %p26;
	setp.gt.s32	%p27, %r869, 8192;
	selp.u32	%r422, 1, 0, %p27;
	setp.gt.s32	%p28, %r869, 16384;
	selp.u32	%r423, 1, 0, %p28;
	setp.gt.s32	%p29, %r869, 32768;
	selp.u32	%r424, 1, 0, %p29;
	setp.gt.s32	%p30, %r869, 65536;
	selp.u32	%r425, 1, 0, %p30;
	setp.gt.s32	%p31, %r869, 131072;
	selp.u32	%r426, 1, 0, %p31;
	setp.gt.s32	%p32, %r869, 262144;
	selp.u32	%r427, 1, 0, %p32;
	setp.gt.s32	%p33, %r869, 524288;
	selp.u32	%r428, 1, 0, %p33;
	setp.gt.s32	%p34, %r869, 1048576;
	selp.u32	%r429, 1, 0, %p34;
	setp.gt.s32	%p35, %r869, 2097152;
	selp.u32	%r430, 1, 0, %p35;
	setp.gt.s32	%p36, %r869, 4194304;
	selp.u32	%r431, 1, 0, %p36;
	setp.gt.s32	%p37, %r869, 8388608;
	selp.u32	%r432, 1, 0, %p37;
	setp.gt.s32	%p38, %r869, 16777216;
	selp.u32	%r433, 1, 0, %p38;
	setp.gt.s32	%p39, %r869, 33554432;
	selp.u32	%r434, 1, 0, %p39;
	setp.gt.s32	%p40, %r869, 67108864;
	selp.u32	%r435, 1, 0, %p40;
	setp.gt.s32	%p41, %r869, 134217728;
	selp.u32	%r436, 1, 0, %p41;
	setp.gt.s32	%p42, %r869, 268435456;
	selp.u32	%r437, 1, 0, %p42;
	setp.gt.s32	%p43, %r869, 536870912;
	selp.u32	%r438, 1, 0, %p43;
	setp.gt.s32	%p44, %r869, 1073741824;
	selp.u32	%r439, 1, 0, %p44;
	add.s32 	%r440, %r412, %r411;
	add.s32 	%r441, %r440, %r413;
	add.s32 	%r442, %r441, %r414;
	add.s32 	%r443, %r442, %r415;
	add.s32 	%r444, %r443, %r416;
	add.s32 	%r445, %r444, %r417;
	add.s32 	%r446, %r445, %r418;
	add.s32 	%r447, %r446, %r419;
	add.s32 	%r448, %r447, %r420;
	add.s32 	%r449, %r448, %r421;
	add.s32 	%r450, %r449, %r422;
	add.s32 	%r451, %r450, %r423;
	add.s32 	%r452, %r451, %r424;
	add.s32 	%r453, %r452, %r425;
	add.s32 	%r454, %r453, %r426;
	add.s32 	%r455, %r454, %r427;
	add.s32 	%r456, %r455, %r428;
	add.s32 	%r457, %r456, %r429;
	add.s32 	%r458, %r457, %r430;
	add.s32 	%r459, %r458, %r431;
	add.s32 	%r460, %r459, %r432;
	add.s32 	%r461, %r460, %r433;
	add.s32 	%r462, %r461, %r434;
	add.s32 	%r463, %r462, %r435;
	add.s32 	%r464, %r463, %r436;
	add.s32 	%r465, %r464, %r437;
	add.s32 	%r466, %r465, %r438;
	add.s32 	%r467, %r466, %r439;
	add.s32 	%r468, %r467, %r410;
	mov.u32 	%r469, 0;
	max.s32 	%r862, %r468, %r469;
	mov.f32 	%f398, 0f00000000;
	setp.lt.s32	%p45, %r862, 1;
	@%p45 bra 	LBB3_103;
	mov.f32 	%f396, 0f3F800000;
	mov.u32 	%r863, %r868;
LBB3_22:
	and.b32  	%r470, %r863, 1;
	shr.u32 	%r863, %r863, 1;
	mul.ftz.f32 	%f396, %f396, 0f3F000000;
	cvt.rn.f32.s32	%f208, %r470;
	fma.rn.ftz.f32 	%f398, %f396, %f208, %f398;
	add.s32 	%r862, %r862, -1;
	setp.ne.s32	%p46, %r862, 0;
	@%p46 bra 	LBB3_22;
	bra.uni 	LBB3_23;
LBB3_1:
	ld.u32 	%r5, [%rd24+16];
	setp.lt.s32	%p2, %r5, 8;
	ld.u32 	%r861, [%rd24+20];
	@%p2 bra 	LBB3_3;
	bra.uni 	LBB3_2;
LBB3_3:
	mov.f32 	%f394, 0f00000000;
	setp.lt.s32	%p3, %r861, 1;
	@%p3 bra 	LBB3_98;
	add.s64 	%rd1, %rd26, 512;
	and.b32  	%r247, %r5, 63;
	ld.u64 	%rd47, [%rd1];
	mul.wide.u32 	%rd53, %r247, 4;
	// inline asm
	mov.b64 {_,%r243}, %rd47;
	// inline asm
	// inline asm
	call (%rd48), _rt_buffer_get_id_64, (%r243, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd54, %rd53, %rd48;
	ld.u32 	%r8, [%rd54+512];
	cvt.rn.f32.s32	%f188, %r8;
	rcp.approx.ftz.f32 	%f11, %f188;
	mov.f32 	%f386, %f11;
	mov.u32 	%r852, %r861;
LBB3_5:
	setp.ne.s32	%p4, %r8, 0;
	selp.b32	%r248, %r8, %r852, %p4;
	rem.s32 	%r249, %r852, %r248;
	cvt.rn.f32.s32	%f189, %r249;
	fma.rn.ftz.f32 	%f394, %f386, %f189, %f394;
	mul.ftz.f32 	%f386, %f11, %f386;
	selp.b32	%r250, %r8, -2147483648, %p4;
	div.s32 	%r852, %r852, %r250;
	setp.gt.s32	%p5, %r852, 0;
	@%p5 bra 	LBB3_5;
	bra.uni 	LBB3_6;
LBB3_2:
	shl.b32 	%r122, %r861, 4;
	add.s32 	%r123, %r122, -1556008596;
	add.s32 	%r124, %r861, -1640531527;
	xor.b32  	%r125, %r123, %r124;
	shr.u32 	%r126, %r861, 5;
	add.s32 	%r127, %r126, -939442524;
	xor.b32  	%r128, %r125, %r127;
	add.s32 	%r129, %r128, %r5;
	shl.b32 	%r130, %r129, 4;
	add.s32 	%r131, %r130, -1383041155;
	add.s32 	%r132, %r129, -1640531527;
	xor.b32  	%r133, %r131, %r132;
	shr.u32 	%r134, %r129, 5;
	add.s32 	%r135, %r134, 2123724318;
	xor.b32  	%r136, %r133, %r135;
	add.s32 	%r137, %r136, %r861;
	shl.b32 	%r138, %r137, 4;
	add.s32 	%r139, %r138, -1556008596;
	add.s32 	%r140, %r137, 1013904242;
	xor.b32  	%r141, %r139, %r140;
	shr.u32 	%r142, %r137, 5;
	add.s32 	%r143, %r142, -939442524;
	xor.b32  	%r144, %r141, %r143;
	add.s32 	%r145, %r144, %r129;
	shl.b32 	%r146, %r145, 4;
	add.s32 	%r147, %r146, -1383041155;
	add.s32 	%r148, %r145, 1013904242;
	xor.b32  	%r149, %r147, %r148;
	shr.u32 	%r150, %r145, 5;
	add.s32 	%r151, %r150, 2123724318;
	xor.b32  	%r152, %r149, %r151;
	add.s32 	%r153, %r152, %r137;
	shl.b32 	%r154, %r153, 4;
	add.s32 	%r155, %r154, -1556008596;
	add.s32 	%r156, %r153, -626627285;
	xor.b32  	%r157, %r155, %r156;
	shr.u32 	%r158, %r153, 5;
	add.s32 	%r159, %r158, -939442524;
	xor.b32  	%r160, %r157, %r159;
	add.s32 	%r161, %r160, %r145;
	shl.b32 	%r162, %r161, 4;
	add.s32 	%r163, %r162, -1383041155;
	add.s32 	%r164, %r161, -626627285;
	xor.b32  	%r165, %r163, %r164;
	shr.u32 	%r166, %r161, 5;
	add.s32 	%r167, %r166, 2123724318;
	xor.b32  	%r168, %r165, %r167;
	add.s32 	%r169, %r168, %r153;
	shl.b32 	%r170, %r169, 4;
	add.s32 	%r171, %r170, -1556008596;
	add.s32 	%r172, %r169, 2027808484;
	xor.b32  	%r173, %r171, %r172;
	shr.u32 	%r174, %r169, 5;
	add.s32 	%r175, %r174, -939442524;
	xor.b32  	%r176, %r173, %r175;
	add.s32 	%r177, %r176, %r161;
	shl.b32 	%r178, %r177, 4;
	add.s32 	%r179, %r178, -1383041155;
	add.s32 	%r180, %r177, 2027808484;
	xor.b32  	%r181, %r179, %r180;
	shr.u32 	%r182, %r177, 5;
	add.s32 	%r183, %r182, 2123724318;
	xor.b32  	%r184, %r181, %r183;
	add.s32 	%r185, %r184, %r169;
	shl.b32 	%r186, %r185, 4;
	add.s32 	%r187, %r186, -1556008596;
	add.s32 	%r188, %r185, 387276957;
	xor.b32  	%r189, %r187, %r188;
	shr.u32 	%r190, %r185, 5;
	add.s32 	%r191, %r190, -939442524;
	xor.b32  	%r192, %r189, %r191;
	add.s32 	%r193, %r192, %r177;
	shl.b32 	%r194, %r193, 4;
	add.s32 	%r195, %r194, -1383041155;
	add.s32 	%r196, %r193, 387276957;
	xor.b32  	%r197, %r195, %r196;
	shr.u32 	%r198, %r193, 5;
	add.s32 	%r199, %r198, 2123724318;
	xor.b32  	%r200, %r197, %r199;
	add.s32 	%r201, %r200, %r185;
	shl.b32 	%r202, %r201, 4;
	add.s32 	%r203, %r202, -1556008596;
	add.s32 	%r204, %r201, -1253254570;
	xor.b32  	%r205, %r203, %r204;
	shr.u32 	%r206, %r201, 5;
	add.s32 	%r207, %r206, -939442524;
	xor.b32  	%r208, %r205, %r207;
	add.s32 	%r209, %r208, %r193;
	shl.b32 	%r210, %r209, 4;
	add.s32 	%r211, %r210, -1383041155;
	add.s32 	%r212, %r209, -1253254570;
	xor.b32  	%r213, %r211, %r212;
	shr.u32 	%r214, %r209, 5;
	add.s32 	%r215, %r214, 2123724318;
	xor.b32  	%r216, %r213, %r215;
	add.s32 	%r217, %r216, %r201;
	shl.b32 	%r218, %r217, 4;
	add.s32 	%r219, %r218, -1556008596;
	add.s32 	%r220, %r217, 1401181199;
	xor.b32  	%r221, %r219, %r220;
	shr.u32 	%r222, %r217, 5;
	add.s32 	%r223, %r222, -939442524;
	xor.b32  	%r224, %r221, %r223;
	add.s32 	%r225, %r224, %r209;
	shl.b32 	%r226, %r225, 4;
	add.s32 	%r227, %r226, -1383041155;
	add.s32 	%r228, %r225, 1401181199;
	xor.b32  	%r229, %r227, %r228;
	shr.u32 	%r230, %r225, 5;
	add.s32 	%r231, %r230, 2123724318;
	xor.b32  	%r232, %r229, %r231;
	add.s32 	%r233, %r232, %r217;
	shl.b32 	%r234, %r233, 4;
	add.s32 	%r235, %r234, 591475052;
	add.s32 	%r236, %r233, 1908133320;
	xor.b32  	%r237, %r235, %r236;
	shr.u32 	%r238, %r233, 5;
	add.s32 	%r239, %r238, 1208041124;
	xor.b32  	%r240, %r237, %r239;
	add.s32 	%r241, %r240, %r225;
	and.b32  	%r242, %r241, 2147483647;
	cvt.rn.f32.s32	%f186, %r242;
	mul.ftz.f32 	%f394, %f186, 0f30000000;
	ld.u32 	%r861, [%rd24+20];
	bra.uni 	LBB3_10;
LBB3_103:
LBB3_23:
	add.ftz.f32 	%f209, %f37, %f398;
	ld.v2.f32 	{%f401, %f402}, [%rd24+40];
	add.ftz.f32 	%f210, %f402, %f209;
	add.ftz.f32 	%f211, %f401, %f38;
	cvt.rmi.ftz.f32.f32	%f212, %f211;
	cvt.rmi.ftz.f32.f32	%f213, %f210;
	sub.ftz.f32 	%f214, %f210, %f213;
	sub.ftz.f32 	%f215, %f211, %f212;
	mov.f32 	%f216, 0f3727C5AC;
	max.ftz.f32 	%f217, %f215, %f216;
	mov.f32 	%f218, 0f3F7FFF58;
	min.ftz.f32 	%f394, %f217, %f218;
	max.ftz.f32 	%f219, %f214, %f216;
	min.ftz.f32 	%f395, %f219, %f218;
	ld.u32 	%r46, [%rd24+16];
	ld.u32 	%r861, [%rd24+20];
	ld.v2.u32 	{%r859, %r860}, [%rd24+24];
	bra.uni 	LBB3_24;
LBB3_98:
LBB3_6:
	setp.eq.s32	%p6, %r5, 1;
	@%p6 bra 	LBB3_9;
	bra.uni 	LBB3_7;
LBB3_9:
	ld.v2.u32 	{%r859, %r860}, [%rd24+24];
	mul.wide.s32 	%rd55, %r860, -2032597691;
	shr.u64 	%rd56, %rd55, 32;
	cvt.u32.u64	%r251, %rd56;
	add.s32 	%r252, %r251, %r860;
	shr.u32 	%r253, %r252, 31;
	shr.s32 	%r254, %r252, 7;
	add.s32 	%r255, %r254, %r253;
	mul.lo.s32 	%r256, %r255, 243;
	sub.s32 	%r257, %r860, %r256;
	cvt.rn.f32.s32	%f190, %r257;
	neg.ftz.f32 	%f191, %f190;
	fma.rn.ftz.f32 	%f394, %f394, 0f43730000, %f191;
	add.s32 	%r857, %r5, 1;
	bra.uni 	LBB3_12;
LBB3_7:
	setp.ne.s32	%p7, %r5, 0;
	@%p7 bra 	LBB3_99;
	ld.v2.u32 	{%r859, %r860}, [%rd24+24];
	shr.s32 	%r258, %r859, 31;
	shr.u32 	%r259, %r258, 24;
	add.s32 	%r260, %r859, %r259;
	and.b32  	%r261, %r260, -256;
	sub.s32 	%r262, %r859, %r261;
	cvt.rn.f32.s32	%f192, %r262;
	neg.ftz.f32 	%f193, %f192;
	fma.rn.ftz.f32 	%f394, %f394, 0f43800000, %f193;
	add.s32 	%r857, %r5, 1;
	bra.uni 	LBB3_12;
LBB3_99:
LBB3_10:
	add.s32 	%r857, %r5, 1;
	ld.v2.u32 	{%r859, %r860}, [%rd24+24];
	setp.lt.s32	%p8, %r857, 8;
	@%p8 bra 	LBB3_100;
	bra.uni 	LBB3_11;
LBB3_100:
LBB3_12:
	mov.f32 	%f395, 0f00000000;
	setp.lt.s32	%p9, %r861, 1;
	@%p9 bra 	LBB3_101;
	and.b32  	%r392, %r857, 63;
	// inline asm
	mov.b64 {_,%r384}, %rd286;
	// inline asm
	// inline asm
	call (%rd58), _rt_buffer_get_id_64, (%r384, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd63, [%rd58+512];
	mul.wide.u32 	%rd69, %r392, 4;
	// inline asm
	mov.b64 {_,%r388}, %rd63;
	// inline asm
	// inline asm
	call (%rd64), _rt_buffer_get_id_64, (%r388, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd70, %rd69, %rd64;
	ld.u32 	%r26, [%rd70+512];
	cvt.rn.f32.s32	%f196, %r26;
	rcp.approx.ftz.f32 	%f23, %f196;
	mov.f32 	%f391, %f23;
	mov.u32 	%r858, %r861;
LBB3_14:
	setp.ne.s32	%p10, %r26, 0;
	selp.b32	%r393, %r26, %r858, %p10;
	rem.s32 	%r394, %r858, %r393;
	cvt.rn.f32.s32	%f197, %r394;
	fma.rn.ftz.f32 	%f395, %f391, %f197, %f395;
	mul.ftz.f32 	%f391, %f23, %f391;
	selp.b32	%r395, %r26, -2147483648, %p10;
	div.s32 	%r858, %r858, %r395;
	setp.gt.s32	%p11, %r858, 0;
	@%p11 bra 	LBB3_14;
	bra.uni 	LBB3_15;
LBB3_11:
	shl.b32 	%r263, %r861, 4;
	add.s32 	%r264, %r263, -1556008596;
	add.s32 	%r265, %r861, -1640531527;
	xor.b32  	%r266, %r264, %r265;
	shr.u32 	%r267, %r861, 5;
	add.s32 	%r268, %r267, -939442524;
	xor.b32  	%r269, %r266, %r268;
	add.s32 	%r270, %r269, %r857;
	shl.b32 	%r271, %r270, 4;
	add.s32 	%r272, %r271, -1383041155;
	add.s32 	%r273, %r270, -1640531527;
	xor.b32  	%r274, %r272, %r273;
	shr.u32 	%r275, %r270, 5;
	add.s32 	%r276, %r275, 2123724318;
	xor.b32  	%r277, %r274, %r276;
	add.s32 	%r278, %r277, %r861;
	shl.b32 	%r279, %r278, 4;
	add.s32 	%r280, %r279, -1556008596;
	add.s32 	%r281, %r278, 1013904242;
	xor.b32  	%r282, %r280, %r281;
	shr.u32 	%r283, %r278, 5;
	add.s32 	%r284, %r283, -939442524;
	xor.b32  	%r285, %r282, %r284;
	add.s32 	%r286, %r285, %r270;
	shl.b32 	%r287, %r286, 4;
	add.s32 	%r288, %r287, -1383041155;
	add.s32 	%r289, %r286, 1013904242;
	xor.b32  	%r290, %r288, %r289;
	shr.u32 	%r291, %r286, 5;
	add.s32 	%r292, %r291, 2123724318;
	xor.b32  	%r293, %r290, %r292;
	add.s32 	%r294, %r293, %r278;
	shl.b32 	%r295, %r294, 4;
	add.s32 	%r296, %r295, -1556008596;
	add.s32 	%r297, %r294, -626627285;
	xor.b32  	%r298, %r296, %r297;
	shr.u32 	%r299, %r294, 5;
	add.s32 	%r300, %r299, -939442524;
	xor.b32  	%r301, %r298, %r300;
	add.s32 	%r302, %r301, %r286;
	shl.b32 	%r303, %r302, 4;
	add.s32 	%r304, %r303, -1383041155;
	add.s32 	%r305, %r302, -626627285;
	xor.b32  	%r306, %r304, %r305;
	shr.u32 	%r307, %r302, 5;
	add.s32 	%r308, %r307, 2123724318;
	xor.b32  	%r309, %r306, %r308;
	add.s32 	%r310, %r309, %r294;
	shl.b32 	%r311, %r310, 4;
	add.s32 	%r312, %r311, -1556008596;
	add.s32 	%r313, %r310, 2027808484;
	xor.b32  	%r314, %r312, %r313;
	shr.u32 	%r315, %r310, 5;
	add.s32 	%r316, %r315, -939442524;
	xor.b32  	%r317, %r314, %r316;
	add.s32 	%r318, %r317, %r302;
	shl.b32 	%r319, %r318, 4;
	add.s32 	%r320, %r319, -1383041155;
	add.s32 	%r321, %r318, 2027808484;
	xor.b32  	%r322, %r320, %r321;
	shr.u32 	%r323, %r318, 5;
	add.s32 	%r324, %r323, 2123724318;
	xor.b32  	%r325, %r322, %r324;
	add.s32 	%r326, %r325, %r310;
	shl.b32 	%r327, %r326, 4;
	add.s32 	%r328, %r327, -1556008596;
	add.s32 	%r329, %r326, 387276957;
	xor.b32  	%r330, %r328, %r329;
	shr.u32 	%r331, %r326, 5;
	add.s32 	%r332, %r331, -939442524;
	xor.b32  	%r333, %r330, %r332;
	add.s32 	%r334, %r333, %r318;
	shl.b32 	%r335, %r334, 4;
	add.s32 	%r336, %r335, -1383041155;
	add.s32 	%r337, %r334, 387276957;
	xor.b32  	%r338, %r336, %r337;
	shr.u32 	%r339, %r334, 5;
	add.s32 	%r340, %r339, 2123724318;
	xor.b32  	%r341, %r338, %r340;
	add.s32 	%r342, %r341, %r326;
	shl.b32 	%r343, %r342, 4;
	add.s32 	%r344, %r343, -1556008596;
	add.s32 	%r345, %r342, -1253254570;
	xor.b32  	%r346, %r344, %r345;
	shr.u32 	%r347, %r342, 5;
	add.s32 	%r348, %r347, -939442524;
	xor.b32  	%r349, %r346, %r348;
	add.s32 	%r350, %r349, %r334;
	shl.b32 	%r351, %r350, 4;
	add.s32 	%r352, %r351, -1383041155;
	add.s32 	%r353, %r350, -1253254570;
	xor.b32  	%r354, %r352, %r353;
	shr.u32 	%r355, %r350, 5;
	add.s32 	%r356, %r355, 2123724318;
	xor.b32  	%r357, %r354, %r356;
	add.s32 	%r358, %r357, %r342;
	shl.b32 	%r359, %r358, 4;
	add.s32 	%r360, %r359, -1556008596;
	add.s32 	%r361, %r358, 1401181199;
	xor.b32  	%r362, %r360, %r361;
	shr.u32 	%r363, %r358, 5;
	add.s32 	%r364, %r363, -939442524;
	xor.b32  	%r365, %r362, %r364;
	add.s32 	%r366, %r365, %r350;
	shl.b32 	%r367, %r366, 4;
	add.s32 	%r368, %r367, -1383041155;
	add.s32 	%r369, %r366, 1401181199;
	xor.b32  	%r370, %r368, %r369;
	shr.u32 	%r371, %r366, 5;
	add.s32 	%r372, %r371, 2123724318;
	xor.b32  	%r373, %r370, %r372;
	add.s32 	%r374, %r373, %r358;
	shl.b32 	%r375, %r374, 4;
	add.s32 	%r376, %r375, 591475052;
	add.s32 	%r377, %r374, 1908133320;
	xor.b32  	%r378, %r376, %r377;
	shr.u32 	%r379, %r374, 5;
	add.s32 	%r380, %r379, 1208041124;
	xor.b32  	%r381, %r378, %r380;
	add.s32 	%r382, %r381, %r366;
	and.b32  	%r383, %r382, 2147483647;
	cvt.rn.f32.s32	%f194, %r383;
	mul.ftz.f32 	%f395, %f194, 0f30000000;
	bra.uni 	LBB3_19;
LBB3_101:
LBB3_15:
	setp.ne.s32	%p12, %r857, 0;
	@%p12 bra 	LBB3_17;
	bra.uni 	LBB3_16;
LBB3_17:
	setp.ne.s32	%p13, %r5, 0;
	@%p13 bra 	LBB3_102;
	bra.uni 	LBB3_18;
LBB3_102:
	bra.uni 	LBB3_19;
LBB3_16:
	shr.s32 	%r403, %r859, 31;
	shr.u32 	%r404, %r403, 24;
	add.s32 	%r405, %r859, %r404;
	and.b32  	%r406, %r405, -256;
	sub.s32 	%r407, %r859, %r406;
	cvt.rn.f32.s32	%f200, %r407;
	neg.ftz.f32 	%f201, %f200;
	fma.rn.ftz.f32 	%f395, %f395, 0f43800000, %f201;
	bra.uni 	LBB3_19;
LBB3_18:
	mul.wide.s32 	%rd71, %r860, -2032597691;
	shr.u64 	%rd72, %rd71, 32;
	cvt.u32.u64	%r396, %rd72;
	add.s32 	%r397, %r396, %r860;
	shr.u32 	%r398, %r397, 31;
	shr.s32 	%r399, %r397, 7;
	add.s32 	%r400, %r399, %r398;
	mul.lo.s32 	%r401, %r400, 243;
	sub.s32 	%r402, %r860, %r401;
	cvt.rn.f32.s32	%f198, %r402;
	neg.ftz.f32 	%f199, %f198;
	fma.rn.ftz.f32 	%f395, %f395, 0f43730000, %f199;
LBB3_19:
	add.s32 	%r46, %r5, 2;
	ld.u32 	%r868, [%rd24+32];
	ld.u32 	%r869, [%rd24+36];
	ld.v2.f32 	{%f401, %f402}, [%rd24+40];
LBB3_24:
	ld.v2.f32 	{%f52, %f53}, [%rd24+8];
	ld.u32 	%r70, [%rd24];
	// inline asm
	mov.b64 {_,%r471}, %rd286;
	// inline asm
	// inline asm
	call (%rd74), _rt_buffer_get_id_64, (%r471, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd79, [%rd74+520];
	shl.b64 	%rd85, %rd3, 5;
	// inline asm
	mov.b64 {_,%r475}, %rd79;
	// inline asm
	// inline asm
	call (%rd80), _rt_buffer_get_id_64, (%r475, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd86, %rd85, %rd80;
	ld.u32 	%r53, [%rd86+520];
	setp.ne.s32	%p47, %r53, 1;
	@%p47 bra 	LBB3_25;
	setp.eq.s32	%p48, %r70, 1;
	@%p48 bra 	LBB3_37;
	bra.uni 	LBB3_27;
LBB3_37:
	cvt.rn.f32.s32	%f230, %r869;
	rcp.approx.ftz.f32 	%f231, %f230;
	mul.ftz.f32 	%f64, %f231, 0f3F000000;
	setp.gt.s32	%p55, %r869, 1;
	selp.u32	%r621, 1, 0, %p55;
	setp.gt.s32	%p56, %r869, 2;
	selp.b32	%r622, 2, 1, %p55;
	selp.b32	%r623, %r622, %r621, %p56;
	setp.gt.s32	%p57, %r869, 4;
	selp.u32	%r624, 1, 0, %p57;
	setp.gt.s32	%p58, %r869, 8;
	selp.u32	%r625, 1, 0, %p58;
	setp.gt.s32	%p59, %r869, 16;
	selp.u32	%r626, 1, 0, %p59;
	setp.gt.s32	%p60, %r869, 32;
	selp.u32	%r627, 1, 0, %p60;
	setp.gt.s32	%p61, %r869, 64;
	selp.u32	%r628, 1, 0, %p61;
	setp.gt.s32	%p62, %r869, 128;
	selp.u32	%r629, 1, 0, %p62;
	setp.gt.s32	%p63, %r869, 256;
	selp.u32	%r630, 1, 0, %p63;
	setp.gt.s32	%p64, %r869, 512;
	selp.u32	%r631, 1, 0, %p64;
	setp.gt.s32	%p65, %r869, 1024;
	selp.u32	%r632, 1, 0, %p65;
	setp.gt.s32	%p66, %r869, 2048;
	selp.u32	%r633, 1, 0, %p66;
	setp.gt.s32	%p67, %r869, 4096;
	selp.u32	%r634, 1, 0, %p67;
	setp.gt.s32	%p68, %r869, 8192;
	selp.u32	%r635, 1, 0, %p68;
	setp.gt.s32	%p69, %r869, 16384;
	selp.u32	%r636, 1, 0, %p69;
	setp.gt.s32	%p70, %r869, 32768;
	selp.u32	%r637, 1, 0, %p70;
	setp.gt.s32	%p71, %r869, 65536;
	selp.u32	%r638, 1, 0, %p71;
	setp.gt.s32	%p72, %r869, 131072;
	selp.u32	%r639, 1, 0, %p72;
	setp.gt.s32	%p73, %r869, 262144;
	selp.u32	%r640, 1, 0, %p73;
	setp.gt.s32	%p74, %r869, 524288;
	selp.u32	%r641, 1, 0, %p74;
	setp.gt.s32	%p75, %r869, 1048576;
	selp.u32	%r642, 1, 0, %p75;
	setp.gt.s32	%p76, %r869, 2097152;
	selp.u32	%r643, 1, 0, %p76;
	setp.gt.s32	%p77, %r869, 4194304;
	selp.u32	%r644, 1, 0, %p77;
	setp.gt.s32	%p78, %r869, 8388608;
	selp.u32	%r645, 1, 0, %p78;
	setp.gt.s32	%p79, %r869, 16777216;
	selp.u32	%r646, 1, 0, %p79;
	setp.gt.s32	%p80, %r869, 33554432;
	selp.u32	%r647, 1, 0, %p80;
	setp.gt.s32	%p81, %r869, 67108864;
	selp.u32	%r648, 1, 0, %p81;
	setp.gt.s32	%p82, %r869, 134217728;
	selp.u32	%r649, 1, 0, %p82;
	setp.gt.s32	%p83, %r869, 268435456;
	selp.u32	%r650, 1, 0, %p83;
	setp.gt.s32	%p84, %r869, 536870912;
	selp.u32	%r651, 1, 0, %p84;
	setp.gt.s32	%p85, %r869, 1073741824;
	selp.u32	%r652, 1, 0, %p85;
	add.s32 	%r653, %r625, %r624;
	add.s32 	%r654, %r653, %r626;
	add.s32 	%r655, %r654, %r627;
	add.s32 	%r656, %r655, %r628;
	add.s32 	%r657, %r656, %r629;
	add.s32 	%r658, %r657, %r630;
	add.s32 	%r659, %r658, %r631;
	add.s32 	%r660, %r659, %r632;
	add.s32 	%r661, %r660, %r633;
	add.s32 	%r662, %r661, %r634;
	add.s32 	%r663, %r662, %r635;
	add.s32 	%r664, %r663, %r636;
	add.s32 	%r665, %r664, %r637;
	add.s32 	%r666, %r665, %r638;
	add.s32 	%r667, %r666, %r639;
	add.s32 	%r668, %r667, %r640;
	add.s32 	%r669, %r668, %r641;
	add.s32 	%r670, %r669, %r642;
	add.s32 	%r671, %r670, %r643;
	add.s32 	%r672, %r671, %r644;
	add.s32 	%r673, %r672, %r645;
	add.s32 	%r674, %r673, %r646;
	add.s32 	%r675, %r674, %r647;
	add.s32 	%r676, %r675, %r648;
	add.s32 	%r677, %r676, %r649;
	add.s32 	%r678, %r677, %r650;
	add.s32 	%r679, %r678, %r651;
	add.s32 	%r680, %r679, %r652;
	add.s32 	%r681, %r680, %r623;
	mov.u32 	%r682, 0;
	max.s32 	%r871, %r681, %r682;
	mov.f32 	%f409, 0f00000000;
	setp.lt.s32	%p86, %r871, 1;
	@%p86 bra 	LBB3_106;
	mov.f32 	%f407, 0f3F800000;
	mov.u32 	%r872, %r868;
LBB3_39:
	and.b32  	%r683, %r872, 1;
	shr.u32 	%r872, %r872, 1;
	mul.ftz.f32 	%f407, %f407, 0f3F000000;
	cvt.rn.f32.s32	%f232, %r683;
	fma.rn.ftz.f32 	%f409, %f407, %f232, %f409;
	add.s32 	%r871, %r871, -1;
	setp.ne.s32	%p87, %r871, 0;
	@%p87 bra 	LBB3_39;
	bra.uni 	LBB3_40;
LBB3_25:
	mov.u32 	%r68, 0;
	bra.uni 	LBB3_46;
LBB3_27:
	setp.lt.s32	%p49, %r46, 8;
	@%p49 bra 	LBB3_29;
	bra.uni 	LBB3_28;
LBB3_29:
	mov.f32 	%f406, 0f00000000;
	setp.lt.s32	%p50, %r861, 1;
	@%p50 bra 	LBB3_104;
	and.b32  	%r605, %r46, 63;
	ld.u64 	%rd87, [%rd74+512];
	mul.wide.u32 	%rd93, %r605, 4;
	// inline asm
	mov.b64 {_,%r601}, %rd87;
	// inline asm
	// inline asm
	call (%rd88), _rt_buffer_get_id_64, (%r601, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd94, %rd93, %rd88;
	ld.u32 	%r54, [%rd94+512];
	cvt.rn.f32.s32	%f222, %r54;
	rcp.approx.ftz.f32 	%f55, %f222;
	mov.f32 	%f403, %f55;
	mov.u32 	%r870, %r861;
LBB3_31:
	setp.ne.s32	%p51, %r54, 0;
	selp.b32	%r606, %r54, %r870, %p51;
	rem.s32 	%r607, %r870, %r606;
	cvt.rn.f32.s32	%f223, %r607;
	fma.rn.ftz.f32 	%f406, %f403, %f223, %f406;
	mul.ftz.f32 	%f403, %f55, %f403;
	selp.b32	%r608, %r54, -2147483648, %p51;
	div.s32 	%r870, %r870, %r608;
	setp.gt.s32	%p52, %r870, 0;
	@%p52 bra 	LBB3_31;
	bra.uni 	LBB3_32;
LBB3_28:
	shl.b32 	%r480, %r861, 4;
	add.s32 	%r481, %r480, -1556008596;
	add.s32 	%r482, %r861, -1640531527;
	xor.b32  	%r483, %r481, %r482;
	shr.u32 	%r484, %r861, 5;
	add.s32 	%r485, %r484, -939442524;
	xor.b32  	%r486, %r483, %r485;
	add.s32 	%r487, %r486, %r46;
	shl.b32 	%r488, %r487, 4;
	add.s32 	%r489, %r488, -1383041155;
	add.s32 	%r490, %r487, -1640531527;
	xor.b32  	%r491, %r489, %r490;
	shr.u32 	%r492, %r487, 5;
	add.s32 	%r493, %r492, 2123724318;
	xor.b32  	%r494, %r491, %r493;
	add.s32 	%r495, %r494, %r861;
	shl.b32 	%r496, %r495, 4;
	add.s32 	%r497, %r496, -1556008596;
	add.s32 	%r498, %r495, 1013904242;
	xor.b32  	%r499, %r497, %r498;
	shr.u32 	%r500, %r495, 5;
	add.s32 	%r501, %r500, -939442524;
	xor.b32  	%r502, %r499, %r501;
	add.s32 	%r503, %r502, %r487;
	shl.b32 	%r504, %r503, 4;
	add.s32 	%r505, %r504, -1383041155;
	add.s32 	%r506, %r503, 1013904242;
	xor.b32  	%r507, %r505, %r506;
	shr.u32 	%r508, %r503, 5;
	add.s32 	%r509, %r508, 2123724318;
	xor.b32  	%r510, %r507, %r509;
	add.s32 	%r511, %r510, %r495;
	shl.b32 	%r512, %r511, 4;
	add.s32 	%r513, %r512, -1556008596;
	add.s32 	%r514, %r511, -626627285;
	xor.b32  	%r515, %r513, %r514;
	shr.u32 	%r516, %r511, 5;
	add.s32 	%r517, %r516, -939442524;
	xor.b32  	%r518, %r515, %r517;
	add.s32 	%r519, %r518, %r503;
	shl.b32 	%r520, %r519, 4;
	add.s32 	%r521, %r520, -1383041155;
	add.s32 	%r522, %r519, -626627285;
	xor.b32  	%r523, %r521, %r522;
	shr.u32 	%r524, %r519, 5;
	add.s32 	%r525, %r524, 2123724318;
	xor.b32  	%r526, %r523, %r525;
	add.s32 	%r527, %r526, %r511;
	shl.b32 	%r528, %r527, 4;
	add.s32 	%r529, %r528, -1556008596;
	add.s32 	%r530, %r527, 2027808484;
	xor.b32  	%r531, %r529, %r530;
	shr.u32 	%r532, %r527, 5;
	add.s32 	%r533, %r532, -939442524;
	xor.b32  	%r534, %r531, %r533;
	add.s32 	%r535, %r534, %r519;
	shl.b32 	%r536, %r535, 4;
	add.s32 	%r537, %r536, -1383041155;
	add.s32 	%r538, %r535, 2027808484;
	xor.b32  	%r539, %r537, %r538;
	shr.u32 	%r540, %r535, 5;
	add.s32 	%r541, %r540, 2123724318;
	xor.b32  	%r542, %r539, %r541;
	add.s32 	%r543, %r542, %r527;
	shl.b32 	%r544, %r543, 4;
	add.s32 	%r545, %r544, -1556008596;
	add.s32 	%r546, %r543, 387276957;
	xor.b32  	%r547, %r545, %r546;
	shr.u32 	%r548, %r543, 5;
	add.s32 	%r549, %r548, -939442524;
	xor.b32  	%r550, %r547, %r549;
	add.s32 	%r551, %r550, %r535;
	shl.b32 	%r552, %r551, 4;
	add.s32 	%r553, %r552, -1383041155;
	add.s32 	%r554, %r551, 387276957;
	xor.b32  	%r555, %r553, %r554;
	shr.u32 	%r556, %r551, 5;
	add.s32 	%r557, %r556, 2123724318;
	xor.b32  	%r558, %r555, %r557;
	add.s32 	%r559, %r558, %r543;
	shl.b32 	%r560, %r559, 4;
	add.s32 	%r561, %r560, -1556008596;
	add.s32 	%r562, %r559, -1253254570;
	xor.b32  	%r563, %r561, %r562;
	shr.u32 	%r564, %r559, 5;
	add.s32 	%r565, %r564, -939442524;
	xor.b32  	%r566, %r563, %r565;
	add.s32 	%r567, %r566, %r551;
	shl.b32 	%r568, %r567, 4;
	add.s32 	%r569, %r568, -1383041155;
	add.s32 	%r570, %r567, -1253254570;
	xor.b32  	%r571, %r569, %r570;
	shr.u32 	%r572, %r567, 5;
	add.s32 	%r573, %r572, 2123724318;
	xor.b32  	%r574, %r571, %r573;
	add.s32 	%r575, %r574, %r559;
	shl.b32 	%r576, %r575, 4;
	add.s32 	%r577, %r576, -1556008596;
	add.s32 	%r578, %r575, 1401181199;
	xor.b32  	%r579, %r577, %r578;
	shr.u32 	%r580, %r575, 5;
	add.s32 	%r581, %r580, -939442524;
	xor.b32  	%r582, %r579, %r581;
	add.s32 	%r583, %r582, %r567;
	shl.b32 	%r584, %r583, 4;
	add.s32 	%r585, %r584, -1383041155;
	add.s32 	%r586, %r583, 1401181199;
	xor.b32  	%r587, %r585, %r586;
	shr.u32 	%r588, %r583, 5;
	add.s32 	%r589, %r588, 2123724318;
	xor.b32  	%r590, %r587, %r589;
	add.s32 	%r591, %r590, %r575;
	shl.b32 	%r592, %r591, 4;
	add.s32 	%r593, %r592, 591475052;
	add.s32 	%r594, %r591, 1908133320;
	xor.b32  	%r595, %r593, %r594;
	shr.u32 	%r596, %r591, 5;
	add.s32 	%r597, %r596, 1208041124;
	xor.b32  	%r598, %r595, %r597;
	add.s32 	%r599, %r598, %r583;
	and.b32  	%r600, %r599, 2147483647;
	cvt.rn.f32.s32	%f220, %r600;
	mul.ftz.f32 	%f406, %f220, 0f30000000;
	bra.uni 	LBB3_36;
LBB3_106:
LBB3_40:
	add.ftz.f32 	%f233, %f64, %f409;
	add.ftz.f32 	%f234, %f401, %f233;
	cvt.rmi.ftz.f32.f32	%f235, %f234;
	sub.ftz.f32 	%f236, %f234, %f235;
	mov.f32 	%f237, 0f3727C5AC;
	max.ftz.f32 	%f238, %f236, %f237;
	mov.f32 	%f239, 0f3F7FFF58;
	min.ftz.f32 	%f406, %f238, %f239;
	bra.uni 	LBB3_41;
LBB3_104:
LBB3_32:
	setp.eq.s32	%p53, %r46, 1;
	@%p53 bra 	LBB3_35;
	bra.uni 	LBB3_33;
LBB3_35:
	mul.wide.s32 	%rd95, %r860, -2032597691;
	shr.u64 	%rd96, %rd95, 32;
	cvt.u32.u64	%r609, %rd96;
	add.s32 	%r610, %r609, %r860;
	shr.u32 	%r611, %r610, 31;
	shr.s32 	%r612, %r610, 7;
	add.s32 	%r613, %r612, %r611;
	mul.lo.s32 	%r614, %r613, 243;
	sub.s32 	%r615, %r860, %r614;
	cvt.rn.f32.s32	%f224, %r615;
	neg.ftz.f32 	%f225, %f224;
	fma.rn.ftz.f32 	%f406, %f406, 0f43730000, %f225;
	bra.uni 	LBB3_36;
LBB3_33:
	setp.ne.s32	%p54, %r46, 0;
	@%p54 bra 	LBB3_105;
	shr.s32 	%r616, %r859, 31;
	shr.u32 	%r617, %r616, 24;
	add.s32 	%r618, %r859, %r617;
	and.b32  	%r619, %r618, -256;
	sub.s32 	%r620, %r859, %r619;
	cvt.rn.f32.s32	%f226, %r620;
	neg.ftz.f32 	%f227, %f226;
	fma.rn.ftz.f32 	%f406, %f406, 0f43800000, %f227;
	bra.uni 	LBB3_36;
LBB3_105:
LBB3_36:
	add.s32 	%r46, %r46, 1;
LBB3_41:
	// inline asm
	mov.b64 {_,%r684}, %rd286;
	// inline asm
	// inline asm
	call (%rd98), _rt_buffer_get_id_64, (%r684, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd103, [%rd98+528];
	mul.lo.s64 	%rd115, %rd3, 40;
	// inline asm
	mov.b64 {_,%r688}, %rd103;
	// inline asm
	// inline asm
	call (%rd104), _rt_buffer_get_id_64, (%r688, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd116, %rd115, %rd104;
	ld.u64 	%rd5, [%rd116+528];
	// inline asm
	mov.b64 {_,%r692}, %rd5;
	// inline asm
	// inline asm
	call (%rd110), _rt_buffer_get_id_64, (%r692, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.f32 	%f240, [%rd110+512];
	setp.leu.ftz.f32	%p88, %f406, %f240;
	@%p88 bra 	LBB3_42;
	// inline asm
	mov.b64 {_,%r698}, %rd5;
	// inline asm
	// inline asm
	call (%rd118), _rt_buffer_get_id_64, (%r698, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	mov.u32 	%r875, 0;
LBB3_44:
	add.s32 	%r875, %r875, 1;
	mul.wide.s32 	%rd123, %r875, 4;
	add.s64 	%rd124, %rd123, %rd118;
	ld.f32 	%f241, [%rd124+512];
	setp.gt.ftz.f32	%p89, %f406, %f241;
	@%p89 bra 	LBB3_44;
	bra.uni 	LBB3_45;
LBB3_42:
	mov.u32 	%r875, 0;
LBB3_45:
	mov.u32 	%r702, 5;
	min.s32 	%r68, %r702, %r875;
LBB3_46:
	cvt.rmi.ftz.f32.f32	%f243, %f394;
	cvt.rmi.ftz.f32.f32	%f244, %f395;
	sub.ftz.f32 	%f245, %f395, %f244;
	sub.ftz.f32 	%f246, %f394, %f243;
	mov.f32 	%f412, 0f00000000;
	max.ftz.f32 	%f248, %f246, %f412;
	mov.f32 	%f415, 0f3F800000;
	min.ftz.f32 	%f413, %f248, %f415;
	max.ftz.f32 	%f249, %f245, %f412;
	min.ftz.f32 	%f414, %f249, %f415;
	setp.eq.s32	%p90, %r1, 0;
	setp.eq.s32	%p91, %r2, 0;
	or.pred  	%p92, %p90, %p91;
	@%p92 bra 	LBB3_108;
	bra.uni 	LBB3_47;
LBB3_108:
	bra.uni 	LBB3_60;
LBB3_47:
	mul.lo.s32 	%r77, %r68, %r2;
	mul.lo.s32 	%r703, %r2, %r1;
	add.s32 	%r880, %r2, -1;
	setp.gt.s32	%p93, %r880, 1;
	@%p93 bra 	LBB3_49;
	bra.uni 	LBB3_48;
LBB3_49:
	// inline asm
	mov.b64 {_,%r706}, %rd286;
	// inline asm
	// inline asm
	call (%rd127), _rt_buffer_get_id_64, (%r706, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd132, [%rd127+528];
	mul.lo.s64 	%rd144, %rd3, 40;
	add.s64 	%rd308, %rd144, 24;
	// inline asm
	mov.b64 {_,%r710}, %rd132;
	// inline asm
	// inline asm
	call (%rd133), _rt_buffer_get_id_64, (%r710, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd145, %rd133, %rd308;
	ld.u64 	%rd138, [%rd145+512];
	// inline asm
	mov.b64 {_,%r714}, %rd138;
	// inline asm
	// inline asm
	call (%rd139), _rt_buffer_get_id_64, (%r714, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	mov.u32 	%r881, 0;
LBB3_50:
	add.s32 	%r718, %r881, %r880;
	shr.u32 	%r719, %r718, 31;
	add.s32 	%r720, %r718, %r719;
	shr.s32 	%r721, %r720, 1;
	add.s32 	%r722, %r721, %r77;
	mul.wide.s32 	%rd146, %r722, 4;
	add.s64 	%rd147, %rd146, %rd139;
	ld.f32 	%f250, [%rd147+512];
	setp.le.ftz.f32	%p94, %f414, %f250;
	selp.b32	%r880, %r721, %r880, %p94;
	selp.b32	%r881, %r881, %r721, %p94;
	sub.s32 	%r723, %r880, %r881;
	setp.gt.s32	%p95, %r723, 1;
	@%p95 bra 	LBB3_50;
	bra.uni 	LBB3_51;
LBB3_48:
	mul.lo.s64 	%rd125, %rd3, 40;
	add.s64 	%rd308, %rd125, 24;
	mov.u32 	%r881, 0;
LBB3_51:
	mul.lo.s32 	%r78, %r703, %r68;
	// inline asm
	mov.b64 {_,%r724}, %rd286;
	// inline asm
	// inline asm
	call (%rd149), _rt_buffer_get_id_64, (%r724, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd154, [%rd149+528];
	// inline asm
	mov.b64 {_,%r728}, %rd154;
	// inline asm
	// inline asm
	call (%rd155), _rt_buffer_get_id_64, (%r728, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd12, %rd155, 512;
	add.s64 	%rd166, %rd12, %rd308;
	ld.u64 	%rd212, [%rd166];
	add.s32 	%r736, %r881, %r77;
	mul.wide.s32 	%rd167, %r736, 4;
	// inline asm
	mov.b64 {_,%r732}, %rd212;
	// inline asm
	// inline asm
	call (%rd161), _rt_buffer_get_id_64, (%r732, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd168, %rd167, %rd161;
	ld.f32 	%f251, [%rd168+512];
	setp.lt.ftz.f32	%p96, %f251, %f414;
	selp.b32	%r86, %r880, %r881, %p96;
	add.s32 	%r882, %r1, -1;
	setp.gt.s32	%p97, %r882, 1;
	mul.lo.s64 	%rd169, %rd3, 40;
	add.s64 	%rd309, %rd169, 32;
	@%p97 bra 	LBB3_53;
	bra.uni 	LBB3_52;
LBB3_53:
	add.s64 	%rd176, %rd12, %rd309;
	ld.u64 	%rd170, [%rd176];
	mul.lo.s32 	%r885, %r86, %r1;
	add.s32 	%r884, %r885, %r78;
	// inline asm
	mov.b64 {_,%r739}, %rd170;
	// inline asm
	// inline asm
	call (%rd171), _rt_buffer_get_id_64, (%r739, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	mov.u32 	%r887, 0;
LBB3_54:
	add.s32 	%r743, %r887, %r882;
	shr.u32 	%r744, %r743, 31;
	add.s32 	%r745, %r743, %r744;
	shr.s32 	%r746, %r745, 1;
	add.s32 	%r747, %r884, %r746;
	mul.wide.s32 	%rd177, %r747, 4;
	add.s64 	%rd178, %rd177, %rd171;
	ld.f32 	%f252, [%rd178+512];
	setp.le.ftz.f32	%p98, %f413, %f252;
	selp.b32	%r882, %r746, %r882, %p98;
	selp.b32	%r887, %r887, %r746, %p98;
	sub.s32 	%r748, %r882, %r887;
	setp.gt.s32	%p99, %r748, 1;
	@%p99 bra 	LBB3_54;
	bra.uni 	LBB3_55;
LBB3_52:
	mul.lo.s32 	%r885, %r86, %r1;
	add.s32 	%r884, %r885, %r78;
	mov.u32 	%r887, 0;
LBB3_55:
	// inline asm
	mov.b64 {_,%r749}, %rd286;
	// inline asm
	// inline asm
	call (%rd180), _rt_buffer_get_id_64, (%r749, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd185, [%rd180+528];
	// inline asm
	mov.b64 {_,%r753}, %rd185;
	// inline asm
	// inline asm
	call (%rd186), _rt_buffer_get_id_64, (%r753, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd203, %rd186, %rd309;
	ld.u64 	%rd191, [%rd203+512];
	add.s32 	%r765, %r884, %r887;
	mul.wide.s32 	%rd204, %r765, 4;
	// inline asm
	mov.b64 {_,%r757}, %rd191;
	// inline asm
	// inline asm
	call (%rd192), _rt_buffer_get_id_64, (%r757, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd19, %rd192, 512;
	add.s64 	%rd205, %rd204, %rd19;
	ld.f32 	%f254, [%rd205];
	setp.lt.ftz.f32	%p100, %f254, %f414;
	selp.b32	%r100, %r882, %r887, %p100;
	add.s32 	%r101, %r100, %r78;
	add.s32 	%r766, %r101, %r885;
	mul.wide.s32 	%rd206, %r766, 4;
	add.s64 	%rd207, %rd206, %rd19;
	ld.f32 	%f80, [%rd207];
	add.s32 	%r102, %r86, %r77;
	mul.wide.s32 	%rd208, %r102, 4;
	// inline asm
	mov.b64 {_,%r761}, %rd212;
	// inline asm
	// inline asm
	call (%rd198), _rt_buffer_get_id_64, (%r761, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd209, %rd208, %rd198;
	ld.f32 	%f81, [%rd209+512];
	setp.lt.s32	%p101, %r100, 1;
	mov.f32 	%f411, %f412;
	@%p101 bra 	LBB3_57;
	add.s32 	%r767, %r885, %r101;
	add.s32 	%r768, %r767, -1;
	mul.wide.s32 	%rd210, %r768, 4;
	add.s64 	%rd211, %rd210, %rd19;
	ld.f32 	%f411, [%rd211];
LBB3_57:
	setp.lt.s32	%p102, %r86, 1;
	@%p102 bra 	LBB3_59;
	add.s32 	%r773, %r102, -1;
	mul.wide.s32 	%rd218, %r773, 4;
	// inline asm
	mov.b64 {_,%r770}, %rd212;
	// inline asm
	// inline asm
	call (%rd213), _rt_buffer_get_id_64, (%r770, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd219, %rd218, %rd213;
	ld.f32 	%f412, [%rd219+512];
LBB3_59:
	sub.ftz.f32 	%f256, %f80, %f411;
	sub.ftz.f32 	%f257, %f81, %f412;
	sub.ftz.f32 	%f258, %f414, %f412;
	sub.ftz.f32 	%f259, %f413, %f411;
	div.approx.ftz.f32 	%f260, %f259, %f256;
	div.approx.ftz.f32 	%f261, %f258, %f257;
	add.ftz.f32 	%f262, %f261, 0fBF000000;
	add.ftz.f32 	%f263, %f260, 0fBF000000;
	cvt.rmi.ftz.f32.f32	%f264, %f263;
	cvt.rmi.ftz.f32.f32	%f265, %f262;
	sub.ftz.f32 	%f266, %f262, %f265;
	sub.ftz.f32 	%f267, %f263, %f264;
	mov.f32 	%f268, 0f3A83126F;
	max.ftz.f32 	%f269, %f267, %f268;
	mov.f32 	%f270, 0f3F7FBE77;
	min.ftz.f32 	%f271, %f269, %f270;
	max.ftz.f32 	%f272, %f266, %f268;
	min.ftz.f32 	%f273, %f272, %f270;
	cvt.rn.f32.s32	%f274, %r100;
	cvt.rn.f32.s32	%f275, %r86;
	add.ftz.f32 	%f413, %f274, %f271;
	add.ftz.f32 	%f414, %f275, %f273;
	mul.ftz.f32 	%f276, %f256, %f257;
	cvt.rn.f32.s32	%f277, %r1;
	mul.ftz.f32 	%f278, %f277, %f276;
	cvt.rn.f32.s32	%f279, %r2;
	mul.ftz.f32 	%f415, %f279, %f278;
LBB3_60:
	setp.eq.s32	%p103, %r53, 1;
	add.ftz.f32 	%f280, %f414, 0f3F000000;
	add.ftz.f32 	%f281, %f413, 0f3F000000;
	cvt.rn.f32.s32	%f282, %r2;
	cvt.rn.f32.s32	%f283, %r1;
	div.approx.ftz.f32 	%f92, %f281, %f283;
	div.approx.ftz.f32 	%f93, %f280, %f282;
	@%p103 bra 	LBB3_62;
	bra.uni 	LBB3_61;
LBB3_62:
	fma.rn.ftz.f32 	%f112, %f92, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f108, %f93, 0f40000000, 0fBF800000;
	mov.f32 	%f416, 0f00000000;
	setp.gt.s32	%p104, %r68, 2;
	@%p104 bra 	LBB3_66;
	setp.eq.s32	%p108, %r68, 0;
	@%p108 bra 	LBB3_69;
	setp.eq.s32	%p109, %r68, 1;
	@%p109 bra 	LBB3_70;
	bra.uni 	LBB3_65;
LBB3_70:
	neg.ftz.f32 	%f417, %f108;
	mov.f32 	%f416, 0fBF800000;
	mov.f32 	%f418, %f112;
	bra.uni 	LBB3_75;
LBB3_61:
	mul.ftz.f32 	%f284, %f92, 0fC0C90FDB;
	mul.ftz.f32 	%f285, %f93, 0f40490FDB;
	cos.approx.ftz.f32 	%f286, %f285;
	sin.approx.ftz.f32 	%f287, %f285;
	cos.approx.ftz.f32 	%f288, %f284;
	sin.approx.ftz.f32 	%f289, %f284;
	mul.ftz.f32 	%f420, %f287, %f288;
	mul.ftz.f32 	%f421, %f287, %f289;
	neg.ftz.f32 	%f422, %f286;
	fma.rn.ftz.f32 	%f290, %f422, %f286, 0f3F800000;
	sqrt.approx.ftz.f32 	%f291, %f290;
	mul.ftz.f32 	%f292, %f291, 0f419DE9E6;
	mov.f32 	%f293, 0f3CA3D70A;
	max.ftz.f32 	%f294, %f292, %f293;
	div.approx.ftz.f32 	%f423, %f415, %f294;
	bra.uni 	LBB3_78;
LBB3_66:
	setp.eq.s32	%p105, %r68, 3;
	@%p105 bra 	LBB3_72;
	setp.eq.s32	%p106, %r68, 4;
	@%p106 bra 	LBB3_73;
	bra.uni 	LBB3_68;
LBB3_73:
	neg.ftz.f32 	%f417, %f108;
	mov.f32 	%f418, 0f3F800000;
	mov.f32 	%f416, %f112;
	bra.uni 	LBB3_75;
LBB3_69:
	neg.ftz.f32 	%f417, %f108;
	neg.ftz.f32 	%f418, %f112;
	mov.f32 	%f416, 0f3F800000;
	bra.uni 	LBB3_75;
LBB3_65:
	setp.eq.s32	%p110, %r68, 2;
	mov.f32 	%f417, %f416;
	mov.f32 	%f418, %f416;
	@%p110 bra 	LBB3_71;
	bra.uni 	LBB3_75;
LBB3_71:
	mov.f32 	%f417, 0f3F800000;
	mov.f32 	%f416, %f112;
	mov.f32 	%f418, %f108;
	bra.uni 	LBB3_75;
LBB3_72:
	neg.ftz.f32 	%f418, %f108;
	mov.f32 	%f417, 0fBF800000;
	mov.f32 	%f416, %f112;
	bra.uni 	LBB3_75;
LBB3_68:
	setp.eq.s32	%p107, %r68, 5;
	mov.f32 	%f417, %f416;
	mov.f32 	%f418, %f416;
	@%p107 bra 	LBB3_74;
	bra.uni 	LBB3_75;
LBB3_74:
	neg.ftz.f32 	%f416, %f112;
	neg.ftz.f32 	%f417, %f108;
	mov.f32 	%f418, 0fBF800000;
LBB3_75:
	mul.ftz.f32 	%f298, %f417, %f417;
	fma.rn.ftz.f32 	%f299, %f416, %f416, %f298;
	fma.rn.ftz.f32 	%f300, %f418, %f418, %f299;
	rsqrt.approx.ftz.f32 	%f301, %f300;
	// inline asm
	mov.b64 {_,%r774}, %rd286;
	// inline asm
	// inline asm
	call (%rd221), _rt_buffer_get_id_64, (%r774, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd226, [%rd221+528];
	mul.lo.s64 	%rd238, %rd3, 40;
	// inline asm
	mov.b64 {_,%r778}, %rd226;
	// inline asm
	// inline asm
	call (%rd227), _rt_buffer_get_id_64, (%r778, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd239, %rd238, %rd227;
	ld.u64 	%rd232, [%rd239+528];
	mul.wide.s32 	%rd240, %r68, 4;
	// inline asm
	mov.b64 {_,%r782}, %rd232;
	// inline asm
	// inline asm
	call (%rd233), _rt_buffer_get_id_64, (%r782, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd20, %rd233, 512;
	add.s64 	%rd241, %rd240, %rd20;
	ld.f32 	%f419, [%rd241];
	setp.lt.s32	%p111, %r68, 1;
	@%p111 bra 	LBB3_109;
	add.s32 	%r786, %r68, -1;
	mul.wide.s32 	%rd242, %r786, 4;
	add.s64 	%rd243, %rd242, %rd20;
	ld.f32 	%f302, [%rd243];
	sub.ftz.f32 	%f419, %f419, %f302;
	bra.uni 	LBB3_77;
LBB3_109:
LBB3_77:
	mul.ftz.f32 	%f422, %f418, %f301;
	mul.ftz.f32 	%f421, %f417, %f301;
	mul.ftz.f32 	%f420, %f416, %f301;
	mul.ftz.f32 	%f303, %f415, %f419;
	fma.rn.ftz.f32 	%f304, %f108, %f108, 0f3F800000;
	fma.rn.ftz.f32 	%f305, %f112, %f112, %f304;
	lg2.approx.ftz.f32 	%f306, %f305;
	mul.ftz.f32 	%f307, %f306, 0f3FC00000;
	ex2.approx.ftz.f32 	%f308, %f307;
	mul.ftz.f32 	%f309, %f308, 0f3E800000;
	mul.ftz.f32 	%f423, %f303, %f309;
LBB3_78:
	cvt.rzi.ftz.s32.f32	%r787, %f414;
	cvt.rzi.ftz.s32.f32	%r788, %f413;
	add.s32 	%r789, %r2, -1;
	add.s32 	%r790, %r1, -1;
	mov.u32 	%r791, 0;
	max.s32 	%r792, %r788, %r791;
	min.s32 	%r103, %r792, %r790;
	max.s32 	%r793, %r787, %r791;
	min.s32 	%r104, %r793, %r789;
	@%p103 bra 	LBB3_80;
	bra.uni 	LBB3_79;
LBB3_80:
	// inline asm
	mov.b64 {_,%r807}, %rd286;
	// inline asm
	// inline asm
	call (%rd259), _rt_buffer_get_id_64, (%r807, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd264, [%rd259+520];
	// inline asm
	mov.b64 {_,%r811}, %rd264;
	// inline asm
	// inline asm
	call (%rd265), _rt_buffer_get_id_64, (%r811, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd271, %rd85, %rd265;
	ld.v2.u32 	{%r105, %r106}, [%rd271+528];
	cvt.rn.f32.s32	%f327, %r103;
	cvt.rn.f32.s32	%f328, %r105;
	div.approx.ftz.f32 	%f329, %f327, %f328;
	cvt.rn.f32.s32	%f330, %r104;
	cvt.rn.f32.s32	%f331, %r106;
	div.approx.ftz.f32 	%f332, %f330, %f331;
	fma.rn.ftz.f32 	%f137, %f332, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f136, %f329, 0f40000000, 0fBF800000;
	mov.f32 	%f424, 0f00000000;
	setp.gt.s32	%p113, %r68, 2;
	@%p113 bra 	LBB3_84;
	setp.eq.s32	%p117, %r68, 0;
	@%p117 bra 	LBB3_87;
	setp.eq.s32	%p118, %r68, 1;
	@%p118 bra 	LBB3_88;
	bra.uni 	LBB3_83;
LBB3_88:
	neg.ftz.f32 	%f425, %f137;
	mov.f32 	%f424, 0fBF800000;
	mov.f32 	%f426, %f136;
	bra.uni 	LBB3_93;
LBB3_79:
	// inline asm
	mov.b64 {_,%r795}, %rd286;
	// inline asm
	// inline asm
	call (%rd245), _rt_buffer_get_id_64, (%r795, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd250, [%rd245+520];
	// inline asm
	mov.b64 {_,%r799}, %rd250;
	// inline asm
	// inline asm
	call (%rd251), _rt_buffer_get_id_64, (%r799, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd257, %rd85, %rd251;
	ld.v2.u32 	{%r805, %r806}, [%rd257+528];
	cvt.rn.f32.s32	%f318, %r103;
	cvt.rn.f32.s32	%f319, %r104;
	add.ftz.f32 	%f320, %f319, 0f3F000000;
	add.ftz.f32 	%f321, %f318, 0f3F000000;
	cvt.rn.f32.s32	%f322, %r806;
	cvt.rn.f32.s32	%f323, %r805;
	div.approx.ftz.f32 	%f314, %f321, %f323;
	div.approx.ftz.f32 	%f315, %f320, %f322;
	st.u64 	[%SP+0], %rd2;
	cvt.u32.u64	%r802, %rd2;
	mov.u32 	%r803, 2;
	mov.f32 	%f316, 0f00000000;
	// inline asm
	call (%f430,%f431,%f432,%f313), _rt_texture_get_level_id, (%r802, %r803, %f314, %f315, %f316, %r791, %f316);
	// inline asm
	bra.uni 	LBB3_97;
LBB3_84:
	setp.eq.s32	%p114, %r68, 3;
	@%p114 bra 	LBB3_90;
	setp.eq.s32	%p115, %r68, 4;
	@%p115 bra 	LBB3_91;
	bra.uni 	LBB3_86;
LBB3_91:
	neg.ftz.f32 	%f425, %f137;
	mov.f32 	%f426, 0f3F800000;
	mov.f32 	%f424, %f136;
	bra.uni 	LBB3_93;
LBB3_87:
	neg.ftz.f32 	%f425, %f137;
	neg.ftz.f32 	%f426, %f136;
	mov.f32 	%f424, 0f3F800000;
	bra.uni 	LBB3_93;
LBB3_83:
	setp.eq.s32	%p119, %r68, 2;
	mov.f32 	%f425, %f424;
	mov.f32 	%f426, %f424;
	@%p119 bra 	LBB3_89;
	bra.uni 	LBB3_93;
LBB3_89:
	mov.f32 	%f425, 0f3F800000;
	mov.f32 	%f424, %f136;
	mov.f32 	%f426, %f137;
	bra.uni 	LBB3_93;
LBB3_90:
	neg.ftz.f32 	%f426, %f137;
	mov.f32 	%f425, 0fBF800000;
	mov.f32 	%f424, %f136;
	bra.uni 	LBB3_93;
LBB3_86:
	setp.eq.s32	%p116, %r68, 5;
	mov.f32 	%f425, %f424;
	mov.f32 	%f426, %f424;
	@%p116 bra 	LBB3_92;
	bra.uni 	LBB3_93;
LBB3_92:
	neg.ftz.f32 	%f424, %f136;
	neg.ftz.f32 	%f425, %f137;
	mov.f32 	%f426, 0fBF800000;
LBB3_93:
	mul.ftz.f32 	%f333, %f425, %f425;
	fma.rn.ftz.f32 	%f334, %f424, %f424, %f333;
	fma.rn.ftz.f32 	%f335, %f426, %f426, %f334;
	rsqrt.approx.ftz.f32 	%f336, %f335;
	mul.ftz.f32 	%f337, %f426, %f336;
	mul.ftz.f32 	%f338, %f424, %f336;
	mul.ftz.f32 	%f339, %f425, %f336;
	mul.ftz.f32 	%f340, %f339, %f339;
	fma.rn.ftz.f32 	%f341, %f338, %f338, %f340;
	fma.rn.ftz.f32 	%f342, %f337, %f337, %f341;
	sqrt.approx.ftz.f32 	%f159, %f342;
	rsqrt.approx.ftz.f32 	%f343, %f342;
	mul.ftz.f32 	%f162, %f337, %f343;
	mul.ftz.f32 	%f161, %f339, %f343;
	mul.ftz.f32 	%f160, %f338, %f343;
	setp.leu.ftz.f32	%p120, %f159, 0f40A00000;
	@%p120 bra 	LBB3_95;
	add.ftz.f32 	%f359, %f159, 0fC1200000;
	mul.lo.s32 	%r821, %r105, %r106;
	cvt.rn.f32.s32	%f360, %r821;
	lg2.approx.ftz.f32 	%f361, %f360;
	lg2.approx.ftz.f32 	%f362, %f359;
	mul.ftz.f32 	%f363, %f362, 0fBF317218;
	fma.rn.ftz.f32 	%f364, %f361, 0f3F317218, %f363;
	mul.ftz.f32 	%f365, %f364, 0f3F38AA3B;
	mov.f32 	%f366, 0f00000000;
	max.ftz.f32 	%f367, %f365, %f366;
	mov.f32 	%f368, 0f41800000;
	min.ftz.f32 	%f358, %f367, %f368;
	st.u64 	[%SP+32], %rd2;
	cvt.u32.u64	%r818, %rd2;
	mov.u32 	%r819, 6;
	// inline asm
	call (%f430,%f428,%f429,%f354), _rt_texture_get_level_id, (%r818, %r819, %f160, %f161, %f162, %r791, %f358);
	// inline asm
	st.v4.f32 	[%SP+16], {%f430, %f428, %f429, %f354};
	bra.uni 	LBB3_96;
LBB3_95:
	st.u64 	[%SP+64], %rd2;
	cvt.u32.u64	%r815, %rd2;
	mov.u32 	%r816, 6;
	// inline asm
	call (%f430,%f428,%f429,%f347), _rt_texture_get_base_id, (%r815, %r816, %f160, %f161, %f162, %r791);
	// inline asm
	st.v4.f32 	[%SP+48], {%f430, %f428, %f429, %f347};
LBB3_96:
	// inline asm
	mov.b64 {_,%r823}, %rd286;
	// inline asm
	// inline asm
	call (%rd273), _rt_buffer_get_id_64, (%r823, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd278, [%rd273+520];
	// inline asm
	mov.b64 {_,%r827}, %rd278;
	// inline asm
	// inline asm
	call (%rd279), _rt_buffer_get_id_64, (%r827, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd285, %rd85, %rd279;
	ld.u32 	%r830, [%rd285+512];
	setp.lt.s32	%p121, %r830, 4;
	selp.f32	%f432, %f430, %f429, %p121;
	selp.f32	%f431, %f430, %f428, %p121;
LBB3_97:
	ld.u32 	%r839, [%rd23];
	// inline asm
	mov.b64 {_,%r832}, %rd286;
	// inline asm
	// inline asm
	call (%rd287), _rt_buffer_get_id_64, (%r832, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	ld.u64 	%rd292, [%rd287+536];
	mul.wide.s32 	%rd298, %r839, 176;
	// inline asm
	mov.b64 {_,%r836}, %rd292;
	// inline asm
	// inline asm
	call (%rd293), _rt_buffer_get_id_64, (%r836, %r837, %r837, %rd296, %rd296, %rd296, %rd296);
	// inline asm
	add.s64 	%rd299, %rd298, %rd293;
	ld.f32 	%f369, [%rd299+672];
	mul.ftz.f32 	%f370, %f430, %f369;
	mov.b32 	 %r840, %f370;
	cvt.u64.u32	%rd300, %r840;
	mul.ftz.f32 	%f371, %f431, %f369;
	mov.b32 	 %r841, %f371;
	cvt.u64.u32	%rd301, %r841;
	shl.b64 	%rd302, %rd301, 32;
	or.b64  	%rd303, %rd300, %rd302;
	mul.ftz.f32 	%f372, %f432, %f369;
	neg.ftz.f32 	%f373, %f421;
	neg.ftz.f32 	%f374, %f422;
	mul.ftz.f32 	%f375, %f4, %f373;
	mul.ftz.f32 	%f376, %f5, %f373;
	mul.ftz.f32 	%f377, %f6, %f373;
	fma.rn.ftz.f32 	%f378, %f3, %f420, %f377;
	fma.rn.ftz.f32 	%f379, %f2, %f420, %f376;
	fma.rn.ftz.f32 	%f380, %f1, %f420, %f375;
	fma.rn.ftz.f32 	%f381, %f7, %f374, %f380;
	mov.b32 	 %r842, %f381;
	cvt.u64.u32	%rd304, %r842;
	fma.rn.ftz.f32 	%f382, %f8, %f374, %f379;
	mov.b32 	 %r843, %f382;
	cvt.u64.u32	%rd305, %r843;
	shl.b64 	%rd306, %rd305, 32;
	or.b64  	%rd307, %rd304, %rd306;
	fma.rn.ftz.f32 	%f383, %f9, %f374, %f378;
	st.v2.u32 	[%rd21+112], {%r859, %r860};
	st.v2.f32 	[%rd21+96], {%f52, %f53};
	st.v2.f32 	[%rd21+128], {%f401, %f402};
	st.u32 	[%rd21+56], %r791;
	st.u64 	[%rd21+48], %rd296;
	st.u32 	[%rd21+40], %r791;
	st.u64 	[%rd21+32], %rd296;
	st.f32 	[%rd21+24], %f383;
	st.u32 	[%rd21+120], %r868;
	st.u32 	[%rd21+108], %r861;
	st.u32 	[%rd21+104], %r46;
	st.u32 	[%rd21+88], %r70;
	st.u32 	[%rd21+84], %r791;
	st.u32 	[%rd21+80], %r791;
	st.f32 	[%rd21+76], %f423;
	st.u32 	[%rd21+72], %r791;
	st.u32 	[%rd21+68], %r791;
	mov.u32 	%r845, 2139095040;
	st.u32 	[%rd21+64], %r845;
	st.f32 	[%rd21+8], %f372;
	st.u32 	[%rd21+124], %r869;
	st.u64 	[%rd21+16], %rd307;
	st.u64 	[%rd21], %rd303;
	ret;
}

	// .globl	stlr_pdf
.visible .func stlr_pdf(
	.param .b64 stlr_pdf_param_0,
	.param .b64 stlr_pdf_param_1,
	.param .b64 stlr_pdf_param_2,
	.param .b64 stlr_pdf_param_3,
	.param .b64 stlr_pdf_param_4
)
{
	.reg .pred 	%p<26>;
	.reg .f32 	%f<222>;
	.reg .s32 	%r<76>;
	.reg .s64 	%rd<97>;

	ld.param.u64 	%rd9, [stlr_pdf_param_1];
	ld.param.u64 	%rd7, [stlr_pdf_param_0];
	ld.param.u64 	%rd27, [stlr_pdf_param_2];
	ld.u32 	%r24, [%rd27];
	// inline asm
	mov.b64 {_,%r12}, %rd9;
	// inline asm
	mov.u32 	%r70, 1;
	mov.u64 	%rd93, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_id_64, (%r12, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	ld.param.u64 	%rd28, [stlr_pdf_param_4];
	ld.u64 	%rd15, [%rd10+536];
	mul.wide.s32 	%rd29, %r24, 176;
	// inline asm
	mov.b64 {_,%r16}, %rd15;
	// inline asm
	// inline asm
	call (%rd16), _rt_buffer_get_id_64, (%r16, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd30, %rd16, %rd29;
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd30+528];
	ld.v4.f32 	{%f52, %f53, %f54, %f55}, [%rd30+544];
	ld.v4.f32 	{%f56, %f57, %f58, %f59}, [%rd30+560];
	mul.ftz.f32 	%f60, %f58, %f49;
	mul.ftz.f32 	%f61, %f54, %f57;
	mul.ftz.f32 	%f62, %f50, %f53;
	neg.ftz.f32 	%f63, %f62;
	fma.rn.ftz.f32 	%f64, %f49, %f54, %f63;
	neg.ftz.f32 	%f65, %f61;
	fma.rn.ftz.f32 	%f66, %f53, %f58, %f65;
	neg.ftz.f32 	%f67, %f60;
	fma.rn.ftz.f32 	%f68, %f57, %f50, %f67;
	mul.ftz.f32 	%f69, %f56, %f50;
	mul.ftz.f32 	%f70, %f48, %f54;
	mul.ftz.f32 	%f71, %f52, %f58;
	neg.ftz.f32 	%f72, %f71;
	fma.rn.ftz.f32 	%f73, %f54, %f56, %f72;
	neg.ftz.f32 	%f74, %f70;
	fma.rn.ftz.f32 	%f75, %f50, %f52, %f74;
	neg.ftz.f32 	%f76, %f69;
	fma.rn.ftz.f32 	%f77, %f58, %f48, %f76;
	mul.ftz.f32 	%f78, %f57, %f48;
	mul.ftz.f32 	%f79, %f49, %f52;
	mul.ftz.f32 	%f80, %f53, %f56;
	neg.ftz.f32 	%f81, %f80;
	fma.rn.ftz.f32 	%f82, %f52, %f57, %f81;
	neg.ftz.f32 	%f83, %f79;
	fma.rn.ftz.f32 	%f84, %f48, %f53, %f83;
	neg.ftz.f32 	%f85, %f78;
	fma.rn.ftz.f32 	%f86, %f56, %f49, %f85;
	mul.ftz.f32 	%f87, %f52, %f68;
	fma.rn.ftz.f32 	%f88, %f48, %f66, %f87;
	fma.rn.ftz.f32 	%f89, %f56, %f64, %f88;
	mov.f32 	%f221, 0f3F800000;
	div.approx.ftz.f32 	%f91, %f221, %f89;
	mul.ftz.f32 	%f92, %f91, %f66;
	mul.ftz.f32 	%f93, %f91, %f64;
	mul.ftz.f32 	%f94, %f91, %f68;
	mul.ftz.f32 	%f95, %f91, %f77;
	mul.ftz.f32 	%f96, %f91, %f75;
	mul.ftz.f32 	%f97, %f91, %f73;
	mul.ftz.f32 	%f98, %f91, %f86;
	mul.ftz.f32 	%f99, %f91, %f84;
	mul.ftz.f32 	%f100, %f91, %f82;
	ld.f32 	%f101, [%rd28+8];
	ld.f32 	%f102, [%rd28];
	ld.f32 	%f103, [%rd28+4];
	mul.ftz.f32 	%f104, %f103, %f97;
	mul.ftz.f32 	%f105, %f103, %f96;
	mul.ftz.f32 	%f106, %f103, %f95;
	fma.rn.ftz.f32 	%f107, %f102, %f94, %f106;
	fma.rn.ftz.f32 	%f108, %f102, %f93, %f105;
	fma.rn.ftz.f32 	%f109, %f102, %f92, %f104;
	fma.rn.ftz.f32 	%f4, %f101, %f100, %f109;
	fma.rn.ftz.f32 	%f7, %f101, %f99, %f108;
	fma.rn.ftz.f32 	%f5, %f101, %f98, %f107;
	neg.ftz.f32 	%f8, %f7;
	ld.u32 	%r25, [%rd30+656];
	ld.u64 	%rd21, [%rd10+520];
	cvt.s64.s32	%rd1, %r25;
	mul.wide.s32 	%rd31, %r25, 32;
	// inline asm
	mov.b64 {_,%r20}, %rd21;
	// inline asm
	// inline asm
	call (%rd22), _rt_buffer_get_id_64, (%r20, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd32, %rd31, %rd22;
	ld.u32 	%r26, [%rd32+520];
	setp.eq.s32	%p1, %r26, 1;
	@%p1 bra 	LBB4_2;
	bra.uni 	LBB4_1;
LBB4_2:
	abs.ftz.f32 	%f176, %f4;
	abs.ftz.f32 	%f12, %f5;
	setp.ge.ftz.f32	%p12, %f176, %f12;
	abs.ftz.f32 	%f13, %f7;
	setp.ge.ftz.f32	%p13, %f176, %f13;
	and.pred  	%p14, %p12, %p13;
	@!%p14 bra 	LBB4_4;
	bra.uni 	LBB4_3;
LBB4_3:
	setp.ge.ftz.f32	%p18, %f4, 0f00000000;
	neg.ftz.f32 	%f178, %f4;
	setp.ltu.ftz.f32	%p19, %f4, 0f00000000;
	selp.u32	%r74, 1, 0, %p19;
	selp.f32	%f211, %f4, %f178, %p18;
	selp.f32	%f213, %f5, %f5, %p18;
	selp.f32	%f212, %f7, %f8, %p18;
	bra.uni 	LBB4_7;
LBB4_1:
	abs.ftz.f32 	%f111, %f4;
	abs.ftz.f32 	%f112, %f5;
	max.ftz.f32 	%f113, %f111, %f112;
	min.ftz.f32 	%f114, %f111, %f112;
	div.approx.ftz.f32 	%f115, %f221, %f113;
	mul.ftz.f32 	%f116, %f114, %f115;
	mul.ftz.f32 	%f117, %f116, %f116;
	mov.f32 	%f118, 0f3D6B6D55;
	mov.f32 	%f119, 0fBC5CDD30;
	fma.rn.ftz.f32 	%f120, %f119, %f117, %f118;
	fma.rn.ftz.f32 	%f121, %f120, %f117, 0fBDF84C31;
	mov.f32 	%f122, 0f3E4854C9;
	fma.rn.ftz.f32 	%f123, %f121, %f117, %f122;
	fma.rn.ftz.f32 	%f124, %f123, %f117, 0fBEAA7E45;
	mov.f32 	%f125, 0f3F7FFFB7;
	fma.rn.ftz.f32 	%f126, %f124, %f117, %f125;
	mul.ftz.f32 	%f127, %f116, %f126;
	setp.gt.ftz.f32	%p2, %f112, %f111;
	neg.ftz.f32 	%f128, %f116;
	fma.rn.ftz.f32 	%f129, %f128, %f126, 0f3FC90FDB;
	selp.f32	%f130, %f129, %f127, %p2;
	setp.lt.ftz.f32	%p3, %f4, 0f00000000;
	mov.f32 	%f131, 0f40490FDB;
	sub.ftz.f32 	%f132, %f131, %f130;
	selp.f32	%f133, %f132, %f130, %p3;
	setp.lt.ftz.f32	%p4, %f5, 0f00000000;
	neg.ftz.f32 	%f134, %f133;
	selp.f32	%f135, %f134, %f133, %p4;
	setp.eq.ftz.f32	%p5, %f113, 0f00000000;
	selp.f32	%f136, 0f00000000, %f135, %p5;
	mul.ftz.f32 	%f217, %f136, 0f3E22F983;
	setp.lt.ftz.f32	%p6, %f7, 0f00000000;
	abs.ftz.f32 	%f137, %f7;
	neg.ftz.f32 	%f138, %f137;
	fma.rn.ftz.f32 	%f139, %f138, %f137, 0f3F800000;
	sqrt.approx.ftz.f32 	%f140, %f139;
	setp.gt.ftz.f32	%p7, %f137, 0f3F3504F3;
	selp.f32	%f141, %f140, %f137, %p7;
	selp.f32	%f142, %f137, %f140, %p7;
	abs.ftz.f32 	%f143, %f142;
	abs.ftz.f32 	%f144, %f141;
	max.ftz.f32 	%f145, %f143, %f144;
	min.ftz.f32 	%f146, %f143, %f144;
	div.approx.ftz.f32 	%f147, %f221, %f145;
	mul.ftz.f32 	%f148, %f146, %f147;
	mul.ftz.f32 	%f149, %f148, %f148;
	fma.rn.ftz.f32 	%f150, %f119, %f149, %f118;
	fma.rn.ftz.f32 	%f151, %f150, %f149, 0fBDF84C31;
	fma.rn.ftz.f32 	%f152, %f151, %f149, %f122;
	fma.rn.ftz.f32 	%f153, %f152, %f149, 0fBEAA7E45;
	fma.rn.ftz.f32 	%f154, %f153, %f149, %f125;
	mul.ftz.f32 	%f155, %f148, %f154;
	setp.gt.ftz.f32	%p8, %f144, %f143;
	neg.ftz.f32 	%f156, %f148;
	fma.rn.ftz.f32 	%f157, %f156, %f154, 0f3FC90FDB;
	selp.f32	%f158, %f157, %f155, %p8;
	setp.lt.ftz.f32	%p9, %f142, 0f00000000;
	sub.ftz.f32 	%f159, %f131, %f158;
	selp.f32	%f160, %f159, %f158, %p9;
	setp.lt.ftz.f32	%p10, %f141, 0f00000000;
	neg.ftz.f32 	%f161, %f160;
	selp.f32	%f162, %f161, %f160, %p10;
	setp.eq.ftz.f32	%p11, %f145, 0f00000000;
	selp.f32	%f163, 0f00000000, %f162, %p11;
	mov.f32 	%f164, 0f3FC90FDB;
	sub.ftz.f32 	%f165, %f164, %f163;
	selp.f32	%f166, %f165, %f163, %p7;
	neg.ftz.f32 	%f167, %f166;
	selp.f32	%f168, %f167, %f166, %p6;
	sub.ftz.f32 	%f169, %f164, %f168;
	mul.ftz.f32 	%f218, %f169, 0f3EA2F983;
	fma.rn.ftz.f32 	%f171, %f8, %f7, 0f3F800000;
	sqrt.approx.ftz.f32 	%f172, %f171;
	mul.ftz.f32 	%f173, %f172, 0f419DE9E6;
	mov.f32 	%f174, 0f3CA3D70A;
	max.ftz.f32 	%f175, %f173, %f174;
	rcp.approx.ftz.f32 	%f215, %f175;
	mov.u32 	%r74, 0;
	mov.f32 	%f216, %f221;
	bra.uni 	LBB4_10;
LBB4_4:
	setp.ltu.ftz.f32	%p15, %f12, %f13;
	@%p15 bra 	LBB4_6;
	bra.uni 	LBB4_5;
LBB4_6:
	setp.le.ftz.f32	%p17, %f7, 0f80000000;
	neg.ftz.f32 	%f177, %f4;
	selp.b32	%r74, 4, 5, %p17;
	selp.f32	%f211, %f8, %f7, %p17;
	selp.f32	%f213, %f5, %f5, %p17;
	selp.f32	%f212, %f4, %f177, %p17;
	bra.uni 	LBB4_7;
LBB4_5:
	neg.ftz.f32 	%f6, %f5;
	setp.le.ftz.f32	%p16, %f5, 0f80000000;
	selp.b32	%r74, 2, 3, %p16;
	selp.f32	%f211, %f6, %f5, %p16;
	selp.f32	%f212, %f4, %f4, %p16;
	selp.f32	%f213, %f8, %f7, %p16;
LBB4_7:
	div.approx.ftz.f32 	%f179, %f212, %f211;
	div.approx.ftz.f32 	%f180, %f213, %f211;
	add.ftz.f32 	%f181, %f180, 0f3F800000;
	add.ftz.f32 	%f182, %f179, 0f3F800000;
	mul.ftz.f32 	%f217, %f182, 0f3F000000;
	mul.ftz.f32 	%f218, %f181, 0f3F000000;
	// inline asm
	mov.b64 {_,%r28}, %rd9;
	// inline asm
	// inline asm
	call (%rd34), _rt_buffer_get_id_64, (%r28, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	ld.u64 	%rd39, [%rd34+528];
	mul.lo.s64 	%rd51, %rd1, 40;
	// inline asm
	mov.b64 {_,%r32}, %rd39;
	// inline asm
	// inline asm
	call (%rd40), _rt_buffer_get_id_64, (%r32, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd52, %rd51, %rd40;
	ld.u64 	%rd45, [%rd52+528];
	mul.wide.s32 	%rd2, %r74, 4;
	// inline asm
	mov.b64 {_,%r36}, %rd45;
	// inline asm
	// inline asm
	call (%rd46), _rt_buffer_get_id_64, (%r36, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd3, %rd46, 512;
	add.s64 	%rd53, %rd3, %rd2;
	ld.f32 	%f216, [%rd53];
	setp.lt.s32	%p20, %r74, 1;
	@%p20 bra 	LBB4_17;
	add.s64 	%rd54, %rd2, %rd3;
	ld.f32 	%f183, [%rd54+-4];
	sub.ftz.f32 	%f216, %f216, %f183;
	bra.uni 	LBB4_9;
LBB4_17:
LBB4_9:
	fma.rn.ftz.f32 	%f184, %f217, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f185, %f218, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f186, %f185, %f185, 0f3F800000;
	fma.rn.ftz.f32 	%f187, %f184, %f184, %f186;
	lg2.approx.ftz.f32 	%f188, %f187;
	mul.ftz.f32 	%f189, %f188, 0f3FC00000;
	ex2.approx.ftz.f32 	%f190, %f189;
	mul.ftz.f32 	%f215, %f190, 0f3E800000;
LBB4_10:
	// inline asm
	mov.b64 {_,%r40}, %rd9;
	// inline asm
	// inline asm
	call (%rd56), _rt_buffer_get_id_64, (%r40, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	ld.u64 	%rd61, [%rd56+528];
	mul.lo.s64 	%rd67, %rd1, 40;
	// inline asm
	mov.b64 {_,%r44}, %rd61;
	// inline asm
	// inline asm
	call (%rd62), _rt_buffer_get_id_64, (%r44, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd4, %rd62, 512;
	add.s64 	%rd68, %rd67, %rd4;
	ld.u32 	%r6, [%rd68];
	ld.u32 	%r7, [%rd68+4];
	setp.eq.s32	%p21, %r6, 0;
	setp.eq.s32	%p22, %r7, 0;
	or.pred  	%p23, %p21, %p22;
	@%p23 bra 	LBB4_16;
	cvt.rmi.ftz.f32.f32	%f193, %f218;
	cvt.rmi.ftz.f32.f32	%f194, %f217;
	mul.lo.s32 	%r56, %r6, %r74;
	sub.ftz.f32 	%f195, %f218, %f193;
	mov.f32 	%f220, 0f00000000;
	max.ftz.f32 	%f196, %f195, %f220;
	mov.f32 	%f197, 0f3F800000;
	min.ftz.f32 	%f198, %f196, %f197;
	sub.ftz.f32 	%f199, %f217, %f194;
	max.ftz.f32 	%f200, %f199, %f220;
	min.ftz.f32 	%f201, %f200, %f197;
	cvt.rn.f32.s32	%f38, %r6;
	mul.ftz.f32 	%f202, %f38, %f201;
	cvt.rzi.ftz.s32.f32	%r57, %f202;
	cvt.rn.f32.s32	%f39, %r7;
	mul.ftz.f32 	%f203, %f39, %f198;
	cvt.rzi.ftz.s32.f32	%r58, %f203;
	add.s32 	%r59, %r6, -1;
	mov.u32 	%r60, 0;
	max.s32 	%r61, %r57, %r60;
	min.s32 	%r62, %r61, %r59;
	add.s32 	%r63, %r7, -1;
	max.s32 	%r64, %r58, %r60;
	min.s32 	%r8, %r64, %r63;
	ld.u64 	%rd69, [%rd68+32];
	mad.lo.s32 	%r9, %r56, %r7, %r62;
	mul.lo.s32 	%r10, %r8, %r6;
	add.s32 	%r65, %r10, %r9;
	mul.wide.s32 	%rd83, %r65, 4;
	// inline asm
	mov.b64 {_,%r48}, %rd69;
	// inline asm
	// inline asm
	call (%rd70), _rt_buffer_get_id_64, (%r48, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd5, %rd70, 512;
	add.s64 	%rd84, %rd83, %rd5;
	ld.f32 	%f40, [%rd84];
	ld.u64 	%rd89, [%rd68+24];
	mad.lo.s32 	%r11, %r7, %r74, %r8;
	mul.wide.s32 	%rd85, %r11, 4;
	// inline asm
	mov.b64 {_,%r52}, %rd89;
	// inline asm
	// inline asm
	call (%rd76), _rt_buffer_get_id_64, (%r52, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd86, %rd85, %rd76;
	ld.f32 	%f41, [%rd86+512];
	setp.lt.s32	%p24, %r62, 1;
	mov.f32 	%f219, %f220;
	@%p24 bra 	LBB4_13;
	add.s32 	%r66, %r9, %r10;
	add.s32 	%r67, %r66, -1;
	mul.wide.s32 	%rd87, %r67, 4;
	add.s64 	%rd88, %rd87, %rd5;
	ld.f32 	%f219, [%rd88];
LBB4_13:
	setp.lt.s32	%p25, %r8, 1;
	@%p25 bra 	LBB4_15;
	add.s32 	%r72, %r11, -1;
	mul.wide.s32 	%rd95, %r72, 4;
	// inline asm
	mov.b64 {_,%r69}, %rd89;
	// inline asm
	// inline asm
	call (%rd90), _rt_buffer_get_id_64, (%r69, %r70, %r70, %rd93, %rd93, %rd93, %rd93);
	// inline asm
	add.s64 	%rd96, %rd95, %rd90;
	ld.f32 	%f220, [%rd96+512];
LBB4_15:
	sub.ftz.f32 	%f205, %f40, %f219;
	sub.ftz.f32 	%f206, %f41, %f220;
	mul.ftz.f32 	%f207, %f205, %f206;
	mul.ftz.f32 	%f208, %f38, %f207;
	mul.ftz.f32 	%f221, %f39, %f208;
LBB4_16:
	mul.ftz.f32 	%f209, %f216, %f221;
	mul.ftz.f32 	%f210, %f215, %f209;
	mov.u32 	%r73, 0;
	st.u32 	[%rd7+8], %r73;
	st.u32 	[%rd7+4], %r73;
	st.f32 	[%rd7], %f210;
	ret;
}

	// .globl	stlr_sample
.visible .func stlr_sample(
	.param .b64 stlr_sample_param_0,
	.param .b64 stlr_sample_param_1,
	.param .b64 stlr_sample_param_2,
	.param .b64 stlr_sample_param_3,
	.param .b64 stlr_sample_param_4,
	.param .b64 stlr_sample_param_5
)
{
	.local .align 16 .b8 	__local_depot5[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<168>;
	.reg .f32 	%f<552>;
	.reg .s32 	%r<1258>;
	.reg .s64 	%rd<347>;

	mov.u64 	%rd346, __local_depot5;
	cvta.local.u64 	%SP, %rd346;
	ld.param.u64 	%rd27, [stlr_sample_param_5];
	ld.param.u64 	%rd26, [stlr_sample_param_4];
	ld.param.u64 	%rd25, [stlr_sample_param_3];
	ld.param.u64 	%rd24, [stlr_sample_param_2];
	ld.param.u64 	%rd23, [stlr_sample_param_1];
	ld.param.u64 	%rd22, [stlr_sample_param_0];
	ld.u32 	%r128, [%rd24];
	// inline asm
	mov.b64 {_,%r116}, %rd23;
	// inline asm
	mov.u32 	%r127, 1;
	mov.u64 	%rd45, 0;
	// inline asm
	call (%rd29), _rt_buffer_get_id_64, (%r116, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd34, [%rd29+536];
	mul.wide.s32 	%rd46, %r128, 176;
	// inline asm
	mov.b64 {_,%r120}, %rd34;
	// inline asm
	// inline asm
	call (%rd35), _rt_buffer_get_id_64, (%r120, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd47, %rd46, %rd35;
	ld.u32 	%r129, [%rd47+656];
	ld.u64 	%rd2, [%rd47+664];
	ld.u64 	%rd40, [%rd29+528];
	cvt.s64.s32	%rd3, %r129;
	mul.wide.s32 	%rd48, %r129, 40;
	// inline asm
	mov.b64 {_,%r124}, %rd40;
	// inline asm
	// inline asm
	call (%rd41), _rt_buffer_get_id_64, (%r124, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd49, %rd48, %rd41;
	ld.u32 	%r1, [%rd49+512];
	ld.u32 	%r2, [%rd49+516];
	ld.u32 	%r130, [%rd27];
	setp.eq.s32	%p1, %r130, 1;
	@%p1 bra 	LBB5_20;
	bra.uni 	LBB5_1;
LBB5_20:
	ld.u32 	%r1233, [%rd27+36];
	cvt.rn.f32.s32	%f235, %r1233;
	rcp.approx.ftz.f32 	%f236, %f235;
	mul.ftz.f32 	%f28, %f236, 0f3F000000;
	ld.u32 	%r1232, [%rd27+32];
	cvt.rn.f32.s32	%f237, %r1232;
	mul.ftz.f32 	%f238, %f236, %f237;
	fma.rn.ftz.f32 	%f29, %f236, 0f3F000000, %f238;
	setp.gt.s32	%p14, %r1233, 1;
	selp.u32	%r417, 1, 0, %p14;
	setp.gt.s32	%p15, %r1233, 2;
	selp.b32	%r418, 2, 1, %p14;
	selp.b32	%r419, %r418, %r417, %p15;
	setp.gt.s32	%p16, %r1233, 4;
	selp.u32	%r420, 1, 0, %p16;
	setp.gt.s32	%p17, %r1233, 8;
	selp.u32	%r421, 1, 0, %p17;
	setp.gt.s32	%p18, %r1233, 16;
	selp.u32	%r422, 1, 0, %p18;
	setp.gt.s32	%p19, %r1233, 32;
	selp.u32	%r423, 1, 0, %p19;
	setp.gt.s32	%p20, %r1233, 64;
	selp.u32	%r424, 1, 0, %p20;
	setp.gt.s32	%p21, %r1233, 128;
	selp.u32	%r425, 1, 0, %p21;
	setp.gt.s32	%p22, %r1233, 256;
	selp.u32	%r426, 1, 0, %p22;
	setp.gt.s32	%p23, %r1233, 512;
	selp.u32	%r427, 1, 0, %p23;
	setp.gt.s32	%p24, %r1233, 1024;
	selp.u32	%r428, 1, 0, %p24;
	setp.gt.s32	%p25, %r1233, 2048;
	selp.u32	%r429, 1, 0, %p25;
	setp.gt.s32	%p26, %r1233, 4096;
	selp.u32	%r430, 1, 0, %p26;
	setp.gt.s32	%p27, %r1233, 8192;
	selp.u32	%r431, 1, 0, %p27;
	setp.gt.s32	%p28, %r1233, 16384;
	selp.u32	%r432, 1, 0, %p28;
	setp.gt.s32	%p29, %r1233, 32768;
	selp.u32	%r433, 1, 0, %p29;
	setp.gt.s32	%p30, %r1233, 65536;
	selp.u32	%r434, 1, 0, %p30;
	setp.gt.s32	%p31, %r1233, 131072;
	selp.u32	%r435, 1, 0, %p31;
	setp.gt.s32	%p32, %r1233, 262144;
	selp.u32	%r436, 1, 0, %p32;
	setp.gt.s32	%p33, %r1233, 524288;
	selp.u32	%r437, 1, 0, %p33;
	setp.gt.s32	%p34, %r1233, 1048576;
	selp.u32	%r438, 1, 0, %p34;
	setp.gt.s32	%p35, %r1233, 2097152;
	selp.u32	%r439, 1, 0, %p35;
	setp.gt.s32	%p36, %r1233, 4194304;
	selp.u32	%r440, 1, 0, %p36;
	setp.gt.s32	%p37, %r1233, 8388608;
	selp.u32	%r441, 1, 0, %p37;
	setp.gt.s32	%p38, %r1233, 16777216;
	selp.u32	%r442, 1, 0, %p38;
	setp.gt.s32	%p39, %r1233, 33554432;
	selp.u32	%r443, 1, 0, %p39;
	setp.gt.s32	%p40, %r1233, 67108864;
	selp.u32	%r444, 1, 0, %p40;
	setp.gt.s32	%p41, %r1233, 134217728;
	selp.u32	%r445, 1, 0, %p41;
	setp.gt.s32	%p42, %r1233, 268435456;
	selp.u32	%r446, 1, 0, %p42;
	setp.gt.s32	%p43, %r1233, 536870912;
	selp.u32	%r447, 1, 0, %p43;
	setp.gt.s32	%p44, %r1233, 1073741824;
	selp.u32	%r448, 1, 0, %p44;
	add.s32 	%r449, %r421, %r420;
	add.s32 	%r450, %r449, %r422;
	add.s32 	%r451, %r450, %r423;
	add.s32 	%r452, %r451, %r424;
	add.s32 	%r453, %r452, %r425;
	add.s32 	%r454, %r453, %r426;
	add.s32 	%r455, %r454, %r427;
	add.s32 	%r456, %r455, %r428;
	add.s32 	%r457, %r456, %r429;
	add.s32 	%r458, %r457, %r430;
	add.s32 	%r459, %r458, %r431;
	add.s32 	%r460, %r459, %r432;
	add.s32 	%r461, %r460, %r433;
	add.s32 	%r462, %r461, %r434;
	add.s32 	%r463, %r462, %r435;
	add.s32 	%r464, %r463, %r436;
	add.s32 	%r465, %r464, %r437;
	add.s32 	%r466, %r465, %r438;
	add.s32 	%r467, %r466, %r439;
	add.s32 	%r468, %r467, %r440;
	add.s32 	%r469, %r468, %r441;
	add.s32 	%r470, %r469, %r442;
	add.s32 	%r471, %r470, %r443;
	add.s32 	%r472, %r471, %r444;
	add.s32 	%r473, %r472, %r445;
	add.s32 	%r474, %r473, %r446;
	add.s32 	%r475, %r474, %r447;
	add.s32 	%r476, %r475, %r448;
	add.s32 	%r477, %r476, %r419;
	mov.u32 	%r478, 0;
	max.s32 	%r1226, %r477, %r478;
	mov.f32 	%f502, 0f00000000;
	setp.lt.s32	%p45, %r1226, 1;
	@%p45 bra 	LBB5_127;
	mov.f32 	%f500, 0f3F800000;
	mov.u32 	%r1227, %r1232;
LBB5_22:
	and.b32  	%r479, %r1227, 1;
	shr.u32 	%r1227, %r1227, 1;
	mul.ftz.f32 	%f500, %f500, 0f3F000000;
	cvt.rn.f32.s32	%f239, %r479;
	fma.rn.ftz.f32 	%f502, %f500, %f239, %f502;
	add.s32 	%r1226, %r1226, -1;
	setp.ne.s32	%p46, %r1226, 0;
	@%p46 bra 	LBB5_22;
	bra.uni 	LBB5_23;
LBB5_1:
	ld.u32 	%r5, [%rd27+16];
	setp.lt.s32	%p2, %r5, 8;
	ld.u32 	%r1225, [%rd27+20];
	@%p2 bra 	LBB5_3;
	bra.uni 	LBB5_2;
LBB5_3:
	mov.f32 	%f498, 0f00000000;
	setp.lt.s32	%p3, %r1225, 1;
	@%p3 bra 	LBB5_122;
	add.s64 	%rd1, %rd29, 512;
	and.b32  	%r256, %r5, 63;
	ld.u64 	%rd50, [%rd1];
	mul.wide.u32 	%rd56, %r256, 4;
	// inline asm
	mov.b64 {_,%r252}, %rd50;
	// inline asm
	// inline asm
	call (%rd51), _rt_buffer_get_id_64, (%r252, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd57, %rd56, %rd51;
	ld.u32 	%r8, [%rd57+512];
	cvt.rn.f32.s32	%f219, %r8;
	rcp.approx.ftz.f32 	%f2, %f219;
	mov.f32 	%f490, %f2;
	mov.u32 	%r1216, %r1225;
LBB5_5:
	setp.ne.s32	%p4, %r8, 0;
	selp.b32	%r257, %r8, %r1216, %p4;
	rem.s32 	%r258, %r1216, %r257;
	cvt.rn.f32.s32	%f220, %r258;
	fma.rn.ftz.f32 	%f498, %f490, %f220, %f498;
	mul.ftz.f32 	%f490, %f2, %f490;
	selp.b32	%r259, %r8, -2147483648, %p4;
	div.s32 	%r1216, %r1216, %r259;
	setp.gt.s32	%p5, %r1216, 0;
	@%p5 bra 	LBB5_5;
	bra.uni 	LBB5_6;
LBB5_2:
	shl.b32 	%r131, %r1225, 4;
	add.s32 	%r132, %r131, -1556008596;
	add.s32 	%r133, %r1225, -1640531527;
	xor.b32  	%r134, %r132, %r133;
	shr.u32 	%r135, %r1225, 5;
	add.s32 	%r136, %r135, -939442524;
	xor.b32  	%r137, %r134, %r136;
	add.s32 	%r138, %r137, %r5;
	shl.b32 	%r139, %r138, 4;
	add.s32 	%r140, %r139, -1383041155;
	add.s32 	%r141, %r138, -1640531527;
	xor.b32  	%r142, %r140, %r141;
	shr.u32 	%r143, %r138, 5;
	add.s32 	%r144, %r143, 2123724318;
	xor.b32  	%r145, %r142, %r144;
	add.s32 	%r146, %r145, %r1225;
	shl.b32 	%r147, %r146, 4;
	add.s32 	%r148, %r147, -1556008596;
	add.s32 	%r149, %r146, 1013904242;
	xor.b32  	%r150, %r148, %r149;
	shr.u32 	%r151, %r146, 5;
	add.s32 	%r152, %r151, -939442524;
	xor.b32  	%r153, %r150, %r152;
	add.s32 	%r154, %r153, %r138;
	shl.b32 	%r155, %r154, 4;
	add.s32 	%r156, %r155, -1383041155;
	add.s32 	%r157, %r154, 1013904242;
	xor.b32  	%r158, %r156, %r157;
	shr.u32 	%r159, %r154, 5;
	add.s32 	%r160, %r159, 2123724318;
	xor.b32  	%r161, %r158, %r160;
	add.s32 	%r162, %r161, %r146;
	shl.b32 	%r163, %r162, 4;
	add.s32 	%r164, %r163, -1556008596;
	add.s32 	%r165, %r162, -626627285;
	xor.b32  	%r166, %r164, %r165;
	shr.u32 	%r167, %r162, 5;
	add.s32 	%r168, %r167, -939442524;
	xor.b32  	%r169, %r166, %r168;
	add.s32 	%r170, %r169, %r154;
	shl.b32 	%r171, %r170, 4;
	add.s32 	%r172, %r171, -1383041155;
	add.s32 	%r173, %r170, -626627285;
	xor.b32  	%r174, %r172, %r173;
	shr.u32 	%r175, %r170, 5;
	add.s32 	%r176, %r175, 2123724318;
	xor.b32  	%r177, %r174, %r176;
	add.s32 	%r178, %r177, %r162;
	shl.b32 	%r179, %r178, 4;
	add.s32 	%r180, %r179, -1556008596;
	add.s32 	%r181, %r178, 2027808484;
	xor.b32  	%r182, %r180, %r181;
	shr.u32 	%r183, %r178, 5;
	add.s32 	%r184, %r183, -939442524;
	xor.b32  	%r185, %r182, %r184;
	add.s32 	%r186, %r185, %r170;
	shl.b32 	%r187, %r186, 4;
	add.s32 	%r188, %r187, -1383041155;
	add.s32 	%r189, %r186, 2027808484;
	xor.b32  	%r190, %r188, %r189;
	shr.u32 	%r191, %r186, 5;
	add.s32 	%r192, %r191, 2123724318;
	xor.b32  	%r193, %r190, %r192;
	add.s32 	%r194, %r193, %r178;
	shl.b32 	%r195, %r194, 4;
	add.s32 	%r196, %r195, -1556008596;
	add.s32 	%r197, %r194, 387276957;
	xor.b32  	%r198, %r196, %r197;
	shr.u32 	%r199, %r194, 5;
	add.s32 	%r200, %r199, -939442524;
	xor.b32  	%r201, %r198, %r200;
	add.s32 	%r202, %r201, %r186;
	shl.b32 	%r203, %r202, 4;
	add.s32 	%r204, %r203, -1383041155;
	add.s32 	%r205, %r202, 387276957;
	xor.b32  	%r206, %r204, %r205;
	shr.u32 	%r207, %r202, 5;
	add.s32 	%r208, %r207, 2123724318;
	xor.b32  	%r209, %r206, %r208;
	add.s32 	%r210, %r209, %r194;
	shl.b32 	%r211, %r210, 4;
	add.s32 	%r212, %r211, -1556008596;
	add.s32 	%r213, %r210, -1253254570;
	xor.b32  	%r214, %r212, %r213;
	shr.u32 	%r215, %r210, 5;
	add.s32 	%r216, %r215, -939442524;
	xor.b32  	%r217, %r214, %r216;
	add.s32 	%r218, %r217, %r202;
	shl.b32 	%r219, %r218, 4;
	add.s32 	%r220, %r219, -1383041155;
	add.s32 	%r221, %r218, -1253254570;
	xor.b32  	%r222, %r220, %r221;
	shr.u32 	%r223, %r218, 5;
	add.s32 	%r224, %r223, 2123724318;
	xor.b32  	%r225, %r222, %r224;
	add.s32 	%r226, %r225, %r210;
	shl.b32 	%r227, %r226, 4;
	add.s32 	%r228, %r227, -1556008596;
	add.s32 	%r229, %r226, 1401181199;
	xor.b32  	%r230, %r228, %r229;
	shr.u32 	%r231, %r226, 5;
	add.s32 	%r232, %r231, -939442524;
	xor.b32  	%r233, %r230, %r232;
	add.s32 	%r234, %r233, %r218;
	shl.b32 	%r235, %r234, 4;
	add.s32 	%r236, %r235, -1383041155;
	add.s32 	%r237, %r234, 1401181199;
	xor.b32  	%r238, %r236, %r237;
	shr.u32 	%r239, %r234, 5;
	add.s32 	%r240, %r239, 2123724318;
	xor.b32  	%r241, %r238, %r240;
	add.s32 	%r242, %r241, %r226;
	shl.b32 	%r243, %r242, 4;
	add.s32 	%r244, %r243, 591475052;
	add.s32 	%r245, %r242, 1908133320;
	xor.b32  	%r246, %r244, %r245;
	shr.u32 	%r247, %r242, 5;
	add.s32 	%r248, %r247, 1208041124;
	xor.b32  	%r249, %r246, %r248;
	add.s32 	%r250, %r249, %r234;
	and.b32  	%r251, %r250, 2147483647;
	cvt.rn.f32.s32	%f217, %r251;
	mul.ftz.f32 	%f498, %f217, 0f30000000;
	ld.u32 	%r1225, [%rd27+20];
	bra.uni 	LBB5_10;
LBB5_127:
LBB5_23:
	add.ftz.f32 	%f240, %f28, %f502;
	ld.v2.f32 	{%f505, %f506}, [%rd27+40];
	add.ftz.f32 	%f241, %f506, %f240;
	add.ftz.f32 	%f242, %f505, %f29;
	cvt.rmi.ftz.f32.f32	%f243, %f242;
	cvt.rmi.ftz.f32.f32	%f244, %f241;
	sub.ftz.f32 	%f245, %f241, %f244;
	sub.ftz.f32 	%f246, %f242, %f243;
	mov.f32 	%f247, 0f3727C5AC;
	max.ftz.f32 	%f248, %f246, %f247;
	mov.f32 	%f249, 0f3F7FFF58;
	min.ftz.f32 	%f498, %f248, %f249;
	max.ftz.f32 	%f250, %f245, %f247;
	min.ftz.f32 	%f499, %f250, %f249;
	ld.u32 	%r46, [%rd27+16];
	ld.u32 	%r1225, [%rd27+20];
	ld.v2.u32 	{%r1223, %r1224}, [%rd27+24];
	bra.uni 	LBB5_24;
LBB5_122:
LBB5_6:
	setp.eq.s32	%p6, %r5, 1;
	@%p6 bra 	LBB5_9;
	bra.uni 	LBB5_7;
LBB5_9:
	ld.v2.u32 	{%r1223, %r1224}, [%rd27+24];
	mul.wide.s32 	%rd58, %r1224, -2032597691;
	shr.u64 	%rd59, %rd58, 32;
	cvt.u32.u64	%r260, %rd59;
	add.s32 	%r261, %r260, %r1224;
	shr.u32 	%r262, %r261, 31;
	shr.s32 	%r263, %r261, 7;
	add.s32 	%r264, %r263, %r262;
	mul.lo.s32 	%r265, %r264, 243;
	sub.s32 	%r266, %r1224, %r265;
	cvt.rn.f32.s32	%f221, %r266;
	neg.ftz.f32 	%f222, %f221;
	fma.rn.ftz.f32 	%f498, %f498, 0f43730000, %f222;
	add.s32 	%r1221, %r5, 1;
	bra.uni 	LBB5_12;
LBB5_7:
	setp.ne.s32	%p7, %r5, 0;
	@%p7 bra 	LBB5_123;
	ld.v2.u32 	{%r1223, %r1224}, [%rd27+24];
	shr.s32 	%r267, %r1223, 31;
	shr.u32 	%r268, %r267, 24;
	add.s32 	%r269, %r1223, %r268;
	and.b32  	%r270, %r269, -256;
	sub.s32 	%r271, %r1223, %r270;
	cvt.rn.f32.s32	%f223, %r271;
	neg.ftz.f32 	%f224, %f223;
	fma.rn.ftz.f32 	%f498, %f498, 0f43800000, %f224;
	add.s32 	%r1221, %r5, 1;
	bra.uni 	LBB5_12;
LBB5_123:
LBB5_10:
	add.s32 	%r1221, %r5, 1;
	ld.v2.u32 	{%r1223, %r1224}, [%rd27+24];
	setp.lt.s32	%p8, %r1221, 8;
	@%p8 bra 	LBB5_124;
	bra.uni 	LBB5_11;
LBB5_124:
LBB5_12:
	mov.f32 	%f499, 0f00000000;
	setp.lt.s32	%p9, %r1225, 1;
	@%p9 bra 	LBB5_125;
	and.b32  	%r401, %r1221, 63;
	// inline asm
	mov.b64 {_,%r393}, %rd23;
	// inline asm
	// inline asm
	call (%rd61), _rt_buffer_get_id_64, (%r393, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd66, [%rd61+512];
	mul.wide.u32 	%rd72, %r401, 4;
	// inline asm
	mov.b64 {_,%r397}, %rd66;
	// inline asm
	// inline asm
	call (%rd67), _rt_buffer_get_id_64, (%r397, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd73, %rd72, %rd67;
	ld.u32 	%r26, [%rd73+512];
	cvt.rn.f32.s32	%f227, %r26;
	rcp.approx.ftz.f32 	%f14, %f227;
	mov.f32 	%f495, %f14;
	mov.u32 	%r1222, %r1225;
LBB5_14:
	setp.ne.s32	%p10, %r26, 0;
	selp.b32	%r402, %r26, %r1222, %p10;
	rem.s32 	%r403, %r1222, %r402;
	cvt.rn.f32.s32	%f228, %r403;
	fma.rn.ftz.f32 	%f499, %f495, %f228, %f499;
	mul.ftz.f32 	%f495, %f14, %f495;
	selp.b32	%r404, %r26, -2147483648, %p10;
	div.s32 	%r1222, %r1222, %r404;
	setp.gt.s32	%p11, %r1222, 0;
	@%p11 bra 	LBB5_14;
	bra.uni 	LBB5_15;
LBB5_11:
	shl.b32 	%r272, %r1225, 4;
	add.s32 	%r273, %r272, -1556008596;
	add.s32 	%r274, %r1225, -1640531527;
	xor.b32  	%r275, %r273, %r274;
	shr.u32 	%r276, %r1225, 5;
	add.s32 	%r277, %r276, -939442524;
	xor.b32  	%r278, %r275, %r277;
	add.s32 	%r279, %r278, %r1221;
	shl.b32 	%r280, %r279, 4;
	add.s32 	%r281, %r280, -1383041155;
	add.s32 	%r282, %r279, -1640531527;
	xor.b32  	%r283, %r281, %r282;
	shr.u32 	%r284, %r279, 5;
	add.s32 	%r285, %r284, 2123724318;
	xor.b32  	%r286, %r283, %r285;
	add.s32 	%r287, %r286, %r1225;
	shl.b32 	%r288, %r287, 4;
	add.s32 	%r289, %r288, -1556008596;
	add.s32 	%r290, %r287, 1013904242;
	xor.b32  	%r291, %r289, %r290;
	shr.u32 	%r292, %r287, 5;
	add.s32 	%r293, %r292, -939442524;
	xor.b32  	%r294, %r291, %r293;
	add.s32 	%r295, %r294, %r279;
	shl.b32 	%r296, %r295, 4;
	add.s32 	%r297, %r296, -1383041155;
	add.s32 	%r298, %r295, 1013904242;
	xor.b32  	%r299, %r297, %r298;
	shr.u32 	%r300, %r295, 5;
	add.s32 	%r301, %r300, 2123724318;
	xor.b32  	%r302, %r299, %r301;
	add.s32 	%r303, %r302, %r287;
	shl.b32 	%r304, %r303, 4;
	add.s32 	%r305, %r304, -1556008596;
	add.s32 	%r306, %r303, -626627285;
	xor.b32  	%r307, %r305, %r306;
	shr.u32 	%r308, %r303, 5;
	add.s32 	%r309, %r308, -939442524;
	xor.b32  	%r310, %r307, %r309;
	add.s32 	%r311, %r310, %r295;
	shl.b32 	%r312, %r311, 4;
	add.s32 	%r313, %r312, -1383041155;
	add.s32 	%r314, %r311, -626627285;
	xor.b32  	%r315, %r313, %r314;
	shr.u32 	%r316, %r311, 5;
	add.s32 	%r317, %r316, 2123724318;
	xor.b32  	%r318, %r315, %r317;
	add.s32 	%r319, %r318, %r303;
	shl.b32 	%r320, %r319, 4;
	add.s32 	%r321, %r320, -1556008596;
	add.s32 	%r322, %r319, 2027808484;
	xor.b32  	%r323, %r321, %r322;
	shr.u32 	%r324, %r319, 5;
	add.s32 	%r325, %r324, -939442524;
	xor.b32  	%r326, %r323, %r325;
	add.s32 	%r327, %r326, %r311;
	shl.b32 	%r328, %r327, 4;
	add.s32 	%r329, %r328, -1383041155;
	add.s32 	%r330, %r327, 2027808484;
	xor.b32  	%r331, %r329, %r330;
	shr.u32 	%r332, %r327, 5;
	add.s32 	%r333, %r332, 2123724318;
	xor.b32  	%r334, %r331, %r333;
	add.s32 	%r335, %r334, %r319;
	shl.b32 	%r336, %r335, 4;
	add.s32 	%r337, %r336, -1556008596;
	add.s32 	%r338, %r335, 387276957;
	xor.b32  	%r339, %r337, %r338;
	shr.u32 	%r340, %r335, 5;
	add.s32 	%r341, %r340, -939442524;
	xor.b32  	%r342, %r339, %r341;
	add.s32 	%r343, %r342, %r327;
	shl.b32 	%r344, %r343, 4;
	add.s32 	%r345, %r344, -1383041155;
	add.s32 	%r346, %r343, 387276957;
	xor.b32  	%r347, %r345, %r346;
	shr.u32 	%r348, %r343, 5;
	add.s32 	%r349, %r348, 2123724318;
	xor.b32  	%r350, %r347, %r349;
	add.s32 	%r351, %r350, %r335;
	shl.b32 	%r352, %r351, 4;
	add.s32 	%r353, %r352, -1556008596;
	add.s32 	%r354, %r351, -1253254570;
	xor.b32  	%r355, %r353, %r354;
	shr.u32 	%r356, %r351, 5;
	add.s32 	%r357, %r356, -939442524;
	xor.b32  	%r358, %r355, %r357;
	add.s32 	%r359, %r358, %r343;
	shl.b32 	%r360, %r359, 4;
	add.s32 	%r361, %r360, -1383041155;
	add.s32 	%r362, %r359, -1253254570;
	xor.b32  	%r363, %r361, %r362;
	shr.u32 	%r364, %r359, 5;
	add.s32 	%r365, %r364, 2123724318;
	xor.b32  	%r366, %r363, %r365;
	add.s32 	%r367, %r366, %r351;
	shl.b32 	%r368, %r367, 4;
	add.s32 	%r369, %r368, -1556008596;
	add.s32 	%r370, %r367, 1401181199;
	xor.b32  	%r371, %r369, %r370;
	shr.u32 	%r372, %r367, 5;
	add.s32 	%r373, %r372, -939442524;
	xor.b32  	%r374, %r371, %r373;
	add.s32 	%r375, %r374, %r359;
	shl.b32 	%r376, %r375, 4;
	add.s32 	%r377, %r376, -1383041155;
	add.s32 	%r378, %r375, 1401181199;
	xor.b32  	%r379, %r377, %r378;
	shr.u32 	%r380, %r375, 5;
	add.s32 	%r381, %r380, 2123724318;
	xor.b32  	%r382, %r379, %r381;
	add.s32 	%r383, %r382, %r367;
	shl.b32 	%r384, %r383, 4;
	add.s32 	%r385, %r384, 591475052;
	add.s32 	%r386, %r383, 1908133320;
	xor.b32  	%r387, %r385, %r386;
	shr.u32 	%r388, %r383, 5;
	add.s32 	%r389, %r388, 1208041124;
	xor.b32  	%r390, %r387, %r389;
	add.s32 	%r391, %r390, %r375;
	and.b32  	%r392, %r391, 2147483647;
	cvt.rn.f32.s32	%f225, %r392;
	mul.ftz.f32 	%f499, %f225, 0f30000000;
	bra.uni 	LBB5_19;
LBB5_125:
LBB5_15:
	setp.ne.s32	%p12, %r1221, 0;
	@%p12 bra 	LBB5_17;
	bra.uni 	LBB5_16;
LBB5_17:
	setp.ne.s32	%p13, %r5, 0;
	@%p13 bra 	LBB5_126;
	bra.uni 	LBB5_18;
LBB5_126:
	bra.uni 	LBB5_19;
LBB5_16:
	shr.s32 	%r412, %r1223, 31;
	shr.u32 	%r413, %r412, 24;
	add.s32 	%r414, %r1223, %r413;
	and.b32  	%r415, %r414, -256;
	sub.s32 	%r416, %r1223, %r415;
	cvt.rn.f32.s32	%f231, %r416;
	neg.ftz.f32 	%f232, %f231;
	fma.rn.ftz.f32 	%f499, %f499, 0f43800000, %f232;
	bra.uni 	LBB5_19;
LBB5_18:
	mul.wide.s32 	%rd74, %r1224, -2032597691;
	shr.u64 	%rd75, %rd74, 32;
	cvt.u32.u64	%r405, %rd75;
	add.s32 	%r406, %r405, %r1224;
	shr.u32 	%r407, %r406, 31;
	shr.s32 	%r408, %r406, 7;
	add.s32 	%r409, %r408, %r407;
	mul.lo.s32 	%r410, %r409, 243;
	sub.s32 	%r411, %r1224, %r410;
	cvt.rn.f32.s32	%f229, %r411;
	neg.ftz.f32 	%f230, %f229;
	fma.rn.ftz.f32 	%f499, %f499, 0f43730000, %f230;
LBB5_19:
	add.s32 	%r46, %r5, 2;
	ld.u32 	%r1232, [%rd27+32];
	ld.u32 	%r1233, [%rd27+36];
	ld.v2.f32 	{%f505, %f506}, [%rd27+40];
LBB5_24:
	ld.v2.f32 	{%f43, %f44}, [%rd27+8];
	ld.u32 	%r52, [%rd27];
	// inline asm
	mov.b64 {_,%r480}, %rd23;
	// inline asm
	// inline asm
	call (%rd77), _rt_buffer_get_id_64, (%r480, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd82, [%rd77+520];
	shl.b64 	%rd88, %rd3, 5;
	// inline asm
	mov.b64 {_,%r484}, %rd82;
	// inline asm
	// inline asm
	call (%rd83), _rt_buffer_get_id_64, (%r484, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd89, %rd88, %rd83;
	ld.u32 	%r53, [%rd89+520];
	setp.ne.s32	%p47, %r53, 1;
	@%p47 bra 	LBB5_25;
	setp.eq.s32	%p48, %r52, 1;
	@%p48 bra 	LBB5_37;
	bra.uni 	LBB5_27;
LBB5_37:
	cvt.rn.f32.s32	%f261, %r1233;
	rcp.approx.ftz.f32 	%f262, %f261;
	mul.ftz.f32 	%f55, %f262, 0f3F000000;
	setp.gt.s32	%p55, %r1233, 1;
	selp.u32	%r630, 1, 0, %p55;
	setp.gt.s32	%p56, %r1233, 2;
	selp.b32	%r631, 2, 1, %p55;
	selp.b32	%r632, %r631, %r630, %p56;
	setp.gt.s32	%p57, %r1233, 4;
	selp.u32	%r633, 1, 0, %p57;
	setp.gt.s32	%p58, %r1233, 8;
	selp.u32	%r634, 1, 0, %p58;
	setp.gt.s32	%p59, %r1233, 16;
	selp.u32	%r635, 1, 0, %p59;
	setp.gt.s32	%p60, %r1233, 32;
	selp.u32	%r636, 1, 0, %p60;
	setp.gt.s32	%p61, %r1233, 64;
	selp.u32	%r637, 1, 0, %p61;
	setp.gt.s32	%p62, %r1233, 128;
	selp.u32	%r638, 1, 0, %p62;
	setp.gt.s32	%p63, %r1233, 256;
	selp.u32	%r639, 1, 0, %p63;
	setp.gt.s32	%p64, %r1233, 512;
	selp.u32	%r640, 1, 0, %p64;
	setp.gt.s32	%p65, %r1233, 1024;
	selp.u32	%r641, 1, 0, %p65;
	setp.gt.s32	%p66, %r1233, 2048;
	selp.u32	%r642, 1, 0, %p66;
	setp.gt.s32	%p67, %r1233, 4096;
	selp.u32	%r643, 1, 0, %p67;
	setp.gt.s32	%p68, %r1233, 8192;
	selp.u32	%r644, 1, 0, %p68;
	setp.gt.s32	%p69, %r1233, 16384;
	selp.u32	%r645, 1, 0, %p69;
	setp.gt.s32	%p70, %r1233, 32768;
	selp.u32	%r646, 1, 0, %p70;
	setp.gt.s32	%p71, %r1233, 65536;
	selp.u32	%r647, 1, 0, %p71;
	setp.gt.s32	%p72, %r1233, 131072;
	selp.u32	%r648, 1, 0, %p72;
	setp.gt.s32	%p73, %r1233, 262144;
	selp.u32	%r649, 1, 0, %p73;
	setp.gt.s32	%p74, %r1233, 524288;
	selp.u32	%r650, 1, 0, %p74;
	setp.gt.s32	%p75, %r1233, 1048576;
	selp.u32	%r651, 1, 0, %p75;
	setp.gt.s32	%p76, %r1233, 2097152;
	selp.u32	%r652, 1, 0, %p76;
	setp.gt.s32	%p77, %r1233, 4194304;
	selp.u32	%r653, 1, 0, %p77;
	setp.gt.s32	%p78, %r1233, 8388608;
	selp.u32	%r654, 1, 0, %p78;
	setp.gt.s32	%p79, %r1233, 16777216;
	selp.u32	%r655, 1, 0, %p79;
	setp.gt.s32	%p80, %r1233, 33554432;
	selp.u32	%r656, 1, 0, %p80;
	setp.gt.s32	%p81, %r1233, 67108864;
	selp.u32	%r657, 1, 0, %p81;
	setp.gt.s32	%p82, %r1233, 134217728;
	selp.u32	%r658, 1, 0, %p82;
	setp.gt.s32	%p83, %r1233, 268435456;
	selp.u32	%r659, 1, 0, %p83;
	setp.gt.s32	%p84, %r1233, 536870912;
	selp.u32	%r660, 1, 0, %p84;
	setp.gt.s32	%p85, %r1233, 1073741824;
	selp.u32	%r661, 1, 0, %p85;
	add.s32 	%r662, %r634, %r633;
	add.s32 	%r663, %r662, %r635;
	add.s32 	%r664, %r663, %r636;
	add.s32 	%r665, %r664, %r637;
	add.s32 	%r666, %r665, %r638;
	add.s32 	%r667, %r666, %r639;
	add.s32 	%r668, %r667, %r640;
	add.s32 	%r669, %r668, %r641;
	add.s32 	%r670, %r669, %r642;
	add.s32 	%r671, %r670, %r643;
	add.s32 	%r672, %r671, %r644;
	add.s32 	%r673, %r672, %r645;
	add.s32 	%r674, %r673, %r646;
	add.s32 	%r675, %r674, %r647;
	add.s32 	%r676, %r675, %r648;
	add.s32 	%r677, %r676, %r649;
	add.s32 	%r678, %r677, %r650;
	add.s32 	%r679, %r678, %r651;
	add.s32 	%r680, %r679, %r652;
	add.s32 	%r681, %r680, %r653;
	add.s32 	%r682, %r681, %r654;
	add.s32 	%r683, %r682, %r655;
	add.s32 	%r684, %r683, %r656;
	add.s32 	%r685, %r684, %r657;
	add.s32 	%r686, %r685, %r658;
	add.s32 	%r687, %r686, %r659;
	add.s32 	%r688, %r687, %r660;
	add.s32 	%r689, %r688, %r661;
	add.s32 	%r690, %r689, %r632;
	mov.u32 	%r691, 0;
	max.s32 	%r1235, %r690, %r691;
	mov.f32 	%f513, 0f00000000;
	setp.lt.s32	%p86, %r1235, 1;
	@%p86 bra 	LBB5_130;
	mov.f32 	%f511, 0f3F800000;
	mov.u32 	%r1236, %r1232;
LBB5_39:
	and.b32  	%r692, %r1236, 1;
	shr.u32 	%r1236, %r1236, 1;
	mul.ftz.f32 	%f511, %f511, 0f3F000000;
	cvt.rn.f32.s32	%f263, %r692;
	fma.rn.ftz.f32 	%f513, %f511, %f263, %f513;
	add.s32 	%r1235, %r1235, -1;
	setp.ne.s32	%p87, %r1235, 0;
	@%p87 bra 	LBB5_39;
	bra.uni 	LBB5_40;
LBB5_25:
	mov.u32 	%r68, 0;
	bra.uni 	LBB5_46;
LBB5_27:
	setp.lt.s32	%p49, %r46, 8;
	@%p49 bra 	LBB5_29;
	bra.uni 	LBB5_28;
LBB5_29:
	mov.f32 	%f510, 0f00000000;
	setp.lt.s32	%p50, %r1225, 1;
	@%p50 bra 	LBB5_128;
	and.b32  	%r614, %r46, 63;
	ld.u64 	%rd90, [%rd77+512];
	mul.wide.u32 	%rd96, %r614, 4;
	// inline asm
	mov.b64 {_,%r610}, %rd90;
	// inline asm
	// inline asm
	call (%rd91), _rt_buffer_get_id_64, (%r610, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd97, %rd96, %rd91;
	ld.u32 	%r54, [%rd97+512];
	cvt.rn.f32.s32	%f253, %r54;
	rcp.approx.ftz.f32 	%f46, %f253;
	mov.f32 	%f507, %f46;
	mov.u32 	%r1234, %r1225;
LBB5_31:
	setp.ne.s32	%p51, %r54, 0;
	selp.b32	%r615, %r54, %r1234, %p51;
	rem.s32 	%r616, %r1234, %r615;
	cvt.rn.f32.s32	%f254, %r616;
	fma.rn.ftz.f32 	%f510, %f507, %f254, %f510;
	mul.ftz.f32 	%f507, %f46, %f507;
	selp.b32	%r617, %r54, -2147483648, %p51;
	div.s32 	%r1234, %r1234, %r617;
	setp.gt.s32	%p52, %r1234, 0;
	@%p52 bra 	LBB5_31;
	bra.uni 	LBB5_32;
LBB5_28:
	shl.b32 	%r489, %r1225, 4;
	add.s32 	%r490, %r489, -1556008596;
	add.s32 	%r491, %r1225, -1640531527;
	xor.b32  	%r492, %r490, %r491;
	shr.u32 	%r493, %r1225, 5;
	add.s32 	%r494, %r493, -939442524;
	xor.b32  	%r495, %r492, %r494;
	add.s32 	%r496, %r495, %r46;
	shl.b32 	%r497, %r496, 4;
	add.s32 	%r498, %r497, -1383041155;
	add.s32 	%r499, %r496, -1640531527;
	xor.b32  	%r500, %r498, %r499;
	shr.u32 	%r501, %r496, 5;
	add.s32 	%r502, %r501, 2123724318;
	xor.b32  	%r503, %r500, %r502;
	add.s32 	%r504, %r503, %r1225;
	shl.b32 	%r505, %r504, 4;
	add.s32 	%r506, %r505, -1556008596;
	add.s32 	%r507, %r504, 1013904242;
	xor.b32  	%r508, %r506, %r507;
	shr.u32 	%r509, %r504, 5;
	add.s32 	%r510, %r509, -939442524;
	xor.b32  	%r511, %r508, %r510;
	add.s32 	%r512, %r511, %r496;
	shl.b32 	%r513, %r512, 4;
	add.s32 	%r514, %r513, -1383041155;
	add.s32 	%r515, %r512, 1013904242;
	xor.b32  	%r516, %r514, %r515;
	shr.u32 	%r517, %r512, 5;
	add.s32 	%r518, %r517, 2123724318;
	xor.b32  	%r519, %r516, %r518;
	add.s32 	%r520, %r519, %r504;
	shl.b32 	%r521, %r520, 4;
	add.s32 	%r522, %r521, -1556008596;
	add.s32 	%r523, %r520, -626627285;
	xor.b32  	%r524, %r522, %r523;
	shr.u32 	%r525, %r520, 5;
	add.s32 	%r526, %r525, -939442524;
	xor.b32  	%r527, %r524, %r526;
	add.s32 	%r528, %r527, %r512;
	shl.b32 	%r529, %r528, 4;
	add.s32 	%r530, %r529, -1383041155;
	add.s32 	%r531, %r528, -626627285;
	xor.b32  	%r532, %r530, %r531;
	shr.u32 	%r533, %r528, 5;
	add.s32 	%r534, %r533, 2123724318;
	xor.b32  	%r535, %r532, %r534;
	add.s32 	%r536, %r535, %r520;
	shl.b32 	%r537, %r536, 4;
	add.s32 	%r538, %r537, -1556008596;
	add.s32 	%r539, %r536, 2027808484;
	xor.b32  	%r540, %r538, %r539;
	shr.u32 	%r541, %r536, 5;
	add.s32 	%r542, %r541, -939442524;
	xor.b32  	%r543, %r540, %r542;
	add.s32 	%r544, %r543, %r528;
	shl.b32 	%r545, %r544, 4;
	add.s32 	%r546, %r545, -1383041155;
	add.s32 	%r547, %r544, 2027808484;
	xor.b32  	%r548, %r546, %r547;
	shr.u32 	%r549, %r544, 5;
	add.s32 	%r550, %r549, 2123724318;
	xor.b32  	%r551, %r548, %r550;
	add.s32 	%r552, %r551, %r536;
	shl.b32 	%r553, %r552, 4;
	add.s32 	%r554, %r553, -1556008596;
	add.s32 	%r555, %r552, 387276957;
	xor.b32  	%r556, %r554, %r555;
	shr.u32 	%r557, %r552, 5;
	add.s32 	%r558, %r557, -939442524;
	xor.b32  	%r559, %r556, %r558;
	add.s32 	%r560, %r559, %r544;
	shl.b32 	%r561, %r560, 4;
	add.s32 	%r562, %r561, -1383041155;
	add.s32 	%r563, %r560, 387276957;
	xor.b32  	%r564, %r562, %r563;
	shr.u32 	%r565, %r560, 5;
	add.s32 	%r566, %r565, 2123724318;
	xor.b32  	%r567, %r564, %r566;
	add.s32 	%r568, %r567, %r552;
	shl.b32 	%r569, %r568, 4;
	add.s32 	%r570, %r569, -1556008596;
	add.s32 	%r571, %r568, -1253254570;
	xor.b32  	%r572, %r570, %r571;
	shr.u32 	%r573, %r568, 5;
	add.s32 	%r574, %r573, -939442524;
	xor.b32  	%r575, %r572, %r574;
	add.s32 	%r576, %r575, %r560;
	shl.b32 	%r577, %r576, 4;
	add.s32 	%r578, %r577, -1383041155;
	add.s32 	%r579, %r576, -1253254570;
	xor.b32  	%r580, %r578, %r579;
	shr.u32 	%r581, %r576, 5;
	add.s32 	%r582, %r581, 2123724318;
	xor.b32  	%r583, %r580, %r582;
	add.s32 	%r584, %r583, %r568;
	shl.b32 	%r585, %r584, 4;
	add.s32 	%r586, %r585, -1556008596;
	add.s32 	%r587, %r584, 1401181199;
	xor.b32  	%r588, %r586, %r587;
	shr.u32 	%r589, %r584, 5;
	add.s32 	%r590, %r589, -939442524;
	xor.b32  	%r591, %r588, %r590;
	add.s32 	%r592, %r591, %r576;
	shl.b32 	%r593, %r592, 4;
	add.s32 	%r594, %r593, -1383041155;
	add.s32 	%r595, %r592, 1401181199;
	xor.b32  	%r596, %r594, %r595;
	shr.u32 	%r597, %r592, 5;
	add.s32 	%r598, %r597, 2123724318;
	xor.b32  	%r599, %r596, %r598;
	add.s32 	%r600, %r599, %r584;
	shl.b32 	%r601, %r600, 4;
	add.s32 	%r602, %r601, 591475052;
	add.s32 	%r603, %r600, 1908133320;
	xor.b32  	%r604, %r602, %r603;
	shr.u32 	%r605, %r600, 5;
	add.s32 	%r606, %r605, 1208041124;
	xor.b32  	%r607, %r604, %r606;
	add.s32 	%r608, %r607, %r592;
	and.b32  	%r609, %r608, 2147483647;
	cvt.rn.f32.s32	%f251, %r609;
	mul.ftz.f32 	%f510, %f251, 0f30000000;
	bra.uni 	LBB5_36;
LBB5_130:
LBB5_40:
	add.ftz.f32 	%f264, %f55, %f513;
	add.ftz.f32 	%f265, %f505, %f264;
	cvt.rmi.ftz.f32.f32	%f266, %f265;
	sub.ftz.f32 	%f267, %f265, %f266;
	mov.f32 	%f268, 0f3727C5AC;
	max.ftz.f32 	%f269, %f267, %f268;
	mov.f32 	%f270, 0f3F7FFF58;
	min.ftz.f32 	%f510, %f269, %f270;
	bra.uni 	LBB5_41;
LBB5_128:
LBB5_32:
	setp.eq.s32	%p53, %r46, 1;
	@%p53 bra 	LBB5_35;
	bra.uni 	LBB5_33;
LBB5_35:
	mul.wide.s32 	%rd98, %r1224, -2032597691;
	shr.u64 	%rd99, %rd98, 32;
	cvt.u32.u64	%r618, %rd99;
	add.s32 	%r619, %r618, %r1224;
	shr.u32 	%r620, %r619, 31;
	shr.s32 	%r621, %r619, 7;
	add.s32 	%r622, %r621, %r620;
	mul.lo.s32 	%r623, %r622, 243;
	sub.s32 	%r624, %r1224, %r623;
	cvt.rn.f32.s32	%f255, %r624;
	neg.ftz.f32 	%f256, %f255;
	fma.rn.ftz.f32 	%f510, %f510, 0f43730000, %f256;
	bra.uni 	LBB5_36;
LBB5_33:
	setp.ne.s32	%p54, %r46, 0;
	@%p54 bra 	LBB5_129;
	shr.s32 	%r625, %r1223, 31;
	shr.u32 	%r626, %r625, 24;
	add.s32 	%r627, %r1223, %r626;
	and.b32  	%r628, %r627, -256;
	sub.s32 	%r629, %r1223, %r628;
	cvt.rn.f32.s32	%f257, %r629;
	neg.ftz.f32 	%f258, %f257;
	fma.rn.ftz.f32 	%f510, %f510, 0f43800000, %f258;
	bra.uni 	LBB5_36;
LBB5_129:
LBB5_36:
	add.s32 	%r46, %r46, 1;
LBB5_41:
	// inline asm
	mov.b64 {_,%r693}, %rd23;
	// inline asm
	// inline asm
	call (%rd101), _rt_buffer_get_id_64, (%r693, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd106, [%rd101+528];
	mul.lo.s64 	%rd118, %rd3, 40;
	// inline asm
	mov.b64 {_,%r697}, %rd106;
	// inline asm
	// inline asm
	call (%rd107), _rt_buffer_get_id_64, (%r697, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd119, %rd118, %rd107;
	ld.u64 	%rd5, [%rd119+528];
	// inline asm
	mov.b64 {_,%r701}, %rd5;
	// inline asm
	// inline asm
	call (%rd113), _rt_buffer_get_id_64, (%r701, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.f32 	%f271, [%rd113+512];
	setp.leu.ftz.f32	%p88, %f510, %f271;
	@%p88 bra 	LBB5_42;
	// inline asm
	mov.b64 {_,%r707}, %rd5;
	// inline asm
	// inline asm
	call (%rd121), _rt_buffer_get_id_64, (%r707, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	mov.u32 	%r1239, 0;
LBB5_44:
	add.s32 	%r1239, %r1239, 1;
	mul.wide.s32 	%rd126, %r1239, 4;
	add.s64 	%rd127, %rd126, %rd121;
	ld.f32 	%f272, [%rd127+512];
	setp.gt.ftz.f32	%p89, %f510, %f272;
	@%p89 bra 	LBB5_44;
	bra.uni 	LBB5_45;
LBB5_42:
	mov.u32 	%r1239, 0;
LBB5_45:
	mov.u32 	%r711, 5;
	min.s32 	%r68, %r711, %r1239;
LBB5_46:
	cvt.rmi.ftz.f32.f32	%f274, %f498;
	cvt.rmi.ftz.f32.f32	%f275, %f499;
	sub.ftz.f32 	%f276, %f499, %f275;
	sub.ftz.f32 	%f277, %f498, %f274;
	mov.f32 	%f516, 0f00000000;
	max.ftz.f32 	%f279, %f277, %f516;
	mov.f32 	%f519, 0f3F800000;
	min.ftz.f32 	%f517, %f279, %f519;
	max.ftz.f32 	%f280, %f276, %f516;
	min.ftz.f32 	%f518, %f280, %f519;
	setp.eq.s32	%p90, %r1, 0;
	setp.eq.s32	%p91, %r2, 0;
	or.pred  	%p92, %p90, %p91;
	@%p92 bra 	LBB5_132;
	bra.uni 	LBB5_47;
LBB5_132:
	bra.uni 	LBB5_60;
LBB5_47:
	mul.lo.s32 	%r70, %r68, %r2;
	mul.lo.s32 	%r712, %r2, %r1;
	add.s32 	%r1244, %r2, -1;
	setp.gt.s32	%p93, %r1244, 1;
	@%p93 bra 	LBB5_49;
	bra.uni 	LBB5_48;
LBB5_49:
	// inline asm
	mov.b64 {_,%r715}, %rd23;
	// inline asm
	// inline asm
	call (%rd130), _rt_buffer_get_id_64, (%r715, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd135, [%rd130+528];
	mul.lo.s64 	%rd147, %rd3, 40;
	add.s64 	%rd344, %rd147, 24;
	// inline asm
	mov.b64 {_,%r719}, %rd135;
	// inline asm
	// inline asm
	call (%rd136), _rt_buffer_get_id_64, (%r719, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd148, %rd136, %rd344;
	ld.u64 	%rd141, [%rd148+512];
	// inline asm
	mov.b64 {_,%r723}, %rd141;
	// inline asm
	// inline asm
	call (%rd142), _rt_buffer_get_id_64, (%r723, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	mov.u32 	%r1245, 0;
LBB5_50:
	add.s32 	%r727, %r1245, %r1244;
	shr.u32 	%r728, %r727, 31;
	add.s32 	%r729, %r727, %r728;
	shr.s32 	%r730, %r729, 1;
	add.s32 	%r731, %r730, %r70;
	mul.wide.s32 	%rd149, %r731, 4;
	add.s64 	%rd150, %rd149, %rd142;
	ld.f32 	%f281, [%rd150+512];
	setp.le.ftz.f32	%p94, %f518, %f281;
	selp.b32	%r1244, %r730, %r1244, %p94;
	selp.b32	%r1245, %r1245, %r730, %p94;
	sub.s32 	%r732, %r1244, %r1245;
	setp.gt.s32	%p95, %r732, 1;
	@%p95 bra 	LBB5_50;
	bra.uni 	LBB5_51;
LBB5_48:
	mul.lo.s64 	%rd128, %rd3, 40;
	add.s64 	%rd344, %rd128, 24;
	mov.u32 	%r1245, 0;
LBB5_51:
	mul.lo.s32 	%r71, %r712, %r68;
	// inline asm
	mov.b64 {_,%r733}, %rd23;
	// inline asm
	// inline asm
	call (%rd152), _rt_buffer_get_id_64, (%r733, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd157, [%rd152+528];
	// inline asm
	mov.b64 {_,%r737}, %rd157;
	// inline asm
	// inline asm
	call (%rd158), _rt_buffer_get_id_64, (%r737, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd12, %rd158, 512;
	add.s64 	%rd169, %rd12, %rd344;
	ld.u64 	%rd215, [%rd169];
	add.s32 	%r745, %r1245, %r70;
	mul.wide.s32 	%rd170, %r745, 4;
	// inline asm
	mov.b64 {_,%r741}, %rd215;
	// inline asm
	// inline asm
	call (%rd164), _rt_buffer_get_id_64, (%r741, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd171, %rd170, %rd164;
	ld.f32 	%f282, [%rd171+512];
	setp.lt.ftz.f32	%p96, %f282, %f518;
	selp.b32	%r79, %r1244, %r1245, %p96;
	add.s32 	%r1246, %r1, -1;
	setp.gt.s32	%p97, %r1246, 1;
	mul.lo.s64 	%rd172, %rd3, 40;
	add.s64 	%rd345, %rd172, 32;
	@%p97 bra 	LBB5_53;
	bra.uni 	LBB5_52;
LBB5_53:
	add.s64 	%rd179, %rd12, %rd345;
	ld.u64 	%rd173, [%rd179];
	mul.lo.s32 	%r1249, %r79, %r1;
	add.s32 	%r1248, %r1249, %r71;
	// inline asm
	mov.b64 {_,%r748}, %rd173;
	// inline asm
	// inline asm
	call (%rd174), _rt_buffer_get_id_64, (%r748, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	mov.u32 	%r1251, 0;
LBB5_54:
	add.s32 	%r752, %r1251, %r1246;
	shr.u32 	%r753, %r752, 31;
	add.s32 	%r754, %r752, %r753;
	shr.s32 	%r755, %r754, 1;
	add.s32 	%r756, %r1248, %r755;
	mul.wide.s32 	%rd180, %r756, 4;
	add.s64 	%rd181, %rd180, %rd174;
	ld.f32 	%f283, [%rd181+512];
	setp.le.ftz.f32	%p98, %f517, %f283;
	selp.b32	%r1246, %r755, %r1246, %p98;
	selp.b32	%r1251, %r1251, %r755, %p98;
	sub.s32 	%r757, %r1246, %r1251;
	setp.gt.s32	%p99, %r757, 1;
	@%p99 bra 	LBB5_54;
	bra.uni 	LBB5_55;
LBB5_52:
	mul.lo.s32 	%r1249, %r79, %r1;
	add.s32 	%r1248, %r1249, %r71;
	mov.u32 	%r1251, 0;
LBB5_55:
	// inline asm
	mov.b64 {_,%r758}, %rd23;
	// inline asm
	// inline asm
	call (%rd183), _rt_buffer_get_id_64, (%r758, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd188, [%rd183+528];
	// inline asm
	mov.b64 {_,%r762}, %rd188;
	// inline asm
	// inline asm
	call (%rd189), _rt_buffer_get_id_64, (%r762, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd206, %rd189, %rd345;
	ld.u64 	%rd194, [%rd206+512];
	add.s32 	%r774, %r1248, %r1251;
	mul.wide.s32 	%rd207, %r774, 4;
	// inline asm
	mov.b64 {_,%r766}, %rd194;
	// inline asm
	// inline asm
	call (%rd195), _rt_buffer_get_id_64, (%r766, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd19, %rd195, 512;
	add.s64 	%rd208, %rd207, %rd19;
	ld.f32 	%f285, [%rd208];
	setp.lt.ftz.f32	%p100, %f285, %f518;
	selp.b32	%r93, %r1246, %r1251, %p100;
	add.s32 	%r94, %r93, %r71;
	add.s32 	%r775, %r94, %r1249;
	mul.wide.s32 	%rd209, %r775, 4;
	add.s64 	%rd210, %rd209, %rd19;
	ld.f32 	%f67, [%rd210];
	add.s32 	%r95, %r79, %r70;
	mul.wide.s32 	%rd211, %r95, 4;
	// inline asm
	mov.b64 {_,%r770}, %rd215;
	// inline asm
	// inline asm
	call (%rd201), _rt_buffer_get_id_64, (%r770, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd212, %rd211, %rd201;
	ld.f32 	%f68, [%rd212+512];
	setp.lt.s32	%p101, %r93, 1;
	mov.f32 	%f515, %f516;
	@%p101 bra 	LBB5_57;
	add.s32 	%r776, %r1249, %r94;
	add.s32 	%r777, %r776, -1;
	mul.wide.s32 	%rd213, %r777, 4;
	add.s64 	%rd214, %rd213, %rd19;
	ld.f32 	%f515, [%rd214];
LBB5_57:
	setp.lt.s32	%p102, %r79, 1;
	@%p102 bra 	LBB5_59;
	add.s32 	%r782, %r95, -1;
	mul.wide.s32 	%rd221, %r782, 4;
	// inline asm
	mov.b64 {_,%r779}, %rd215;
	// inline asm
	// inline asm
	call (%rd216), _rt_buffer_get_id_64, (%r779, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd222, %rd221, %rd216;
	ld.f32 	%f516, [%rd222+512];
LBB5_59:
	sub.ftz.f32 	%f287, %f67, %f515;
	sub.ftz.f32 	%f288, %f68, %f516;
	sub.ftz.f32 	%f289, %f518, %f516;
	sub.ftz.f32 	%f290, %f517, %f515;
	div.approx.ftz.f32 	%f291, %f290, %f287;
	div.approx.ftz.f32 	%f292, %f289, %f288;
	add.ftz.f32 	%f293, %f292, 0fBF000000;
	add.ftz.f32 	%f294, %f291, 0fBF000000;
	cvt.rmi.ftz.f32.f32	%f295, %f294;
	cvt.rmi.ftz.f32.f32	%f296, %f293;
	sub.ftz.f32 	%f297, %f293, %f296;
	sub.ftz.f32 	%f298, %f294, %f295;
	mov.f32 	%f299, 0f3A83126F;
	max.ftz.f32 	%f300, %f298, %f299;
	mov.f32 	%f301, 0f3F7FBE77;
	min.ftz.f32 	%f302, %f300, %f301;
	max.ftz.f32 	%f303, %f297, %f299;
	min.ftz.f32 	%f304, %f303, %f301;
	cvt.rn.f32.s32	%f305, %r93;
	cvt.rn.f32.s32	%f306, %r79;
	add.ftz.f32 	%f517, %f305, %f302;
	add.ftz.f32 	%f518, %f306, %f304;
	mul.ftz.f32 	%f307, %f287, %f288;
	cvt.rn.f32.s32	%f308, %r1;
	mul.ftz.f32 	%f309, %f308, %f307;
	cvt.rn.f32.s32	%f310, %r2;
	mul.ftz.f32 	%f519, %f310, %f309;
LBB5_60:
	setp.eq.s32	%p103, %r53, 1;
	add.ftz.f32 	%f311, %f518, 0f3F000000;
	add.ftz.f32 	%f312, %f517, 0f3F000000;
	cvt.rn.f32.s32	%f313, %r2;
	cvt.rn.f32.s32	%f314, %r1;
	div.approx.ftz.f32 	%f79, %f312, %f314;
	div.approx.ftz.f32 	%f80, %f311, %f313;
	@%p103 bra 	LBB5_62;
	bra.uni 	LBB5_61;
LBB5_62:
	fma.rn.ftz.f32 	%f99, %f79, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f95, %f80, 0f40000000, 0fBF800000;
	mov.f32 	%f520, 0f00000000;
	setp.gt.s32	%p104, %r68, 2;
	@%p104 bra 	LBB5_66;
	setp.eq.s32	%p108, %r68, 0;
	@%p108 bra 	LBB5_69;
	setp.eq.s32	%p109, %r68, 1;
	@%p109 bra 	LBB5_70;
	bra.uni 	LBB5_65;
LBB5_70:
	neg.ftz.f32 	%f521, %f95;
	mov.f32 	%f520, 0fBF800000;
	mov.f32 	%f522, %f99;
	bra.uni 	LBB5_75;
LBB5_61:
	mul.ftz.f32 	%f315, %f79, 0fC0C90FDB;
	mul.ftz.f32 	%f316, %f80, 0f40490FDB;
	cos.approx.ftz.f32 	%f317, %f316;
	sin.approx.ftz.f32 	%f318, %f316;
	cos.approx.ftz.f32 	%f319, %f315;
	sin.approx.ftz.f32 	%f320, %f315;
	mul.ftz.f32 	%f524, %f318, %f319;
	mul.ftz.f32 	%f525, %f318, %f320;
	neg.ftz.f32 	%f526, %f317;
	fma.rn.ftz.f32 	%f321, %f526, %f317, 0f3F800000;
	sqrt.approx.ftz.f32 	%f322, %f321;
	mul.ftz.f32 	%f323, %f322, 0f419DE9E6;
	mov.f32 	%f324, 0f3CA3D70A;
	max.ftz.f32 	%f325, %f323, %f324;
	div.approx.ftz.f32 	%f527, %f519, %f325;
	bra.uni 	LBB5_78;
LBB5_66:
	setp.eq.s32	%p105, %r68, 3;
	@%p105 bra 	LBB5_72;
	setp.eq.s32	%p106, %r68, 4;
	@%p106 bra 	LBB5_73;
	bra.uni 	LBB5_68;
LBB5_73:
	neg.ftz.f32 	%f521, %f95;
	mov.f32 	%f522, 0f3F800000;
	mov.f32 	%f520, %f99;
	bra.uni 	LBB5_75;
LBB5_69:
	neg.ftz.f32 	%f521, %f95;
	neg.ftz.f32 	%f522, %f99;
	mov.f32 	%f520, 0f3F800000;
	bra.uni 	LBB5_75;
LBB5_65:
	setp.eq.s32	%p110, %r68, 2;
	mov.f32 	%f521, %f520;
	mov.f32 	%f522, %f520;
	@%p110 bra 	LBB5_71;
	bra.uni 	LBB5_75;
LBB5_71:
	mov.f32 	%f521, 0f3F800000;
	mov.f32 	%f520, %f99;
	mov.f32 	%f522, %f95;
	bra.uni 	LBB5_75;
LBB5_72:
	neg.ftz.f32 	%f522, %f95;
	mov.f32 	%f521, 0fBF800000;
	mov.f32 	%f520, %f99;
	bra.uni 	LBB5_75;
LBB5_68:
	setp.eq.s32	%p107, %r68, 5;
	mov.f32 	%f521, %f520;
	mov.f32 	%f522, %f520;
	@%p107 bra 	LBB5_74;
	bra.uni 	LBB5_75;
LBB5_74:
	neg.ftz.f32 	%f520, %f99;
	neg.ftz.f32 	%f521, %f95;
	mov.f32 	%f522, 0fBF800000;
LBB5_75:
	mul.ftz.f32 	%f329, %f521, %f521;
	fma.rn.ftz.f32 	%f330, %f520, %f520, %f329;
	fma.rn.ftz.f32 	%f331, %f522, %f522, %f330;
	rsqrt.approx.ftz.f32 	%f332, %f331;
	// inline asm
	mov.b64 {_,%r783}, %rd23;
	// inline asm
	// inline asm
	call (%rd224), _rt_buffer_get_id_64, (%r783, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd229, [%rd224+528];
	mul.lo.s64 	%rd241, %rd3, 40;
	// inline asm
	mov.b64 {_,%r787}, %rd229;
	// inline asm
	// inline asm
	call (%rd230), _rt_buffer_get_id_64, (%r787, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd242, %rd241, %rd230;
	ld.u64 	%rd235, [%rd242+528];
	mul.wide.s32 	%rd243, %r68, 4;
	// inline asm
	mov.b64 {_,%r791}, %rd235;
	// inline asm
	// inline asm
	call (%rd236), _rt_buffer_get_id_64, (%r791, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd20, %rd236, 512;
	add.s64 	%rd244, %rd243, %rd20;
	ld.f32 	%f523, [%rd244];
	setp.lt.s32	%p111, %r68, 1;
	@%p111 bra 	LBB5_133;
	add.s32 	%r795, %r68, -1;
	mul.wide.s32 	%rd245, %r795, 4;
	add.s64 	%rd246, %rd245, %rd20;
	ld.f32 	%f333, [%rd246];
	sub.ftz.f32 	%f523, %f523, %f333;
	bra.uni 	LBB5_77;
LBB5_133:
LBB5_77:
	mul.ftz.f32 	%f526, %f522, %f332;
	mul.ftz.f32 	%f525, %f521, %f332;
	mul.ftz.f32 	%f524, %f520, %f332;
	mul.ftz.f32 	%f334, %f519, %f523;
	fma.rn.ftz.f32 	%f335, %f95, %f95, 0f3F800000;
	fma.rn.ftz.f32 	%f336, %f99, %f99, %f335;
	lg2.approx.ftz.f32 	%f337, %f336;
	mul.ftz.f32 	%f338, %f337, 0f3FC00000;
	ex2.approx.ftz.f32 	%f339, %f338;
	mul.ftz.f32 	%f340, %f339, 0f3E800000;
	mul.ftz.f32 	%f527, %f334, %f340;
LBB5_78:
	cvt.rzi.ftz.s32.f32	%r796, %f518;
	cvt.rzi.ftz.s32.f32	%r797, %f517;
	add.s32 	%r798, %r2, -1;
	add.s32 	%r799, %r1, -1;
	mov.u32 	%r800, 0;
	max.s32 	%r801, %r797, %r800;
	min.s32 	%r96, %r801, %r799;
	max.s32 	%r802, %r796, %r800;
	min.s32 	%r97, %r802, %r798;
	@%p103 bra 	LBB5_80;
	bra.uni 	LBB5_79;
LBB5_80:
	// inline asm
	mov.b64 {_,%r816}, %rd23;
	// inline asm
	// inline asm
	call (%rd262), _rt_buffer_get_id_64, (%r816, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd267, [%rd262+520];
	// inline asm
	mov.b64 {_,%r820}, %rd267;
	// inline asm
	// inline asm
	call (%rd268), _rt_buffer_get_id_64, (%r820, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd274, %rd88, %rd268;
	ld.v2.u32 	{%r98, %r99}, [%rd274+528];
	cvt.rn.f32.s32	%f358, %r96;
	cvt.rn.f32.s32	%f359, %r98;
	div.approx.ftz.f32 	%f360, %f358, %f359;
	cvt.rn.f32.s32	%f361, %r97;
	cvt.rn.f32.s32	%f362, %r99;
	div.approx.ftz.f32 	%f363, %f361, %f362;
	fma.rn.ftz.f32 	%f124, %f363, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f123, %f360, 0f40000000, 0fBF800000;
	mov.f32 	%f528, 0f00000000;
	setp.gt.s32	%p113, %r68, 2;
	@%p113 bra 	LBB5_84;
	setp.eq.s32	%p117, %r68, 0;
	@%p117 bra 	LBB5_87;
	setp.eq.s32	%p118, %r68, 1;
	@%p118 bra 	LBB5_88;
	bra.uni 	LBB5_83;
LBB5_88:
	neg.ftz.f32 	%f529, %f124;
	mov.f32 	%f528, 0fBF800000;
	mov.f32 	%f530, %f123;
	bra.uni 	LBB5_93;
LBB5_79:
	// inline asm
	mov.b64 {_,%r804}, %rd23;
	// inline asm
	// inline asm
	call (%rd248), _rt_buffer_get_id_64, (%r804, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd253, [%rd248+520];
	// inline asm
	mov.b64 {_,%r808}, %rd253;
	// inline asm
	// inline asm
	call (%rd254), _rt_buffer_get_id_64, (%r808, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd260, %rd88, %rd254;
	ld.v2.u32 	{%r814, %r815}, [%rd260+528];
	cvt.rn.f32.s32	%f349, %r96;
	cvt.rn.f32.s32	%f350, %r97;
	add.ftz.f32 	%f351, %f350, 0f3F000000;
	add.ftz.f32 	%f352, %f349, 0f3F000000;
	cvt.rn.f32.s32	%f353, %r815;
	cvt.rn.f32.s32	%f354, %r814;
	div.approx.ftz.f32 	%f345, %f352, %f354;
	div.approx.ftz.f32 	%f346, %f351, %f353;
	st.u64 	[%SP+0], %rd2;
	cvt.u32.u64	%r811, %rd2;
	mov.u32 	%r812, 2;
	mov.f32 	%f347, 0f00000000;
	// inline asm
	call (%f534,%f535,%f536,%f344), _rt_texture_get_level_id, (%r811, %r812, %f345, %f346, %f347, %r800, %f347);
	// inline asm
	bra.uni 	LBB5_97;
LBB5_84:
	setp.eq.s32	%p114, %r68, 3;
	@%p114 bra 	LBB5_90;
	setp.eq.s32	%p115, %r68, 4;
	@%p115 bra 	LBB5_91;
	bra.uni 	LBB5_86;
LBB5_91:
	neg.ftz.f32 	%f529, %f124;
	mov.f32 	%f530, 0f3F800000;
	mov.f32 	%f528, %f123;
	bra.uni 	LBB5_93;
LBB5_87:
	neg.ftz.f32 	%f529, %f124;
	neg.ftz.f32 	%f530, %f123;
	mov.f32 	%f528, 0f3F800000;
	bra.uni 	LBB5_93;
LBB5_83:
	setp.eq.s32	%p119, %r68, 2;
	mov.f32 	%f529, %f528;
	mov.f32 	%f530, %f528;
	@%p119 bra 	LBB5_89;
	bra.uni 	LBB5_93;
LBB5_89:
	mov.f32 	%f529, 0f3F800000;
	mov.f32 	%f528, %f123;
	mov.f32 	%f530, %f124;
	bra.uni 	LBB5_93;
LBB5_90:
	neg.ftz.f32 	%f530, %f124;
	mov.f32 	%f529, 0fBF800000;
	mov.f32 	%f528, %f123;
	bra.uni 	LBB5_93;
LBB5_86:
	setp.eq.s32	%p116, %r68, 5;
	mov.f32 	%f529, %f528;
	mov.f32 	%f530, %f528;
	@%p116 bra 	LBB5_92;
	bra.uni 	LBB5_93;
LBB5_92:
	neg.ftz.f32 	%f528, %f123;
	neg.ftz.f32 	%f529, %f124;
	mov.f32 	%f530, 0fBF800000;
LBB5_93:
	mul.ftz.f32 	%f364, %f529, %f529;
	fma.rn.ftz.f32 	%f365, %f528, %f528, %f364;
	fma.rn.ftz.f32 	%f366, %f530, %f530, %f365;
	rsqrt.approx.ftz.f32 	%f367, %f366;
	mul.ftz.f32 	%f368, %f530, %f367;
	mul.ftz.f32 	%f369, %f528, %f367;
	mul.ftz.f32 	%f370, %f529, %f367;
	mul.ftz.f32 	%f371, %f370, %f370;
	fma.rn.ftz.f32 	%f372, %f369, %f369, %f371;
	fma.rn.ftz.f32 	%f373, %f368, %f368, %f372;
	sqrt.approx.ftz.f32 	%f146, %f373;
	rsqrt.approx.ftz.f32 	%f374, %f373;
	mul.ftz.f32 	%f149, %f368, %f374;
	mul.ftz.f32 	%f148, %f370, %f374;
	mul.ftz.f32 	%f147, %f369, %f374;
	setp.leu.ftz.f32	%p120, %f146, 0f40A00000;
	@%p120 bra 	LBB5_95;
	add.ftz.f32 	%f390, %f146, 0fC1200000;
	mul.lo.s32 	%r830, %r98, %r99;
	cvt.rn.f32.s32	%f391, %r830;
	lg2.approx.ftz.f32 	%f392, %f391;
	lg2.approx.ftz.f32 	%f393, %f390;
	mul.ftz.f32 	%f394, %f393, 0fBF317218;
	fma.rn.ftz.f32 	%f395, %f392, 0f3F317218, %f394;
	mul.ftz.f32 	%f396, %f395, 0f3F38AA3B;
	mov.f32 	%f397, 0f00000000;
	max.ftz.f32 	%f398, %f396, %f397;
	mov.f32 	%f399, 0f41800000;
	min.ftz.f32 	%f389, %f398, %f399;
	st.u64 	[%SP+32], %rd2;
	cvt.u32.u64	%r827, %rd2;
	mov.u32 	%r828, 6;
	// inline asm
	call (%f534,%f532,%f533,%f385), _rt_texture_get_level_id, (%r827, %r828, %f147, %f148, %f149, %r800, %f389);
	// inline asm
	st.v4.f32 	[%SP+16], {%f534, %f532, %f533, %f385};
	bra.uni 	LBB5_96;
LBB5_95:
	st.u64 	[%SP+64], %rd2;
	cvt.u32.u64	%r824, %rd2;
	mov.u32 	%r825, 6;
	// inline asm
	call (%f534,%f532,%f533,%f378), _rt_texture_get_base_id, (%r824, %r825, %f147, %f148, %f149, %r800);
	// inline asm
	st.v4.f32 	[%SP+48], {%f534, %f532, %f533, %f378};
LBB5_96:
	// inline asm
	mov.b64 {_,%r832}, %rd23;
	// inline asm
	// inline asm
	call (%rd276), _rt_buffer_get_id_64, (%r832, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd281, [%rd276+520];
	// inline asm
	mov.b64 {_,%r836}, %rd281;
	// inline asm
	// inline asm
	call (%rd282), _rt_buffer_get_id_64, (%r836, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd288, %rd88, %rd282;
	ld.u32 	%r839, [%rd288+512];
	setp.lt.s32	%p121, %r839, 4;
	selp.f32	%f536, %f534, %f533, %p121;
	selp.f32	%f535, %f534, %f532, %p121;
LBB5_97:
	ld.u32 	%r848, [%rd24];
	// inline asm
	mov.b64 {_,%r840}, %rd23;
	// inline asm
	// inline asm
	call (%rd290), _rt_buffer_get_id_64, (%r840, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd295, [%rd290+536];
	mul.wide.s32 	%rd301, %r848, 176;
	// inline asm
	mov.b64 {_,%r844}, %rd295;
	// inline asm
	// inline asm
	call (%rd296), _rt_buffer_get_id_64, (%r844, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd302, %rd301, %rd296;
	ld.f32 	%f400, [%rd302+672];
	mul.ftz.f32 	%f172, %f536, %f400;
	mul.ftz.f32 	%f171, %f535, %f400;
	mul.ftz.f32 	%f170, %f534, %f400;
	neg.ftz.f32 	%f179, %f525;
	neg.ftz.f32 	%f180, %f526;
	setp.eq.s32	%p122, %r52, 1;
	@%p122 bra 	LBB5_117;
	bra.uni 	LBB5_98;
LBB5_117:
	cvt.rn.f32.s32	%f419, %r1233;
	rcp.approx.ftz.f32 	%f420, %f419;
	mul.ftz.f32 	%f206, %f420, 0f3F000000;
	cvt.rn.f32.s32	%f421, %r1232;
	fma.rn.ftz.f32 	%f207, %f421, %f420, %f206;
	setp.gt.s32	%p135, %r1233, 1;
	selp.u32	%r1135, 1, 0, %p135;
	setp.gt.s32	%p136, %r1233, 2;
	selp.b32	%r1136, 2, 1, %p135;
	selp.b32	%r1137, %r1136, %r1135, %p136;
	setp.gt.s32	%p137, %r1233, 4;
	selp.u32	%r1138, 1, 0, %p137;
	setp.gt.s32	%p138, %r1233, 8;
	selp.u32	%r1139, 1, 0, %p138;
	setp.gt.s32	%p139, %r1233, 16;
	selp.u32	%r1140, 1, 0, %p139;
	setp.gt.s32	%p140, %r1233, 32;
	selp.u32	%r1141, 1, 0, %p140;
	setp.gt.s32	%p141, %r1233, 64;
	selp.u32	%r1142, 1, 0, %p141;
	setp.gt.s32	%p142, %r1233, 128;
	selp.u32	%r1143, 1, 0, %p142;
	setp.gt.s32	%p143, %r1233, 256;
	selp.u32	%r1144, 1, 0, %p143;
	setp.gt.s32	%p144, %r1233, 512;
	selp.u32	%r1145, 1, 0, %p144;
	setp.gt.s32	%p145, %r1233, 1024;
	selp.u32	%r1146, 1, 0, %p145;
	setp.gt.s32	%p146, %r1233, 2048;
	selp.u32	%r1147, 1, 0, %p146;
	setp.gt.s32	%p147, %r1233, 4096;
	selp.u32	%r1148, 1, 0, %p147;
	setp.gt.s32	%p148, %r1233, 8192;
	selp.u32	%r1149, 1, 0, %p148;
	setp.gt.s32	%p149, %r1233, 16384;
	selp.u32	%r1150, 1, 0, %p149;
	setp.gt.s32	%p150, %r1233, 32768;
	selp.u32	%r1151, 1, 0, %p150;
	setp.gt.s32	%p151, %r1233, 65536;
	selp.u32	%r1152, 1, 0, %p151;
	setp.gt.s32	%p152, %r1233, 131072;
	selp.u32	%r1153, 1, 0, %p152;
	setp.gt.s32	%p153, %r1233, 262144;
	selp.u32	%r1154, 1, 0, %p153;
	setp.gt.s32	%p154, %r1233, 524288;
	selp.u32	%r1155, 1, 0, %p154;
	setp.gt.s32	%p155, %r1233, 1048576;
	selp.u32	%r1156, 1, 0, %p155;
	setp.gt.s32	%p156, %r1233, 2097152;
	selp.u32	%r1157, 1, 0, %p156;
	setp.gt.s32	%p157, %r1233, 4194304;
	selp.u32	%r1158, 1, 0, %p157;
	setp.gt.s32	%p158, %r1233, 8388608;
	selp.u32	%r1159, 1, 0, %p158;
	setp.gt.s32	%p159, %r1233, 16777216;
	selp.u32	%r1160, 1, 0, %p159;
	setp.gt.s32	%p160, %r1233, 33554432;
	selp.u32	%r1161, 1, 0, %p160;
	setp.gt.s32	%p161, %r1233, 67108864;
	selp.u32	%r1162, 1, 0, %p161;
	setp.gt.s32	%p162, %r1233, 134217728;
	selp.u32	%r1163, 1, 0, %p162;
	setp.gt.s32	%p163, %r1233, 268435456;
	selp.u32	%r1164, 1, 0, %p163;
	setp.gt.s32	%p164, %r1233, 536870912;
	selp.u32	%r1165, 1, 0, %p164;
	setp.gt.s32	%p165, %r1233, 1073741824;
	selp.u32	%r1166, 1, 0, %p165;
	add.s32 	%r1167, %r1139, %r1138;
	add.s32 	%r1168, %r1167, %r1140;
	add.s32 	%r1169, %r1168, %r1141;
	add.s32 	%r1170, %r1169, %r1142;
	add.s32 	%r1171, %r1170, %r1143;
	add.s32 	%r1172, %r1171, %r1144;
	add.s32 	%r1173, %r1172, %r1145;
	add.s32 	%r1174, %r1173, %r1146;
	add.s32 	%r1175, %r1174, %r1147;
	add.s32 	%r1176, %r1175, %r1148;
	add.s32 	%r1177, %r1176, %r1149;
	add.s32 	%r1178, %r1177, %r1150;
	add.s32 	%r1179, %r1178, %r1151;
	add.s32 	%r1180, %r1179, %r1152;
	add.s32 	%r1181, %r1180, %r1153;
	add.s32 	%r1182, %r1181, %r1154;
	add.s32 	%r1183, %r1182, %r1155;
	add.s32 	%r1184, %r1183, %r1156;
	add.s32 	%r1185, %r1184, %r1157;
	add.s32 	%r1186, %r1185, %r1158;
	add.s32 	%r1187, %r1186, %r1159;
	add.s32 	%r1188, %r1187, %r1160;
	add.s32 	%r1189, %r1188, %r1161;
	add.s32 	%r1190, %r1189, %r1162;
	add.s32 	%r1191, %r1190, %r1163;
	add.s32 	%r1192, %r1191, %r1164;
	add.s32 	%r1193, %r1192, %r1165;
	add.s32 	%r1194, %r1193, %r1166;
	add.s32 	%r1195, %r1194, %r1137;
	max.s32 	%r1255, %r1195, %r800;
	mov.f32 	%f549, 0f00000000;
	setp.lt.s32	%p166, %r1255, 1;
	@%p166 bra 	LBB5_139;
	mov.f32 	%f547, 0f3F800000;
	mov.u32 	%r1256, %r1232;
LBB5_119:
	and.b32  	%r1197, %r1256, 1;
	shr.u32 	%r1256, %r1256, 1;
	mul.ftz.f32 	%f547, %f547, 0f3F000000;
	cvt.rn.f32.s32	%f422, %r1197;
	fma.rn.ftz.f32 	%f549, %f547, %f422, %f549;
	add.s32 	%r1255, %r1255, -1;
	setp.ne.s32	%p167, %r1255, 0;
	@%p167 bra 	LBB5_119;
	bra.uni 	LBB5_120;
LBB5_98:
	setp.lt.s32	%p123, %r46, 8;
	@%p123 bra 	LBB5_100;
	bra.uni 	LBB5_99;
LBB5_100:
	mov.f32 	%f545, 0f00000000;
	setp.lt.s32	%p124, %r1225, 1;
	@%p124 bra 	LBB5_134;
	add.s64 	%rd21, %rd290, 512;
	and.b32  	%r974, %r46, 63;
	ld.u64 	%rd303, [%rd21];
	mul.wide.u32 	%rd309, %r974, 4;
	// inline asm
	mov.b64 {_,%r970}, %rd303;
	// inline asm
	// inline asm
	call (%rd304), _rt_buffer_get_id_64, (%r970, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd310, %rd309, %rd304;
	ld.u32 	%r100, [%rd310+512];
	cvt.rn.f32.s32	%f403, %r100;
	rcp.approx.ftz.f32 	%f182, %f403;
	mov.f32 	%f537, %f182;
	mov.u32 	%r1252, %r1225;
LBB5_102:
	setp.ne.s32	%p125, %r100, 0;
	selp.b32	%r975, %r100, %r1252, %p125;
	rem.s32 	%r976, %r1252, %r975;
	cvt.rn.f32.s32	%f404, %r976;
	fma.rn.ftz.f32 	%f545, %f537, %f404, %f545;
	mul.ftz.f32 	%f537, %f182, %f537;
	selp.b32	%r977, %r100, -2147483648, %p125;
	div.s32 	%r1252, %r1252, %r977;
	setp.gt.s32	%p126, %r1252, 0;
	@%p126 bra 	LBB5_102;
	bra.uni 	LBB5_103;
LBB5_99:
	shl.b32 	%r849, %r1225, 4;
	add.s32 	%r850, %r849, -1556008596;
	add.s32 	%r851, %r1225, -1640531527;
	xor.b32  	%r852, %r850, %r851;
	shr.u32 	%r853, %r1225, 5;
	add.s32 	%r854, %r853, -939442524;
	xor.b32  	%r855, %r852, %r854;
	add.s32 	%r856, %r855, %r46;
	shl.b32 	%r857, %r856, 4;
	add.s32 	%r858, %r857, -1383041155;
	add.s32 	%r859, %r856, -1640531527;
	xor.b32  	%r860, %r858, %r859;
	shr.u32 	%r861, %r856, 5;
	add.s32 	%r862, %r861, 2123724318;
	xor.b32  	%r863, %r860, %r862;
	add.s32 	%r864, %r863, %r1225;
	shl.b32 	%r865, %r864, 4;
	add.s32 	%r866, %r865, -1556008596;
	add.s32 	%r867, %r864, 1013904242;
	xor.b32  	%r868, %r866, %r867;
	shr.u32 	%r869, %r864, 5;
	add.s32 	%r870, %r869, -939442524;
	xor.b32  	%r871, %r868, %r870;
	add.s32 	%r872, %r871, %r856;
	shl.b32 	%r873, %r872, 4;
	add.s32 	%r874, %r873, -1383041155;
	add.s32 	%r875, %r872, 1013904242;
	xor.b32  	%r876, %r874, %r875;
	shr.u32 	%r877, %r872, 5;
	add.s32 	%r878, %r877, 2123724318;
	xor.b32  	%r879, %r876, %r878;
	add.s32 	%r880, %r879, %r864;
	shl.b32 	%r881, %r880, 4;
	add.s32 	%r882, %r881, -1556008596;
	add.s32 	%r883, %r880, -626627285;
	xor.b32  	%r884, %r882, %r883;
	shr.u32 	%r885, %r880, 5;
	add.s32 	%r886, %r885, -939442524;
	xor.b32  	%r887, %r884, %r886;
	add.s32 	%r888, %r887, %r872;
	shl.b32 	%r889, %r888, 4;
	add.s32 	%r890, %r889, -1383041155;
	add.s32 	%r891, %r888, -626627285;
	xor.b32  	%r892, %r890, %r891;
	shr.u32 	%r893, %r888, 5;
	add.s32 	%r894, %r893, 2123724318;
	xor.b32  	%r895, %r892, %r894;
	add.s32 	%r896, %r895, %r880;
	shl.b32 	%r897, %r896, 4;
	add.s32 	%r898, %r897, -1556008596;
	add.s32 	%r899, %r896, 2027808484;
	xor.b32  	%r900, %r898, %r899;
	shr.u32 	%r901, %r896, 5;
	add.s32 	%r902, %r901, -939442524;
	xor.b32  	%r903, %r900, %r902;
	add.s32 	%r904, %r903, %r888;
	shl.b32 	%r905, %r904, 4;
	add.s32 	%r906, %r905, -1383041155;
	add.s32 	%r907, %r904, 2027808484;
	xor.b32  	%r908, %r906, %r907;
	shr.u32 	%r909, %r904, 5;
	add.s32 	%r910, %r909, 2123724318;
	xor.b32  	%r911, %r908, %r910;
	add.s32 	%r912, %r911, %r896;
	shl.b32 	%r913, %r912, 4;
	add.s32 	%r914, %r913, -1556008596;
	add.s32 	%r915, %r912, 387276957;
	xor.b32  	%r916, %r914, %r915;
	shr.u32 	%r917, %r912, 5;
	add.s32 	%r918, %r917, -939442524;
	xor.b32  	%r919, %r916, %r918;
	add.s32 	%r920, %r919, %r904;
	shl.b32 	%r921, %r920, 4;
	add.s32 	%r922, %r921, -1383041155;
	add.s32 	%r923, %r920, 387276957;
	xor.b32  	%r924, %r922, %r923;
	shr.u32 	%r925, %r920, 5;
	add.s32 	%r926, %r925, 2123724318;
	xor.b32  	%r927, %r924, %r926;
	add.s32 	%r928, %r927, %r912;
	shl.b32 	%r929, %r928, 4;
	add.s32 	%r930, %r929, -1556008596;
	add.s32 	%r931, %r928, -1253254570;
	xor.b32  	%r932, %r930, %r931;
	shr.u32 	%r933, %r928, 5;
	add.s32 	%r934, %r933, -939442524;
	xor.b32  	%r935, %r932, %r934;
	add.s32 	%r936, %r935, %r920;
	shl.b32 	%r937, %r936, 4;
	add.s32 	%r938, %r937, -1383041155;
	add.s32 	%r939, %r936, -1253254570;
	xor.b32  	%r940, %r938, %r939;
	shr.u32 	%r941, %r936, 5;
	add.s32 	%r942, %r941, 2123724318;
	xor.b32  	%r943, %r940, %r942;
	add.s32 	%r944, %r943, %r928;
	shl.b32 	%r945, %r944, 4;
	add.s32 	%r946, %r945, -1556008596;
	add.s32 	%r947, %r944, 1401181199;
	xor.b32  	%r948, %r946, %r947;
	shr.u32 	%r949, %r944, 5;
	add.s32 	%r950, %r949, -939442524;
	xor.b32  	%r951, %r948, %r950;
	add.s32 	%r952, %r951, %r936;
	shl.b32 	%r953, %r952, 4;
	add.s32 	%r954, %r953, -1383041155;
	add.s32 	%r955, %r952, 1401181199;
	xor.b32  	%r956, %r954, %r955;
	shr.u32 	%r957, %r952, 5;
	add.s32 	%r958, %r957, 2123724318;
	xor.b32  	%r959, %r956, %r958;
	add.s32 	%r960, %r959, %r944;
	shl.b32 	%r961, %r960, 4;
	add.s32 	%r962, %r961, 591475052;
	add.s32 	%r963, %r960, 1908133320;
	xor.b32  	%r964, %r962, %r963;
	shr.u32 	%r965, %r960, 5;
	add.s32 	%r966, %r965, 1208041124;
	xor.b32  	%r967, %r964, %r966;
	add.s32 	%r968, %r967, %r952;
	and.b32  	%r969, %r968, 2147483647;
	cvt.rn.f32.s32	%f401, %r969;
	mul.ftz.f32 	%f545, %f401, 0f30000000;
	bra.uni 	LBB5_107;
LBB5_139:
LBB5_120:
	add.ftz.f32 	%f423, %f206, %f549;
	add.ftz.f32 	%f424, %f506, %f423;
	add.ftz.f32 	%f425, %f505, %f207;
	cvt.rmi.ftz.f32.f32	%f426, %f425;
	cvt.rmi.ftz.f32.f32	%f427, %f424;
	sub.ftz.f32 	%f428, %f424, %f427;
	sub.ftz.f32 	%f429, %f425, %f426;
	mov.f32 	%f430, 0f3727C5AC;
	max.ftz.f32 	%f431, %f429, %f430;
	mov.f32 	%f432, 0f3F7FFF58;
	min.ftz.f32 	%f545, %f431, %f432;
	max.ftz.f32 	%f433, %f428, %f430;
	min.ftz.f32 	%f546, %f433, %f432;
	bra.uni 	LBB5_121;
LBB5_134:
LBB5_103:
	setp.eq.s32	%p127, %r46, 1;
	@%p127 bra 	LBB5_106;
	bra.uni 	LBB5_104;
LBB5_106:
	mul.wide.s32 	%rd311, %r1224, -2032597691;
	shr.u64 	%rd312, %rd311, 32;
	cvt.u32.u64	%r978, %rd312;
	add.s32 	%r979, %r978, %r1224;
	shr.u32 	%r980, %r979, 31;
	shr.s32 	%r981, %r979, 7;
	add.s32 	%r982, %r981, %r980;
	mul.lo.s32 	%r983, %r982, 243;
	sub.s32 	%r984, %r1224, %r983;
	cvt.rn.f32.s32	%f405, %r984;
	neg.ftz.f32 	%f406, %f405;
	fma.rn.ftz.f32 	%f545, %f545, 0f43730000, %f406;
	add.s32 	%r1253, %r46, 1;
	bra.uni 	LBB5_109;
LBB5_104:
	setp.ne.s32	%p128, %r46, 0;
	@%p128 bra 	LBB5_135;
	shr.s32 	%r985, %r1223, 31;
	shr.u32 	%r986, %r985, 24;
	add.s32 	%r987, %r1223, %r986;
	and.b32  	%r988, %r987, -256;
	sub.s32 	%r989, %r1223, %r988;
	cvt.rn.f32.s32	%f407, %r989;
	neg.ftz.f32 	%f408, %f407;
	fma.rn.ftz.f32 	%f545, %f545, 0f43800000, %f408;
	add.s32 	%r1253, %r46, 1;
	bra.uni 	LBB5_109;
LBB5_135:
LBB5_107:
	add.s32 	%r1253, %r46, 1;
	setp.lt.s32	%p129, %r1253, 8;
	@%p129 bra 	LBB5_136;
	bra.uni 	LBB5_108;
LBB5_136:
LBB5_109:
	mov.f32 	%f546, 0f00000000;
	setp.lt.s32	%p130, %r1225, 1;
	@%p130 bra 	LBB5_137;
	and.b32  	%r1119, %r1253, 63;
	// inline asm
	mov.b64 {_,%r1111}, %rd23;
	// inline asm
	// inline asm
	call (%rd314), _rt_buffer_get_id_64, (%r1111, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	ld.u64 	%rd319, [%rd314+512];
	mul.wide.u32 	%rd325, %r1119, 4;
	// inline asm
	mov.b64 {_,%r1115}, %rd319;
	// inline asm
	// inline asm
	call (%rd320), _rt_buffer_get_id_64, (%r1115, %r127, %r127, %rd45, %rd45, %rd45, %rd45);
	// inline asm
	add.s64 	%rd326, %rd325, %rd320;
	ld.u32 	%r106, [%rd326+512];
	cvt.rn.f32.s32	%f411, %r106;
	rcp.approx.ftz.f32 	%f194, %f411;
	mov.f32 	%f542, %f194;
	mov.u32 	%r1254, %r1225;
LBB5_111:
	setp.ne.s32	%p131, %r106, 0;
	selp.b32	%r1120, %r106, %r1254, %p131;
	rem.s32 	%r1121, %r1254, %r1120;
	cvt.rn.f32.s32	%f412, %r1121;
	fma.rn.ftz.f32 	%f546, %f542, %f412, %f546;
	mul.ftz.f32 	%f542, %f194, %f542;
	selp.b32	%r1122, %r106, -2147483648, %p131;
	div.s32 	%r1254, %r1254, %r1122;
	setp.gt.s32	%p132, %r1254, 0;
	@%p132 bra 	LBB5_111;
	bra.uni 	LBB5_112;
LBB5_108:
	shl.b32 	%r990, %r1225, 4;
	add.s32 	%r991, %r990, -1556008596;
	add.s32 	%r992, %r1225, -1640531527;
	xor.b32  	%r993, %r991, %r992;
	shr.u32 	%r994, %r1225, 5;
	add.s32 	%r995, %r994, -939442524;
	xor.b32  	%r996, %r993, %r995;
	add.s32 	%r997, %r996, %r1253;
	shl.b32 	%r998, %r997, 4;
	add.s32 	%r999, %r998, -1383041155;
	add.s32 	%r1000, %r997, -1640531527;
	xor.b32  	%r1001, %r999, %r1000;
	shr.u32 	%r1002, %r997, 5;
	add.s32 	%r1003, %r1002, 2123724318;
	xor.b32  	%r1004, %r1001, %r1003;
	add.s32 	%r1005, %r1004, %r1225;
	shl.b32 	%r1006, %r1005, 4;
	add.s32 	%r1007, %r1006, -1556008596;
	add.s32 	%r1008, %r1005, 1013904242;
	xor.b32  	%r1009, %r1007, %r1008;
	shr.u32 	%r1010, %r1005, 5;
	add.s32 	%r1011, %r1010, -939442524;
	xor.b32  	%r1012, %r1009, %r1011;
	add.s32 	%r1013, %r1012, %r997;
	shl.b32 	%r1014, %r1013, 4;
	add.s32 	%r1015, %r1014, -1383041155;
	add.s32 	%r1016, %r1013, 1013904242;
	xor.b32  	%r1017, %r1015, %r1016;
	shr.u32 	%r1018, %r1013, 5;
	add.s32 	%r1019, %r1018, 2123724318;
	xor.b32  	%r1020, %r1017, %r1019;
	add.s32 	%r1021, %r1020, %r1005;
	shl.b32 	%r1022, %r1021, 4;
	add.s32 	%r1023, %r1022, -1556008596;
	add.s32 	%r1024, %r1021, -626627285;
	xor.b32  	%r1025, %r1023, %r1024;
	shr.u32 	%r1026, %r1021, 5;
	add.s32 	%r1027, %r1026, -939442524;
	xor.b32  	%r1028, %r1025, %r1027;
	add.s32 	%r1029, %r1028, %r1013;
	shl.b32 	%r1030, %r1029, 4;
	add.s32 	%r1031, %r1030, -1383041155;
	add.s32 	%r1032, %r1029, -626627285;
	xor.b32  	%r1033, %r1031, %r1032;
	shr.u32 	%r1034, %r1029, 5;
	add.s32 	%r1035, %r1034, 2123724318;
	xor.b32  	%r1036, %r1033, %r1035;
	add.s32 	%r1037, %r1036, %r1021;
	shl.b32 	%r1038, %r1037, 4;
	add.s32 	%r1039, %r1038, -1556008596;
	add.s32 	%r1040, %r1037, 2027808484;
	xor.b32  	%r1041, %r1039, %r1040;
	shr.u32 	%r1042, %r1037, 5;
	add.s32 	%r1043, %r1042, -939442524;
	xor.b32  	%r1044, %r1041, %r1043;
	add.s32 	%r1045, %r1044, %r1029;
	shl.b32 	%r1046, %r1045, 4;
	add.s32 	%r1047, %r1046, -1383041155;
	add.s32 	%r1048, %r1045, 2027808484;
	xor.b32  	%r1049, %r1047, %r1048;
	shr.u32 	%r1050, %r1045, 5;
	add.s32 	%r1051, %r1050, 2123724318;
	xor.b32  	%r1052, %r1049, %r1051;
	add.s32 	%r1053, %r1052, %r1037;
	shl.b32 	%r1054, %r1053, 4;
	add.s32 	%r1055, %r1054, -1556008596;
	add.s32 	%r1056, %r1053, 387276957;
	xor.b32  	%r1057, %r1055, %r1056;
	shr.u32 	%r1058, %r1053, 5;
	add.s32 	%r1059, %r1058, -939442524;
	xor.b32  	%r1060, %r1057, %r1059;
	add.s32 	%r1061, %r1060, %r1045;
	shl.b32 	%r1062, %r1061, 4;
	add.s32 	%r1063, %r1062, -1383041155;
	add.s32 	%r1064, %r1061, 387276957;
	xor.b32  	%r1065, %r1063, %r1064;
	shr.u32 	%r1066, %r1061, 5;
	add.s32 	%r1067, %r1066, 2123724318;
	xor.b32  	%r1068, %r1065, %r1067;
	add.s32 	%r1069, %r1068, %r1053;
	shl.b32 	%r1070, %r1069, 4;
	add.s32 	%r1071, %r1070, -1556008596;
	add.s32 	%r1072, %r1069, -1253254570;
	xor.b32  	%r1073, %r1071, %r1072;
	shr.u32 	%r1074, %r1069, 5;
	add.s32 	%r1075, %r1074, -939442524;
	xor.b32  	%r1076, %r1073, %r1075;
	add.s32 	%r1077, %r1076, %r1061;
	shl.b32 	%r1078, %r1077, 4;
	add.s32 	%r1079, %r1078, -1383041155;
	add.s32 	%r1080, %r1077, -1253254570;
	xor.b32  	%r1081, %r1079, %r1080;
	shr.u32 	%r1082, %r1077, 5;
	add.s32 	%r1083, %r1082, 2123724318;
	xor.b32  	%r1084, %r1081, %r1083;
	add.s32 	%r1085, %r1084, %r1069;
	shl.b32 	%r1086, %r1085, 4;
	add.s32 	%r1087, %r1086, -1556008596;
	add.s32 	%r1088, %r1085, 1401181199;
	xor.b32  	%r1089, %r1087, %r1088;
	shr.u32 	%r1090, %r1085, 5;
	add.s32 	%r1091, %r1090, -939442524;
	xor.b32  	%r1092, %r1089, %r1091;
	add.s32 	%r1093, %r1092, %r1077;
	shl.b32 	%r1094, %r1093, 4;
	add.s32 	%r1095, %r1094, -1383041155;
	add.s32 	%r1096, %r1093, 1401181199;
	xor.b32  	%r1097, %r1095, %r1096;
	shr.u32 	%r1098, %r1093, 5;
	add.s32 	%r1099, %r1098, 2123724318;
	xor.b32  	%r1100, %r1097, %r1099;
	add.s32 	%r1101, %r1100, %r1085;
	shl.b32 	%r1102, %r1101, 4;
	add.s32 	%r1103, %r1102, 591475052;
	add.s32 	%r1104, %r1101, 1908133320;
	xor.b32  	%r1105, %r1103, %r1104;
	shr.u32 	%r1106, %r1101, 5;
	add.s32 	%r1107, %r1106, 1208041124;
	xor.b32  	%r1108, %r1105, %r1107;
	add.s32 	%r1109, %r1108, %r1093;
	and.b32  	%r1110, %r1109, 2147483647;
	cvt.rn.f32.s32	%f409, %r1110;
	mul.ftz.f32 	%f546, %f409, 0f30000000;
	bra.uni 	LBB5_116;
LBB5_137:
LBB5_112:
	setp.ne.s32	%p133, %r1253, 0;
	@%p133 bra 	LBB5_114;
	bra.uni 	LBB5_113;
LBB5_114:
	setp.ne.s32	%p134, %r46, 0;
	@%p134 bra 	LBB5_138;
	bra.uni 	LBB5_115;
LBB5_138:
	bra.uni 	LBB5_116;
LBB5_113:
	shr.s32 	%r1130, %r1223, 31;
	shr.u32 	%r1131, %r1130, 24;
	add.s32 	%r1132, %r1223, %r1131;
	and.b32  	%r1133, %r1132, -256;
	sub.s32 	%r1134, %r1223, %r1133;
	cvt.rn.f32.s32	%f415, %r1134;
	neg.ftz.f32 	%f416, %f415;
	fma.rn.ftz.f32 	%f546, %f546, 0f43800000, %f416;
	bra.uni 	LBB5_116;
LBB5_115:
	mul.wide.s32 	%rd327, %r1224, -2032597691;
	shr.u64 	%rd328, %rd327, 32;
	cvt.u32.u64	%r1123, %rd328;
	add.s32 	%r1124, %r1123, %r1224;
	shr.u32 	%r1125, %r1124, 31;
	shr.s32 	%r1126, %r1124, 7;
	add.s32 	%r1127, %r1126, %r1125;
	mul.lo.s32 	%r1128, %r1127, 243;
	sub.s32 	%r1129, %r1224, %r1128;
	cvt.rn.f32.s32	%f413, %r1129;
	neg.ftz.f32 	%f414, %f413;
	fma.rn.ftz.f32 	%f546, %f546, 0f43730000, %f414;
LBB5_116:
	add.s32 	%r46, %r46, 2;
LBB5_121:
	sqrt.approx.ftz.f32 	%f434, %f546;
	mul.ftz.f32 	%f435, %f545, 0f40C90FDB;
	cos.approx.ftz.f32 	%f436, %f435;
	sin.approx.ftz.f32 	%f437, %f435;
	mul.ftz.f32 	%f438, %f434, %f436;
	mul.ftz.f32 	%f439, %f434, %f437;
	mul.ftz.f32 	%f440, %f524, %f180;
	neg.ftz.f32 	%f441, %f440;
	fma.rn.ftz.f32 	%f442, %f525, %f179, %f441;
	mul.ftz.f32 	%f443, %f524, %f525;
	neg.ftz.f32 	%f444, %f443;
	fma.rn.ftz.f32 	%f445, %f526, %f180, %f444;
	mul.ftz.f32 	%f446, %f526, %f179;
	neg.ftz.f32 	%f447, %f446;
	fma.rn.ftz.f32 	%f448, %f524, %f524, %f447;
	mul.ftz.f32 	%f449, %f445, %f445;
	fma.rn.ftz.f32 	%f450, %f442, %f442, %f449;
	fma.rn.ftz.f32 	%f451, %f448, %f448, %f450;
	rsqrt.approx.ftz.f32 	%f452, %f451;
	mul.ftz.f32 	%f453, %f442, %f452;
	mul.ftz.f32 	%f454, %f448, %f452;
	mul.ftz.f32 	%f455, %f445, %f452;
	mul.ftz.f32 	%f456, %f455, %f180;
	neg.ftz.f32 	%f457, %f456;
	fma.rn.ftz.f32 	%f458, %f454, %f179, %f457;
	mul.ftz.f32 	%f459, %f524, %f454;
	neg.ftz.f32 	%f460, %f459;
	fma.rn.ftz.f32 	%f461, %f453, %f180, %f460;
	mul.ftz.f32 	%f462, %f453, %f179;
	neg.ftz.f32 	%f463, %f462;
	fma.rn.ftz.f32 	%f464, %f524, %f455, %f463;
	fma.rn.ftz.f32 	%f465, %f453, %f438, %f524;
	fma.rn.ftz.f32 	%f466, %f455, %f438, %f179;
	fma.rn.ftz.f32 	%f467, %f454, %f438, %f180;
	fma.rn.ftz.f32 	%f468, %f439, %f464, %f467;
	fma.rn.ftz.f32 	%f469, %f439, %f461, %f466;
	fma.rn.ftz.f32 	%f470, %f439, %f458, %f465;
	ld.f32 	%f471, [%rd26];
	ld.f32 	%f472, [%rd25+8];
	ld.f32 	%f473, [%rd25+4];
	ld.f32 	%f474, [%rd25];
	fma.rn.ftz.f32 	%f475, %f471, %f470, %f474;
	mov.b32 	 %r1198, %f475;
	cvt.u64.u32	%rd329, %r1198;
	fma.rn.ftz.f32 	%f476, %f471, %f469, %f473;
	mov.b32 	 %r1199, %f476;
	cvt.u64.u32	%rd330, %r1199;
	shl.b64 	%rd331, %rd330, 32;
	or.b64  	%rd332, %rd329, %rd331;
	fma.rn.ftz.f32 	%f477, %f471, %f468, %f472;
	ld.u64 	%rd333, [%rd25+16];
	ld.f32 	%f478, [%rd25+24];
	ld.u64 	%rd334, [%rd25+32];
	ld.f32 	%f479, [%rd25+40];
	mul.ftz.f32 	%f480, %f471, %f471;
	mov.f32 	%f481, 0f3F800000;
	div.approx.ftz.f32 	%f482, %f481, %f480;
	mul.ftz.f32 	%f483, %f482, 0f3EA2F983;
	mov.b32 	 %r1200, %f524;
	xor.b32  	%r1201, %r1200, -2147483648;
	cvt.u64.u32	%rd335, %r1201;
	mov.b32 	 %r1202, %f179;
	xor.b32  	%r1203, %r1202, -2147483648;
	cvt.u64.u32	%rd336, %r1203;
	shl.b64 	%rd337, %rd336, 32;
	or.b64  	%rd338, %rd335, %rd337;
	neg.ftz.f32 	%f484, %f180;
	mul.ftz.f32 	%f485, %f527, %f483;
	mov.b32 	 %r1204, %f170;
	cvt.u64.u32	%rd339, %r1204;
	mov.b32 	 %r1205, %f171;
	cvt.u64.u32	%rd340, %r1205;
	shl.b64 	%rd341, %rd340, 32;
	or.b64  	%rd342, %rd339, %rd341;
	st.v2.f32 	[%rd22+216], {%f505, %f506};
	st.v2.u32 	[%rd22+200], {%r1223, %r1224};
	st.v2.f32 	[%rd22+184], {%f43, %f44};
	mov.u32 	%r1206, -2147483648;
	st.u32 	[%rd22+152], %r1206;
	mov.u64 	%rd343, -9223372034707292160;
	st.u64 	[%rd22+144], %rd343;
	st.u32 	[%rd22+136], %r1206;
	st.u64 	[%rd22+128], %rd343;
	st.u32 	[%rd22+104], %r1206;
	st.u64 	[%rd22+96], %rd343;
	st.u32 	[%rd22+88], %r1206;
	st.u64 	[%rd22+80], %rd343;
	st.f32 	[%rd22+56], %f479;
	st.u64 	[%rd22+48], %rd334;
	st.f32 	[%rd22+40], %f478;
	st.u64 	[%rd22+32], %rd333;
	st.u32 	[%rd22+212], %r1233;
	st.u32 	[%rd22+208], %r1232;
	st.u32 	[%rd22+196], %r1225;
	st.u32 	[%rd22+192], %r46;
	st.u32 	[%rd22+176], %r52;
	st.u32 	[%rd22+168], %r800;
	st.u32 	[%rd22+164], %r800;
	st.f32 	[%rd22+8], %f172;
	st.f32 	[%rd22+120], %f484;
	st.f32 	[%rd22+72], %f484;
	st.u64 	[%rd22], %rd342;
	st.f32 	[%rd22+160], %f485;
	st.u64 	[%rd22+112], %rd338;
	st.u64 	[%rd22+64], %rd338;
	st.f32 	[%rd22+24], %f477;
	st.u64 	[%rd22+16], %rd332;
	ret;
}

	// .globl	stlr_power
.visible .func stlr_power(
	.param .b64 stlr_power_param_0,
	.param .b64 stlr_power_param_1,
	.param .b64 stlr_power_param_2,
	.param .b64 stlr_power_param_3
)
{
	.reg .f32 	%f<8>;
	.reg .s32 	%r<16>;
	.reg .s64 	%rd<29>;

	ld.param.u64 	%rd19, [stlr_power_param_0];
	ld.param.u64 	%rd20, [stlr_power_param_3];
	ld.f32 	%f1, [%rd20];
	ld.param.u64 	%rd1, [stlr_power_param_1];
	mul.ftz.f32 	%f2, %f1, %f1;
	ld.param.u64 	%rd21, [stlr_power_param_2];
	mul.ftz.f32 	%f3, %f2, 0f40490FDB;
	ld.u32 	%r13, [%rd21];
	// inline asm
	mov.b64 {_,%r2}, %rd1;
	// inline asm
	mov.u32 	%r11, 1;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_id_64, (%r2, %r11, %r11, %rd17, %rd17, %rd17, %rd17);
	// inline asm
	ld.u64 	%rd7, [%rd2+536];
	mul.wide.s32 	%rd22, %r13, 176;
	// inline asm
	mov.b64 {_,%r6}, %rd7;
	// inline asm
	// inline asm
	call (%rd8), _rt_buffer_get_id_64, (%r6, %r11, %r11, %rd17, %rd17, %rd17, %rd17);
	// inline asm
	add.s64 	%rd23, %rd22, %rd8;
	ld.f32 	%f4, [%rd23+672];
	mul.ftz.f32 	%f5, %f3, %f4;
	ld.u32 	%r14, [%rd23+656];
	ld.u64 	%rd13, [%rd2+528];
	mul.wide.s32 	%rd24, %r14, 40;
	// inline asm
	mov.b64 {_,%r10}, %rd13;
	// inline asm
	// inline asm
	call (%rd14), _rt_buffer_get_id_64, (%r10, %r11, %r11, %rd17, %rd17, %rd17, %rd17);
	// inline asm
	add.s64 	%rd25, %rd24, %rd14;
	ld.f32 	%f6, [%rd25+520];
	mul.ftz.f32 	%f7, %f5, %f6;
	mov.b32 	 %r15, %f7;
	cvt.u64.u32	%rd26, %r15;
	shl.b64 	%rd27, %rd26, 32;
	or.b64  	%rd28, %rd26, %rd27;
	st.f32 	[%rd19+8], %f7;
	st.u64 	[%rd19], %rd28;
	ret;
}


