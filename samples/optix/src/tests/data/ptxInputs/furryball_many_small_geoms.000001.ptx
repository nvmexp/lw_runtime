//

// Generated by LWPU LWVM Compiler

//

// Compiler Build ID: CL-19324574

// Lwca compilation tools, release 7.0, V7.0.27

// Based on LLVM 3.4svn

//



.version 4.2

.target sm_20

.address_size 64



	// .globl	_Z9TexSampleib6float2

.global .align 4 .b8 objectsDataBuffers[64];

.global .align 4 .f32 materialGamma;

.global .align 4 .f32 lightsGamma;

.global .align 1 .b8 textureSampleBuff[1];

.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;

.global .align 4 .b8 _ZN21rti_internal_typeinfo18objectsDataBuffersE[8] = {82, 97, 121, 0, 64, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo13materialGammaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightsGammaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 1 .b8 _ZN21rti_internal_typename18objectsDataBuffersE[19] = {79, 98, 106, 101, 99, 116, 115, 68, 97, 116, 97, 66, 117, 102, 102, 101, 114, 115, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13materialGammaE[6] = {102, 108, 111, 97, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename11lightsGammaE[6] = {102, 108, 111, 97, 116, 0};

.global .align 4 .u32 _ZN21rti_internal_typeenum18objectsDataBuffersE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum13materialGammaE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum11lightsGammaE = 4919;

.global .align 1 .b8 _ZN21rti_internal_semantic18objectsDataBuffersE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic13materialGammaE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic11lightsGammaE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation18objectsDataBuffersE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13materialGammaE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation11lightsGammaE[1];



.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z9TexSampleib6float2(

	.param .b32 _Z9TexSampleib6float2_param_0,

	.param .b32 _Z9TexSampleib6float2_param_1,

	.param .align 8 .b8 _Z9TexSampleib6float2_param_2[8]

)

{

	.reg .pred 	%p<2>;

	.reg .s16 	%rs<7>;

	.reg .f32 	%f<33>;

	.reg .s32 	%r<10>;





	ld.param.u32 	%r1, [_Z9TexSampleib6float2_param_0];

	ld.param.f32 	%f1, [_Z9TexSampleib6float2_param_2];

	ld.param.f32 	%f15, [_Z9TexSampleib6float2_param_2+4];

	mov.f32 	%f16, 0f3F800000;

	sub.ftz.f32 	%f2, %f16, %f15;

	ld.param.s8 	%rs1, [_Z9TexSampleib6float2_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB0_2;



	mov.u32 	%r7, 2;

	mov.f32 	%f20, 0f00000000;

	// inline asm

	call (%r2, %r3, %r4, %r5), _rt_texture_get_u_id, (%r1, %r7, %f1, %f2, %f20, %f20);

	// inline asm

	cvt.u16.u32	%rs3, %r2;

	cvt.u16.u32	%rs4, %r3;

	cvt.u16.u32	%rs5, %r4;

	cvt.u16.u32	%rs6, %r5;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs3;

	cvt.f32.f16 	%f29, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs4;

	cvt.f32.f16 	%f30, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs5;

	cvt.f32.f16 	%f31, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs6;

	cvt.f32.f16 	%f32, %temp;

	}

	bra.uni 	BB0_3;



BB0_2:

	mov.u32 	%r9, 2;

	mov.f32 	%f28, 0f00000000;

	// inline asm

	call (%f21, %f22, %f23, %f24), _rt_texture_get_f_id, (%r1, %r9, %f1, %f2, %f28, %f28);

	// inline asm

	mov.f32 	%f32, %f24;

	mov.f32 	%f31, %f23;

	mov.f32 	%f30, %f22;

	mov.f32 	%f29, %f21;



BB0_3:

	st.param.f32	[func_retval0+0], %f29;

	st.param.f32	[func_retval0+4], %f30;

	st.param.f32	[func_retval0+8], %f31;

	st.param.f32	[func_retval0+12], %f32;

	ret;

}



	// .globl	_ZN5optix19rt_texture_get_u_idEiiffff

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_u_idEiiffff(

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_0,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_1,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_2,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_3,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_4,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_5

)

{

	.reg .f32 	%f<5>;

	.reg .s32 	%r<7>;





	ld.param.u32 	%r5, [_ZN5optix19rt_texture_get_u_idEiiffff_param_0];

	ld.param.u32 	%r6, [_ZN5optix19rt_texture_get_u_idEiiffff_param_1];

	ld.param.f32 	%f1, [_ZN5optix19rt_texture_get_u_idEiiffff_param_2];

	ld.param.f32 	%f2, [_ZN5optix19rt_texture_get_u_idEiiffff_param_3];

	ld.param.f32 	%f3, [_ZN5optix19rt_texture_get_u_idEiiffff_param_4];

	ld.param.f32 	%f4, [_ZN5optix19rt_texture_get_u_idEiiffff_param_5];

	// inline asm

	call (%r1, %r2, %r3, %r4), _rt_texture_get_u_id, (%r5, %r6, %f1, %f2, %f3, %f4);

	// inline asm

	st.param.b32	[func_retval0+0], %r1;

	st.param.b32	[func_retval0+4], %r2;

	st.param.b32	[func_retval0+8], %r3;

	st.param.b32	[func_retval0+12], %r4;

	ret;

}



	// .globl	_ZN5optix19rt_texture_get_f_idEiiffff

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5

)

{

	.reg .f32 	%f<9>;

	.reg .s32 	%r<3>;





	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];

	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];

	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];

	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];

	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];

	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];

	// inline asm

	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);

	// inline asm

	st.param.f32	[func_retval0+0], %f1;

	st.param.f32	[func_retval0+4], %f2;

	st.param.f32	[func_retval0+8], %f3;

	st.param.f32	[func_retval0+12], %f4;

	ret;

}



	// .globl	_Z11TexSample3Dib6float3

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z11TexSample3Dib6float3(

	.param .b32 _Z11TexSample3Dib6float3_param_0,

	.param .b32 _Z11TexSample3Dib6float3_param_1,

	.param .align 4 .b8 _Z11TexSample3Dib6float3_param_2[12]

)

{

	.reg .pred 	%p<2>;

	.reg .s16 	%rs<7>;

	.reg .f32 	%f<32>;

	.reg .s32 	%r<10>;





	ld.param.u32 	%r1, [_Z11TexSample3Dib6float3_param_0];

	ld.param.f32 	%f1, [_Z11TexSample3Dib6float3_param_2];

	ld.param.f32 	%f2, [_Z11TexSample3Dib6float3_param_2+4];

	ld.param.f32 	%f3, [_Z11TexSample3Dib6float3_param_2+8];

	ld.param.s8 	%rs1, [_Z11TexSample3Dib6float3_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB3_2;



	mov.u32 	%r7, 3;

	mov.f32 	%f19, 0f00000000;

	// inline asm

	call (%r2, %r3, %r4, %r5), _rt_texture_get_u_id, (%r1, %r7, %f1, %f2, %f3, %f19);

	// inline asm

	cvt.u16.u32	%rs3, %r2;

	cvt.u16.u32	%rs4, %r3;

	cvt.u16.u32	%rs5, %r4;

	cvt.u16.u32	%rs6, %r5;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs3;

	cvt.f32.f16 	%f28, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs4;

	cvt.f32.f16 	%f29, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs5;

	cvt.f32.f16 	%f30, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs6;

	cvt.f32.f16 	%f31, %temp;

	}

	bra.uni 	BB3_3;



BB3_2:

	mov.u32 	%r9, 3;

	mov.f32 	%f27, 0f00000000;

	// inline asm

	call (%f20, %f21, %f22, %f23), _rt_texture_get_f_id, (%r1, %r9, %f1, %f2, %f3, %f27);

	// inline asm

	mov.f32 	%f31, %f23;

	mov.f32 	%f30, %f22;

	mov.f32 	%f29, %f21;

	mov.f32 	%f28, %f20;



BB3_3:

	st.param.f32	[func_retval0+0], %f28;

	st.param.f32	[func_retval0+4], %f29;

	st.param.f32	[func_retval0+8], %f30;

	st.param.f32	[func_retval0+12], %f31;

	ret;

}



	// .globl	_Z12ColorBalance6float4S_S_ifbf

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12ColorBalance6float4S_S_ifbf(

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_0[16],

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_1[16],

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_2[16],

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_3,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_4,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_5,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_6

)

{

	.reg .pred 	%p<4>;

	.reg .s16 	%rs<3>;

	.reg .f32 	%f<55>;

	.reg .s32 	%r<2>;





	ld.param.f32 	%f28, [_Z12ColorBalance6float4S_S_ifbf_param_0+12];

	ld.param.f32 	%f50, [_Z12ColorBalance6float4S_S_ifbf_param_0+8];

	ld.param.f32 	%f49, [_Z12ColorBalance6float4S_S_ifbf_param_0+4];

	ld.param.f32 	%f48, [_Z12ColorBalance6float4S_S_ifbf_param_0];

	ld.param.f32 	%f32, [_Z12ColorBalance6float4S_S_ifbf_param_1+12];

	ld.param.f32 	%f31, [_Z12ColorBalance6float4S_S_ifbf_param_1+8];

	ld.param.f32 	%f30, [_Z12ColorBalance6float4S_S_ifbf_param_1+4];

	ld.param.f32 	%f29, [_Z12ColorBalance6float4S_S_ifbf_param_1];

	ld.param.f32 	%f36, [_Z12ColorBalance6float4S_S_ifbf_param_2+12];

	ld.param.f32 	%f35, [_Z12ColorBalance6float4S_S_ifbf_param_2+8];

	ld.param.f32 	%f34, [_Z12ColorBalance6float4S_S_ifbf_param_2+4];

	ld.param.f32 	%f33, [_Z12ColorBalance6float4S_S_ifbf_param_2];

	ld.param.u32 	%r1, [_Z12ColorBalance6float4S_S_ifbf_param_3];

	ld.param.f32 	%f37, [_Z12ColorBalance6float4S_S_ifbf_param_4];

	ld.param.f32 	%f38, [_Z12ColorBalance6float4S_S_ifbf_param_6];

	ld.param.s8 	%rs1, [_Z12ColorBalance6float4S_S_ifbf_param_5];

	setp.eq.s32	%p1, %r1, 0;

	@%p1 bra 	BB4_3;

	bra.uni 	BB4_1;



BB4_3:

	cvt.ftz.sat.f32.f32	%f48, %f48;

	cvt.ftz.sat.f32.f32	%f49, %f49;

	cvt.ftz.sat.f32.f32	%f50, %f50;

	bra.uni 	BB4_4;



BB4_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB4_4;



	mov.f32 	%f39, 0f40000000;

	lg2.approx.ftz.f32 	%f40, %f39;

	mul.ftz.f32 	%f41, %f40, %f37;

	ex2.approx.ftz.f32 	%f42, %f41;

	mul.ftz.f32 	%f48, %f48, %f42;

	mul.ftz.f32 	%f49, %f49, %f42;

	mul.ftz.f32 	%f50, %f50, %f42;



BB4_4:

	fma.rn.ftz.f32 	%f51, %f29, %f48, %f33;

	fma.rn.ftz.f32 	%f52, %f30, %f49, %f34;

	fma.rn.ftz.f32 	%f53, %f31, %f50, %f35;

	fma.rn.ftz.f32 	%f54, %f28, %f32, %f36;

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p3, %rs2, 0;

	@%p3 bra 	BB4_6;



	mov.f32 	%f43, 0f3F800000;

	sub.ftz.f32 	%f51, %f43, %f51;

	sub.ftz.f32 	%f52, %f43, %f52;

	sub.ftz.f32 	%f53, %f43, %f53;

	sub.ftz.f32 	%f54, %f43, %f54;



BB4_6:

	max.ftz.f32 	%f44, %f38, %f51;

	max.ftz.f32 	%f45, %f38, %f52;

	max.ftz.f32 	%f46, %f38, %f53;

	max.ftz.f32 	%f47, %f38, %f54;

	st.param.f32	[func_retval0+0], %f44;

	st.param.f32	[func_retval0+4], %f45;

	st.param.f32	[func_retval0+8], %f46;

	st.param.f32	[func_retval0+12], %f47;

	ret;

}



	// .globl	_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE

.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE(

	.param .align 8 .b8 _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0[8],

	.param .b64 _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_1

)

{

	.reg .f32 	%f<19>;

	.reg .s64 	%rd<2>;





	ld.param.f32 	%f1, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0+4];

	ld.param.f32 	%f2, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0];

	ld.param.u64 	%rd1, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_1];

	ld.f32 	%f3, [%rd1];

	fma.rn.ftz.f32 	%f4, %f2, %f3, 0f00000000;

	ld.f32 	%f5, [%rd1+16];

	fma.rn.ftz.f32 	%f6, %f1, %f5, %f4;

	ld.f32 	%f7, [%rd1+32];

	fma.rn.ftz.f32 	%f8, %f7, 0f00000000, %f6;

	ld.f32 	%f9, [%rd1+48];

	add.ftz.f32 	%f10, %f8, %f9;

	ld.f32 	%f11, [%rd1+4];

	fma.rn.ftz.f32 	%f12, %f2, %f11, 0f00000000;

	ld.f32 	%f13, [%rd1+20];

	fma.rn.ftz.f32 	%f14, %f1, %f13, %f12;

	ld.f32 	%f15, [%rd1+36];

	fma.rn.ftz.f32 	%f16, %f15, 0f00000000, %f14;

	ld.f32 	%f17, [%rd1+52];

	add.ftz.f32 	%f18, %f16, %f17;

	st.param.f32	[func_retval0+0], %f10;

	st.param.f32	[func_retval0+4], %f18;

	ret;

}



	// .globl	_Z9WrapCoordfb

.visible .func  (.param .b32 func_retval0) _Z9WrapCoordfb(

	.param .b32 _Z9WrapCoordfb_param_0,

	.param .b32 _Z9WrapCoordfb_param_1

)

{

	.reg .pred 	%p<10>;

	.reg .s16 	%rs<3>;

	.reg .f32 	%f<9>;

	.reg .s32 	%r<3>;





	ld.param.f32 	%f4, [_Z9WrapCoordfb_param_0];

	cvt.rmi.ftz.f32.f32	%f5, %f4;

	sub.ftz.f32 	%f8, %f4, %f5;

	ld.param.s8 	%rs1, [_Z9WrapCoordfb_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p2, %rs2, 0;

	@%p2 bra 	BB6_5;



	cvt.rzi.ftz.s32.f32	%r1, %f4;

	mov.pred 	%p3, -1;

	and.b32  	%r2, %r1, 1;

	setp.eq.b32	%p4, %r2, 1;

	mov.pred 	%p9, %p3;

	@%p4 bra 	BB6_4;



	mov.pred 	%p5, 0;

	setp.geu.ftz.f32	%p6, %f4, 0f00000000;

	mov.pred 	%p9, %p5;

	@%p6 bra 	BB6_4;



	mov.pred 	%p9, %p3;



BB6_4:

	mov.f32 	%f6, 0f3F800000;

	sub.ftz.f32 	%f7, %f6, %f8;

	selp.f32	%f8, %f7, %f8, %p9;



BB6_5:

	st.param.f32	[func_retval0+0], %f8;

	ret;

}



	// .globl	_Z19ReadFloatFromFloat3ji

.visible .func  (.param .b32 func_retval0) _Z19ReadFloatFromFloat3ji(

	.param .b32 _Z19ReadFloatFromFloat3ji_param_0,

	.param .b32 _Z19ReadFloatFromFloat3ji_param_1

)

{

	.reg .pred 	%p<3>;

	.reg .f32 	%f<9>;

	.reg .s32 	%r<8>;

	.reg .s64 	%rd<7>;





	ld.param.u32 	%r5, [_Z19ReadFloatFromFloat3ji_param_0];

	ld.param.u32 	%r1, [_Z19ReadFloatFromFloat3ji_param_1];

	mul.wide.u32 	%rd6, %r5, -1431655765;

	shr.u64 	%rd2, %rd6, 33;

	cvt.u32.u64	%r6, %rd2;

	mov.u32 	%r2, 1;

	mov.u32 	%r3, 12;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r2, %r3, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f3, [%rd1+8];

	ld.f32 	%f8, [%rd1+4];

	ld.f32 	%f1, [%rd1];

	mul.lo.s32 	%r7, %r6, 3;

	sub.s32 	%r4, %r5, %r7;

	setp.eq.s32	%p1, %r4, 1;

	@%p1 bra 	BB7_4;



	setp.ne.s32	%p2, %r4, 2;

	@%p2 bra 	BB7_3;



	mov.f32 	%f8, %f3;

	bra.uni 	BB7_4;



BB7_3:

	mov.f32 	%f8, %f1;



BB7_4:

	st.param.f32	[func_retval0+0], %f8;

	ret;

}



	// .globl	_Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf

.visible .func _Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf(

	.param .b64 _Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_0,

	.param .b64 _Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_1,

	.param .b32 _Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_2,

	.param .b32 _Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_3

)

{

	.reg .pred 	%p<9>;

	.reg .s16 	%rs<11>;

	.reg .f32 	%f<27>;

	.reg .s32 	%r<20>;

	.reg .s64 	%rd<20>;





	ld.param.u64 	%rd4, [_Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_0];

	ld.param.u64 	%rd5, [_Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_1];

	ld.param.u32 	%r6, [_Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_2];

	ld.param.f32 	%f9, [_Z10GetMBValueI15ParticlesValue36float3EvRT0_RKjjf_param_3];

	ld.u32 	%r1, [%rd5];

	setp.eq.s32	%p2, %r1, 0;

	@%p2 bra 	BB8_8;



	mov.u32 	%r8, 2;

	mov.u32 	%r9, 16;

	// inline asm

	call (%rd6, %rd7, %rd8, %rd9), _rt_buffer_get_id_size_64, (%r1, %r8, %r9);

	// inline asm

	mov.f32 	%f26, 0f00000000;

	mov.u32 	%r19, 0;

	mov.u32 	%r18, %r19;

	setp.lt.u64	%p3, %rd7, 2;

	@%p3 bra 	BB8_3;



	cvt.rmi.ftz.f32.f32	%f11, %f9;

	cvt.rzi.ftz.u32.f32	%r19, %f11;

	cvt.rpi.ftz.f32.f32	%f12, %f9;

	cvt.rzi.ftz.u32.f32	%r18, %f12;

	cvt.rn.f32.u32	%f13, %r19;

	sub.ftz.f32 	%f26, %f9, %f13;



BB8_3:

	cvt.u64.u32	%rd12, %r19;

	cvt.u64.u32	%rd11, %r6;

	mov.u64 	%rd14, 0;

	// inline asm

	call (%rd10), _rt_buffer_get_id_64, (%r1, %r8, %r9, %rd11, %rd12, %rd14, %rd14);

	// inline asm

	ld.v4.u8 	{%rs5, %rs6, %rs7, %rs8}, [%rd10+12];

	ld.f32 	%f8, [%rd10+8];

	ld.f32 	%f7, [%rd10+4];

	ld.f32 	%f6, [%rd10];

	st.f32 	[%rd4], %f6;

	st.f32 	[%rd4+4], %f7;

	st.f32 	[%rd4+8], %f8;

	setp.eq.s32	%p4, %r19, %r18;

	@%p4 bra 	BB8_8;



	and.b16  	%rs9, %rs5, 255;

	cvt.u64.u32	%rd17, %r18;

	// inline asm

	call (%rd15), _rt_buffer_get_id_64, (%r1, %r8, %r9, %rd11, %rd17, %rd14, %rd14);

	// inline asm

	setp.eq.s16	%p5, %rs9, 0;

	ld.u8 	%rs10, [%rd15+12];

	setp.eq.s16	%p6, %rs10, 0;

	or.pred  	%p7, %p5, %p6;

	setp.ne.s16	%p8, %rs9, 0;

	or.pred  	%p1, %p6, %p8;

	@%p7 bra 	BB8_6;

	bra.uni 	BB8_5;



BB8_6:

	@%p1 bra 	BB8_8;



	ld.f32 	%f23, [%rd15];

	ld.f32 	%f24, [%rd15+4];

	ld.f32 	%f25, [%rd15+8];

	st.f32 	[%rd4+8], %f25;

	st.f32 	[%rd4+4], %f24;

	st.f32 	[%rd4], %f23;

	bra.uni 	BB8_8;



BB8_5:

	ld.f32 	%f14, [%rd15];

	sub.ftz.f32 	%f15, %f14, %f6;

	ld.f32 	%f16, [%rd15+4];

	sub.ftz.f32 	%f17, %f16, %f7;

	ld.f32 	%f18, [%rd15+8];

	sub.ftz.f32 	%f19, %f18, %f8;

	fma.rn.ftz.f32 	%f20, %f26, %f15, %f6;

	fma.rn.ftz.f32 	%f21, %f26, %f17, %f7;

	fma.rn.ftz.f32 	%f22, %f26, %f19, %f8;

	st.f32 	[%rd4], %f20;

	st.f32 	[%rd4+4], %f21;

	st.f32 	[%rd4+8], %f22;



BB8_8:

	ret;

}



	// .globl	_ZN15MotionBlurUtils7GetTimeEfRjS0_

.visible .func  (.param .b32 func_retval0) _ZN15MotionBlurUtils7GetTimeEfRjS0_(

	.param .b32 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_0,

	.param .b64 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_1,

	.param .b64 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_2

)

{

	.reg .f32 	%f<6>;

	.reg .s32 	%r<4>;

	.reg .s64 	%rd<3>;





	ld.param.f32 	%f1, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_0];

	ld.param.u64 	%rd1, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_1];

	ld.param.u64 	%rd2, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_2];

	cvt.rmi.ftz.f32.f32	%f2, %f1;

	cvt.rzi.ftz.u32.f32	%r1, %f2;

	st.u32 	[%rd1], %r1;

	cvt.rpi.ftz.f32.f32	%f3, %f1;

	cvt.rzi.ftz.u32.f32	%r2, %f3;

	st.u32 	[%rd2], %r2;

	ld.u32 	%r3, [%rd1];

	cvt.rn.f32.u32	%f4, %r3;

	sub.ftz.f32 	%f5, %f1, %f4;

	st.param.f32	[func_retval0+0], %f5;

	ret;

}



	// .globl	_Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf

.visible .func _Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf(

	.param .b64 _Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_0,

	.param .b64 _Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_1,

	.param .b32 _Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_2,

	.param .b32 _Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_3

)

{

	.reg .pred 	%p<9>;

	.reg .s16 	%rs<11>;

	.reg .f32 	%f<15>;

	.reg .s32 	%r<20>;

	.reg .s64 	%rd<19>;





	ld.param.u64 	%rd3, [_Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_0];

	ld.param.u64 	%rd4, [_Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_1];

	ld.param.u32 	%r6, [_Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_2];

	ld.param.f32 	%f5, [_Z10GetMBValueI14ParticlesValuefEvRT0_RKjjf_param_3];

	ld.u32 	%r1, [%rd4];

	setp.eq.s32	%p2, %r1, 0;

	@%p2 bra 	BB10_8;



	mov.u32 	%r8, 2;

	mov.u32 	%r9, 8;

	// inline asm

	call (%rd5, %rd6, %rd7, %rd8), _rt_buffer_get_id_size_64, (%r1, %r8, %r9);

	// inline asm

	mov.f32 	%f14, 0f00000000;

	mov.u32 	%r19, 0;

	mov.u32 	%r18, %r19;

	setp.lt.u64	%p3, %rd6, 2;

	@%p3 bra 	BB10_3;



	cvt.rmi.ftz.f32.f32	%f7, %f5;

	cvt.rzi.ftz.u32.f32	%r19, %f7;

	cvt.rpi.ftz.f32.f32	%f8, %f5;

	cvt.rzi.ftz.u32.f32	%r18, %f8;

	cvt.rn.f32.u32	%f9, %r19;

	sub.ftz.f32 	%f14, %f5, %f9;



BB10_3:

	cvt.u64.u32	%rd11, %r19;

	cvt.u64.u32	%rd10, %r6;

	mov.u64 	%rd13, 0;

	// inline asm

	call (%rd9), _rt_buffer_get_id_64, (%r1, %r8, %r9, %rd10, %rd11, %rd13, %rd13);

	// inline asm

	ld.v4.u8 	{%rs5, %rs6, %rs7, %rs8}, [%rd9+4];

	ld.f32 	%f4, [%rd9];

	st.f32 	[%rd3], %f4;

	setp.eq.s32	%p4, %r19, %r18;

	@%p4 bra 	BB10_8;



	and.b16  	%rs9, %rs5, 255;

	cvt.u64.u32	%rd16, %r18;

	// inline asm

	call (%rd14), _rt_buffer_get_id_64, (%r1, %r8, %r9, %rd10, %rd16, %rd13, %rd13);

	// inline asm

	setp.eq.s16	%p5, %rs9, 0;

	ld.u8 	%rs10, [%rd14+4];

	setp.eq.s16	%p6, %rs10, 0;

	or.pred  	%p7, %p5, %p6;

	setp.ne.s16	%p8, %rs9, 0;

	or.pred  	%p1, %p6, %p8;

	@%p7 bra 	BB10_6;

	bra.uni 	BB10_5;



BB10_6:

	@%p1 bra 	BB10_8;



	ld.f32 	%f13, [%rd14];

	st.f32 	[%rd3], %f13;

	bra.uni 	BB10_8;



BB10_5:

	ld.f32 	%f10, [%rd14];

	sub.ftz.f32 	%f11, %f10, %f4;

	fma.rn.ftz.f32 	%f12, %f14, %f11, %f4;

	st.f32 	[%rd3], %f12;



BB10_8:

	ret;

}



	// .globl	_Z17FileTextureSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z17FileTextureSamplei11SamplerInfob(

	.param .b32 _Z17FileTextureSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z17FileTextureSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z17FileTextureSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<37>;

	.reg .s16 	%rs<17>;

	.reg .f32 	%f<141>;

	.reg .s32 	%r<25>;

	.reg .s64 	%rd<8>;





	ld.param.u32 	%r4, [_Z17FileTextureSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f69, [_Z17FileTextureSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f68, [_Z17FileTextureSamplei11SamplerInfob_param_1];

	ld.param.s8 	%rs5, [_Z17FileTextureSamplei11SamplerInfob_param_2];

	ld.global.u32 	%r1, [objectsDataBuffers];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r4, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r7, [objectsDataBuffers+32];

	setp.gt.u32	%p4, %r7, %r4;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f140, 0f00000000;

	mov.f32 	%f139, %f140;

	mov.f32 	%f138, %f140;

	mov.f32 	%f137, %f140;

	@!%p5 bra 	BB11_20;

	bra.uni 	BB11_1;



BB11_1:

	cvt.s64.s32	%rd4, %r4;

	mov.u32 	%r9, 1;

	mov.u32 	%r10, 144;

	mov.u64 	%rd7, 0;

	// inline asm

	call (%rd3), _rt_buffer_get_id_64, (%r1, %r9, %r10, %rd4, %rd7, %rd7, %rd7);

	// inline asm

	add.s64 	%rd2, %rd3, 64;

	ld.v4.f32 	{%f76, %f77, %f78, %f79}, [%rd3+64];

	mov.f32 	%f140, %f79;

	mov.f32 	%f139, %f78;

	mov.f32 	%f138, %f77;

	mov.f32 	%f137, %f76;

	ld.v2.u32 	{%r11, %r12}, [%rd3+112];

	setp.eq.s32	%p6, %r11, 0;

	@%p6 bra 	BB11_20;



	ld.v4.f32 	{%f80, %f81, %f82, %f83}, [%rd2+16];

	ld.v4.f32 	{%f84, %f85, %f86, %f87}, [%rd2+32];

	ld.v2.f32 	{%f88, %f89}, [%rd2+56];

	ld.u8 	%rs1, [%rd2+65];

	ld.u8 	%rs2, [%rd2+67];

	ld.u8 	%rs3, [%rd2+68];

	ld.u8 	%rs4, [%rd2+69];

	ld.f32 	%f90, [%rd3];

	fma.rn.ftz.f32 	%f91, %f68, %f90, 0f00000000;

	ld.f32 	%f92, [%rd3+16];

	fma.rn.ftz.f32 	%f93, %f69, %f92, %f91;

	ld.f32 	%f94, [%rd3+32];

	fma.rn.ftz.f32 	%f95, %f94, 0f00000000, %f93;

	ld.f32 	%f96, [%rd3+48];

	add.ftz.f32 	%f15, %f95, %f96;

	ld.f32 	%f97, [%rd3+4];

	fma.rn.ftz.f32 	%f98, %f68, %f97, 0f00000000;

	ld.f32 	%f99, [%rd3+20];

	fma.rn.ftz.f32 	%f100, %f69, %f99, %f98;

	ld.f32 	%f101, [%rd3+36];

	fma.rn.ftz.f32 	%f102, %f101, 0f00000000, %f100;

	ld.f32 	%f103, [%rd3+52];

	add.ftz.f32 	%f16, %f102, %f103;

	setp.geu.ftz.f32	%p7, %f15, 0f00000000;

	setp.leu.ftz.f32	%p8, %f15, 0f3F800000;

	and.pred  	%p9, %p7, %p8;

	ld.u8 	%rs6, [%rd3+130];

	setp.eq.s16	%p10, %rs6, 0;

	or.pred  	%p11, %p10, %p9;

	mov.f32 	%f128, %f15;

	@%p11 bra 	BB11_5;



	ld.u8 	%rs7, [%rd2+64];

	cvt.rmi.ftz.f32.f32	%f104, %f15;

	sub.ftz.f32 	%f17, %f15, %f104;

	setp.eq.s16	%p12, %rs7, 0;

	mov.f32 	%f128, %f17;

	@%p12 bra 	BB11_5;



	setp.lt.ftz.f32	%p13, %f15, 0f00000000;

	cvt.rzi.ftz.s32.f32	%r13, %f15;

	and.b32  	%r14, %r13, 1;

	setp.eq.b32	%p14, %r14, 1;

	or.pred  	%p15, %p14, %p13;

	mov.f32 	%f105, 0f3F800000;

	sub.ftz.f32 	%f106, %f105, %f17;

	selp.f32	%f128, %f106, %f17, %p15;



BB11_5:

	setp.leu.ftz.f32	%p16, %f16, 0f3F800000;

	setp.geu.ftz.f32	%p17, %f16, 0f00000000;

	and.pred  	%p18, %p17, %p16;

	and.b16  	%rs8, %rs2, 255;

	setp.eq.s16	%p19, %rs8, 0;

	or.pred  	%p20, %p19, %p18;

	mov.f32 	%f129, %f16;

	@%p20 bra 	BB11_8;



	cvt.rmi.ftz.f32.f32	%f107, %f16;

	sub.ftz.f32 	%f20, %f16, %f107;

	and.b16  	%rs9, %rs1, 255;

	setp.eq.s16	%p21, %rs9, 0;

	mov.f32 	%f129, %f20;

	@%p21 bra 	BB11_8;



	setp.lt.ftz.f32	%p22, %f16, 0f00000000;

	cvt.rzi.ftz.s32.f32	%r15, %f16;

	and.b32  	%r16, %r15, 1;

	setp.eq.b32	%p23, %r16, 1;

	or.pred  	%p24, %p23, %p22;

	mov.f32 	%f108, 0f3F800000;

	sub.ftz.f32 	%f109, %f108, %f20;

	selp.f32	%f129, %f109, %f20, %p24;



BB11_8:

	setp.ge.ftz.f32	%p25, %f128, 0f00000000;

	setp.le.ftz.f32	%p26, %f128, 0f3F800000;

	and.pred  	%p27, %p25, %p26;

	setp.ge.ftz.f32	%p28, %f129, 0f00000000;

	and.pred  	%p29, %p27, %p28;

	setp.le.ftz.f32	%p30, %f129, 0f3F800000;

	and.pred  	%p31, %p29, %p30;

	@!%p31 bra 	BB11_20;

	bra.uni 	BB11_9;



BB11_9:

	and.b16  	%rs10, %rs4, 255;

	setp.eq.s16	%p32, %rs10, 0;

	mov.f32 	%f110, 0f3F800000;

	sub.ftz.f32 	%f23, %f110, %f129;

	@%p32 bra 	BB11_11;



	mov.u32 	%r22, 2;

	mov.f32 	%f114, 0f00000000;

	// inline asm

	call (%r17, %r18, %r19, %r20), _rt_texture_get_u_id, (%r11, %r22, %f128, %f23, %f114, %f114);

	// inline asm

	cvt.u16.u32	%rs11, %r17;

	cvt.u16.u32	%rs12, %r18;

	cvt.u16.u32	%rs13, %r19;

	cvt.u16.u32	%rs14, %r20;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs11;

	cvt.f32.f16 	%f137, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs12;

	cvt.f32.f16 	%f138, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs13;

	cvt.f32.f16 	%f139, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs14;

	cvt.f32.f16 	%f140, %temp;

	}

	bra.uni 	BB11_12;



BB11_11:

	mov.u32 	%r24, 2;

	mov.f32 	%f122, 0f00000000;

	// inline asm

	call (%f115, %f116, %f117, %f118), _rt_texture_get_f_id, (%r11, %r24, %f128, %f23, %f122, %f122);

	// inline asm

	mov.f32 	%f140, %f118;

	mov.f32 	%f139, %f117;

	mov.f32 	%f138, %f116;

	mov.f32 	%f137, %f115;



BB11_12:

	and.b16  	%rs15, %rs5, 255;

	setp.eq.s16	%p33, %rs15, 0;

	@%p33 bra 	BB11_20;



	mov.f32 	%f130, %f137;

	mov.f32 	%f131, %f138;

	mov.f32 	%f132, %f139;

	setp.eq.s32	%p34, %r12, 0;

	@%p34 bra 	BB11_16;



	setp.ne.s32	%p35, %r12, 2;

	@%p35 bra 	BB11_17;



	mov.f32 	%f123, 0f40000000;

	lg2.approx.ftz.f32 	%f124, %f123;

	mul.ftz.f32 	%f125, %f88, %f124;

	ex2.approx.ftz.f32 	%f126, %f125;

	mul.ftz.f32 	%f130, %f137, %f126;

	mul.ftz.f32 	%f131, %f138, %f126;

	mul.ftz.f32 	%f132, %f139, %f126;

	bra.uni 	BB11_17;



BB11_16:

	cvt.ftz.sat.f32.f32	%f130, %f137;

	cvt.ftz.sat.f32.f32	%f131, %f138;

	cvt.ftz.sat.f32.f32	%f132, %f139;



BB11_17:

	fma.rn.ftz.f32 	%f133, %f80, %f130, %f84;

	fma.rn.ftz.f32 	%f134, %f81, %f131, %f85;

	fma.rn.ftz.f32 	%f135, %f82, %f132, %f86;

	fma.rn.ftz.f32 	%f136, %f140, %f83, %f87;

	and.b16  	%rs16, %rs3, 255;

	setp.eq.s16	%p36, %rs16, 0;

	@%p36 bra 	BB11_19;



	sub.ftz.f32 	%f133, %f110, %f133;

	sub.ftz.f32 	%f134, %f110, %f134;

	sub.ftz.f32 	%f135, %f110, %f135;

	sub.ftz.f32 	%f136, %f110, %f136;



BB11_19:

	max.ftz.f32 	%f137, %f89, %f133;

	max.ftz.f32 	%f138, %f89, %f134;

	max.ftz.f32 	%f139, %f89, %f135;

	max.ftz.f32 	%f140, %f89, %f136;



BB11_20:

	st.param.f32	[func_retval0+0], %f137;

	st.param.f32	[func_retval0+4], %f138;

	st.param.f32	[func_retval0+8], %f139;

	st.param.f32	[func_retval0+12], %f140;

	ret;

}



	// .globl	_ZN5optix6MatrixILj4ELj4EEC1ERKS1_

.visible .func _ZN5optix6MatrixILj4ELj4EEC1ERKS1_(

	.param .b64 _ZN5optix6MatrixILj4ELj4EEC1ERKS1__param_0,

	.param .b64 _ZN5optix6MatrixILj4ELj4EEC1ERKS1__param_1

)

{

	.reg .f32 	%f<17>;

	.reg .s64 	%rd<3>;





	ld.param.u64 	%rd1, [_ZN5optix6MatrixILj4ELj4EEC1ERKS1__param_0];

	ld.param.u64 	%rd2, [_ZN5optix6MatrixILj4ELj4EEC1ERKS1__param_1];

	ld.f32 	%f1, [%rd2];

	st.f32 	[%rd1], %f1;

	ld.f32 	%f2, [%rd2+4];

	st.f32 	[%rd1+4], %f2;

	ld.f32 	%f3, [%rd2+8];

	st.f32 	[%rd1+8], %f3;

	ld.f32 	%f4, [%rd2+12];

	st.f32 	[%rd1+12], %f4;

	ld.f32 	%f5, [%rd2+16];

	st.f32 	[%rd1+16], %f5;

	ld.f32 	%f6, [%rd2+20];

	st.f32 	[%rd1+20], %f6;

	ld.f32 	%f7, [%rd2+24];

	st.f32 	[%rd1+24], %f7;

	ld.f32 	%f8, [%rd2+28];

	st.f32 	[%rd1+28], %f8;

	ld.f32 	%f9, [%rd2+32];

	st.f32 	[%rd1+32], %f9;

	ld.f32 	%f10, [%rd2+36];

	st.f32 	[%rd1+36], %f10;

	ld.f32 	%f11, [%rd2+40];

	st.f32 	[%rd1+40], %f11;

	ld.f32 	%f12, [%rd2+44];

	st.f32 	[%rd1+44], %f12;

	ld.f32 	%f13, [%rd2+48];

	st.f32 	[%rd1+48], %f13;

	ld.f32 	%f14, [%rd2+52];

	st.f32 	[%rd1+52], %f14;

	ld.f32 	%f15, [%rd2+56];

	st.f32 	[%rd1+56], %f15;

	ld.f32 	%f16, [%rd2+60];

	st.f32 	[%rd1+60], %f16;

	ret;

}



	// .globl	_ZNK15FileTextureData6SampleERK11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZNK15FileTextureData6SampleERK11SamplerInfob(

	.param .b64 _ZNK15FileTextureData6SampleERK11SamplerInfob_param_0,

	.param .b64 _ZNK15FileTextureData6SampleERK11SamplerInfob_param_1,

	.param .b32 _ZNK15FileTextureData6SampleERK11SamplerInfob_param_2

)

{

	.reg .pred 	%p<30>;

	.reg .s16 	%rs<15>;

	.reg .f32 	%f<135>;

	.reg .s32 	%r<15>;

	.reg .s64 	%rd<5>;





	ld.param.u64 	%rd3, [_ZNK15FileTextureData6SampleERK11SamplerInfob_param_0];

	ld.param.u64 	%rd4, [_ZNK15FileTextureData6SampleERK11SamplerInfob_param_1];

	ld.param.s8 	%rs3, [_ZNK15FileTextureData6SampleERK11SamplerInfob_param_2];

	add.s64 	%rd1, %rd3, 64;

	ld.v4.f32 	{%f67, %f68, %f69, %f70}, [%rd3+64];

	mov.f32 	%f134, %f70;

	mov.f32 	%f133, %f69;

	mov.f32 	%f132, %f68;

	mov.f32 	%f131, %f67;

	ld.u32 	%r1, [%rd3+112];

	setp.eq.s32	%p1, %r1, 0;

	@%p1 bra 	BB13_21;



	ld.f32 	%f71, [%rd1+-64];

	ld.f32 	%f72, [%rd4];

	fma.rn.ftz.f32 	%f73, %f72, %f71, 0f00000000;

	ld.f32 	%f74, [%rd1+-48];

	ld.f32 	%f75, [%rd4+4];

	fma.rn.ftz.f32 	%f76, %f75, %f74, %f73;

	ld.f32 	%f77, [%rd1+-32];

	fma.rn.ftz.f32 	%f78, %f77, 0f00000000, %f76;

	ld.f32 	%f79, [%rd1+-16];

	add.ftz.f32 	%f5, %f78, %f79;

	ld.f32 	%f80, [%rd1+-60];

	fma.rn.ftz.f32 	%f81, %f72, %f80, 0f00000000;

	ld.f32 	%f82, [%rd1+-44];

	fma.rn.ftz.f32 	%f83, %f75, %f82, %f81;

	ld.f32 	%f84, [%rd1+-28];

	fma.rn.ftz.f32 	%f85, %f84, 0f00000000, %f83;

	ld.f32 	%f86, [%rd1+-12];

	add.ftz.f32 	%f6, %f85, %f86;

	setp.lt.ftz.f32	%p2, %f5, 0f00000000;

	setp.gt.ftz.f32	%p3, %f5, 0f3F800000;

	or.pred  	%p4, %p2, %p3;

	mov.f32 	%f121, %f5;

	@!%p4 bra 	BB13_5;

	bra.uni 	BB13_2;



BB13_2:

	ld.u8 	%rs4, [%rd1+66];

	setp.eq.s16	%p5, %rs4, 0;

	ld.u8 	%rs1, [%rd3+128];

	mov.f32 	%f120, %f5;

	mov.f32 	%f121, %f120;

	@%p5 bra 	BB13_5;



	cvt.rmi.ftz.f32.f32	%f87, %f5;

	sub.ftz.f32 	%f7, %f5, %f87;

	and.b16  	%rs5, %rs1, 255;

	setp.eq.s16	%p6, %rs5, 0;

	mov.f32 	%f121, %f7;

	@%p6 bra 	BB13_5;



	cvt.rzi.ftz.s32.f32	%r3, %f5;

	and.b32  	%r4, %r3, 1;

	setp.eq.b32	%p8, %r4, 1;

	or.pred  	%p9, %p8, %p2;

	mov.f32 	%f88, 0f3F800000;

	sub.ftz.f32 	%f89, %f88, %f7;

	selp.f32	%f121, %f89, %f7, %p9;



BB13_5:

	setp.gt.ftz.f32	%p10, %f6, 0f3F800000;

	setp.lt.ftz.f32	%p11, %f6, 0f00000000;

	or.pred  	%p12, %p11, %p10;

	mov.f32 	%f123, %f6;

	@!%p12 bra 	BB13_9;

	bra.uni 	BB13_6;



BB13_6:

	ld.u8 	%rs6, [%rd1+67];

	setp.eq.s16	%p13, %rs6, 0;

	mov.f32 	%f122, %f6;

	mov.f32 	%f123, %f122;

	@%p13 bra 	BB13_9;



	cvt.rmi.ftz.f32.f32	%f90, %f6;

	sub.ftz.f32 	%f10, %f6, %f90;

	ld.u8 	%rs7, [%rd1+65];

	setp.eq.s16	%p14, %rs7, 0;

	mov.f32 	%f123, %f10;

	@%p14 bra 	BB13_9;



	cvt.rzi.ftz.s32.f32	%r5, %f6;

	and.b32  	%r6, %r5, 1;

	setp.eq.b32	%p16, %r6, 1;

	or.pred  	%p17, %p16, %p11;

	mov.f32 	%f91, 0f3F800000;

	sub.ftz.f32 	%f92, %f91, %f10;

	selp.f32	%f123, %f92, %f10, %p17;



BB13_9:

	setp.ge.ftz.f32	%p18, %f121, 0f00000000;

	setp.le.ftz.f32	%p19, %f121, 0f3F800000;

	and.pred  	%p20, %p18, %p19;

	setp.ge.ftz.f32	%p21, %f123, 0f00000000;

	and.pred  	%p22, %p20, %p21;

	setp.le.ftz.f32	%p23, %f123, 0f3F800000;

	and.pred  	%p24, %p22, %p23;

	@!%p24 bra 	BB13_21;

	bra.uni 	BB13_10;



BB13_10:

	ld.u8 	%rs8, [%rd1+69];

	setp.eq.s16	%p25, %rs8, 0;

	mov.f32 	%f93, 0f3F800000;

	sub.ftz.f32 	%f13, %f93, %f123;

	@%p25 bra 	BB13_12;



	mov.u32 	%r12, 2;

	mov.f32 	%f97, 0f00000000;

	// inline asm

	call (%r7, %r8, %r9, %r10), _rt_texture_get_u_id, (%r1, %r12, %f121, %f13, %f97, %f97);

	// inline asm

	cvt.u16.u32	%rs9, %r7;

	cvt.u16.u32	%rs10, %r8;

	cvt.u16.u32	%rs11, %r9;

	cvt.u16.u32	%rs12, %r10;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs9;

	cvt.f32.f16 	%f131, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs10;

	cvt.f32.f16 	%f132, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs11;

	cvt.f32.f16 	%f133, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs12;

	cvt.f32.f16 	%f134, %temp;

	}

	bra.uni 	BB13_13;



BB13_12:

	mov.u32 	%r14, 2;

	mov.f32 	%f105, 0f00000000;

	// inline asm

	call (%f98, %f99, %f100, %f101), _rt_texture_get_f_id, (%r1, %r14, %f121, %f13, %f105, %f105);

	// inline asm

	mov.f32 	%f134, %f101;

	mov.f32 	%f133, %f100;

	mov.f32 	%f132, %f99;

	mov.f32 	%f131, %f98;



BB13_13:

	and.b16  	%rs13, %rs3, 255;

	setp.eq.s16	%p26, %rs13, 0;

	@%p26 bra 	BB13_21;



	ld.v4.f32 	{%f106, %f107, %f108, %f109}, [%rd1+16];

	ld.v4.f32 	{%f110, %f111, %f112, %f113}, [%rd1+32];

	add.s64 	%rd2, %rd1, 56;

	ld.u8 	%rs2, [%rd1+68];

	ld.f32 	%f34, [%rd1+60];

	mov.f32 	%f124, %f131;

	mov.f32 	%f125, %f132;

	mov.f32 	%f126, %f133;

	ld.u32 	%r2, [%rd1+52];

	setp.eq.s32	%p27, %r2, 0;

	@%p27 bra 	BB13_17;



	setp.ne.s32	%p28, %r2, 2;

	@%p28 bra 	BB13_18;



	ld.f32 	%f114, [%rd2];

	mov.f32 	%f115, 0f40000000;

	lg2.approx.ftz.f32 	%f116, %f115;

	mul.ftz.f32 	%f117, %f114, %f116;

	ex2.approx.ftz.f32 	%f118, %f117;

	mul.ftz.f32 	%f124, %f131, %f118;

	mul.ftz.f32 	%f125, %f132, %f118;

	mul.ftz.f32 	%f126, %f133, %f118;

	bra.uni 	BB13_18;



BB13_17:

	cvt.ftz.sat.f32.f32	%f124, %f131;

	cvt.ftz.sat.f32.f32	%f125, %f132;

	cvt.ftz.sat.f32.f32	%f126, %f133;



BB13_18:

	fma.rn.ftz.f32 	%f127, %f106, %f124, %f110;

	fma.rn.ftz.f32 	%f128, %f107, %f125, %f111;

	fma.rn.ftz.f32 	%f129, %f108, %f126, %f112;

	fma.rn.ftz.f32 	%f130, %f134, %f109, %f113;

	and.b16  	%rs14, %rs2, 255;

	setp.eq.s16	%p29, %rs14, 0;

	@%p29 bra 	BB13_20;



	sub.ftz.f32 	%f127, %f93, %f127;

	sub.ftz.f32 	%f128, %f93, %f128;

	sub.ftz.f32 	%f129, %f93, %f129;

	sub.ftz.f32 	%f130, %f93, %f130;



BB13_20:

	max.ftz.f32 	%f131, %f34, %f127;

	max.ftz.f32 	%f132, %f34, %f128;

	max.ftz.f32 	%f133, %f34, %f129;

	max.ftz.f32 	%f134, %f34, %f130;



BB13_21:

	st.param.f32	[func_retval0+0], %f131;

	st.param.f32	[func_retval0+4], %f132;

	st.param.f32	[func_retval0+8], %f133;

	st.param.f32	[func_retval0+12], %f134;

	ret;

}



	// .globl	_Z23ProceduralTextureSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z23ProceduralTextureSamplei11SamplerInfob(

	.param .b32 _Z23ProceduralTextureSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z23ProceduralTextureSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z23ProceduralTextureSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<8>;

	.reg .s16 	%rs<14>;

	.reg .f32 	%f<44>;

	.reg .s32 	%r<19>;

	.reg .s64 	%rd<6>;





	ld.param.u32 	%r4, [_Z23ProceduralTextureSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f16, [_Z23ProceduralTextureSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f15, [_Z23ProceduralTextureSamplei11SamplerInfob_param_1];

	ld.global.u32 	%r1, [objectsDataBuffers+4];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r4, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r7, [objectsDataBuffers+36];

	setp.gt.u32	%p4, %r7, %r4;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f43, 0f00000000;

	mov.f32 	%f42, %f43;

	mov.f32 	%f41, %f43;

	mov.f32 	%f40, %f43;

	@!%p5 bra 	BB14_5;

	bra.uni 	BB14_1;



BB14_1:

	cvt.s64.s32	%rd2, %r4;

	mov.u32 	%r9, 1;

	mov.u32 	%r10, 8;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r9, %r10, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.v4.u8 	{%rs5, %rs6, %rs7, %rs8}, [%rd1+4];

	ld.u32 	%r3, [%rd1];

	setp.eq.s32	%p6, %r3, 0;

	mov.f32 	%f43, 0f3F800000;

	mov.f32 	%f42, 0f3F000000;

	mov.f32 	%f41, %f42;

	mov.f32 	%f40, %f42;

	@%p6 bra 	BB14_5;



	and.b16  	%rs9, %rs5, 255;

	setp.eq.s16	%p7, %rs9, 0;

	mov.f32 	%f27, 0f3F800000;

	sub.ftz.f32 	%f2, %f27, %f16;

	@%p7 bra 	BB14_4;



	mov.u32 	%r16, 2;

	mov.f32 	%f31, 0f00000000;

	// inline asm

	call (%r11, %r12, %r13, %r14), _rt_texture_get_u_id, (%r3, %r16, %f15, %f2, %f31, %f31);

	// inline asm

	cvt.u16.u32	%rs10, %r11;

	cvt.u16.u32	%rs11, %r12;

	cvt.u16.u32	%rs12, %r13;

	cvt.u16.u32	%rs13, %r14;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs10;

	cvt.f32.f16 	%f40, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs11;

	cvt.f32.f16 	%f41, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs12;

	cvt.f32.f16 	%f42, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs13;

	cvt.f32.f16 	%f43, %temp;

	}

	bra.uni 	BB14_5;



BB14_4:

	mov.u32 	%r18, 2;

	mov.f32 	%f39, 0f00000000;

	// inline asm

	call (%f32, %f33, %f34, %f35), _rt_texture_get_f_id, (%r3, %r18, %f15, %f2, %f39, %f39);

	// inline asm

	mov.f32 	%f43, %f35;

	mov.f32 	%f42, %f34;

	mov.f32 	%f41, %f33;

	mov.f32 	%f40, %f32;



BB14_5:

	st.param.f32	[func_retval0+0], %f40;

	st.param.f32	[func_retval0+4], %f41;

	st.param.f32	[func_retval0+8], %f42;

	st.param.f32	[func_retval0+12], %f43;

	ret;

}



	// .globl	_Z20LayeredTextureSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z20LayeredTextureSamplei11SamplerInfob(

	.param .b32 _Z20LayeredTextureSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z20LayeredTextureSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z20LayeredTextureSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<30>;

	.reg .s16 	%rs<2>;

	.reg .f32 	%f<202>;

	.reg .s32 	%r<58>;

	.reg .s64 	%rd<30>;





	ld.param.u32 	%r22, [_Z20LayeredTextureSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f96, [_Z20LayeredTextureSamplei11SamplerInfob_param_1+20];

	ld.param.u32 	%r24, [_Z20LayeredTextureSamplei11SamplerInfob_param_1+16];

	ld.param.u32 	%r23, [_Z20LayeredTextureSamplei11SamplerInfob_param_1+12];

	ld.param.f32 	%f95, [_Z20LayeredTextureSamplei11SamplerInfob_param_1+8];

	ld.param.f32 	%f94, [_Z20LayeredTextureSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f93, [_Z20LayeredTextureSamplei11SamplerInfob_param_1];

	ld.param.s8 	%rs1, [_Z20LayeredTextureSamplei11SamplerInfob_param_2];

	ld.global.u32 	%r1, [objectsDataBuffers+8];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r22, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r25, [objectsDataBuffers+40];

	setp.gt.u32	%p4, %r25, %r22;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f201, 0f00000000;

	mov.f32 	%f200, %f201;

	mov.f32 	%f199, %f201;

	mov.f32 	%f198, %f201;

	@!%p5 bra 	BB15_35;

	bra.uni 	BB15_1;



BB15_1:

	cvt.s64.s32	%rd2, %r22;

	mov.u32 	%r27, 1;

	mov.u32 	%r28, 112;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r27, %r28, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.v4.u32 	{%r29, %r30, %r31, %r32}, [%rd1+96];

	ld.v4.u32 	{%r33, %r34, %r35, %r36}, [%rd1+80];

	ld.v4.f32 	{%f101, %f102, %f103, %f104}, [%rd1+64];

	ld.v4.u32 	{%r37, %r38, %r39, %r40}, [%rd1+48];

	ld.v4.f32 	{%f105, %f106, %f107, %f108}, [%rd1+32];

	ld.v4.u32 	{%r41, %r42, %r43, %r44}, [%rd1+16];

	ld.v4.f32 	{%f109, %f110, %f111, %f112}, [%rd1];

	mov.f32 	%f190, %f109;

	mov.f32 	%f191, %f110;

	mov.f32 	%f192, %f111;

	setp.lt.u32	%p6, %r41, 7;

	setp.ne.s32	%p7, %r42, -1;

	and.pred  	%p8, %p6, %p7;

	@!%p8 bra 	BB15_3;

	bra.uni 	BB15_2;



BB15_2:

	cvt.u64.u32	%rd8, %r41;

	mov.u64 	%rd13, textureSampleBuff;

	cvta.global.u64 	%rd7, %rd13;

	mov.u32 	%r46, 4;

	// inline asm

	call (%rd6), _rt_buffer_get_64, (%rd7, %r27, %r46, %rd8, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r47, [%rd6];

	// inline asm

	call (%rd12), _rt_callable_program_from_id_64, (%r47);

	// inline asm

	cvt.s32.s16	%r48, %rs1;

	// Callseq Start 0

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r42;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f93;

	st.param.f32	[param1+4], %f94;

	st.param.f32	[param1+8], %f95;

	st.param.b32	[param1+12], %r23;

	st.param.b32	[param1+16], %r24;

	st.param.f32	[param1+20], %f96;

	.param .b32 param2;

	st.param.b32	[param2+0], %r48;

	.param .align 16 .b8 retval0[16];

	prototype_0 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd12, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_0;

	ld.param.f32	%f190, [retval0+0];

	ld.param.f32	%f191, [retval0+4];

	ld.param.f32	%f192, [retval0+8];

	ld.param.f32	%f113, [retval0+12];

	

	//{

	}// Callseq End 0



BB15_3:

	mov.f32 	%f193, %f105;

	mov.f32 	%f194, %f106;

	mov.f32 	%f195, %f107;

	mov.f32 	%f196, %f108;

	setp.ne.s32	%p9, %r38, -1;

	setp.lt.u32	%p10, %r37, 7;

	and.pred  	%p11, %p9, %p10;

	@!%p11 bra 	BB15_5;

	bra.uni 	BB15_4;



BB15_4:

	cvt.u64.u32	%rd16, %r37;

	mov.u64 	%rd21, textureSampleBuff;

	cvta.global.u64 	%rd15, %rd21;

	mov.u32 	%r50, 4;

	// inline asm

	call (%rd14), _rt_buffer_get_64, (%rd15, %r27, %r50, %rd16, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r51, [%rd14];

	// inline asm

	call (%rd20), _rt_callable_program_from_id_64, (%r51);

	// inline asm

	cvt.s32.s16	%r52, %rs1;

	// Callseq Start 1

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r38;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f93;

	st.param.f32	[param1+4], %f94;

	st.param.f32	[param1+8], %f95;

	st.param.b32	[param1+12], %r23;

	st.param.b32	[param1+16], %r24;

	st.param.f32	[param1+20], %f96;

	.param .b32 param2;

	st.param.b32	[param2+0], %r52;

	.param .align 16 .b8 retval0[16];

	prototype_1 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd20, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_1;

	ld.param.f32	%f193, [retval0+0];

	ld.param.f32	%f194, [retval0+4];

	ld.param.f32	%f195, [retval0+8];

	ld.param.f32	%f196, [retval0+12];

	

	//{

	}// Callseq End 1



BB15_5:

	mov.f32 	%f197, %f104;

	setp.ne.s32	%p12, %r34, -1;

	setp.lt.u32	%p13, %r33, 7;

	and.pred  	%p14, %p12, %p13;

	@!%p14 bra 	BB15_7;

	bra.uni 	BB15_6;



BB15_6:

	cvt.u64.u32	%rd24, %r33;

	mov.u64 	%rd29, textureSampleBuff;

	cvta.global.u64 	%rd23, %rd29;

	mov.u32 	%r54, 4;

	// inline asm

	call (%rd22), _rt_buffer_get_64, (%rd23, %r27, %r54, %rd24, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r55, [%rd22];

	// inline asm

	call (%rd28), _rt_callable_program_from_id_64, (%r55);

	// inline asm

	cvt.s32.s16	%r56, %rs1;

	// Callseq Start 2

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r34;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f93;

	st.param.f32	[param1+4], %f94;

	st.param.f32	[param1+8], %f95;

	st.param.b32	[param1+12], %r23;

	st.param.b32	[param1+16], %r24;

	st.param.f32	[param1+20], %f96;

	.param .b32 param2;

	st.param.b32	[param2+0], %r56;

	.param .align 16 .b8 retval0[16];

	prototype_2 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd28, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_2;

	ld.param.f32	%f114, [retval0+0];

	ld.param.f32	%f115, [retval0+4];

	ld.param.f32	%f116, [retval0+8];

	ld.param.f32	%f197, [retval0+12];

	

	//{

	}// Callseq End 2



BB15_7:

	mov.f32 	%f201, %f197;

	mov.f32 	%f200, %f192;

	mov.f32 	%f199, %f191;

	mov.f32 	%f198, %f190;

	setp.gt.s32	%p15, %r29, 6;

	@%p15 bra 	BB15_17;



	setp.gt.s32	%p23, %r29, 3;

	@%p23 bra 	BB15_13;



	setp.eq.s32	%p27, %r29, 1;

	@%p27 bra 	BB15_32;



	setp.eq.s32	%p28, %r29, 2;

	@%p28 bra 	BB15_31;

	bra.uni 	BB15_11;



BB15_31:

	mul.ftz.f32 	%f198, %f193, %f197;

	mul.ftz.f32 	%f199, %f194, %f197;

	mul.ftz.f32 	%f200, %f195, %f197;

	mul.ftz.f32 	%f201, %f196, %f197;

	bra.uni 	BB15_35;



BB15_17:

	setp.gt.s32	%p16, %r29, 9;

	@%p16 bra 	BB15_22;



	setp.eq.s32	%p20, %r29, 7;

	@%p20 bra 	BB15_28;



	setp.eq.s32	%p21, %r29, 8;

	@%p21 bra 	BB15_27;

	bra.uni 	BB15_20;



BB15_27:

	mul.ftz.f32 	%f138, %f190, %f197;

	max.ftz.f32 	%f139, %f138, %f193;

	mul.ftz.f32 	%f140, %f191, %f197;

	max.ftz.f32 	%f141, %f140, %f194;

	mul.ftz.f32 	%f142, %f192, %f197;

	max.ftz.f32 	%f143, %f142, %f195;

	mul.ftz.f32 	%f144, %f197, %f139;

	mul.ftz.f32 	%f145, %f197, %f141;

	mul.ftz.f32 	%f146, %f197, %f143;

	mov.f32 	%f147, 0f3F800000;

	sub.ftz.f32 	%f148, %f147, %f197;

	fma.rn.ftz.f32 	%f198, %f193, %f148, %f144;

	fma.rn.ftz.f32 	%f199, %f194, %f148, %f145;

	fma.rn.ftz.f32 	%f200, %f195, %f148, %f146;

	bra.uni 	BB15_34;



BB15_13:

	setp.eq.s32	%p24, %r29, 4;

	@%p24 bra 	BB15_30;



	setp.eq.s32	%p25, %r29, 5;

	@%p25 bra 	BB15_29;

	bra.uni 	BB15_15;



BB15_29:

	mul.ftz.f32 	%f169, %f190, %f197;

	sub.ftz.f32 	%f198, %f193, %f169;

	mul.ftz.f32 	%f170, %f191, %f197;

	sub.ftz.f32 	%f199, %f194, %f170;

	mul.ftz.f32 	%f171, %f192, %f197;

	sub.ftz.f32 	%f200, %f195, %f171;

	bra.uni 	BB15_34;



BB15_22:

	setp.eq.s32	%p17, %r29, 10;

	@%p17 bra 	BB15_26;



	setp.eq.s32	%p18, %r29, 12;

	@%p18 bra 	BB15_33;

	bra.uni 	BB15_24;



BB15_33:

	add.ftz.f32 	%f181, %f190, %f190;

	add.ftz.f32 	%f182, %f191, %f191;

	add.ftz.f32 	%f183, %f192, %f192;

	fma.rn.ftz.f32 	%f184, %f181, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f185, %f182, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f186, %f183, %f197, 0f3F800000;

	sub.ftz.f32 	%f187, %f184, %f197;

	sub.ftz.f32 	%f188, %f185, %f197;

	sub.ftz.f32 	%f189, %f186, %f197;

	mul.ftz.f32 	%f198, %f193, %f187;

	mul.ftz.f32 	%f199, %f194, %f188;

	mul.ftz.f32 	%f200, %f195, %f189;

	bra.uni 	BB15_34;



BB15_32:

	mov.f32 	%f174, 0f3F800000;

	sub.ftz.f32 	%f175, %f174, %f197;

	mul.ftz.f32 	%f176, %f193, %f175;

	mul.ftz.f32 	%f177, %f194, %f175;

	mul.ftz.f32 	%f178, %f195, %f175;

	fma.rn.ftz.f32 	%f198, %f190, %f197, %f176;

	fma.rn.ftz.f32 	%f199, %f191, %f197, %f177;

	fma.rn.ftz.f32 	%f200, %f192, %f197, %f178;

	sub.ftz.f32 	%f179, %f174, %f196;

	mul.ftz.f32 	%f180, %f179, %f175;

	sub.ftz.f32 	%f201, %f174, %f180;

	bra.uni 	BB15_35;



BB15_11:

	setp.eq.s32	%p29, %r29, 3;

	@%p29 bra 	BB15_12;

	bra.uni 	BB15_35;



BB15_12:

	mov.f32 	%f172, 0f3F800000;

	sub.ftz.f32 	%f173, %f172, %f197;

	mul.ftz.f32 	%f198, %f193, %f173;

	mul.ftz.f32 	%f199, %f194, %f173;

	mul.ftz.f32 	%f200, %f195, %f173;

	mul.ftz.f32 	%f201, %f196, %f173;

	bra.uni 	BB15_35;



BB15_28:

	mul.ftz.f32 	%f149, %f190, %f197;

	sub.ftz.f32 	%f150, %f149, %f193;

	mul.ftz.f32 	%f151, %f191, %f197;

	sub.ftz.f32 	%f152, %f151, %f194;

	mul.ftz.f32 	%f153, %f192, %f197;

	sub.ftz.f32 	%f154, %f153, %f195;

	abs.ftz.f32 	%f155, %f150;

	abs.ftz.f32 	%f156, %f152;

	abs.ftz.f32 	%f157, %f154;

	mul.ftz.f32 	%f158, %f197, %f155;

	mul.ftz.f32 	%f159, %f197, %f156;

	mul.ftz.f32 	%f160, %f197, %f157;

	mov.f32 	%f161, 0f3F800000;

	sub.ftz.f32 	%f162, %f161, %f197;

	fma.rn.ftz.f32 	%f198, %f193, %f162, %f158;

	fma.rn.ftz.f32 	%f199, %f194, %f162, %f159;

	fma.rn.ftz.f32 	%f200, %f195, %f162, %f160;

	bra.uni 	BB15_34;



BB15_20:

	setp.eq.s32	%p22, %r29, 9;

	@%p22 bra 	BB15_21;

	bra.uni 	BB15_35;



BB15_21:

	mul.ftz.f32 	%f127, %f190, %f197;

	min.ftz.f32 	%f128, %f127, %f193;

	mul.ftz.f32 	%f129, %f191, %f197;

	min.ftz.f32 	%f130, %f129, %f194;

	mul.ftz.f32 	%f131, %f192, %f197;

	min.ftz.f32 	%f132, %f131, %f195;

	mul.ftz.f32 	%f133, %f197, %f128;

	mul.ftz.f32 	%f134, %f197, %f130;

	mul.ftz.f32 	%f135, %f197, %f132;

	mov.f32 	%f136, 0f3F800000;

	sub.ftz.f32 	%f137, %f136, %f197;

	fma.rn.ftz.f32 	%f198, %f193, %f137, %f133;

	fma.rn.ftz.f32 	%f199, %f194, %f137, %f134;

	fma.rn.ftz.f32 	%f200, %f195, %f137, %f135;

	bra.uni 	BB15_34;



BB15_30:

	fma.rn.ftz.f32 	%f198, %f190, %f197, %f193;

	fma.rn.ftz.f32 	%f199, %f191, %f197, %f194;

	fma.rn.ftz.f32 	%f200, %f192, %f197, %f195;

	bra.uni 	BB15_34;



BB15_15:

	setp.eq.s32	%p26, %r29, 6;

	@%p26 bra 	BB15_16;

	bra.uni 	BB15_35;



BB15_16:

	fma.rn.ftz.f32 	%f163, %f190, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f164, %f191, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f165, %f192, %f197, 0f3F800000;

	sub.ftz.f32 	%f166, %f163, %f197;

	sub.ftz.f32 	%f167, %f164, %f197;

	sub.ftz.f32 	%f168, %f165, %f197;

	mul.ftz.f32 	%f198, %f193, %f166;

	mul.ftz.f32 	%f199, %f194, %f167;

	mul.ftz.f32 	%f200, %f195, %f168;

	bra.uni 	BB15_34;



BB15_26:

	fma.rn.ftz.f32 	%f124, %f190, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f125, %f191, %f197, 0f3F800000;

	fma.rn.ftz.f32 	%f126, %f192, %f197, 0f3F800000;

	mul.ftz.f32 	%f198, %f193, %f124;

	mul.ftz.f32 	%f199, %f194, %f125;

	mul.ftz.f32 	%f200, %f195, %f126;

	bra.uni 	BB15_34;



BB15_24:

	setp.ne.s32	%p19, %r29, 11;

	@%p19 bra 	BB15_35;



	mul.ftz.f32 	%f117, %f190, %f197;

	mov.f32 	%f118, 0f3F800000;

	sub.ftz.f32 	%f119, %f118, %f117;

	mul.ftz.f32 	%f120, %f191, %f197;

	sub.ftz.f32 	%f121, %f118, %f120;

	mul.ftz.f32 	%f122, %f192, %f197;

	sub.ftz.f32 	%f123, %f118, %f122;

	mul.ftz.f32 	%f198, %f193, %f119;

	mul.ftz.f32 	%f199, %f194, %f121;

	mul.ftz.f32 	%f200, %f195, %f123;



BB15_34:

	mov.f32 	%f201, %f196;



BB15_35:

	st.param.f32	[func_retval0+0], %f198;

	st.param.f32	[func_retval0+4], %f199;

	st.param.f32	[func_retval0+8], %f200;

	st.param.f32	[func_retval0+12], %f201;

	ret;

}



	// .globl	_ZN10ColorUtils17DoGammaCorrectionERK6float4j

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN10ColorUtils17DoGammaCorrectionERK6float4j(

	.param .b64 _ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_0,

	.param .b32 _ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_1

)

{

	.reg .pred 	%p<4>;

	.reg .f32 	%f<39>;

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<3>;





	ld.param.u64 	%rd2, [_ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_0];

	ld.param.u32 	%r1, [_ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_1];

	mov.f32 	%f35, 0f3F800000;

	setp.eq.s32	%p1, %r1, 1;

	@%p1 bra 	BB16_3;

	bra.uni 	BB16_1;



BB16_3:

	ld.global.f32 	%f35, [materialGamma];

	bra.uni 	BB16_4;



BB16_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB16_4;



	ld.global.f32 	%f35, [lightsGamma];



BB16_4:

	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd2];

	mov.f32 	%f36, %f18;

	mov.f32 	%f37, %f19;

	mov.f32 	%f38, %f20;

	setp.eq.ftz.f32	%p3, %f35, 0f3F800000;

	@%p3 bra 	BB16_6;



	mov.f32 	%f22, 0f00000000;

	max.ftz.f32 	%f23, %f18, %f22;

	max.ftz.f32 	%f24, %f22, %f23;

	max.ftz.f32 	%f25, %f19, %f22;

	max.ftz.f32 	%f26, %f22, %f25;

	max.ftz.f32 	%f27, %f20, %f22;

	max.ftz.f32 	%f28, %f22, %f27;

	lg2.approx.ftz.f32 	%f29, %f24;

	mul.ftz.f32 	%f30, %f35, %f29;

	ex2.approx.ftz.f32 	%f36, %f30;

	lg2.approx.ftz.f32 	%f31, %f26;

	mul.ftz.f32 	%f32, %f35, %f31;

	ex2.approx.ftz.f32 	%f37, %f32;

	lg2.approx.ftz.f32 	%f33, %f28;

	mul.ftz.f32 	%f34, %f35, %f33;

	ex2.approx.ftz.f32 	%f38, %f34;



BB16_6:

	st.param.f32	[func_retval0+0], %f36;

	st.param.f32	[func_retval0+4], %f37;

	st.param.f32	[func_retval0+8], %f38;

	st.param.f32	[func_retval0+12], %f21;

	ret;

}



	// .globl	_ZNK18LayeredTextureData9mixLayersE6float4S0_j

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZNK18LayeredTextureData9mixLayersE6float4S0_j(

	.param .b64 _ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_0,

	.param .align 16 .b8 _ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_1[16],

	.param .align 16 .b8 _ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_2[16],

	.param .b32 _ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_3

)

{

	.reg .pred 	%p<16>;

	.reg .f32 	%f<142>;

	.reg .s32 	%r<2>;





	ld.param.f32 	%f4, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_1+12];

	ld.param.f32 	%f3, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_1+8];

	ld.param.f32 	%f2, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_1+4];

	ld.param.f32 	%f1, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_1];

	ld.param.f32 	%f5, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_2];

	ld.param.f32 	%f6, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_2+4];

	ld.param.f32 	%f7, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_2+8];

	ld.param.f32 	%f8, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_2+12];

	ld.param.u32 	%r1, [_ZNK18LayeredTextureData9mixLayersE6float4S0_j_param_3];

	mov.f32 	%f141, %f4;

	mov.f32 	%f140, %f3;

	mov.f32 	%f139, %f2;

	mov.f32 	%f138, %f1;

	setp.gt.s32	%p1, %r1, 6;

	@%p1 bra 	BB17_10;



	setp.gt.s32	%p9, %r1, 3;

	@%p9 bra 	BB17_6;



	setp.eq.s32	%p13, %r1, 1;

	@%p13 bra 	BB17_25;



	setp.eq.s32	%p14, %r1, 2;

	@%p14 bra 	BB17_24;

	bra.uni 	BB17_4;



BB17_24:

	mul.ftz.f32 	%f138, %f4, %f5;

	mul.ftz.f32 	%f139, %f4, %f6;

	mul.ftz.f32 	%f140, %f4, %f7;

	mul.ftz.f32 	%f141, %f4, %f8;

	bra.uni 	BB17_28;



BB17_10:

	setp.gt.s32	%p2, %r1, 9;

	@%p2 bra 	BB17_15;



	setp.eq.s32	%p6, %r1, 7;

	@%p6 bra 	BB17_21;



	setp.eq.s32	%p7, %r1, 8;

	@%p7 bra 	BB17_20;

	bra.uni 	BB17_13;



BB17_20:

	mul.ftz.f32 	%f86, %f1, %f4;

	max.ftz.f32 	%f87, %f86, %f5;

	mul.ftz.f32 	%f88, %f2, %f4;

	max.ftz.f32 	%f89, %f88, %f6;

	mul.ftz.f32 	%f90, %f3, %f4;

	max.ftz.f32 	%f91, %f90, %f7;

	mul.ftz.f32 	%f92, %f4, %f87;

	mul.ftz.f32 	%f93, %f4, %f89;

	mul.ftz.f32 	%f94, %f4, %f91;

	mov.f32 	%f95, 0f3F800000;

	sub.ftz.f32 	%f96, %f95, %f4;

	fma.rn.ftz.f32 	%f138, %f5, %f96, %f92;

	fma.rn.ftz.f32 	%f139, %f6, %f96, %f93;

	fma.rn.ftz.f32 	%f140, %f7, %f96, %f94;

	bra.uni 	BB17_27;



BB17_6:

	setp.eq.s32	%p10, %r1, 4;

	@%p10 bra 	BB17_23;



	setp.eq.s32	%p11, %r1, 5;

	@%p11 bra 	BB17_22;

	bra.uni 	BB17_8;



BB17_22:

	mul.ftz.f32 	%f117, %f1, %f4;

	sub.ftz.f32 	%f138, %f5, %f117;

	mul.ftz.f32 	%f118, %f2, %f4;

	sub.ftz.f32 	%f139, %f6, %f118;

	mul.ftz.f32 	%f119, %f3, %f4;

	sub.ftz.f32 	%f140, %f7, %f119;

	bra.uni 	BB17_27;



BB17_15:

	setp.eq.s32	%p3, %r1, 10;

	@%p3 bra 	BB17_19;



	setp.eq.s32	%p4, %r1, 12;

	@%p4 bra 	BB17_26;

	bra.uni 	BB17_17;



BB17_26:

	add.ftz.f32 	%f129, %f1, %f1;

	add.ftz.f32 	%f130, %f2, %f2;

	add.ftz.f32 	%f131, %f3, %f3;

	fma.rn.ftz.f32 	%f132, %f4, %f129, 0f3F800000;

	fma.rn.ftz.f32 	%f133, %f4, %f130, 0f3F800000;

	fma.rn.ftz.f32 	%f134, %f4, %f131, 0f3F800000;

	sub.ftz.f32 	%f135, %f132, %f4;

	sub.ftz.f32 	%f136, %f133, %f4;

	sub.ftz.f32 	%f137, %f134, %f4;

	mul.ftz.f32 	%f138, %f5, %f135;

	mul.ftz.f32 	%f139, %f6, %f136;

	mul.ftz.f32 	%f140, %f7, %f137;

	bra.uni 	BB17_27;



BB17_25:

	mov.f32 	%f122, 0f3F800000;

	sub.ftz.f32 	%f123, %f122, %f4;

	mul.ftz.f32 	%f124, %f5, %f123;

	mul.ftz.f32 	%f125, %f6, %f123;

	mul.ftz.f32 	%f126, %f7, %f123;

	fma.rn.ftz.f32 	%f138, %f1, %f4, %f124;

	fma.rn.ftz.f32 	%f139, %f2, %f4, %f125;

	fma.rn.ftz.f32 	%f140, %f3, %f4, %f126;

	sub.ftz.f32 	%f127, %f122, %f8;

	mul.ftz.f32 	%f128, %f123, %f127;

	sub.ftz.f32 	%f141, %f122, %f128;

	bra.uni 	BB17_28;



BB17_4:

	setp.eq.s32	%p15, %r1, 3;

	@%p15 bra 	BB17_5;

	bra.uni 	BB17_28;



BB17_5:

	mov.f32 	%f120, 0f3F800000;

	sub.ftz.f32 	%f121, %f120, %f4;

	mul.ftz.f32 	%f138, %f5, %f121;

	mul.ftz.f32 	%f139, %f6, %f121;

	mul.ftz.f32 	%f140, %f7, %f121;

	mul.ftz.f32 	%f141, %f8, %f121;

	bra.uni 	BB17_28;



BB17_21:

	mul.ftz.f32 	%f97, %f1, %f4;

	sub.ftz.f32 	%f98, %f97, %f5;

	mul.ftz.f32 	%f99, %f2, %f4;

	sub.ftz.f32 	%f100, %f99, %f6;

	mul.ftz.f32 	%f101, %f3, %f4;

	sub.ftz.f32 	%f102, %f101, %f7;

	abs.ftz.f32 	%f103, %f98;

	abs.ftz.f32 	%f104, %f100;

	abs.ftz.f32 	%f105, %f102;

	mul.ftz.f32 	%f106, %f4, %f103;

	mul.ftz.f32 	%f107, %f4, %f104;

	mul.ftz.f32 	%f108, %f4, %f105;

	mov.f32 	%f109, 0f3F800000;

	sub.ftz.f32 	%f110, %f109, %f4;

	fma.rn.ftz.f32 	%f138, %f5, %f110, %f106;

	fma.rn.ftz.f32 	%f139, %f6, %f110, %f107;

	fma.rn.ftz.f32 	%f140, %f7, %f110, %f108;

	bra.uni 	BB17_27;



BB17_13:

	setp.eq.s32	%p8, %r1, 9;

	@%p8 bra 	BB17_14;

	bra.uni 	BB17_28;



BB17_14:

	mul.ftz.f32 	%f75, %f1, %f4;

	min.ftz.f32 	%f76, %f75, %f5;

	mul.ftz.f32 	%f77, %f2, %f4;

	min.ftz.f32 	%f78, %f77, %f6;

	mul.ftz.f32 	%f79, %f3, %f4;

	min.ftz.f32 	%f80, %f79, %f7;

	mul.ftz.f32 	%f81, %f4, %f76;

	mul.ftz.f32 	%f82, %f4, %f78;

	mul.ftz.f32 	%f83, %f4, %f80;

	mov.f32 	%f84, 0f3F800000;

	sub.ftz.f32 	%f85, %f84, %f4;

	fma.rn.ftz.f32 	%f138, %f5, %f85, %f81;

	fma.rn.ftz.f32 	%f139, %f6, %f85, %f82;

	fma.rn.ftz.f32 	%f140, %f7, %f85, %f83;

	bra.uni 	BB17_27;



BB17_23:

	fma.rn.ftz.f32 	%f138, %f1, %f4, %f5;

	fma.rn.ftz.f32 	%f139, %f2, %f4, %f6;

	fma.rn.ftz.f32 	%f140, %f3, %f4, %f7;

	bra.uni 	BB17_27;



BB17_8:

	setp.eq.s32	%p12, %r1, 6;

	@%p12 bra 	BB17_9;

	bra.uni 	BB17_28;



BB17_9:

	fma.rn.ftz.f32 	%f111, %f1, %f4, 0f3F800000;

	fma.rn.ftz.f32 	%f112, %f2, %f4, 0f3F800000;

	fma.rn.ftz.f32 	%f113, %f3, %f4, 0f3F800000;

	sub.ftz.f32 	%f114, %f111, %f4;

	sub.ftz.f32 	%f115, %f112, %f4;

	sub.ftz.f32 	%f116, %f113, %f4;

	mul.ftz.f32 	%f138, %f5, %f114;

	mul.ftz.f32 	%f139, %f6, %f115;

	mul.ftz.f32 	%f140, %f7, %f116;

	bra.uni 	BB17_27;



BB17_19:

	fma.rn.ftz.f32 	%f72, %f1, %f4, 0f3F800000;

	fma.rn.ftz.f32 	%f73, %f2, %f4, 0f3F800000;

	fma.rn.ftz.f32 	%f74, %f3, %f4, 0f3F800000;

	mul.ftz.f32 	%f138, %f5, %f72;

	mul.ftz.f32 	%f139, %f6, %f73;

	mul.ftz.f32 	%f140, %f7, %f74;

	bra.uni 	BB17_27;



BB17_17:

	setp.ne.s32	%p5, %r1, 11;

	@%p5 bra 	BB17_28;



	mul.ftz.f32 	%f65, %f1, %f4;

	mov.f32 	%f66, 0f3F800000;

	sub.ftz.f32 	%f67, %f66, %f65;

	mul.ftz.f32 	%f68, %f2, %f4;

	sub.ftz.f32 	%f69, %f66, %f68;

	mul.ftz.f32 	%f70, %f3, %f4;

	sub.ftz.f32 	%f71, %f66, %f70;

	mul.ftz.f32 	%f138, %f5, %f67;

	mul.ftz.f32 	%f139, %f6, %f69;

	mul.ftz.f32 	%f140, %f7, %f71;



BB17_27:

	mov.f32 	%f141, %f8;



BB17_28:

	st.param.f32	[func_retval0+0], %f138;

	st.param.f32	[func_retval0+4], %f139;

	st.param.f32	[func_retval0+8], %f140;

	st.param.f32	[func_retval0+12], %f141;

	ret;

}



	// .globl	_Z17RampTextureSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z17RampTextureSamplei11SamplerInfob(

	.param .b32 _Z17RampTextureSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z17RampTextureSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z17RampTextureSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<27>;

	.reg .s16 	%rs<2>;

	.reg .f32 	%f<220>;

	.reg .s32 	%r<119>;

	.reg .s64 	%rd<63>;





	ld.param.u32 	%r39, [_Z17RampTextureSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f107, [_Z17RampTextureSamplei11SamplerInfob_param_1+20];

	ld.param.u32 	%r41, [_Z17RampTextureSamplei11SamplerInfob_param_1+16];

	ld.param.u32 	%r40, [_Z17RampTextureSamplei11SamplerInfob_param_1+12];

	ld.param.f32 	%f106, [_Z17RampTextureSamplei11SamplerInfob_param_1+8];

	ld.param.f32 	%f105, [_Z17RampTextureSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f104, [_Z17RampTextureSamplei11SamplerInfob_param_1];

	ld.param.s8 	%rs1, [_Z17RampTextureSamplei11SamplerInfob_param_2];

	ld.global.u32 	%r1, [objectsDataBuffers+12];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r39, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r42, [objectsDataBuffers+44];

	setp.gt.u32	%p4, %r42, %r39;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f219, 0f00000000;

	mov.f32 	%f218, %f219;

	mov.f32 	%f217, %f219;

	mov.f32 	%f216, %f219;

	@!%p5 bra 	BB18_20;

	bra.uni 	BB18_1;



BB18_1:

	cvt.s64.s32	%rd2, %r39;

	mov.u32 	%r44, 1;

	mov.u32 	%r45, 8;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r44, %r45, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r2, [%rd1];

	ld.u32 	%r3, [%rd1+4];

	setp.eq.s32	%p6, %r3, 0;

	mov.f32 	%f219, 0f00000000;

	mov.f32 	%f218, %f219;

	mov.f32 	%f217, %f219;

	mov.f32 	%f216, %f219;

	mov.u32 	%r118, 0;

	@%p6 bra 	BB18_20;



BB18_2:

	mov.u32 	%r117, %r118;

	cvt.s64.s32	%rd7, %r117;

	mov.u32 	%r49, 48;

	// inline asm

	call (%rd6), _rt_buffer_get_id_64, (%r2, %r44, %r49, %rd7, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f116, [%rd6+32];

	setp.gt.ftz.f32	%p7, %f116, %f106;

	add.s32 	%r118, %r117, 1;

	@%p7 bra 	BB18_4;



	setp.lt.u32	%p8, %r118, %r3;

	mov.u32 	%r117, %r118;

	@%p8 bra 	BB18_2;



BB18_4:

	add.s32 	%r62, %r117, -2;

	add.s32 	%r63, %r3, -1;

	min.s32 	%r64, %r62, %r63;

	mov.u32 	%r65, 0;

	max.s32 	%r66, %r65, %r64;

	cvt.s64.s32	%rd12, %r66;

	// inline asm

	call (%rd11), _rt_buffer_get_id_64, (%r2, %r44, %r49, %rd12, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f6, [%rd11+32];

	ld.v4.u32 	{%r69, %r70, %r71, %r72}, [%rd11+16];

	ld.v4.f32 	{%f117, %f118, %f119, %f120}, [%rd11];

	add.s32 	%r73, %r117, -1;

	min.s32 	%r74, %r73, %r63;

	max.s32 	%r75, %r65, %r74;

	cvt.s64.s32	%rd17, %r75;

	// inline asm

	call (%rd16), _rt_buffer_get_id_64, (%r2, %r44, %r49, %rd17, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r18, [%rd16+36];

	ld.f32 	%f11, [%rd16+32];

	ld.v4.u32 	{%r78, %r79, %r80, %r81}, [%rd16+16];

	ld.v4.f32 	{%f121, %f122, %f123, %f124}, [%rd16];

	mov.f32 	%f200, %f121;

	mov.f32 	%f201, %f122;

	mov.f32 	%f202, %f123;

	mov.f32 	%f203, %f124;

	min.s32 	%r82, %r117, %r63;

	max.s32 	%r83, %r65, %r82;

	cvt.s64.s32	%rd22, %r83;

	// inline asm

	call (%rd21), _rt_buffer_get_id_64, (%r2, %r44, %r49, %rd22, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f21, [%rd21+32];

	ld.v4.u32 	{%r86, %r87, %r88, %r89}, [%rd21+16];

	ld.v4.f32 	{%f125, %f126, %f127, %f128}, [%rd21];

	add.s32 	%r90, %r117, 1;

	min.s32 	%r91, %r90, %r63;

	max.s32 	%r92, %r65, %r91;

	cvt.s64.s32	%rd27, %r92;

	// inline asm

	call (%rd26), _rt_buffer_get_id_64, (%r2, %r44, %r49, %rd27, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f26, [%rd26+32];

	ld.v4.u32 	{%r95, %r96, %r97, %r98}, [%rd26+16];

	ld.v4.f32 	{%f129, %f130, %f131, %f132}, [%rd26];

	setp.ne.s32	%p9, %r79, -1;

	setp.lt.u32	%p10, %r78, 7;

	and.pred  	%p11, %p9, %p10;

	@!%p11 bra 	BB18_6;

	bra.uni 	BB18_5;



BB18_5:

	cvt.u64.u32	%rd33, %r78;

	mov.u64 	%rd38, textureSampleBuff;

	cvta.global.u64 	%rd32, %rd38;

	mov.u32 	%r100, 4;

	// inline asm

	call (%rd31), _rt_buffer_get_64, (%rd32, %r44, %r100, %rd33, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r101, [%rd31];

	// inline asm

	call (%rd37), _rt_callable_program_from_id_64, (%r101);

	// inline asm

	cvt.s32.s16	%r102, %rs1;

	// Callseq Start 3

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r79;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f104;

	st.param.f32	[param1+4], %f105;

	st.param.f32	[param1+8], %f106;

	st.param.b32	[param1+12], %r40;

	st.param.b32	[param1+16], %r41;

	st.param.f32	[param1+20], %f107;

	.param .b32 param2;

	st.param.b32	[param2+0], %r102;

	.param .align 16 .b8 retval0[16];

	prototype_3 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd37, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_3;

	ld.param.f32	%f200, [retval0+0];

	ld.param.f32	%f201, [retval0+4];

	ld.param.f32	%f202, [retval0+8];

	ld.param.f32	%f203, [retval0+12];

	

	//{

	}// Callseq End 3



BB18_6:

	setp.eq.s32	%p12, %r18, 0;

	setp.eq.ftz.f32	%p13, %f11, %f21;

	or.pred  	%p14, %p12, %p13;

	@%p14 bra 	BB18_19;

	bra.uni 	BB18_7;



BB18_19:

	mov.f32 	%f219, %f203;

	mov.f32 	%f218, %f202;

	mov.f32 	%f217, %f201;

	mov.f32 	%f216, %f200;

	bra.uni 	BB18_20;



BB18_7:

	setp.ne.s32	%p15, %r87, -1;

	setp.lt.u32	%p16, %r86, 7;

	and.pred  	%p17, %p15, %p16;

	mov.f32 	%f204, %f125;

	mov.f32 	%f205, %f126;

	mov.f32 	%f206, %f127;

	mov.f32 	%f207, %f128;

	@!%p17 bra 	BB18_9;

	bra.uni 	BB18_8;



BB18_8:

	cvt.u64.u32	%rd41, %r86;

	mov.u64 	%rd46, textureSampleBuff;

	cvta.global.u64 	%rd40, %rd46;

	mov.u32 	%r104, 4;

	// inline asm

	call (%rd39), _rt_buffer_get_64, (%rd40, %r44, %r104, %rd41, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r105, [%rd39];

	// inline asm

	call (%rd45), _rt_callable_program_from_id_64, (%r105);

	// inline asm

	cvt.s32.s16	%r106, %rs1;

	// Callseq Start 4

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r87;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f104;

	st.param.f32	[param1+4], %f105;

	st.param.f32	[param1+8], %f106;

	st.param.b32	[param1+12], %r40;

	st.param.b32	[param1+16], %r41;

	st.param.f32	[param1+20], %f107;

	.param .b32 param2;

	st.param.b32	[param2+0], %r106;

	.param .align 16 .b8 retval0[16];

	prototype_4 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd45, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_4;

	ld.param.f32	%f204, [retval0+0];

	ld.param.f32	%f205, [retval0+4];

	ld.param.f32	%f206, [retval0+8];

	ld.param.f32	%f207, [retval0+12];

	

	//{

	}// Callseq End 4



BB18_9:

	sub.ftz.f32 	%f137, %f106, %f11;

	sub.ftz.f32 	%f138, %f21, %f11;

	div.approx.ftz.f32 	%f139, %f137, %f138;

	cvt.ftz.sat.f32.f32	%f51, %f139;

	mov.f32 	%f219, 0f00000000;

	mov.f32 	%f218, %f219;

	mov.f32 	%f217, %f219;

	mov.f32 	%f216, %f219;

	setp.ne.s32	%p18, %r18, 1;

	@%p18 bra 	BB18_11;



	sub.ftz.f32 	%f140, %f204, %f200;

	sub.ftz.f32 	%f141, %f205, %f201;

	sub.ftz.f32 	%f142, %f206, %f202;

	sub.ftz.f32 	%f143, %f207, %f203;

	fma.rn.ftz.f32 	%f216, %f140, %f51, %f200;

	fma.rn.ftz.f32 	%f217, %f141, %f51, %f201;

	fma.rn.ftz.f32 	%f218, %f142, %f51, %f202;

	fma.rn.ftz.f32 	%f219, %f143, %f51, %f203;



BB18_11:

	setp.ne.s32	%p19, %r18, 2;

	@%p19 bra 	BB18_13;



	mul.ftz.f32 	%f144, %f51, 0f40490FDB;

	cos.approx.ftz.f32 	%f145, %f144;

	mov.f32 	%f146, 0f3F800000;

	sub.ftz.f32 	%f147, %f146, %f145;

	mov.f32 	%f148, 0f40000000;

	div.approx.ftz.f32 	%f149, %f147, %f148;

	sub.ftz.f32 	%f150, %f204, %f200;

	sub.ftz.f32 	%f151, %f205, %f201;

	sub.ftz.f32 	%f152, %f206, %f202;

	sub.ftz.f32 	%f153, %f207, %f203;

	fma.rn.ftz.f32 	%f216, %f150, %f149, %f200;

	fma.rn.ftz.f32 	%f217, %f151, %f149, %f201;

	fma.rn.ftz.f32 	%f218, %f152, %f149, %f202;

	fma.rn.ftz.f32 	%f219, %f153, %f149, %f203;



BB18_13:

	setp.ne.s32	%p20, %r18, 3;

	@%p20 bra 	BB18_20;



	setp.ne.s32	%p21, %r70, -1;

	setp.lt.u32	%p22, %r69, 7;

	and.pred  	%p23, %p21, %p22;

	mov.f32 	%f208, %f117;

	mov.f32 	%f209, %f118;

	mov.f32 	%f210, %f119;

	mov.f32 	%f211, %f120;

	@!%p23 bra 	BB18_16;

	bra.uni 	BB18_15;



BB18_15:

	cvt.u64.u32	%rd49, %r69;

	mov.u64 	%rd54, textureSampleBuff;

	cvta.global.u64 	%rd48, %rd54;

	mov.u32 	%r108, 4;

	// inline asm

	call (%rd47), _rt_buffer_get_64, (%rd48, %r44, %r108, %rd49, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r109, [%rd47];

	// inline asm

	call (%rd53), _rt_callable_program_from_id_64, (%r109);

	// inline asm

	cvt.s32.s16	%r110, %rs1;

	// Callseq Start 5

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r70;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f104;

	st.param.f32	[param1+4], %f105;

	st.param.f32	[param1+8], %f106;

	st.param.b32	[param1+12], %r40;

	st.param.b32	[param1+16], %r41;

	st.param.f32	[param1+20], %f107;

	.param .b32 param2;

	st.param.b32	[param2+0], %r110;

	.param .align 16 .b8 retval0[16];

	prototype_5 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd53, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_5;

	ld.param.f32	%f208, [retval0+0];

	ld.param.f32	%f209, [retval0+4];

	ld.param.f32	%f210, [retval0+8];

	ld.param.f32	%f211, [retval0+12];

	

	//{

	}// Callseq End 5



BB18_16:

	setp.ne.s32	%p24, %r96, -1;

	setp.lt.u32	%p25, %r95, 7;

	and.pred  	%p26, %p24, %p25;

	mov.f32 	%f212, %f129;

	mov.f32 	%f213, %f130;

	mov.f32 	%f214, %f131;

	mov.f32 	%f215, %f132;

	@!%p26 bra 	BB18_18;

	bra.uni 	BB18_17;



BB18_17:

	cvt.u64.u32	%rd57, %r95;

	mov.u64 	%rd62, textureSampleBuff;

	cvta.global.u64 	%rd56, %rd62;

	mov.u32 	%r112, 4;

	// inline asm

	call (%rd55), _rt_buffer_get_64, (%rd56, %r44, %r112, %rd57, %rd5, %rd5, %rd5);

	// inline asm

	ld.u32 	%r113, [%rd55];

	// inline asm

	call (%rd61), _rt_callable_program_from_id_64, (%r113);

	// inline asm

	cvt.s32.s16	%r114, %rs1;

	// Callseq Start 6

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r96;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f104;

	st.param.f32	[param1+4], %f105;

	st.param.f32	[param1+8], %f106;

	st.param.b32	[param1+12], %r40;

	st.param.b32	[param1+16], %r41;

	st.param.f32	[param1+20], %f107;

	.param .b32 param2;

	st.param.b32	[param2+0], %r114;

	.param .align 16 .b8 retval0[16];

	prototype_6 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd61, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_6;

	ld.param.f32	%f212, [retval0+0];

	ld.param.f32	%f213, [retval0+4];

	ld.param.f32	%f214, [retval0+8];

	ld.param.f32	%f215, [retval0+12];

	

	//{

	}// Callseq End 6



BB18_18:

	sub.ftz.f32 	%f154, %f21, %f6;

	rcp.approx.ftz.f32 	%f155, %f154;

	sub.ftz.f32 	%f156, %f204, %f208;

	mul.ftz.f32 	%f157, %f156, %f155;

	sub.ftz.f32 	%f158, %f205, %f209;

	mul.ftz.f32 	%f159, %f158, %f155;

	sub.ftz.f32 	%f160, %f206, %f210;

	mul.ftz.f32 	%f161, %f160, %f155;

	sub.ftz.f32 	%f162, %f207, %f211;

	mul.ftz.f32 	%f163, %f162, %f155;

	sub.ftz.f32 	%f164, %f26, %f11;

	rcp.approx.ftz.f32 	%f165, %f164;

	sub.ftz.f32 	%f166, %f212, %f200;

	mul.ftz.f32 	%f167, %f166, %f165;

	sub.ftz.f32 	%f168, %f213, %f201;

	mul.ftz.f32 	%f169, %f168, %f165;

	sub.ftz.f32 	%f170, %f214, %f202;

	mul.ftz.f32 	%f171, %f170, %f165;

	sub.ftz.f32 	%f172, %f215, %f203;

	mul.ftz.f32 	%f173, %f172, %f165;

	mul.ftz.f32 	%f174, %f51, %f51;

	mul.ftz.f32 	%f175, %f51, %f174;

	add.ftz.f32 	%f176, %f175, %f175;

	mul.ftz.f32 	%f177, %f174, 0f40400000;

	sub.ftz.f32 	%f178, %f176, %f177;

	add.ftz.f32 	%f179, %f178, 0f3F800000;

	add.ftz.f32 	%f180, %f174, %f174;

	sub.ftz.f32 	%f181, %f175, %f180;

	add.ftz.f32 	%f182, %f51, %f181;

	fma.rn.ftz.f32 	%f183, %f175, 0fC0000000, %f177;

	sub.ftz.f32 	%f184, %f175, %f174;

	mul.ftz.f32 	%f186, %f182, %f138;

	mul.ftz.f32 	%f187, %f157, %f186;

	mul.ftz.f32 	%f188, %f159, %f186;

	mul.ftz.f32 	%f189, %f161, %f186;

	mul.ftz.f32 	%f190, %f163, %f186;

	fma.rn.ftz.f32 	%f191, %f200, %f179, %f187;

	fma.rn.ftz.f32 	%f192, %f201, %f179, %f188;

	fma.rn.ftz.f32 	%f193, %f202, %f179, %f189;

	fma.rn.ftz.f32 	%f194, %f203, %f179, %f190;

	fma.rn.ftz.f32 	%f195, %f204, %f183, %f191;

	fma.rn.ftz.f32 	%f196, %f205, %f183, %f192;

	fma.rn.ftz.f32 	%f197, %f206, %f183, %f193;

	fma.rn.ftz.f32 	%f198, %f207, %f183, %f194;

	mul.ftz.f32 	%f199, %f184, %f138;

	fma.rn.ftz.f32 	%f216, %f167, %f199, %f195;

	fma.rn.ftz.f32 	%f217, %f169, %f199, %f196;

	fma.rn.ftz.f32 	%f218, %f171, %f199, %f197;

	fma.rn.ftz.f32 	%f219, %f173, %f199, %f198;



BB18_20:

	st.param.f32	[func_retval0+0], %f216;

	st.param.f32	[func_retval0+4], %f217;

	st.param.f32	[func_retval0+8], %f218;

	st.param.f32	[func_retval0+12], %f219;

	ret;

}



	// .globl	_ZNK15RampTextureData6SampleERK11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZNK15RampTextureData6SampleERK11SamplerInfob(

	.param .b64 _ZNK15RampTextureData6SampleERK11SamplerInfob_param_0,

	.param .b64 _ZNK15RampTextureData6SampleERK11SamplerInfob_param_1,

	.param .b32 _ZNK15RampTextureData6SampleERK11SamplerInfob_param_2

)

{

	.reg .pred 	%p<22>;

	.reg .s16 	%rs<2>;

	.reg .f32 	%f<229>;

	.reg .s32 	%r<126>;

	.reg .s64 	%rd<62>;





	ld.param.u64 	%rd4, [_ZNK15RampTextureData6SampleERK11SamplerInfob_param_0];

	ld.param.u64 	%rd3, [_ZNK15RampTextureData6SampleERK11SamplerInfob_param_1];

	ld.param.s8 	%rs1, [_ZNK15RampTextureData6SampleERK11SamplerInfob_param_2];

	add.s64 	%rd1, %rd4, 4;

	ld.u32 	%r38, [%rd4+4];

	setp.eq.s32	%p1, %r38, 0;

	mov.f32 	%f228, 0f00000000;

	mov.f32 	%f227, %f228;

	mov.f32 	%f226, %f228;

	mov.f32 	%f225, %f228;

	@%p1 bra 	BB19_20;



	ld.u32 	%r1, [%rd1+-4];

	add.s64 	%rd2, %rd3, 8;

	mov.u32 	%r125, 0;



BB19_2:

	mov.u32 	%r124, %r125;

	cvt.s64.s32	%rd6, %r124;

	mov.u32 	%r41, 1;

	mov.u32 	%r42, 48;

	mov.u64 	%rd9, 0;

	// inline asm

	call (%rd5), _rt_buffer_get_id_64, (%r1, %r41, %r42, %rd6, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f107, [%rd2];

	ld.f32 	%f108, [%rd5+32];

	setp.gt.ftz.f32	%p2, %f108, %f107;

	add.s32 	%r125, %r124, 1;

	ld.u32 	%r4, [%rd1];

	@%p2 bra 	BB19_4;



	setp.lt.u32	%p3, %r125, %r4;

	mov.u32 	%r124, %r125;

	@%p3 bra 	BB19_2;



BB19_4:

	add.s32 	%r55, %r4, -1;

	add.s32 	%r56, %r124, -2;

	min.s32 	%r57, %r56, %r55;

	mov.u32 	%r58, 0;

	max.s32 	%r59, %r58, %r57;

	cvt.s64.s32	%rd11, %r59;

	// inline asm

	call (%rd10), _rt_buffer_get_id_64, (%r1, %r41, %r42, %rd11, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f5, [%rd10+32];

	ld.v4.u32 	{%r62, %r63, %r64, %r65}, [%rd10+16];

	ld.v4.f32 	{%f109, %f110, %f111, %f112}, [%rd10];

	ld.u32 	%r66, [%rd1];

	add.s32 	%r67, %r66, -1;

	add.s32 	%r68, %r124, -1;

	min.s32 	%r69, %r68, %r67;

	max.s32 	%r70, %r58, %r69;

	cvt.s64.s32	%rd16, %r70;

	// inline asm

	call (%rd15), _rt_buffer_get_id_64, (%r1, %r41, %r42, %rd16, %rd9, %rd9, %rd9);

	// inline asm

	ld.u32 	%r17, [%rd15+36];

	ld.f32 	%f10, [%rd15+32];

	ld.v4.u32 	{%r73, %r74, %r75, %r76}, [%rd15+16];

	ld.v4.f32 	{%f113, %f114, %f115, %f116}, [%rd15];

	mov.f32 	%f209, %f113;

	mov.f32 	%f210, %f114;

	mov.f32 	%f211, %f115;

	mov.f32 	%f212, %f116;

	ld.u32 	%r77, [%rd1];

	add.s32 	%r78, %r77, -1;

	min.s32 	%r79, %r124, %r78;

	max.s32 	%r80, %r58, %r79;

	cvt.s64.s32	%rd21, %r80;

	// inline asm

	call (%rd20), _rt_buffer_get_id_64, (%r1, %r41, %r42, %rd21, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f20, [%rd20+32];

	ld.v4.u32 	{%r83, %r84, %r85, %r86}, [%rd20+16];

	ld.v4.f32 	{%f117, %f118, %f119, %f120}, [%rd20];

	ld.u32 	%r87, [%rd1];

	add.s32 	%r88, %r87, -1;

	add.s32 	%r89, %r124, 1;

	min.s32 	%r90, %r89, %r88;

	max.s32 	%r91, %r58, %r90;

	cvt.s64.s32	%rd26, %r91;

	// inline asm

	call (%rd25), _rt_buffer_get_id_64, (%r1, %r41, %r42, %rd26, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f25, [%rd25+32];

	ld.v4.u32 	{%r94, %r95, %r96, %r97}, [%rd25+16];

	ld.v4.f32 	{%f121, %f122, %f123, %f124}, [%rd25];

	setp.ne.s32	%p4, %r74, -1;

	setp.lt.u32	%p5, %r73, 7;

	and.pred  	%p6, %p4, %p5;

	@!%p6 bra 	BB19_6;

	bra.uni 	BB19_5;



BB19_5:

	cvt.u64.u32	%rd32, %r73;

	mov.u64 	%rd37, textureSampleBuff;

	cvta.global.u64 	%rd31, %rd37;

	mov.u32 	%r99, 4;

	// inline asm

	call (%rd30), _rt_buffer_get_64, (%rd31, %r41, %r99, %rd32, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f125, [%rd3+20];

	ld.u32 	%r101, [%rd3+16];

	ld.u32 	%r102, [%rd3+12];

	ld.f32 	%f126, [%rd3+8];

	ld.f32 	%f127, [%rd3+4];

	ld.f32 	%f128, [%rd3];

	ld.u32 	%r100, [%rd30];

	// inline asm

	call (%rd36), _rt_callable_program_from_id_64, (%r100);

	// inline asm

	cvt.s32.s16	%r103, %rs1;

	// Callseq Start 7

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r74;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f128;

	st.param.f32	[param1+4], %f127;

	st.param.f32	[param1+8], %f126;

	st.param.b32	[param1+12], %r102;

	st.param.b32	[param1+16], %r101;

	st.param.f32	[param1+20], %f125;

	.param .b32 param2;

	st.param.b32	[param2+0], %r103;

	.param .align 16 .b8 retval0[16];

	prototype_7 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd36, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_7;

	ld.param.f32	%f209, [retval0+0];

	ld.param.f32	%f210, [retval0+4];

	ld.param.f32	%f211, [retval0+8];

	ld.param.f32	%f212, [retval0+12];

	

	//{

	}// Callseq End 7



BB19_6:

	setp.eq.s32	%p7, %r17, 0;

	setp.eq.ftz.f32	%p8, %f10, %f20;

	or.pred  	%p9, %p7, %p8;

	@%p9 bra 	BB19_19;

	bra.uni 	BB19_7;



BB19_19:

	mov.f32 	%f228, %f212;

	mov.f32 	%f227, %f211;

	mov.f32 	%f226, %f210;

	mov.f32 	%f225, %f209;

	bra.uni 	BB19_20;



BB19_7:

	setp.ne.s32	%p10, %r84, -1;

	setp.lt.u32	%p11, %r83, 7;

	and.pred  	%p12, %p10, %p11;

	mov.f32 	%f213, %f117;

	mov.f32 	%f214, %f118;

	mov.f32 	%f215, %f119;

	mov.f32 	%f216, %f120;

	@!%p12 bra 	BB19_9;

	bra.uni 	BB19_8;



BB19_8:

	cvt.u64.u32	%rd40, %r83;

	mov.u64 	%rd45, textureSampleBuff;

	cvta.global.u64 	%rd39, %rd45;

	mov.u32 	%r105, 4;

	// inline asm

	call (%rd38), _rt_buffer_get_64, (%rd39, %r41, %r105, %rd40, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f129, [%rd3+20];

	ld.u32 	%r107, [%rd3+16];

	ld.u32 	%r108, [%rd3+12];

	ld.f32 	%f130, [%rd3+8];

	ld.f32 	%f131, [%rd3+4];

	ld.f32 	%f132, [%rd3];

	ld.u32 	%r106, [%rd38];

	// inline asm

	call (%rd44), _rt_callable_program_from_id_64, (%r106);

	// inline asm

	cvt.s32.s16	%r109, %rs1;

	// Callseq Start 8

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r84;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f132;

	st.param.f32	[param1+4], %f131;

	st.param.f32	[param1+8], %f130;

	st.param.b32	[param1+12], %r108;

	st.param.b32	[param1+16], %r107;

	st.param.f32	[param1+20], %f129;

	.param .b32 param2;

	st.param.b32	[param2+0], %r109;

	.param .align 16 .b8 retval0[16];

	prototype_8 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd44, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_8;

	ld.param.f32	%f213, [retval0+0];

	ld.param.f32	%f214, [retval0+4];

	ld.param.f32	%f215, [retval0+8];

	ld.param.f32	%f216, [retval0+12];

	

	//{

	}// Callseq End 8



BB19_9:

	ld.f32 	%f137, [%rd3+8];

	sub.ftz.f32 	%f138, %f137, %f10;

	sub.ftz.f32 	%f139, %f20, %f10;

	div.approx.ftz.f32 	%f140, %f138, %f139;

	cvt.ftz.sat.f32.f32	%f50, %f140;

	mov.f32 	%f228, 0f00000000;

	mov.f32 	%f227, %f228;

	mov.f32 	%f226, %f228;

	mov.f32 	%f225, %f228;

	setp.ne.s32	%p13, %r17, 1;

	@%p13 bra 	BB19_11;



	sub.ftz.f32 	%f141, %f213, %f209;

	sub.ftz.f32 	%f142, %f214, %f210;

	sub.ftz.f32 	%f143, %f215, %f211;

	sub.ftz.f32 	%f144, %f216, %f212;

	fma.rn.ftz.f32 	%f225, %f141, %f50, %f209;

	fma.rn.ftz.f32 	%f226, %f142, %f50, %f210;

	fma.rn.ftz.f32 	%f227, %f143, %f50, %f211;

	fma.rn.ftz.f32 	%f228, %f144, %f50, %f212;



BB19_11:

	setp.ne.s32	%p14, %r17, 2;

	@%p14 bra 	BB19_13;



	mul.ftz.f32 	%f145, %f50, 0f40490FDB;

	cos.approx.ftz.f32 	%f146, %f145;

	mov.f32 	%f147, 0f3F800000;

	sub.ftz.f32 	%f148, %f147, %f146;

	mov.f32 	%f149, 0f40000000;

	div.approx.ftz.f32 	%f150, %f148, %f149;

	sub.ftz.f32 	%f151, %f213, %f209;

	sub.ftz.f32 	%f152, %f214, %f210;

	sub.ftz.f32 	%f153, %f215, %f211;

	sub.ftz.f32 	%f154, %f216, %f212;

	fma.rn.ftz.f32 	%f225, %f151, %f150, %f209;

	fma.rn.ftz.f32 	%f226, %f152, %f150, %f210;

	fma.rn.ftz.f32 	%f227, %f153, %f150, %f211;

	fma.rn.ftz.f32 	%f228, %f154, %f150, %f212;



BB19_13:

	setp.ne.s32	%p15, %r17, 3;

	@%p15 bra 	BB19_20;



	setp.ne.s32	%p16, %r63, -1;

	setp.lt.u32	%p17, %r62, 7;

	and.pred  	%p18, %p16, %p17;

	mov.f32 	%f217, %f109;

	mov.f32 	%f218, %f110;

	mov.f32 	%f219, %f111;

	mov.f32 	%f220, %f112;

	@!%p18 bra 	BB19_16;

	bra.uni 	BB19_15;



BB19_15:

	cvt.u64.u32	%rd48, %r62;

	mov.u64 	%rd53, textureSampleBuff;

	cvta.global.u64 	%rd47, %rd53;

	mov.u32 	%r111, 4;

	// inline asm

	call (%rd46), _rt_buffer_get_64, (%rd47, %r41, %r111, %rd48, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f155, [%rd3+20];

	ld.u32 	%r113, [%rd3+16];

	ld.u32 	%r114, [%rd3+12];

	ld.f32 	%f156, [%rd3+8];

	ld.f32 	%f157, [%rd3+4];

	ld.f32 	%f158, [%rd3];

	ld.u32 	%r112, [%rd46];

	// inline asm

	call (%rd52), _rt_callable_program_from_id_64, (%r112);

	// inline asm

	cvt.s32.s16	%r115, %rs1;

	// Callseq Start 9

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r63;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f158;

	st.param.f32	[param1+4], %f157;

	st.param.f32	[param1+8], %f156;

	st.param.b32	[param1+12], %r114;

	st.param.b32	[param1+16], %r113;

	st.param.f32	[param1+20], %f155;

	.param .b32 param2;

	st.param.b32	[param2+0], %r115;

	.param .align 16 .b8 retval0[16];

	prototype_9 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd52, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_9;

	ld.param.f32	%f217, [retval0+0];

	ld.param.f32	%f218, [retval0+4];

	ld.param.f32	%f219, [retval0+8];

	ld.param.f32	%f220, [retval0+12];

	

	//{

	}// Callseq End 9



BB19_16:

	setp.ne.s32	%p19, %r95, -1;

	setp.lt.u32	%p20, %r94, 7;

	and.pred  	%p21, %p19, %p20;

	mov.f32 	%f221, %f121;

	mov.f32 	%f222, %f122;

	mov.f32 	%f223, %f123;

	mov.f32 	%f224, %f124;

	@!%p21 bra 	BB19_18;

	bra.uni 	BB19_17;



BB19_17:

	cvt.u64.u32	%rd56, %r94;

	mov.u64 	%rd61, textureSampleBuff;

	cvta.global.u64 	%rd55, %rd61;

	mov.u32 	%r117, 4;

	// inline asm

	call (%rd54), _rt_buffer_get_64, (%rd55, %r41, %r117, %rd56, %rd9, %rd9, %rd9);

	// inline asm

	ld.f32 	%f159, [%rd3+20];

	ld.u32 	%r119, [%rd3+16];

	ld.u32 	%r120, [%rd3+12];

	ld.f32 	%f160, [%rd3+8];

	ld.f32 	%f161, [%rd3+4];

	ld.f32 	%f162, [%rd3];

	ld.u32 	%r118, [%rd54];

	// inline asm

	call (%rd60), _rt_callable_program_from_id_64, (%r118);

	// inline asm

	cvt.s32.s16	%r121, %rs1;

	// Callseq Start 10

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r95;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f162;

	st.param.f32	[param1+4], %f161;

	st.param.f32	[param1+8], %f160;

	st.param.b32	[param1+12], %r120;

	st.param.b32	[param1+16], %r119;

	st.param.f32	[param1+20], %f159;

	.param .b32 param2;

	st.param.b32	[param2+0], %r121;

	.param .align 16 .b8 retval0[16];

	prototype_10 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd60, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_10;

	ld.param.f32	%f221, [retval0+0];

	ld.param.f32	%f222, [retval0+4];

	ld.param.f32	%f223, [retval0+8];

	ld.param.f32	%f224, [retval0+12];

	

	//{

	}// Callseq End 10



BB19_18:

	sub.ftz.f32 	%f163, %f20, %f5;

	rcp.approx.ftz.f32 	%f164, %f163;

	sub.ftz.f32 	%f165, %f213, %f217;

	mul.ftz.f32 	%f166, %f165, %f164;

	sub.ftz.f32 	%f167, %f214, %f218;

	mul.ftz.f32 	%f168, %f167, %f164;

	sub.ftz.f32 	%f169, %f215, %f219;

	mul.ftz.f32 	%f170, %f169, %f164;

	sub.ftz.f32 	%f171, %f216, %f220;

	mul.ftz.f32 	%f172, %f171, %f164;

	sub.ftz.f32 	%f173, %f25, %f10;

	rcp.approx.ftz.f32 	%f174, %f173;

	sub.ftz.f32 	%f175, %f221, %f209;

	mul.ftz.f32 	%f176, %f175, %f174;

	sub.ftz.f32 	%f177, %f222, %f210;

	mul.ftz.f32 	%f178, %f177, %f174;

	sub.ftz.f32 	%f179, %f223, %f211;

	mul.ftz.f32 	%f180, %f179, %f174;

	sub.ftz.f32 	%f181, %f224, %f212;

	mul.ftz.f32 	%f182, %f181, %f174;

	mul.ftz.f32 	%f183, %f50, %f50;

	mul.ftz.f32 	%f184, %f50, %f183;

	add.ftz.f32 	%f185, %f184, %f184;

	mul.ftz.f32 	%f186, %f183, 0f40400000;

	sub.ftz.f32 	%f187, %f185, %f186;

	add.ftz.f32 	%f188, %f187, 0f3F800000;

	add.ftz.f32 	%f189, %f183, %f183;

	sub.ftz.f32 	%f190, %f184, %f189;

	add.ftz.f32 	%f191, %f50, %f190;

	fma.rn.ftz.f32 	%f192, %f184, 0fC0000000, %f186;

	sub.ftz.f32 	%f193, %f184, %f183;

	mul.ftz.f32 	%f195, %f191, %f139;

	mul.ftz.f32 	%f196, %f166, %f195;

	mul.ftz.f32 	%f197, %f168, %f195;

	mul.ftz.f32 	%f198, %f170, %f195;

	mul.ftz.f32 	%f199, %f172, %f195;

	fma.rn.ftz.f32 	%f200, %f209, %f188, %f196;

	fma.rn.ftz.f32 	%f201, %f210, %f188, %f197;

	fma.rn.ftz.f32 	%f202, %f211, %f188, %f198;

	fma.rn.ftz.f32 	%f203, %f212, %f188, %f199;

	fma.rn.ftz.f32 	%f204, %f213, %f192, %f200;

	fma.rn.ftz.f32 	%f205, %f214, %f192, %f201;

	fma.rn.ftz.f32 	%f206, %f215, %f192, %f202;

	fma.rn.ftz.f32 	%f207, %f216, %f192, %f203;

	mul.ftz.f32 	%f208, %f193, %f139;

	fma.rn.ftz.f32 	%f225, %f176, %f208, %f204;

	fma.rn.ftz.f32 	%f226, %f178, %f208, %f205;

	fma.rn.ftz.f32 	%f227, %f180, %f208, %f206;

	fma.rn.ftz.f32 	%f228, %f182, %f208, %f207;



BB19_20:

	st.param.f32	[func_retval0+0], %f225;

	st.param.f32	[func_retval0+4], %f226;

	st.param.f32	[func_retval0+8], %f227;

	st.param.f32	[func_retval0+12], %f228;

	ret;

}



	// .globl	_Z19BufferTextureSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z19BufferTextureSamplei11SamplerInfob(

	.param .b32 _Z19BufferTextureSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z19BufferTextureSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z19BufferTextureSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<13>;

	.reg .s16 	%rs<11>;

	.reg .f32 	%f<90>;

	.reg .s32 	%r<32>;

	.reg .s64 	%rd<28>;





	ld.param.u32 	%r7, [_Z19BufferTextureSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f51, [_Z19BufferTextureSamplei11SamplerInfob_param_1+8];

	ld.global.u32 	%r1, [objectsDataBuffers+16];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r7, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r10, [objectsDataBuffers+48];

	setp.gt.u32	%p4, %r10, %r7;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f89, 0f00000000;

	mov.f32 	%f88, %f89;

	mov.f32 	%f87, %f89;

	mov.f32 	%f86, %f89;

	@!%p5 bra 	BB20_16;

	bra.uni 	BB20_1;



BB20_1:

	cvt.s64.s32	%rd2, %r7;

	mov.u32 	%r12, 1;

	mov.u32 	%r13, 20;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r12, %r13, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f3, [%rd1+12];

	ld.f32 	%f2, [%rd1+8];

	ld.u32 	%r2, [%rd1];

	ld.v4.u8 	{%rs6, %rs7, %rs8, %rs9}, [%rd1+16];

	ld.u32 	%r3, [%rd1+4];

	cvt.rn.f32.u32	%f57, %r3;

	setp.eq.s16	%p6, %rs6, 0;

	selp.f32	%f58, 0f3F800000, 0f40400000, %p6;

	fma.rn.ftz.f32 	%f4, %f57, %f58, 0fBF800000;

	setp.eq.s16	%p7, %rs7, 0;

	@%p7 bra 	BB20_3;



	sub.ftz.f32 	%f59, %f3, %f2;

	sub.ftz.f32 	%f60, %f51, %f2;

	div.approx.ftz.f32 	%f61, %f60, %f59;

	cvt.ftz.sat.f32.f32	%f62, %f61;

	mul.ftz.f32 	%f72, %f4, %f62;

	bra.uni 	BB20_4;



BB20_3:

	min.ftz.f32 	%f63, %f51, %f4;

	mov.f32 	%f64, 0f00000000;

	max.ftz.f32 	%f72, %f64, %f63;



BB20_4:

	cvt.rmi.ftz.f32.f32	%f65, %f72;

	cvt.rzi.ftz.u32.f32	%r5, %f65;

	cvt.rpi.ftz.f32.f32	%f66, %f72;

	cvt.rzi.ftz.u32.f32	%r6, %f66;

	and.b16  	%rs10, %rs6, 255;

	setp.eq.s16	%p8, %rs10, 0;

	@%p8 bra 	BB20_14;



	mul.wide.u32 	%rd11, %r5, -1431655765;

	shr.u64 	%rd7, %rd11, 33;

	cvt.u32.u64	%r18, %rd7;

	mov.u32 	%r16, 12;

	// inline asm

	call (%rd6), _rt_buffer_get_id_64, (%r2, %r12, %r16, %rd7, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f10, [%rd6+8];

	ld.f32 	%f80, [%rd6+4];

	ld.f32 	%f8, [%rd6];

	mul.lo.s32 	%r19, %r18, 3;

	sub.s32 	%r17, %r5, %r19;

	setp.eq.s32	%p9, %r17, 1;

	@%p9 bra 	BB20_9;



	setp.ne.s32	%p10, %r17, 2;

	@%p10 bra 	BB20_8;



	mov.f32 	%f80, %f10;

	bra.uni 	BB20_9;



BB20_14:

	cvt.u64.u32	%rd19, %r5;

	mov.u32 	%r31, 12;

	// inline asm

	call (%rd18), _rt_buffer_get_id_64, (%r2, %r12, %r31, %rd19, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f79, [%rd18];

	ld.f32 	%f78, [%rd18+4];

	ld.f32 	%f77, [%rd18+8];

	cvt.u64.u32	%rd24, %r6;

	// inline asm

	call (%rd23), _rt_buffer_get_id_64, (%r2, %r12, %r31, %rd24, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f73, [%rd23+8];

	ld.f32 	%f83, [%rd23+4];

	ld.f32 	%f84, [%rd23];

	bra.uni 	BB20_15;



BB20_8:

	mov.f32 	%f80, %f8;



BB20_9:

	mov.f32 	%f79, %f80;

	mul.wide.u32 	%rd17, %r6, -1431655765;

	shr.u64 	%rd13, %rd17, 33;

	cvt.u32.u64	%r24, %rd13;

	// inline asm

	call (%rd12), _rt_buffer_get_id_64, (%r2, %r12, %r16, %rd13, %rd5, %rd5, %rd5);

	// inline asm

	ld.f32 	%f17, [%rd12+8];

	ld.f32 	%f85, [%rd12+4];

	ld.f32 	%f15, [%rd12];

	mul.lo.s32 	%r25, %r24, 3;

	sub.s32 	%r23, %r6, %r25;

	setp.eq.s32	%p11, %r23, 1;

	@%p11 bra 	BB20_13;



	setp.ne.s32	%p12, %r23, 2;

	@%p12 bra 	BB20_12;



	mov.f32 	%f85, %f17;

	bra.uni 	BB20_13;



BB20_12:

	mov.f32 	%f85, %f15;



BB20_13:

	mov.f32 	%f84, %f85;

	mov.f32 	%f73, %f84;

	mov.f32 	%f78, %f79;

	mov.f32 	%f77, %f79;

	mov.f32 	%f83, %f84;



BB20_15:

	cvt.rn.f32.u32	%f67, %r5;

	sub.ftz.f32 	%f68, %f72, %f67;

	sub.ftz.f32 	%f69, %f73, %f77;

	sub.ftz.f32 	%f70, %f84, %f79;

	sub.ftz.f32 	%f71, %f83, %f78;

	fma.rn.ftz.f32 	%f86, %f68, %f70, %f79;

	fma.rn.ftz.f32 	%f87, %f68, %f71, %f78;

	fma.rn.ftz.f32 	%f88, %f68, %f69, %f77;

	mov.f32 	%f89, 0f3F800000;



BB20_16:

	st.param.f32	[func_retval0+0], %f86;

	st.param.f32	[func_retval0+4], %f87;

	st.param.f32	[func_retval0+8], %f88;

	st.param.f32	[func_retval0+12], %f89;

	ret;

}



	// .globl	_ZNK17BufferTextureData6SampleERK11SamplerInfo

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZNK17BufferTextureData6SampleERK11SamplerInfo(

	.param .b64 _ZNK17BufferTextureData6SampleERK11SamplerInfo_param_0,

	.param .b64 _ZNK17BufferTextureData6SampleERK11SamplerInfo_param_1

)

{

	.reg .pred 	%p<8>;

	.reg .s16 	%rs<5>;

	.reg .f32 	%f<74>;

	.reg .s32 	%r<23>;

	.reg .s64 	%rd<26>;





	ld.param.u64 	%rd2, [_ZNK17BufferTextureData6SampleERK11SamplerInfo_param_0];

	ld.param.u64 	%rd3, [_ZNK17BufferTextureData6SampleERK11SamplerInfo_param_1];

	add.s64 	%rd1, %rd2, 4;

	ld.u32 	%r4, [%rd2+4];

	cvt.rn.f32.u32	%f39, %r4;

	ld.v2.u8 	{%rs2, %rs3}, [%rd2+16];

	setp.eq.s16	%p1, %rs2, 0;

	selp.f32	%f40, 0f3F800000, 0f40400000, %p1;

	fma.rn.ftz.f32 	%f1, %f39, %f40, 0fBF800000;

	setp.eq.s16	%p2, %rs3, 0;

	ld.f32 	%f2, [%rd3+8];

	@%p2 bra 	BB21_2;



	ld.f32 	%f41, [%rd1+4];

	sub.ftz.f32 	%f42, %f2, %f41;

	ld.f32 	%f43, [%rd1+8];

	sub.ftz.f32 	%f44, %f43, %f41;

	div.approx.ftz.f32 	%f45, %f42, %f44;

	cvt.ftz.sat.f32.f32	%f46, %f45;

	mul.ftz.f32 	%f60, %f1, %f46;

	bra.uni 	BB21_3;



BB21_2:

	min.ftz.f32 	%f47, %f2, %f1;

	mov.f32 	%f48, 0f00000000;

	max.ftz.f32 	%f60, %f48, %f47;



BB21_3:

	cvt.rmi.ftz.f32.f32	%f49, %f60;

	cvt.rzi.ftz.u32.f32	%r1, %f49;

	cvt.rpi.ftz.f32.f32	%f50, %f60;

	cvt.rzi.ftz.u32.f32	%r2, %f50;

	ld.u32 	%r3, [%rd1+-4];

	and.b16  	%rs4, %rs2, 255;

	setp.eq.s16	%p3, %rs4, 0;

	@%p3 bra 	BB21_13;



	mul.wide.u32 	%rd9, %r1, -1431655765;

	shr.u64 	%rd5, %rd9, 33;

	cvt.u32.u64	%r9, %rd5;

	mov.u32 	%r6, 1;

	mov.u32 	%r7, 12;

	mov.u64 	%rd8, 0;

	// inline asm

	call (%rd4), _rt_buffer_get_id_64, (%r3, %r6, %r7, %rd5, %rd8, %rd8, %rd8);

	// inline asm

	ld.f32 	%f8, [%rd4+8];

	ld.f32 	%f68, [%rd4+4];

	ld.f32 	%f6, [%rd4];

	mul.lo.s32 	%r10, %r9, 3;

	sub.s32 	%r8, %r1, %r10;

	setp.eq.s32	%p4, %r8, 1;

	@%p4 bra 	BB21_8;



	setp.ne.s32	%p5, %r8, 2;

	@%p5 bra 	BB21_7;



	mov.f32 	%f68, %f8;

	bra.uni 	BB21_8;



BB21_13:

	cvt.u64.u32	%rd17, %r1;

	mov.u32 	%r21, 1;

	mov.u32 	%r22, 12;

	mov.u64 	%rd25, 0;

	// inline asm

	call (%rd16), _rt_buffer_get_id_64, (%r3, %r21, %r22, %rd17, %rd25, %rd25, %rd25);

	// inline asm

	ld.f32 	%f67, [%rd16];

	ld.f32 	%f66, [%rd16+4];

	ld.f32 	%f65, [%rd16+8];

	ld.u32 	%r20, [%rd1+-4];

	cvt.u64.u32	%rd22, %r2;

	// inline asm

	call (%rd21), _rt_buffer_get_id_64, (%r20, %r21, %r22, %rd22, %rd25, %rd25, %rd25);

	// inline asm

	ld.f32 	%f61, [%rd21+8];

	ld.f32 	%f71, [%rd21+4];

	ld.f32 	%f72, [%rd21];

	bra.uni 	BB21_14;



BB21_7:

	mov.f32 	%f68, %f6;



BB21_8:

	mov.f32 	%f67, %f68;

	ld.u32 	%r11, [%rd1+-4];

	mul.wide.u32 	%rd15, %r2, -1431655765;

	shr.u64 	%rd11, %rd15, 33;

	cvt.u32.u64	%r15, %rd11;

	// inline asm

	call (%rd10), _rt_buffer_get_id_64, (%r11, %r6, %r7, %rd11, %rd8, %rd8, %rd8);

	// inline asm

	ld.f32 	%f15, [%rd10+8];

	ld.f32 	%f73, [%rd10+4];

	ld.f32 	%f13, [%rd10];

	mul.lo.s32 	%r16, %r15, 3;

	sub.s32 	%r14, %r2, %r16;

	setp.eq.s32	%p6, %r14, 1;

	@%p6 bra 	BB21_12;



	setp.ne.s32	%p7, %r14, 2;

	@%p7 bra 	BB21_11;



	mov.f32 	%f73, %f15;

	bra.uni 	BB21_12;



BB21_11:

	mov.f32 	%f73, %f13;



BB21_12:

	mov.f32 	%f72, %f73;

	mov.f32 	%f61, %f72;

	mov.f32 	%f66, %f67;

	mov.f32 	%f65, %f67;

	mov.f32 	%f71, %f72;



BB21_14:

	cvt.rn.f32.u32	%f51, %r1;

	sub.ftz.f32 	%f52, %f60, %f51;

	sub.ftz.f32 	%f53, %f61, %f65;

	sub.ftz.f32 	%f54, %f72, %f67;

	sub.ftz.f32 	%f55, %f71, %f66;

	fma.rn.ftz.f32 	%f56, %f52, %f54, %f67;

	fma.rn.ftz.f32 	%f57, %f52, %f55, %f66;

	fma.rn.ftz.f32 	%f58, %f52, %f53, %f65;

	st.param.f32	[func_retval0+0], %f56;

	st.param.f32	[func_retval0+4], %f57;

	st.param.f32	[func_retval0+8], %f58;

	mov.f32 	%f59, 0f3F800000;

	st.param.f32	[func_retval0+12], %f59;

	ret;

}



	// .globl	_Z15Texture3DSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z15Texture3DSamplei11SamplerInfob(

	.param .b32 _Z15Texture3DSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z15Texture3DSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z15Texture3DSamplei11SamplerInfob_param_2

)

{

	.reg .pred 	%p<8>;

	.reg .s16 	%rs<14>;

	.reg .f32 	%f<44>;

	.reg .s32 	%r<19>;

	.reg .s64 	%rd<6>;





	ld.param.u32 	%r4, [_Z15Texture3DSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f18, [_Z15Texture3DSamplei11SamplerInfob_param_1+8];

	ld.param.f32 	%f17, [_Z15Texture3DSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f16, [_Z15Texture3DSamplei11SamplerInfob_param_1];

	ld.global.u32 	%r1, [objectsDataBuffers+20];

	setp.ne.s32	%p1, %r1, 0;

	setp.gt.s32	%p2, %r4, -1;

	and.pred  	%p3, %p2, %p1;

	ld.global.u32 	%r7, [objectsDataBuffers+52];

	setp.gt.u32	%p4, %r7, %r4;

	and.pred  	%p5, %p3, %p4;

	mov.f32 	%f43, 0f00000000;

	mov.f32 	%f42, %f43;

	mov.f32 	%f41, %f43;

	mov.f32 	%f40, %f43;

	@!%p5 bra 	BB22_5;

	bra.uni 	BB22_1;



BB22_1:

	cvt.s64.s32	%rd2, %r4;

	mov.u32 	%r9, 1;

	mov.u32 	%r10, 8;

	mov.u64 	%rd5, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_id_64, (%r1, %r9, %r10, %rd2, %rd5, %rd5, %rd5);

	// inline asm

	ld.v4.u8 	{%rs5, %rs6, %rs7, %rs8}, [%rd1+4];

	ld.u32 	%r3, [%rd1];

	setp.eq.s32	%p6, %r3, 0;

	mov.f32 	%f43, 0f3F800000;

	mov.f32 	%f42, 0f00000000;

	mov.f32 	%f41, %f42;

	mov.f32 	%f40, %f42;

	@%p6 bra 	BB22_5;



	and.b16  	%rs9, %rs5, 255;

	setp.eq.s16	%p7, %rs9, 0;

	@%p7 bra 	BB22_4;



	mov.u32 	%r16, 3;

	mov.f32 	%f31, 0f00000000;

	// inline asm

	call (%r11, %r12, %r13, %r14), _rt_texture_get_u_id, (%r3, %r16, %f16, %f17, %f18, %f31);

	// inline asm

	cvt.u16.u32	%rs10, %r11;

	cvt.u16.u32	%rs11, %r12;

	cvt.u16.u32	%rs12, %r13;

	cvt.u16.u32	%rs13, %r14;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs10;

	cvt.f32.f16 	%f40, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs11;

	cvt.f32.f16 	%f41, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs12;

	cvt.f32.f16 	%f42, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs13;

	cvt.f32.f16 	%f43, %temp;

	}

	bra.uni 	BB22_5;



BB22_4:

	mov.u32 	%r18, 3;

	mov.f32 	%f39, 0f00000000;

	// inline asm

	call (%f32, %f33, %f34, %f35), _rt_texture_get_f_id, (%r3, %r18, %f16, %f17, %f18, %f39);

	// inline asm

	mov.f32 	%f43, %f35;

	mov.f32 	%f42, %f34;

	mov.f32 	%f41, %f33;

	mov.f32 	%f40, %f32;



BB22_5:

	st.param.f32	[func_retval0+0], %f40;

	st.param.f32	[func_retval0+4], %f41;

	st.param.f32	[func_retval0+8], %f42;

	st.param.f32	[func_retval0+12], %f43;

	ret;

}



	// .globl	_Z22TextureParticlesSamplei11SamplerInfob

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z22TextureParticlesSamplei11SamplerInfob(

	.param .b32 _Z22TextureParticlesSamplei11SamplerInfob_param_0,

	.param .align 4 .b8 _Z22TextureParticlesSamplei11SamplerInfob_param_1[24],

	.param .b32 _Z22TextureParticlesSamplei11SamplerInfob_param_2

)

{

	.local .align 16 .b8 	__local_depot23[192];

	.reg .b64 	%SP;

	.reg .b64 	%SPL;

	.reg .pred 	%p<40>;

	.reg .s16 	%rs<42>;

	.reg .f32 	%f<199>;

	.reg .s32 	%r<96>;

	.reg .s64 	%rd<92>;





	mov.u64 	%rd91, __local_depot23;

	cvta.local.u64 	%SP, %rd91;

	ld.param.u32 	%r24, [_Z22TextureParticlesSamplei11SamplerInfob_param_0];

	ld.param.f32 	%f108, [_Z22TextureParticlesSamplei11SamplerInfob_param_1+20];

	ld.param.u32 	%r26, [_Z22TextureParticlesSamplei11SamplerInfob_param_1+16];

	ld.param.f32 	%f106, [_Z22TextureParticlesSamplei11SamplerInfob_param_1+4];

	ld.param.f32 	%f105, [_Z22TextureParticlesSamplei11SamplerInfob_param_1];

	ld.param.u32 	%r25, [_Z22TextureParticlesSamplei11SamplerInfob_param_1+12];

	ld.param.s8 	%rs17, [_Z22TextureParticlesSamplei11SamplerInfob_param_2];

	ld.global.u32 	%r27, [objectsDataBuffers+56];

	setp.lt.u32	%p5, %r25, %r27;

	ld.global.u32 	%r1, [objectsDataBuffers+24];

	setp.ne.s32	%p6, %r1, 0;

	and.pred  	%p7, %p5, %p6;

	mov.f32 	%f198, 0f00000000;

	mov.f32 	%f197, %f198;

	mov.f32 	%f196, %f198;

	mov.f32 	%f195, %f198;

	@!%p7 bra 	BB23_44;

	bra.uni 	BB23_1;



BB23_1:

	add.u64 	%rd15, %SP, 0;

	cvta.to.local.u64 	%rd1, %rd15;

	cvt.u64.u32	%rd11, %r25;

	mov.u32 	%r29, 1;

	mov.u32 	%r30, 192;

	mov.u64 	%rd14, 0;

	// inline asm

	call (%rd10), _rt_buffer_get_id_64, (%r1, %r29, %r30, %rd11, %rd14, %rd14, %rd14);

	// inline asm

	mov.u32 	%r87, 0;



BB23_2:

	mul.wide.s32 	%rd16, %r87, 16;

	add.s64 	%rd17, %rd10, %rd16;

	ld.v2.u64 	{%rd18, %rd19}, [%rd17];

	add.s64 	%rd22, %rd1, %rd16;

	st.local.v2.u64 	[%rd22], {%rd18, %rd19};

	add.s32 	%r87, %r87, 1;

	setp.lt.u32	%p8, %r87, 12;

	@%p8 bra 	BB23_2;



	mul.wide.u32 	%rd23, %r24, 64;

	add.s64 	%rd24, %rd1, %rd23;

	add.s64 	%rd4, %rd24, 32;

	ld.local.v4.f32 	{%f113, %f114, %f115, %f116}, [%rd24+32];

	mov.f32 	%f176, %f113;

	mov.f32 	%f175, %f114;

	mov.f32 	%f174, %f115;

	mov.f32 	%f184, %f116;

	ld.local.u32 	%r4, [%rd24+48];

	setp.eq.s32	%p9, %r4, 0;

	@%p9 bra 	BB23_22;



	ld.local.u32 	%r32, [%rd4+20];

	setp.eq.s32	%p10, %r32, 259;

	@%p10 bra 	BB23_13;

	bra.uni 	BB23_5;



BB23_13:

	mov.u32 	%r45, 2;

	mov.u32 	%r46, 16;

	// inline asm

	call (%rd39, %rd40, %rd41, %rd42), _rt_buffer_get_id_size_64, (%r4, %r45, %r46);

	// inline asm

	mov.f32 	%f162, 0f00000000;

	mov.u32 	%r91, 0;

	mov.u32 	%r90, %r91;

	setp.lt.u64	%p17, %rd40, 2;

	@%p17 bra 	BB23_15;



	cvt.rmi.ftz.f32.f32	%f124, %f108;

	cvt.rzi.ftz.u32.f32	%r91, %f124;

	cvt.rpi.ftz.f32.f32	%f125, %f108;

	cvt.rzi.ftz.u32.f32	%r90, %f125;

	cvt.rn.f32.u32	%f126, %r91;

	sub.ftz.f32 	%f162, %f108, %f126;



BB23_15:

	cvt.u64.u32	%rd44, %r26;

	cvt.u64.u32	%rd45, %r91;

	// inline asm

	call (%rd43), _rt_buffer_get_id_64, (%r4, %r45, %r46, %rd44, %rd45, %rd14, %rd14);

	// inline asm

	ld.f32 	%f23, [%rd43+8];

	ld.f32 	%f22, [%rd43+4];

	ld.f32 	%f21, [%rd43];

	ld.v4.u8 	{%rs24, %rs25, %rs26, %rs27}, [%rd43+12];

	mov.f32 	%f182, %f21;

	mov.f32 	%f180, %f22;

	mov.f32 	%f178, %f23;

	setp.eq.s32	%p18, %r91, %r90;

	@%p18 bra 	BB23_20;



	and.b16  	%rs28, %rs24, 255;

	cvt.u64.u32	%rd50, %r90;

	// inline asm

	call (%rd48), _rt_buffer_get_id_64, (%r4, %r45, %r46, %rd44, %rd50, %rd14, %rd14);

	// inline asm

	setp.eq.s16	%p19, %rs28, 0;

	ld.u8 	%rs29, [%rd48+12];

	setp.eq.s16	%p20, %rs29, 0;

	or.pred  	%p21, %p19, %p20;

	setp.ne.s16	%p22, %rs28, 0;

	or.pred  	%p2, %p20, %p22;

	@%p21 bra 	BB23_18;

	bra.uni 	BB23_17;



BB23_18:

	mov.f32 	%f182, %f21;

	mov.f32 	%f180, %f22;

	mov.f32 	%f178, %f23;

	@%p2 bra 	BB23_20;



	ld.f32 	%f182, [%rd48];

	ld.f32 	%f180, [%rd48+4];

	ld.f32 	%f178, [%rd48+8];

	bra.uni 	BB23_20;



BB23_5:

	mov.u32 	%r34, 2;

	mov.u32 	%r35, 8;

	// inline asm

	call (%rd25, %rd26, %rd27, %rd28), _rt_buffer_get_id_size_64, (%r4, %r34, %r35);

	// inline asm

	mov.f32 	%f161, 0f00000000;

	mov.u32 	%r89, 0;

	mov.u32 	%r88, %r89;

	setp.lt.u64	%p11, %rd26, 2;

	@%p11 bra 	BB23_7;



	cvt.rmi.ftz.f32.f32	%f118, %f108;

	cvt.rzi.ftz.u32.f32	%r89, %f118;

	cvt.rpi.ftz.f32.f32	%f119, %f108;

	cvt.rzi.ftz.u32.f32	%r88, %f119;

	cvt.rn.f32.u32	%f120, %r89;

	sub.ftz.f32 	%f161, %f108, %f120;



BB23_7:

	cvt.u64.u32	%rd30, %r26;

	cvt.u64.u32	%rd31, %r89;

	// inline asm

	call (%rd29), _rt_buffer_get_id_64, (%r4, %r34, %r35, %rd30, %rd31, %rd14, %rd14);

	// inline asm

	ld.f32 	%f183, [%rd29];

	ld.v4.u8 	{%rs18, %rs19, %rs20, %rs21}, [%rd29+4];

	setp.eq.s32	%p12, %r89, %r88;

	@%p12 bra 	BB23_12;



	and.b16  	%rs22, %rs18, 255;

	cvt.u64.u32	%rd36, %r88;

	// inline asm

	call (%rd34), _rt_buffer_get_id_64, (%r4, %r34, %r35, %rd30, %rd36, %rd14, %rd14);

	// inline asm

	setp.eq.s16	%p13, %rs22, 0;

	ld.u8 	%rs23, [%rd34+4];

	setp.eq.s16	%p14, %rs23, 0;

	or.pred  	%p15, %p13, %p14;

	setp.ne.s16	%p16, %rs22, 0;

	or.pred  	%p1, %p14, %p16;

	@%p15 bra 	BB23_10;

	bra.uni 	BB23_9;



BB23_10:

	@%p1 bra 	BB23_12;



	ld.f32 	%f183, [%rd34];

	bra.uni 	BB23_12;



BB23_17:

	ld.f32 	%f127, [%rd48];

	sub.ftz.f32 	%f128, %f127, %f21;

	ld.f32 	%f129, [%rd48+4];

	sub.ftz.f32 	%f130, %f129, %f22;

	ld.f32 	%f131, [%rd48+8];

	sub.ftz.f32 	%f132, %f131, %f23;

	fma.rn.ftz.f32 	%f182, %f162, %f128, %f21;

	fma.rn.ftz.f32 	%f180, %f162, %f130, %f22;

	fma.rn.ftz.f32 	%f178, %f162, %f132, %f23;



BB23_20:

	mov.f32 	%f177, %f178;

	mov.f32 	%f179, %f180;

	mov.f32 	%f181, %f182;

	mov.f32 	%f163, 0f00000000;

	bra.uni 	BB23_21;



BB23_9:

	ld.f32 	%f121, [%rd34];

	sub.ftz.f32 	%f122, %f121, %f183;

	fma.rn.ftz.f32 	%f183, %f161, %f122, %f183;



BB23_12:

	mov.f32 	%f181, %f183;

	mov.f32 	%f163, %f181;

	mov.f32 	%f179, %f181;

	mov.f32 	%f177, %f181;



BB23_21:

	mov.f32 	%f174, %f177;

	mov.f32 	%f175, %f179;

	mov.f32 	%f176, %f181;

	mov.f32 	%f184, %f163;



BB23_22:

	ld.local.v2.u32 	{%r55, %r56}, [%rd4+24];

	setp.eq.s32	%p23, %r56, 259;

	ld.local.v2.u32 	{%r58, %r59}, [%rd24+16];

	@%p23 bra 	BB23_31;

	bra.uni 	BB23_23;



BB23_31:

	setp.eq.s32	%p31, %r55, 0;

	mov.f32 	%f189, 0f00000000;

	mov.f32 	%f188, %f189;

	mov.f32 	%f187, %f189;

	@%p31 bra 	BB23_39;



	mov.u32 	%r72, 2;

	mov.u32 	%r73, 16;

	// inline asm

	call (%rd69, %rd70, %rd71, %rd72), _rt_buffer_get_id_size_64, (%r55, %r72, %r73);

	// inline asm

	mov.f32 	%f186, 0f00000000;

	mov.u32 	%r95, 0;

	mov.u32 	%r94, %r95;

	setp.lt.u64	%p32, %rd70, 2;

	@%p32 bra 	BB23_34;



	cvt.rmi.ftz.f32.f32	%f144, %f108;

	cvt.rzi.ftz.u32.f32	%r95, %f144;

	cvt.rpi.ftz.f32.f32	%f145, %f108;

	cvt.rzi.ftz.u32.f32	%r94, %f145;

	cvt.rn.f32.u32	%f146, %r95;

	sub.ftz.f32 	%f186, %f108, %f146;



BB23_34:

	cvt.u64.u32	%rd74, %r26;

	cvt.u64.u32	%rd75, %r95;

	// inline asm

	call (%rd73), _rt_buffer_get_id_64, (%r55, %r72, %r73, %rd74, %rd75, %rd14, %rd14);

	// inline asm

	ld.f32 	%f68, [%rd73+8];

	ld.f32 	%f67, [%rd73+4];

	ld.f32 	%f66, [%rd73];

	ld.v4.u8 	{%rs36, %rs37, %rs38, %rs39}, [%rd73+12];

	mov.f32 	%f187, %f66;

	mov.f32 	%f188, %f67;

	mov.f32 	%f189, %f68;

	setp.eq.s32	%p33, %r95, %r94;

	@%p33 bra 	BB23_39;



	and.b16  	%rs40, %rs36, 255;

	cvt.u64.u32	%rd80, %r94;

	// inline asm

	call (%rd78), _rt_buffer_get_id_64, (%r55, %r72, %r73, %rd74, %rd80, %rd14, %rd14);

	// inline asm

	setp.eq.s16	%p34, %rs40, 0;

	ld.u8 	%rs41, [%rd78+12];

	setp.eq.s16	%p35, %rs41, 0;

	or.pred  	%p36, %p34, %p35;

	setp.ne.s16	%p37, %rs40, 0;

	or.pred  	%p4, %p35, %p37;

	@%p36 bra 	BB23_37;

	bra.uni 	BB23_36;



BB23_37:

	mov.f32 	%f187, %f66;

	mov.f32 	%f188, %f67;

	@%p4 bra 	BB23_39;



	ld.f32 	%f187, [%rd78];

	ld.f32 	%f188, [%rd78+4];

	ld.f32 	%f189, [%rd78+8];

	bra.uni 	BB23_39;



BB23_23:

	setp.eq.s32	%p24, %r55, 0;

	mov.f32 	%f190, 0f00000000;

	@%p24 bra 	BB23_40;



	mov.u32 	%r61, 2;

	mov.u32 	%r62, 8;

	// inline asm

	call (%rd55, %rd56, %rd57, %rd58), _rt_buffer_get_id_size_64, (%r55, %r61, %r62);

	// inline asm

	mov.f32 	%f185, 0f00000000;

	mov.u32 	%r93, 0;

	mov.u32 	%r92, %r93;

	setp.lt.u64	%p25, %rd56, 2;

	@%p25 bra 	BB23_26;



	cvt.rmi.ftz.f32.f32	%f135, %f108;

	cvt.rzi.ftz.u32.f32	%r93, %f135;

	cvt.rpi.ftz.f32.f32	%f136, %f108;

	cvt.rzi.ftz.u32.f32	%r92, %f136;

	cvt.rn.f32.u32	%f137, %r93;

	sub.ftz.f32 	%f185, %f108, %f137;



BB23_26:

	cvt.u64.u32	%rd60, %r26;

	cvt.u64.u32	%rd61, %r93;

	// inline asm

	call (%rd59), _rt_buffer_get_id_64, (%r55, %r61, %r62, %rd60, %rd61, %rd14, %rd14);

	// inline asm

	ld.f32 	%f190, [%rd59];

	ld.v4.u8 	{%rs30, %rs31, %rs32, %rs33}, [%rd59+4];

	setp.eq.s32	%p26, %r93, %r92;

	@%p26 bra 	BB23_40;



	and.b16  	%rs34, %rs30, 255;

	cvt.u64.u32	%rd66, %r92;

	// inline asm

	call (%rd64), _rt_buffer_get_id_64, (%r55, %r61, %r62, %rd60, %rd66, %rd14, %rd14);

	// inline asm

	setp.eq.s16	%p27, %rs34, 0;

	ld.u8 	%rs35, [%rd64+4];

	setp.eq.s16	%p28, %rs35, 0;

	or.pred  	%p29, %p27, %p28;

	setp.ne.s16	%p30, %rs34, 0;

	or.pred  	%p3, %p28, %p30;

	@%p29 bra 	BB23_29;

	bra.uni 	BB23_28;



BB23_29:

	@%p3 bra 	BB23_40;



	ld.f32 	%f190, [%rd64];

	bra.uni 	BB23_40;



BB23_36:

	ld.f32 	%f147, [%rd78];

	sub.ftz.f32 	%f148, %f147, %f66;

	ld.f32 	%f149, [%rd78+4];

	sub.ftz.f32 	%f150, %f149, %f67;

	ld.f32 	%f151, [%rd78+8];

	sub.ftz.f32 	%f152, %f151, %f68;

	fma.rn.ftz.f32 	%f187, %f186, %f148, %f66;

	fma.rn.ftz.f32 	%f188, %f186, %f150, %f67;

	fma.rn.ftz.f32 	%f189, %f186, %f152, %f68;



BB23_39:

	mul.ftz.f32 	%f153, %f188, %f188;

	fma.rn.ftz.f32 	%f154, %f187, %f187, %f153;

	fma.rn.ftz.f32 	%f155, %f189, %f189, %f154;

	sqrt.approx.ftz.f32 	%f190, %f155;



BB23_40:

	ld.local.v4.f32 	{%f156, %f157, %f158, %f159}, [%rd4+-32];

	mov.f32 	%f191, %f156;

	mov.f32 	%f192, %f157;

	mov.f32 	%f193, %f158;

	mov.f32 	%f194, %f159;

	setp.eq.s32	%p38, %r59, -1;

	@%p38 bra 	BB23_43;



	setp.gt.u32	%p39, %r58, 6;

	@%p39 bra 	BB23_43;



	cvt.u64.u32	%rd85, %r58;

	mov.u64 	%rd90, textureSampleBuff;

	cvta.global.u64 	%rd84, %rd90;

	mov.u32 	%r83, 4;

	// inline asm

	call (%rd83), _rt_buffer_get_64, (%rd84, %r29, %r83, %rd85, %rd14, %rd14, %rd14);

	// inline asm

	ld.u32 	%r84, [%rd83];

	// inline asm

	call (%rd89), _rt_callable_program_from_id_64, (%r84);

	// inline asm

	cvt.s32.s16	%r85, %rs17;

	mov.u32 	%r86, 0;

	mov.f32 	%f160, 0f00000000;

	// Callseq Start 11

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r59;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f105;

	st.param.f32	[param1+4], %f106;

	st.param.f32	[param1+8], %f190;

	st.param.b32	[param1+12], %r86;

	st.param.b32	[param1+16], %r86;

	st.param.f32	[param1+20], %f160;

	.param .b32 param2;

	st.param.b32	[param2+0], %r85;

	.param .align 16 .b8 retval0[16];

	prototype_11 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd89, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_11;

	ld.param.f32	%f191, [retval0+0];

	ld.param.f32	%f192, [retval0+4];

	ld.param.f32	%f193, [retval0+8];

	ld.param.f32	%f194, [retval0+12];

	

	//{

	}// Callseq End 11



BB23_43:

	mul.ftz.f32 	%f195, %f176, %f191;

	mul.ftz.f32 	%f196, %f175, %f192;

	mul.ftz.f32 	%f197, %f174, %f193;

	mul.ftz.f32 	%f198, %f184, %f194;



BB23_44:

	st.param.f32	[func_retval0+0], %f195;

	st.param.f32	[func_retval0+4], %f196;

	st.param.f32	[func_retval0+8], %f197;

	st.param.f32	[func_retval0+12], %f198;

	ret;



BB23_28:

	ld.f32 	%f138, [%rd64];

	sub.ftz.f32 	%f139, %f138, %f190;

	fma.rn.ftz.f32 	%f190, %f185, %f139, %f190;

	bra.uni 	BB23_40;

}



	// .globl	_ZNK20TextureParticlesData6SampleERK11SamplerInfojb

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZNK20TextureParticlesData6SampleERK11SamplerInfojb(

	.param .b64 _ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_0,

	.param .b64 _ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_1,

	.param .b32 _ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_2,

	.param .b32 _ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_3

)

{

	.reg .pred 	%p<36>;

	.reg .s16 	%rs<42>;

	.reg .f32 	%f<184>;

	.reg .s32 	%r<84>;

	.reg .s64 	%rd<86>;





	ld.param.u64 	%rd10, [_ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_0];

	ld.param.u64 	%rd11, [_ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_1];

	ld.param.u32 	%r21, [_ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_2];

	ld.param.s8 	%rs17, [_ZNK20TextureParticlesData6SampleERK11SamplerInfojb_param_3];

	mul.wide.u32 	%rd12, %r21, 64;

	add.s64 	%rd13, %rd10, %rd12;

	add.s64 	%rd1, %rd13, 32;

	ld.v2.u32 	{%r22, %r23}, [%rd13+48];

	setp.eq.s32	%p5, %r22, 0;

	@%p5 bra 	BB24_18;



	setp.eq.s32	%p6, %r23, 259;

	ld.u32 	%rd2, [%rd11+16];

	ld.f32 	%f1, [%rd11+20];

	@%p6 bra 	BB24_10;

	bra.uni 	BB24_2;



BB24_10:

	mov.u32 	%r36, 2;

	mov.u32 	%r37, 16;

	// inline asm

	call (%rd28, %rd29, %rd30, %rd31), _rt_buffer_get_id_size_64, (%r22, %r36, %r37);

	// inline asm

	mov.f32 	%f166, 0f00000000;

	mov.u32 	%r79, 0;

	mov.u32 	%r78, %r79;

	setp.lt.u64	%p13, %rd29, 2;

	@%p13 bra 	BB24_12;



	cvt.rmi.ftz.f32.f32	%f101, %f1;

	cvt.rzi.ftz.u32.f32	%r79, %f101;

	cvt.rpi.ftz.f32.f32	%f102, %f1;

	cvt.rzi.ftz.u32.f32	%r78, %f102;

	cvt.rn.f32.u32	%f103, %r79;

	sub.ftz.f32 	%f166, %f1, %f103;



BB24_12:

	cvt.u64.u32	%rd34, %r79;

	mov.u64 	%rd36, 0;

	// inline asm

	call (%rd32), _rt_buffer_get_id_64, (%r22, %r36, %r37, %rd2, %rd34, %rd36, %rd36);

	// inline asm

	ld.f32 	%f20, [%rd32+8];

	ld.f32 	%f19, [%rd32+4];

	ld.f32 	%f18, [%rd32];

	ld.v4.u8 	{%rs24, %rs25, %rs26, %rs27}, [%rd32+12];

	mov.f32 	%f167, %f18;

	mov.f32 	%f168, %f19;

	mov.f32 	%f169, %f20;

	setp.eq.s32	%p14, %r79, %r78;

	@%p14 bra 	BB24_17;



	and.b16  	%rs28, %rs24, 255;

	cvt.u64.u32	%rd39, %r78;

	// inline asm

	call (%rd37), _rt_buffer_get_id_64, (%r22, %r36, %r37, %rd2, %rd39, %rd36, %rd36);

	// inline asm

	setp.eq.s16	%p15, %rs28, 0;

	ld.u8 	%rs29, [%rd37+12];

	setp.eq.s16	%p16, %rs29, 0;

	or.pred  	%p17, %p15, %p16;

	setp.ne.s16	%p18, %rs28, 0;

	or.pred  	%p2, %p16, %p18;

	@%p17 bra 	BB24_15;

	bra.uni 	BB24_14;



BB24_15:

	mov.f32 	%f167, %f18;

	mov.f32 	%f168, %f19;

	mov.f32 	%f169, %f20;

	@%p2 bra 	BB24_17;



	ld.f32 	%f167, [%rd37];

	ld.f32 	%f168, [%rd37+4];

	ld.f32 	%f169, [%rd37+8];

	bra.uni 	BB24_17;



BB24_18:

	ld.v4.f32 	{%f110, %f111, %f112, %f113}, [%rd1];

	mov.f32 	%f173, %f113;

	mov.f32 	%f172, %f112;

	mov.f32 	%f171, %f111;

	mov.f32 	%f170, %f110;

	bra.uni 	BB24_19;



BB24_2:

	mov.u32 	%r25, 2;

	mov.u32 	%r26, 8;

	// inline asm

	call (%rd14, %rd15, %rd16, %rd17), _rt_buffer_get_id_size_64, (%r22, %r25, %r26);

	// inline asm

	mov.f32 	%f164, 0f00000000;

	mov.u32 	%r77, 0;

	mov.u32 	%r76, %r77;

	setp.lt.u64	%p7, %rd15, 2;

	@%p7 bra 	BB24_4;



	cvt.rmi.ftz.f32.f32	%f95, %f1;

	cvt.rzi.ftz.u32.f32	%r77, %f95;

	cvt.rpi.ftz.f32.f32	%f96, %f1;

	cvt.rzi.ftz.u32.f32	%r76, %f96;

	cvt.rn.f32.u32	%f97, %r77;

	sub.ftz.f32 	%f164, %f1, %f97;



BB24_4:

	cvt.u64.u32	%rd20, %r77;

	mov.u64 	%rd22, 0;

	// inline asm

	call (%rd18), _rt_buffer_get_id_64, (%r22, %r25, %r26, %rd2, %rd20, %rd22, %rd22);

	// inline asm

	ld.f32 	%f165, [%rd18];

	ld.v4.u8 	{%rs18, %rs19, %rs20, %rs21}, [%rd18+4];

	setp.eq.s32	%p8, %r77, %r76;

	@%p8 bra 	BB24_9;



	and.b16  	%rs22, %rs18, 255;

	cvt.u64.u32	%rd25, %r76;

	// inline asm

	call (%rd23), _rt_buffer_get_id_64, (%r22, %r25, %r26, %rd2, %rd25, %rd22, %rd22);

	// inline asm

	setp.eq.s16	%p9, %rs22, 0;

	ld.u8 	%rs23, [%rd23+4];

	setp.eq.s16	%p10, %rs23, 0;

	or.pred  	%p11, %p9, %p10;

	setp.ne.s16	%p12, %rs22, 0;

	or.pred  	%p1, %p10, %p12;

	@%p11 bra 	BB24_7;

	bra.uni 	BB24_6;



BB24_7:

	@%p1 bra 	BB24_9;



	ld.f32 	%f165, [%rd23];

	bra.uni 	BB24_9;



BB24_14:

	ld.f32 	%f104, [%rd37];

	sub.ftz.f32 	%f105, %f104, %f18;

	ld.f32 	%f106, [%rd37+4];

	sub.ftz.f32 	%f107, %f106, %f19;

	ld.f32 	%f108, [%rd37+8];

	sub.ftz.f32 	%f109, %f108, %f20;

	fma.rn.ftz.f32 	%f167, %f166, %f105, %f18;

	fma.rn.ftz.f32 	%f168, %f166, %f107, %f19;

	fma.rn.ftz.f32 	%f169, %f166, %f109, %f20;



BB24_17:

	mov.f32 	%f39, 0f00000000;

	mov.f32 	%f173, %f39;

	mov.f32 	%f170, %f167;

	mov.f32 	%f171, %f168;

	mov.f32 	%f172, %f169;

	bra.uni 	BB24_19;



BB24_6:

	ld.f32 	%f98, [%rd23];

	sub.ftz.f32 	%f99, %f98, %f165;

	fma.rn.ftz.f32 	%f165, %f164, %f99, %f165;



BB24_9:

	mov.f32 	%f12, %f165;

	mov.f32 	%f173, %f12;

	mov.f32 	%f170, %f165;

	mov.f32 	%f171, %f165;

	mov.f32 	%f172, %f165;



BB24_19:

	ld.u32 	%r46, [%rd13+60];

	setp.eq.s32	%p19, %r46, 259;

	ld.u32 	%rd6, [%rd11+16];

	ld.f32 	%f56, [%rd11+20];

	ld.u32 	%r11, [%rd13+56];

	@%p19 bra 	BB24_28;

	bra.uni 	BB24_20;



BB24_28:

	setp.eq.s32	%p27, %r11, 0;

	mov.f32 	%f178, 0f00000000;

	mov.f32 	%f177, %f178;

	mov.f32 	%f176, %f178;

	@%p27 bra 	BB24_36;



	mov.u32 	%r59, 2;

	mov.u32 	%r60, 16;

	// inline asm

	call (%rd58, %rd59, %rd60, %rd61), _rt_buffer_get_id_size_64, (%r11, %r59, %r60);

	// inline asm

	mov.f32 	%f175, 0f00000000;

	mov.u32 	%r83, 0;

	mov.u32 	%r82, %r83;

	setp.lt.u64	%p28, %rd59, 2;

	@%p28 bra 	BB24_31;



	cvt.rmi.ftz.f32.f32	%f125, %f56;

	cvt.rzi.ftz.u32.f32	%r83, %f125;

	cvt.rpi.ftz.f32.f32	%f126, %f56;

	cvt.rzi.ftz.u32.f32	%r82, %f126;

	cvt.rn.f32.u32	%f127, %r83;

	sub.ftz.f32 	%f175, %f56, %f127;



BB24_31:

	cvt.u64.u32	%rd64, %r83;

	mov.u64 	%rd66, 0;

	// inline asm

	call (%rd62), _rt_buffer_get_id_64, (%r11, %r59, %r60, %rd6, %rd64, %rd66, %rd66);

	// inline asm

	ld.f32 	%f178, [%rd62+8];

	ld.f32 	%f177, [%rd62+4];

	ld.f32 	%f176, [%rd62];

	ld.v4.u8 	{%rs36, %rs37, %rs38, %rs39}, [%rd62+12];

	setp.eq.s32	%p29, %r83, %r82;

	@%p29 bra 	BB24_36;



	and.b16  	%rs40, %rs36, 255;

	cvt.u64.u32	%rd69, %r82;

	// inline asm

	call (%rd67), _rt_buffer_get_id_64, (%r11, %r59, %r60, %rd6, %rd69, %rd66, %rd66);

	// inline asm

	setp.eq.s16	%p30, %rs40, 0;

	ld.u8 	%rs41, [%rd67+12];

	setp.eq.s16	%p31, %rs41, 0;

	or.pred  	%p32, %p30, %p31;

	setp.ne.s16	%p33, %rs40, 0;

	or.pred  	%p4, %p31, %p33;

	@%p32 bra 	BB24_34;

	bra.uni 	BB24_33;



BB24_34:

	@%p4 bra 	BB24_36;



	ld.f32 	%f176, [%rd67];

	ld.f32 	%f177, [%rd67+4];

	ld.f32 	%f178, [%rd67+8];

	bra.uni 	BB24_36;



BB24_20:

	setp.eq.s32	%p20, %r11, 0;

	mov.f32 	%f179, 0f00000000;

	@%p20 bra 	BB24_37;



	mov.u32 	%r48, 2;

	mov.u32 	%r49, 8;

	// inline asm

	call (%rd44, %rd45, %rd46, %rd47), _rt_buffer_get_id_size_64, (%r11, %r48, %r49);

	// inline asm

	mov.f32 	%f174, 0f00000000;

	mov.u32 	%r81, 0;

	mov.u32 	%r80, %r81;

	setp.lt.u64	%p21, %rd45, 2;

	@%p21 bra 	BB24_23;



	cvt.rmi.ftz.f32.f32	%f116, %f56;

	cvt.rzi.ftz.u32.f32	%r81, %f116;

	cvt.rpi.ftz.f32.f32	%f117, %f56;

	cvt.rzi.ftz.u32.f32	%r80, %f117;

	cvt.rn.f32.u32	%f118, %r81;

	sub.ftz.f32 	%f174, %f56, %f118;



BB24_23:

	cvt.u64.u32	%rd50, %r81;

	mov.u64 	%rd52, 0;

	// inline asm

	call (%rd48), _rt_buffer_get_id_64, (%r11, %r48, %r49, %rd6, %rd50, %rd52, %rd52);

	// inline asm

	ld.f32 	%f179, [%rd48];

	ld.v4.u8 	{%rs30, %rs31, %rs32, %rs33}, [%rd48+4];

	setp.eq.s32	%p22, %r81, %r80;

	@%p22 bra 	BB24_37;



	and.b16  	%rs34, %rs30, 255;

	cvt.u64.u32	%rd55, %r80;

	// inline asm

	call (%rd53), _rt_buffer_get_id_64, (%r11, %r48, %r49, %rd6, %rd55, %rd52, %rd52);

	// inline asm

	setp.eq.s16	%p23, %rs34, 0;

	ld.u8 	%rs35, [%rd53+4];

	setp.eq.s16	%p24, %rs35, 0;

	or.pred  	%p25, %p23, %p24;

	setp.ne.s16	%p26, %rs34, 0;

	or.pred  	%p3, %p24, %p26;

	@%p25 bra 	BB24_26;

	bra.uni 	BB24_25;



BB24_26:

	@%p3 bra 	BB24_37;



	ld.f32 	%f179, [%rd53];

	bra.uni 	BB24_37;



BB24_33:

	ld.f32 	%f128, [%rd67];

	sub.ftz.f32 	%f129, %f128, %f176;

	ld.f32 	%f130, [%rd67+4];

	sub.ftz.f32 	%f131, %f130, %f177;

	ld.f32 	%f132, [%rd67+8];

	sub.ftz.f32 	%f133, %f132, %f178;

	fma.rn.ftz.f32 	%f176, %f175, %f129, %f176;

	fma.rn.ftz.f32 	%f177, %f175, %f131, %f177;

	fma.rn.ftz.f32 	%f178, %f175, %f133, %f178;



BB24_36:

	mul.ftz.f32 	%f134, %f177, %f177;

	fma.rn.ftz.f32 	%f135, %f176, %f176, %f134;

	fma.rn.ftz.f32 	%f136, %f178, %f178, %f135;

	sqrt.approx.ftz.f32 	%f179, %f136;



BB24_37:

	ld.v4.f32 	{%f137, %f138, %f139, %f140}, [%rd13];

	mov.f32 	%f180, %f137;

	mov.f32 	%f181, %f138;

	mov.f32 	%f182, %f139;

	mov.f32 	%f183, %f140;

	ld.u32 	%r69, [%rd13+20];

	setp.eq.s32	%p34, %r69, -1;

	@%p34 bra 	BB24_40;



	ld.u32 	%r20, [%rd13+16];

	setp.gt.u32	%p35, %r20, 6;

	@%p35 bra 	BB24_40;



	ld.f32 	%f141, [%rd11];

	ld.f32 	%f142, [%rd11+4];

	cvt.u64.u32	%rd78, %r20;

	mov.u64 	%rd83, textureSampleBuff;

	cvta.global.u64 	%rd77, %rd83;

	mov.u32 	%r70, 1;

	mov.u32 	%r71, 4;

	mov.u64 	%rd81, 0;

	// inline asm

	call (%rd76), _rt_buffer_get_64, (%rd77, %r70, %r71, %rd78, %rd81, %rd81, %rd81);

	// inline asm

	ld.u32 	%r73, [%rd13+20];

	ld.u32 	%r72, [%rd76];

	// inline asm

	call (%rd82), _rt_callable_program_from_id_64, (%r72);

	// inline asm

	cvt.s32.s16	%r74, %rs17;

	mov.u32 	%r75, 0;

	mov.f32 	%f143, 0f00000000;

	// Callseq Start 12

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r73;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f141;

	st.param.f32	[param1+4], %f142;

	st.param.f32	[param1+8], %f179;

	st.param.b32	[param1+12], %r75;

	st.param.b32	[param1+16], %r75;

	st.param.f32	[param1+20], %f143;

	.param .b32 param2;

	st.param.b32	[param2+0], %r74;

	.param .align 16 .b8 retval0[16];

	prototype_12 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd82, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_12;

	ld.param.f32	%f180, [retval0+0];

	ld.param.f32	%f181, [retval0+4];

	ld.param.f32	%f182, [retval0+8];

	ld.param.f32	%f183, [retval0+12];

	

	//{

	}// Callseq End 12



BB24_40:

	mul.ftz.f32 	%f144, %f170, %f180;

	mul.ftz.f32 	%f145, %f171, %f181;

	mul.ftz.f32 	%f146, %f172, %f182;

	mul.ftz.f32 	%f147, %f173, %f183;

	st.param.f32	[func_retval0+0], %f144;

	st.param.f32	[func_retval0+4], %f145;

	st.param.f32	[func_retval0+8], %f146;

	st.param.f32	[func_retval0+12], %f147;

	ret;



BB24_25:

	ld.f32 	%f119, [%rd53];

	sub.ftz.f32 	%f120, %f119, %f179;

	fma.rn.ftz.f32 	%f179, %f174, %f120, %f179;

	bra.uni 	BB24_37;

}



	// .globl	_ZNK5optix6MatrixILj4ELj4EEixEj

.visible .func  (.param .b32 func_retval0) _ZNK5optix6MatrixILj4ELj4EEixEj(

	.param .b64 _ZNK5optix6MatrixILj4ELj4EEixEj_param_0,

	.param .b32 _ZNK5optix6MatrixILj4ELj4EEixEj_param_1

)

{

	.reg .f32 	%f<2>;

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZNK5optix6MatrixILj4ELj4EEixEj_param_0];

	ld.param.u32 	%r1, [_ZNK5optix6MatrixILj4ELj4EEixEj_param_1];

	mul.wide.u32 	%rd2, %r1, 4;

	add.s64 	%rd3, %rd1, %rd2;

	ld.f32 	%f1, [%rd3];

	st.param.f32	[func_retval0+0], %f1;

	ret;

}



	// .globl	_ZN5optix6MatrixILj3ELj3EEC1EPKf

.visible .func _ZN5optix6MatrixILj3ELj3EEC1EPKf(

	.param .b64 _ZN5optix6MatrixILj3ELj3EEC1EPKf_param_0,

	.param .b64 _ZN5optix6MatrixILj3ELj3EEC1EPKf_param_1

)

{

	.reg .f32 	%f<10>;

	.reg .s64 	%rd<3>;





	ld.param.u64 	%rd1, [_ZN5optix6MatrixILj3ELj3EEC1EPKf_param_0];

	ld.param.u64 	%rd2, [_ZN5optix6MatrixILj3ELj3EEC1EPKf_param_1];

	ld.f32 	%f1, [%rd2];

	st.f32 	[%rd1], %f1;

	ld.f32 	%f2, [%rd2+4];

	st.f32 	[%rd1+4], %f2;

	ld.f32 	%f3, [%rd2+8];

	st.f32 	[%rd1+8], %f3;

	ld.f32 	%f4, [%rd2+12];

	st.f32 	[%rd1+12], %f4;

	ld.f32 	%f5, [%rd2+16];

	st.f32 	[%rd1+16], %f5;

	ld.f32 	%f6, [%rd2+20];

	st.f32 	[%rd1+20], %f6;

	ld.f32 	%f7, [%rd2+24];

	st.f32 	[%rd1+24], %f7;

	ld.f32 	%f8, [%rd2+28];

	st.f32 	[%rd1+28], %f8;

	ld.f32 	%f9, [%rd2+32];

	st.f32 	[%rd1+32], %f9;

	ret;

}



	// .globl	_ZN10ColorUtils17DoGammaCorrectionERK6float3j

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils17DoGammaCorrectionERK6float3j(

	.param .b64 _ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_0,

	.param .b32 _ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_1

)

{

	.reg .pred 	%p<4>;

	.reg .f32 	%f<34>;

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_0];

	ld.param.u32 	%r1, [_ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_1];

	mov.f32 	%f30, 0f3F800000;

	setp.eq.s32	%p1, %r1, 1;

	@%p1 bra 	BB27_3;

	bra.uni 	BB27_1;



BB27_3:

	ld.global.f32 	%f30, [materialGamma];

	bra.uni 	BB27_4;



BB27_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB27_4;



	ld.global.f32 	%f30, [lightsGamma];



BB27_4:

	ld.f32 	%f33, [%rd1+8];

	ld.f32 	%f32, [%rd1+4];

	ld.f32 	%f31, [%rd1];

	setp.eq.ftz.f32	%p3, %f30, 0f3F800000;

	@%p3 bra 	BB27_6;



	ld.f32 	%f14, [%rd1];

	mov.f32 	%f15, 0f00000000;

	max.ftz.f32 	%f16, %f14, %f15;

	ld.f32 	%f17, [%rd1+4];

	max.ftz.f32 	%f18, %f17, %f15;

	ld.f32 	%f19, [%rd1+8];

	max.ftz.f32 	%f20, %f19, %f15;

	max.ftz.f32 	%f21, %f15, %f16;

	max.ftz.f32 	%f22, %f15, %f18;

	max.ftz.f32 	%f23, %f15, %f20;

	lg2.approx.ftz.f32 	%f24, %f21;

	mul.ftz.f32 	%f25, %f30, %f24;

	ex2.approx.ftz.f32 	%f31, %f25;

	lg2.approx.ftz.f32 	%f26, %f22;

	mul.ftz.f32 	%f27, %f30, %f26;

	ex2.approx.ftz.f32 	%f32, %f27;

	lg2.approx.ftz.f32 	%f28, %f23;

	mul.ftz.f32 	%f29, %f30, %f28;

	ex2.approx.ftz.f32 	%f33, %f29;



BB27_6:

	st.param.f32	[func_retval0+0], %f31;

	st.param.f32	[func_retval0+4], %f32;

	st.param.f32	[func_retval0+8], %f33;

	ret;

}



	// .globl	_ZN10ColorUtils7rgb2hsvERK6float3

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils7rgb2hsvERK6float3(

	.param .b64 _ZN10ColorUtils7rgb2hsvERK6float3_param_0

)

{

	.reg .pred 	%p<8>;

	.reg .f32 	%f<41>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils7rgb2hsvERK6float3_param_0];

	ld.f32 	%f1, [%rd1+4];

	ld.f32 	%f2, [%rd1];

	min.ftz.f32 	%f18, %f2, %f1;

	ld.f32 	%f3, [%rd1+8];

	min.ftz.f32 	%f19, %f18, %f3;

	max.ftz.f32 	%f20, %f2, %f1;

	max.ftz.f32 	%f4, %f20, %f3;

	sub.ftz.f32 	%f5, %f4, %f19;

	mov.f32 	%f17, 0f00000000;

	setp.eq.ftz.f32	%p1, %f4, 0f00000000;

	mov.f32 	%f40, %f17;

	@%p1 bra 	BB28_2;



	div.approx.ftz.f32 	%f6, %f5, %f4;

	mov.f32 	%f40, %f6;



BB28_2:

	mov.f32 	%f7, %f40;

	setp.eq.ftz.f32	%p2, %f5, 0f00000000;

	mov.f32 	%f39, %f17;

	@%p2 bra 	BB28_9;



	sub.ftz.f32 	%f22, %f4, %f2;

	sub.ftz.f32 	%f23, %f4, %f1;

	sub.ftz.f32 	%f24, %f4, %f3;

	mov.f32 	%f25, 0f40000000;

	div.approx.ftz.f32 	%f26, %f5, %f25;

	fma.rn.ftz.f32 	%f27, %f22, 0f3E2AAAAB, %f26;

	fma.rn.ftz.f32 	%f28, %f23, 0f3E2AAAAB, %f26;

	fma.rn.ftz.f32 	%f29, %f24, 0f3E2AAAAB, %f26;

	rcp.approx.ftz.f32 	%f30, %f5;

	mul.ftz.f32 	%f8, %f27, %f30;

	mul.ftz.f32 	%f9, %f28, %f30;

	mul.ftz.f32 	%f10, %f30, %f29;

	setp.eq.ftz.f32	%p3, %f2, %f4;

	@%p3 bra 	BB28_7;

	bra.uni 	BB28_4;



BB28_7:

	sub.ftz.f32 	%f37, %f10, %f9;

	bra.uni 	BB28_8;



BB28_4:

	setp.eq.ftz.f32	%p4, %f1, %f4;

	@%p4 bra 	BB28_6;

	bra.uni 	BB28_5;



BB28_6:

	add.ftz.f32 	%f33, %f8, 0f3EAAAAAB;

	sub.ftz.f32 	%f37, %f33, %f10;

	bra.uni 	BB28_8;



BB28_5:

	setp.eq.ftz.f32	%p5, %f3, %f4;

	add.ftz.f32 	%f31, %f9, 0f3F2AAAAB;

	sub.ftz.f32 	%f32, %f31, %f8;

	selp.f32	%f37, %f32, 0f00000000, %p5;



BB28_8:

	add.ftz.f32 	%f34, %f37, 0f3F800000;

	setp.lt.ftz.f32	%p6, %f37, 0f00000000;

	selp.f32	%f35, %f34, %f37, %p6;

	setp.gt.ftz.f32	%p7, %f35, 0f3F800000;

	add.ftz.f32 	%f36, %f35, 0fBF800000;

	selp.f32	%f39, %f36, %f35, %p7;



BB28_9:

	st.param.f32	[func_retval0+0], %f39;

	st.param.f32	[func_retval0+4], %f7;

	st.param.f32	[func_retval0+8], %f4;

	ret;

}



	// .globl	_ZN10ColorUtils7hsv2rgbERK6float3

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils7hsv2rgbERK6float3(

	.param .b64 _ZN10ColorUtils7hsv2rgbERK6float3_param_0

)

{

	.reg .pred 	%p<9>;

	.reg .f32 	%f<53>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils7hsv2rgbERK6float3_param_0];

	ld.f32 	%f1, [%rd1];

	ld.f32 	%f2, [%rd1+8];

	ld.f32 	%f9, [%rd1+4];

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f2;

	setp.eq.ftz.f32	%p1, %f9, 0f00000000;

	@%p1 bra 	BB29_13;



	setp.lt.ftz.f32	%p2, %f1, 0f00000000;

	add.ftz.f32 	%f37, %f1, 0f3F800000;

	selp.f32	%f38, %f37, %f1, %p2;

	setp.gt.ftz.f32	%p3, %f38, 0f3F800000;

	add.ftz.f32 	%f39, %f38, 0fBF800000;

	selp.f32	%f40, %f39, %f38, %p3;

	mul.ftz.f32 	%f41, %f40, 0f40C00000;

	cvt.rmi.ftz.f32.f32	%f10, %f41;

	mov.f32 	%f42, 0f3F800000;

	sub.ftz.f32 	%f43, %f42, %f9;

	mul.ftz.f32 	%f11, %f2, %f43;

	sub.ftz.f32 	%f44, %f41, %f10;

	mul.ftz.f32 	%f45, %f9, %f44;

	sub.ftz.f32 	%f46, %f42, %f45;

	mul.ftz.f32 	%f12, %f2, %f46;

	sub.ftz.f32 	%f47, %f42, %f44;

	mul.ftz.f32 	%f48, %f9, %f47;

	sub.ftz.f32 	%f49, %f42, %f48;

	mul.ftz.f32 	%f13, %f2, %f49;

	setp.eq.ftz.f32	%p4, %f10, 0f00000000;

	@%p4 bra 	BB29_11;

	bra.uni 	BB29_2;



BB29_11:

	mov.f32 	%f52, %f11;

	mov.f32 	%f51, %f13;



BB29_12:

	mov.f32 	%f50, %f2;

	bra.uni 	BB29_13;



BB29_2:

	setp.eq.ftz.f32	%p5, %f10, 0f3F800000;

	@%p5 bra 	BB29_10;

	bra.uni 	BB29_3;



BB29_10:

	mov.f32 	%f52, %f11;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f12;

	bra.uni 	BB29_13;



BB29_3:

	setp.eq.ftz.f32	%p6, %f10, 0f40000000;

	@%p6 bra 	BB29_9;

	bra.uni 	BB29_4;



BB29_9:

	mov.f32 	%f52, %f13;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f11;

	bra.uni 	BB29_13;



BB29_4:

	setp.eq.ftz.f32	%p7, %f10, 0f40400000;

	@%p7 bra 	BB29_8;

	bra.uni 	BB29_5;



BB29_8:

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f12;

	mov.f32 	%f50, %f11;

	bra.uni 	BB29_13;



BB29_5:

	setp.eq.ftz.f32	%p8, %f10, 0f40800000;

	@%p8 bra 	BB29_7;

	bra.uni 	BB29_6;



BB29_7:

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f11;

	mov.f32 	%f50, %f13;



BB29_13:

	st.param.f32	[func_retval0+0], %f50;

	st.param.f32	[func_retval0+4], %f51;

	st.param.f32	[func_retval0+8], %f52;

	ret;



BB29_6:

	mov.f32 	%f52, %f12;

	mov.f32 	%f51, %f11;

	bra.uni 	BB29_12;

}



	// .globl	_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2_

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2_(

	.param .align 4 .b8 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0[12],

	.param .b64 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_1,

	.param .b64 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_2

)

{

	.reg .pred 	%p<19>;

	.reg .f32 	%f<119>;

	.reg .s64 	%rd<4>;





	ld.param.f32 	%f118, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0+8];

	ld.param.f32 	%f117, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0+4];

	ld.param.f32 	%f116, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0];

	ld.param.u64 	%rd2, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_1];

	ld.param.u64 	%rd3, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_2];

	ld.f32 	%f4, [%rd2];

	abs.ftz.f32 	%f64, %f4;

	setp.gt.ftz.f32	%p1, %f64, 0f3727C5AC;

	@%p1 bra 	BB30_3;



	ld.f32 	%f65, [%rd2+4];

	abs.ftz.f32 	%f66, %f65;

	setp.gt.ftz.f32	%p2, %f66, 0f3727C5AC;

	@%p2 bra 	BB30_3;



	ld.f32 	%f67, [%rd2+8];

	abs.ftz.f32 	%f68, %f67;

	setp.leu.ftz.f32	%p3, %f68, 0f3727C5AC;

	@%p3 bra 	BB30_26;



BB30_3:

	ld.f32 	%f5, [%rd3];

	ld.f32 	%f6, [%rd3+4];

	ld.f32 	%f7, [%rd3+8];

	min.ftz.f32 	%f70, %f116, %f117;

	min.ftz.f32 	%f71, %f70, %f118;

	max.ftz.f32 	%f72, %f116, %f117;

	max.ftz.f32 	%f8, %f72, %f118;

	sub.ftz.f32 	%f9, %f8, %f71;

	mov.f32 	%f69, 0f00000000;

	setp.eq.ftz.f32	%p4, %f8, 0f00000000;

	mov.f32 	%f112, %f69;

	@%p4 bra 	BB30_5;



	div.approx.ftz.f32 	%f10, %f9, %f8;

	mov.f32 	%f112, %f10;



BB30_5:

	mov.f32 	%f11, %f112;

	setp.eq.ftz.f32	%p5, %f9, 0f00000000;

	mov.f32 	%f111, %f69;

	@%p5 bra 	BB30_12;



	sub.ftz.f32 	%f74, %f8, %f116;

	sub.ftz.f32 	%f75, %f8, %f117;

	sub.ftz.f32 	%f76, %f8, %f118;

	mov.f32 	%f77, 0f40000000;

	div.approx.ftz.f32 	%f78, %f9, %f77;

	fma.rn.ftz.f32 	%f79, %f74, 0f3E2AAAAB, %f78;

	fma.rn.ftz.f32 	%f80, %f75, 0f3E2AAAAB, %f78;

	fma.rn.ftz.f32 	%f81, %f76, 0f3E2AAAAB, %f78;

	rcp.approx.ftz.f32 	%f82, %f9;

	mul.ftz.f32 	%f12, %f79, %f82;

	mul.ftz.f32 	%f13, %f80, %f82;

	mul.ftz.f32 	%f14, %f81, %f82;

	setp.eq.ftz.f32	%p6, %f116, %f8;

	@%p6 bra 	BB30_10;

	bra.uni 	BB30_7;



BB30_10:

	sub.ftz.f32 	%f109, %f14, %f13;

	bra.uni 	BB30_11;



BB30_7:

	setp.eq.ftz.f32	%p7, %f117, %f8;

	@%p7 bra 	BB30_9;

	bra.uni 	BB30_8;



BB30_9:

	add.ftz.f32 	%f85, %f12, 0f3EAAAAAB;

	sub.ftz.f32 	%f109, %f85, %f14;

	bra.uni 	BB30_11;



BB30_8:

	setp.eq.ftz.f32	%p8, %f118, %f8;

	add.ftz.f32 	%f83, %f13, 0f3F2AAAAB;

	sub.ftz.f32 	%f84, %f83, %f12;

	selp.f32	%f109, %f84, 0f00000000, %p8;



BB30_11:

	add.ftz.f32 	%f86, %f109, 0f3F800000;

	setp.lt.ftz.f32	%p9, %f109, 0f00000000;

	selp.f32	%f87, %f86, %f109, %p9;

	setp.gt.ftz.f32	%p10, %f87, 0f3F800000;

	add.ftz.f32 	%f88, %f87, 0fBF800000;

	selp.f32	%f111, %f88, %f87, %p10;



BB30_12:

	fma.rn.ftz.f32 	%f89, %f5, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f90, %f6, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f91, %f7, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f21, %f89, %f4, %f111;

	ld.f32 	%f92, [%rd2+4];

	fma.rn.ftz.f32 	%f22, %f90, %f92, %f11;

	ld.f32 	%f93, [%rd2+8];

	fma.rn.ftz.f32 	%f23, %f91, %f93, %f8;

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f23;

	setp.eq.ftz.f32	%p11, %f22, 0f00000000;

	@%p11 bra 	BB30_25;



	setp.lt.ftz.f32	%p12, %f21, 0f00000000;

	add.ftz.f32 	%f96, %f21, 0f3F800000;

	selp.f32	%f97, %f96, %f21, %p12;

	setp.gt.ftz.f32	%p13, %f97, 0f3F800000;

	add.ftz.f32 	%f98, %f97, 0fBF800000;

	selp.f32	%f99, %f98, %f97, %p13;

	mul.ftz.f32 	%f100, %f99, 0f40C00000;

	cvt.rmi.ftz.f32.f32	%f30, %f100;

	mov.f32 	%f101, 0f3F800000;

	sub.ftz.f32 	%f102, %f101, %f22;

	mul.ftz.f32 	%f31, %f23, %f102;

	sub.ftz.f32 	%f103, %f100, %f30;

	mul.ftz.f32 	%f104, %f22, %f103;

	sub.ftz.f32 	%f105, %f101, %f104;

	mul.ftz.f32 	%f32, %f23, %f105;

	sub.ftz.f32 	%f106, %f101, %f103;

	mul.ftz.f32 	%f107, %f22, %f106;

	sub.ftz.f32 	%f108, %f101, %f107;

	mul.ftz.f32 	%f33, %f23, %f108;

	setp.eq.ftz.f32	%p14, %f30, 0f00000000;

	@%p14 bra 	BB30_23;

	bra.uni 	BB30_14;



BB30_23:

	mov.f32 	%f115, %f31;

	mov.f32 	%f114, %f33;



BB30_24:

	mov.f32 	%f113, %f23;

	bra.uni 	BB30_25;



BB30_14:

	setp.eq.ftz.f32	%p15, %f30, 0f3F800000;

	@%p15 bra 	BB30_22;

	bra.uni 	BB30_15;



BB30_22:

	mov.f32 	%f115, %f31;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f32;

	bra.uni 	BB30_25;



BB30_15:

	setp.eq.ftz.f32	%p16, %f30, 0f40000000;

	@%p16 bra 	BB30_21;

	bra.uni 	BB30_16;



BB30_21:

	mov.f32 	%f115, %f33;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f31;

	bra.uni 	BB30_25;



BB30_16:

	setp.eq.ftz.f32	%p17, %f30, 0f40400000;

	@%p17 bra 	BB30_20;

	bra.uni 	BB30_17;



BB30_20:

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f32;

	mov.f32 	%f113, %f31;

	bra.uni 	BB30_25;



BB30_17:

	setp.eq.ftz.f32	%p18, %f30, 0f40800000;

	@%p18 bra 	BB30_19;

	bra.uni 	BB30_18;



BB30_19:

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f31;

	mov.f32 	%f113, %f33;



BB30_25:

	cvt.ftz.sat.f32.f32	%f116, %f113;

	cvt.ftz.sat.f32.f32	%f117, %f114;

	cvt.ftz.sat.f32.f32	%f118, %f115;



BB30_26:

	st.param.f32	[func_retval0+0], %f116;

	st.param.f32	[func_retval0+4], %f117;

	st.param.f32	[func_retval0+8], %f118;

	ret;



BB30_18:

	mov.f32 	%f115, %f32;

	mov.f32 	%f114, %f31;

	bra.uni 	BB30_24;

}



	// .globl	_ZN21SphericalMappingUtils16SphericalMappingERK6float3

.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZN21SphericalMappingUtils16SphericalMappingERK6float3(

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3_param_0

)

{

	.reg .pred 	%p<6>;

	.reg .f32 	%f<59>;

	.reg .s32 	%r<5>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3_param_0];

	ld.f32 	%f1, [%rd1];

	ld.f32 	%f2, [%rd1+8];

	mul.ftz.f32 	%f3, %f2, %f2;

	fma.rn.ftz.f32 	%f4, %f1, %f1, %f3;

	sqrt.approx.ftz.f32 	%f5, %f4;

	div.approx.ftz.f32 	%f6, %f1, %f5;

	mov.f32 	%f7, 0f3F800000;

	min.ftz.f32 	%f8, %f6, %f7;

	mov.f32 	%f9, 0fBF800000;

	max.ftz.f32 	%f10, %f9, %f8;

	abs.ftz.f32 	%f11, %f10;

	sub.ftz.f32 	%f12, %f7, %f11;

	mul.ftz.f32 	%f13, %f12, 0f3F000000;

	sqrt.approx.ftz.f32 	%f14, %f13;

	setp.gt.ftz.f32	%p1, %f11, 0f3F11EB85;

	selp.f32	%f15, %f14, %f11, %p1;

	mul.ftz.f32 	%f16, %f15, %f15;

	mov.f32 	%f17, 0f3C94D2E9;

	mov.f32 	%f18, 0f3D53F941;

	fma.rn.ftz.f32 	%f19, %f18, %f16, %f17;

	mov.f32 	%f20, 0f3D3F841F;

	fma.rn.ftz.f32 	%f21, %f19, %f16, %f20;

	mov.f32 	%f22, 0f3D994929;

	fma.rn.ftz.f32 	%f23, %f21, %f16, %f22;

	mov.f32 	%f24, 0f3E2AAB94;

	fma.rn.ftz.f32 	%f25, %f23, %f16, %f24;

	mul.ftz.f32 	%f26, %f16, %f25;

	fma.rn.ftz.f32 	%f27, %f26, %f15, %f15;

	add.ftz.f32 	%f28, %f27, %f27;

	mov.f32 	%f29, 0f3FC90FDB;

	sub.ftz.f32 	%f30, %f29, %f27;

	selp.f32	%f31, %f28, %f30, %p1;

	setp.lt.ftz.f32	%p2, %f10, 0f00000000;

	mov.f32 	%f32, 0f40490FDB;

	sub.ftz.f32 	%f33, %f32, %f31;

	selp.f32	%f34, %f33, %f31, %p2;

	mul.ftz.f32 	%f35, %f34, 0f3E22F981;

	ld.f32 	%f36, [%rd1+4];

	min.ftz.f32 	%f37, %f36, %f7;

	max.ftz.f32 	%f38, %f9, %f37;

	abs.ftz.f32 	%f39, %f38;

	sub.ftz.f32 	%f40, %f7, %f39;

	mul.ftz.f32 	%f41, %f40, 0f3F000000;

	sqrt.approx.ftz.f32 	%f42, %f41;

	setp.gt.ftz.f32	%p3, %f39, 0f3F11EB85;

	selp.f32	%f43, %f42, %f39, %p3;

	mul.ftz.f32 	%f44, %f43, %f43;

	fma.rn.ftz.f32 	%f45, %f18, %f44, %f17;

	fma.rn.ftz.f32 	%f46, %f45, %f44, %f20;

	fma.rn.ftz.f32 	%f47, %f46, %f44, %f22;

	fma.rn.ftz.f32 	%f48, %f47, %f44, %f24;

	mul.ftz.f32 	%f49, %f44, %f48;

	fma.rn.ftz.f32 	%f50, %f49, %f43, %f43;

	mov.f32 	%f51, 0fC0000000;

	fma.rn.ftz.f32 	%f52, %f51, %f50, %f29;

	selp.f32	%f53, %f52, %f50, %p3;

	setp.gtu.ftz.f32	%p4, %f53, 0f7F800000;

	mov.b32 	 %r1, %f53;

	mov.b32 	 %r2, %f38;

	and.b32  	%r3, %r2, -2147483648;

	or.b32  	%r4, %r1, %r3;

	mov.b32 	 %f54, %r4;

	selp.f32	%f55, %f53, %f54, %p4;

	fma.rn.ftz.f32 	%f56, %f55, 0f3EA2F984, 0f3F000000;

	setp.lt.ftz.f32	%p5, %f2, 0f00000000;

	sub.ftz.f32 	%f57, %f7, %f35;

	selp.f32	%f58, %f57, %f35, %p5;

	st.param.f32	[func_retval0+0], %f58;

	st.param.f32	[func_retval0+4], %f56;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2_

.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2_(

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_0,

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_1,

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_2

)

{

	.reg .pred 	%p<6>;

	.reg .f32 	%f<83>;

	.reg .s32 	%r<5>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_0];

	ld.param.u64 	%rd2, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_2];

	ld.f32 	%f1, [%rd2+4];

	ld.param.u64 	%rd3, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_1];

	ld.f32 	%f2, [%rd3+8];

	mul.ftz.f32 	%f3, %f1, %f2;

	ld.f32 	%f4, [%rd2+8];

	ld.f32 	%f5, [%rd3+4];

	mul.ftz.f32 	%f6, %f4, %f5;

	sub.ftz.f32 	%f7, %f3, %f6;

	ld.f32 	%f8, [%rd3];

	mul.ftz.f32 	%f9, %f4, %f8;

	ld.f32 	%f10, [%rd2];

	mul.ftz.f32 	%f11, %f10, %f2;

	sub.ftz.f32 	%f12, %f9, %f11;

	mul.ftz.f32 	%f13, %f10, %f5;

	mul.ftz.f32 	%f14, %f1, %f8;

	sub.ftz.f32 	%f15, %f13, %f14;

	ld.f32 	%f16, [%rd1];

	fma.rn.ftz.f32 	%f17, %f7, %f16, 0f00000000;

	ld.f32 	%f18, [%rd1+4];

	fma.rn.ftz.f32 	%f19, %f12, %f18, %f17;

	ld.f32 	%f20, [%rd1+8];

	fma.rn.ftz.f32 	%f21, %f15, %f20, %f19;

	fma.rn.ftz.f32 	%f22, %f10, %f16, 0f00000000;

	fma.rn.ftz.f32 	%f23, %f1, %f18, %f22;

	fma.rn.ftz.f32 	%f24, %f4, %f20, %f23;

	fma.rn.ftz.f32 	%f25, %f8, %f16, 0f00000000;

	fma.rn.ftz.f32 	%f26, %f5, %f18, %f25;

	fma.rn.ftz.f32 	%f27, %f2, %f20, %f26;

	mul.ftz.f32 	%f28, %f27, %f27;

	fma.rn.ftz.f32 	%f29, %f21, %f21, %f28;

	sqrt.approx.ftz.f32 	%f30, %f29;

	div.approx.ftz.f32 	%f31, %f21, %f30;

	mov.f32 	%f32, 0f3F800000;

	min.ftz.f32 	%f33, %f31, %f32;

	mov.f32 	%f34, 0fBF800000;

	max.ftz.f32 	%f35, %f34, %f33;

	abs.ftz.f32 	%f36, %f35;

	sub.ftz.f32 	%f37, %f32, %f36;

	mul.ftz.f32 	%f38, %f37, 0f3F000000;

	sqrt.approx.ftz.f32 	%f39, %f38;

	setp.gt.ftz.f32	%p1, %f36, 0f3F11EB85;

	selp.f32	%f40, %f39, %f36, %p1;

	mul.ftz.f32 	%f41, %f40, %f40;

	mov.f32 	%f42, 0f3C94D2E9;

	mov.f32 	%f43, 0f3D53F941;

	fma.rn.ftz.f32 	%f44, %f43, %f41, %f42;

	mov.f32 	%f45, 0f3D3F841F;

	fma.rn.ftz.f32 	%f46, %f44, %f41, %f45;

	mov.f32 	%f47, 0f3D994929;

	fma.rn.ftz.f32 	%f48, %f46, %f41, %f47;

	mov.f32 	%f49, 0f3E2AAB94;

	fma.rn.ftz.f32 	%f50, %f48, %f41, %f49;

	mul.ftz.f32 	%f51, %f41, %f50;

	fma.rn.ftz.f32 	%f52, %f51, %f40, %f40;

	add.ftz.f32 	%f53, %f52, %f52;

	mov.f32 	%f54, 0f3FC90FDB;

	sub.ftz.f32 	%f55, %f54, %f52;

	selp.f32	%f56, %f53, %f55, %p1;

	setp.lt.ftz.f32	%p2, %f35, 0f00000000;

	mov.f32 	%f57, 0f40490FDB;

	sub.ftz.f32 	%f58, %f57, %f56;

	selp.f32	%f59, %f58, %f56, %p2;

	mul.ftz.f32 	%f60, %f59, 0f3E22F981;

	min.ftz.f32 	%f61, %f24, %f32;

	max.ftz.f32 	%f62, %f34, %f61;

	abs.ftz.f32 	%f63, %f62;

	sub.ftz.f32 	%f64, %f32, %f63;

	mul.ftz.f32 	%f65, %f64, 0f3F000000;

	sqrt.approx.ftz.f32 	%f66, %f65;

	setp.gt.ftz.f32	%p3, %f63, 0f3F11EB85;

	selp.f32	%f67, %f66, %f63, %p3;

	mul.ftz.f32 	%f68, %f67, %f67;

	fma.rn.ftz.f32 	%f69, %f43, %f68, %f42;

	fma.rn.ftz.f32 	%f70, %f69, %f68, %f45;

	fma.rn.ftz.f32 	%f71, %f70, %f68, %f47;

	fma.rn.ftz.f32 	%f72, %f71, %f68, %f49;

	mul.ftz.f32 	%f73, %f68, %f72;

	fma.rn.ftz.f32 	%f74, %f73, %f67, %f67;

	mov.f32 	%f75, 0fC0000000;

	fma.rn.ftz.f32 	%f76, %f75, %f74, %f54;

	selp.f32	%f77, %f76, %f74, %p3;

	setp.gtu.ftz.f32	%p4, %f77, 0f7F800000;

	mov.b32 	 %r1, %f77;

	mov.b32 	 %r2, %f62;

	and.b32  	%r3, %r2, -2147483648;

	or.b32  	%r4, %r1, %r3;

	mov.b32 	 %f78, %r4;

	selp.f32	%f79, %f77, %f78, %p4;

	fma.rn.ftz.f32 	%f80, %f79, 0f3EA2F984, 0f3F000000;

	setp.lt.ftz.f32	%p5, %f27, 0f00000000;

	sub.ftz.f32 	%f81, %f32, %f60;

	selp.f32	%f82, %f81, %f60, %p5;

	st.param.f32	[func_retval0+0], %f82;

	st.param.f32	[func_retval0+4], %f80;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2(

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2_param_0

)

{

	.reg .pred 	%p<5>;

	.reg .f32 	%f<27>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2_param_0];

	ld.v2.f32 	{%f1, %f2}, [%rd1];

	add.ftz.f32 	%f4, %f1, %f1;

	mul.ftz.f32 	%f5, %f4, 0f40490FDB;

	sin.approx.ftz.f32 	%f6, %f5;

	cos.approx.ftz.f32 	%f7, %f5;

	div.approx.ftz.f32 	%f8, %f6, %f7;

	add.ftz.f32 	%f10, %f2, 0fBF000000;

	mul.ftz.f32 	%f11, %f10, 0f40490FDB;

	sin.approx.ftz.f32 	%f12, %f11;

	mul.ftz.f32 	%f13, %f12, %f12;

	mov.f32 	%f14, 0f3F800000;

	sub.ftz.f32 	%f15, %f14, %f13;

	fma.rn.ftz.f32 	%f16, %f8, %f8, 0f3F800000;

	div.approx.ftz.f32 	%f17, %f15, %f16;

	sqrt.approx.ftz.f32 	%f18, %f17;

	mul.ftz.f32 	%f19, %f18, %f18;

	mul.ftz.f32 	%f20, %f8, %f19;

	mul.ftz.f32 	%f21, %f8, %f20;

	sqrt.approx.ftz.f32 	%f22, %f21;

	setp.gt.ftz.f32	%p1, %f1, 0f3F000000;

	neg.ftz.f32 	%f23, %f22;

	selp.f32	%f24, %f23, %f22, %p1;

	setp.gt.ftz.f32	%p2, %f1, 0f3E800000;

	setp.lt.ftz.f32	%p3, %f1, 0f3F400000;

	and.pred  	%p4, %p2, %p3;

	neg.ftz.f32 	%f25, %f18;

	selp.f32	%f26, %f25, %f18, %p4;

	st.param.f32	[func_retval0+0], %f26;

	st.param.f32	[func_retval0+4], %f12;

	st.param.f32	[func_retval0+8], %f24;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5_

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5_(

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_0,

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_1,

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_2

)

{

	.reg .pred 	%p<5>;

	.reg .f32 	%f<59>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_0];

	ld.param.u64 	%rd2, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_2];

	ld.f32 	%f1, [%rd2+4];

	ld.param.u64 	%rd3, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_1];

	ld.f32 	%f2, [%rd3+8];

	mul.ftz.f32 	%f3, %f1, %f2;

	ld.f32 	%f4, [%rd2+8];

	ld.f32 	%f5, [%rd3+4];

	mul.ftz.f32 	%f6, %f4, %f5;

	sub.ftz.f32 	%f7, %f3, %f6;

	ld.f32 	%f8, [%rd3];

	mul.ftz.f32 	%f9, %f4, %f8;

	ld.f32 	%f10, [%rd2];

	mul.ftz.f32 	%f11, %f10, %f2;

	sub.ftz.f32 	%f12, %f9, %f11;

	mul.ftz.f32 	%f13, %f10, %f5;

	mul.ftz.f32 	%f14, %f1, %f8;

	sub.ftz.f32 	%f15, %f13, %f14;

	ld.v2.f32 	{%f16, %f17}, [%rd1];

	add.ftz.f32 	%f19, %f16, %f16;

	mul.ftz.f32 	%f20, %f19, 0f40490FDB;

	sin.approx.ftz.f32 	%f21, %f20;

	cos.approx.ftz.f32 	%f22, %f20;

	div.approx.ftz.f32 	%f23, %f21, %f22;

	add.ftz.f32 	%f25, %f17, 0fBF000000;

	mul.ftz.f32 	%f26, %f25, 0f40490FDB;

	sin.approx.ftz.f32 	%f27, %f26;

	mul.ftz.f32 	%f28, %f27, %f27;

	mov.f32 	%f29, 0f3F800000;

	sub.ftz.f32 	%f30, %f29, %f28;

	fma.rn.ftz.f32 	%f31, %f23, %f23, 0f3F800000;

	div.approx.ftz.f32 	%f32, %f30, %f31;

	sqrt.approx.ftz.f32 	%f33, %f32;

	mul.ftz.f32 	%f34, %f33, %f33;

	mul.ftz.f32 	%f35, %f23, %f34;

	mul.ftz.f32 	%f36, %f23, %f35;

	sqrt.approx.ftz.f32 	%f37, %f36;

	setp.gt.ftz.f32	%p1, %f16, 0f3F000000;

	neg.ftz.f32 	%f38, %f37;

	selp.f32	%f39, %f38, %f37, %p1;

	setp.gt.ftz.f32	%p2, %f16, 0f3E800000;

	setp.lt.ftz.f32	%p3, %f16, 0f3F400000;

	and.pred  	%p4, %p2, %p3;

	neg.ftz.f32 	%f40, %f33;

	selp.f32	%f41, %f40, %f33, %p4;

	fma.rn.ftz.f32 	%f42, %f41, %f7, 0f00000000;

	fma.rn.ftz.f32 	%f43, %f27, %f10, %f42;

	fma.rn.ftz.f32 	%f44, %f39, %f8, %f43;

	fma.rn.ftz.f32 	%f45, %f41, %f12, 0f00000000;

	fma.rn.ftz.f32 	%f46, %f27, %f1, %f45;

	fma.rn.ftz.f32 	%f47, %f39, %f5, %f46;

	fma.rn.ftz.f32 	%f48, %f41, %f15, 0f00000000;

	fma.rn.ftz.f32 	%f49, %f27, %f4, %f48;

	fma.rn.ftz.f32 	%f50, %f39, %f2, %f49;

	mul.ftz.f32 	%f51, %f47, %f47;

	fma.rn.ftz.f32 	%f52, %f44, %f44, %f51;

	fma.rn.ftz.f32 	%f53, %f50, %f50, %f52;

	sqrt.approx.ftz.f32 	%f54, %f53;

	rcp.approx.ftz.f32 	%f55, %f54;

	mul.ftz.f32 	%f56, %f44, %f55;

	mul.ftz.f32 	%f57, %f47, %f55;

	mul.ftz.f32 	%f58, %f50, %f55;

	st.param.f32	[func_retval0+0], %f56;

	st.param.f32	[func_retval0+4], %f57;

	st.param.f32	[func_retval0+8], %f58;

	ret;

}





