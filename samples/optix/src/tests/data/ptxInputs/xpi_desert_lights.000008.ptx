//
// Generated by LWPU LWVM Compiler
// Compiler built on Tue Sep 25 17:26:26 2012 (1348590386)
// Lwca compilation tools, release 5.0, V0.2.1221
//

.version 3.1
.target sm_20
.address_size 64

	.file	1 "C:/Users/craigh/AppData/Local/Temp/tmpxft_00000d00_00000000-11_kernel.cpp3.i"
	.file	2 "d:\\svn\\realrt\\build\\plugin_data\\optixrenderer_basicrelwrsive\\kernels\\optix\\internal/optix_internal.h"
	.file	3 "d:\\svn\\realrt\\build\\plugin_data\\optixrenderer_basicrelwrsive\\kernels\\optix\\optix_device.h"
	.file	4 "C:\\Users\\craigh\\AppData\\Local\\Temp\\optix2936\\kernel.lw"
	.file	5 "C:/Program Files/LWPU GPU Computing Toolkit/LWCA/v5.0/lwvm/ci_include.h"
.global .align 8 .b8 rayIndex[8];
.global .align 8 .b8 kIncomingRay[36];
.global .align 8 .b8 kTexCoord0[12];
.global .align 8 .b8 kShadingNormal[12];
.global .align 8 .b8 kIntersectionPos[12];
.global .align 1 .b8 pointIndiceBuffer[1];
.global .align 1 .b8 pointBuffer[1];
.global .align 1 .b8 texCoordIndiceBuffer[1];
.global .align 1 .b8 texCoordBuffer[1];
.global .align 1 .b8 normalIndiceBuffer[1];
.global .align 1 .b8 normalBuffer[1];
.global .align 1 .b8 materialIndiceBuffer[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo8rayIndexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12kIncomingRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10kTexCoord0E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14kShadingNormalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16kIntersectionPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8rayIndexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12kIncomingRayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10kTexCoord0E[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14kShadingNormalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16kIntersectionPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8rayIndexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12kIncomingRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic10kTexCoord0E[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 107, 84, 101, 120, 67, 111, 111, 114, 100, 48, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14kShadingNormalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 107, 83, 104, 97, 100, 105, 110, 103, 78, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic16kIntersectionPosE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 107, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 80, 111, 115, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8rayIndexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12kIncomingRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10kTexCoord0E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14kShadingNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16kIntersectionPosE[1];

.visible .func  (.param .b32 func_retval0) _Z20rtReportIntersectionj(
	.param .b32 _Z20rtReportIntersectionj_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<4>;


	ld.param.u32 	%r2, [_Z20rtReportIntersectionj_param_0];
	// inline asm
	call (%r1), _rt_report_intersection, (%r2);
	// inline asm
	.loc 2 180 1
	setp.ne.s32 	%p1, %r1, 0;
	.loc 3 1064 1
	selp.u32 	%r3, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.visible .func  (.param .b32 func_retval0) _ZN5optix22rt_report_intersectionEj(
	.param .b32 _ZN5optix22rt_report_intersectionEj_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<4>;


	ld.param.u32 	%r2, [_ZN5optix22rt_report_intersectionEj_param_0];
	// inline asm
	call (%r1), _rt_report_intersection, (%r2);
	// inline asm
	.loc 2 180 1
	setp.ne.s32 	%p1, %r1, 0;
	selp.u32 	%r3, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

.visible .func _Z17intersectMeshImpli(
	.param .b32 _Z17intersectMeshImpli_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<51>;
	.reg .f32 	%f<184>;
	.reg .s64 	%rd<87>;
	.reg .f64 	%fd<3>;


	ld.param.u32 	%r1, [_Z17intersectMeshImpli_param_0];
	.loc 4 63 1
	cvta.global.u64 	%rd2, pointIndiceBuffer;
	cvt.s64.s32 	%rd3, %r1;
	mov.u32 	%r8, 1;
	mov.u32 	%r3, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 64 1
	ld.u32 	%rd9, [%rd1];
	cvta.global.u64 	%rd20, pointBuffer;
	mov.u32 	%r9, 16;
	.loc 4 65 1
	ld.u32 	%rd15, [%rd1+4];
	.loc 4 66 1
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 64 1
	ld.v4.f32 	{%f166, %f167, %f168, %f169}, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 65 1
	ld.v4.f32 	{%f170, %f171, %f172, %f173}, [%rd13];
	.loc 4 69 1
	sub.ftz.f32 	%f1, %f170, %f166;
	sub.ftz.f32 	%f2, %f171, %f167;
	sub.ftz.f32 	%f3, %f172, %f168;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 66 1
	ld.v4.f32 	{%f174, %f175, %f176, %f177}, [%rd19];
	.loc 4 70 1
	sub.ftz.f32 	%f24, %f166, %f174;
	sub.ftz.f32 	%f26, %f167, %f175;
	sub.ftz.f32 	%f28, %f168, %f176;
	.loc 4 73 1
	mul.ftz.f32 	%f29, %f2, %f28;
	mul.ftz.f32 	%f30, %f3, %f26;
	sub.ftz.f32 	%f4, %f29, %f30;
	mul.ftz.f32 	%f31, %f3, %f24;
	mul.ftz.f32 	%f32, %f1, %f28;
	sub.ftz.f32 	%f5, %f31, %f32;
	mul.ftz.f32 	%f33, %f1, %f26;
	mul.ftz.f32 	%f34, %f2, %f24;
	sub.ftz.f32 	%f6, %f33, %f34;
	.loc 4 85 1
	ld.global.v2.f32 	{%f178, %f179}, [kIncomingRay+8];
	.loc 4 74 1
	ld.global.u32 	%rd25, [kIncomingRay+20];
	shl.b64 	%rd26, %rd25, 32;
	ld.global.u32 	%rd27, [kIncomingRay+16];
	or.b64  	%rd28, %rd26, %rd27;
	mov.b64 	 %fd1, %rd28;
	mov.b64	{%f180, %f181}, %fd1;
	mul.ftz.f32 	%f36, %f5, %f180;
	fma.rn.ftz.f32 	%f38, %f4, %f179, %f36;
	fma.rn.ftz.f32 	%f7, %f6, %f181, %f38;
	mov.f32 	%f40, 0f3F800000;
	.loc 5 749 5
	div.approx.ftz.f32 	%f8, %f40, %f7;
	.loc 4 85 1
	ld.global.v2.f32 	{%f182, %f183}, [kIncomingRay];
	sub.ftz.f32 	%f42, %f166, %f182;
	sub.ftz.f32 	%f44, %f167, %f183;
	sub.ftz.f32 	%f46, %f168, %f178;
	.loc 4 86 1
	mul.ftz.f32 	%f47, %f5, %f44;
	fma.rn.ftz.f32 	%f48, %f4, %f42, %f47;
	fma.rn.ftz.f32 	%f9, %f6, %f46, %f48;
	.loc 4 87 1
	mul.ftz.f32 	%f10, %f8, %f9;
	.loc 4 94 1
	mul.ftz.f32 	%f49, %f44, %f181;
	mul.ftz.f32 	%f50, %f46, %f180;
	sub.ftz.f32 	%f11, %f49, %f50;
	mul.ftz.f32 	%f51, %f46, %f179;
	mul.ftz.f32 	%f52, %f42, %f181;
	sub.ftz.f32 	%f12, %f51, %f52;
	mul.ftz.f32 	%f53, %f42, %f180;
	mul.ftz.f32 	%f54, %f44, %f179;
	sub.ftz.f32 	%f13, %f53, %f54;
	.loc 4 95 1
	mul.ftz.f32 	%f55, %f12, %f26;
	fma.rn.ftz.f32 	%f56, %f11, %f24, %f55;
	fma.rn.ftz.f32 	%f14, %f13, %f28, %f56;
	.loc 4 96 1
	mul.ftz.f32 	%f15, %f8, %f14;
	.loc 4 98 1
	setp.lt.ftz.f32 	%p1, %f15, 0f00000000;
	@%p1 bra 	BB2_4;

	.loc 4 101 1
	mul.ftz.f32 	%f57, %f12, %f2;
	fma.rn.ftz.f32 	%f58, %f11, %f1, %f57;
	fma.rn.ftz.f32 	%f59, %f13, %f3, %f58;
	.loc 4 102 1
	mul.ftz.f32 	%f16, %f8, %f59;
	.loc 4 104 1
	add.ftz.f32 	%f60, %f14, %f59;
	mul.ftz.f32 	%f61, %f60, %f7;
	mul.ftz.f32 	%f62, %f7, %f7;
	setp.gt.ftz.f32 	%p2, %f61, %f62;
	setp.lt.ftz.f32 	%p3, %f16, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB2_4;

	// inline asm
	call (%r16), _rt_potential_intersection, (%f10);
	// inline asm
	.loc 4 107 1
	setp.eq.s32 	%p5, %r16, 0;
	@%p5 bra 	BB2_4;

	.loc 4 109 1
	sub.ftz.f32 	%f65, %f40, %f15;
	sub.ftz.f32 	%f66, %f65, %f16;
	.loc 4 111 1
	cvta.global.u64 	%rd30, texCoordIndiceBuffer;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 132 1
	ld.u32 	%rd37, [%rd29];
	cvta.global.u64 	%rd48, texCoordBuffer;
	mov.u32 	%r24, 8;
	.loc 4 133 1
	ld.u32 	%rd43, [%rd29+4];
	.loc 4 134 1
	ld.u32 	%rd49, [%rd29+8];
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd37, %rd24, %rd24, %rd24);
	// inline asm
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd43, %rd24, %rd24, %rd24);
	// inline asm
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd49, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 135 1
	ld.v2.f32 	{%f124, %f125}, [%rd35];
	ld.v2.f32 	{%f126, %f127}, [%rd41];
	mul.ftz.f32 	%f68, %f126, %f15;
	mul.ftz.f32 	%f70, %f127, %f15;
	fma.rn.ftz.f32 	%f72, %f124, %f66, %f68;
	fma.rn.ftz.f32 	%f74, %f125, %f66, %f70;
	ld.v2.f32 	{%f128, %f129}, [%rd47];
	fma.rn.ftz.f32 	%f76, %f128, %f16, %f72;
	fma.rn.ftz.f32 	%f78, %f129, %f16, %f74;
	mov.u32 	%r43, 1056964608;
	.loc 4 136 1
	st.global.u32 	[kTexCoord0+8], %r43;
	st.global.v2.f32 	[kTexCoord0], {%f76, %f78};
	.loc 4 140 1
	cvta.global.u64 	%rd54, normalIndiceBuffer;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 143 1
	ld.u32 	%rd61, [%rd53];
	cvta.global.u64 	%rd72, normalBuffer;
	.loc 4 144 1
	ld.u32 	%rd67, [%rd53+4];
	.loc 4 145 1
	ld.u32 	%rd73, [%rd53+8];
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd61, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 143 1
	ld.v4.f32 	{%f136, %f137, %f138, %f139}, [%rd59];
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd67, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 144 1
	ld.v4.f32 	{%f140, %f141, %f142, %f143}, [%rd65];
	.loc 4 151 1
	mul.ftz.f32 	%f80, %f140, %f15;
	mul.ftz.f32 	%f82, %f141, %f15;
	mul.ftz.f32 	%f84, %f142, %f15;
	fma.rn.ftz.f32 	%f86, %f136, %f66, %f80;
	fma.rn.ftz.f32 	%f88, %f137, %f66, %f82;
	fma.rn.ftz.f32 	%f90, %f138, %f66, %f84;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd73, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 145 1
	ld.v4.f32 	{%f144, %f145, %f146, %f147}, [%rd71];
	.loc 4 151 1
	fma.rn.ftz.f32 	%f92, %f144, %f16, %f86;
	fma.rn.ftz.f32 	%f94, %f145, %f16, %f88;
	fma.rn.ftz.f32 	%f96, %f146, %f16, %f90;
	.loc 4 153 1
	setp.gt.ftz.f32 	%p6, %f9, 0f00000000;
	selp.f32 	%f97, 0f3F800000, 0fBF800000, %p6;
	mul.ftz.f32 	%f98, %f92, %f97;
	mul.ftz.f32 	%f99, %f94, %f97;
	mul.ftz.f32 	%f100, %f96, %f97;
	st.global.f32 	[kShadingNormal+8], %f100;
	st.global.v2.f32 	[kShadingNormal], {%f98, %f99};
	.loc 4 160 1
	mul.ftz.f32 	%f101, %f5, %f5;
	fma.rn.ftz.f32 	%f102, %f4, %f4, %f101;
	fma.rn.ftz.f32 	%f103, %f6, %f6, %f102;
	.loc 5 996 5
	sqrt.approx.ftz.f32 	%f104, %f103;
	.loc 4 160 1
	rcp.approx.ftz.f32 	%f105, %f104;
	mul.ftz.f32 	%f106, %f4, %f105;
	mul.ftz.f32 	%f107, %f5, %f105;
	mul.ftz.f32 	%f108, %f6, %f105;
	mul.ftz.f32 	%f109, %f106, %f97;
	mul.ftz.f32 	%f110, %f107, %f97;
	mul.ftz.f32 	%f111, %f108, %f97;
	.loc 4 162 1
	ld.global.v2.f32 	{%f154, %f155}, [kIncomingRay+8];
	ld.global.v2.f32 	{%f156, %f157}, [kIncomingRay];
	fma.rn.ftz.f32 	%f114, %f155, %f10, %f156;
	ld.global.u32 	%rd83, [kIncomingRay+20];
	shl.b64 	%rd84, %rd83, 32;
	ld.global.u32 	%rd85, [kIncomingRay+16];
	or.b64  	%rd86, %rd84, %rd85;
	mov.b64 	 %fd2, %rd86;
	mov.b64	{%f158, %f159}, %fd2;
	fma.rn.ftz.f32 	%f117, %f158, %f10, %f157;
	fma.rn.ftz.f32 	%f120, %f159, %f10, %f154;
	fma.rn.ftz.f32 	%f121, %f109, 0fB8D1B717, %f114;
	fma.rn.ftz.f32 	%f122, %f110, 0fB8D1B717, %f117;
	fma.rn.ftz.f32 	%f123, %f111, 0fB8D1B717, %f120;
	st.global.f32 	[kIntersectionPos+8], %f123;
	st.global.v2.f32 	[kIntersectionPos], {%f121, %f122};
	.loc 4 168 1
	cvta.global.u64 	%rd78, materialIndiceBuffer;
	mov.u32 	%r34, 2;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r8, %r34, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 168 1
	ld.u16 	%r36, [%rd77];
	// inline asm
	call (%r35), _rt_report_intersection, (%r36);
	// inline asm

BB2_4:
	.loc 4 169 2
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN5optix6bufferI5uint3Li1EEixEy(
	.param .b64 _ZN5optix6bufferI5uint3Li1EEixEy_param_0,
	.param .b64 _ZN5optix6bufferI5uint3Li1EEixEy_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_ZN5optix6bufferI5uint3Li1EEixEy_param_0];
	ld.param.u64 	%rd3, [_ZN5optix6bufferI5uint3Li1EEixEy_param_1];
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.param.b64	[func_retval0+0], %rd1;
	.loc 3 205 1
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN5optix6bufferI6float4Li1EEixEy(
	.param .b64 _ZN5optix6bufferI6float4Li1EEixEy_param_0,
	.param .b64 _ZN5optix6bufferI6float4Li1EEixEy_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_ZN5optix6bufferI6float4Li1EEixEy_param_0];
	ld.param.u64 	%rd3, [_ZN5optix6bufferI6float4Li1EEixEy_param_1];
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 16;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.param.b64	[func_retval0+0], %rd1;
	.loc 3 205 1
	ret;
}

.visible .func  (.param .b32 func_retval0) _ZN5optix25rt_potential_intersectionEf(
	.param .b32 _ZN5optix25rt_potential_intersectionEf_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<2>;


	ld.param.f32 	%f1, [_ZN5optix25rt_potential_intersectionEf_param_0];
	// inline asm
	call (%r1), _rt_potential_intersection, (%f1);
	// inline asm
	.loc 2 170 1
	setp.ne.s32 	%p1, %r1, 0;
	selp.u32 	%r2, 1, 0, %p1;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN5optix6bufferI6float2Li1EEixEy(
	.param .b64 _ZN5optix6bufferI6float2Li1EEixEy_param_0,
	.param .b64 _ZN5optix6bufferI6float2Li1EEixEy_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_ZN5optix6bufferI6float2Li1EEixEy_param_0];
	ld.param.u64 	%rd3, [_ZN5optix6bufferI6float2Li1EEixEy_param_1];
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 8;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.param.b64	[func_retval0+0], %rd1;
	.loc 3 205 1
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN5optix6bufferItLi1EEixEy(
	.param .b64 _ZN5optix6bufferItLi1EEixEy_param_0,
	.param .b64 _ZN5optix6bufferItLi1EEixEy_param_1
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_ZN5optix6bufferItLi1EEixEy_param_0];
	ld.param.u64 	%rd3, [_ZN5optix6bufferItLi1EEixEy_param_1];
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 2;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	st.param.b64	[func_retval0+0], %rd1;
	.loc 3 205 1
	ret;
}

.visible .entry _Z13intersectMeshi(
	.param .u32 _Z13intersectMeshi_param_0
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<51>;
	.reg .f32 	%f<184>;
	.reg .s64 	%rd<87>;
	.reg .f64 	%fd<3>;


	ld.param.u32 	%r1, [_Z13intersectMeshi_param_0];
	.loc 4 63 1
	cvta.global.u64 	%rd2, pointIndiceBuffer;
	cvt.s64.s32 	%rd3, %r1;
	mov.u32 	%r8, 1;
	mov.u32 	%r3, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 64 1
	ld.u32 	%rd9, [%rd1];
	cvta.global.u64 	%rd20, pointBuffer;
	mov.u32 	%r9, 16;
	.loc 4 65 1
	ld.u32 	%rd15, [%rd1+4];
	.loc 4 66 1
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 64 1
	ld.v4.f32 	{%f166, %f167, %f168, %f169}, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 65 1
	ld.v4.f32 	{%f170, %f171, %f172, %f173}, [%rd13];
	.loc 4 69 1
	sub.ftz.f32 	%f1, %f170, %f166;
	sub.ftz.f32 	%f2, %f171, %f167;
	sub.ftz.f32 	%f3, %f172, %f168;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r8, %r9, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 66 1
	ld.v4.f32 	{%f174, %f175, %f176, %f177}, [%rd19];
	.loc 4 70 1
	sub.ftz.f32 	%f24, %f166, %f174;
	sub.ftz.f32 	%f26, %f167, %f175;
	sub.ftz.f32 	%f28, %f168, %f176;
	.loc 4 73 1
	mul.ftz.f32 	%f29, %f2, %f28;
	mul.ftz.f32 	%f30, %f3, %f26;
	sub.ftz.f32 	%f4, %f29, %f30;
	mul.ftz.f32 	%f31, %f3, %f24;
	mul.ftz.f32 	%f32, %f1, %f28;
	sub.ftz.f32 	%f5, %f31, %f32;
	mul.ftz.f32 	%f33, %f1, %f26;
	mul.ftz.f32 	%f34, %f2, %f24;
	sub.ftz.f32 	%f6, %f33, %f34;
	.loc 4 85 1
	ld.global.v2.f32 	{%f178, %f179}, [kIncomingRay+8];
	.loc 4 74 1
	ld.global.u32 	%rd25, [kIncomingRay+20];
	shl.b64 	%rd26, %rd25, 32;
	ld.global.u32 	%rd27, [kIncomingRay+16];
	or.b64  	%rd28, %rd26, %rd27;
	mov.b64 	 %fd1, %rd28;
	mov.b64	{%f180, %f181}, %fd1;
	mul.ftz.f32 	%f36, %f5, %f180;
	fma.rn.ftz.f32 	%f38, %f4, %f179, %f36;
	fma.rn.ftz.f32 	%f7, %f6, %f181, %f38;
	mov.f32 	%f40, 0f3F800000;
	.loc 5 749 5
	div.approx.ftz.f32 	%f8, %f40, %f7;
	.loc 4 85 1
	ld.global.v2.f32 	{%f182, %f183}, [kIncomingRay];
	sub.ftz.f32 	%f42, %f166, %f182;
	sub.ftz.f32 	%f44, %f167, %f183;
	sub.ftz.f32 	%f46, %f168, %f178;
	.loc 4 86 1
	mul.ftz.f32 	%f47, %f5, %f44;
	fma.rn.ftz.f32 	%f48, %f4, %f42, %f47;
	fma.rn.ftz.f32 	%f9, %f6, %f46, %f48;
	.loc 4 87 1
	mul.ftz.f32 	%f10, %f8, %f9;
	.loc 4 94 1
	mul.ftz.f32 	%f49, %f44, %f181;
	mul.ftz.f32 	%f50, %f46, %f180;
	sub.ftz.f32 	%f11, %f49, %f50;
	mul.ftz.f32 	%f51, %f46, %f179;
	mul.ftz.f32 	%f52, %f42, %f181;
	sub.ftz.f32 	%f12, %f51, %f52;
	mul.ftz.f32 	%f53, %f42, %f180;
	mul.ftz.f32 	%f54, %f44, %f179;
	sub.ftz.f32 	%f13, %f53, %f54;
	.loc 4 95 1
	mul.ftz.f32 	%f55, %f12, %f26;
	fma.rn.ftz.f32 	%f56, %f11, %f24, %f55;
	fma.rn.ftz.f32 	%f14, %f13, %f28, %f56;
	.loc 4 96 1
	mul.ftz.f32 	%f15, %f8, %f14;
	.loc 4 98 1
	setp.lt.ftz.f32 	%p1, %f15, 0f00000000;
	@%p1 bra 	BB8_4;

	.loc 4 101 1
	mul.ftz.f32 	%f57, %f12, %f2;
	fma.rn.ftz.f32 	%f58, %f11, %f1, %f57;
	fma.rn.ftz.f32 	%f59, %f13, %f3, %f58;
	.loc 4 102 1
	mul.ftz.f32 	%f16, %f8, %f59;
	.loc 4 104 1
	add.ftz.f32 	%f60, %f14, %f59;
	mul.ftz.f32 	%f61, %f60, %f7;
	mul.ftz.f32 	%f62, %f7, %f7;
	setp.gt.ftz.f32 	%p2, %f61, %f62;
	setp.lt.ftz.f32 	%p3, %f16, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB8_4;

	// inline asm
	call (%r16), _rt_potential_intersection, (%f10);
	// inline asm
	.loc 4 107 1
	setp.eq.s32 	%p5, %r16, 0;
	@%p5 bra 	BB8_4;

	.loc 4 109 1
	sub.ftz.f32 	%f65, %f40, %f15;
	sub.ftz.f32 	%f66, %f65, %f16;
	.loc 4 111 1
	cvta.global.u64 	%rd30, texCoordIndiceBuffer;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 132 1
	ld.u32 	%rd37, [%rd29];
	cvta.global.u64 	%rd48, texCoordBuffer;
	mov.u32 	%r24, 8;
	.loc 4 133 1
	ld.u32 	%rd43, [%rd29+4];
	.loc 4 134 1
	ld.u32 	%rd49, [%rd29+8];
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd37, %rd24, %rd24, %rd24);
	// inline asm
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd43, %rd24, %rd24, %rd24);
	// inline asm
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r8, %r24, %rd49, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 135 1
	ld.v2.f32 	{%f124, %f125}, [%rd35];
	ld.v2.f32 	{%f126, %f127}, [%rd41];
	mul.ftz.f32 	%f68, %f126, %f15;
	mul.ftz.f32 	%f70, %f127, %f15;
	fma.rn.ftz.f32 	%f72, %f124, %f66, %f68;
	fma.rn.ftz.f32 	%f74, %f125, %f66, %f70;
	ld.v2.f32 	{%f128, %f129}, [%rd47];
	fma.rn.ftz.f32 	%f76, %f128, %f16, %f72;
	fma.rn.ftz.f32 	%f78, %f129, %f16, %f74;
	mov.u32 	%r43, 1056964608;
	.loc 4 136 1
	st.global.u32 	[kTexCoord0+8], %r43;
	st.global.v2.f32 	[kTexCoord0], {%f76, %f78};
	.loc 4 140 1
	cvta.global.u64 	%rd54, normalIndiceBuffer;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r8, %r3, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 143 1
	ld.u32 	%rd61, [%rd53];
	cvta.global.u64 	%rd72, normalBuffer;
	.loc 4 144 1
	ld.u32 	%rd67, [%rd53+4];
	.loc 4 145 1
	ld.u32 	%rd73, [%rd53+8];
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd61, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 143 1
	ld.v4.f32 	{%f136, %f137, %f138, %f139}, [%rd59];
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd67, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 144 1
	ld.v4.f32 	{%f140, %f141, %f142, %f143}, [%rd65];
	.loc 4 151 1
	mul.ftz.f32 	%f80, %f140, %f15;
	mul.ftz.f32 	%f82, %f141, %f15;
	mul.ftz.f32 	%f84, %f142, %f15;
	fma.rn.ftz.f32 	%f86, %f136, %f66, %f80;
	fma.rn.ftz.f32 	%f88, %f137, %f66, %f82;
	fma.rn.ftz.f32 	%f90, %f138, %f66, %f84;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd72, %r8, %r9, %rd73, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 145 1
	ld.v4.f32 	{%f144, %f145, %f146, %f147}, [%rd71];
	.loc 4 151 1
	fma.rn.ftz.f32 	%f92, %f144, %f16, %f86;
	fma.rn.ftz.f32 	%f94, %f145, %f16, %f88;
	fma.rn.ftz.f32 	%f96, %f146, %f16, %f90;
	.loc 4 153 1
	setp.gt.ftz.f32 	%p6, %f9, 0f00000000;
	selp.f32 	%f97, 0f3F800000, 0fBF800000, %p6;
	mul.ftz.f32 	%f98, %f92, %f97;
	mul.ftz.f32 	%f99, %f94, %f97;
	mul.ftz.f32 	%f100, %f96, %f97;
	st.global.f32 	[kShadingNormal+8], %f100;
	st.global.v2.f32 	[kShadingNormal], {%f98, %f99};
	.loc 4 160 1
	mul.ftz.f32 	%f101, %f5, %f5;
	fma.rn.ftz.f32 	%f102, %f4, %f4, %f101;
	fma.rn.ftz.f32 	%f103, %f6, %f6, %f102;
	.loc 5 996 5
	sqrt.approx.ftz.f32 	%f104, %f103;
	.loc 4 160 1
	rcp.approx.ftz.f32 	%f105, %f104;
	mul.ftz.f32 	%f106, %f4, %f105;
	mul.ftz.f32 	%f107, %f5, %f105;
	mul.ftz.f32 	%f108, %f6, %f105;
	mul.ftz.f32 	%f109, %f106, %f97;
	mul.ftz.f32 	%f110, %f107, %f97;
	mul.ftz.f32 	%f111, %f108, %f97;
	.loc 4 162 1
	ld.global.v2.f32 	{%f154, %f155}, [kIncomingRay+8];
	ld.global.v2.f32 	{%f156, %f157}, [kIncomingRay];
	fma.rn.ftz.f32 	%f114, %f155, %f10, %f156;
	ld.global.u32 	%rd83, [kIncomingRay+20];
	shl.b64 	%rd84, %rd83, 32;
	ld.global.u32 	%rd85, [kIncomingRay+16];
	or.b64  	%rd86, %rd84, %rd85;
	mov.b64 	 %fd2, %rd86;
	mov.b64	{%f158, %f159}, %fd2;
	fma.rn.ftz.f32 	%f117, %f158, %f10, %f157;
	fma.rn.ftz.f32 	%f120, %f159, %f10, %f154;
	fma.rn.ftz.f32 	%f121, %f109, 0fB8D1B717, %f114;
	fma.rn.ftz.f32 	%f122, %f110, 0fB8D1B717, %f117;
	fma.rn.ftz.f32 	%f123, %f111, 0fB8D1B717, %f120;
	st.global.f32 	[kIntersectionPos+8], %f123;
	st.global.v2.f32 	[kIntersectionPos], {%f121, %f122};
	.loc 4 168 1
	cvta.global.u64 	%rd78, materialIndiceBuffer;
	mov.u32 	%r34, 2;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd78, %r8, %r34, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 168 1
	ld.u16 	%r36, [%rd77];
	// inline asm
	call (%r35), _rt_report_intersection, (%r36);
	// inline asm

BB8_4:
	.loc 4 172 2
	ret;
}

.visible .entry _Z10meshBoundsiPf(
	.param .u32 _Z10meshBoundsiPf_param_0,
	.param .u64 _Z10meshBoundsiPf_param_1
)
{
	.reg .s32 	%r<21>;
	.reg .f32 	%f<34>;
	.reg .s64 	%rd<27>;


	ld.param.u64 	%rd25, [_Z10meshBoundsiPf_param_1];
	cvta.to.global.u64 	%rd26, %rd25;
	.loc 4 210 1
	ld.param.s32 	%rd3, [_Z10meshBoundsiPf_param_0];
	cvta.global.u64 	%rd2, pointIndiceBuffer;
	mov.u32 	%r7, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r7, %r2, %rd3, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 210 1
	ld.u32 	%rd9, [%rd1];
	cvta.global.u64 	%rd20, pointBuffer;
	mov.u32 	%r8, 16;
	.loc 4 210 1
	ld.u32 	%rd15, [%rd1+4];
	ld.u32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd9, %rd24, %rd24, %rd24);
	// inline asm
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd7];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd15, %rd24, %rd24, %rd24);
	// inline asm
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd13];
	.loc 5 420 5
	min.ftz.f32 	%f3, %f22, %f26;
	min.ftz.f32 	%f6, %f23, %f27;
	min.ftz.f32 	%f9, %f24, %f28;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r7, %r8, %rd21, %rd24, %rd24, %rd24);
	// inline asm
	.loc 4 210 1
	ld.v4.f32 	{%f30, %f31, %f32, %f33}, [%rd19];
	.loc 5 420 5
	min.ftz.f32 	%f11, %f3, %f30;
	min.ftz.f32 	%f13, %f6, %f31;
	min.ftz.f32 	%f15, %f9, %f32;
	.loc 4 210 1
	st.global.f32 	[%rd26], %f11;
	st.global.f32 	[%rd26+4], %f13;
	st.global.f32 	[%rd26+8], %f15;
	.loc 5 432 5
	max.ftz.f32 	%f16, %f22, %f26;
	max.ftz.f32 	%f17, %f23, %f27;
	max.ftz.f32 	%f18, %f24, %f28;
	max.ftz.f32 	%f19, %f16, %f30;
	max.ftz.f32 	%f20, %f17, %f31;
	max.ftz.f32 	%f21, %f18, %f32;
	.loc 4 210 1
	st.global.f32 	[%rd26+12], %f19;
	st.global.f32 	[%rd26+16], %f20;
	st.global.f32 	[%rd26+20], %f21;
	.loc 4 210 2
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN5optix13rt_buffer_getEPvjjyyyy(
	.param .b64 _ZN5optix13rt_buffer_getEPvjjyyyy_param_0,
	.param .b32 _ZN5optix13rt_buffer_getEPvjjyyyy_param_1,
	.param .b32 _ZN5optix13rt_buffer_getEPvjjyyyy_param_2,
	.param .b64 _ZN5optix13rt_buffer_getEPvjjyyyy_param_3,
	.param .b64 _ZN5optix13rt_buffer_getEPvjjyyyy_param_4,
	.param .b64 _ZN5optix13rt_buffer_getEPvjjyyyy_param_5,
	.param .b64 _ZN5optix13rt_buffer_getEPvjjyyyy_param_6
)
{
	.reg .s32 	%r<3>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_0];
	ld.param.u32 	%r1, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_1];
	ld.param.u32 	%r2, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_2];
	ld.param.u64 	%rd3, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_3];
	ld.param.u64 	%rd4, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_4];
	ld.param.u64 	%rd5, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_5];
	ld.param.u64 	%rd6, [_ZN5optix13rt_buffer_getEPvjjyyyy_param_6];
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd5, %rd6);
	// inline asm
	st.param.b64	[func_retval0+0], %rd1;
	.loc 2 131 1
	ret;
}


