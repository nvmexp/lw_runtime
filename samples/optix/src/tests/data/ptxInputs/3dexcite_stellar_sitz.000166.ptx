//
// Generated by LWPU LWVM Compiler
// Compiler built on Wed Jul 10 21:41:20 2013 (1373485280)
// Lwca compilation tools, release 5.5, V5.5.0
//

.version 3.2
.target sm_20
.address_size 64

	.file	1 "E:/stellar/src/rendering/components/optix/programs/ClosestHit.lw", 1435152374, 8441
	.file	2 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\Textures.h", 1435073305, 1534
	.file	3 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\internal/optix_internal.h", 1434101976, 18808
	.file	4 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\optix_device.h", 1434101976, 118634
	.file	5 "E:/stellar/src\\util/Vec2.hpp", 1429187304, 11203
	.file	6 "E:/stellar/src\\util/Vec3.hpp", 1434475083, 12734
	.file	7 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\lwca-win64-5.5\\include\\math_functions.h", 1402479048, 404374
	.file	8 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\OptixBufferPtr.hpp", 1435073284, 2233
	.file	9 "E:/stellar/src\\util/Matrix.hpp", 1429187304, 26312
	.file	10 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\lwca-win64-5.5\\include\\device_functions.h", 1402479048, 191626
.visible .func stlr_main
(
	.param .b64 stlr_main_param_0,
	.param .b64 stlr_main_param_1,
	.param .b64 stlr_main_param_2,
	.param .b64 stlr_main_param_3,
	.param .b64 stlr_main_param_4,
	.param .b64 stlr_main_param_5,
	.param .b64 stlr_main_param_6,
	.param .b64 stlr_main_param_7,
	.param .b64 stlr_main_param_8
)
;
.global .align 1 .b8 render_task_data[1];
.global .align 4 .u32 frame_number;
.global .align 4 .u32 render_task_id;
.global .align 4 .u32 triangle_id;
.global .align 4 .u32 shape_instance_id;
.global .align 4 .u32 shape_id;
.global .align 4 .u32 material_instance_id;
.global .align 16 .b8 ray_data[64];
.global .align 4 .f32 bc_u;
.global .align 4 .f32 bc_v;
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14render_task_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11triangle_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17shape_instance_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8shape_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo20material_instance_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8ray_dataE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4bc_uE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4bc_vE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14render_task_idE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11triangle_idE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17shape_instance_idE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8shape_idE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename20material_instance_idE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8ray_dataE[8] = {82, 97, 121, 68, 97, 116, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4bc_uE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename4bc_vE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14render_task_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11triangle_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17shape_instance_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8shape_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum20material_instance_idE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8ray_dataE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4bc_uE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4bc_vE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14render_task_idE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11triangle_idE[22] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 114, 105, 97, 110, 103, 108, 101, 95, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic17shape_instance_idE[28] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 112, 101, 95, 105, 110, 115, 116, 97, 110, 99, 101, 95, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8shape_idE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 112, 101, 95, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic20material_instance_idE[31] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 109, 97, 116, 101, 114, 105, 97, 108, 95, 105, 110, 115, 116, 97, 110, 99, 101, 95, 105, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8ray_dataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4bc_uE[15] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 99, 95, 117, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4bc_vE[15] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 98, 99, 95, 118, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14render_task_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11triangle_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17shape_instance_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8shape_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation20material_instance_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8ray_dataE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4bc_uE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4bc_vE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 $str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90, 0};

.visible .func  (.param .b32 func_retval0) _Z14colwertPtrToIdRKPKv(
	.param .b64 _Z14colwertPtrToIdRKPKv_param_0
)
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z14colwertPtrToIdRKPKv_param_0];
	.loc 2 8 1
	ld.u32 	%r1, [%rd1];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .func optix_texture(
	.param .b64 optix_texture_param_0,
	.param .b64 optix_texture_param_1,
	.param .b64 optix_texture_param_2
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_texture_param_0];
	ld.param.u64 	%rd2, [optix_texture_param_1];
	ld.param.u64 	%rd3, [optix_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.f32 	%f8, 0f00000000;
	.loc 2 17 23
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f9, %f10, %f8, %f8);
	// inline asm
	.loc 2 17 128
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 18 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];
	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 167 1
	ret;
}

.visible .func optix_texture_lod(
	.param .b64 optix_texture_lod_param_0,
	.param .b64 optix_texture_lod_param_1,
	.param .b64 optix_texture_lod_param_2,
	.param .b64 optix_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 27 50
	ld.f32 	%f8, [%rd4];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 2 27 50
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f9, %f10, %f7, %r3, %f8);
	// inline asm
	.loc 2 27 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 28 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix10rtTex2DLodI6float4EET_ifff(
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_2];
	ld.param.f32 	%f8, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_3];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 666 20
	ret;
}

.visible .func optix_texture_grad(
	.param .b64 optix_texture_grad_param_0,
	.param .b64 optix_texture_grad_param_1,
	.param .b64 optix_texture_grad_param_2,
	.param .b64 optix_texture_grad_param_3,
	.param .b64 optix_texture_grad_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<20>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [optix_texture_grad_param_0];
	ld.param.u64 	%rd2, [optix_texture_grad_param_1];
	ld.param.u64 	%rd3, [optix_texture_grad_param_2];
	ld.param.u64 	%rd4, [optix_texture_grad_param_3];
	ld.param.u64 	%rd5, [optix_texture_grad_param_4];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 2 38 60
	ld.v2.f32 	{%f14, %f15}, [%rd3];
	ld.v2.f32 	{%f16, %f17}, [%rd4];
	ld.v2.f32 	{%f18, %f19}, [%rd5];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f14, %f15, %f13, %r3, %f16, %f17, %f13, %f18, %f19, %f13);
	// inline asm
	.loc 2 38 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 39 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3_(
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2,
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3[8],
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4[8]
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0];
	ld.param.f32 	%f5, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1];
	ld.param.f32 	%f6, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2];
	ld.param.f32 	%f8, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3];
	ld.param.f32 	%f9, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3+4];
	ld.param.f32 	%f11, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4];
	ld.param.f32 	%f12, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4+4];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f13, %r3, %f8, %f9, %f13, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 636 20
	ret;
}

.visible .func optix_lwbe_texture(
	.param .b64 optix_lwbe_texture_param_0,
	.param .b64 optix_lwbe_texture_param_1,
	.param .b64 optix_lwbe_texture_param_2
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 47 52
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	.loc 2 47 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 48 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix12rtTexLwbemapI6float4EET_ifff(
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2];
	ld.param.f32 	%f7, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 702 20
	ret;
}

.visible .func optix_lwbe_texture_lod(
	.param .b64 optix_lwbe_texture_lod_param_0,
	.param .b64 optix_lwbe_texture_lod_param_1,
	.param .b64 optix_lwbe_texture_lod_param_2,
	.param .b64 optix_lwbe_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_lwbe_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 57 56
	ld.f32 	%f8, [%rd4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	.loc 2 57 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 58 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix15rtTexLwbemapLodI6float4EET_iffff(
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0];
	ld.param.f32 	%f5, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1];
	ld.param.f32 	%f6, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2];
	ld.param.f32 	%f7, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3];
	ld.param.f32 	%f8, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 714 20
	ret;
}

.visible .func _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E(
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_0,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_1,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_2,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_3,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_4
)
{
	.reg .f32 	%f<54>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_0];
	ld.param.u64 	%rd2, [_Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_1];
	ld.param.u64 	%rd3, [_Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_2];
	ld.param.u64 	%rd4, [_Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_3];
	ld.param.u64 	%rd5, [_Z11interpolateRKN3rtt7stellar4Vec2IfEES4_S4_RKNS0_7ADReal2E_param_4];
	mov.f32 	%f1, 0f3F800000;
	.loc 1 43 1
	ld.v2.f32 	{%f2, %f3}, [%rd5];
	sub.f32 	%f5, %f1, %f2;
	sub.f32 	%f7, %f5, %f3;
	ld.v2.f32 	{%f8, %f9}, [%rd3];
	mul.f32 	%f11, %f2, %f8;
	mul.f32 	%f13, %f2, %f9;
	ld.v2.f32 	{%f14, %f15}, [%rd2];
	fma.rn.f32 	%f17, %f7, %f14, %f11;
	fma.rn.f32 	%f19, %f7, %f15, %f13;
	ld.v2.f32 	{%f20, %f21}, [%rd4];
	fma.rn.f32 	%f23, %f3, %f20, %f17;
	fma.rn.f32 	%f25, %f3, %f21, %f19;
	.loc 1 43 1
	ld.v2.f32 	{%f26, %f27}, [%rd5+8];
	sub.f32 	%f29, %f1, %f26;
	sub.f32 	%f31, %f29, %f27;
	mul.f32 	%f32, %f26, %f8;
	mul.f32 	%f33, %f26, %f9;
	fma.rn.f32 	%f34, %f31, %f14, %f32;
	fma.rn.f32 	%f35, %f31, %f15, %f33;
	fma.rn.f32 	%f36, %f27, %f20, %f34;
	fma.rn.f32 	%f37, %f27, %f21, %f35;
	.loc 1 43 1
	ld.v2.f32 	{%f38, %f39}, [%rd5+16];
	sub.f32 	%f41, %f1, %f38;
	sub.f32 	%f43, %f41, %f39;
	mul.f32 	%f44, %f38, %f8;
	mul.f32 	%f45, %f38, %f9;
	fma.rn.f32 	%f46, %f43, %f14, %f44;
	fma.rn.f32 	%f47, %f43, %f15, %f45;
	fma.rn.f32 	%f48, %f39, %f20, %f46;
	fma.rn.f32 	%f49, %f39, %f21, %f47;
	.loc 5 159 1
	sub.f32 	%f50, %f36, %f23;
	sub.f32 	%f51, %f37, %f25;
	sub.f32 	%f52, %f48, %f23;
	sub.f32 	%f53, %f49, %f25;
	.loc 5 55 1
	st.v2.f32 	[%rd1], {%f23, %f25};
	st.v2.f32 	[%rd1+8], {%f50, %f51};
	st.v2.f32 	[%rd1+16], {%f52, %f53};
	.loc 1 56 1
	ret;
}

.visible .func _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3_(
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_0,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_1,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_2,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_3,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_4
)
{
	.reg .f32 	%f<26>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_0];
	ld.param.u64 	%rd2, [_Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_1];
	ld.param.u64 	%rd3, [_Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_2];
	ld.param.u64 	%rd4, [_Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_3];
	ld.param.u64 	%rd5, [_Z11interpolateIN3rtt7stellar4Vec2IfEEET_RKS4_S6_S6_RKS3__param_4];
	mov.f32 	%f1, 0f3F800000;
	.loc 1 43 1
	ld.v2.f32 	{%f2, %f3}, [%rd5];
	sub.f32 	%f5, %f1, %f2;
	sub.f32 	%f7, %f5, %f3;
	ld.v2.f32 	{%f8, %f9}, [%rd3];
	mul.f32 	%f11, %f2, %f8;
	mul.f32 	%f13, %f2, %f9;
	ld.v2.f32 	{%f14, %f15}, [%rd2];
	fma.rn.f32 	%f17, %f7, %f14, %f11;
	fma.rn.f32 	%f19, %f7, %f15, %f13;
	ld.v2.f32 	{%f20, %f21}, [%rd4];
	fma.rn.f32 	%f23, %f3, %f20, %f17;
	fma.rn.f32 	%f25, %f3, %f21, %f19;
	st.v2.f32 	[%rd1], {%f23, %f25};
	ret;
}

.visible .func _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E(
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_0,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_1,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_2,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_3,
	.param .b64 _Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_4
)
{
	.reg .f32 	%f<74>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_0];
	ld.param.u64 	%rd2, [_Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_1];
	ld.param.u64 	%rd3, [_Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_2];
	ld.param.u64 	%rd4, [_Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_3];
	ld.param.u64 	%rd5, [_Z11interpolateRKN3rtt7stellar4Vec3IfEES4_S4_RKNS0_7ADReal2E_param_4];
	mov.f32 	%f1, 0f3F800000;
	.loc 1 43 1
	ld.v2.f32 	{%f2, %f3}, [%rd5];
	sub.f32 	%f5, %f1, %f2;
	sub.f32 	%f7, %f5, %f3;
	ld.v4.f32 	{%f8, %f9, %f10, %f11}, [%rd3];
	mul.f32 	%f13, %f2, %f8;
	mul.f32 	%f15, %f2, %f9;
	mul.f32 	%f17, %f2, %f10;
	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd2];
	.loc 6 193 1
	fma.rn.f32 	%f23, %f7, %f18, %f13;
	fma.rn.f32 	%f25, %f7, %f19, %f15;
	fma.rn.f32 	%f27, %f7, %f20, %f17;
	.loc 1 43 55
	ld.v4.f32 	{%f28, %f29, %f30, %f31}, [%rd4];
	.loc 6 193 1
	fma.rn.f32 	%f33, %f3, %f28, %f23;
	fma.rn.f32 	%f35, %f3, %f29, %f25;
	fma.rn.f32 	%f37, %f3, %f30, %f27;
	.loc 1 43 1
	ld.v2.f32 	{%f38, %f39}, [%rd5+8];
	sub.f32 	%f41, %f1, %f38;
	sub.f32 	%f43, %f41, %f39;
	mul.f32 	%f44, %f38, %f8;
	mul.f32 	%f45, %f38, %f9;
	mul.f32 	%f46, %f38, %f10;
	.loc 6 193 1
	fma.rn.f32 	%f47, %f43, %f18, %f44;
	fma.rn.f32 	%f48, %f43, %f19, %f45;
	fma.rn.f32 	%f49, %f43, %f20, %f46;
	.loc 6 193 1
	fma.rn.f32 	%f50, %f39, %f28, %f47;
	fma.rn.f32 	%f51, %f39, %f29, %f48;
	fma.rn.f32 	%f52, %f39, %f30, %f49;
	.loc 1 43 1
	ld.v2.f32 	{%f53, %f54}, [%rd5+16];
	sub.f32 	%f56, %f1, %f53;
	sub.f32 	%f58, %f56, %f54;
	mul.f32 	%f59, %f53, %f8;
	mul.f32 	%f60, %f53, %f9;
	mul.f32 	%f61, %f53, %f10;
	.loc 6 193 1
	fma.rn.f32 	%f62, %f58, %f18, %f59;
	fma.rn.f32 	%f63, %f58, %f19, %f60;
	fma.rn.f32 	%f64, %f58, %f20, %f61;
	.loc 6 193 1
	fma.rn.f32 	%f65, %f54, %f28, %f62;
	fma.rn.f32 	%f66, %f54, %f29, %f63;
	fma.rn.f32 	%f67, %f54, %f30, %f64;
	.loc 6 194 1
	sub.f32 	%f68, %f50, %f33;
	sub.f32 	%f69, %f51, %f35;
	sub.f32 	%f70, %f52, %f37;
	sub.f32 	%f71, %f65, %f33;
	sub.f32 	%f72, %f66, %f35;
	sub.f32 	%f73, %f67, %f37;
	.loc 6 57 1
	st.v2.f32 	[%rd1], {%f33, %f35};
	.loc 6 59 1
	st.f32 	[%rd1+8], %f37;
	.loc 6 57 1
	st.f32 	[%rd1+16], %f68;
	.loc 6 58 1
	st.f32 	[%rd1+20], %f69;
	.loc 6 59 1
	st.f32 	[%rd1+24], %f70;
	.loc 6 57 1
	st.f32 	[%rd1+32], %f71;
	.loc 6 58 1
	st.f32 	[%rd1+36], %f72;
	.loc 6 59 1
	st.f32 	[%rd1+40], %f73;
	.loc 1 69 1
	ret;
}

.visible .func _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE(
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_0,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_1,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_2,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_3,
	.param .b64 _Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_4
)
{
	.reg .f32 	%f<38>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_0];
	ld.param.u64 	%rd2, [_Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_1];
	ld.param.u64 	%rd3, [_Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_2];
	ld.param.u64 	%rd4, [_Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_3];
	ld.param.u64 	%rd5, [_Z11interpolateIN3rtt7stellar4Vec3IfEEET_RKS4_S6_S6_RKNS1_4Vec2IfEE_param_4];
	mov.f32 	%f1, 0f3F800000;
	.loc 1 43 1
	ld.v2.f32 	{%f2, %f3}, [%rd5];
	sub.f32 	%f5, %f1, %f2;
	sub.f32 	%f7, %f5, %f3;
	ld.v4.f32 	{%f8, %f9, %f10, %f11}, [%rd3];
	mul.f32 	%f13, %f2, %f8;
	mul.f32 	%f15, %f2, %f9;
	mul.f32 	%f17, %f2, %f10;
	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd2];
	.loc 6 193 1
	fma.rn.f32 	%f23, %f7, %f18, %f13;
	fma.rn.f32 	%f25, %f7, %f19, %f15;
	fma.rn.f32 	%f27, %f7, %f20, %f17;
	.loc 1 43 55
	ld.v4.f32 	{%f28, %f29, %f30, %f31}, [%rd4];
	.loc 6 193 1
	fma.rn.f32 	%f33, %f3, %f28, %f23;
	fma.rn.f32 	%f35, %f3, %f29, %f25;
	fma.rn.f32 	%f37, %f3, %f30, %f27;
	.loc 6 193 1
	st.v2.f32 	[%rd1], {%f33, %f35};
	st.f32 	[%rd1+8], %f37;
	.loc 1 43 1
	ret;
}

.visible .func _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4_(
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_0,
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_1,
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_2,
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_3,
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_4,
	.param .b64 _Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_5
)
{
	.reg .f32 	%f<69>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd1, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_0];
	ld.param.u64 	%rd2, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_1];
	ld.param.u64 	%rd3, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_3];
	ld.param.u64 	%rd4, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_4];
	ld.param.u64 	%rd5, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_5];
	ld.param.u64 	%rd6, [_Z12barycentricsRKN3rtt7stellar4Vec3IfEES4_S4_S4_S4__param_2];
	.loc 6 246 1
	ld.v4.f32 	{%f1, %f2, %f3, %f4}, [%rd5];
	ld.v4.f32 	{%f6, %f7, %f8, %f9}, [%rd6];
	mul.f32 	%f11, %f7, %f3;
	mul.f32 	%f14, %f8, %f2;
	sub.f32 	%f15, %f11, %f14;
	mul.f32 	%f17, %f8, %f1;
	mul.f32 	%f19, %f6, %f3;
	sub.f32 	%f20, %f17, %f19;
	mul.f32 	%f21, %f6, %f2;
	mul.f32 	%f22, %f7, %f1;
	sub.f32 	%f23, %f21, %f22;
	.loc 6 241 1
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd4];
	mul.f32 	%f29, %f23, %f26;
	.loc 7 8666 10
	fma.rn.f32 	%f31, %f20, %f25, %f29;
	.loc 7 8666 10
	fma.rn.f32 	%f33, %f15, %f24, %f31;
	.loc 1 80 62
	rcp.rn.f32 	%f34, %f33;
	.loc 6 194 1
	ld.v4.f32 	{%f35, %f36, %f37, %f38}, [%rd3];
	ld.v4.f32 	{%f40, %f41, %f42, %f43}, [%rd2];
	sub.f32 	%f45, %f40, %f35;
	sub.f32 	%f48, %f41, %f36;
	sub.f32 	%f51, %f42, %f37;
	.loc 6 241 1
	mul.f32 	%f52, %f51, %f23;
	.loc 7 8666 10
	fma.rn.f32 	%f53, %f48, %f20, %f52;
	.loc 7 8666 10
	fma.rn.f32 	%f54, %f45, %f15, %f53;
	.loc 1 84 45
	mul.f32 	%f55, %f54, %f34;
	.loc 6 246 1
	mul.f32 	%f56, %f48, %f26;
	mul.f32 	%f57, %f51, %f25;
	sub.f32 	%f58, %f56, %f57;
	mul.f32 	%f59, %f51, %f24;
	mul.f32 	%f60, %f45, %f26;
	sub.f32 	%f61, %f59, %f60;
	mul.f32 	%f62, %f45, %f25;
	mul.f32 	%f63, %f48, %f24;
	sub.f32 	%f64, %f62, %f63;
	.loc 6 241 1
	mul.f32 	%f65, %f8, %f64;
	.loc 7 8666 10
	fma.rn.f32 	%f66, %f7, %f61, %f65;
	.loc 7 8666 10
	fma.rn.f32 	%f67, %f6, %f58, %f66;
	.loc 1 87 45
	mul.f32 	%f68, %f67, %f34;
	.loc 5 79 1
	st.v2.f32 	[%rd1], {%f55, %f68};
	.loc 1 89 1
	ret;
}

.visible .entry _Z11closest_hitv(

)
{
	.local .align 16 .b8 	__local_depot16[480];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<85>;
	.reg .f32 	%f<834>;
	.reg .s64 	%rd<112>;


	mov.u64 	%SPL, __local_depot16;
	cvta.local.u64 	%SP, %SPL;
	.loc 1 106 1
	ldu.global.u32 	%r36, [render_task_id];
	cvt.s64.s32	%rd3, %r36;
	add.u64 	%rd111, %SP, 0;
	.loc 1 106 1
	cvta.global.u64 	%rd2, render_task_data;
	mov.u32 	%r35, 1;
	mov.u32 	%r2, 96;
	mov.u64 	%rd61, 0;
	.loc 3 217 1
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r35, %r2, %rd3, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 106 1
	ld.v2.u32 	{%r37, %r38}, [%rd1+8];
	ld.v2.u32 	{%r39, %r40}, [%rd1];
	cvta.to.local.u64 	%rd110, %rd111;
	.loc 1 106 1
	st.local.v2.u32 	[%rd110], {%r39, %r40};
	add.s64 	%rd72, %rd111, 8;
	st.local.v2.u32 	[%rd110+8], {%r37, %r38};
	ld.u32 	%r45, [%rd1+16];
	.loc 5 55 1
	ld.v2.f32 	{%f1, %f2}, [%rd1+24];
	.loc 1 106 1
	st.local.u32 	[%rd110+16], %r45;
	.loc 5 55 1
	st.local.v2.f32 	[%rd110+24], {%f1, %f2};
	ld.v2.f32 	{%f5, %f6}, [%rd1+40];
	ld.v2.f32 	{%f7, %f8}, [%rd1+32];
	st.local.v2.f32 	[%rd110+32], {%f7, %f8};
	st.local.v2.f32 	[%rd110+40], {%f5, %f6};
	.loc 1 106 1
	ld.v2.u32 	{%r46, %r47}, [%rd1+56];
	ld.v2.f32 	{%f13, %f14}, [%rd1+48];
	st.local.v2.f32 	[%rd110+48], {%f13, %f14};
	st.local.v2.u32 	[%rd110+56], {%r46, %r47};
	ld.u32 	%r50, [%rd1+80];
	ld.v2.u32 	{%r51, %r52}, [%rd1+72];
	ld.v2.u32 	{%r53, %r54}, [%rd1+64];
	st.local.v2.u32 	[%rd110+64], {%r53, %r54};
	st.local.v2.u32 	[%rd110+72], {%r51, %r52};
	st.local.u32 	[%rd110+80], %r50;
	ld.u32 	%r59, [%rd1+84];
	ld.v2.u32 	{%r60, %r61}, [%rd1+88];
	st.local.u32 	[%rd110+84], %r59;
	st.local.v2.u32 	[%rd110+88], {%r60, %r61};
	.loc 1 109 1
	ld.global.s32 	%rd73, [shape_id];
	.loc 8 50 1
	shl.b64 	%rd74, %rd73, 4;
	add.s64 	%rd8, %rd74, 512;
	add.u64 	%rd109, %SP, 96;
	.loc 8 51 1
	ld.local.u32 	%r3, [%rd110+84];
	.loc 3 241 1
	// inline asm
	call (%rd7), _rt_buffer_get_id_64, (%r3, %r35, %r35, %rd8, %rd61, %rd61, %rd61);
	// inline asm
	cvta.to.local.u64 	%rd108, %rd109;
	.loc 1 114 1
	ld.global.f32 	%f833, [t_hit];
	st.local.f32 	[%rd108+288], %f833;
	mov.u32 	%r64, 0;
	.loc 1 115 1
	st.local.u32 	[%rd108+292], %r64;
	.loc 1 116 1
	ld.global.u32 	%r65, [shape_instance_id];
	st.local.u32 	[%rd108+296], %r65;
	.loc 8 50 1
	mul.wide.s32 	%rd75, %r65, 160;
	add.s64 	%rd13, %rd75, 512;
	.loc 8 51 1
	ld.local.u32 	%r6, [%rd110+92];
	.loc 3 241 1
	// inline asm
	call (%rd12), _rt_buffer_get_id_64, (%r6, %r35, %r35, %rd13, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 117 76
	ld.u32 	%r66, [%rd12+20];
	st.local.u32 	[%rd108+300], %r66;
	.loc 1 120 1
	ld.global.u32 	%r67, [triangle_id];
	mul.lo.s32 	%r68, %r67, 3;
	.loc 8 50 1
	mul.wide.s32 	%rd76, %r68, 4;
	add.s64 	%rd18, %rd76, 512;
	.loc 8 51 1
	ld.u32 	%r9, [%rd7+4];
	.loc 3 241 1
	// inline asm
	call (%rd17), _rt_buffer_get_id_64, (%r9, %r35, %r35, %rd18, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 121 1
	ld.global.u32 	%r69, [triangle_id];
	mad.lo.s32 	%r70, %r69, 3, 1;
	.loc 8 50 1
	mul.wide.s32 	%rd77, %r70, 4;
	add.s64 	%rd23, %rd77, 512;
	.loc 1 130 1
	ld.s32 	%rd78, [%rd17];
	.loc 8 51 1
	ld.u32 	%r84, [%rd7+4];
	.loc 3 241 1
	// inline asm
	call (%rd22), _rt_buffer_get_id_64, (%r84, %r35, %r35, %rd23, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 122 1
	ld.global.u32 	%r71, [triangle_id];
	mad.lo.s32 	%r72, %r71, 3, 2;
	.loc 8 50 1
	mul.wide.s32 	%rd79, %r72, 4;
	add.s64 	%rd28, %rd79, 512;
	.loc 1 131 1
	ld.s32 	%rd80, [%rd22];
	.loc 8 51 1
	ld.u32 	%r83, [%rd7+4];
	.loc 3 241 1
	// inline asm
	call (%rd27), _rt_buffer_get_id_64, (%r83, %r35, %r35, %rd28, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 127 1
	ld.global.s32 	%rd81, [shape_instance_id];
	.loc 8 50 1
	mul.lo.s64 	%rd82, %rd81, 160;
	add.s64 	%rd33, %rd82, 512;
	.loc 1 132 1
	ld.s32 	%rd83, [%rd27];
	.loc 8 51 1
	ld.local.u32 	%r82, [%rd110+92];
	.loc 3 241 1
	// inline asm
	call (%rd32), _rt_buffer_get_id_64, (%r82, %r35, %r35, %rd33, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 128 1
	ld.global.s32 	%rd84, [shape_instance_id];
	.loc 8 50 1
	mul.lo.s64 	%rd85, %rd84, 160;
	add.s64 	%rd38, %rd85, 512;
	.loc 8 51 1
	ld.local.u32 	%r21, [%rd110+92];
	.loc 3 241 1
	// inline asm
	call (%rd37), _rt_buffer_get_id_64, (%r21, %r35, %r35, %rd38, %rd61, %rd61, %rd61);
	// inline asm
	.loc 8 50 1
	mul.lo.s64 	%rd86, %rd78, 52;
	add.s64 	%rd43, %rd86, 512;
	.loc 8 51 1
	ld.u32 	%r24, [%rd7+12];
	.loc 3 241 1
	// inline asm
	call (%rd42), _rt_buffer_get_id_64, (%r24, %r35, %r35, %rd43, %rd61, %rd61, %rd61);
	// inline asm
	.loc 8 50 1
	mul.lo.s64 	%rd87, %rd80, 52;
	add.s64 	%rd48, %rd87, 512;
	.loc 8 51 1
	ld.u32 	%r27, [%rd7+12];
	.loc 3 241 1
	// inline asm
	call (%rd47), _rt_buffer_get_id_64, (%r27, %r35, %r35, %rd48, %rd61, %rd61, %rd61);
	// inline asm
	.loc 8 50 1
	mul.lo.s64 	%rd88, %rd83, 52;
	add.s64 	%rd53, %rd88, 512;
	.loc 8 51 1
	ld.u32 	%r30, [%rd7+12];
	.loc 3 241 1
	// inline asm
	call (%rd52), _rt_buffer_get_id_64, (%r30, %r35, %r35, %rd53, %rd61, %rd61, %rd61);
	// inline asm
	.loc 9 631 1
	ld.f32 	%f18, [%rd42+8];
	ld.v4.f32 	{%f19, %f20, %f21, %f22}, [%rd32+80];
	ld.v4.f32 	{%f24, %f25, %f26, %f27}, [%rd32+64];
	ld.v4.f32 	{%f37, %f38, %f39, %f40}, [%rd32+48];
	.loc 9 631 1
	ld.f32 	%f831, [%rd42+4];
	.loc 7 8666 10
	fma.rn.f32 	%f832, %f24, %f18, %f19;
	fma.rn.f32 	%f42, %f37, %f831, %f832;
	fma.rn.f32 	%f830, %f25, %f18, %f20;
	fma.rn.f32 	%f44, %f38, %f831, %f830;
	fma.rn.f32 	%f829, %f26, %f18, %f21;
	fma.rn.f32 	%f46, %f39, %f831, %f829;
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd32+32];
	.loc 9 631 1
	ld.f32 	%f828, [%rd42];
	.loc 7 8666 10
	fma.rn.f32 	%f53, %f48, %f828, %f42;
	fma.rn.f32 	%f55, %f49, %f828, %f44;
	fma.rn.f32 	%f57, %f50, %f828, %f46;
	.loc 9 631 1
	ld.f32 	%f58, [%rd47+8];
	ld.f32 	%f62, [%rd47+4];
	.loc 7 8666 10
	fma.rn.f32 	%f827, %f24, %f58, %f19;
	fma.rn.f32 	%f63, %f37, %f62, %f827;
	fma.rn.f32 	%f826, %f25, %f58, %f20;
	fma.rn.f32 	%f64, %f38, %f62, %f826;
	fma.rn.f32 	%f825, %f26, %f58, %f21;
	fma.rn.f32 	%f65, %f39, %f62, %f825;
	.loc 9 631 1
	ld.f32 	%f66, [%rd47];
	.loc 7 8666 10
	fma.rn.f32 	%f67, %f48, %f66, %f63;
	fma.rn.f32 	%f68, %f49, %f66, %f64;
	fma.rn.f32 	%f69, %f50, %f66, %f65;
	.loc 9 631 1
	ld.f32 	%f70, [%rd52+8];
	.loc 7 8666 10
	fma.rn.f32 	%f71, %f24, %f70, %f19;
	fma.rn.f32 	%f72, %f25, %f70, %f20;
	fma.rn.f32 	%f73, %f26, %f70, %f21;
	.loc 9 631 1
	ld.f32 	%f74, [%rd52+4];
	.loc 7 8666 10
	fma.rn.f32 	%f75, %f37, %f74, %f71;
	fma.rn.f32 	%f76, %f38, %f74, %f72;
	fma.rn.f32 	%f77, %f39, %f74, %f73;
	.loc 9 631 1
	ld.f32 	%f78, [%rd52];
	.loc 7 8666 10
	fma.rn.f32 	%f79, %f48, %f78, %f75;
	fma.rn.f32 	%f80, %f49, %f78, %f76;
	fma.rn.f32 	%f81, %f50, %f78, %f77;
	.loc 6 194 1
	sub.f32 	%f82, %f66, %f828;
	sub.f32 	%f83, %f62, %f831;
	sub.f32 	%f84, %f58, %f18;
	.loc 6 194 1
	sub.f32 	%f85, %f78, %f828;
	sub.f32 	%f86, %f74, %f831;
	sub.f32 	%f87, %f70, %f18;
	.loc 6 246 1
	mul.f32 	%f823, %f83, %f87;
	mul.f32 	%f824, %f84, %f86;
	sub.f32 	%f90, %f823, %f824;
	mul.f32 	%f91, %f84, %f85;
	mul.f32 	%f92, %f82, %f87;
	sub.f32 	%f93, %f91, %f92;
	mul.f32 	%f94, %f82, %f86;
	mul.f32 	%f95, %f83, %f85;
	sub.f32 	%f96, %f94, %f95;
	.loc 6 243 1
	mul.f32 	%f97, %f96, %f96;
	.loc 7 8666 10
	fma.rn.f32 	%f98, %f93, %f93, %f97;
	.loc 7 8666 10
	fma.rn.f32 	%f99, %f90, %f90, %f98;
	.loc 10 2775 10
	rsqrt.approx.f32 	%f100, %f99;
	mul.f32 	%f101, %f90, %f100;
	mul.f32 	%f102, %f93, %f100;
	mul.f32 	%f103, %f96, %f100;
	.loc 9 334 1
	ld.f32 	%f104, [%rd37+104];
	.loc 9 636 1
	mul.f32 	%f105, %f104, %f103;
	.loc 9 334 1
	ld.f32 	%f106, [%rd37+120];
	.loc 9 636 1
	mul.f32 	%f107, %f106, %f103;
	.loc 9 334 1
	ld.f32 	%f108, [%rd37+136];
	.loc 9 636 1
	mul.f32 	%f109, %f108, %f103;
	.loc 9 334 1
	ld.f32 	%f110, [%rd37+100];
	.loc 7 8666 10
	fma.rn.f32 	%f111, %f110, %f102, %f105;
	.loc 9 334 1
	ld.f32 	%f112, [%rd37+116];
	.loc 7 8666 10
	fma.rn.f32 	%f113, %f112, %f102, %f107;
	.loc 9 334 1
	ld.f32 	%f114, [%rd37+132];
	.loc 7 8666 10
	fma.rn.f32 	%f115, %f114, %f102, %f109;
	.loc 9 334 1
	ld.f32 	%f116, [%rd37+96];
	.loc 7 8666 10
	fma.rn.f32 	%f117, %f116, %f101, %f111;
	.loc 9 334 1
	ld.f32 	%f118, [%rd37+112];
	.loc 7 8666 10
	fma.rn.f32 	%f119, %f118, %f101, %f113;
	.loc 9 334 1
	ld.f32 	%f120, [%rd37+128];
	.loc 7 8666 10
	fma.rn.f32 	%f121, %f120, %f101, %f115;
	.loc 6 243 1
	mul.f32 	%f122, %f121, %f121;
	.loc 7 8666 10
	fma.rn.f32 	%f123, %f119, %f119, %f122;
	.loc 7 8666 10
	fma.rn.f32 	%f124, %f117, %f117, %f123;
	.loc 10 2775 10
	rsqrt.approx.f32 	%f125, %f124;
	mul.f32 	%f126, %f117, %f125;
	mul.f32 	%f127, %f119, %f125;
	mul.f32 	%f128, %f121, %f125;
	.loc 1 162 1
	ld.global.u64 	%rd89, [ray_data+16];
	ld.u32 	%r73, [%rd89+24];
	add.s32 	%r74, %r73, -1;
	.loc 6 57 1
	mul.wide.s32 	%rd90, %r74, 112;
	.loc 6 193 1
	add.s64 	%rd91, %rd90, %rd89;
	.loc 6 193 1
	ld.v4.f32 	{%f135, %f136, %f137, %f138}, [%rd91+48];
	.loc 6 57 1
	ld.v4.f32 	{%f140, %f141, %f142, %f143}, [%rd91+32];
	.loc 6 193 1
	add.f32 	%f145, %f140, %f135;
	add.f32 	%f148, %f141, %f136;
	add.f32 	%f151, %f142, %f137;
	.loc 6 193 1
	ld.v4.f32 	{%f152, %f153, %f154, %f155}, [%rd91+96];
	.loc 6 57 1
	ld.v4.f32 	{%f157, %f158, %f159, %f160}, [%rd91+80];
	.loc 6 193 1
	add.f32 	%f162, %f157, %f152;
	add.f32 	%f165, %f158, %f153;
	add.f32 	%f168, %f159, %f154;
	.loc 6 194 1
	sub.f32 	%f822, %f81, %f57;
	sub.f32 	%f821, %f80, %f55;
	.loc 6 246 1
	mul.f32 	%f819, %f165, %f822;
	mul.f32 	%f820, %f168, %f821;
	sub.f32 	%f171, %f819, %f820;
	.loc 6 194 1
	sub.f32 	%f818, %f79, %f53;
	.loc 6 246 1
	mul.f32 	%f816, %f168, %f818;
	mul.f32 	%f817, %f162, %f822;
	sub.f32 	%f174, %f816, %f817;
	mul.f32 	%f814, %f162, %f821;
	mul.f32 	%f815, %f165, %f818;
	sub.f32 	%f177, %f814, %f815;
	.loc 6 194 1
	sub.f32 	%f813, %f69, %f57;
	sub.f32 	%f811, %f68, %f55;
	.loc 6 241 1
	mul.f32 	%f812, %f177, %f813;
	.loc 7 8666 10
	fma.rn.f32 	%f179, %f174, %f811, %f812;
	.loc 6 194 1
	sub.f32 	%f810, %f67, %f53;
	.loc 7 8666 10
	fma.rn.f32 	%f180, %f171, %f810, %f179;
	.loc 1 80 62
	rcp.rn.f32 	%f181, %f180;
	.loc 6 194 1
	sub.f32 	%f183, %f145, %f53;
	sub.f32 	%f184, %f148, %f55;
	sub.f32 	%f185, %f151, %f57;
	.loc 6 241 1
	mul.f32 	%f186, %f185, %f177;
	.loc 7 8666 10
	fma.rn.f32 	%f187, %f184, %f174, %f186;
	.loc 7 8666 10
	fma.rn.f32 	%f188, %f183, %f171, %f187;
	.loc 1 84 45
	mul.f32 	%f189, %f188, %f181;
	.loc 6 246 1
	mul.f32 	%f808, %f184, %f813;
	mul.f32 	%f809, %f185, %f811;
	sub.f32 	%f192, %f808, %f809;
	mul.f32 	%f193, %f185, %f810;
	mul.f32 	%f194, %f183, %f813;
	sub.f32 	%f195, %f193, %f194;
	mul.f32 	%f196, %f183, %f811;
	mul.f32 	%f197, %f184, %f810;
	sub.f32 	%f198, %f196, %f197;
	.loc 6 241 1
	mul.f32 	%f199, %f168, %f198;
	.loc 7 8666 10
	fma.rn.f32 	%f200, %f165, %f195, %f199;
	.loc 7 8666 10
	fma.rn.f32 	%f201, %f162, %f192, %f200;
	.loc 1 87 45
	mul.f32 	%f202, %f201, %f181;
	.loc 6 193 1
	ld.v4.f32 	{%f203, %f204, %f205, %f206}, [%rd91+64];
	add.f32 	%f208, %f140, %f203;
	add.f32 	%f210, %f141, %f204;
	add.f32 	%f212, %f142, %f205;
	.loc 6 193 1
	ld.v4.f32 	{%f213, %f214, %f215, %f216}, [%rd91+112];
	add.f32 	%f218, %f157, %f213;
	add.f32 	%f220, %f158, %f214;
	add.f32 	%f222, %f159, %f215;
	.loc 6 246 1
	mul.f32 	%f806, %f220, %f822;
	mul.f32 	%f807, %f222, %f821;
	sub.f32 	%f225, %f806, %f807;
	mul.f32 	%f227, %f218, %f822;
	mul.f32 	%f805, %f222, %f818;
	sub.f32 	%f228, %f805, %f227;
	mul.f32 	%f229, %f218, %f821;
	mul.f32 	%f230, %f220, %f818;
	sub.f32 	%f231, %f229, %f230;
	.loc 6 241 1
	mul.f32 	%f232, %f231, %f813;
	.loc 7 8666 10
	fma.rn.f32 	%f233, %f228, %f811, %f232;
	.loc 7 8666 10
	fma.rn.f32 	%f234, %f225, %f810, %f233;
	.loc 1 80 62
	rcp.rn.f32 	%f235, %f234;
	.loc 6 194 1
	sub.f32 	%f236, %f208, %f53;
	sub.f32 	%f237, %f210, %f55;
	sub.f32 	%f238, %f212, %f57;
	.loc 6 241 1
	mul.f32 	%f239, %f238, %f231;
	.loc 7 8666 10
	fma.rn.f32 	%f240, %f237, %f228, %f239;
	.loc 7 8666 10
	fma.rn.f32 	%f241, %f236, %f225, %f240;
	.loc 1 84 45
	mul.f32 	%f242, %f241, %f235;
	.loc 6 246 1
	mul.f32 	%f803, %f237, %f813;
	mul.f32 	%f804, %f238, %f811;
	sub.f32 	%f245, %f803, %f804;
	mul.f32 	%f246, %f238, %f810;
	mul.f32 	%f247, %f236, %f813;
	sub.f32 	%f248, %f246, %f247;
	mul.f32 	%f249, %f236, %f811;
	mul.f32 	%f250, %f237, %f810;
	sub.f32 	%f251, %f249, %f250;
	.loc 6 241 1
	mul.f32 	%f252, %f222, %f251;
	.loc 7 8666 10
	fma.rn.f32 	%f253, %f220, %f248, %f252;
	.loc 7 8666 10
	fma.rn.f32 	%f254, %f218, %f245, %f253;
	.loc 1 87 45
	mul.f32 	%f255, %f254, %f235;
	mov.f32 	%f802, 0f3F800000;
	.loc 5 79 1
	ld.global.f32 	%f256, [bc_u];
	ld.global.f32 	%f258, [bc_v];
	.loc 1 43 1
	sub.f32 	%f801, %f802, %f256;
	sub.f32 	%f259, %f801, %f258;
	mul.f32 	%f260, %f256, %f67;
	.loc 6 193 1
	fma.rn.f32 	%f263, %f259, %f53, %f260;
	.loc 1 43 1
	mul.f32 	%f800, %f256, %f68;
	.loc 6 193 1
	fma.rn.f32 	%f264, %f259, %f55, %f800;
	.loc 1 43 1
	mul.f32 	%f799, %f256, %f69;
	.loc 6 193 1
	fma.rn.f32 	%f265, %f259, %f57, %f799;
	.loc 6 193 1
	fma.rn.f32 	%f266, %f258, %f79, %f263;
	fma.rn.f32 	%f267, %f258, %f80, %f264;
	fma.rn.f32 	%f268, %f258, %f81, %f265;
	.loc 1 43 1
	sub.f32 	%f269, %f802, %f189;
	sub.f32 	%f270, %f269, %f202;
	mul.f32 	%f271, %f189, %f67;
	.loc 6 193 1
	fma.rn.f32 	%f274, %f270, %f53, %f271;
	.loc 1 43 1
	mul.f32 	%f798, %f189, %f68;
	.loc 6 193 1
	fma.rn.f32 	%f275, %f270, %f55, %f798;
	.loc 1 43 1
	mul.f32 	%f797, %f189, %f69;
	.loc 6 193 1
	fma.rn.f32 	%f276, %f270, %f57, %f797;
	.loc 6 193 1
	fma.rn.f32 	%f277, %f202, %f79, %f274;
	fma.rn.f32 	%f278, %f202, %f80, %f275;
	fma.rn.f32 	%f279, %f202, %f81, %f276;
	.loc 1 43 1
	sub.f32 	%f280, %f802, %f242;
	sub.f32 	%f281, %f280, %f255;
	mul.f32 	%f282, %f242, %f67;
	mul.f32 	%f283, %f242, %f68;
	mul.f32 	%f284, %f242, %f69;
	.loc 6 193 1
	fma.rn.f32 	%f285, %f281, %f53, %f282;
	fma.rn.f32 	%f286, %f281, %f55, %f283;
	fma.rn.f32 	%f287, %f281, %f57, %f284;
	.loc 6 193 1
	fma.rn.f32 	%f288, %f255, %f79, %f285;
	fma.rn.f32 	%f289, %f255, %f80, %f286;
	fma.rn.f32 	%f290, %f255, %f81, %f287;
	.loc 6 194 1
	sub.f32 	%f291, %f277, %f266;
	sub.f32 	%f292, %f278, %f267;
	sub.f32 	%f293, %f279, %f268;
	sub.f32 	%f294, %f288, %f266;
	sub.f32 	%f295, %f289, %f267;
	sub.f32 	%f296, %f290, %f268;
	.loc 1 172 62
	st.local.v2.f32 	[%rd108], {%f266, %f267};
	st.local.v2.f32 	[%rd108+32], {%f294, %f295};
	st.local.v2.f32 	[%rd108+16], {%f291, %f292};
	st.local.f32 	[%rd108+8], %f268;
	st.local.f32 	[%rd108+40], %f296;
	st.local.f32 	[%rd108+24], %f293;
	.loc 1 173 1
	st.local.v2.f32 	[%rd108+48], {%f126, %f127};
	st.local.f32 	[%rd108+56], %f128;
	.loc 9 642 1
	ld.f32 	%f297, [%rd42+20];
	mul.f32 	%f298, %f104, %f297;
	mul.f32 	%f299, %f106, %f297;
	mul.f32 	%f300, %f108, %f297;
	ld.f32 	%f301, [%rd42+16];
	.loc 7 8666 10
	fma.rn.f32 	%f302, %f110, %f301, %f298;
	fma.rn.f32 	%f303, %f112, %f301, %f299;
	fma.rn.f32 	%f304, %f114, %f301, %f300;
	.loc 9 642 1
	ld.f32 	%f305, [%rd42+12];
	.loc 7 8666 10
	fma.rn.f32 	%f306, %f116, %f305, %f302;
	fma.rn.f32 	%f307, %f118, %f305, %f303;
	fma.rn.f32 	%f308, %f120, %f305, %f304;
	.loc 9 642 1
	ld.f32 	%f309, [%rd47+20];
	mul.f32 	%f310, %f104, %f309;
	mul.f32 	%f311, %f106, %f309;
	mul.f32 	%f312, %f108, %f309;
	ld.f32 	%f313, [%rd47+16];
	.loc 7 8666 10
	fma.rn.f32 	%f314, %f110, %f313, %f310;
	fma.rn.f32 	%f315, %f112, %f313, %f311;
	fma.rn.f32 	%f316, %f114, %f313, %f312;
	.loc 9 642 1
	ld.f32 	%f317, [%rd47+12];
	.loc 7 8666 10
	fma.rn.f32 	%f318, %f116, %f317, %f314;
	fma.rn.f32 	%f319, %f118, %f317, %f315;
	fma.rn.f32 	%f320, %f120, %f317, %f316;
	.loc 9 642 1
	ld.f32 	%f321, [%rd52+20];
	mul.f32 	%f322, %f104, %f321;
	mul.f32 	%f323, %f106, %f321;
	mul.f32 	%f324, %f108, %f321;
	ld.f32 	%f325, [%rd52+16];
	.loc 7 8666 10
	fma.rn.f32 	%f326, %f110, %f325, %f322;
	fma.rn.f32 	%f327, %f112, %f325, %f323;
	fma.rn.f32 	%f328, %f114, %f325, %f324;
	.loc 9 642 1
	ld.f32 	%f329, [%rd52+12];
	.loc 7 8666 10
	fma.rn.f32 	%f330, %f116, %f329, %f326;
	fma.rn.f32 	%f331, %f118, %f329, %f327;
	fma.rn.f32 	%f332, %f120, %f329, %f328;
	.loc 1 43 1
	mul.f32 	%f333, %f256, %f318;
	.loc 6 193 1
	fma.rn.f32 	%f336, %f259, %f306, %f333;
	.loc 1 43 1
	mul.f32 	%f796, %f256, %f319;
	.loc 6 193 1
	fma.rn.f32 	%f337, %f259, %f307, %f796;
	.loc 1 43 1
	mul.f32 	%f795, %f256, %f320;
	.loc 6 193 1
	fma.rn.f32 	%f338, %f259, %f308, %f795;
	.loc 6 193 1
	fma.rn.f32 	%f339, %f258, %f330, %f336;
	fma.rn.f32 	%f340, %f258, %f331, %f337;
	fma.rn.f32 	%f341, %f258, %f332, %f338;
	.loc 1 43 1
	mul.f32 	%f342, %f189, %f318;
	.loc 6 193 1
	fma.rn.f32 	%f345, %f270, %f306, %f342;
	.loc 1 43 1
	mul.f32 	%f794, %f189, %f319;
	.loc 6 193 1
	fma.rn.f32 	%f346, %f270, %f307, %f794;
	.loc 1 43 1
	mul.f32 	%f793, %f189, %f320;
	.loc 6 193 1
	fma.rn.f32 	%f347, %f270, %f308, %f793;
	.loc 6 193 1
	fma.rn.f32 	%f348, %f202, %f330, %f345;
	fma.rn.f32 	%f349, %f202, %f331, %f346;
	fma.rn.f32 	%f350, %f202, %f332, %f347;
	.loc 1 43 1
	mul.f32 	%f351, %f242, %f318;
	mul.f32 	%f352, %f242, %f319;
	mul.f32 	%f353, %f242, %f320;
	.loc 6 193 1
	fma.rn.f32 	%f354, %f281, %f306, %f351;
	fma.rn.f32 	%f355, %f281, %f307, %f352;
	fma.rn.f32 	%f356, %f281, %f308, %f353;
	.loc 6 193 1
	fma.rn.f32 	%f357, %f255, %f330, %f354;
	fma.rn.f32 	%f358, %f255, %f331, %f355;
	fma.rn.f32 	%f359, %f255, %f332, %f356;
	.loc 6 194 1
	sub.f32 	%f360, %f348, %f339;
	sub.f32 	%f361, %f349, %f340;
	sub.f32 	%f362, %f350, %f341;
	sub.f32 	%f363, %f357, %f339;
	sub.f32 	%f364, %f358, %f340;
	sub.f32 	%f365, %f359, %f341;
	.loc 6 241 1
	mul.f32 	%f366, %f341, %f341;
	.loc 7 8666 10
	fma.rn.f32 	%f367, %f340, %f340, %f366;
	.loc 7 8666 10
	fma.rn.f32 	%f368, %f339, %f339, %f367;
	.loc 10 2775 10
	rsqrt.approx.f32 	%f369, %f368;
	.loc 6 222 1
	mul.f32 	%f370, %f339, %f369;
	mul.f32 	%f371, %f340, %f369;
	mul.f32 	%f372, %f341, %f369;
	mul.f32 	%f373, %f360, %f369;
	mul.f32 	%f374, %f361, %f369;
	mul.f32 	%f375, %f362, %f369;
	mul.f32 	%f376, %f363, %f369;
	mul.f32 	%f377, %f364, %f369;
	mul.f32 	%f378, %f365, %f369;
	st.local.f32 	[%rd108+136], %f378;
	st.local.f32 	[%rd108+132], %f377;
	st.local.f32 	[%rd108+128], %f376;
	st.local.f32 	[%rd108+120], %f375;
	st.local.f32 	[%rd108+116], %f374;
	st.local.f32 	[%rd108+112], %f373;
	st.local.f32 	[%rd108+104], %f372;
	st.local.f32 	[%rd108+100], %f371;
	st.local.f32 	[%rd108+96], %f370;
	.loc 9 642 1
	ld.f32 	%f379, [%rd32+64];
	ld.f32 	%f380, [%rd42+32];
	mul.f32 	%f381, %f379, %f380;
	ld.f32 	%f382, [%rd32+68];
	mul.f32 	%f383, %f382, %f380;
	ld.f32 	%f384, [%rd32+72];
	mul.f32 	%f385, %f384, %f380;
	ld.f32 	%f791, [%rd32+48];
	ld.f32 	%f792, [%rd42+28];
	.loc 7 8666 10
	fma.rn.f32 	%f388, %f791, %f792, %f381;
	ld.f32 	%f389, [%rd32+52];
	.loc 7 8666 10
	fma.rn.f32 	%f390, %f389, %f792, %f383;
	ld.f32 	%f391, [%rd32+56];
	.loc 7 8666 10
	fma.rn.f32 	%f392, %f391, %f792, %f385;
	ld.f32 	%f789, [%rd32+32];
	.loc 9 642 1
	ld.f32 	%f790, [%rd42+24];
	.loc 7 8666 10
	fma.rn.f32 	%f395, %f789, %f790, %f388;
	ld.f32 	%f396, [%rd32+36];
	.loc 7 8666 10
	fma.rn.f32 	%f397, %f396, %f790, %f390;
	ld.f32 	%f398, [%rd32+40];
	.loc 7 8666 10
	fma.rn.f32 	%f399, %f398, %f790, %f392;
	.loc 9 642 1
	ld.f32 	%f400, [%rd47+32];
	mul.f32 	%f401, %f379, %f400;
	mul.f32 	%f402, %f382, %f400;
	mul.f32 	%f403, %f384, %f400;
	ld.f32 	%f404, [%rd47+28];
	.loc 7 8666 10
	fma.rn.f32 	%f405, %f791, %f404, %f401;
	fma.rn.f32 	%f406, %f389, %f404, %f402;
	fma.rn.f32 	%f407, %f391, %f404, %f403;
	.loc 9 642 1
	ld.f32 	%f408, [%rd47+24];
	.loc 7 8666 10
	fma.rn.f32 	%f409, %f789, %f408, %f405;
	fma.rn.f32 	%f410, %f396, %f408, %f406;
	fma.rn.f32 	%f411, %f398, %f408, %f407;
	.loc 9 642 1
	ld.f32 	%f412, [%rd52+32];
	mul.f32 	%f413, %f379, %f412;
	mul.f32 	%f414, %f382, %f412;
	mul.f32 	%f415, %f384, %f412;
	ld.f32 	%f416, [%rd52+28];
	.loc 7 8666 10
	fma.rn.f32 	%f417, %f791, %f416, %f413;
	fma.rn.f32 	%f418, %f389, %f416, %f414;
	fma.rn.f32 	%f419, %f391, %f416, %f415;
	.loc 9 642 1
	ld.f32 	%f420, [%rd52+24];
	.loc 7 8666 10
	fma.rn.f32 	%f421, %f789, %f420, %f417;
	fma.rn.f32 	%f422, %f396, %f420, %f418;
	fma.rn.f32 	%f423, %f398, %f420, %f419;
	.loc 1 43 1
	mul.f32 	%f424, %f256, %f409;
	.loc 6 193 1
	fma.rn.f32 	%f427, %f259, %f395, %f424;
	.loc 1 43 1
	mul.f32 	%f788, %f256, %f410;
	.loc 6 193 1
	fma.rn.f32 	%f428, %f259, %f397, %f788;
	.loc 1 43 1
	mul.f32 	%f787, %f256, %f411;
	.loc 6 193 1
	fma.rn.f32 	%f429, %f259, %f399, %f787;
	.loc 6 193 1
	fma.rn.f32 	%f430, %f258, %f421, %f427;
	fma.rn.f32 	%f431, %f258, %f422, %f428;
	fma.rn.f32 	%f432, %f258, %f423, %f429;
	.loc 1 43 1
	mul.f32 	%f433, %f189, %f409;
	.loc 6 193 1
	fma.rn.f32 	%f436, %f270, %f395, %f433;
	.loc 1 43 1
	mul.f32 	%f786, %f189, %f410;
	.loc 6 193 1
	fma.rn.f32 	%f437, %f270, %f397, %f786;
	.loc 1 43 1
	mul.f32 	%f785, %f189, %f411;
	.loc 6 193 1
	fma.rn.f32 	%f438, %f270, %f399, %f785;
	.loc 6 193 1
	fma.rn.f32 	%f439, %f202, %f421, %f436;
	fma.rn.f32 	%f440, %f202, %f422, %f437;
	fma.rn.f32 	%f441, %f202, %f423, %f438;
	.loc 1 43 1
	mul.f32 	%f442, %f242, %f409;
	mul.f32 	%f443, %f242, %f410;
	mul.f32 	%f444, %f242, %f411;
	.loc 6 193 1
	fma.rn.f32 	%f445, %f281, %f395, %f442;
	fma.rn.f32 	%f446, %f281, %f397, %f443;
	fma.rn.f32 	%f447, %f281, %f399, %f444;
	.loc 6 193 1
	fma.rn.f32 	%f448, %f255, %f421, %f445;
	fma.rn.f32 	%f449, %f255, %f422, %f446;
	fma.rn.f32 	%f450, %f255, %f423, %f447;
	.loc 6 194 1
	sub.f32 	%f451, %f439, %f430;
	sub.f32 	%f452, %f440, %f431;
	sub.f32 	%f453, %f441, %f432;
	sub.f32 	%f454, %f448, %f430;
	sub.f32 	%f455, %f449, %f431;
	sub.f32 	%f456, %f450, %f432;
	.loc 1 185 61
	st.local.f32 	[%rd108+152], %f432;
	st.local.f32 	[%rd108+148], %f431;
	st.local.f32 	[%rd108+144], %f430;
	st.local.f32 	[%rd108+184], %f456;
	st.local.f32 	[%rd108+180], %f455;
	st.local.f32 	[%rd108+176], %f454;
	st.local.f32 	[%rd108+168], %f453;
	st.local.f32 	[%rd108+164], %f452;
	st.local.f32 	[%rd108+160], %f451;
	.loc 6 246 1
	ld.local.f32 	%f457, [%rd108+152];
	ld.local.f32 	%f458, [%rd108+100];
	ld.local.f32 	%f460, [%rd108+148];
	ld.local.f32 	%f461, [%rd108+104];
	mul.f32 	%f783, %f458, %f457;
	mul.f32 	%f784, %f461, %f460;
	sub.f32 	%f463, %f783, %f784;
	ld.local.f32 	%f466, [%rd108+96];
	mul.f32 	%f467, %f466, %f457;
	ld.local.f32 	%f782, [%rd108+144];
	mul.f32 	%f781, %f461, %f782;
	sub.f32 	%f468, %f781, %f467;
	mul.f32 	%f469, %f466, %f460;
	mul.f32 	%f470, %f458, %f782;
	sub.f32 	%f471, %f469, %f470;
	.loc 6 246 1
	ld.local.f32 	%f472, [%rd108+168];
	ld.local.f32 	%f473, [%rd108+116];
	ld.local.f32 	%f475, [%rd108+164];
	ld.local.f32 	%f476, [%rd108+120];
	mul.f32 	%f779, %f473, %f472;
	mul.f32 	%f780, %f476, %f475;
	sub.f32 	%f478, %f779, %f780;
	ld.local.f32 	%f481, [%rd108+112];
	mul.f32 	%f482, %f481, %f472;
	ld.local.f32 	%f778, [%rd108+160];
	mul.f32 	%f777, %f476, %f778;
	sub.f32 	%f483, %f777, %f482;
	mul.f32 	%f484, %f481, %f475;
	mul.f32 	%f485, %f473, %f778;
	sub.f32 	%f486, %f484, %f485;
	ld.local.f32 	%f487, [%rd108+184];
	ld.local.f32 	%f488, [%rd108+132];
	ld.local.f32 	%f490, [%rd108+180];
	ld.local.f32 	%f491, [%rd108+136];
	mul.f32 	%f775, %f488, %f487;
	mul.f32 	%f776, %f491, %f490;
	sub.f32 	%f493, %f775, %f776;
	ld.local.f32 	%f496, [%rd108+128];
	mul.f32 	%f497, %f496, %f487;
	ld.local.f32 	%f774, [%rd108+176];
	mul.f32 	%f773, %f491, %f774;
	sub.f32 	%f498, %f773, %f497;
	mul.f32 	%f499, %f496, %f490;
	mul.f32 	%f500, %f488, %f774;
	sub.f32 	%f501, %f499, %f500;
	.loc 6 241 1
	mul.f32 	%f502, %f471, %f471;
	.loc 7 8666 10
	fma.rn.f32 	%f503, %f468, %f468, %f502;
	.loc 7 8666 10
	fma.rn.f32 	%f504, %f463, %f463, %f503;
	.loc 10 2775 10
	rsqrt.approx.f32 	%f505, %f504;
	.loc 6 222 1
	mul.f32 	%f506, %f463, %f505;
	mul.f32 	%f507, %f468, %f505;
	mul.f32 	%f508, %f471, %f505;
	mul.f32 	%f509, %f478, %f505;
	mul.f32 	%f510, %f483, %f505;
	mul.f32 	%f511, %f486, %f505;
	mul.f32 	%f512, %f493, %f505;
	mul.f32 	%f513, %f498, %f505;
	mul.f32 	%f514, %f501, %f505;
	.loc 6 246 1
	mul.f32 	%f771, %f507, %f461;
	mul.f32 	%f772, %f508, %f458;
	sub.f32 	%f517, %f771, %f772;
	mul.f32 	%f518, %f508, %f466;
	mul.f32 	%f519, %f506, %f461;
	sub.f32 	%f520, %f518, %f519;
	mul.f32 	%f521, %f506, %f458;
	mul.f32 	%f522, %f507, %f466;
	sub.f32 	%f523, %f521, %f522;
	.loc 6 246 1
	mul.f32 	%f769, %f510, %f476;
	mul.f32 	%f770, %f511, %f473;
	sub.f32 	%f526, %f769, %f770;
	mul.f32 	%f527, %f511, %f481;
	mul.f32 	%f528, %f509, %f476;
	sub.f32 	%f529, %f527, %f528;
	mul.f32 	%f530, %f509, %f473;
	mul.f32 	%f531, %f510, %f481;
	sub.f32 	%f532, %f530, %f531;
	mul.f32 	%f767, %f513, %f491;
	mul.f32 	%f768, %f514, %f488;
	sub.f32 	%f535, %f767, %f768;
	mul.f32 	%f536, %f514, %f496;
	mul.f32 	%f537, %f512, %f491;
	sub.f32 	%f538, %f536, %f537;
	mul.f32 	%f539, %f512, %f488;
	mul.f32 	%f540, %f513, %f496;
	sub.f32 	%f541, %f539, %f540;
	st.local.f32 	[%rd108+184], %f541;
	st.local.f32 	[%rd108+180], %f538;
	st.local.f32 	[%rd108+176], %f535;
	st.local.f32 	[%rd108+168], %f532;
	st.local.f32 	[%rd108+164], %f529;
	st.local.f32 	[%rd108+160], %f526;
	st.local.f32 	[%rd108+152], %f523;
	st.local.f32 	[%rd108+148], %f520;
	st.local.f32 	[%rd108+144], %f517;
	.loc 6 152 1
	ld.f32 	%f542, [%rd42+32];
	ld.f32 	%f543, [%rd42+16];
	ld.f32 	%f545, [%rd42+28];
	ld.f32 	%f546, [%rd42+20];
	.loc 6 246 1
	mul.f32 	%f765, %f543, %f542;
	mul.f32 	%f766, %f546, %f545;
	sub.f32 	%f548, %f765, %f766;
	.loc 6 152 1
	ld.f32 	%f549, [%rd42+24];
	.loc 6 246 1
	mul.f32 	%f550, %f546, %f549;
	.loc 6 152 1
	ld.f32 	%f551, [%rd42+12];
	.loc 6 246 1
	mul.f32 	%f552, %f551, %f542;
	sub.f32 	%f553, %f550, %f552;
	mul.f32 	%f554, %f551, %f545;
	mul.f32 	%f555, %f543, %f549;
	sub.f32 	%f556, %f554, %f555;
	.loc 9 636 1
	ld.f32 	%f557, [%rd32+64];
	mul.f32 	%f558, %f557, %f556;
	ld.f32 	%f559, [%rd32+68];
	mul.f32 	%f560, %f559, %f556;
	ld.f32 	%f561, [%rd32+72];
	mul.f32 	%f562, %f561, %f556;
	ld.f32 	%f563, [%rd32+48];
	.loc 7 8666 10
	fma.rn.f32 	%f564, %f563, %f553, %f558;
	ld.f32 	%f565, [%rd32+52];
	.loc 7 8666 10
	fma.rn.f32 	%f566, %f565, %f553, %f560;
	ld.f32 	%f567, [%rd32+56];
	.loc 7 8666 10
	fma.rn.f32 	%f568, %f567, %f553, %f562;
	ld.f32 	%f569, [%rd32+32];
	.loc 7 8666 10
	fma.rn.f32 	%f570, %f569, %f548, %f564;
	ld.f32 	%f571, [%rd32+36];
	.loc 7 8666 10
	fma.rn.f32 	%f572, %f571, %f548, %f566;
	ld.f32 	%f573, [%rd32+40];
	.loc 7 8666 10
	fma.rn.f32 	%f574, %f573, %f548, %f568;
	.loc 6 152 1
	ld.f32 	%f575, [%rd47+32];
	ld.f32 	%f576, [%rd47+16];
	ld.f32 	%f578, [%rd47+28];
	ld.f32 	%f579, [%rd47+20];
	.loc 6 246 1
	mul.f32 	%f763, %f576, %f575;
	mul.f32 	%f764, %f579, %f578;
	sub.f32 	%f581, %f763, %f764;
	.loc 6 152 1
	ld.f32 	%f582, [%rd47+24];
	.loc 6 246 1
	mul.f32 	%f583, %f579, %f582;
	.loc 6 152 1
	ld.f32 	%f584, [%rd47+12];
	.loc 6 246 1
	mul.f32 	%f585, %f584, %f575;
	sub.f32 	%f586, %f583, %f585;
	mul.f32 	%f587, %f584, %f578;
	mul.f32 	%f588, %f576, %f582;
	sub.f32 	%f589, %f587, %f588;
	.loc 9 636 1
	mul.f32 	%f590, %f557, %f589;
	mul.f32 	%f591, %f559, %f589;
	mul.f32 	%f592, %f561, %f589;
	.loc 7 8666 10
	fma.rn.f32 	%f593, %f563, %f586, %f590;
	fma.rn.f32 	%f594, %f565, %f586, %f591;
	fma.rn.f32 	%f595, %f567, %f586, %f592;
	fma.rn.f32 	%f596, %f569, %f581, %f593;
	fma.rn.f32 	%f597, %f571, %f581, %f594;
	fma.rn.f32 	%f598, %f573, %f581, %f595;
	.loc 6 152 1
	ld.f32 	%f599, [%rd52+32];
	ld.f32 	%f600, [%rd52+16];
	ld.f32 	%f602, [%rd52+28];
	ld.f32 	%f603, [%rd52+20];
	.loc 6 246 1
	mul.f32 	%f761, %f600, %f599;
	mul.f32 	%f762, %f603, %f602;
	sub.f32 	%f605, %f761, %f762;
	.loc 6 152 1
	ld.f32 	%f606, [%rd52+24];
	.loc 6 246 1
	mul.f32 	%f607, %f603, %f606;
	.loc 6 152 1
	ld.f32 	%f608, [%rd52+12];
	.loc 6 246 1
	mul.f32 	%f609, %f608, %f599;
	sub.f32 	%f610, %f607, %f609;
	mul.f32 	%f611, %f608, %f602;
	mul.f32 	%f612, %f600, %f606;
	sub.f32 	%f613, %f611, %f612;
	.loc 9 636 1
	mul.f32 	%f614, %f557, %f613;
	mul.f32 	%f615, %f559, %f613;
	mul.f32 	%f616, %f561, %f613;
	.loc 7 8666 10
	fma.rn.f32 	%f617, %f563, %f610, %f614;
	fma.rn.f32 	%f618, %f565, %f610, %f615;
	fma.rn.f32 	%f619, %f567, %f610, %f616;
	fma.rn.f32 	%f620, %f569, %f605, %f617;
	fma.rn.f32 	%f621, %f571, %f605, %f618;
	fma.rn.f32 	%f622, %f573, %f605, %f619;
	.loc 1 43 1
	mul.f32 	%f623, %f256, %f596;
	.loc 6 193 1
	fma.rn.f32 	%f626, %f259, %f570, %f623;
	.loc 1 43 1
	mul.f32 	%f760, %f256, %f597;
	.loc 6 193 1
	fma.rn.f32 	%f627, %f259, %f572, %f760;
	.loc 1 43 1
	mul.f32 	%f759, %f256, %f598;
	.loc 6 193 1
	fma.rn.f32 	%f628, %f259, %f574, %f759;
	.loc 6 193 1
	fma.rn.f32 	%f629, %f258, %f620, %f626;
	fma.rn.f32 	%f630, %f258, %f621, %f627;
	fma.rn.f32 	%f631, %f258, %f622, %f628;
	.loc 1 43 1
	mul.f32 	%f632, %f189, %f596;
	.loc 6 193 1
	fma.rn.f32 	%f635, %f270, %f570, %f632;
	.loc 1 43 1
	mul.f32 	%f758, %f189, %f597;
	.loc 6 193 1
	fma.rn.f32 	%f636, %f270, %f572, %f758;
	.loc 1 43 1
	mul.f32 	%f757, %f189, %f598;
	.loc 6 193 1
	fma.rn.f32 	%f637, %f270, %f574, %f757;
	.loc 6 193 1
	fma.rn.f32 	%f638, %f202, %f620, %f635;
	fma.rn.f32 	%f639, %f202, %f621, %f636;
	fma.rn.f32 	%f640, %f202, %f622, %f637;
	.loc 1 43 1
	mul.f32 	%f641, %f242, %f596;
	mul.f32 	%f642, %f242, %f597;
	mul.f32 	%f643, %f242, %f598;
	.loc 6 193 1
	fma.rn.f32 	%f644, %f281, %f570, %f641;
	fma.rn.f32 	%f645, %f281, %f572, %f642;
	fma.rn.f32 	%f646, %f281, %f574, %f643;
	.loc 6 193 1
	fma.rn.f32 	%f647, %f255, %f620, %f644;
	fma.rn.f32 	%f648, %f255, %f621, %f645;
	fma.rn.f32 	%f649, %f255, %f622, %f646;
	.loc 6 194 1
	sub.f32 	%f650, %f638, %f629;
	sub.f32 	%f651, %f639, %f630;
	sub.f32 	%f652, %f640, %f631;
	sub.f32 	%f653, %f647, %f629;
	sub.f32 	%f654, %f648, %f630;
	sub.f32 	%f655, %f649, %f631;
	.loc 1 194 63
	st.local.f32 	[%rd108+200], %f631;
	st.local.f32 	[%rd108+196], %f630;
	st.local.f32 	[%rd108+192], %f629;
	st.local.f32 	[%rd108+232], %f655;
	st.local.f32 	[%rd108+228], %f654;
	st.local.f32 	[%rd108+224], %f653;
	st.local.f32 	[%rd108+216], %f652;
	st.local.f32 	[%rd108+212], %f651;
	st.local.f32 	[%rd108+208], %f650;
	.loc 6 59 1
	ld.local.f32 	%f656, [%rd108+200];
	.loc 6 58 1
	ld.local.f32 	%f658, [%rd108+196];
	.loc 6 241 1
	mul.f32 	%f756, %f656, %f656;
	.loc 7 8666 10
	fma.rn.f32 	%f659, %f658, %f658, %f756;
	.loc 6 57 1
	ld.local.f32 	%f660, [%rd108+192];
	.loc 7 8666 10
	fma.rn.f32 	%f661, %f660, %f660, %f659;
	.loc 10 2775 10
	rsqrt.approx.f32 	%f662, %f661;
	.loc 6 222 1
	mul.f32 	%f663, %f660, %f662;
	mul.f32 	%f664, %f658, %f662;
	mul.f32 	%f665, %f656, %f662;
	.loc 6 57 1
	ld.local.f32 	%f666, [%rd108+208];
	.loc 6 222 1
	mul.f32 	%f667, %f666, %f662;
	.loc 6 58 1
	ld.local.f32 	%f668, [%rd108+212];
	.loc 6 222 1
	mul.f32 	%f669, %f668, %f662;
	.loc 6 59 1
	ld.local.f32 	%f670, [%rd108+216];
	.loc 6 222 1
	mul.f32 	%f671, %f670, %f662;
	.loc 6 57 1
	ld.local.f32 	%f672, [%rd108+224];
	.loc 6 222 1
	mul.f32 	%f673, %f672, %f662;
	.loc 6 58 1
	ld.local.f32 	%f674, [%rd108+228];
	.loc 6 222 1
	mul.f32 	%f675, %f674, %f662;
	.loc 6 59 1
	ld.local.f32 	%f676, [%rd108+232];
	.loc 6 222 1
	mul.f32 	%f677, %f676, %f662;
	st.local.f32 	[%rd108+232], %f677;
	st.local.f32 	[%rd108+228], %f675;
	st.local.f32 	[%rd108+224], %f673;
	st.local.f32 	[%rd108+216], %f671;
	st.local.f32 	[%rd108+212], %f669;
	st.local.f32 	[%rd108+208], %f667;
	st.local.f32 	[%rd108+200], %f665;
	st.local.f32 	[%rd108+196], %f664;
	st.local.f32 	[%rd108+192], %f663;
	.loc 5 133 1
	ld.f32 	%f680, [%rd47+36];
	.loc 5 133 1
	ld.f32 	%f753, [%rd42+36];
	.loc 1 43 1
	mul.f32 	%f755, %f256, %f680;
	fma.rn.f32 	%f684, %f259, %f753, %f755;
	.loc 5 133 1
	ld.f32 	%f754, [%rd47+40];
	.loc 5 133 1
	ld.f32 	%f751, [%rd42+40];
	.loc 1 43 1
	mul.f32 	%f752, %f256, %f754;
	fma.rn.f32 	%f685, %f259, %f751, %f752;
	.loc 5 133 1
	ld.f32 	%f686, [%rd52+36];
	.loc 1 43 1
	fma.rn.f32 	%f688, %f258, %f686, %f684;
	.loc 5 133 1
	ld.f32 	%f750, [%rd52+40];
	.loc 1 43 1
	fma.rn.f32 	%f689, %f258, %f750, %f685;
	.loc 1 43 1
	mul.f32 	%f690, %f189, %f680;
	fma.rn.f32 	%f692, %f270, %f753, %f690;
	mul.f32 	%f749, %f189, %f754;
	fma.rn.f32 	%f693, %f270, %f751, %f749;
	fma.rn.f32 	%f694, %f202, %f686, %f692;
	fma.rn.f32 	%f695, %f202, %f750, %f693;
	.loc 1 43 1
	mul.f32 	%f696, %f242, %f680;
	mul.f32 	%f697, %f242, %f754;
	fma.rn.f32 	%f698, %f281, %f753, %f696;
	fma.rn.f32 	%f699, %f281, %f751, %f697;
	fma.rn.f32 	%f700, %f255, %f686, %f698;
	fma.rn.f32 	%f701, %f255, %f750, %f699;
	.loc 5 159 1
	sub.f32 	%f702, %f694, %f688;
	sub.f32 	%f703, %f695, %f689;
	sub.f32 	%f704, %f700, %f688;
	sub.f32 	%f705, %f701, %f689;
	.loc 1 198 63
	st.local.f32 	[%rd108+244], %f689;
	st.local.f32 	[%rd108+240], %f688;
	st.local.f32 	[%rd108+260], %f705;
	st.local.f32 	[%rd108+256], %f704;
	st.local.f32 	[%rd108+252], %f703;
	st.local.f32 	[%rd108+248], %f702;
	.loc 5 133 1
	ld.f32 	%f706, [%rd42+44];
	ld.f32 	%f707, [%rd42+48];
	.loc 5 133 1
	ld.f32 	%f708, [%rd47+44];
	ld.f32 	%f710, [%rd47+48];
	.loc 1 43 1
	mul.f32 	%f748, %f256, %f708;
	mul.f32 	%f711, %f256, %f710;
	fma.rn.f32 	%f712, %f259, %f706, %f748;
	fma.rn.f32 	%f713, %f259, %f707, %f711;
	.loc 5 133 1
	ld.f32 	%f714, [%rd52+44];
	ld.f32 	%f715, [%rd52+48];
	.loc 1 43 1
	fma.rn.f32 	%f716, %f258, %f714, %f712;
	fma.rn.f32 	%f717, %f258, %f715, %f713;
	.loc 1 43 1
	mul.f32 	%f718, %f189, %f708;
	mul.f32 	%f719, %f189, %f710;
	fma.rn.f32 	%f720, %f270, %f706, %f718;
	fma.rn.f32 	%f721, %f270, %f707, %f719;
	fma.rn.f32 	%f722, %f202, %f714, %f720;
	fma.rn.f32 	%f723, %f202, %f715, %f721;
	.loc 1 43 1
	mul.f32 	%f724, %f242, %f708;
	mul.f32 	%f725, %f242, %f710;
	fma.rn.f32 	%f726, %f281, %f706, %f724;
	fma.rn.f32 	%f727, %f281, %f707, %f725;
	fma.rn.f32 	%f728, %f255, %f714, %f726;
	fma.rn.f32 	%f729, %f255, %f715, %f727;
	.loc 5 159 1
	sub.f32 	%f730, %f722, %f716;
	sub.f32 	%f731, %f723, %f717;
	sub.f32 	%f732, %f728, %f716;
	sub.f32 	%f733, %f729, %f717;
	.loc 1 201 63
	st.local.f32 	[%rd108+268], %f717;
	st.local.f32 	[%rd108+264], %f716;
	st.local.f32 	[%rd108+284], %f733;
	st.local.f32 	[%rd108+280], %f732;
	st.local.f32 	[%rd108+276], %f731;
	st.local.f32 	[%rd108+272], %f730;
	add.u64 	%rd107, %SP, 464;
	cvta.to.local.u64 	%rd106, %rd107;
	.loc 1 206 1
	ld.global.u32 	%r81, [render_task_id];
	st.local.u32 	[%rd106], %r81;
	.loc 1 207 1
	ld.global.u32 	%r79, [frame_number];
	ld.local.u32 	%r80, [%rd110+12];
	add.s32 	%r78, %r79, %r80;
	add.u64 	%rd105, %SP, 468;
	cvta.to.local.u64 	%rd104, %rd105;
	.loc 1 207 1
	st.local.u32 	[%rd104], %r78;
	.loc 1 210 1
	ld.global.s32 	%rd92, [shape_instance_id];
	.loc 8 50 1
	shl.b64 	%rd93, %rd92, 3;
	add.s64 	%rd58, %rd93, 512;
	.loc 8 51 1
	ld.local.u32 	%r33, [%rd110+76];
	.loc 3 241 1
	// inline asm
	call (%rd57), _rt_buffer_get_id_64, (%r33, %r35, %r35, %rd58, %rd61, %rd61, %rd61);
	// inline asm
	.loc 1 162 1
	mov.u64 	%rd95, ray_data;
	.loc 1 212 1
	add.s64 	%rd96, %rd95, 48;
	cvta.global.u64 	%rd97, %rd96;
	add.s64 	%rd98, %rd95, 24;
	cvta.global.u64 	%rd99, %rd98;
	add.u64 	%rd103, %SP, 400;
	.loc 1 210 58
	ld.u64 	%rd100, [%rd57];
	.loc 1 212 1
	ld.global.u64 	%rd102, [ray_data+16];
	cvta.to.local.u64 	%rd101, %rd103;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd103;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd100;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd102;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd105;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd109;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd97;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd107;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd72;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd99;
	.loc 1 212 1
	call.uni 
	stlr_main, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8
	);
	}
	// Callseq End 0
	.loc 1 223 1
	ld.local.f32 	%f734, [%rd101+36];
	ld.local.f32 	%f735, [%rd101+40];
	ld.local.f32 	%f736, [%rd101+48];
	ld.local.f32 	%f738, [%rd101+32];
	.loc 1 223 1
	ld.global.f32 	%f747, [ray_data];
	add.f32 	%f739, %f747, %f738;
	st.global.f32 	[ray_data], %f739;
	ld.global.f32 	%f740, [ray_data+4];
	add.f32 	%f741, %f740, %f734;
	st.global.f32 	[ray_data+4], %f741;
	ld.global.f32 	%f742, [ray_data+8];
	add.f32 	%f743, %f742, %f735;
	st.global.f32 	[ray_data+8], %f743;
	ld.global.f32 	%f744, [ray_data+12];
	add.f32 	%f745, %f744, %f736;
	st.global.f32 	[ray_data+12], %f745;
	.loc 1 224 1
	ld.global.f32 	%f746, [t_hit];
	st.global.f32 	[ray_data+56], %f746;
	.loc 1 226 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_base_idEiifffi(
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_0,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_1,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_2,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_3,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_4,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_5
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_base_idEiifffi_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_base_idEiifffi_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_base_idEiifffi_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_base_idEiifffi_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_base_idEiifffi_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_base_idEiifffi_param_5];
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 113 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix23rt_texture_get_level_idEiifffif(
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_0,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_1,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_2,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_3,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_4,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_5,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_6
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix23rt_texture_get_level_idEiifffif_param_0];
	ld.param.u32 	%r2, [_ZN5optix23rt_texture_get_level_idEiifffif_param_1];
	ld.param.f32 	%f5, [_ZN5optix23rt_texture_get_level_idEiifffif_param_2];
	ld.param.f32 	%f6, [_ZN5optix23rt_texture_get_level_idEiifffif_param_3];
	ld.param.f32 	%f7, [_ZN5optix23rt_texture_get_level_idEiifffif_param_4];
	ld.param.u32 	%r3, [_ZN5optix23rt_texture_get_level_idEiifffif_param_5];
	ld.param.f32 	%f8, [_ZN5optix23rt_texture_get_level_idEiifffif_param_6];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 131 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_grad_idEiifffiffffff(
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5];
	ld.param.f32 	%f8, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6];
	ld.param.f32 	%f9, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7];
	ld.param.f32 	%f10, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8];
	ld.param.f32 	%f11, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9];
	ld.param.f32 	%f12, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10];
	ld.param.f32 	%f13, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8, %f9, %f10, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 149 1
	ret;
}


/*
 * Compiled with
 * MLCC - The StellarCode Compiler
 * Version 0.13-1 - Monocle
 * Copyright 2000-2015 Dassault Systemes 3DExcite GmbH
 */







.visible .func stlr_create_for_stellarcheck( .param.b64 res_59437, .param.b64 externs_59438, .param.b64 seed_910) {
              .reg.u64       tmp_59439;
              ld.param.u64   tmp_59439, [seed_910];
              .reg.s32       tmp_59440;
              ld.s32         tmp_59440, [tmp_59439];
              .reg.u64       tmp_59441;
              ld.param.u64   tmp_59441, [res_59437];
              st.s32         [tmp_59441], tmp_59440;
}

.visible .global .u64 g_create_for_stellarcheck = stlr_create_for_stellarcheck;

.visible .func stlr_main( .param.b64 res_59442, .param.b64 externs_59443, .param.b64 raystack_22351, .param.b64 seed_22352, .param.b64 f_22353, .param.b64 cpRot_22354, .param.b64 integratorInstanceID_22355, .param.b64 camera_instance_index_22356, .param.b64 imagePlaneUV_22357) {
              .reg.u64       tmp_59444;
              ld.param.u64   tmp_59444, [externs_59443];
              .reg.u64       tmp_59445;
              ld.param.u64   tmp_59445, [f_22353];
              .reg.s32       tmp_59446;
              ld.s32         tmp_59446, [tmp_59445+296];
              .reg.u64       tmp_59447;
              .reg.s32       optix_buffer_id_59448;
              mov.b64        {_, optix_buffer_id_59448}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59449;
{
              .reg.s32       abstract_59450;
              mov.b32        abstract_59450, 1;
              .reg.u64       const_59451;
              mov.b64        const_59451, 616;
              .reg.u64       const_59452;
              mov.b64        const_59452, 0;
 call (ptr_from_optix_id_59449), _rt_buffer_get_id_64, (optix_buffer_id_59448, abstract_59450, abstract_59450, const_59451, const_59452, const_59452, const_59452); // resolving optix id
}
              ld.u64         tmp_59447, [ptr_from_optix_id_59449];
              .reg .f32      tmp_59453_0, tmp_59453_1, tmp_59453_2, tmp_59453_3;
              .reg.u64       off_59454;
              mad.wide.u32   off_59454, tmp_59446, 160, 32;
              .reg.s32       optix_buffer_id_59455;
              mov.b64        {_, optix_buffer_id_59455}, tmp_59447;
              .reg.u64       ptr_from_optix_id_59456;
{
              .reg.s32       abstract_59457;
              mov.b32        abstract_59457, 1;
              .reg.u64       const_59458;
              mov.b64        const_59458, 512;
              .reg.u64       off_59459;
              add.u64        off_59459, const_59458, off_59454;
              .reg.u64       const_59460;
              mov.b64        const_59460, 0;
 call (ptr_from_optix_id_59456), _rt_buffer_get_id_64, (optix_buffer_id_59455, abstract_59457, abstract_59457, off_59459, const_59460, const_59460, const_59460); // resolving optix id
}
              ld.v4.f32      {tmp_59453_0, tmp_59453_1, tmp_59453_2, tmp_59453_3}, [ptr_from_optix_id_59456];
              .reg.u64       tmp_59461;
              .reg.s32       optix_buffer_id_59462;
              mov.b64        {_, optix_buffer_id_59462}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59463;
{
              .reg.s32       abstract_59464;
              mov.b32        abstract_59464, 1;
              .reg.u64       const_59465;
              mov.b64        const_59465, 616;
              .reg.u64       const_59466;
              mov.b64        const_59466, 0;
 call (ptr_from_optix_id_59463), _rt_buffer_get_id_64, (optix_buffer_id_59462, abstract_59464, abstract_59464, const_59465, const_59466, const_59466, const_59466); // resolving optix id
}
              ld.u64         tmp_59461, [ptr_from_optix_id_59463];
              .reg .f32      tmp_59467_0, tmp_59467_1, tmp_59467_2, tmp_59467_3;
              .reg.u64       off_59468;
              mad.wide.u32   off_59468, tmp_59446, 160, 48;
              .reg.s32       optix_buffer_id_59469;
              mov.b64        {_, optix_buffer_id_59469}, tmp_59461;
              .reg.u64       ptr_from_optix_id_59470;
{
              .reg.s32       abstract_59471;
              mov.b32        abstract_59471, 1;
              .reg.u64       const_59472;
              mov.b64        const_59472, 512;
              .reg.u64       off_59473;
              add.u64        off_59473, const_59472, off_59468;
              .reg.u64       const_59474;
              mov.b64        const_59474, 0;
 call (ptr_from_optix_id_59470), _rt_buffer_get_id_64, (optix_buffer_id_59469, abstract_59471, abstract_59471, off_59473, const_59474, const_59474, const_59474); // resolving optix id
}
              ld.v4.f32      {tmp_59467_0, tmp_59467_1, tmp_59467_2, tmp_59467_3}, [ptr_from_optix_id_59470];
              .reg.u64       tmp_59475;
              .reg.s32       optix_buffer_id_59476;
              mov.b64        {_, optix_buffer_id_59476}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59477;
{
              .reg.s32       abstract_59478;
              mov.b32        abstract_59478, 1;
              .reg.u64       const_59479;
              mov.b64        const_59479, 616;
              .reg.u64       const_59480;
              mov.b64        const_59480, 0;
 call (ptr_from_optix_id_59477), _rt_buffer_get_id_64, (optix_buffer_id_59476, abstract_59478, abstract_59478, const_59479, const_59480, const_59480, const_59480); // resolving optix id
}
              ld.u64         tmp_59475, [ptr_from_optix_id_59477];
              .reg .f32      tmp_59481_0, tmp_59481_1, tmp_59481_2, tmp_59481_3;
              .reg.u64       off_59482;
              mad.wide.u32   off_59482, tmp_59446, 160, 64;
              .reg.s32       optix_buffer_id_59483;
              mov.b64        {_, optix_buffer_id_59483}, tmp_59475;
              .reg.u64       ptr_from_optix_id_59484;
{
              .reg.s32       abstract_59485;
              mov.b32        abstract_59485, 1;
              .reg.u64       const_59486;
              mov.b64        const_59486, 512;
              .reg.u64       off_59487;
              add.u64        off_59487, const_59486, off_59482;
              .reg.u64       const_59488;
              mov.b64        const_59488, 0;
 call (ptr_from_optix_id_59484), _rt_buffer_get_id_64, (optix_buffer_id_59483, abstract_59485, abstract_59485, off_59487, const_59488, const_59488, const_59488); // resolving optix id
}
              ld.v4.f32      {tmp_59481_0, tmp_59481_1, tmp_59481_2, tmp_59481_3}, [ptr_from_optix_id_59484];
              .reg.u64       tmp_59489;
              ld.param.u64   tmp_59489, [f_22353];
              .reg .f32      tmp_59490_0, tmp_59490_1, tmp_59490_2;
              ld.v2.f32      {tmp_59490_0, tmp_59490_1}, [tmp_59489+96];
              ld.f32         tmp_59490_2, [tmp_59489+104];
              .reg .f32      temp_51038_0, temp_51038_1, temp_51038_2;
              mul.ftz.f32    temp_51038_0, tmp_59453_0, tmp_59490_0;
              mul.ftz.f32    temp_51038_1, tmp_59467_0, tmp_59490_0;
              mul.ftz.f32    temp_51038_2, tmp_59481_0, tmp_59490_0;
              .reg .f32      temp_51051_0, temp_51051_1, temp_51051_2;
              mul.ftz.f32    temp_51051_0, tmp_59453_1, tmp_59490_1;
              mul.ftz.f32    temp_51051_1, tmp_59467_1, tmp_59490_1;
              mul.ftz.f32    temp_51051_2, tmp_59481_1, tmp_59490_1;
              .reg .f32      temp_51054_0, temp_51054_1, temp_51054_2;
              add.ftz.f32    temp_51054_0, temp_51038_0, temp_51051_0;
              add.ftz.f32    temp_51054_1, temp_51038_1, temp_51051_1;
              add.ftz.f32    temp_51054_2, temp_51038_2, temp_51051_2;
              .reg .f32      temp_51067_0, temp_51067_1, temp_51067_2;
              mul.ftz.f32    temp_51067_0, tmp_59453_2, tmp_59490_2;
              mul.ftz.f32    temp_51067_1, tmp_59467_2, tmp_59490_2;
              mul.ftz.f32    temp_51067_2, tmp_59481_2, tmp_59490_2;
              .reg .f32      temp_51070_0, temp_51070_1, temp_51070_2;
              add.ftz.f32    temp_51070_0, temp_51054_0, temp_51067_0;
              add.ftz.f32    temp_51070_1, temp_51054_1, temp_51067_1;
              add.ftz.f32    temp_51070_2, temp_51054_2, temp_51067_2;
              .reg .f32      temp_51073_0, temp_51073_1, temp_51073_2;
              mul.ftz.f32    temp_51073_0, temp_51070_0, temp_51070_0;
              mul.ftz.f32    temp_51073_1, temp_51070_1, temp_51070_1;
              mul.ftz.f32    temp_51073_2, temp_51070_2, temp_51070_2;
              .reg.f32       temp_51086;
              add.ftz.f32    temp_51086, temp_51073_0, temp_51073_1;
              .reg.f32       temp_51092;
              add.ftz.f32    temp_51092, temp_51086, temp_51073_2;
              .reg.f32       temp_51097;
              rsqrt.approx.ftz.f32 temp_51097, temp_51092;
              .reg .f32      temp_51103_0, temp_51103_1, temp_51103_2;
              mul.ftz.f32    temp_51103_0, temp_51070_0, temp_51097;
              mul.ftz.f32    temp_51103_1, temp_51070_1, temp_51097;
              mul.ftz.f32    temp_51103_2, temp_51070_2, temp_51097;
              .reg.u64       tmp_59491;
              .reg.s32       optix_buffer_id_59492;
              mov.b64        {_, optix_buffer_id_59492}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59493;
{
              .reg.s32       abstract_59494;
              mov.b32        abstract_59494, 1;
              .reg.u64       const_59495;
              mov.b64        const_59495, 616;
              .reg.u64       const_59496;
              mov.b64        const_59496, 0;
 call (ptr_from_optix_id_59493), _rt_buffer_get_id_64, (optix_buffer_id_59492, abstract_59494, abstract_59494, const_59495, const_59496, const_59496, const_59496); // resolving optix id
}
              ld.u64         tmp_59491, [ptr_from_optix_id_59493];
              .reg .f32      tmp_59497_0, tmp_59497_1, tmp_59497_2, tmp_59497_3;
              .reg.u64       off_59498;
              mad.wide.u32   off_59498, tmp_59446, 160, 96;
              .reg.s32       optix_buffer_id_59499;
              mov.b64        {_, optix_buffer_id_59499}, tmp_59491;
              .reg.u64       ptr_from_optix_id_59500;
{
              .reg.s32       abstract_59501;
              mov.b32        abstract_59501, 1;
              .reg.u64       const_59502;
              mov.b64        const_59502, 512;
              .reg.u64       off_59503;
              add.u64        off_59503, const_59502, off_59498;
              .reg.u64       const_59504;
              mov.b64        const_59504, 0;
 call (ptr_from_optix_id_59500), _rt_buffer_get_id_64, (optix_buffer_id_59499, abstract_59501, abstract_59501, off_59503, const_59504, const_59504, const_59504); // resolving optix id
}
              ld.v4.f32      {tmp_59497_0, tmp_59497_1, tmp_59497_2, tmp_59497_3}, [ptr_from_optix_id_59500];
              .reg.u64       tmp_59505;
              ld.param.u64   tmp_59505, [f_22353];
              .reg .f32      tmp_59506_0, tmp_59506_1, tmp_59506_2;
              ld.v2.f32      {tmp_59506_0, tmp_59506_1}, [tmp_59505];
              ld.f32         tmp_59506_2, [tmp_59505+8];
              .reg.u64       tmp_59507;
              ld.param.u64   tmp_59507, [f_22353];
              .reg .f32      tmp_59508_0, tmp_59508_1, tmp_59508_2;
              ld.v2.f32      {tmp_59508_0, tmp_59508_1}, [tmp_59507+16];
              ld.f32         tmp_59508_2, [tmp_59507+24];
              .reg.u64       tmp_59509;
              ld.param.u64   tmp_59509, [f_22353];
              .reg .f32      tmp_59510_0, tmp_59510_1, tmp_59510_2;
              ld.v2.f32      {tmp_59510_0, tmp_59510_1}, [tmp_59509+32];
              ld.f32         tmp_59510_2, [tmp_59509+40];
              .reg .f32      temp_51318_0, temp_51318_1, temp_51318_2;
              mul.ftz.f32    temp_51318_0, tmp_59497_0, tmp_59506_0;
              mul.ftz.f32    temp_51318_1, tmp_59497_1, tmp_59506_0;
              mul.ftz.f32    temp_51318_2, tmp_59497_2, tmp_59506_0;
              .reg .f32      temp_51319_0, temp_51319_1, temp_51319_2;
              mul.ftz.f32    temp_51319_0, tmp_59497_0, tmp_59508_0;
              mul.ftz.f32    temp_51319_1, tmp_59497_1, tmp_59508_0;
              mul.ftz.f32    temp_51319_2, tmp_59497_2, tmp_59508_0;
              .reg .f32      temp_51320_0, temp_51320_1, temp_51320_2;
              mul.ftz.f32    temp_51320_0, tmp_59497_0, tmp_59510_0;
              mul.ftz.f32    temp_51320_1, tmp_59497_1, tmp_59510_0;
              mul.ftz.f32    temp_51320_2, tmp_59497_2, tmp_59510_0;
              .reg.u64       tmp_59511;
              .reg.s32       optix_buffer_id_59512;
              mov.b64        {_, optix_buffer_id_59512}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59513;
{
              .reg.s32       abstract_59514;
              mov.b32        abstract_59514, 1;
              .reg.u64       const_59515;
              mov.b64        const_59515, 616;
              .reg.u64       const_59516;
              mov.b64        const_59516, 0;
 call (ptr_from_optix_id_59513), _rt_buffer_get_id_64, (optix_buffer_id_59512, abstract_59514, abstract_59514, const_59515, const_59516, const_59516, const_59516); // resolving optix id
}
              ld.u64         tmp_59511, [ptr_from_optix_id_59513];
              .reg .f32      tmp_59517_0, tmp_59517_1, tmp_59517_2, tmp_59517_3;
              .reg.u64       off_59518;
              mad.wide.u32   off_59518, tmp_59446, 160, 112;
              .reg.s32       optix_buffer_id_59519;
              mov.b64        {_, optix_buffer_id_59519}, tmp_59511;
              .reg.u64       ptr_from_optix_id_59520;
{
              .reg.s32       abstract_59521;
              mov.b32        abstract_59521, 1;
              .reg.u64       const_59522;
              mov.b64        const_59522, 512;
              .reg.u64       off_59523;
              add.u64        off_59523, const_59522, off_59518;
              .reg.u64       const_59524;
              mov.b64        const_59524, 0;
 call (ptr_from_optix_id_59520), _rt_buffer_get_id_64, (optix_buffer_id_59519, abstract_59521, abstract_59521, off_59523, const_59524, const_59524, const_59524); // resolving optix id
}
              ld.v4.f32      {tmp_59517_0, tmp_59517_1, tmp_59517_2, tmp_59517_3}, [ptr_from_optix_id_59520];
              .reg .f32      temp_51332_0, temp_51332_1, temp_51332_2;
              mul.ftz.f32    temp_51332_0, tmp_59517_0, tmp_59506_1;
              mul.ftz.f32    temp_51332_1, tmp_59517_1, tmp_59506_1;
              mul.ftz.f32    temp_51332_2, tmp_59517_2, tmp_59506_1;
              .reg .f32      temp_51333_0, temp_51333_1, temp_51333_2;
              mul.ftz.f32    temp_51333_0, tmp_59517_0, tmp_59508_1;
              mul.ftz.f32    temp_51333_1, tmp_59517_1, tmp_59508_1;
              mul.ftz.f32    temp_51333_2, tmp_59517_2, tmp_59508_1;
              .reg .f32      temp_51334_0, temp_51334_1, temp_51334_2;
              mul.ftz.f32    temp_51334_0, tmp_59517_0, tmp_59510_1;
              mul.ftz.f32    temp_51334_1, tmp_59517_1, tmp_59510_1;
              mul.ftz.f32    temp_51334_2, tmp_59517_2, tmp_59510_1;
              .reg .f32      temp_51335_0, temp_51335_1, temp_51335_2;
              add.ftz.f32    temp_51335_0, temp_51318_0, temp_51332_0;
              add.ftz.f32    temp_51335_1, temp_51318_1, temp_51332_1;
              add.ftz.f32    temp_51335_2, temp_51318_2, temp_51332_2;
              .reg .f32      temp_51336_0, temp_51336_1, temp_51336_2;
              add.ftz.f32    temp_51336_0, temp_51319_0, temp_51333_0;
              add.ftz.f32    temp_51336_1, temp_51319_1, temp_51333_1;
              add.ftz.f32    temp_51336_2, temp_51319_2, temp_51333_2;
              .reg .f32      temp_51337_0, temp_51337_1, temp_51337_2;
              add.ftz.f32    temp_51337_0, temp_51320_0, temp_51334_0;
              add.ftz.f32    temp_51337_1, temp_51320_1, temp_51334_1;
              add.ftz.f32    temp_51337_2, temp_51320_2, temp_51334_2;
              .reg.u64       tmp_59525;
              .reg.s32       optix_buffer_id_59526;
              mov.b64        {_, optix_buffer_id_59526}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59527;
{
              .reg.s32       abstract_59528;
              mov.b32        abstract_59528, 1;
              .reg.u64       const_59529;
              mov.b64        const_59529, 616;
              .reg.u64       const_59530;
              mov.b64        const_59530, 0;
 call (ptr_from_optix_id_59527), _rt_buffer_get_id_64, (optix_buffer_id_59526, abstract_59528, abstract_59528, const_59529, const_59530, const_59530, const_59530); // resolving optix id
}
              ld.u64         tmp_59525, [ptr_from_optix_id_59527];
              .reg .f32      tmp_59531_0, tmp_59531_1, tmp_59531_2, tmp_59531_3;
              .reg.u64       off_59532;
              mad.wide.u32   off_59532, tmp_59446, 160, 128;
              .reg.s32       optix_buffer_id_59533;
              mov.b64        {_, optix_buffer_id_59533}, tmp_59525;
              .reg.u64       ptr_from_optix_id_59534;
{
              .reg.s32       abstract_59535;
              mov.b32        abstract_59535, 1;
              .reg.u64       const_59536;
              mov.b64        const_59536, 512;
              .reg.u64       off_59537;
              add.u64        off_59537, const_59536, off_59532;
              .reg.u64       const_59538;
              mov.b64        const_59538, 0;
 call (ptr_from_optix_id_59534), _rt_buffer_get_id_64, (optix_buffer_id_59533, abstract_59535, abstract_59535, off_59537, const_59538, const_59538, const_59538); // resolving optix id
}
              ld.v4.f32      {tmp_59531_0, tmp_59531_1, tmp_59531_2, tmp_59531_3}, [ptr_from_optix_id_59534];
              .reg .f32      temp_51349_0, temp_51349_1, temp_51349_2;
              mul.ftz.f32    temp_51349_0, tmp_59531_0, tmp_59506_2;
              mul.ftz.f32    temp_51349_1, tmp_59531_1, tmp_59506_2;
              mul.ftz.f32    temp_51349_2, tmp_59531_2, tmp_59506_2;
              .reg .f32      temp_51350_0, temp_51350_1, temp_51350_2;
              mul.ftz.f32    temp_51350_0, tmp_59531_0, tmp_59508_2;
              mul.ftz.f32    temp_51350_1, tmp_59531_1, tmp_59508_2;
              mul.ftz.f32    temp_51350_2, tmp_59531_2, tmp_59508_2;
              .reg .f32      temp_51351_0, temp_51351_1, temp_51351_2;
              mul.ftz.f32    temp_51351_0, tmp_59531_0, tmp_59510_2;
              mul.ftz.f32    temp_51351_1, tmp_59531_1, tmp_59510_2;
              mul.ftz.f32    temp_51351_2, tmp_59531_2, tmp_59510_2;
              .reg .f32      temp_51352_0, temp_51352_1, temp_51352_2;
              add.ftz.f32    temp_51352_0, temp_51335_0, temp_51349_0;
              add.ftz.f32    temp_51352_1, temp_51335_1, temp_51349_1;
              add.ftz.f32    temp_51352_2, temp_51335_2, temp_51349_2;
              .reg .f32      temp_51353_0, temp_51353_1, temp_51353_2;
              add.ftz.f32    temp_51353_0, temp_51336_0, temp_51350_0;
              add.ftz.f32    temp_51353_1, temp_51336_1, temp_51350_1;
              add.ftz.f32    temp_51353_2, temp_51336_2, temp_51350_2;
              .reg .f32      temp_51354_0, temp_51354_1, temp_51354_2;
              add.ftz.f32    temp_51354_0, temp_51337_0, temp_51351_0;
              add.ftz.f32    temp_51354_1, temp_51337_1, temp_51351_1;
              add.ftz.f32    temp_51354_2, temp_51337_2, temp_51351_2;
              .reg.u64       tmp_59539;
              .reg.s32       optix_buffer_id_59540;
              mov.b64        {_, optix_buffer_id_59540}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59541;
{
              .reg.s32       abstract_59542;
              mov.b32        abstract_59542, 1;
              .reg.u64       const_59543;
              mov.b64        const_59543, 616;
              .reg.u64       const_59544;
              mov.b64        const_59544, 0;
 call (ptr_from_optix_id_59541), _rt_buffer_get_id_64, (optix_buffer_id_59540, abstract_59542, abstract_59542, const_59543, const_59544, const_59544, const_59544); // resolving optix id
}
              ld.u64         tmp_59539, [ptr_from_optix_id_59541];
              .reg .f32      tmp_59545_0, tmp_59545_1, tmp_59545_2, tmp_59545_3;
              .reg.u64       off_59546;
              mad.wide.u32   off_59546, tmp_59446, 160, 144;
              .reg.s32       optix_buffer_id_59547;
              mov.b64        {_, optix_buffer_id_59547}, tmp_59539;
              .reg.u64       ptr_from_optix_id_59548;
{
              .reg.s32       abstract_59549;
              mov.b32        abstract_59549, 1;
              .reg.u64       const_59550;
              mov.b64        const_59550, 512;
              .reg.u64       off_59551;
              add.u64        off_59551, const_59550, off_59546;
              .reg.u64       const_59552;
              mov.b64        const_59552, 0;
 call (ptr_from_optix_id_59548), _rt_buffer_get_id_64, (optix_buffer_id_59547, abstract_59549, abstract_59549, off_59551, const_59552, const_59552, const_59552); // resolving optix id
}
              ld.v4.f32      {tmp_59545_0, tmp_59545_1, tmp_59545_2, tmp_59545_3}, [ptr_from_optix_id_59548];
              .reg .f32      temp_51357_0, temp_51357_1, temp_51357_2;
              add.ftz.f32    temp_51357_0, tmp_59545_0, temp_51352_0;
              add.ftz.f32    temp_51357_1, tmp_59545_1, temp_51352_1;
              add.ftz.f32    temp_51357_2, tmp_59545_2, temp_51352_2;
              .reg.u64       tmp_59553;
              .reg.s32       optix_buffer_id_59554;
              mov.b64        {_, optix_buffer_id_59554}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59555;
{
              .reg.s32       abstract_59556;
              mov.b32        abstract_59556, 1;
              .reg.u64       const_59557;
              mov.b64        const_59557, 608;
              .reg.u64       const_59558;
              mov.b64        const_59558, 0;
 call (ptr_from_optix_id_59555), _rt_buffer_get_id_64, (optix_buffer_id_59554, abstract_59556, abstract_59556, const_59557, const_59558, const_59558, const_59558); // resolving optix id
}
              ld.u64         tmp_59553, [ptr_from_optix_id_59555];
              .reg .f32      tmp_59559_0, tmp_59559_1, tmp_59559_2, tmp_59559_3;
              .reg.u64       off_59560;
              mad.wide.u32   off_59560, tmp_59446, 80, 16;
              .reg.s32       optix_buffer_id_59561;
              mov.b64        {_, optix_buffer_id_59561}, tmp_59553;
              .reg.u64       ptr_from_optix_id_59562;
{
              .reg.s32       abstract_59563;
              mov.b32        abstract_59563, 1;
              .reg.u64       const_59564;
              mov.b64        const_59564, 512;
              .reg.u64       off_59565;
              add.u64        off_59565, const_59564, off_59560;
              .reg.u64       const_59566;
              mov.b64        const_59566, 0;
 call (ptr_from_optix_id_59562), _rt_buffer_get_id_64, (optix_buffer_id_59561, abstract_59563, abstract_59563, off_59565, const_59566, const_59566, const_59566); // resolving optix id
}
              ld.v4.f32      {tmp_59559_0, tmp_59559_1, tmp_59559_2, tmp_59559_3}, [ptr_from_optix_id_59562];
              .reg .f32      temp_51368_0, temp_51368_1, temp_51368_2;
              mul.ftz.f32    temp_51368_0, tmp_59559_0, temp_51357_0;
              mul.ftz.f32    temp_51368_1, tmp_59559_1, temp_51357_0;
              mul.ftz.f32    temp_51368_2, tmp_59559_2, temp_51357_0;
              .reg .f32      temp_51369_0, temp_51369_1, temp_51369_2;
              mul.ftz.f32    temp_51369_0, tmp_59559_0, temp_51353_0;
              mul.ftz.f32    temp_51369_1, tmp_59559_1, temp_51353_0;
              mul.ftz.f32    temp_51369_2, tmp_59559_2, temp_51353_0;
              .reg .f32      temp_51370_0, temp_51370_1, temp_51370_2;
              mul.ftz.f32    temp_51370_0, tmp_59559_0, temp_51354_0;
              mul.ftz.f32    temp_51370_1, tmp_59559_1, temp_51354_0;
              mul.ftz.f32    temp_51370_2, tmp_59559_2, temp_51354_0;
              .reg.u64       tmp_59567;
              .reg.s32       optix_buffer_id_59568;
              mov.b64        {_, optix_buffer_id_59568}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59569;
{
              .reg.s32       abstract_59570;
              mov.b32        abstract_59570, 1;
              .reg.u64       const_59571;
              mov.b64        const_59571, 608;
              .reg.u64       const_59572;
              mov.b64        const_59572, 0;
 call (ptr_from_optix_id_59569), _rt_buffer_get_id_64, (optix_buffer_id_59568, abstract_59570, abstract_59570, const_59571, const_59572, const_59572, const_59572); // resolving optix id
}
              ld.u64         tmp_59567, [ptr_from_optix_id_59569];
              .reg .f32      tmp_59573_0, tmp_59573_1, tmp_59573_2, tmp_59573_3;
              .reg.u64       off_59574;
              mad.wide.u32   off_59574, tmp_59446, 80, 32;
              .reg.s32       optix_buffer_id_59575;
              mov.b64        {_, optix_buffer_id_59575}, tmp_59567;
              .reg.u64       ptr_from_optix_id_59576;
{
              .reg.s32       abstract_59577;
              mov.b32        abstract_59577, 1;
              .reg.u64       const_59578;
              mov.b64        const_59578, 512;
              .reg.u64       off_59579;
              add.u64        off_59579, const_59578, off_59574;
              .reg.u64       const_59580;
              mov.b64        const_59580, 0;
 call (ptr_from_optix_id_59576), _rt_buffer_get_id_64, (optix_buffer_id_59575, abstract_59577, abstract_59577, off_59579, const_59580, const_59580, const_59580); // resolving optix id
}
              ld.v4.f32      {tmp_59573_0, tmp_59573_1, tmp_59573_2, tmp_59573_3}, [ptr_from_optix_id_59576];
              .reg .f32      temp_51379_0, temp_51379_1, temp_51379_2;
              mul.ftz.f32    temp_51379_0, tmp_59573_0, temp_51357_1;
              mul.ftz.f32    temp_51379_1, tmp_59573_1, temp_51357_1;
              mul.ftz.f32    temp_51379_2, tmp_59573_2, temp_51357_1;
              .reg .f32      temp_51380_0, temp_51380_1, temp_51380_2;
              mul.ftz.f32    temp_51380_0, tmp_59573_0, temp_51353_1;
              mul.ftz.f32    temp_51380_1, tmp_59573_1, temp_51353_1;
              mul.ftz.f32    temp_51380_2, tmp_59573_2, temp_51353_1;
              .reg .f32      temp_51381_0, temp_51381_1, temp_51381_2;
              mul.ftz.f32    temp_51381_0, tmp_59573_0, temp_51354_1;
              mul.ftz.f32    temp_51381_1, tmp_59573_1, temp_51354_1;
              mul.ftz.f32    temp_51381_2, tmp_59573_2, temp_51354_1;
              .reg .f32      temp_51382_0, temp_51382_1, temp_51382_2;
              add.ftz.f32    temp_51382_0, temp_51368_0, temp_51379_0;
              add.ftz.f32    temp_51382_1, temp_51368_1, temp_51379_1;
              add.ftz.f32    temp_51382_2, temp_51368_2, temp_51379_2;
              .reg .f32      temp_51383_0, temp_51383_1, temp_51383_2;
              add.ftz.f32    temp_51383_0, temp_51369_0, temp_51380_0;
              add.ftz.f32    temp_51383_1, temp_51369_1, temp_51380_1;
              add.ftz.f32    temp_51383_2, temp_51369_2, temp_51380_2;
              .reg .f32      temp_51384_0, temp_51384_1, temp_51384_2;
              add.ftz.f32    temp_51384_0, temp_51370_0, temp_51381_0;
              add.ftz.f32    temp_51384_1, temp_51370_1, temp_51381_1;
              add.ftz.f32    temp_51384_2, temp_51370_2, temp_51381_2;
              .reg.u64       tmp_59581;
              .reg.s32       optix_buffer_id_59582;
              mov.b64        {_, optix_buffer_id_59582}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59583;
{
              .reg.s32       abstract_59584;
              mov.b32        abstract_59584, 1;
              .reg.u64       const_59585;
              mov.b64        const_59585, 608;
              .reg.u64       const_59586;
              mov.b64        const_59586, 0;
 call (ptr_from_optix_id_59583), _rt_buffer_get_id_64, (optix_buffer_id_59582, abstract_59584, abstract_59584, const_59585, const_59586, const_59586, const_59586); // resolving optix id
}
              ld.u64         tmp_59581, [ptr_from_optix_id_59583];
              .reg .f32      tmp_59587_0, tmp_59587_1, tmp_59587_2, tmp_59587_3;
              .reg.u64       off_59588;
              mad.wide.u32   off_59588, tmp_59446, 80, 48;
              .reg.s32       optix_buffer_id_59589;
              mov.b64        {_, optix_buffer_id_59589}, tmp_59581;
              .reg.u64       ptr_from_optix_id_59590;
{
              .reg.s32       abstract_59591;
              mov.b32        abstract_59591, 1;
              .reg.u64       const_59592;
              mov.b64        const_59592, 512;
              .reg.u64       off_59593;
              add.u64        off_59593, const_59592, off_59588;
              .reg.u64       const_59594;
              mov.b64        const_59594, 0;
 call (ptr_from_optix_id_59590), _rt_buffer_get_id_64, (optix_buffer_id_59589, abstract_59591, abstract_59591, off_59593, const_59594, const_59594, const_59594); // resolving optix id
}
              ld.v4.f32      {tmp_59587_0, tmp_59587_1, tmp_59587_2, tmp_59587_3}, [ptr_from_optix_id_59590];
              .reg .f32      temp_51393_0, temp_51393_1, temp_51393_2;
              mul.ftz.f32    temp_51393_0, tmp_59587_0, temp_51357_2;
              mul.ftz.f32    temp_51393_1, tmp_59587_1, temp_51357_2;
              mul.ftz.f32    temp_51393_2, tmp_59587_2, temp_51357_2;
              .reg .f32      temp_51394_0, temp_51394_1, temp_51394_2;
              mul.ftz.f32    temp_51394_0, tmp_59587_0, temp_51353_2;
              mul.ftz.f32    temp_51394_1, tmp_59587_1, temp_51353_2;
              mul.ftz.f32    temp_51394_2, tmp_59587_2, temp_51353_2;
              .reg .f32      temp_51395_0, temp_51395_1, temp_51395_2;
              mul.ftz.f32    temp_51395_0, tmp_59587_0, temp_51354_2;
              mul.ftz.f32    temp_51395_1, tmp_59587_1, temp_51354_2;
              mul.ftz.f32    temp_51395_2, tmp_59587_2, temp_51354_2;
              .reg .f32      temp_51396_0, temp_51396_1, temp_51396_2;
              add.ftz.f32    temp_51396_0, temp_51382_0, temp_51393_0;
              add.ftz.f32    temp_51396_1, temp_51382_1, temp_51393_1;
              add.ftz.f32    temp_51396_2, temp_51382_2, temp_51393_2;
              .reg .f32      temp_51397_0, temp_51397_1, temp_51397_2;
              add.ftz.f32    temp_51397_0, temp_51383_0, temp_51394_0;
              add.ftz.f32    temp_51397_1, temp_51383_1, temp_51394_1;
              add.ftz.f32    temp_51397_2, temp_51383_2, temp_51394_2;
              .reg .f32      temp_51398_0, temp_51398_1, temp_51398_2;
              add.ftz.f32    temp_51398_0, temp_51384_0, temp_51395_0;
              add.ftz.f32    temp_51398_1, temp_51384_1, temp_51395_1;
              add.ftz.f32    temp_51398_2, temp_51384_2, temp_51395_2;
              .reg.u64       tmp_59595;
              .reg.s32       optix_buffer_id_59596;
              mov.b64        {_, optix_buffer_id_59596}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59597;
{
              .reg.s32       abstract_59598;
              mov.b32        abstract_59598, 1;
              .reg.u64       const_59599;
              mov.b64        const_59599, 608;
              .reg.u64       const_59600;
              mov.b64        const_59600, 0;
 call (ptr_from_optix_id_59597), _rt_buffer_get_id_64, (optix_buffer_id_59596, abstract_59598, abstract_59598, const_59599, const_59600, const_59600, const_59600); // resolving optix id
}
              ld.u64         tmp_59595, [ptr_from_optix_id_59597];
              .reg .f32      tmp_59601_0, tmp_59601_1, tmp_59601_2, tmp_59601_3;
              .reg.u64       off_59602;
              mad.wide.u32   off_59602, tmp_59446, 80, 64;
              .reg.s32       optix_buffer_id_59603;
              mov.b64        {_, optix_buffer_id_59603}, tmp_59595;
              .reg.u64       ptr_from_optix_id_59604;
{
              .reg.s32       abstract_59605;
              mov.b32        abstract_59605, 1;
              .reg.u64       const_59606;
              mov.b64        const_59606, 512;
              .reg.u64       off_59607;
              add.u64        off_59607, const_59606, off_59602;
              .reg.u64       const_59608;
              mov.b64        const_59608, 0;
 call (ptr_from_optix_id_59604), _rt_buffer_get_id_64, (optix_buffer_id_59603, abstract_59605, abstract_59605, off_59607, const_59608, const_59608, const_59608); // resolving optix id
}
              ld.v4.f32      {tmp_59601_0, tmp_59601_1, tmp_59601_2, tmp_59601_3}, [ptr_from_optix_id_59604];
              .reg .f32      temp_51401_0, temp_51401_1, temp_51401_2;
              add.ftz.f32    temp_51401_0, tmp_59601_0, temp_51396_0;
              add.ftz.f32    temp_51401_1, tmp_59601_1, temp_51396_1;
              add.ftz.f32    temp_51401_2, tmp_59601_2, temp_51396_2;
              .reg.u64       tmp_59609;
              .reg.s32       optix_buffer_id_59610;
              mov.b64        {_, optix_buffer_id_59610}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59611;
{
              .reg.s32       abstract_59612;
              mov.b32        abstract_59612, 1;
              .reg.u64       const_59613;
              mov.b64        const_59613, 608;
              .reg.u64       const_59614;
              mov.b64        const_59614, 0;
 call (ptr_from_optix_id_59611), _rt_buffer_get_id_64, (optix_buffer_id_59610, abstract_59612, abstract_59612, const_59613, const_59614, const_59614, const_59614); // resolving optix id
}
              ld.u64         tmp_59609, [ptr_from_optix_id_59611];
              .reg.s32       tmp_59615;
              .reg.u64       off_59616;
              mad.wide.u32   off_59616, tmp_59446, 80, 0;
              .reg.s32       optix_buffer_id_59617;
              mov.b64        {_, optix_buffer_id_59617}, tmp_59609;
              .reg.u64       ptr_from_optix_id_59618;
{
              .reg.s32       abstract_59619;
              mov.b32        abstract_59619, 1;
              .reg.u64       const_59620;
              mov.b64        const_59620, 512;
              .reg.u64       off_59621;
              add.u64        off_59621, const_59620, off_59616;
              .reg.u64       const_59622;
              mov.b64        const_59622, 0;
 call (ptr_from_optix_id_59618), _rt_buffer_get_id_64, (optix_buffer_id_59617, abstract_59619, abstract_59619, off_59621, const_59622, const_59622, const_59622); // resolving optix id
}
              ld.s32         tmp_59615, [ptr_from_optix_id_59618];
              .reg .f32      scl_51406_0, scl_51406_1;
              .reg .f32      scl_51407_0, scl_51407_1;
              .reg .f32      scl_51408_0, scl_51408_1;
              .reg.pred      pred_59629;
              setp.eq.s32    pred_59629, tmp_59615, 0;
  @pred_59629 bra            case_0_59623;
              setp.eq.s32    pred_59629, tmp_59615, 1;
  @pred_59629 bra            case_1_59624;
              setp.eq.s32    pred_59629, tmp_59615, 2;
  @pred_59629 bra            case_2_59625;
              setp.eq.s32    pred_59629, tmp_59615, 3;
  @pred_59629 bra            case_3_59626;
              setp.eq.s32    pred_59629, tmp_59615, 4;
  @pred_59629 bra            case_4_59627;
case_0_59623:
              .reg.u64       tmp_59630;
              ld.param.u64   tmp_59630, [f_22353];
              .reg .f32      tmp_59631_0, tmp_59631_1;
              ld.v2.f32      {tmp_59631_0, tmp_59631_1}, [tmp_59630+240];
              .reg.u64       tmp_59632;
              ld.param.u64   tmp_59632, [f_22353];
              .reg .f32      tmp_59633_0, tmp_59633_1;
              ld.v2.f32      {tmp_59633_0, tmp_59633_1}, [tmp_59632+248];
              .reg.u64       tmp_59634;
              ld.param.u64   tmp_59634, [f_22353];
              .reg .f32      tmp_59635_0, tmp_59635_1;
              ld.v2.f32      {tmp_59635_0, tmp_59635_1}, [tmp_59634+256];
              mov.b32        scl_51406_0, tmp_59631_0;
              mov.b32        scl_51406_1, tmp_59631_1;
              mov.b32        scl_51407_0, tmp_59633_0;
              mov.b32        scl_51407_1, tmp_59633_1;
              mov.b32        scl_51408_0, tmp_59635_0;
              mov.b32        scl_51408_1, tmp_59635_1;
              bra.uni        merge_59628;
case_1_59624:
              .reg.s32       temp_51612;
              set.lt.ftz.s32.f32 temp_51612, temp_51103_0, 0F00000000;
              .reg.f32       temp_51613;
              neg.ftz.f32    temp_51613, temp_51103_0;
              .reg.f32       scl_51614;
              .reg.pred      temp_51612_59636;
              setp.ne.s32    temp_51612_59636, 0, temp_51612;
              selp.f32       scl_51614, temp_51613, temp_51103_0, temp_51612_59636;
              .reg.s32       temp_51616;
              set.lt.ftz.s32.f32 temp_51616, temp_51103_1, 0F00000000;
              .reg.f32       temp_51617;
              neg.ftz.f32    temp_51617, temp_51103_1;
              .reg.f32       scl_51618;
              .reg.pred      temp_51616_59637;
              setp.ne.s32    temp_51616_59637, 0, temp_51616;
              selp.f32       scl_51618, temp_51617, temp_51103_1, temp_51616_59637;
              .reg.s32       temp_51619;
              set.gt.ftz.s32.f32 temp_51619, scl_51614, scl_51618;
              .reg.s32       temp_51621;
              set.lt.ftz.s32.f32 temp_51621, temp_51103_2, 0F00000000;
              .reg.f32       temp_51622;
              neg.ftz.f32    temp_51622, temp_51103_2;
              .reg.f32       scl_51623;
              .reg.pred      temp_51621_59638;
              setp.ne.s32    temp_51621_59638, 0, temp_51621;
              selp.f32       scl_51623, temp_51622, temp_51103_2, temp_51621_59638;
              .reg.s32       temp_51624;
              set.gt.ftz.s32.f32 temp_51624, scl_51614, scl_51623;
              .reg.s32       temp_51625;
              and.b32        temp_51625, temp_51619, temp_51624;
              .reg .f32      scl_51629_0, scl_51629_1;
              .reg .f32      scl_51630_0, scl_51630_1;
              .reg .f32      scl_51631_0, scl_51631_1;
              .reg.pred      temp_51625_59641;
              setp.ne.s32    temp_51625_59641, 0, temp_51625;
  @!temp_51625_59641 bra     else_59639;
              .reg.s32       temp_51714;
              set.gt.ftz.s32.f32 temp_51714, temp_51103_0, 0F00000000;
              .reg .f32      scl_51718_0, scl_51718_1;
              .reg .f32      scl_51719_0, scl_51719_1;
              .reg .f32      scl_51720_0, scl_51720_1;
              .reg.pred      temp_51714_59644;
              setp.ne.s32    temp_51714_59644, 0, temp_51714;
  @!temp_51714_59644 bra     else_59642;
              .reg.f32       temp_51739;
              add.ftz.f32    temp_51739, temp_51401_1, 0F3f000000;
              .reg.f32       temp_51741;
              add.ftz.f32    temp_51741, temp_51401_2, 0F3f000000;
              mov.b32        scl_51718_0, temp_51739;
              mov.b32        scl_51718_1, temp_51741;
              mov.b32        scl_51719_0, temp_51397_1;
              mov.b32        scl_51719_1, temp_51397_2;
              mov.b32        scl_51720_0, temp_51398_1;
              mov.b32        scl_51720_1, temp_51398_2;
              bra.uni        merge_59643;
else_59642:
              .reg.f32       temp_51724;
              neg.ftz.f32    temp_51724, temp_51401_1;
              .reg.f32       temp_51725;
              neg.ftz.f32    temp_51725, temp_51397_1;
              .reg.f32       temp_51726;
              neg.ftz.f32    temp_51726, temp_51398_1;
              .reg.f32       temp_51727;
              add.ftz.f32    temp_51727, temp_51724, 0F3f000000;
              .reg.f32       temp_51731;
              add.ftz.f32    temp_51731, temp_51401_2, 0F3f000000;
              mov.b32        scl_51718_0, temp_51727;
              mov.b32        scl_51718_1, temp_51731;
              mov.b32        scl_51719_0, temp_51725;
              mov.b32        scl_51719_1, temp_51397_2;
              mov.b32        scl_51720_0, temp_51726;
              mov.b32        scl_51720_1, temp_51398_2;
merge_59643:
              mov.b32        scl_51629_0, scl_51718_0;
              mov.b32        scl_51629_1, scl_51718_1;
              mov.b32        scl_51630_0, scl_51719_0;
              mov.b32        scl_51630_1, scl_51719_1;
              mov.b32        scl_51631_0, scl_51720_0;
              mov.b32        scl_51631_1, scl_51720_1;
              bra.uni        merge_59640;
else_59639:
              .reg.s32       temp_51632;
              set.gt.ftz.s32.f32 temp_51632, scl_51618, scl_51614;
              .reg.s32       temp_51637;
              set.gt.ftz.s32.f32 temp_51637, scl_51618, scl_51623;
              .reg.s32       temp_51638;
              and.b32        temp_51638, temp_51632, temp_51637;
              .reg .f32      scl_51642_0, scl_51642_1;
              .reg .f32      scl_51643_0, scl_51643_1;
              .reg .f32      scl_51644_0, scl_51644_1;
              .reg.pred      temp_51638_59647;
              setp.ne.s32    temp_51638_59647, 0, temp_51638;
  @!temp_51638_59647 bra     else_59645;
              .reg.s32       temp_51680;
              set.gt.ftz.s32.f32 temp_51680, temp_51103_1, 0F00000000;
              .reg .f32      scl_51684_0, scl_51684_1;
              .reg .f32      scl_51685_0, scl_51685_1;
              .reg .f32      scl_51686_0, scl_51686_1;
              .reg.pred      temp_51680_59650;
              setp.ne.s32    temp_51680_59650, 0, temp_51680;
  @!temp_51680_59650 bra     else_59648;
              .reg.f32       temp_51700;
              neg.ftz.f32    temp_51700, temp_51401_0;
              .reg.f32       temp_51701;
              neg.ftz.f32    temp_51701, temp_51397_0;
              .reg.f32       temp_51702;
              neg.ftz.f32    temp_51702, temp_51398_0;
              .reg.f32       temp_51703;
              add.ftz.f32    temp_51703, temp_51700, 0F3f000000;
              .reg.f32       temp_51707;
              add.ftz.f32    temp_51707, temp_51401_2, 0F3f000000;
              mov.b32        scl_51684_0, temp_51703;
              mov.b32        scl_51684_1, temp_51707;
              mov.b32        scl_51685_0, temp_51701;
              mov.b32        scl_51685_1, temp_51397_2;
              mov.b32        scl_51686_0, temp_51702;
              mov.b32        scl_51686_1, temp_51398_2;
              bra.uni        merge_59649;
else_59648:
              .reg.f32       temp_51688;
              add.ftz.f32    temp_51688, temp_51401_0, 0F3f000000;
              .reg.f32       temp_51690;
              add.ftz.f32    temp_51690, temp_51401_2, 0F3f000000;
              mov.b32        scl_51684_0, temp_51688;
              mov.b32        scl_51684_1, temp_51690;
              mov.b32        scl_51685_0, temp_51397_0;
              mov.b32        scl_51685_1, temp_51397_2;
              mov.b32        scl_51686_0, temp_51398_0;
              mov.b32        scl_51686_1, temp_51398_2;
merge_59649:
              mov.b32        scl_51642_0, scl_51684_0;
              mov.b32        scl_51642_1, scl_51684_1;
              mov.b32        scl_51643_0, scl_51685_0;
              mov.b32        scl_51643_1, scl_51685_1;
              mov.b32        scl_51644_0, scl_51686_0;
              mov.b32        scl_51644_1, scl_51686_1;
              bra.uni        merge_59646;
else_59645:
              .reg.s32       temp_51646;
              set.gt.ftz.s32.f32 temp_51646, temp_51103_2, 0F00000000;
              .reg .f32      scl_51650_0, scl_51650_1;
              .reg .f32      scl_51651_0, scl_51651_1;
              .reg .f32      scl_51652_0, scl_51652_1;
              .reg.pred      temp_51646_59653;
              setp.ne.s32    temp_51646_59653, 0, temp_51646;
  @!temp_51646_59653 bra     else_59651;
              .reg.f32       temp_51671;
              add.ftz.f32    temp_51671, temp_51401_0, 0F3f000000;
              .reg.f32       temp_51673;
              add.ftz.f32    temp_51673, temp_51401_1, 0F3f000000;
              mov.b32        scl_51650_0, temp_51671;
              mov.b32        scl_51650_1, temp_51673;
              mov.b32        scl_51651_0, temp_51397_0;
              mov.b32        scl_51651_1, temp_51397_1;
              mov.b32        scl_51652_0, temp_51398_0;
              mov.b32        scl_51652_1, temp_51398_1;
              bra.uni        merge_59652;
else_59651:
              .reg.f32       temp_51656;
              neg.ftz.f32    temp_51656, temp_51401_0;
              .reg.f32       temp_51657;
              neg.ftz.f32    temp_51657, temp_51397_0;
              .reg.f32       temp_51658;
              neg.ftz.f32    temp_51658, temp_51398_0;
              .reg.f32       temp_51659;
              add.ftz.f32    temp_51659, temp_51656, 0F3f000000;
              .reg.f32       temp_51663;
              add.ftz.f32    temp_51663, temp_51401_1, 0F3f000000;
              mov.b32        scl_51650_0, temp_51659;
              mov.b32        scl_51650_1, temp_51663;
              mov.b32        scl_51651_0, temp_51657;
              mov.b32        scl_51651_1, temp_51397_1;
              mov.b32        scl_51652_0, temp_51658;
              mov.b32        scl_51652_1, temp_51398_1;
merge_59652:
              mov.b32        scl_51642_0, scl_51650_0;
              mov.b32        scl_51642_1, scl_51650_1;
              mov.b32        scl_51643_0, scl_51651_0;
              mov.b32        scl_51643_1, scl_51651_1;
              mov.b32        scl_51644_0, scl_51652_0;
              mov.b32        scl_51644_1, scl_51652_1;
merge_59646:
              mov.b32        scl_51629_0, scl_51642_0;
              mov.b32        scl_51629_1, scl_51642_1;
              mov.b32        scl_51630_0, scl_51643_0;
              mov.b32        scl_51630_1, scl_51643_1;
              mov.b32        scl_51631_0, scl_51644_0;
              mov.b32        scl_51631_1, scl_51644_1;
merge_59640:
              mov.b32        scl_51406_0, scl_51629_0;
              mov.b32        scl_51406_1, scl_51629_1;
              mov.b32        scl_51407_0, scl_51630_0;
              mov.b32        scl_51407_1, scl_51630_1;
              mov.b32        scl_51408_0, scl_51631_0;
              mov.b32        scl_51408_1, scl_51631_1;
              bra.uni        merge_59628;
case_2_59625:
              .reg.f32       temp_51749;
              add.ftz.f32    temp_51749, temp_51401_0, 0F3f000000;
              .reg.f32       temp_51751;
              add.ftz.f32    temp_51751, temp_51401_1, 0F3f000000;
              mov.b32        scl_51406_0, temp_51749;
              mov.b32        scl_51406_1, temp_51751;
              mov.b32        scl_51407_0, temp_51397_0;
              mov.b32        scl_51407_1, temp_51397_1;
              mov.b32        scl_51408_0, temp_51398_0;
              mov.b32        scl_51408_1, temp_51398_1;
              bra.uni        merge_59628;
case_3_59626:
              .reg.f32       temp_51761;
              neg.ftz.f32    temp_51761, temp_51401_1;
              .reg.f32       temp_51762;
              neg.ftz.f32    temp_51762, temp_51397_1;
              .reg.f32       temp_51763;
              neg.ftz.f32    temp_51763, temp_51398_1;
              .reg.f32       temp_51767;
              neg.ftz.f32    temp_51767, temp_51401_0;
              .reg.f32       temp_51768;
              neg.ftz.f32    temp_51768, temp_51397_0;
              .reg.f32       temp_51769;
              neg.ftz.f32    temp_51769, temp_51398_0;
              .reg.f32       temp_51770;
              div.approx.ftz.f32 temp_51770, temp_51767, temp_51761;
              .reg.f32       temp_51771;
              mul.ftz.f32    temp_51771, temp_51768, temp_51761;
              .reg.f32       temp_51772;
              mul.ftz.f32    temp_51772, temp_51767, temp_51762;
              .reg.f32       temp_51773;
              sub.ftz.f32    temp_51773, temp_51771, temp_51772;
              .reg.f32       temp_51774;
              mul.ftz.f32    temp_51774, temp_51761, temp_51761;
              .reg.f32       temp_51775;
              div.approx.ftz.f32 temp_51775, temp_51773, temp_51774;
              .reg.f32       temp_51776;
              mul.ftz.f32    temp_51776, temp_51769, temp_51761;
              .reg.f32       temp_51777;
              mul.ftz.f32    temp_51777, temp_51767, temp_51763;
              .reg.f32       temp_51778;
              sub.ftz.f32    temp_51778, temp_51776, temp_51777;
              .reg.f32       temp_51779;
              div.approx.ftz.f32 temp_51779, temp_51778, temp_51774;
              .reg.f32       temp_51780;
              mul.ftz.f32    temp_51780, temp_51770, temp_51770;
              .reg.f32       f_51781;
              add.ftz.f32    f_51781, 0F3f800000, temp_51780;
              .reg.f32       temp_51782;
              div.approx.ftz.f32 temp_51782, temp_51775, f_51781;
              .reg.f32       temp_51783;
              div.approx.ftz.f32 temp_51783, temp_51779, f_51781;
              .reg.f32       temp_51784;
              .reg.f32       ax_59654;
              .reg.f32       ay_59655;
              .reg.f32       ma_59656;
              .reg.f32       mi_59657;
              .reg.f32       q_59658;
              .reg.f32       q2_59659;
              .reg.f32       t_59660;
              abs.ftz.f32    ax_59654, temp_51767;
              abs.ftz.f32    ay_59655, temp_51761;
              max.ftz.f32    ma_59656, ax_59654, ay_59655;
              min.ftz.f32    mi_59657, ax_59654, ay_59655;
              div.approx.ftz.f32 q_59658, mi_59657, ma_59656;
              mul.rn.ftz.f32 q2_59659, q_59658, q_59658;
              mov.f32        t_59660, 0Fbc5cdd30;
              fma.rn.ftz.f32 t_59660, t_59660, q2_59659, 0F3d6b6d55;
              fma.rn.ftz.f32 t_59660, t_59660, q2_59659, 0Fbdf84c31;
              fma.rn.ftz.f32 t_59660, t_59660, q2_59659, 0F3e4854c9;
              fma.rn.ftz.f32 t_59660, t_59660, q2_59659, 0Fbeaa7e45;
              fma.rn.ftz.f32 t_59660, t_59660, q2_59659, 0F3f7fffb7;
              mul.rn.ftz.f32 temp_51784, t_59660, q_59658;
              .reg.pred      p_59661;
              setp.gt.ftz.f32 p_59661, ay_59655, ax_59654;
  @p_59661    sub.rn.ftz.f32 temp_51784, 0F3fc90fdb, temp_51784;
              setp.lt.ftz.f32 p_59661, temp_51767, 0F00000000;
  @p_59661    sub.rn.ftz.f32 temp_51784, 0F40490fdb, temp_51784;
              setp.lt.ftz.f32 p_59661, temp_51761, 0F00000000;
  @p_59661    neg.ftz.f32    temp_51784, temp_51784;
              setp.eq.ftz.f32 p_59661, ma_59656, 0F00000000;
  @p_59661    mov.f32        temp_51784, 0F00000000;
              .reg.f32       temp_51785;
              mul.ftz.f32    temp_51785, 0F3f000000, temp_51784;
              .reg.f32       temp_51786;
              mul.ftz.f32    temp_51786, 0F3f000000, temp_51782;
              .reg.f32       temp_51787;
              mul.ftz.f32    temp_51787, 0F3f000000, temp_51783;
              .reg.f32       temp_51788;
              div.approx.ftz.f32 temp_51788, temp_51785, 0F40490fdb;
              .reg.f32       temp_51789;
              mul.ftz.f32    temp_51789, temp_51786, 0F40490fdb;
              .reg.f32       temp_51790;
              div.approx.ftz.f32 temp_51790, temp_51789, 0F411de9e6;
              .reg.f32       temp_51791;
              mul.ftz.f32    temp_51791, temp_51787, 0F40490fdb;
              .reg.f32       temp_51792;
              div.approx.ftz.f32 temp_51792, temp_51791, 0F411de9e6;
              .reg.s32       temp_51793;
              set.lt.ftz.s32.f32 temp_51793, temp_51788, 0F00000000;
              .reg.f32       temp_51794;
              add.ftz.f32    temp_51794, temp_51788, 0F3f800000;
              .reg.f32       scl_51795;
              .reg.pred      temp_51793_59662;
              setp.ne.s32    temp_51793_59662, 0, temp_51793;
              selp.f32       scl_51795, temp_51794, temp_51788, temp_51793_59662;
              .reg .f32      temp_51799_0, temp_51799_1, temp_51799_2;
              mul.ftz.f32    temp_51799_0, temp_51401_0, temp_51401_0;
              mul.ftz.f32    temp_51799_1, temp_51401_1, temp_51401_1;
              mul.ftz.f32    temp_51799_2, temp_51401_2, temp_51401_2;
              .reg .f32      temp_51800_0, temp_51800_1, temp_51800_2;
              mul.ftz.f32    temp_51800_0, temp_51397_0, temp_51401_0;
              mul.ftz.f32    temp_51800_1, temp_51397_1, temp_51401_1;
              mul.ftz.f32    temp_51800_2, temp_51397_2, temp_51401_2;
              .reg .f32      temp_51801_0, temp_51801_1, temp_51801_2;
              mul.ftz.f32    temp_51801_0, temp_51401_0, temp_51397_0;
              mul.ftz.f32    temp_51801_1, temp_51401_1, temp_51397_1;
              mul.ftz.f32    temp_51801_2, temp_51401_2, temp_51397_2;
              .reg .f32      temp_51802_0, temp_51802_1, temp_51802_2;
              add.ftz.f32    temp_51802_0, temp_51800_0, temp_51801_0;
              add.ftz.f32    temp_51802_1, temp_51800_1, temp_51801_1;
              add.ftz.f32    temp_51802_2, temp_51800_2, temp_51801_2;
              .reg .f32      temp_51803_0, temp_51803_1, temp_51803_2;
              mul.ftz.f32    temp_51803_0, temp_51398_0, temp_51401_0;
              mul.ftz.f32    temp_51803_1, temp_51398_1, temp_51401_1;
              mul.ftz.f32    temp_51803_2, temp_51398_2, temp_51401_2;
              .reg .f32      temp_51804_0, temp_51804_1, temp_51804_2;
              mul.ftz.f32    temp_51804_0, temp_51401_0, temp_51398_0;
              mul.ftz.f32    temp_51804_1, temp_51401_1, temp_51398_1;
              mul.ftz.f32    temp_51804_2, temp_51401_2, temp_51398_2;
              .reg .f32      temp_51805_0, temp_51805_1, temp_51805_2;
              add.ftz.f32    temp_51805_0, temp_51803_0, temp_51804_0;
              add.ftz.f32    temp_51805_1, temp_51803_1, temp_51804_1;
              add.ftz.f32    temp_51805_2, temp_51803_2, temp_51804_2;
              .reg.f32       temp_51812;
              add.ftz.f32    temp_51812, temp_51799_0, temp_51799_1;
              .reg.f32       temp_51813;
              add.ftz.f32    temp_51813, temp_51802_0, temp_51802_1;
              .reg.f32       temp_51814;
              add.ftz.f32    temp_51814, temp_51805_0, temp_51805_1;
              .reg.f32       temp_51818;
              add.ftz.f32    temp_51818, temp_51812, temp_51799_2;
              .reg.f32       temp_51819;
              add.ftz.f32    temp_51819, temp_51813, temp_51802_2;
              .reg.f32       temp_51820;
              add.ftz.f32    temp_51820, temp_51814, temp_51805_2;
              .reg.f32       temp_51821;
              rsqrt.approx.ftz.f32 temp_51821, temp_51818;
              .reg.f32       f_51822;
              mul.ftz.f32    f_51822, 0F3f000000, temp_51821;
              .reg.f32       temp_51823;
              sqrt.approx.f32 temp_51823, temp_51818;
              .reg.f32       temp_51824;
              mul.ftz.f32    temp_51824, f_51822, temp_51819;
              .reg.f32       temp_51825;
              mul.ftz.f32    temp_51825, f_51822, temp_51820;
              .reg.f32       temp_51826;
              div.approx.ftz.f32 temp_51826, temp_51401_2, temp_51823;
              .reg.f32       temp_51827;
              mul.ftz.f32    temp_51827, temp_51397_2, temp_51823;
              .reg.f32       temp_51828;
              mul.ftz.f32    temp_51828, temp_51401_2, temp_51824;
              .reg.f32       temp_51829;
              sub.ftz.f32    temp_51829, temp_51827, temp_51828;
              .reg.f32       temp_51830;
              mul.ftz.f32    temp_51830, temp_51823, temp_51823;
              .reg.f32       temp_51831;
              div.approx.ftz.f32 temp_51831, temp_51829, temp_51830;
              .reg.f32       temp_51832;
              mul.ftz.f32    temp_51832, temp_51398_2, temp_51823;
              .reg.f32       temp_51833;
              mul.ftz.f32    temp_51833, temp_51401_2, temp_51825;
              .reg.f32       temp_51834;
              sub.ftz.f32    temp_51834, temp_51832, temp_51833;
              .reg.f32       temp_51835;
              div.approx.ftz.f32 temp_51835, temp_51834, temp_51830;
              .reg.f32       temp_51836;
              mul.ftz.f32    temp_51836, temp_51826, temp_51826;
              .reg.f32       temp_51837;
              sub.ftz.f32    temp_51837, 0F3f800000, temp_51836;
              .reg.f32       temp_51838;
              rsqrt.approx.ftz.f32 temp_51838, temp_51837;
              .reg.f32       f_51839;
              neg.ftz.f32    f_51839, temp_51838;
              .reg.f32       temp_51840;
              .reg.f32       tmp_59663;
              .reg.f32       c_59664;
              .reg.f32       absx_59665;
              .reg.pred      swap_59666;
              .reg.pred      sign_59667;
              abs.ftz.f32    absx_59665, temp_51826;
              mul.f32        c_59664, absx_59665, absx_59665;
              sub.f32        c_59664, 0F3f800000, c_59664;
              sqrt.approx.ftz.f32 c_59664, c_59664;
              setp.gt.ftz.f32 swap_59666, absx_59665, 0F3f3504f3;
              mov.f32        tmp_59663, absx_59665;
  @swap_59666 mov.f32        absx_59665, c_59664;
  @swap_59666 mov.f32        c_59664, tmp_59663;
              .reg.f32       ax_59668;
              .reg.f32       ay_59669;
              .reg.f32       ma_59670;
              .reg.f32       mi_59671;
              .reg.f32       q_59672;
              .reg.f32       q2_59673;
              .reg.f32       t_59674;
              abs.ftz.f32    ax_59668, c_59664;
              abs.ftz.f32    ay_59669, absx_59665;
              max.ftz.f32    ma_59670, ax_59668, ay_59669;
              min.ftz.f32    mi_59671, ax_59668, ay_59669;
              div.approx.ftz.f32 q_59672, mi_59671, ma_59670;
              mul.rn.ftz.f32 q2_59673, q_59672, q_59672;
              mov.f32        t_59674, 0Fbc5cdd30;
              fma.rn.ftz.f32 t_59674, t_59674, q2_59673, 0F3d6b6d55;
              fma.rn.ftz.f32 t_59674, t_59674, q2_59673, 0Fbdf84c31;
              fma.rn.ftz.f32 t_59674, t_59674, q2_59673, 0F3e4854c9;
              fma.rn.ftz.f32 t_59674, t_59674, q2_59673, 0Fbeaa7e45;
              fma.rn.ftz.f32 t_59674, t_59674, q2_59673, 0F3f7fffb7;
              mul.rn.ftz.f32 temp_51840, t_59674, q_59672;
              .reg.pred      p_59675;
              setp.gt.ftz.f32 p_59675, ay_59669, ax_59668;
  @p_59675    sub.rn.ftz.f32 temp_51840, 0F3fc90fdb, temp_51840;
              setp.lt.ftz.f32 p_59675, c_59664, 0F00000000;
  @p_59675    sub.rn.ftz.f32 temp_51840, 0F40490fdb, temp_51840;
              setp.lt.ftz.f32 p_59675, absx_59665, 0F00000000;
  @p_59675    neg.ftz.f32    temp_51840, temp_51840;
              setp.eq.ftz.f32 p_59675, ma_59670, 0F00000000;
  @p_59675    mov.f32        temp_51840, 0F00000000;
  @swap_59666 sub.rn.ftz.f32 temp_51840, 0F3fc90fdb, temp_51840;
              setp.lt.f32    sign_59667, temp_51826, 0F00000000;
  @sign_59667 neg.ftz.f32    temp_51840, temp_51840;
              sub.rn.ftz.f32 temp_51840, 0F3fc90fdb, temp_51840;
              .reg.f32       temp_51841;
              mul.ftz.f32    temp_51841, f_51839, temp_51831;
              .reg.f32       temp_51842;
              mul.ftz.f32    temp_51842, f_51839, temp_51835;
              .reg.f32       temp_51843;
              div.approx.ftz.f32 temp_51843, temp_51840, 0F40490fdb;
              .reg.f32       temp_51844;
              mul.ftz.f32    temp_51844, temp_51841, 0F40490fdb;
              .reg.f32       temp_51845;
              div.approx.ftz.f32 temp_51845, temp_51844, 0F411de9e6;
              .reg.f32       temp_51846;
              mul.ftz.f32    temp_51846, temp_51842, 0F40490fdb;
              .reg.f32       temp_51847;
              div.approx.ftz.f32 temp_51847, temp_51846, 0F411de9e6;
              .reg.f32       temp_51848;
              sub.ftz.f32    temp_51848, 0F3f800000, temp_51843;
              .reg.f32       temp_51849;
              neg.ftz.f32    temp_51849, temp_51845;
              .reg.f32       temp_51850;
              neg.ftz.f32    temp_51850, temp_51847;
              mov.b32        scl_51406_0, scl_51795;
              mov.b32        scl_51406_1, temp_51848;
              mov.b32        scl_51407_0, temp_51790;
              mov.b32        scl_51407_1, temp_51849;
              mov.b32        scl_51408_0, temp_51792;
              mov.b32        scl_51408_1, temp_51850;
              bra.uni        merge_59628;
case_4_59627:
              .reg.f32       temp_51903;
              neg.ftz.f32    temp_51903, temp_51401_1;
              .reg.f32       temp_51904;
              neg.ftz.f32    temp_51904, temp_51397_1;
              .reg.f32       temp_51905;
              neg.ftz.f32    temp_51905, temp_51398_1;
              .reg.f32       temp_51909;
              neg.ftz.f32    temp_51909, temp_51401_0;
              .reg.f32       temp_51910;
              neg.ftz.f32    temp_51910, temp_51397_0;
              .reg.f32       temp_51911;
              neg.ftz.f32    temp_51911, temp_51398_0;
              .reg.f32       temp_51912;
              div.approx.ftz.f32 temp_51912, temp_51909, temp_51903;
              .reg.f32       temp_51913;
              mul.ftz.f32    temp_51913, temp_51910, temp_51903;
              .reg.f32       temp_51914;
              mul.ftz.f32    temp_51914, temp_51909, temp_51904;
              .reg.f32       temp_51915;
              sub.ftz.f32    temp_51915, temp_51913, temp_51914;
              .reg.f32       temp_51916;
              mul.ftz.f32    temp_51916, temp_51903, temp_51903;
              .reg.f32       temp_51917;
              div.approx.ftz.f32 temp_51917, temp_51915, temp_51916;
              .reg.f32       temp_51918;
              mul.ftz.f32    temp_51918, temp_51911, temp_51903;
              .reg.f32       temp_51919;
              mul.ftz.f32    temp_51919, temp_51909, temp_51905;
              .reg.f32       temp_51920;
              sub.ftz.f32    temp_51920, temp_51918, temp_51919;
              .reg.f32       temp_51921;
              div.approx.ftz.f32 temp_51921, temp_51920, temp_51916;
              .reg.f32       temp_51922;
              mul.ftz.f32    temp_51922, temp_51912, temp_51912;
              .reg.f32       f_51923;
              add.ftz.f32    f_51923, 0F3f800000, temp_51922;
              .reg.f32       temp_51924;
              div.approx.ftz.f32 temp_51924, temp_51917, f_51923;
              .reg.f32       temp_51925;
              div.approx.ftz.f32 temp_51925, temp_51921, f_51923;
              .reg.f32       temp_51926;
              .reg.f32       ax_59676;
              .reg.f32       ay_59677;
              .reg.f32       ma_59678;
              .reg.f32       mi_59679;
              .reg.f32       q_59680;
              .reg.f32       q2_59681;
              .reg.f32       t_59682;
              abs.ftz.f32    ax_59676, temp_51909;
              abs.ftz.f32    ay_59677, temp_51903;
              max.ftz.f32    ma_59678, ax_59676, ay_59677;
              min.ftz.f32    mi_59679, ax_59676, ay_59677;
              div.approx.ftz.f32 q_59680, mi_59679, ma_59678;
              mul.rn.ftz.f32 q2_59681, q_59680, q_59680;
              mov.f32        t_59682, 0Fbc5cdd30;
              fma.rn.ftz.f32 t_59682, t_59682, q2_59681, 0F3d6b6d55;
              fma.rn.ftz.f32 t_59682, t_59682, q2_59681, 0Fbdf84c31;
              fma.rn.ftz.f32 t_59682, t_59682, q2_59681, 0F3e4854c9;
              fma.rn.ftz.f32 t_59682, t_59682, q2_59681, 0Fbeaa7e45;
              fma.rn.ftz.f32 t_59682, t_59682, q2_59681, 0F3f7fffb7;
              mul.rn.ftz.f32 temp_51926, t_59682, q_59680;
              .reg.pred      p_59683;
              setp.gt.ftz.f32 p_59683, ay_59677, ax_59676;
  @p_59683    sub.rn.ftz.f32 temp_51926, 0F3fc90fdb, temp_51926;
              setp.lt.ftz.f32 p_59683, temp_51909, 0F00000000;
  @p_59683    sub.rn.ftz.f32 temp_51926, 0F40490fdb, temp_51926;
              setp.lt.ftz.f32 p_59683, temp_51903, 0F00000000;
  @p_59683    neg.ftz.f32    temp_51926, temp_51926;
              setp.eq.ftz.f32 p_59683, ma_59678, 0F00000000;
  @p_59683    mov.f32        temp_51926, 0F00000000;
              .reg.f32       temp_51927;
              mul.ftz.f32    temp_51927, 0F3f000000, temp_51926;
              .reg.f32       temp_51928;
              mul.ftz.f32    temp_51928, 0F3f000000, temp_51924;
              .reg.f32       temp_51929;
              mul.ftz.f32    temp_51929, 0F3f000000, temp_51925;
              .reg.f32       temp_51930;
              div.approx.ftz.f32 temp_51930, temp_51927, 0F40490fdb;
              .reg.f32       temp_51931;
              mul.ftz.f32    temp_51931, temp_51928, 0F40490fdb;
              .reg.f32       temp_51932;
              div.approx.ftz.f32 temp_51932, temp_51931, 0F411de9e6;
              .reg.f32       temp_51933;
              mul.ftz.f32    temp_51933, temp_51929, 0F40490fdb;
              .reg.f32       temp_51934;
              div.approx.ftz.f32 temp_51934, temp_51933, 0F411de9e6;
              .reg.s32       temp_51935;
              set.lt.ftz.s32.f32 temp_51935, temp_51930, 0F00000000;
              .reg.f32       temp_51936;
              add.ftz.f32    temp_51936, temp_51930, 0F3f800000;
              .reg.f32       scl_51937;
              .reg.pred      temp_51935_59684;
              setp.ne.s32    temp_51935_59684, 0, temp_51935;
              selp.f32       scl_51937, temp_51936, temp_51930, temp_51935_59684;
              .reg.f32       temp_51941;
              add.ftz.f32    temp_51941, temp_51401_2, 0F3f000000;
              mov.b32        scl_51406_0, scl_51937;
              mov.b32        scl_51406_1, temp_51941;
              mov.b32        scl_51407_0, temp_51932;
              mov.b32        scl_51407_1, temp_51397_2;
              mov.b32        scl_51408_0, temp_51934;
              mov.b32        scl_51408_1, temp_51398_2;
              bra.uni        merge_59628;
merge_59628:
              .reg.u64       tmp_59685;
              ld.param.u64   tmp_59685, [f_22353];
              .reg.s32       tmp_59686;
              ld.s32         tmp_59686, [tmp_59685+300];
              .reg.u64       tmp_59687;
              ld.param.u64   tmp_59687, [camera_instance_index_22356];
              .reg.s32       tmp_59688;
              ld.s32         tmp_59688, [tmp_59687];
              .reg.u64       tmp_59689;
              .reg.s32       optix_buffer_id_59690;
              mov.b64        {_, optix_buffer_id_59690}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59691;
{
              .reg.s32       abstract_59692;
              mov.b32        abstract_59692, 1;
              .reg.u64       const_59693;
              mov.b64        const_59693, 680;
              .reg.u64       const_59694;
              mov.b64        const_59694, 0;
 call (ptr_from_optix_id_59691), _rt_buffer_get_id_64, (optix_buffer_id_59690, abstract_59692, abstract_59692, const_59693, const_59694, const_59694, const_59694); // resolving optix id
}
              ld.u64         tmp_59689, [ptr_from_optix_id_59691];
              .reg.s32       tmp_59695;
              .reg.u64       off_59696;
              mad.wide.u32   off_59696, tmp_59688, 192, 0;
              .reg.s32       optix_buffer_id_59697;
              mov.b64        {_, optix_buffer_id_59697}, tmp_59689;
              .reg.u64       ptr_from_optix_id_59698;
{
              .reg.s32       abstract_59699;
              mov.b32        abstract_59699, 1;
              .reg.u64       const_59700;
              mov.b64        const_59700, 512;
              .reg.u64       off_59701;
              add.u64        off_59701, const_59700, off_59696;
              .reg.u64       const_59702;
              mov.b64        const_59702, 0;
 call (ptr_from_optix_id_59698), _rt_buffer_get_id_64, (optix_buffer_id_59697, abstract_59699, abstract_59699, off_59701, const_59702, const_59702, const_59702); // resolving optix id
}
              ld.s32         tmp_59695, [ptr_from_optix_id_59698];
              .reg.u64       tmp_59703;
              ld.param.u64   tmp_59703, [f_22353];
              .reg.f32       tmp_59704;
              ld.f32         tmp_59704, [tmp_59703+288];
              .reg.u64       tmp_59705;
              ld.param.u64   tmp_59705, [raystack_22351];
              .reg.u64       tmp_59706;
              ld.u64         tmp_59706, [tmp_59705];
              .reg.u64       tmp_59707;
              ld.param.u64   tmp_59707, [raystack_22351];
              .reg.u64       tmp_59708;
              ld.u64         tmp_59708, [tmp_59707+8];
              .reg.u64       tmp_59709;
              ld.param.u64   tmp_59709, [raystack_22351];
              .reg.u64       tmp_59710;
              ld.u64         tmp_59710, [tmp_59709+16];
              .reg.s32       tmp_59711;
              ld.s32         tmp_59711, [tmp_59706];
              .reg.s32       temp_51997;
              sub.cc.s32     temp_51997, tmp_59711, 1;
              .reg .f32      tmp_59712_0_0_0_0, tmp_59712_0_0_0_1, tmp_59712_0_0_0_2;
              .reg .f32      tmp_59712_0_0_1_0, tmp_59712_0_0_1_1, tmp_59712_0_0_1_2;
              .reg .f32      tmp_59712_0_0_2_0, tmp_59712_0_0_2_1, tmp_59712_0_0_2_2;
              .reg .f32      tmp_59712_1_0_0_0, tmp_59712_1_0_0_1, tmp_59712_1_0_0_2;
              .reg .f32      tmp_59712_1_0_1_0, tmp_59712_1_0_1_1, tmp_59712_1_0_1_2;
              .reg .f32      tmp_59712_1_0_2_0, tmp_59712_1_0_2_1, tmp_59712_1_0_2_2;
              .reg.f32       tmp_59712_2;
              .reg.u64       off_59713;
              mad.wide.u32   off_59713, temp_51997, 112, 0;
              .reg.u64       off_59714;
              add.u64        off_59714, tmp_59708, off_59713;
              ld.v2.f32      {tmp_59712_0_0_0_0, tmp_59712_0_0_0_1}, [off_59714];
              ld.f32         tmp_59712_0_0_0_2, [off_59714+8];
              ld.v2.f32      {tmp_59712_0_0_1_0, tmp_59712_0_0_1_1}, [off_59714+16];
              ld.f32         tmp_59712_0_0_1_2, [off_59714+24];
              ld.v2.f32      {tmp_59712_0_0_2_0, tmp_59712_0_0_2_1}, [off_59714+32];
              ld.f32         tmp_59712_0_0_2_2, [off_59714+40];
              ld.v2.f32      {tmp_59712_1_0_0_0, tmp_59712_1_0_0_1}, [off_59714+48];
              ld.f32         tmp_59712_1_0_0_2, [off_59714+56];
              ld.v2.f32      {tmp_59712_1_0_1_0, tmp_59712_1_0_1_1}, [off_59714+64];
              ld.f32         tmp_59712_1_0_1_2, [off_59714+72];
              ld.v2.f32      {tmp_59712_1_0_2_0, tmp_59712_1_0_2_1}, [off_59714+80];
              ld.f32         tmp_59712_1_0_2_2, [off_59714+88];
              ld.f32         tmp_59712_2, [off_59714+96];
              .reg .f32      tmp_59715_0_0, tmp_59715_0_1, tmp_59715_0_2;
              .reg.f32       tmp_59715_1;
              .reg.f32       tmp_59715_2;
              .reg.s32       tmp_59715_3;
              .reg.s32       tmp_59715_4;
              .reg.s32       tmp_59715_5;
              .reg .f32      tmp_59715_6_0_0_0, tmp_59715_6_0_0_1, tmp_59715_6_0_0_2;
              .reg .f32      tmp_59715_6_0_1_0, tmp_59715_6_0_1_1, tmp_59715_6_0_1_2;
              .reg .f32      tmp_59715_6_0_2_0, tmp_59715_6_0_2_1, tmp_59715_6_0_2_2;
              .reg.f32       tmp_59715_7;
              .reg.f32       tmp_59715_8;
              .reg.s32       tmp_59715_9;
              .reg.s32       tmp_59715_10;
              .reg.u64       off_59716;
              mad.wide.u32   off_59716, temp_51997, 112, 0;
              .reg.u64       off_59717;
              add.u64        off_59717, tmp_59710, off_59716;
              ld.v2.f32      {tmp_59715_0_0, tmp_59715_0_1}, [off_59717];
              ld.f32         tmp_59715_0_2, [off_59717+8];
              ld.f32         tmp_59715_1, [off_59717+16];
              ld.f32         tmp_59715_2, [off_59717+20];
              ld.s32         tmp_59715_3, [off_59717+24];
              ld.s32         tmp_59715_4, [off_59717+28];
              ld.s32         tmp_59715_5, [off_59717+32];
              ld.v2.f32      {tmp_59715_6_0_0_0, tmp_59715_6_0_0_1}, [off_59717+48];
              ld.f32         tmp_59715_6_0_0_2, [off_59717+56];
              ld.v2.f32      {tmp_59715_6_0_1_0, tmp_59715_6_0_1_1}, [off_59717+64];
              ld.f32         tmp_59715_6_0_1_2, [off_59717+72];
              ld.v2.f32      {tmp_59715_6_0_2_0, tmp_59715_6_0_2_1}, [off_59717+80];
              ld.f32         tmp_59715_6_0_2_2, [off_59717+88];
              ld.f32         tmp_59715_7, [off_59717+96];
              ld.f32         tmp_59715_8, [off_59717+100];
              ld.s32         tmp_59715_9, [off_59717+104];
              ld.s32         tmp_59715_10, [off_59717+108];
              st.s32         [tmp_59706], temp_51997;
              .reg .f32      temp_52006_0, temp_52006_1, temp_52006_2;
              neg.ftz.f32    temp_52006_0, tmp_59712_1_0_0_0;
              neg.ftz.f32    temp_52006_1, tmp_59712_1_0_0_1;
              neg.ftz.f32    temp_52006_2, tmp_59712_1_0_0_2;
              .reg .f32      temp_52008_0, temp_52008_1, temp_52008_2;
              neg.ftz.f32    temp_52008_0, tmp_59712_1_0_1_0;
              neg.ftz.f32    temp_52008_1, tmp_59712_1_0_1_1;
              neg.ftz.f32    temp_52008_2, tmp_59712_1_0_1_2;
              .reg .f32      temp_52010_0, temp_52010_1, temp_52010_2;
              neg.ftz.f32    temp_52010_0, tmp_59712_1_0_2_0;
              neg.ftz.f32    temp_52010_1, tmp_59712_1_0_2_1;
              neg.ftz.f32    temp_52010_2, tmp_59712_1_0_2_2;
              .reg.u64       tmp_59718;
              .reg.s32       optix_buffer_id_59719;
              mov.b64        {_, optix_buffer_id_59719}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59720;
{
              .reg.s32       abstract_59721;
              mov.b32        abstract_59721, 1;
              .reg.u64       const_59722;
              mov.b64        const_59722, 600;
              .reg.u64       const_59723;
              mov.b64        const_59723, 0;
 call (ptr_from_optix_id_59720), _rt_buffer_get_id_64, (optix_buffer_id_59719, abstract_59721, abstract_59721, const_59722, const_59723, const_59723, const_59723); // resolving optix id
}
              ld.u64         tmp_59718, [ptr_from_optix_id_59720];
              .reg.s32       tmp_59724;
              .reg.u64       off_59725;
              mad.wide.u32   off_59725, tmp_59446, 4, 0;
              .reg.s32       optix_buffer_id_59726;
              mov.b64        {_, optix_buffer_id_59726}, tmp_59718;
              .reg.u64       ptr_from_optix_id_59727;
{
              .reg.s32       abstract_59728;
              mov.b32        abstract_59728, 1;
              .reg.u64       const_59729;
              mov.b64        const_59729, 512;
              .reg.u64       off_59730;
              add.u64        off_59730, const_59729, off_59725;
              .reg.u64       const_59731;
              mov.b64        const_59731, 0;
 call (ptr_from_optix_id_59727), _rt_buffer_get_id_64, (optix_buffer_id_59726, abstract_59728, abstract_59728, off_59730, const_59731, const_59731, const_59731); // resolving optix id
}
              ld.s32         tmp_59724, [ptr_from_optix_id_59727];
              .reg.u64       tmp_59732;
              .reg.s32       optix_buffer_id_59733;
              mov.b64        {_, optix_buffer_id_59733}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59734;
{
              .reg.s32       abstract_59735;
              mov.b32        abstract_59735, 1;
              .reg.u64       const_59736;
              mov.b64        const_59736, 560;
              .reg.u64       const_59737;
              mov.b64        const_59737, 0;
 call (ptr_from_optix_id_59734), _rt_buffer_get_id_64, (optix_buffer_id_59733, abstract_59735, abstract_59735, const_59736, const_59737, const_59737, const_59737); // resolving optix id
}
              ld.u64         tmp_59732, [ptr_from_optix_id_59734];
              .reg.f32       tmp_59738;
              .reg.s32       optix_buffer_id_59739;
              mov.b64        {_, optix_buffer_id_59739}, tmp_59732;
              .reg.u64       ptr_from_optix_id_59740;
{
              .reg.s32       abstract_59741;
              mov.b32        abstract_59741, 1;
              .reg.u64       const_59742;
              mov.b64        const_59742, 512;
              .reg.u64       const_59743;
              mov.b64        const_59743, 0;
 call (ptr_from_optix_id_59740), _rt_buffer_get_id_64, (optix_buffer_id_59739, abstract_59741, abstract_59741, const_59742, const_59743, const_59743, const_59743); // resolving optix id
}
              ld.f32         tmp_59738, [ptr_from_optix_id_59740];
              .reg.s32       temp_52014;
              and.b32        temp_52014, tmp_59715_5, 1;
              .reg.s32       temp_52015;
              set.gt.s32.s32 temp_52015, temp_52014, 0;
              .reg.s32       temp_52016;
              .reg.pred      temp_52015_59746;
              setp.ne.s32    temp_52015_59746, 0, temp_52015;
  @!temp_52015_59746 bra     else_59744;
              mov.b32        temp_52016, 0;
              bra.uni        merge_59745;
else_59744:
              mov.b32        temp_52016, 1;
merge_59745:
              .reg.s32       temp_30181;
              .reg.pred      temp_52015_59749;
              setp.ne.s32    temp_52015_59749, 0, temp_52015;
  @!temp_52015_59749 bra     else_59747;
              mov.b32        temp_30181, tmp_59715_9;
              bra.uni        merge_59748;
else_59747:
              mov.b32        temp_30181, -1;
merge_59748:
              .reg.u64       tmp_59750;
              .reg.s32       optix_buffer_id_59751;
              mov.b64        {_, optix_buffer_id_59751}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59752;
{
              .reg.s32       abstract_59753;
              mov.b32        abstract_59753, 1;
              .reg.u64       const_59754;
              mov.b64        const_59754, 544;
              .reg.u64       const_59755;
              mov.b64        const_59755, 0;
 call (ptr_from_optix_id_59752), _rt_buffer_get_id_64, (optix_buffer_id_59751, abstract_59753, abstract_59753, const_59754, const_59755, const_59755, const_59755); // resolving optix id
}
              ld.u64         tmp_59750, [ptr_from_optix_id_59752];
              .reg.s32       tmp_59756;
              .reg.u64       off_59757;
              mad.wide.u32   off_59757, tmp_59446, 48, 0;
              .reg.s32       optix_buffer_id_59758;
              mov.b64        {_, optix_buffer_id_59758}, tmp_59750;
              .reg.u64       ptr_from_optix_id_59759;
{
              .reg.s32       abstract_59760;
              mov.b32        abstract_59760, 1;
              .reg.u64       const_59761;
              mov.b64        const_59761, 512;
              .reg.u64       off_59762;
              add.u64        off_59762, const_59761, off_59757;
              .reg.u64       const_59763;
              mov.b64        const_59763, 0;
 call (ptr_from_optix_id_59759), _rt_buffer_get_id_64, (optix_buffer_id_59758, abstract_59760, abstract_59760, off_59762, const_59763, const_59763, const_59763); // resolving optix id
}
              ld.s32         tmp_59756, [ptr_from_optix_id_59759];
              .reg.s32       temp_52025;
              .reg.pred      tmp_59756_59764;
              setp.ne.s32    tmp_59756_59764, 0, tmp_59756;
              selp.s32       temp_52025, 2, 0, tmp_59756_59764;
              .reg.s32       temp_52026;
              or.b32         temp_52026, 1, temp_52025;
              .reg.u64       tmp_59765;
              .reg.s32       optix_buffer_id_59766;
              mov.b64        {_, optix_buffer_id_59766}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59767;
{
              .reg.s32       abstract_59768;
              mov.b32        abstract_59768, 1;
              .reg.u64       const_59769;
              mov.b64        const_59769, 544;
              .reg.u64       const_59770;
              mov.b64        const_59770, 0;
 call (ptr_from_optix_id_59767), _rt_buffer_get_id_64, (optix_buffer_id_59766, abstract_59768, abstract_59768, const_59769, const_59770, const_59770, const_59770); // resolving optix id
}
              ld.u64         tmp_59765, [ptr_from_optix_id_59767];
              .reg.s32       tmp_59771;
              .reg.u64       off_59772;
              mad.wide.u32   off_59772, tmp_59446, 48, 4;
              .reg.s32       optix_buffer_id_59773;
              mov.b64        {_, optix_buffer_id_59773}, tmp_59765;
              .reg.u64       ptr_from_optix_id_59774;
{
              .reg.s32       abstract_59775;
              mov.b32        abstract_59775, 1;
              .reg.u64       const_59776;
              mov.b64        const_59776, 512;
              .reg.u64       off_59777;
              add.u64        off_59777, const_59776, off_59772;
              .reg.u64       const_59778;
              mov.b64        const_59778, 0;
 call (ptr_from_optix_id_59774), _rt_buffer_get_id_64, (optix_buffer_id_59773, abstract_59775, abstract_59775, off_59777, const_59778, const_59778, const_59778); // resolving optix id
}
              ld.s32         tmp_59771, [ptr_from_optix_id_59774];
              .reg.s32       temp_52028;
              set.eq.s32.s32 temp_52028, tmp_59771, 1;
              .reg.s32       temp_52029;
              .reg.pred      temp_52028_59779;
              setp.ne.s32    temp_52028_59779, 0, temp_52028;
              selp.s32       temp_52029, 4, 0, temp_52028_59779;
              .reg.s32       temp_52030;
              or.b32         temp_52030, temp_52026, temp_52029;
              .reg.u64       tmp_59780;
              .reg.s32       optix_buffer_id_59781;
              mov.b64        {_, optix_buffer_id_59781}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59782;
{
              .reg.s32       abstract_59783;
              mov.b32        abstract_59783, 1;
              .reg.u64       const_59784;
              mov.b64        const_59784, 544;
              .reg.u64       const_59785;
              mov.b64        const_59785, 0;
 call (ptr_from_optix_id_59782), _rt_buffer_get_id_64, (optix_buffer_id_59781, abstract_59783, abstract_59783, const_59784, const_59785, const_59785, const_59785); // resolving optix id
}
              ld.u64         tmp_59780, [ptr_from_optix_id_59782];
              .reg.s32       tmp_59786;
              .reg.u64       off_59787;
              mad.wide.u32   off_59787, tmp_59446, 48, 8;
              .reg.s32       optix_buffer_id_59788;
              mov.b64        {_, optix_buffer_id_59788}, tmp_59780;
              .reg.u64       ptr_from_optix_id_59789;
{
              .reg.s32       abstract_59790;
              mov.b32        abstract_59790, 1;
              .reg.u64       const_59791;
              mov.b64        const_59791, 512;
              .reg.u64       off_59792;
              add.u64        off_59792, const_59791, off_59787;
              .reg.u64       const_59793;
              mov.b64        const_59793, 0;
 call (ptr_from_optix_id_59789), _rt_buffer_get_id_64, (optix_buffer_id_59788, abstract_59790, abstract_59790, off_59792, const_59793, const_59793, const_59793); // resolving optix id
}
              ld.s32         tmp_59786, [ptr_from_optix_id_59789];
              .reg.s32       temp_52032;
              set.eq.s32.s32 temp_52032, tmp_59786, 1;
              .reg.s32       temp_52033;
              .reg.pred      temp_52032_59794;
              setp.ne.s32    temp_52032_59794, 0, temp_52032;
              selp.s32       temp_52033, 8, 0, temp_52032_59794;
              .reg.s32       temp_52034;
              or.b32         temp_52034, temp_52030, temp_52033;
              .reg.u64       tmp_59795;
              .reg.s32       optix_buffer_id_59796;
              mov.b64        {_, optix_buffer_id_59796}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59797;
{
              .reg.s32       abstract_59798;
              mov.b32        abstract_59798, 1;
              .reg.u64       const_59799;
              mov.b64        const_59799, 544;
              .reg.u64       const_59800;
              mov.b64        const_59800, 0;
 call (ptr_from_optix_id_59797), _rt_buffer_get_id_64, (optix_buffer_id_59796, abstract_59798, abstract_59798, const_59799, const_59800, const_59800, const_59800); // resolving optix id
}
              ld.u64         tmp_59795, [ptr_from_optix_id_59797];
              .reg.s32       tmp_59801;
              .reg.u64       off_59802;
              mad.wide.u32   off_59802, tmp_59446, 48, 12;
              .reg.s32       optix_buffer_id_59803;
              mov.b64        {_, optix_buffer_id_59803}, tmp_59795;
              .reg.u64       ptr_from_optix_id_59804;
{
              .reg.s32       abstract_59805;
              mov.b32        abstract_59805, 1;
              .reg.u64       const_59806;
              mov.b64        const_59806, 512;
              .reg.u64       off_59807;
              add.u64        off_59807, const_59806, off_59802;
              .reg.u64       const_59808;
              mov.b64        const_59808, 0;
 call (ptr_from_optix_id_59804), _rt_buffer_get_id_64, (optix_buffer_id_59803, abstract_59805, abstract_59805, off_59807, const_59808, const_59808, const_59808); // resolving optix id
}
              ld.s32         tmp_59801, [ptr_from_optix_id_59804];
              .reg.s32       temp_52036;
              set.eq.s32.s32 temp_52036, tmp_59801, 1;
              .reg.s32       temp_52037;
              .reg.pred      temp_52036_59809;
              setp.ne.s32    temp_52036_59809, 0, temp_52036;
              selp.s32       temp_52037, 16, 0, temp_52036_59809;
              .reg.s32       temp_52038;
              or.b32         temp_52038, temp_52034, temp_52037;
              .reg.s32       temp_52040;
              set.eq.s32.s32 temp_52040, tmp_59771, 2;
              .reg.s32       temp_52041;
              .reg.pred      temp_52040_59810;
              setp.ne.s32    temp_52040_59810, 0, temp_52040;
              selp.s32       temp_52041, 64, 0, temp_52040_59810;
              .reg.s32       temp_52042;
              or.b32         temp_52042, temp_52038, temp_52041;
              .reg.s32       temp_52044;
              set.eq.s32.s32 temp_52044, tmp_59786, 2;
              .reg.s32       temp_52045;
              .reg.pred      temp_52044_59811;
              setp.ne.s32    temp_52044_59811, 0, temp_52044;
              selp.s32       temp_52045, 128, 0, temp_52044_59811;
              .reg.s32       temp_52046;
              or.b32         temp_52046, temp_52042, temp_52045;
              .reg.s32       temp_52048;
              set.eq.s32.s32 temp_52048, tmp_59801, 2;
              .reg.s32       temp_52049;
              .reg.pred      temp_52048_59812;
              setp.ne.s32    temp_52048_59812, 0, temp_52048;
              selp.s32       temp_52049, 256, 0, temp_52048_59812;
              .reg.s32       temp_52050;
              or.b32         temp_52050, temp_52046, temp_52049;
              .reg.s32       temp_52051;
              and.b32        temp_52051, tmp_59715_10, temp_52050;
              .reg.s32       temp_52052;
              set.gt.s32.s32 temp_52052, temp_52051, 0;
              .reg.s32       filter_52053;
              not.b32        filter_52053, temp_52052;
              .reg.s32       temp_52055;
              set.ne.s32.s32 temp_52055, temp_52016, 0;
              .reg.s32       temp_52056;
              .reg.pred      temp_52055_59815;
              setp.ne.s32    temp_52055_59815, 0, temp_52055;
  @!temp_52055_59815 bra     else_59813;
              .reg.u64       tmp_59816;
              .reg.s32       optix_buffer_id_59817;
              mov.b64        {_, optix_buffer_id_59817}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59818;
{
              .reg.s32       abstract_59819;
              mov.b32        abstract_59819, 1;
              .reg.u64       const_59820;
              mov.b64        const_59820, 544;
              .reg.u64       const_59821;
              mov.b64        const_59821, 0;
 call (ptr_from_optix_id_59818), _rt_buffer_get_id_64, (optix_buffer_id_59817, abstract_59819, abstract_59819, const_59820, const_59821, const_59821, const_59821); // resolving optix id
}
              ld.u64         tmp_59816, [ptr_from_optix_id_59818];
              .reg.s32       tmp_59822;
              .reg.u64       off_59823;
              mad.wide.u32   off_59823, tmp_59446, 48, 16;
              .reg.s32       optix_buffer_id_59824;
              mov.b64        {_, optix_buffer_id_59824}, tmp_59816;
              .reg.u64       ptr_from_optix_id_59825;
{
              .reg.s32       abstract_59826;
              mov.b32        abstract_59826, 1;
              .reg.u64       const_59827;
              mov.b64        const_59827, 512;
              .reg.u64       off_59828;
              add.u64        off_59828, const_59827, off_59823;
              .reg.u64       const_59829;
              mov.b64        const_59829, 0;
 call (ptr_from_optix_id_59825), _rt_buffer_get_id_64, (optix_buffer_id_59824, abstract_59826, abstract_59826, off_59828, const_59829, const_59829, const_59829); // resolving optix id
}
              ld.s32         tmp_59822, [ptr_from_optix_id_59825];
              .reg.s32       temp_52091;
              not.b32        temp_52091, tmp_59822;
              mov.b32        temp_52056, temp_52091;
              bra.uni        merge_59814;
else_59813:
              mov.b32        temp_52056, 0;
merge_59814:
              .reg.s32       temp_52057;
              and.b32        temp_52057, tmp_59715_10, 512;
              .reg.s32       temp_52058;
              set.gt.s32.s32 temp_52058, temp_52057, 0;
              .reg.s32       temp_52059;
              and.b32        temp_52059, temp_52056, temp_52058;
              .reg.s32       state_52060;
              or.b32         state_52060, tmp_59715_10, 2048;
              .reg.s32       temp_52061;
              .reg.pred      temp_52059_59830;
              setp.ne.s32    temp_52059_59830, 0, temp_52059;
              selp.s32       temp_52061, state_52060, tmp_59715_10, temp_52059_59830;
              .reg.u64       tmp_59831;
              .reg.s32       optix_buffer_id_59832;
              mov.b64        {_, optix_buffer_id_59832}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59833;
{
              .reg.s32       abstract_59834;
              mov.b32        abstract_59834, 1;
              .reg.u64       const_59835;
              mov.b64        const_59835, 544;
              .reg.u64       const_59836;
              mov.b64        const_59836, 0;
 call (ptr_from_optix_id_59833), _rt_buffer_get_id_64, (optix_buffer_id_59832, abstract_59834, abstract_59834, const_59835, const_59836, const_59836, const_59836); // resolving optix id
}
              ld.u64         tmp_59831, [ptr_from_optix_id_59833];
              .reg.s32       tmp_59837;
              .reg.u64       off_59838;
              mad.wide.u32   off_59838, tmp_59446, 48, 24;
              .reg.s32       optix_buffer_id_59839;
              mov.b64        {_, optix_buffer_id_59839}, tmp_59831;
              .reg.u64       ptr_from_optix_id_59840;
{
              .reg.s32       abstract_59841;
              mov.b32        abstract_59841, 1;
              .reg.u64       const_59842;
              mov.b64        const_59842, 512;
              .reg.u64       off_59843;
              add.u64        off_59843, const_59842, off_59838;
              .reg.u64       const_59844;
              mov.b64        const_59844, 0;
 call (ptr_from_optix_id_59840), _rt_buffer_get_id_64, (optix_buffer_id_59839, abstract_59841, abstract_59841, off_59843, const_59844, const_59844, const_59844); // resolving optix id
}
              ld.s32         tmp_59837, [ptr_from_optix_id_59840];
              .reg.s32       not_visible_to_direct_light_52064;
              not.b32        not_visible_to_direct_light_52064, tmp_59837;
              .reg.s32       temp_52065;
              and.b32        temp_52065, tmp_59715_10, 16384;
              .reg.s32       receive_shadow_off_52066;
              set.gt.s32.s32 receive_shadow_off_52066, temp_52065, 0;
              .reg.s32       temp_52067;
              set.ge.s32.s32 temp_52067, temp_30181, 0;
              .reg.s32       cast_shadow_off_52068;
              .reg.pred      temp_52067_59847;
              setp.ne.s32    temp_52067_59847, 0, temp_52067;
  @!temp_52067_59847 bra     else_59845;
              .reg.u64       tmp_59848;
              .reg.s32       optix_buffer_id_59849;
              mov.b64        {_, optix_buffer_id_59849}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59850;
{
              .reg.s32       abstract_59851;
              mov.b32        abstract_59851, 1;
              .reg.u64       const_59852;
              mov.b64        const_59852, 552;
              .reg.u64       const_59853;
              mov.b64        const_59853, 0;
 call (ptr_from_optix_id_59850), _rt_buffer_get_id_64, (optix_buffer_id_59849, abstract_59851, abstract_59851, const_59852, const_59853, const_59853, const_59853); // resolving optix id
}
              ld.u64         tmp_59848, [ptr_from_optix_id_59850];
              .reg.s32       tmp_59854;
              .reg.u64       off_59855;
              mad.wide.u32   off_59855, temp_30181, 24, 16;
              .reg.s32       optix_buffer_id_59856;
              mov.b64        {_, optix_buffer_id_59856}, tmp_59848;
              .reg.u64       ptr_from_optix_id_59857;
{
              .reg.s32       abstract_59858;
              mov.b32        abstract_59858, 1;
              .reg.u64       const_59859;
              mov.b64        const_59859, 512;
              .reg.u64       off_59860;
              add.u64        off_59860, const_59859, off_59855;
              .reg.u64       const_59861;
              mov.b64        const_59861, 0;
 call (ptr_from_optix_id_59857), _rt_buffer_get_id_64, (optix_buffer_id_59856, abstract_59858, abstract_59858, off_59860, const_59861, const_59861, const_59861); // resolving optix id
}
              ld.s32         tmp_59854, [ptr_from_optix_id_59857];
              .reg.s32       temp_52088;
              not.b32        temp_52088, tmp_59854;
              mov.b32        cast_shadow_off_52068, temp_52088;
              bra.uni        merge_59846;
else_59845:
              mov.b32        cast_shadow_off_52068, 0;
merge_59846:
              .reg.s32       temp_52070;
              set.eq.s32.s32 temp_52070, temp_52016, 0;
              .reg.s32       temp_52071;
              or.b32         temp_52071, not_visible_to_direct_light_52064, receive_shadow_off_52066;
              .reg.s32       temp_52072;
              or.b32         temp_52072, temp_52071, cast_shadow_off_52068;
              .reg.s32       temp_52073;
              and.b32        temp_52073, temp_52070, temp_52072;
              .reg.s32       state_52074;
              or.b32         state_52074, tmp_59715_10, 8192;
              .reg.s32       temp_52075;
              .reg.pred      temp_52073_59862;
              setp.ne.s32    temp_52073_59862, 0, temp_52073;
              selp.s32       temp_52075, state_52074, tmp_59715_10, temp_52073_59862;
              .reg.s32       temp_52076;
              or.b32         temp_52076, filter_52053, temp_52059;
              .reg.s32       temp_52077;
              or.b32         temp_52077, temp_52076, temp_52073;
              .reg.s32       temp_52078;
              and.b32        temp_52078, tmp_59715_10, 511;
              .reg.s32       temp_52079;
              or.b32         temp_52079, 512, temp_52078;
              .reg.s32       temp_52080;
              and.b32        temp_52080, tmp_59715_10, 1024;
              .reg.s32       temp_52081;
              or.b32         temp_52081, temp_52079, temp_52080;
              .reg.s32       temp_52082;
              and.b32        temp_52082, temp_52061, 6144;
              .reg.s32       temp_52083;
              or.b32         temp_52083, temp_52081, temp_52082;
              .reg.s32       temp_52084;
              and.b32        temp_52084, temp_52075, 122880;
              .reg.s32       temp_52085;
              or.b32         temp_52085, temp_52083, temp_52084;
              .reg.u64       scl_41142;
              .reg.u64       scl_41143;
              .reg.u64       scl_41144;
              .reg .f32      scl_41140_0, scl_41140_1, scl_41140_2;
              .reg.f32       scl_41141;
              .reg.pred      temp_52077_59865;
              setp.ne.s32    temp_52077_59865, 0, temp_52077;
  @!temp_52077_59865 bra     else_59863;
              .reg.u64       tmp_59866;
              ld.param.u64   tmp_59866, [f_22353];
              .reg .f32      tmp_59867_0, tmp_59867_1, tmp_59867_2;
              ld.v2.f32      {tmp_59867_0, tmp_59867_1}, [tmp_59866+48];
              ld.f32         tmp_59867_2, [tmp_59866+56];
              .reg .f32      temp_52096_0, temp_52096_1, temp_52096_2;
              mul.ftz.f32    temp_52096_0, tmp_59867_0, tmp_59712_1_0_0_0;
              mul.ftz.f32    temp_52096_1, tmp_59867_1, tmp_59712_1_0_0_1;
              mul.ftz.f32    temp_52096_2, tmp_59867_2, tmp_59712_1_0_0_2;
              .reg.f32       temp_52113;
              add.ftz.f32    temp_52113, temp_52096_0, temp_52096_1;
              .reg.f32       temp_52119;
              add.ftz.f32    temp_52119, temp_52113, temp_52096_2;
              .reg.s32       temp_52125;
              set.gt.ftz.s32.f32 temp_52125, temp_52119, 0F00000000;
              .reg.f32       side_out_32513;
              .reg.pred      temp_52125_59868;
              setp.ne.s32    temp_52125_59868, 0, temp_52125;
              selp.f32       side_out_32513, 0F3f800000, 0Fbf800000, temp_52125_59868;
              .reg.f32       fhitdist_32515;
              add.ftz.f32    fhitdist_32515, tmp_59715_7, tmp_59704;
              .reg.f32       temp_32518;
              mul.ftz.f32    temp_32518, tmp_59738, side_out_32513;
              .reg .f32      temp_52135_0, temp_52135_1, temp_52135_2;
              mul.ftz.f32    temp_52135_0, tmp_59867_0, temp_32518;
              mul.ftz.f32    temp_52135_1, tmp_59867_1, temp_32518;
              mul.ftz.f32    temp_52135_2, tmp_59867_2, temp_32518;
              .reg.u64       tmp_59869;
              ld.param.u64   tmp_59869, [f_22353];
              .reg .f32      tmp_59870_0, tmp_59870_1, tmp_59870_2;
              ld.v2.f32      {tmp_59870_0, tmp_59870_1}, [tmp_59869+64];
              ld.f32         tmp_59870_2, [tmp_59869+72];
              .reg .f32      temp_52137_0, temp_52137_1, temp_52137_2;
              mul.ftz.f32    temp_52137_0, tmp_59870_0, temp_32518;
              mul.ftz.f32    temp_52137_1, tmp_59870_1, temp_32518;
              mul.ftz.f32    temp_52137_2, tmp_59870_2, temp_32518;
              .reg.u64       tmp_59871;
              ld.param.u64   tmp_59871, [f_22353];
              .reg .f32      tmp_59872_0, tmp_59872_1, tmp_59872_2;
              ld.v2.f32      {tmp_59872_0, tmp_59872_1}, [tmp_59871+80];
              ld.f32         tmp_59872_2, [tmp_59871+88];
              .reg .f32      temp_52141_0, temp_52141_1, temp_52141_2;
              mul.ftz.f32    temp_52141_0, tmp_59872_0, temp_32518;
              mul.ftz.f32    temp_52141_1, tmp_59872_1, temp_32518;
              mul.ftz.f32    temp_52141_2, tmp_59872_2, temp_32518;
              .reg .f32      temp_52148_0, temp_52148_1, temp_52148_2;
              add.ftz.f32    temp_52148_0, tmp_59506_0, temp_52135_0;
              add.ftz.f32    temp_52148_1, tmp_59506_1, temp_52135_1;
              add.ftz.f32    temp_52148_2, tmp_59506_2, temp_52135_2;
              .reg .f32      temp_52151_0, temp_52151_1, temp_52151_2;
              add.ftz.f32    temp_52151_0, tmp_59508_0, temp_52137_0;
              add.ftz.f32    temp_52151_1, tmp_59508_1, temp_52137_1;
              add.ftz.f32    temp_52151_2, tmp_59508_2, temp_52137_2;
              .reg .f32      temp_52154_0, temp_52154_1, temp_52154_2;
              add.ftz.f32    temp_52154_0, tmp_59510_0, temp_52141_0;
              add.ftz.f32    temp_52154_1, tmp_59510_1, temp_52141_1;
              add.ftz.f32    temp_52154_2, tmp_59510_2, temp_52141_2;
              .reg.s32       temp_32524;
              set.lt.ftz.s32.f32 temp_32524, tmp_59712_2, 0F7f800000;
              .reg.f32       new_maxt_32525;
              .reg.pred      temp_32524_59875;
              setp.ne.s32    temp_32524_59875, 0, temp_32524;
  @!temp_32524_59875 bra     else_59873;
              .reg .f32      temp_52166_0, temp_52166_1, temp_52166_2;
              mul.ftz.f32    temp_52166_0, tmp_59712_1_0_0_0, tmp_59712_2;
              mul.ftz.f32    temp_52166_1, tmp_59712_1_0_0_1, tmp_59712_2;
              mul.ftz.f32    temp_52166_2, tmp_59712_1_0_0_2, tmp_59712_2;
              .reg .f32      temp_52179_0, temp_52179_1, temp_52179_2;
              add.ftz.f32    temp_52179_0, tmp_59712_0_0_0_0, temp_52166_0;
              add.ftz.f32    temp_52179_1, tmp_59712_0_0_0_1, temp_52166_1;
              add.ftz.f32    temp_52179_2, tmp_59712_0_0_0_2, temp_52166_2;
              .reg .f32      temp_52190_0, temp_52190_1, temp_52190_2;
              sub.ftz.f32    temp_52190_0, temp_52179_0, temp_52148_0;
              sub.ftz.f32    temp_52190_1, temp_52179_1, temp_52148_1;
              sub.ftz.f32    temp_52190_2, temp_52179_2, temp_52148_2;
              .reg .f32      temp_52201_0, temp_52201_1, temp_52201_2;
              mul.ftz.f32    temp_52201_0, temp_52190_0, temp_52190_0;
              mul.ftz.f32    temp_52201_1, temp_52190_1, temp_52190_1;
              mul.ftz.f32    temp_52201_2, temp_52190_2, temp_52190_2;
              .reg.f32       temp_52218;
              add.ftz.f32    temp_52218, temp_52201_0, temp_52201_1;
              .reg.f32       temp_52224;
              add.ftz.f32    temp_52224, temp_52218, temp_52201_2;
              .reg.f32       temp_52229;
              sqrt.approx.f32 temp_52229, temp_52224;
              mov.b32        new_maxt_32525, temp_52229;
              bra.uni        merge_59874;
else_59873:
              mov.b32        new_maxt_32525, 0F7f800000;
merge_59874:
              .reg.s32       tmp_59876;
              ld.s32         tmp_59876, [tmp_59706];
              .reg.s32       temp_52475;
              set.lt.s32.s32 temp_52475, tmp_59876, 16;
              .reg.u64       scl_52476;
              .reg.u64       scl_52477;
              .reg.u64       scl_52478;
              .reg.pred      temp_52475_59879;
              setp.ne.s32    temp_52475_59879, 0, temp_52475;
  @!temp_52475_59879 bra     else_59877;
              .reg.s32       temp_52480;
              add.cc.s32     temp_52480, tmp_59876, 1;
              st.s32         [tmp_59706], temp_52480;
              .reg.u64       off_59880;
              mad.wide.u32   off_59880, tmp_59876, 112, 0;
              .reg.u64       off_59881;
              add.u64        off_59881, tmp_59708, off_59880;
              st.v2.f32      [off_59881], {temp_52148_0, temp_52148_1};
              st.f32         [off_59881+8], temp_52148_2;
              st.v2.f32      [off_59881+16], {temp_52151_0, temp_52151_1};
              st.f32         [off_59881+24], temp_52151_2;
              st.v2.f32      [off_59881+32], {temp_52154_0, temp_52154_1};
              st.f32         [off_59881+40], temp_52154_2;
              st.v2.f32      [off_59881+48], {tmp_59712_1_0_0_0, tmp_59712_1_0_0_1};
              st.f32         [off_59881+56], tmp_59712_1_0_0_2;
              st.v2.f32      [off_59881+64], {tmp_59712_1_0_1_0, tmp_59712_1_0_1_1};
              st.f32         [off_59881+72], tmp_59712_1_0_1_2;
              st.v2.f32      [off_59881+80], {tmp_59712_1_0_2_0, tmp_59712_1_0_2_1};
              st.f32         [off_59881+88], tmp_59712_1_0_2_2;
              st.f32         [off_59881+96], new_maxt_32525;
              .reg.u64       off_59882;
              mad.wide.u32   off_59882, tmp_59876, 112, 0;
              .reg.u64       off_59883;
              add.u64        off_59883, tmp_59710, off_59882;
              st.v2.f32      [off_59883], {tmp_59715_0_0, tmp_59715_0_1};
              st.f32         [off_59883+8], tmp_59715_0_2;
              st.f32         [off_59883+16], tmp_59715_1;
              st.f32         [off_59883+20], tmp_59715_2;
              st.s32         [off_59883+24], tmp_59715_3;
              st.s32         [off_59883+28], tmp_59715_4;
              st.s32         [off_59883+32], tmp_59715_5;
              st.v2.f32      [off_59883+48], {tmp_59715_6_0_0_0, tmp_59715_6_0_0_1};
              st.f32         [off_59883+56], tmp_59715_6_0_0_2;
              st.v2.f32      [off_59883+64], {tmp_59715_6_0_1_0, tmp_59715_6_0_1_1};
              st.f32         [off_59883+72], tmp_59715_6_0_1_2;
              st.v2.f32      [off_59883+80], {tmp_59715_6_0_2_0, tmp_59715_6_0_2_1};
              st.f32         [off_59883+88], tmp_59715_6_0_2_2;
              st.f32         [off_59883+96], fhitdist_32515;
              st.f32         [off_59883+100], tmp_59715_8;
              st.s32         [off_59883+104], tmp_59715_9;
              st.s32         [off_59883+108], temp_52085;
              mov.u64        scl_52476, tmp_59706;
              mov.u64        scl_52477, tmp_59708;
              mov.u64        scl_52478, tmp_59710;
              bra.uni        merge_59878;
else_59877:
              mov.u64        scl_52476, tmp_59706;
              mov.u64        scl_52477, tmp_59708;
              mov.u64        scl_52478, tmp_59710;
merge_59878:
              mov.u64        scl_41142, scl_52476;
              mov.u64        scl_41143, scl_52477;
              mov.u64        scl_41144, scl_52478;
              mov.b32        scl_41140_0, 0F00000000;
              mov.b32        scl_41140_1, 0F00000000;
              mov.b32        scl_41140_2, 0F00000000;
              mov.b32        scl_41141, 0F00000000;
              bra.uni        merge_59864;
else_59863:
              .reg.u64       tmp_59884;
              ld.param.u64   tmp_59884, [cpRot_22354];
              .reg .f32      tmp_59885_0, tmp_59885_1;
              ld.v2.f32      {tmp_59885_0, tmp_59885_1}, [tmp_59884];
              .reg.f32       temp_30188;
              and.b32        temp_30188, tmp_59885_0, -2147483648;
              or.b32         temp_30188, temp_30188, 0F3f000000;
              add.ftz.f32    temp_30188, tmp_59885_0, temp_30188;
              cvt.rzi.f32.f32 temp_30188, temp_30188;
              .reg.s32       temp_30189;
              cvt.rzi.ftz.s32.f32 temp_30189, temp_30188;
              .reg.u64       tmp_59886;
              ld.param.u64   tmp_59886, [cpRot_22354];
              .reg .f32      tmp_59887_0, tmp_59887_1;
              ld.v2.f32      {tmp_59887_0, tmp_59887_1}, [tmp_59886];
              .reg.f32       temp_30191;
              and.b32        temp_30191, tmp_59887_1, -2147483648;
              or.b32         temp_30191, temp_30191, 0F3f000000;
              add.ftz.f32    temp_30191, tmp_59887_1, temp_30191;
              cvt.rzi.f32.f32 temp_30191, temp_30191;
              .reg.s32       temp_30192;
              cvt.rzi.ftz.s32.f32 temp_30192, temp_30191;
              .reg.s32       temp_52484;
              abs.s32        temp_52484, temp_30189;
              .reg.s32       mod_idx_52485;
              rem.s32        mod_idx_52485, temp_52484, 256;
              .reg.s32       temp_52486;
              set.ge.s32.s32 temp_52486, temp_30189, 0;
              .reg.s32       temp_52487;
              set.ne.s32.s32 temp_52487, mod_idx_52485, 0;
              .reg.s32       temp_52488;
              sub.cc.s32     temp_52488, 256, mod_idx_52485;
              .reg.s32       temp_52489;
              .reg.pred      temp_52487_59888;
              setp.ne.s32    temp_52487_59888, 0, temp_52487;
              selp.s32       temp_52489, temp_52488, 0, temp_52487_59888;
              .reg.s32       temp_52490;
              .reg.pred      temp_52486_59889;
              setp.ne.s32    temp_52486_59889, 0, temp_52486;
              selp.s32       temp_52490, mod_idx_52485, temp_52489, temp_52486_59889;
              .reg.u64       tmp_59890;
              .reg.s32       optix_buffer_id_59891;
              mov.b64        {_, optix_buffer_id_59891}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59892;
{
              .reg.s32       abstract_59893;
              mov.b32        abstract_59893, 1;
              .reg.u64       const_59894;
              mov.b64        const_59894, 520;
              .reg.u64       const_59895;
              mov.b64        const_59895, 0;
 call (ptr_from_optix_id_59892), _rt_buffer_get_id_64, (optix_buffer_id_59891, abstract_59893, abstract_59893, const_59894, const_59895, const_59895, const_59895); // resolving optix id
}
              ld.u64         tmp_59890, [ptr_from_optix_id_59892];
              .reg.s32       tmp_59896;
              .reg.u64       off_59897;
              mad.wide.u32   off_59897, temp_52490, 4, 0;
              .reg.s32       optix_buffer_id_59898;
              mov.b64        {_, optix_buffer_id_59898}, tmp_59890;
              .reg.u64       ptr_from_optix_id_59899;
{
              .reg.s32       abstract_59900;
              mov.b32        abstract_59900, 1;
              .reg.u64       const_59901;
              mov.b64        const_59901, 512;
              .reg.u64       off_59902;
              add.u64        off_59902, const_59901, off_59897;
              .reg.u64       const_59903;
              mov.b64        const_59903, 0;
 call (ptr_from_optix_id_59899), _rt_buffer_get_id_64, (optix_buffer_id_59898, abstract_59900, abstract_59900, off_59902, const_59903, const_59903, const_59903); // resolving optix id
}
              ld.s32         tmp_59896, [ptr_from_optix_id_59899];
              .reg.s32       temp_52492;
              abs.s32        temp_52492, temp_30192;
              .reg.s32       mod_idx_52493;
              rem.s32        mod_idx_52493, temp_52492, 243;
              .reg.s32       temp_52494;
              set.ge.s32.s32 temp_52494, temp_30192, 0;
              .reg.s32       temp_52495;
              set.ne.s32.s32 temp_52495, mod_idx_52493, 0;
              .reg.s32       temp_52496;
              sub.cc.s32     temp_52496, 243, mod_idx_52493;
              .reg.s32       temp_52497;
              .reg.pred      temp_52495_59904;
              setp.ne.s32    temp_52495_59904, 0, temp_52495;
              selp.s32       temp_52497, temp_52496, 0, temp_52495_59904;
              .reg.s32       temp_52498;
              .reg.pred      temp_52494_59905;
              setp.ne.s32    temp_52494_59905, 0, temp_52494;
              selp.s32       temp_52498, mod_idx_52493, temp_52497, temp_52494_59905;
              .reg.u64       tmp_59906;
              .reg.s32       optix_buffer_id_59907;
              mov.b64        {_, optix_buffer_id_59907}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59908;
{
              .reg.s32       abstract_59909;
              mov.b32        abstract_59909, 1;
              .reg.u64       const_59910;
              mov.b64        const_59910, 528;
              .reg.u64       const_59911;
              mov.b64        const_59911, 0;
 call (ptr_from_optix_id_59908), _rt_buffer_get_id_64, (optix_buffer_id_59907, abstract_59909, abstract_59909, const_59910, const_59911, const_59911, const_59911); // resolving optix id
}
              ld.u64         tmp_59906, [ptr_from_optix_id_59908];
              .reg.s32       tmp_59912;
              .reg.u64       off_59913;
              mad.wide.u32   off_59913, temp_52498, 4, 0;
              .reg.s32       optix_buffer_id_59914;
              mov.b64        {_, optix_buffer_id_59914}, tmp_59906;
              .reg.u64       ptr_from_optix_id_59915;
{
              .reg.s32       abstract_59916;
              mov.b32        abstract_59916, 1;
              .reg.u64       const_59917;
              mov.b64        const_59917, 512;
              .reg.u64       off_59918;
              add.u64        off_59918, const_59917, off_59913;
              .reg.u64       const_59919;
              mov.b64        const_59919, 0;
 call (ptr_from_optix_id_59915), _rt_buffer_get_id_64, (optix_buffer_id_59914, abstract_59916, abstract_59916, off_59918, const_59919, const_59919, const_59919); // resolving optix id
}
              ld.s32         tmp_59912, [ptr_from_optix_id_59915];
              .reg.s32       temp_30195;
              add.cc.s32     temp_30195, tmp_59896, tmp_59912;
              .reg.s32       index_30196;
              rem.s32        index_30196, temp_30195, 62208;
              .reg.u64       tmp_59920;
              ld.param.u64   tmp_59920, [seed_22352];
              .reg.s32       tmp_59921;
              ld.s32         tmp_59921, [tmp_59920];
              .reg.s32       temp_30197;
              mul.lo.s32     temp_30197, tmp_59921, 62208;
              .reg.s32       temp_30198;
              add.cc.s32     temp_30198, index_30196, temp_30197;
              .reg.u64       tmp_59922;
              ld.param.u64   tmp_59922, [f_22353];
              .reg .f32      tmp_59923_0, tmp_59923_1, tmp_59923_2;
              ld.v2.f32      {tmp_59923_0, tmp_59923_1}, [tmp_59922+144];
              ld.f32         tmp_59923_2, [tmp_59922+152];
              .reg.u64       tmp_59924;
              ld.param.u64   tmp_59924, [f_22353];
              .reg .f32      tmp_59925_0, tmp_59925_1, tmp_59925_2;
              ld.v2.f32      {tmp_59925_0, tmp_59925_1}, [tmp_59924+160];
              ld.f32         tmp_59925_2, [tmp_59924+168];
              .reg.u64       tmp_59926;
              ld.param.u64   tmp_59926, [f_22353];
              .reg .f32      tmp_59927_0, tmp_59927_1, tmp_59927_2;
              ld.v2.f32      {tmp_59927_0, tmp_59927_1}, [tmp_59926+176];
              ld.f32         tmp_59927_2, [tmp_59926+184];
              .reg.u64       tmp_59928;
              ld.param.u64   tmp_59928, [f_22353];
              .reg .f32      tmp_59929_0, tmp_59929_1, tmp_59929_2;
              ld.v2.f32      {tmp_59929_0, tmp_59929_1}, [tmp_59928+192];
              ld.f32         tmp_59929_2, [tmp_59928+200];
              .reg.u64       tmp_59930;
              ld.param.u64   tmp_59930, [f_22353];
              .reg .f32      tmp_59931_0, tmp_59931_1, tmp_59931_2;
              ld.v2.f32      {tmp_59931_0, tmp_59931_1}, [tmp_59930+208];
              ld.f32         tmp_59931_2, [tmp_59930+216];
              .reg.u64       tmp_59932;
              ld.param.u64   tmp_59932, [f_22353];
              .reg .f32      tmp_59933_0, tmp_59933_1, tmp_59933_2;
              ld.v2.f32      {tmp_59933_0, tmp_59933_1}, [tmp_59932+224];
              ld.f32         tmp_59933_2, [tmp_59932+232];
              .reg.u64       tmp_59934;
              ld.param.u64   tmp_59934, [f_22353];
              .reg .f32      tmp_59935_0, tmp_59935_1, tmp_59935_2;
              ld.v2.f32      {tmp_59935_0, tmp_59935_1}, [tmp_59934+112];
              ld.f32         tmp_59935_2, [tmp_59934+120];
              .reg.u64       tmp_59936;
              ld.param.u64   tmp_59936, [f_22353];
              .reg .f32      tmp_59937_0, tmp_59937_1, tmp_59937_2;
              ld.v2.f32      {tmp_59937_0, tmp_59937_1}, [tmp_59936+128];
              ld.f32         tmp_59937_2, [tmp_59936+136];
              .reg .f32      temp_52561_0, temp_52561_1, temp_52561_2;
              mul.ftz.f32    temp_52561_0, tmp_59929_1, tmp_59490_2;
              mul.ftz.f32    temp_52561_1, tmp_59490_1, tmp_59923_2;
              mul.ftz.f32    temp_52561_2, tmp_59923_1, tmp_59929_2;
              .reg .f32      temp_52562_0, temp_52562_1, temp_52562_2;
              mul.ftz.f32    temp_52562_0, tmp_59931_1, tmp_59490_2;
              mul.ftz.f32    temp_52562_1, tmp_59935_1, tmp_59923_2;
              mul.ftz.f32    temp_52562_2, tmp_59925_1, tmp_59929_2;
              .reg .f32      temp_52563_0, temp_52563_1, temp_52563_2;
              mul.ftz.f32    temp_52563_0, tmp_59929_1, tmp_59935_2;
              mul.ftz.f32    temp_52563_1, tmp_59490_1, tmp_59925_2;
              mul.ftz.f32    temp_52563_2, tmp_59923_1, tmp_59931_2;
              .reg .f32      temp_52564_0, temp_52564_1, temp_52564_2;
              add.ftz.f32    temp_52564_0, temp_52562_0, temp_52563_0;
              add.ftz.f32    temp_52564_1, temp_52562_1, temp_52563_1;
              add.ftz.f32    temp_52564_2, temp_52562_2, temp_52563_2;
              .reg .f32      temp_52565_0, temp_52565_1, temp_52565_2;
              mul.ftz.f32    temp_52565_0, tmp_59933_1, tmp_59490_2;
              mul.ftz.f32    temp_52565_1, tmp_59937_1, tmp_59923_2;
              mul.ftz.f32    temp_52565_2, tmp_59927_1, tmp_59929_2;
              .reg .f32      temp_52566_0, temp_52566_1, temp_52566_2;
              mul.ftz.f32    temp_52566_0, tmp_59929_1, tmp_59937_2;
              mul.ftz.f32    temp_52566_1, tmp_59490_1, tmp_59927_2;
              mul.ftz.f32    temp_52566_2, tmp_59923_1, tmp_59933_2;
              .reg .f32      temp_52567_0, temp_52567_1, temp_52567_2;
              add.ftz.f32    temp_52567_0, temp_52565_0, temp_52566_0;
              add.ftz.f32    temp_52567_1, temp_52565_1, temp_52566_1;
              add.ftz.f32    temp_52567_2, temp_52565_2, temp_52566_2;
              .reg .f32      temp_52574_0, temp_52574_1, temp_52574_2;
              mul.ftz.f32    temp_52574_0, tmp_59490_1, tmp_59929_2;
              mul.ftz.f32    temp_52574_1, tmp_59923_1, tmp_59490_2;
              mul.ftz.f32    temp_52574_2, tmp_59929_1, tmp_59923_2;
              .reg .f32      temp_52575_0, temp_52575_1, temp_52575_2;
              mul.ftz.f32    temp_52575_0, tmp_59935_1, tmp_59929_2;
              mul.ftz.f32    temp_52575_1, tmp_59925_1, tmp_59490_2;
              mul.ftz.f32    temp_52575_2, tmp_59931_1, tmp_59923_2;
              .reg .f32      temp_52576_0, temp_52576_1, temp_52576_2;
              mul.ftz.f32    temp_52576_0, tmp_59490_1, tmp_59931_2;
              mul.ftz.f32    temp_52576_1, tmp_59923_1, tmp_59935_2;
              mul.ftz.f32    temp_52576_2, tmp_59929_1, tmp_59925_2;
              .reg .f32      temp_52577_0, temp_52577_1, temp_52577_2;
              add.ftz.f32    temp_52577_0, temp_52575_0, temp_52576_0;
              add.ftz.f32    temp_52577_1, temp_52575_1, temp_52576_1;
              add.ftz.f32    temp_52577_2, temp_52575_2, temp_52576_2;
              .reg .f32      temp_52578_0, temp_52578_1, temp_52578_2;
              mul.ftz.f32    temp_52578_0, tmp_59937_1, tmp_59929_2;
              mul.ftz.f32    temp_52578_1, tmp_59927_1, tmp_59490_2;
              mul.ftz.f32    temp_52578_2, tmp_59933_1, tmp_59923_2;
              .reg .f32      temp_52579_0, temp_52579_1, temp_52579_2;
              mul.ftz.f32    temp_52579_0, tmp_59490_1, tmp_59933_2;
              mul.ftz.f32    temp_52579_1, tmp_59923_1, tmp_59937_2;
              mul.ftz.f32    temp_52579_2, tmp_59929_1, tmp_59927_2;
              .reg .f32      temp_52580_0, temp_52580_1, temp_52580_2;
              add.ftz.f32    temp_52580_0, temp_52578_0, temp_52579_0;
              add.ftz.f32    temp_52580_1, temp_52578_1, temp_52579_1;
              add.ftz.f32    temp_52580_2, temp_52578_2, temp_52579_2;
              .reg .f32      temp_52581_0, temp_52581_1, temp_52581_2;
              sub.ftz.f32    temp_52581_0, temp_52561_0, temp_52574_0;
              sub.ftz.f32    temp_52581_1, temp_52561_1, temp_52574_1;
              sub.ftz.f32    temp_52581_2, temp_52561_2, temp_52574_2;
              .reg .f32      temp_52582_0, temp_52582_1, temp_52582_2;
              sub.ftz.f32    temp_52582_0, temp_52564_0, temp_52577_0;
              sub.ftz.f32    temp_52582_1, temp_52564_1, temp_52577_1;
              sub.ftz.f32    temp_52582_2, temp_52564_2, temp_52577_2;
              .reg .f32      temp_52583_0, temp_52583_1, temp_52583_2;
              sub.ftz.f32    temp_52583_0, temp_52567_0, temp_52580_0;
              sub.ftz.f32    temp_52583_1, temp_52567_1, temp_52580_1;
              sub.ftz.f32    temp_52583_2, temp_52567_2, temp_52580_2;
              .reg .f32      temp_52587_0, temp_52587_1, temp_52587_2;
              mul.ftz.f32    temp_52587_0, tmp_59490_0, tmp_59929_2;
              mul.ftz.f32    temp_52587_1, tmp_59923_0, tmp_59490_2;
              mul.ftz.f32    temp_52587_2, tmp_59929_0, tmp_59923_2;
              .reg .f32      temp_52588_0, temp_52588_1, temp_52588_2;
              mul.ftz.f32    temp_52588_0, tmp_59935_0, tmp_59929_2;
              mul.ftz.f32    temp_52588_1, tmp_59925_0, tmp_59490_2;
              mul.ftz.f32    temp_52588_2, tmp_59931_0, tmp_59923_2;
              .reg .f32      temp_52589_0, temp_52589_1, temp_52589_2;
              mul.ftz.f32    temp_52589_0, tmp_59490_0, tmp_59931_2;
              mul.ftz.f32    temp_52589_1, tmp_59923_0, tmp_59935_2;
              mul.ftz.f32    temp_52589_2, tmp_59929_0, tmp_59925_2;
              .reg .f32      temp_52590_0, temp_52590_1, temp_52590_2;
              add.ftz.f32    temp_52590_0, temp_52588_0, temp_52589_0;
              add.ftz.f32    temp_52590_1, temp_52588_1, temp_52589_1;
              add.ftz.f32    temp_52590_2, temp_52588_2, temp_52589_2;
              .reg .f32      temp_52591_0, temp_52591_1, temp_52591_2;
              mul.ftz.f32    temp_52591_0, tmp_59937_0, tmp_59929_2;
              mul.ftz.f32    temp_52591_1, tmp_59927_0, tmp_59490_2;
              mul.ftz.f32    temp_52591_2, tmp_59933_0, tmp_59923_2;
              .reg .f32      temp_52592_0, temp_52592_1, temp_52592_2;
              mul.ftz.f32    temp_52592_0, tmp_59490_0, tmp_59933_2;
              mul.ftz.f32    temp_52592_1, tmp_59923_0, tmp_59937_2;
              mul.ftz.f32    temp_52592_2, tmp_59929_0, tmp_59927_2;
              .reg .f32      temp_52593_0, temp_52593_1, temp_52593_2;
              add.ftz.f32    temp_52593_0, temp_52591_0, temp_52592_0;
              add.ftz.f32    temp_52593_1, temp_52591_1, temp_52592_1;
              add.ftz.f32    temp_52593_2, temp_52591_2, temp_52592_2;
              .reg .f32      temp_52597_0, temp_52597_1, temp_52597_2;
              mul.ftz.f32    temp_52597_0, tmp_59929_0, tmp_59490_2;
              mul.ftz.f32    temp_52597_1, tmp_59490_0, tmp_59923_2;
              mul.ftz.f32    temp_52597_2, tmp_59923_0, tmp_59929_2;
              .reg .f32      temp_52598_0, temp_52598_1, temp_52598_2;
              mul.ftz.f32    temp_52598_0, tmp_59931_0, tmp_59490_2;
              mul.ftz.f32    temp_52598_1, tmp_59935_0, tmp_59923_2;
              mul.ftz.f32    temp_52598_2, tmp_59925_0, tmp_59929_2;
              .reg .f32      temp_52599_0, temp_52599_1, temp_52599_2;
              mul.ftz.f32    temp_52599_0, tmp_59929_0, tmp_59935_2;
              mul.ftz.f32    temp_52599_1, tmp_59490_0, tmp_59925_2;
              mul.ftz.f32    temp_52599_2, tmp_59923_0, tmp_59931_2;
              .reg .f32      temp_52600_0, temp_52600_1, temp_52600_2;
              add.ftz.f32    temp_52600_0, temp_52598_0, temp_52599_0;
              add.ftz.f32    temp_52600_1, temp_52598_1, temp_52599_1;
              add.ftz.f32    temp_52600_2, temp_52598_2, temp_52599_2;
              .reg .f32      temp_52601_0, temp_52601_1, temp_52601_2;
              mul.ftz.f32    temp_52601_0, tmp_59933_0, tmp_59490_2;
              mul.ftz.f32    temp_52601_1, tmp_59937_0, tmp_59923_2;
              mul.ftz.f32    temp_52601_2, tmp_59927_0, tmp_59929_2;
              .reg .f32      temp_52602_0, temp_52602_1, temp_52602_2;
              mul.ftz.f32    temp_52602_0, tmp_59929_0, tmp_59937_2;
              mul.ftz.f32    temp_52602_1, tmp_59490_0, tmp_59927_2;
              mul.ftz.f32    temp_52602_2, tmp_59923_0, tmp_59933_2;
              .reg .f32      temp_52603_0, temp_52603_1, temp_52603_2;
              add.ftz.f32    temp_52603_0, temp_52601_0, temp_52602_0;
              add.ftz.f32    temp_52603_1, temp_52601_1, temp_52602_1;
              add.ftz.f32    temp_52603_2, temp_52601_2, temp_52602_2;
              .reg .f32      temp_52604_0, temp_52604_1, temp_52604_2;
              sub.ftz.f32    temp_52604_0, temp_52587_0, temp_52597_0;
              sub.ftz.f32    temp_52604_1, temp_52587_1, temp_52597_1;
              sub.ftz.f32    temp_52604_2, temp_52587_2, temp_52597_2;
              .reg .f32      temp_52605_0, temp_52605_1, temp_52605_2;
              sub.ftz.f32    temp_52605_0, temp_52590_0, temp_52600_0;
              sub.ftz.f32    temp_52605_1, temp_52590_1, temp_52600_1;
              sub.ftz.f32    temp_52605_2, temp_52590_2, temp_52600_2;
              .reg .f32      temp_52606_0, temp_52606_1, temp_52606_2;
              sub.ftz.f32    temp_52606_0, temp_52593_0, temp_52603_0;
              sub.ftz.f32    temp_52606_1, temp_52593_1, temp_52603_1;
              sub.ftz.f32    temp_52606_2, temp_52593_2, temp_52603_2;
              .reg .f32      temp_52607_0, temp_52607_1, temp_52607_2;
              mul.ftz.f32    temp_52607_0, tmp_59929_0, tmp_59490_1;
              mul.ftz.f32    temp_52607_1, tmp_59490_0, tmp_59923_1;
              mul.ftz.f32    temp_52607_2, tmp_59923_0, tmp_59929_1;
              .reg .f32      temp_52608_0, temp_52608_1, temp_52608_2;
              mul.ftz.f32    temp_52608_0, tmp_59931_0, tmp_59490_1;
              mul.ftz.f32    temp_52608_1, tmp_59935_0, tmp_59923_1;
              mul.ftz.f32    temp_52608_2, tmp_59925_0, tmp_59929_1;
              .reg .f32      temp_52609_0, temp_52609_1, temp_52609_2;
              mul.ftz.f32    temp_52609_0, tmp_59929_0, tmp_59935_1;
              mul.ftz.f32    temp_52609_1, tmp_59490_0, tmp_59925_1;
              mul.ftz.f32    temp_52609_2, tmp_59923_0, tmp_59931_1;
              .reg .f32      temp_52610_0, temp_52610_1, temp_52610_2;
              add.ftz.f32    temp_52610_0, temp_52608_0, temp_52609_0;
              add.ftz.f32    temp_52610_1, temp_52608_1, temp_52609_1;
              add.ftz.f32    temp_52610_2, temp_52608_2, temp_52609_2;
              .reg .f32      temp_52611_0, temp_52611_1, temp_52611_2;
              mul.ftz.f32    temp_52611_0, tmp_59933_0, tmp_59490_1;
              mul.ftz.f32    temp_52611_1, tmp_59937_0, tmp_59923_1;
              mul.ftz.f32    temp_52611_2, tmp_59927_0, tmp_59929_1;
              .reg .f32      temp_52612_0, temp_52612_1, temp_52612_2;
              mul.ftz.f32    temp_52612_0, tmp_59929_0, tmp_59937_1;
              mul.ftz.f32    temp_52612_1, tmp_59490_0, tmp_59927_1;
              mul.ftz.f32    temp_52612_2, tmp_59923_0, tmp_59933_1;
              .reg .f32      temp_52613_0, temp_52613_1, temp_52613_2;
              add.ftz.f32    temp_52613_0, temp_52611_0, temp_52612_0;
              add.ftz.f32    temp_52613_1, temp_52611_1, temp_52612_1;
              add.ftz.f32    temp_52613_2, temp_52611_2, temp_52612_2;
              .reg .f32      temp_52614_0, temp_52614_1, temp_52614_2;
              mul.ftz.f32    temp_52614_0, tmp_59490_0, tmp_59929_1;
              mul.ftz.f32    temp_52614_1, tmp_59923_0, tmp_59490_1;
              mul.ftz.f32    temp_52614_2, tmp_59929_0, tmp_59923_1;
              .reg .f32      temp_52615_0, temp_52615_1, temp_52615_2;
              mul.ftz.f32    temp_52615_0, tmp_59935_0, tmp_59929_1;
              mul.ftz.f32    temp_52615_1, tmp_59925_0, tmp_59490_1;
              mul.ftz.f32    temp_52615_2, tmp_59931_0, tmp_59923_1;
              .reg .f32      temp_52616_0, temp_52616_1, temp_52616_2;
              mul.ftz.f32    temp_52616_0, tmp_59490_0, tmp_59931_1;
              mul.ftz.f32    temp_52616_1, tmp_59923_0, tmp_59935_1;
              mul.ftz.f32    temp_52616_2, tmp_59929_0, tmp_59925_1;
              .reg .f32      temp_52617_0, temp_52617_1, temp_52617_2;
              add.ftz.f32    temp_52617_0, temp_52615_0, temp_52616_0;
              add.ftz.f32    temp_52617_1, temp_52615_1, temp_52616_1;
              add.ftz.f32    temp_52617_2, temp_52615_2, temp_52616_2;
              .reg .f32      temp_52618_0, temp_52618_1, temp_52618_2;
              mul.ftz.f32    temp_52618_0, tmp_59937_0, tmp_59929_1;
              mul.ftz.f32    temp_52618_1, tmp_59927_0, tmp_59490_1;
              mul.ftz.f32    temp_52618_2, tmp_59933_0, tmp_59923_1;
              .reg .f32      temp_52619_0, temp_52619_1, temp_52619_2;
              mul.ftz.f32    temp_52619_0, tmp_59490_0, tmp_59933_1;
              mul.ftz.f32    temp_52619_1, tmp_59923_0, tmp_59937_1;
              mul.ftz.f32    temp_52619_2, tmp_59929_0, tmp_59927_1;
              .reg .f32      temp_52620_0, temp_52620_1, temp_52620_2;
              add.ftz.f32    temp_52620_0, temp_52618_0, temp_52619_0;
              add.ftz.f32    temp_52620_1, temp_52618_1, temp_52619_1;
              add.ftz.f32    temp_52620_2, temp_52618_2, temp_52619_2;
              .reg .f32      temp_52621_0, temp_52621_1, temp_52621_2;
              sub.ftz.f32    temp_52621_0, temp_52607_0, temp_52614_0;
              sub.ftz.f32    temp_52621_1, temp_52607_1, temp_52614_1;
              sub.ftz.f32    temp_52621_2, temp_52607_2, temp_52614_2;
              .reg .f32      temp_52622_0, temp_52622_1, temp_52622_2;
              sub.ftz.f32    temp_52622_0, temp_52610_0, temp_52617_0;
              sub.ftz.f32    temp_52622_1, temp_52610_1, temp_52617_1;
              sub.ftz.f32    temp_52622_2, temp_52610_2, temp_52617_2;
              .reg .f32      temp_52623_0, temp_52623_1, temp_52623_2;
              sub.ftz.f32    temp_52623_0, temp_52613_0, temp_52620_0;
              sub.ftz.f32    temp_52623_1, temp_52613_1, temp_52620_1;
              sub.ftz.f32    temp_52623_2, temp_52613_2, temp_52620_2;
              .reg .f32      temp_52627_0, temp_52627_1, temp_52627_2;
              mul.ftz.f32    temp_52627_0, tmp_59923_0, temp_52581_0;
              mul.ftz.f32    temp_52627_1, tmp_59929_0, temp_52581_1;
              mul.ftz.f32    temp_52627_2, tmp_59490_0, temp_52581_2;
              .reg .f32      temp_52628_0, temp_52628_1, temp_52628_2;
              mul.ftz.f32    temp_52628_0, tmp_59925_0, temp_52581_0;
              mul.ftz.f32    temp_52628_1, tmp_59931_0, temp_52581_1;
              mul.ftz.f32    temp_52628_2, tmp_59935_0, temp_52581_2;
              .reg .f32      temp_52629_0, temp_52629_1, temp_52629_2;
              mul.ftz.f32    temp_52629_0, tmp_59923_0, temp_52582_0;
              mul.ftz.f32    temp_52629_1, tmp_59929_0, temp_52582_1;
              mul.ftz.f32    temp_52629_2, tmp_59490_0, temp_52582_2;
              .reg .f32      temp_52630_0, temp_52630_1, temp_52630_2;
              add.ftz.f32    temp_52630_0, temp_52628_0, temp_52629_0;
              add.ftz.f32    temp_52630_1, temp_52628_1, temp_52629_1;
              add.ftz.f32    temp_52630_2, temp_52628_2, temp_52629_2;
              .reg .f32      temp_52631_0, temp_52631_1, temp_52631_2;
              mul.ftz.f32    temp_52631_0, tmp_59927_0, temp_52581_0;
              mul.ftz.f32    temp_52631_1, tmp_59933_0, temp_52581_1;
              mul.ftz.f32    temp_52631_2, tmp_59937_0, temp_52581_2;
              .reg .f32      temp_52632_0, temp_52632_1, temp_52632_2;
              mul.ftz.f32    temp_52632_0, tmp_59923_0, temp_52583_0;
              mul.ftz.f32    temp_52632_1, tmp_59929_0, temp_52583_1;
              mul.ftz.f32    temp_52632_2, tmp_59490_0, temp_52583_2;
              .reg .f32      temp_52633_0, temp_52633_1, temp_52633_2;
              add.ftz.f32    temp_52633_0, temp_52631_0, temp_52632_0;
              add.ftz.f32    temp_52633_1, temp_52631_1, temp_52632_1;
              add.ftz.f32    temp_52633_2, temp_52631_2, temp_52632_2;
              .reg.f32       temp_52640;
              add.ftz.f32    temp_52640, temp_52627_0, temp_52627_1;
              .reg.f32       temp_52641;
              add.ftz.f32    temp_52641, temp_52630_0, temp_52630_1;
              .reg.f32       temp_52642;
              add.ftz.f32    temp_52642, temp_52633_0, temp_52633_1;
              .reg.f32       temp_52646;
              add.ftz.f32    temp_52646, temp_52640, temp_52627_2;
              .reg.f32       temp_52647;
              add.ftz.f32    temp_52647, temp_52641, temp_52630_2;
              .reg.f32       temp_52648;
              add.ftz.f32    temp_52648, temp_52642, temp_52633_2;
              .reg.f32       temp_52649;
              mul.ftz.f32    temp_52649, temp_52646, temp_52646;
              .reg.f32       f_52650;
              neg.ftz.f32    f_52650, temp_52649;
              .reg.f32       temp_52651;
              rcp.approx.ftz.f32 temp_52651, temp_52646;
              .reg.f32       temp_52652;
              div.approx.ftz.f32 temp_52652, temp_52647, f_52650;
              .reg.f32       temp_52653;
              div.approx.ftz.f32 temp_52653, temp_52648, f_52650;
              .reg .f32      temp_52657_0, temp_52657_1, temp_52657_2;
              mul.ftz.f32    temp_52657_0, temp_52581_0, temp_52651;
              mul.ftz.f32    temp_52657_1, temp_52581_1, temp_52651;
              mul.ftz.f32    temp_52657_2, temp_52581_2, temp_52651;
              .reg .f32      temp_52658_0, temp_52658_1, temp_52658_2;
              mul.ftz.f32    temp_52658_0, temp_52582_0, temp_52651;
              mul.ftz.f32    temp_52658_1, temp_52582_1, temp_52651;
              mul.ftz.f32    temp_52658_2, temp_52582_2, temp_52651;
              .reg .f32      temp_52659_0, temp_52659_1, temp_52659_2;
              mul.ftz.f32    temp_52659_0, temp_52581_0, temp_52652;
              mul.ftz.f32    temp_52659_1, temp_52581_1, temp_52652;
              mul.ftz.f32    temp_52659_2, temp_52581_2, temp_52652;
              .reg .f32      temp_52660_0, temp_52660_1, temp_52660_2;
              add.ftz.f32    temp_52660_0, temp_52658_0, temp_52659_0;
              add.ftz.f32    temp_52660_1, temp_52658_1, temp_52659_1;
              add.ftz.f32    temp_52660_2, temp_52658_2, temp_52659_2;
              .reg .f32      temp_52661_0, temp_52661_1, temp_52661_2;
              mul.ftz.f32    temp_52661_0, temp_52583_0, temp_52651;
              mul.ftz.f32    temp_52661_1, temp_52583_1, temp_52651;
              mul.ftz.f32    temp_52661_2, temp_52583_2, temp_52651;
              .reg .f32      temp_52662_0, temp_52662_1, temp_52662_2;
              mul.ftz.f32    temp_52662_0, temp_52581_0, temp_52653;
              mul.ftz.f32    temp_52662_1, temp_52581_1, temp_52653;
              mul.ftz.f32    temp_52662_2, temp_52581_2, temp_52653;
              .reg .f32      temp_52663_0, temp_52663_1, temp_52663_2;
              add.ftz.f32    temp_52663_0, temp_52661_0, temp_52662_0;
              add.ftz.f32    temp_52663_1, temp_52661_1, temp_52662_1;
              add.ftz.f32    temp_52663_2, temp_52661_2, temp_52662_2;
              .reg .f32      temp_52669_0, temp_52669_1, temp_52669_2;
              mul.ftz.f32    temp_52669_0, temp_52604_0, temp_52651;
              mul.ftz.f32    temp_52669_1, temp_52604_1, temp_52651;
              mul.ftz.f32    temp_52669_2, temp_52604_2, temp_52651;
              .reg .f32      temp_52670_0, temp_52670_1, temp_52670_2;
              mul.ftz.f32    temp_52670_0, temp_52605_0, temp_52651;
              mul.ftz.f32    temp_52670_1, temp_52605_1, temp_52651;
              mul.ftz.f32    temp_52670_2, temp_52605_2, temp_52651;
              .reg .f32      temp_52671_0, temp_52671_1, temp_52671_2;
              mul.ftz.f32    temp_52671_0, temp_52604_0, temp_52652;
              mul.ftz.f32    temp_52671_1, temp_52604_1, temp_52652;
              mul.ftz.f32    temp_52671_2, temp_52604_2, temp_52652;
              .reg .f32      temp_52672_0, temp_52672_1, temp_52672_2;
              add.ftz.f32    temp_52672_0, temp_52670_0, temp_52671_0;
              add.ftz.f32    temp_52672_1, temp_52670_1, temp_52671_1;
              add.ftz.f32    temp_52672_2, temp_52670_2, temp_52671_2;
              .reg .f32      temp_52673_0, temp_52673_1, temp_52673_2;
              mul.ftz.f32    temp_52673_0, temp_52606_0, temp_52651;
              mul.ftz.f32    temp_52673_1, temp_52606_1, temp_52651;
              mul.ftz.f32    temp_52673_2, temp_52606_2, temp_52651;
              .reg .f32      temp_52674_0, temp_52674_1, temp_52674_2;
              mul.ftz.f32    temp_52674_0, temp_52604_0, temp_52653;
              mul.ftz.f32    temp_52674_1, temp_52604_1, temp_52653;
              mul.ftz.f32    temp_52674_2, temp_52604_2, temp_52653;
              .reg .f32      temp_52675_0, temp_52675_1, temp_52675_2;
              add.ftz.f32    temp_52675_0, temp_52673_0, temp_52674_0;
              add.ftz.f32    temp_52675_1, temp_52673_1, temp_52674_1;
              add.ftz.f32    temp_52675_2, temp_52673_2, temp_52674_2;
              .reg .f32      temp_52681_0, temp_52681_1, temp_52681_2;
              mul.ftz.f32    temp_52681_0, temp_52621_0, temp_52651;
              mul.ftz.f32    temp_52681_1, temp_52621_1, temp_52651;
              mul.ftz.f32    temp_52681_2, temp_52621_2, temp_52651;
              .reg .f32      temp_52682_0, temp_52682_1, temp_52682_2;
              mul.ftz.f32    temp_52682_0, temp_52622_0, temp_52651;
              mul.ftz.f32    temp_52682_1, temp_52622_1, temp_52651;
              mul.ftz.f32    temp_52682_2, temp_52622_2, temp_52651;
              .reg .f32      temp_52683_0, temp_52683_1, temp_52683_2;
              mul.ftz.f32    temp_52683_0, temp_52621_0, temp_52652;
              mul.ftz.f32    temp_52683_1, temp_52621_1, temp_52652;
              mul.ftz.f32    temp_52683_2, temp_52621_2, temp_52652;
              .reg .f32      temp_52684_0, temp_52684_1, temp_52684_2;
              add.ftz.f32    temp_52684_0, temp_52682_0, temp_52683_0;
              add.ftz.f32    temp_52684_1, temp_52682_1, temp_52683_1;
              add.ftz.f32    temp_52684_2, temp_52682_2, temp_52683_2;
              .reg .f32      temp_52685_0, temp_52685_1, temp_52685_2;
              mul.ftz.f32    temp_52685_0, temp_52623_0, temp_52651;
              mul.ftz.f32    temp_52685_1, temp_52623_1, temp_52651;
              mul.ftz.f32    temp_52685_2, temp_52623_2, temp_52651;
              .reg .f32      temp_52686_0, temp_52686_1, temp_52686_2;
              mul.ftz.f32    temp_52686_0, temp_52621_0, temp_52653;
              mul.ftz.f32    temp_52686_1, temp_52621_1, temp_52653;
              mul.ftz.f32    temp_52686_2, temp_52621_2, temp_52653;
              .reg .f32      temp_52687_0, temp_52687_1, temp_52687_2;
              add.ftz.f32    temp_52687_0, temp_52685_0, temp_52686_0;
              add.ftz.f32    temp_52687_1, temp_52685_1, temp_52686_1;
              add.ftz.f32    temp_52687_2, temp_52685_2, temp_52686_2;
              .reg.u64       tmp_59938;
              .reg.s32       optix_buffer_id_59939;
              mov.b64        {_, optix_buffer_id_59939}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59940;
{
              .reg.s32       abstract_59941;
              mov.b32        abstract_59941, 1;
              .reg.u64       const_59942;
              mov.b64        const_59942, 624;
              .reg.u64       const_59943;
              mov.b64        const_59943, 0;
 call (ptr_from_optix_id_59940), _rt_buffer_get_id_64, (optix_buffer_id_59939, abstract_59941, abstract_59941, const_59942, const_59943, const_59943, const_59943); // resolving optix id
}
              ld.u64         tmp_59938, [ptr_from_optix_id_59940];
              .reg.f32       tmp_59944;
              .reg.u64       off_59945;
              mad.wide.u32   off_59945, tmp_59686, 64, 48;
              .reg.s32       optix_buffer_id_59946;
              mov.b64        {_, optix_buffer_id_59946}, tmp_59938;
              .reg.u64       ptr_from_optix_id_59947;
{
              .reg.s32       abstract_59948;
              mov.b32        abstract_59948, 1;
              .reg.u64       const_59949;
              mov.b64        const_59949, 512;
              .reg.u64       off_59950;
              add.u64        off_59950, const_59949, off_59945;
              .reg.u64       const_59951;
              mov.b64        const_59951, 0;
 call (ptr_from_optix_id_59947), _rt_buffer_get_id_64, (optix_buffer_id_59946, abstract_59948, abstract_59948, off_59950, const_59951, const_59951, const_59951); // resolving optix id
}
              ld.f32         tmp_59944, [ptr_from_optix_id_59947];
              .reg .f32      temp_52708_0, temp_52708_1;
              mul.ftz.f32    temp_52708_0, scl_51406_0, tmp_59944;
              mul.ftz.f32    temp_52708_1, scl_51406_1, tmp_59944;
              .reg .f32      temp_52710_0, temp_52710_1;
              mul.ftz.f32    temp_52710_0, scl_51407_0, tmp_59944;
              mul.ftz.f32    temp_52710_1, scl_51407_1, tmp_59944;
              .reg .f32      temp_52714_0, temp_52714_1;
              mul.ftz.f32    temp_52714_0, scl_51408_0, tmp_59944;
              mul.ftz.f32    temp_52714_1, scl_51408_1, tmp_59944;
              .reg.u64       tmp_59952;
              .reg.s32       optix_buffer_id_59953;
              mov.b64        {_, optix_buffer_id_59953}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59954;
{
              .reg.s32       abstract_59955;
              mov.b32        abstract_59955, 1;
              .reg.u64       const_59956;
              mov.b64        const_59956, 624;
              .reg.u64       const_59957;
              mov.b64        const_59957, 0;
 call (ptr_from_optix_id_59954), _rt_buffer_get_id_64, (optix_buffer_id_59953, abstract_59955, abstract_59955, const_59956, const_59957, const_59957, const_59957); // resolving optix id
}
              ld.u64         tmp_59952, [ptr_from_optix_id_59954];
              .reg.s32       tmp_59958;
              .reg.u64       off_59959;
              mad.wide.u32   off_59959, tmp_59686, 64, 32;
              .reg.s32       optix_buffer_id_59960;
              mov.b64        {_, optix_buffer_id_59960}, tmp_59952;
              .reg.u64       ptr_from_optix_id_59961;
{
              .reg.s32       abstract_59962;
              mov.b32        abstract_59962, 1;
              .reg.u64       const_59963;
              mov.b64        const_59963, 512;
              .reg.u64       off_59964;
              add.u64        off_59964, const_59963, off_59959;
              .reg.u64       const_59965;
              mov.b64        const_59965, 0;
 call (ptr_from_optix_id_59961), _rt_buffer_get_id_64, (optix_buffer_id_59960, abstract_59962, abstract_59962, off_59964, const_59965, const_59965, const_59965); // resolving optix id
}
              ld.s32         tmp_59958, [ptr_from_optix_id_59961];
              .reg.u64       tmp_59966;
              .reg.s32       optix_buffer_id_59967;
              mov.b64        {_, optix_buffer_id_59967}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59968;
{
              .reg.s32       abstract_59969;
              mov.b32        abstract_59969, 1;
              .reg.u64       const_59970;
              mov.b64        const_59970, 624;
              .reg.u64       const_59971;
              mov.b64        const_59971, 0;
 call (ptr_from_optix_id_59968), _rt_buffer_get_id_64, (optix_buffer_id_59967, abstract_59969, abstract_59969, const_59970, const_59971, const_59971, const_59971); // resolving optix id
}
              ld.u64         tmp_59966, [ptr_from_optix_id_59968];
              .reg.u64       tmp_59972;
              .reg.u64       off_59973;
              mad.wide.u32   off_59973, tmp_59686, 64, 40;
              .reg.s32       optix_buffer_id_59974;
              mov.b64        {_, optix_buffer_id_59974}, tmp_59966;
              .reg.u64       ptr_from_optix_id_59975;
{
              .reg.s32       abstract_59976;
              mov.b32        abstract_59976, 1;
              .reg.u64       const_59977;
              mov.b64        const_59977, 512;
              .reg.u64       off_59978;
              add.u64        off_59978, const_59977, off_59973;
              .reg.u64       const_59979;
              mov.b64        const_59979, 0;
 call (ptr_from_optix_id_59975), _rt_buffer_get_id_64, (optix_buffer_id_59974, abstract_59976, abstract_59976, off_59978, const_59979, const_59979, const_59979); // resolving optix id
}
              ld.u64         tmp_59972, [ptr_from_optix_id_59975];
              .reg.u64       tmp_59980;
              .reg.s32       optix_buffer_id_59981;
              mov.b64        {_, optix_buffer_id_59981}, tmp_59444;
              .reg.u64       ptr_from_optix_id_59982;
{
              .reg.s32       abstract_59983;
              mov.b32        abstract_59983, 1;
              .reg.u64       const_59984;
              mov.b64        const_59984, 536;
              .reg.u64       const_59985;
              mov.b64        const_59985, 0;
 call (ptr_from_optix_id_59982), _rt_buffer_get_id_64, (optix_buffer_id_59981, abstract_59983, abstract_59983, const_59984, const_59985, const_59985, const_59985); // resolving optix id
}
              ld.u64         tmp_59980, [ptr_from_optix_id_59982];
              .reg .s32      tmp_59986_0, tmp_59986_1;
              .reg.u64       off_59987;
              mad.wide.u32   off_59987, tmp_59958, 32, 16;
              .reg.s32       optix_buffer_id_59988;
              mov.b64        {_, optix_buffer_id_59988}, tmp_59980;
              .reg.u64       ptr_from_optix_id_59989;
{
              .reg.s32       abstract_59990;
              mov.b32        abstract_59990, 1;
              .reg.u64       const_59991;
              mov.b64        const_59991, 512;
              .reg.u64       off_59992;
              add.u64        off_59992, const_59991, off_59987;
              .reg.u64       const_59993;
              mov.b64        const_59993, 0;
 call (ptr_from_optix_id_59989), _rt_buffer_get_id_64, (optix_buffer_id_59988, abstract_59990, abstract_59990, off_59992, const_59993, const_59993, const_59993); // resolving optix id
}
              ld.v2.s32      {tmp_59986_0, tmp_59986_1}, [ptr_from_optix_id_59989];
              .reg .f32      temp_52730_0, temp_52730_1;
              cvt.rn.f32.s32 temp_52730_0, tmp_59986_0;
              cvt.rn.f32.s32 temp_52730_1, tmp_59986_1;
              .reg .f32      temp_52731_0, temp_52731_1;
              mul.ftz.f32    temp_52731_0, temp_52730_0, temp_52710_0;
              mul.ftz.f32    temp_52731_1, temp_52730_1, temp_52710_1;
              .reg.f32       temp_52732;
              mul.ftz.f32    temp_52732, temp_52731_0, temp_52731_0;
              fma.rn.ftz.f32 temp_52732, temp_52731_1, temp_52731_1, temp_52732;
              .reg.f32       temp_52733;
              sqrt.approx.f32 temp_52733, temp_52732;
              .reg .f32      temp_52734_0, temp_52734_1;
              mul.ftz.f32    temp_52734_0, temp_52730_0, temp_52714_0;
              mul.ftz.f32    temp_52734_1, temp_52730_1, temp_52714_1;
              .reg.f32       temp_52735;
              mul.ftz.f32    temp_52735, temp_52734_0, temp_52734_0;
              fma.rn.ftz.f32 temp_52735, temp_52734_1, temp_52734_1, temp_52735;
              .reg.f32       temp_52736;
              sqrt.approx.f32 temp_52736, temp_52735;
              .reg.f32       rho_52737;
              max.ftz.f32    rho_52737, temp_52733, temp_52736;
              .reg.f32       rho_52738;
              max.f32        rho_52738, rho_52737, 0F3f800000;
              min.f32        rho_52738, rho_52738, 0F47000000;
              .reg.f32       temp_52739;
              lg2.approx.ftz.f32 temp_52739, rho_52738;
              .reg .f32      rgba_52740_0, rgba_52740_1, rgba_52740_2, rgba_52740_3;
{
              .local .align 16 .b8 result_mem_59994[16] ;
              .reg.u64       result_59995;
              mov.u64        result_59995, result_mem_59994;
              cvta.local.u64 result_59995, result_59995;
              .local .align 8 .b8 param_mem_59996[8] ;
              .reg.u64       param_59997;
              mov.u64        param_59997, param_mem_59996;
              cvta.local.u64 param_59997, param_59997;
              st.u64         [param_59997], tmp_59972;
              .local .align 8 .b8 param_mem_59998[8] ;
              .reg.u64       param_59999;
              mov.u64        param_59999, param_mem_59998;
              cvta.local.u64 param_59999, param_59999;
              st.v2.f32      [param_59999], {temp_52708_0, temp_52708_1};
              .local .align 4 .b8 param_mem_60000[4] ;
              .reg.u64       param_60001;
              mov.u64        param_60001, param_mem_60000;
              cvta.local.u64 param_60001, param_60001;
              st.f32         [param_60001], temp_52739;
              call.uni       optix_texture_lod, (result_59995, param_59997, param_59999, param_60001);
              ld.v4.f32      {rgba_52740_0, rgba_52740_1, rgba_52740_2, rgba_52740_3}, [result_59995];
}
              .reg.u64       tmp_60002;
              .reg.s32       optix_buffer_id_60003;
              mov.b64        {_, optix_buffer_id_60003}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60004;
{
              .reg.s32       abstract_60005;
              mov.b32        abstract_60005, 1;
              .reg.u64       const_60006;
              mov.b64        const_60006, 536;
              .reg.u64       const_60007;
              mov.b64        const_60007, 0;
 call (ptr_from_optix_id_60004), _rt_buffer_get_id_64, (optix_buffer_id_60003, abstract_60005, abstract_60005, const_60006, const_60007, const_60007, const_60007); // resolving optix id
}
              ld.u64         tmp_60002, [ptr_from_optix_id_60004];
              .reg.s32       tmp_60008;
              .reg.u64       off_60009;
              mad.wide.u32   off_60009, tmp_59958, 32, 0;
              .reg.s32       optix_buffer_id_60010;
              mov.b64        {_, optix_buffer_id_60010}, tmp_60002;
              .reg.u64       ptr_from_optix_id_60011;
{
              .reg.s32       abstract_60012;
              mov.b32        abstract_60012, 1;
              .reg.u64       const_60013;
              mov.b64        const_60013, 512;
              .reg.u64       off_60014;
              add.u64        off_60014, const_60013, off_60009;
              .reg.u64       const_60015;
              mov.b64        const_60015, 0;
 call (ptr_from_optix_id_60011), _rt_buffer_get_id_64, (optix_buffer_id_60010, abstract_60012, abstract_60012, off_60014, const_60015, const_60015, const_60015); // resolving optix id
}
              ld.s32         tmp_60008, [ptr_from_optix_id_60011];
              .reg.s32       is_luminance_52742;
              set.lt.s32.s32 is_luminance_52742, tmp_60008, 4;
              .reg .f32      temp_52745_0, temp_52745_1, temp_52745_2, temp_52745_3;
              .reg.pred      is_luminance_52742_60016;
              setp.ne.s32    is_luminance_52742_60016, 0, is_luminance_52742;
              selp.f32       temp_52745_0, rgba_52740_0, rgba_52740_0, is_luminance_52742_60016;
              selp.f32       temp_52745_1, rgba_52740_0, rgba_52740_1, is_luminance_52742_60016;
              selp.f32       temp_52745_2, rgba_52740_0, rgba_52740_2, is_luminance_52742_60016;
              selp.f32       temp_52745_3, 0F3f800000, rgba_52740_3, is_luminance_52742_60016;
              .reg .f32      color_52753_0, color_52753_1, color_52753_2, color_52753_3;
              sub.rn.ftz.f32 color_52753_0, 0F00000000, temp_52745_0;
              fma.rn.f32     color_52753_0, 0F00000000, color_52753_0, temp_52745_0;
              sub.rn.ftz.f32 color_52753_1, 0F00000000, temp_52745_1;
              fma.rn.f32     color_52753_1, 0F00000000, color_52753_1, temp_52745_1;
              sub.rn.ftz.f32 color_52753_2, 0F00000000, temp_52745_2;
              fma.rn.f32     color_52753_2, 0F00000000, color_52753_2, temp_52745_2;
              sub.rn.ftz.f32 color_52753_3, 0F3f800000, temp_52745_3;
              fma.rn.f32     color_52753_3, 0F00000000, color_52753_3, temp_52745_3;
              .reg .f32      color_52755_0, color_52755_1, color_52755_2, color_52755_3;
              sub.rn.ftz.f32 color_52755_0, 0F00000000, color_52753_0;
              fma.rn.f32     color_52755_0, 0F00000000, color_52755_0, color_52753_0;
              sub.rn.ftz.f32 color_52755_1, 0F00000000, color_52753_1;
              fma.rn.f32     color_52755_1, 0F00000000, color_52755_1, color_52753_1;
              sub.rn.ftz.f32 color_52755_2, 0F00000000, color_52753_2;
              fma.rn.f32     color_52755_2, 0F00000000, color_52755_2, color_52753_2;
              sub.rn.ftz.f32 color_52755_3, 0F3f800000, color_52753_3;
              fma.rn.f32     color_52755_3, 0F00000000, color_52755_3, color_52753_3;
              .reg.u64       tmp_60017;
              .reg.s32       optix_buffer_id_60018;
              mov.b64        {_, optix_buffer_id_60018}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60019;
{
              .reg.s32       abstract_60020;
              mov.b32        abstract_60020, 1;
              .reg.u64       const_60021;
              mov.b64        const_60021, 624;
              .reg.u64       const_60022;
              mov.b64        const_60022, 0;
 call (ptr_from_optix_id_60019), _rt_buffer_get_id_64, (optix_buffer_id_60018, abstract_60020, abstract_60020, const_60021, const_60022, const_60022, const_60022); // resolving optix id
}
              ld.u64         tmp_60017, [ptr_from_optix_id_60019];
              .reg .f32      tmp_60023_0, tmp_60023_1, tmp_60023_2;
              .reg.u64       off_60024;
              mad.wide.u32   off_60024, tmp_59686, 64, 0;
              .reg.s32       optix_buffer_id_60025;
              mov.b64        {_, optix_buffer_id_60025}, tmp_60017;
              .reg.u64       ptr_from_optix_id_60026;
{
              .reg.s32       abstract_60027;
              mov.b32        abstract_60027, 1;
              .reg.u64       const_60028;
              mov.b64        const_60028, 512;
              .reg.u64       off_60029;
              add.u64        off_60029, const_60028, off_60024;
              .reg.u64       const_60030;
              mov.b64        const_60030, 0;
 call (ptr_from_optix_id_60026), _rt_buffer_get_id_64, (optix_buffer_id_60025, abstract_60027, abstract_60027, off_60029, const_60030, const_60030, const_60030); // resolving optix id
}
              ld.v2.f32      {tmp_60023_0, tmp_60023_1}, [ptr_from_optix_id_60026];
              ld.f32         tmp_60023_2, [ptr_from_optix_id_60026+8];
              .reg .f32      temp_52777_0, temp_52777_1, temp_52777_2;
              mul.ftz.f32    temp_52777_0, color_52755_0, tmp_60023_0;
              mul.ftz.f32    temp_52777_1, color_52755_1, tmp_60023_1;
              mul.ftz.f32    temp_52777_2, color_52755_2, tmp_60023_2;
              .reg.u64       tmp_60031;
              .reg.s32       optix_buffer_id_60032;
              mov.b64        {_, optix_buffer_id_60032}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60033;
{
              .reg.s32       abstract_60034;
              mov.b32        abstract_60034, 1;
              .reg.u64       const_60035;
              mov.b64        const_60035, 624;
              .reg.u64       const_60036;
              mov.b64        const_60036, 0;
 call (ptr_from_optix_id_60033), _rt_buffer_get_id_64, (optix_buffer_id_60032, abstract_60034, abstract_60034, const_60035, const_60036, const_60036, const_60036); // resolving optix id
}
              ld.u64         tmp_60031, [ptr_from_optix_id_60033];
              .reg .f32      tmp_60037_0, tmp_60037_1, tmp_60037_2;
              .reg.u64       off_60038;
              mad.wide.u32   off_60038, tmp_59686, 64, 16;
              .reg.s32       optix_buffer_id_60039;
              mov.b64        {_, optix_buffer_id_60039}, tmp_60031;
              .reg.u64       ptr_from_optix_id_60040;
{
              .reg.s32       abstract_60041;
              mov.b32        abstract_60041, 1;
              .reg.u64       const_60042;
              mov.b64        const_60042, 512;
              .reg.u64       off_60043;
              add.u64        off_60043, const_60042, off_60038;
              .reg.u64       const_60044;
              mov.b64        const_60044, 0;
 call (ptr_from_optix_id_60040), _rt_buffer_get_id_64, (optix_buffer_id_60039, abstract_60041, abstract_60041, off_60043, const_60044, const_60044, const_60044); // resolving optix id
}
              ld.v2.f32      {tmp_60037_0, tmp_60037_1}, [ptr_from_optix_id_60040];
              ld.f32         tmp_60037_2, [ptr_from_optix_id_60040+8];
              .reg .f32      temp_52778_0, temp_52778_1, temp_52778_2;
              mul.ftz.f32    temp_52778_0, color_52755_0, tmp_60037_0;
              mul.ftz.f32    temp_52778_1, color_52755_1, tmp_60037_1;
              mul.ftz.f32    temp_52778_2, color_52755_2, tmp_60037_2;
              .reg.u64       tmp_60045;
              .reg.s32       optix_buffer_id_60046;
              mov.b64        {_, optix_buffer_id_60046}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60047;
{
              .reg.s32       abstract_60048;
              mov.b32        abstract_60048, 1;
              .reg.u64       const_60049;
              mov.b64        const_60049, 624;
              .reg.u64       const_60050;
              mov.b64        const_60050, 0;
 call (ptr_from_optix_id_60047), _rt_buffer_get_id_64, (optix_buffer_id_60046, abstract_60048, abstract_60048, const_60049, const_60050, const_60050, const_60050); // resolving optix id
}
              ld.u64         tmp_60045, [ptr_from_optix_id_60047];
              .reg.f32       tmp_60051;
              .reg.u64       off_60052;
              mad.wide.u32   off_60052, tmp_59686, 64, 52;
              .reg.s32       optix_buffer_id_60053;
              mov.b64        {_, optix_buffer_id_60053}, tmp_60045;
              .reg.u64       ptr_from_optix_id_60054;
{
              .reg.s32       abstract_60055;
              mov.b32        abstract_60055, 1;
              .reg.u64       const_60056;
              mov.b64        const_60056, 512;
              .reg.u64       off_60057;
              add.u64        off_60057, const_60056, off_60052;
              .reg.u64       const_60058;
              mov.b64        const_60058, 0;
 call (ptr_from_optix_id_60054), _rt_buffer_get_id_64, (optix_buffer_id_60053, abstract_60055, abstract_60055, off_60057, const_60058, const_60058, const_60058); // resolving optix id
}
              ld.f32         tmp_60051, [ptr_from_optix_id_60054];
              .reg.f32       temp_52782;
              mul.ftz.f32    temp_52782, 0F3f000000, tmp_60051;
              .reg.f32       temp_52796;
              add.ftz.f32    temp_52796, temp_52782, 0F3f800000;
              .reg.f32       temp_52807;
              rsqrt.approx.ftz.f32 temp_52807, temp_52796;
              .reg.f32       temp_52815;
              sub.ftz.f32    temp_52815, 0F3f800000, temp_52807;
              .reg.u64       scl_41414;
              .reg.u64       scl_41415;
              .reg.u64       scl_41416;
              .reg .f32      scl_41412_0, scl_41412_1, scl_41412_2;
              .reg.f32       scl_41413;
              .reg.pred      temp_52015_60061;
              setp.ne.s32    temp_52015_60061, 0, temp_52015;
  @!temp_52015_60061 bra     else_60059;
              .reg.s32       temp_52899;
              and.b32        temp_52899, tmp_59715_5, 32;
              .reg.s32       temp_52900;
              set.gt.s32.s32 temp_52900, temp_52899, 0;
              .reg.s32       temp_59433;
              and.b32        temp_59433, tmp_59724, temp_52900;
              .reg.u64       scl_41426;
              .reg.u64       scl_41427;
              .reg.u64       scl_41428;
              .reg .f32      scl_41424_0, scl_41424_1, scl_41424_2;
              .reg.f32       scl_41425;
              .reg.pred      temp_59433_60064;
              setp.ne.s32    temp_59433_60064, 0, temp_59433;
  @!temp_59433_60064 bra     else_60062;
              mov.u64        scl_41426, tmp_59706;
              mov.u64        scl_41427, tmp_59708;
              mov.u64        scl_41428, tmp_59710;
              mov.b32        scl_41424_0, tmp_59715_0_0;
              mov.b32        scl_41424_1, tmp_59715_0_1;
              mov.b32        scl_41424_2, tmp_59715_0_2;
              mov.b32        scl_41425, 0F00000000;
              bra.uni        merge_60063;
else_60062:
              .reg.u64       scl_41443;
              .reg.u64       scl_41444;
              .reg.u64       scl_41445;
              .reg .f32      scl_41441_0, scl_41441_1, scl_41441_2;
              .reg.f32       scl_41442;
              .reg.pred      temp_52900_60067;
              setp.ne.s32    temp_52900_60067, 0, temp_52900;
  @!temp_52900_60067 bra     else_60065;
              mov.u64        scl_41443, tmp_59706;
              mov.u64        scl_41444, tmp_59708;
              mov.u64        scl_41445, tmp_59710;
              mov.b32        scl_41441_0, 0F00000000;
              mov.b32        scl_41441_1, 0F00000000;
              mov.b32        scl_41441_2, 0F00000000;
              mov.b32        scl_41442, 0F00000000;
              bra.uni        merge_60066;
else_60065:
              .reg.u64       tmp_60068;
              ld.param.u64   tmp_60068, [integratorInstanceID_22355];
              .reg.s32       tmp_60069;
              ld.s32         tmp_60069, [tmp_60068];
              .reg.u64       tmp_60070;
              .reg.s32       optix_buffer_id_60071;
              mov.b64        {_, optix_buffer_id_60071}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60072;
{
              .reg.s32       abstract_60073;
              mov.b32        abstract_60073, 1;
              .reg.u64       const_60074;
              mov.b64        const_60074, 568;
              .reg.u64       const_60075;
              mov.b64        const_60075, 0;
 call (ptr_from_optix_id_60072), _rt_buffer_get_id_64, (optix_buffer_id_60071, abstract_60073, abstract_60073, const_60074, const_60075, const_60075, const_60075); // resolving optix id
}
              ld.u64         tmp_60070, [ptr_from_optix_id_60072];
              .reg.f32       tmp_60076;
              .reg.u64       off_60077;
              mad.wide.u32   off_60077, tmp_60069, 112, 4;
              .reg.s32       optix_buffer_id_60078;
              mov.b64        {_, optix_buffer_id_60078}, tmp_60070;
              .reg.u64       ptr_from_optix_id_60079;
{
              .reg.s32       abstract_60080;
              mov.b32        abstract_60080, 1;
              .reg.u64       const_60081;
              mov.b64        const_60081, 512;
              .reg.u64       off_60082;
              add.u64        off_60082, const_60081, off_60077;
              .reg.u64       const_60083;
              mov.b64        const_60083, 0;
 call (ptr_from_optix_id_60079), _rt_buffer_get_id_64, (optix_buffer_id_60078, abstract_60080, abstract_60080, off_60082, const_60083, const_60083, const_60083); // resolving optix id
}
              ld.f32         tmp_60076, [ptr_from_optix_id_60079];
              .reg.s32       temp_31702;
              set.lt.ftz.s32.f32 temp_31702, 0F00000000, tmp_60076;
              .reg.s32       scl_41457;
              .reg.s32       scl_41458;
              .reg.pred      temp_31702_60086;
              setp.ne.s32    temp_31702_60086, 0, temp_31702;
  @!temp_31702_60086 bra     else_60084;
              .reg.s32       temp_31772;
              set.lt.s32.s32 temp_31772, tmp_59715_4, 8;
              .reg.f32       f1_31773;
              .reg.pred      temp_31772_60089;
              setp.ne.s32    temp_31772_60089, 0, temp_31772;
  @!temp_31772_60089 bra     else_60087;
              .reg.s32       temp_52920;
              and.b32        temp_52920, tmp_59715_4, 63;
              .reg.u64       tmp_60090;
              .reg.s32       optix_buffer_id_60091;
              mov.b64        {_, optix_buffer_id_60091}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60092;
{
              .reg.s32       abstract_60093;
              mov.b32        abstract_60093, 1;
              .reg.u64       const_60094;
              mov.b64        const_60094, 512;
              .reg.u64       const_60095;
              mov.b64        const_60095, 0;
 call (ptr_from_optix_id_60092), _rt_buffer_get_id_64, (optix_buffer_id_60091, abstract_60093, abstract_60093, const_60094, const_60095, const_60095, const_60095); // resolving optix id
}
              ld.u64         tmp_60090, [ptr_from_optix_id_60092];
              .reg.s32       tmp_60096;
              .reg.u64       off_60097;
              mad.wide.u32   off_60097, temp_52920, 4, 0;
              .reg.s32       optix_buffer_id_60098;
              mov.b64        {_, optix_buffer_id_60098}, tmp_60090;
              .reg.u64       ptr_from_optix_id_60099;
{
              .reg.s32       abstract_60100;
              mov.b32        abstract_60100, 1;
              .reg.u64       const_60101;
              mov.b64        const_60101, 512;
              .reg.u64       off_60102;
              add.u64        off_60102, const_60101, off_60097;
              .reg.u64       const_60103;
              mov.b64        const_60103, 0;
 call (ptr_from_optix_id_60099), _rt_buffer_get_id_64, (optix_buffer_id_60098, abstract_60100, abstract_60100, off_60102, const_60103, const_60103, const_60103); // resolving optix id
}
              ld.s32         tmp_60096, [ptr_from_optix_id_60099];
              .reg.f32       temp_31806;
              cvt.rn.f32.s32 temp_31806, tmp_60096;
              .reg.f32       digit_31807;
              div.approx.ftz.f32 digit_31807, 0F3f800000, temp_31806;
              .reg.s32       temp_31808;
              set.gt.s32.s32 temp_31808, temp_30198, 0;
              .reg.f32       ilwerse_31809;
              .reg.pred      temp_31808_60106;
              setp.ne.s32    temp_31808_60106, 0, temp_31808;
  @!temp_31808_60106 bra     else_60104;
              .reg.f32       digit_31823;
              mov.b32        digit_31823, digit_31807;
              .reg.s32       i_31824;
              mov.b32        i_31824, temp_30198;
              .reg.f32       ilwerse_31825;
              mov.b32        ilwerse_31825, 0F00000000;
              .reg.f32       ilwerse_31822;
doloop_60107:
              .reg.s32       temp_31826;
              rem.s32        temp_31826, i_31824, tmp_60096;
              .reg.f32       temp_31827;
              cvt.rn.f32.s32 temp_31827, temp_31826;
              .reg.f32       temp_31828;
              mul.ftz.f32    temp_31828, digit_31823, temp_31827;
              .reg.f32       ilwerse_31829;
              add.ftz.f32    ilwerse_31829, ilwerse_31825, temp_31828;
              .reg.f32       digit_31830;
              mul.ftz.f32    digit_31830, digit_31823, digit_31807;
              .reg.s32       i_31831;
              div.s32        i_31831, i_31824, tmp_60096;
              .reg.s32       temp_31832;
              set.gt.s32.s32 temp_31832, i_31831, 0;
              mov.b32        ilwerse_31822, ilwerse_31829;
              mov.b32        digit_31823, digit_31830;
              mov.b32        i_31824, i_31831;
              mov.b32        ilwerse_31825, ilwerse_31829;
              .reg.pred      temp_31832_60108;
              setp.ne.s32    temp_31832_60108, 0, temp_31832;
  @temp_31832_60108 bra      doloop_60107;
              mov.b32        ilwerse_31809, ilwerse_31822;
              bra.uni        merge_60105;
else_60104:
              mov.b32        ilwerse_31809, 0F00000000;
merge_60105:
              .reg.s32       temp_31810;
              set.eq.s32.s32 temp_31810, tmp_59715_4, 0;
              .reg.f32       f1_31811;
              .reg.pred      temp_31810_60111;
              setp.ne.s32    temp_31810_60111, 0, temp_31810;
  @!temp_31810_60111 bra     else_60109;
              .reg.f32       temp_31818;
              mul.ftz.f32    temp_31818, ilwerse_31809, 0F43800000;
              .reg.s32       temp_31819;
              rem.s32        temp_31819, temp_30189, 256;
              .reg.f32       temp_31820;
              cvt.rn.f32.s32 temp_31820, temp_31819;
              .reg.f32       f1_31821;
              sub.ftz.f32    f1_31821, temp_31818, temp_31820;
              mov.b32        f1_31811, f1_31821;
              bra.uni        merge_60110;
else_60109:
              .reg.s32       temp_31812;
              set.eq.s32.s32 temp_31812, tmp_59715_4, 1;
              .reg.f32       f1_31813;
              .reg.pred      temp_31812_60114;
              setp.ne.s32    temp_31812_60114, 0, temp_31812;
  @!temp_31812_60114 bra     else_60112;
              .reg.f32       temp_31814;
              mul.ftz.f32    temp_31814, ilwerse_31809, 0F43730000;
              .reg.s32       temp_31815;
              rem.s32        temp_31815, temp_30192, 243;
              .reg.f32       temp_31816;
              cvt.rn.f32.s32 temp_31816, temp_31815;
              .reg.f32       f1_31817;
              sub.ftz.f32    f1_31817, temp_31814, temp_31816;
              mov.b32        f1_31813, f1_31817;
              bra.uni        merge_60113;
else_60112:
              mov.b32        f1_31813, ilwerse_31809;
merge_60113:
              mov.b32        f1_31811, f1_31813;
merge_60110:
              mov.b32        f1_31773, f1_31811;
              bra.uni        merge_60088;
else_60087:
              .reg.s32       i_31781;
              mov.b32        i_31781, 0;
              .reg.s32       sum_31782;
              mov.b32        sum_31782, 0;
              .reg.s32       v0_31783;
              mov.b32        v0_31783, tmp_59715_4;
              .reg.s32       v1_31784;
              mov.b32        v1_31784, temp_30198;
              .reg.s32       scl_41463;
doloop_60115:
              .reg.s32       sum_31785;
              add.cc.s32     sum_31785, sum_31782, -1640531527;
              .reg.s32       temp_31786;
              shl.b32        temp_31786, v1_31784, 4;
              .reg.s32       temp_31787;
              add.cc.s32     temp_31787, temp_31786, -1556008596;
              .reg.s32       temp_31788;
              add.cc.s32     temp_31788, v1_31784, sum_31785;
              .reg.s32       temp_31789;
              xor.b32        temp_31789, temp_31787, temp_31788;
              .reg.s32       temp_31790;
              shr.u32        temp_31790, v1_31784, 5;
              .reg.s32       temp_31791;
              add.cc.s32     temp_31791, temp_31790, -939442524;
              .reg.s32       temp_31792;
              xor.b32        temp_31792, temp_31789, temp_31791;
              .reg.s32       v0_31793;
              add.cc.s32     v0_31793, v0_31783, temp_31792;
              .reg.s32       temp_31794;
              shl.b32        temp_31794, v0_31793, 4;
              .reg.s32       temp_31795;
              add.cc.s32     temp_31795, temp_31794, -1383041155;
              .reg.s32       temp_31796;
              add.cc.s32     temp_31796, v0_31793, sum_31785;
              .reg.s32       temp_31797;
              xor.b32        temp_31797, temp_31795, temp_31796;
              .reg.s32       temp_31798;
              shr.u32        temp_31798, v0_31793, 5;
              .reg.s32       temp_31799;
              add.cc.s32     temp_31799, temp_31798, 2123724318;
              .reg.s32       temp_31800;
              xor.b32        temp_31800, temp_31797, temp_31799;
              .reg.s32       v1_31801;
              add.cc.s32     v1_31801, v1_31784, temp_31800;
              .reg.s32       i_31802;
              add.cc.s32     i_31802, i_31781, 1;
              .reg.s32       temp_31803;
              set.lt.s32.s32 temp_31803, i_31802, 8;
              mov.b32        scl_41463, v0_31793;
              mov.b32        i_31781, i_31802;
              mov.b32        sum_31782, sum_31785;
              mov.b32        v0_31783, v0_31793;
              mov.b32        v1_31784, v1_31801;
              .reg.pred      temp_31803_60116;
              setp.ne.s32    temp_31803_60116, 0, temp_31803;
  @temp_31803_60116 bra.uni  doloop_60115;
              .reg.s32       temp_52922;
              and.b32        temp_52922, scl_41463, 2147483647;
              .reg.f32       temp_52923;
              cvt.rn.f32.s32 temp_52923, temp_52922;
              .reg.f32       temp_52924;
              div.approx.ftz.f32 temp_52924, temp_52923, 0F4f000000;
              mov.b32        f1_31773, temp_52924;
merge_60088:
              .reg.s32       temp_31774;
              add.cc.s32     temp_31774, tmp_59715_4, 1;
              .reg.s32       temp_31776;
              set.lt.ftz.s32.f32 temp_31776, 0F00000000, f1_31773;
              mov.b32        scl_41457, temp_31776;
              mov.b32        scl_41458, temp_31774;
              bra.uni        merge_60085;
else_60084:
              mov.b32        scl_41457, 0;
              mov.b32        scl_41458, tmp_59715_4;
merge_60085:
              .reg.u64       tmp_60117;
              ld.param.u64   tmp_60117, [f_22353];
              .reg .f32      tmp_60118_0, tmp_60118_1, tmp_60118_2;
              ld.v2.f32      {tmp_60118_0, tmp_60118_1}, [tmp_60117+48];
              ld.f32         tmp_60118_2, [tmp_60117+56];
              .reg .f32      temp_52929_0, temp_52929_1, temp_52929_2;
              mul.ftz.f32    temp_52929_0, tmp_60118_0, temp_52006_0;
              mul.ftz.f32    temp_52929_1, tmp_60118_1, temp_52006_1;
              mul.ftz.f32    temp_52929_2, tmp_60118_2, temp_52006_2;
              .reg.f32       temp_52946;
              add.ftz.f32    temp_52946, temp_52929_0, temp_52929_1;
              .reg.f32       temp_52952;
              add.ftz.f32    temp_52952, temp_52946, temp_52929_2;
              .reg.s32       temp_52958;
              set.gt.ftz.s32.f32 temp_52958, temp_52952, 0F00000000;
              .reg.f32       side_31711;
              .reg.pred      temp_52958_60119;
              setp.ne.s32    temp_52958_60119, 0, temp_52958;
              selp.f32       side_31711, 0F3f800000, 0Fbf800000, temp_52958_60119;
              .reg.s32       temp_31712;
              not.b32        temp_31712, scl_41457;
              .reg.u64       scl_41475;
              .reg.u64       scl_41476;
              .reg.u64       scl_41477;
              .reg.pred      temp_31712_60122;
              setp.ne.s32    temp_31712_60122, 0, temp_31712;
  @!temp_31712_60122 bra     else_60120;
              .reg.f32       temp_31717;
              mul.ftz.f32    temp_31717, tmp_59738, side_31711;
              .reg .f32      temp_52968_0, temp_52968_1, temp_52968_2;
              mul.ftz.f32    temp_52968_0, tmp_60118_0, temp_31717;
              mul.ftz.f32    temp_52968_1, tmp_60118_1, temp_31717;
              mul.ftz.f32    temp_52968_2, tmp_60118_2, temp_31717;
              .reg.u64       tmp_60123;
              ld.param.u64   tmp_60123, [f_22353];
              .reg .f32      tmp_60124_0, tmp_60124_1, tmp_60124_2;
              ld.v2.f32      {tmp_60124_0, tmp_60124_1}, [tmp_60123+64];
              ld.f32         tmp_60124_2, [tmp_60123+72];
              .reg .f32      temp_52970_0, temp_52970_1, temp_52970_2;
              mul.ftz.f32    temp_52970_0, tmp_60124_0, temp_31717;
              mul.ftz.f32    temp_52970_1, tmp_60124_1, temp_31717;
              mul.ftz.f32    temp_52970_2, tmp_60124_2, temp_31717;
              .reg.u64       tmp_60125;
              ld.param.u64   tmp_60125, [f_22353];
              .reg .f32      tmp_60126_0, tmp_60126_1, tmp_60126_2;
              ld.v2.f32      {tmp_60126_0, tmp_60126_1}, [tmp_60125+80];
              ld.f32         tmp_60126_2, [tmp_60125+88];
              .reg .f32      temp_52974_0, temp_52974_1, temp_52974_2;
              mul.ftz.f32    temp_52974_0, tmp_60126_0, temp_31717;
              mul.ftz.f32    temp_52974_1, tmp_60126_1, temp_31717;
              mul.ftz.f32    temp_52974_2, tmp_60126_2, temp_31717;
              .reg .f32      temp_52981_0, temp_52981_1, temp_52981_2;
              sub.ftz.f32    temp_52981_0, tmp_59506_0, temp_52968_0;
              sub.ftz.f32    temp_52981_1, tmp_59506_1, temp_52968_1;
              sub.ftz.f32    temp_52981_2, tmp_59506_2, temp_52968_2;
              .reg .f32      temp_52984_0, temp_52984_1, temp_52984_2;
              sub.ftz.f32    temp_52984_0, tmp_59508_0, temp_52970_0;
              sub.ftz.f32    temp_52984_1, tmp_59508_1, temp_52970_1;
              sub.ftz.f32    temp_52984_2, tmp_59508_2, temp_52970_2;
              .reg .f32      temp_52987_0, temp_52987_1, temp_52987_2;
              sub.ftz.f32    temp_52987_0, tmp_59510_0, temp_52974_0;
              sub.ftz.f32    temp_52987_1, tmp_59510_1, temp_52974_1;
              sub.ftz.f32    temp_52987_2, tmp_59510_2, temp_52974_2;
              .reg .f32      temp_52991_0, temp_52991_1, temp_52991_2;
              neg.ftz.f32    temp_52991_0, temp_52006_0;
              neg.ftz.f32    temp_52991_1, temp_52006_1;
              neg.ftz.f32    temp_52991_2, temp_52006_2;
              .reg .f32      temp_52993_0, temp_52993_1, temp_52993_2;
              neg.ftz.f32    temp_52993_0, temp_52008_0;
              neg.ftz.f32    temp_52993_1, temp_52008_1;
              neg.ftz.f32    temp_52993_2, temp_52008_2;
              .reg .f32      temp_52995_0, temp_52995_1, temp_52995_2;
              neg.ftz.f32    temp_52995_0, temp_52010_0;
              neg.ftz.f32    temp_52995_1, temp_52010_1;
              neg.ftz.f32    temp_52995_2, temp_52010_2;
              .reg.f32       temp_31724;
              sub.ftz.f32    temp_31724, tmp_59712_2, tmp_59704;
              .reg.f32       temp_31725;
              mul.ftz.f32    temp_31725, tmp_59738, 0F3f000000;
              .reg.f32       temp_31726;
              sub.ftz.f32    temp_31726, temp_31724, temp_31725;
              .reg.s32       state_31731;
              and.b32        state_31731, tmp_59715_10, -32;
              .reg.s32       temp_31732;
              or.b32         temp_31732, state_31731, 16;
              .reg.s32       state_31733;
              or.b32         state_31733, temp_31732, 256;
              .reg.u64       tmp_60127;
              .reg.s32       optix_buffer_id_60128;
              mov.b64        {_, optix_buffer_id_60128}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60129;
{
              .reg.s32       abstract_60130;
              mov.b32        abstract_60130, 1;
              .reg.u64       const_60131;
              mov.b64        const_60131, 544;
              .reg.u64       const_60132;
              mov.b64        const_60132, 0;
 call (ptr_from_optix_id_60129), _rt_buffer_get_id_64, (optix_buffer_id_60128, abstract_60130, abstract_60130, const_60131, const_60132, const_60132, const_60132); // resolving optix id
}
              ld.u64         tmp_60127, [ptr_from_optix_id_60129];
              .reg.s32       tmp_60133;
              .reg.u64       off_60134;
              mad.wide.u32   off_60134, tmp_59446, 48, 16;
              .reg.s32       optix_buffer_id_60135;
              mov.b64        {_, optix_buffer_id_60135}, tmp_60127;
              .reg.u64       ptr_from_optix_id_60136;
{
              .reg.s32       abstract_60137;
              mov.b32        abstract_60137, 1;
              .reg.u64       const_60138;
              mov.b64        const_60138, 512;
              .reg.u64       off_60139;
              add.u64        off_60139, const_60138, off_60134;
              .reg.u64       const_60140;
              mov.b64        const_60140, 0;
 call (ptr_from_optix_id_60136), _rt_buffer_get_id_64, (optix_buffer_id_60135, abstract_60137, abstract_60137, off_60139, const_60140, const_60140, const_60140); // resolving optix id
}
              ld.s32         tmp_60133, [ptr_from_optix_id_60136];
              .reg.s32       temp_31736;
              not.b32        temp_31736, tmp_60133;
              .reg.s32       state_31737;
              or.b32         state_31737, tmp_59715_10, 4096;
              .reg.s32       state_31738;
              .reg.pred      temp_31736_60141;
              setp.ne.s32    temp_31736_60141, 0, temp_31736;
              selp.s32       state_31738, state_31737, tmp_59715_10, temp_31736_60141;
              .reg.s32       state_31758;
              and.b32        state_31758, tmp_59715_10, -98305;
              .reg.s32       state_31741;
              and.b32        state_31741, state_31758, -16385;
              .reg.s32       temp_31743;
              and.b32        temp_31743, state_31733, 511;
              .reg.s32       temp_31744;
              or.b32         temp_31744, temp_52057, temp_31743;
              .reg.s32       temp_31746;
              or.b32         temp_31746, temp_31744, temp_52080;
              .reg.s32       temp_31747;
              and.b32        temp_31747, state_31738, 6144;
              .reg.s32       temp_31748;
              or.b32         temp_31748, temp_31746, temp_31747;
              .reg.s32       temp_31749;
              and.b32        temp_31749, state_31741, 122880;
              .reg.s32       temp_31750;
              or.b32         temp_31750, temp_31748, temp_31749;
              .reg.s32       temp_31752;
              add.cc.s32     temp_31752, tmp_59715_3, 1;
              .reg.s32       tmp_60142;
              ld.s32         tmp_60142, [tmp_59706];
              .reg.s32       temp_53011;
              set.lt.s32.s32 temp_53011, tmp_60142, 16;
              .reg.u64       scl_53012;
              .reg.u64       scl_53013;
              .reg.u64       scl_53014;
              .reg.pred      temp_53011_60145;
              setp.ne.s32    temp_53011_60145, 0, temp_53011;
  @!temp_53011_60145 bra     else_60143;
              .reg.s32       temp_53016;
              add.cc.s32     temp_53016, tmp_60142, 1;
              st.s32         [tmp_59706], temp_53016;
              .reg.u64       off_60146;
              mad.wide.u32   off_60146, tmp_60142, 112, 0;
              .reg.u64       off_60147;
              add.u64        off_60147, tmp_59708, off_60146;
              st.v2.f32      [off_60147], {temp_52981_0, temp_52981_1};
              st.f32         [off_60147+8], temp_52981_2;
              st.v2.f32      [off_60147+16], {temp_52984_0, temp_52984_1};
              st.f32         [off_60147+24], temp_52984_2;
              st.v2.f32      [off_60147+32], {temp_52987_0, temp_52987_1};
              st.f32         [off_60147+40], temp_52987_2;
              st.v2.f32      [off_60147+48], {temp_52991_0, temp_52991_1};
              st.f32         [off_60147+56], temp_52991_2;
              st.v2.f32      [off_60147+64], {temp_52993_0, temp_52993_1};
              st.f32         [off_60147+72], temp_52993_2;
              st.v2.f32      [off_60147+80], {temp_52995_0, temp_52995_1};
              st.f32         [off_60147+88], temp_52995_2;
              st.f32         [off_60147+96], temp_31726;
              .reg.u64       off_60148;
              mad.wide.u32   off_60148, tmp_60142, 112, 0;
              .reg.u64       off_60149;
              add.u64        off_60149, tmp_59710, off_60148;
              .reg.f32       abstract_60150;
              mov.b32        abstract_60150, 0F00000000;
              .reg.f32       abstract_60151;
              mov.b32        abstract_60151, 0F00000000;
              .reg.f32       abstract_60152;
              mov.b32        abstract_60152, 0F00000000;
              st.v2.f32      [off_60149], {abstract_60150, abstract_60151};
              st.f32         [off_60149+8], abstract_60152;
              .reg.f32       abstract_60153;
              mov.b32        abstract_60153, 0F00000000;
              st.f32         [off_60149+16], abstract_60153;
              st.f32         [off_60149+20], tmp_59715_2;
              st.s32         [off_60149+24], temp_31752;
              st.s32         [off_60149+28], scl_41458;
              .reg.s32       abstract_60154;
              mov.b32        abstract_60154, 1;
              st.s32         [off_60149+32], abstract_60154;
              st.v2.f32      [off_60149+48], {temp_52981_0, temp_52981_1};
              st.f32         [off_60149+56], temp_52981_2;
              st.v2.f32      [off_60149+64], {temp_52984_0, temp_52984_1};
              st.f32         [off_60149+72], temp_52984_2;
              st.v2.f32      [off_60149+80], {temp_52987_0, temp_52987_1};
              st.f32         [off_60149+88], temp_52987_2;
              .reg.f32       abstract_60155;
              mov.b32        abstract_60155, 0F00000000;
              st.f32         [off_60149+96], abstract_60155;
              .reg.f32       abstract_60156;
              mov.b32        abstract_60156, 0F3f800000;
              st.f32         [off_60149+100], abstract_60156;
              st.s32         [off_60149+104], tmp_59715_9;
              st.s32         [off_60149+108], temp_31750;
              mov.u64        scl_53012, tmp_59706;
              mov.u64        scl_53013, tmp_59708;
              mov.u64        scl_53014, tmp_59710;
              bra.uni        merge_60144;
else_60143:
              mov.u64        scl_53012, tmp_59706;
              mov.u64        scl_53013, tmp_59708;
              mov.u64        scl_53014, tmp_59710;
merge_60144:
              mov.u64        scl_41475, scl_53012;
              mov.u64        scl_41476, scl_53013;
              mov.u64        scl_41477, scl_53014;
              bra.uni        merge_60121;
else_60120:
              mov.u64        scl_41475, tmp_59706;
              mov.u64        scl_41476, tmp_59708;
              mov.u64        scl_41477, tmp_59710;
merge_60121:
              mov.u64        scl_41443, scl_41475;
              mov.u64        scl_41444, scl_41476;
              mov.u64        scl_41445, scl_41477;
              mov.b32        scl_41441_0, 0F00000000;
              mov.b32        scl_41441_1, 0F00000000;
              mov.b32        scl_41441_2, 0F00000000;
              mov.b32        scl_41442, 0F00000000;
merge_60066:
              mov.u64        scl_41426, scl_41443;
              mov.u64        scl_41427, scl_41444;
              mov.u64        scl_41428, scl_41445;
              mov.b32        scl_41424_0, scl_41441_0;
              mov.b32        scl_41424_1, scl_41441_1;
              mov.b32        scl_41424_2, scl_41441_2;
              mov.b32        scl_41425, scl_41442;
merge_60063:
              mov.u64        scl_41414, scl_41426;
              mov.u64        scl_41415, scl_41427;
              mov.u64        scl_41416, scl_41428;
              mov.b32        scl_41412_0, scl_41424_0;
              mov.b32        scl_41412_1, scl_41424_1;
              mov.b32        scl_41412_2, scl_41424_2;
              mov.b32        scl_41413, scl_41425;
              bra.uni        merge_60060;
else_60059:
              .reg.u64       tmp_60157;
              .reg.s32       optix_buffer_id_60158;
              mov.b64        {_, optix_buffer_id_60158}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60159;
{
              .reg.s32       abstract_60160;
              mov.b32        abstract_60160, 1;
              .reg.u64       const_60161;
              mov.b64        const_60161, 576;
              .reg.u64       const_60162;
              mov.b64        const_60162, 0;
 call (ptr_from_optix_id_60159), _rt_buffer_get_id_64, (optix_buffer_id_60158, abstract_60160, abstract_60160, const_60161, const_60162, const_60162, const_60162); // resolving optix id
}
              ld.u64         tmp_60157, [ptr_from_optix_id_60159];
              .reg.s32       tmp_60163;
              .reg.u64       off_60164;
              mad.wide.u32   off_60164, tmp_59446, 24, 0;
              .reg.s32       optix_buffer_id_60165;
              mov.b64        {_, optix_buffer_id_60165}, tmp_60157;
              .reg.u64       ptr_from_optix_id_60166;
{
              .reg.s32       abstract_60167;
              mov.b32        abstract_60167, 1;
              .reg.u64       const_60168;
              mov.b64        const_60168, 512;
              .reg.u64       off_60169;
              add.u64        off_60169, const_60168, off_60164;
              .reg.u64       const_60170;
              mov.b64        const_60170, 0;
 call (ptr_from_optix_id_60166), _rt_buffer_get_id_64, (optix_buffer_id_60165, abstract_60167, abstract_60167, off_60169, const_60170, const_60170, const_60170); // resolving optix id
}
              ld.s32         tmp_60163, [ptr_from_optix_id_60166];
              .reg.s32       temp_53024;
              set.ne.s32.s32 temp_53024, tmp_60163, 0;
              .reg .f32      scl_41502_0, scl_41502_1, scl_41502_2;
              .reg .f32      scl_41504_0, scl_41504_1, scl_41504_2;
              .reg.pred      temp_53024_60173;
              setp.ne.s32    temp_53024_60173, 0, temp_53024;
  @!temp_53024_60173 bra     else_60171;
              .reg.u64       tmp_60174;
              ld.param.u64   tmp_60174, [f_22353];
              .reg .f32      tmp_60175_0, tmp_60175_1;
              ld.v2.f32      {tmp_60175_0, tmp_60175_1}, [tmp_60174+264];
              .reg.u64       tmp_60176;
              .reg.s32       optix_buffer_id_60177;
              mov.b64        {_, optix_buffer_id_60177}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60178;
{
              .reg.s32       abstract_60179;
              mov.b32        abstract_60179, 1;
              .reg.u64       const_60180;
              mov.b64        const_60180, 576;
              .reg.u64       const_60181;
              mov.b64        const_60181, 0;
 call (ptr_from_optix_id_60178), _rt_buffer_get_id_64, (optix_buffer_id_60177, abstract_60179, abstract_60179, const_60180, const_60181, const_60181, const_60181); // resolving optix id
}
              ld.u64         tmp_60176, [ptr_from_optix_id_60178];
              .reg.s32       tmp_60182;
              .reg.u64       off_60183;
              mad.wide.u32   off_60183, tmp_59446, 24, 8;
              .reg.s32       optix_buffer_id_60184;
              mov.b64        {_, optix_buffer_id_60184}, tmp_60176;
              .reg.u64       ptr_from_optix_id_60185;
{
              .reg.s32       abstract_60186;
              mov.b32        abstract_60186, 1;
              .reg.u64       const_60187;
              mov.b64        const_60187, 512;
              .reg.u64       off_60188;
              add.u64        off_60188, const_60187, off_60183;
              .reg.u64       const_60189;
              mov.b64        const_60189, 0;
 call (ptr_from_optix_id_60185), _rt_buffer_get_id_64, (optix_buffer_id_60184, abstract_60186, abstract_60186, off_60188, const_60189, const_60189, const_60189); // resolving optix id
}
              ld.s32         tmp_60182, [ptr_from_optix_id_60185];
              .reg.u64       tmp_60190;
              .reg.s32       optix_buffer_id_60191;
              mov.b64        {_, optix_buffer_id_60191}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60192;
{
              .reg.s32       abstract_60193;
              mov.b32        abstract_60193, 1;
              .reg.u64       const_60194;
              mov.b64        const_60194, 576;
              .reg.u64       const_60195;
              mov.b64        const_60195, 0;
 call (ptr_from_optix_id_60192), _rt_buffer_get_id_64, (optix_buffer_id_60191, abstract_60193, abstract_60193, const_60194, const_60195, const_60195, const_60195); // resolving optix id
}
              ld.u64         tmp_60190, [ptr_from_optix_id_60192];
              .reg.u64       tmp_60196;
              .reg.u64       off_60197;
              mad.wide.u32   off_60197, tmp_59446, 24, 16;
              .reg.s32       optix_buffer_id_60198;
              mov.b64        {_, optix_buffer_id_60198}, tmp_60190;
              .reg.u64       ptr_from_optix_id_60199;
{
              .reg.s32       abstract_60200;
              mov.b32        abstract_60200, 1;
              .reg.u64       const_60201;
              mov.b64        const_60201, 512;
              .reg.u64       off_60202;
              add.u64        off_60202, const_60201, off_60197;
              .reg.u64       const_60203;
              mov.b64        const_60203, 0;
 call (ptr_from_optix_id_60199), _rt_buffer_get_id_64, (optix_buffer_id_60198, abstract_60200, abstract_60200, off_60202, const_60203, const_60203, const_60203); // resolving optix id
}
              ld.u64         tmp_60196, [ptr_from_optix_id_60199];
              .reg .f32      rgba_53051_0, rgba_53051_1, rgba_53051_2, rgba_53051_3;
{
              .local .align 16 .b8 result_mem_60204[16] ;
              .reg.u64       result_60205;
              mov.u64        result_60205, result_mem_60204;
              cvta.local.u64 result_60205, result_60205;
              .local .align 8 .b8 param_mem_60206[8] ;
              .reg.u64       param_60207;
              mov.u64        param_60207, param_mem_60206;
              cvta.local.u64 param_60207, param_60207;
              st.u64         [param_60207], tmp_60196;
              .local .align 8 .b8 param_mem_60208[8] ;
              .reg.u64       param_60209;
              mov.u64        param_60209, param_mem_60208;
              cvta.local.u64 param_60209, param_60209;
              st.v2.f32      [param_60209], {tmp_60175_0, tmp_60175_1};
              .local .align 4 .b8 param_mem_60210[4] ;
              .reg.u64       param_60211;
              mov.u64        param_60211, param_mem_60210;
              cvta.local.u64 param_60211, param_60211;
              .reg.f32       abstract_60212;
              mov.b32        abstract_60212, 0F00000000;
              st.f32         [param_60211], abstract_60212;
              call.uni       optix_texture_lod, (result_60205, param_60207, param_60209, param_60211);
              ld.v4.f32      {rgba_53051_0, rgba_53051_1, rgba_53051_2, rgba_53051_3}, [result_60205];
}
              .reg.u64       tmp_60213;
              .reg.s32       optix_buffer_id_60214;
              mov.b64        {_, optix_buffer_id_60214}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60215;
{
              .reg.s32       abstract_60216;
              mov.b32        abstract_60216, 1;
              .reg.u64       const_60217;
              mov.b64        const_60217, 536;
              .reg.u64       const_60218;
              mov.b64        const_60218, 0;
 call (ptr_from_optix_id_60215), _rt_buffer_get_id_64, (optix_buffer_id_60214, abstract_60216, abstract_60216, const_60217, const_60218, const_60218, const_60218); // resolving optix id
}
              ld.u64         tmp_60213, [ptr_from_optix_id_60215];
              .reg.s32       tmp_60219;
              .reg.u64       off_60220;
              mad.wide.u32   off_60220, tmp_60182, 32, 0;
              .reg.s32       optix_buffer_id_60221;
              mov.b64        {_, optix_buffer_id_60221}, tmp_60213;
              .reg.u64       ptr_from_optix_id_60222;
{
              .reg.s32       abstract_60223;
              mov.b32        abstract_60223, 1;
              .reg.u64       const_60224;
              mov.b64        const_60224, 512;
              .reg.u64       off_60225;
              add.u64        off_60225, const_60224, off_60220;
              .reg.u64       const_60226;
              mov.b64        const_60226, 0;
 call (ptr_from_optix_id_60222), _rt_buffer_get_id_64, (optix_buffer_id_60221, abstract_60223, abstract_60223, off_60225, const_60226, const_60226, const_60226); // resolving optix id
}
              ld.s32         tmp_60219, [ptr_from_optix_id_60222];
              .reg.s32       is_luminance_53053;
              set.lt.s32.s32 is_luminance_53053, tmp_60219, 4;
              .reg .f32      temp_53056_0, temp_53056_1, temp_53056_2, temp_53056_3;
              .reg.pred      is_luminance_53053_60227;
              setp.ne.s32    is_luminance_53053_60227, 0, is_luminance_53053;
              selp.f32       temp_53056_0, rgba_53051_0, rgba_53051_0, is_luminance_53053_60227;
              selp.f32       temp_53056_1, rgba_53051_0, rgba_53051_1, is_luminance_53053_60227;
              selp.f32       temp_53056_2, rgba_53051_0, rgba_53051_2, is_luminance_53053_60227;
              selp.f32       temp_53056_3, 0F3f800000, rgba_53051_3, is_luminance_53053_60227;
              .reg.s32       temp_53060;
              set.eq.s32.s32 temp_53060, tmp_60163, 2;
              .reg.s32       temp_53067;
              set.eq.ftz.s32.f32 temp_53067, temp_52815, 0F00000000;
              .reg .f32      temp_53068_0, temp_53068_1, temp_53068_2;
              add.ftz.f32    temp_53068_0, temp_52777_0, temp_52778_0;
              add.ftz.f32    temp_53068_1, temp_52777_1, temp_52778_1;
              add.ftz.f32    temp_53068_2, temp_52777_2, temp_52778_2;
              .reg .f32      spec_34386_0, spec_34386_1, spec_34386_2;
              .reg.pred      temp_53067_60228;
              setp.ne.s32    temp_53067_60228, 0, temp_53067;
              selp.f32       spec_34386_0, temp_53068_0, temp_52777_0, temp_53067_60228;
              selp.f32       spec_34386_1, temp_53068_1, temp_52777_1, temp_53067_60228;
              selp.f32       spec_34386_2, temp_53068_2, temp_52777_2, temp_53067_60228;
              .reg .f32      temp_53069_0, temp_53069_1, temp_53069_2;
              mul.ftz.f32    temp_53069_0, spec_34386_0, temp_53056_0;
              mul.ftz.f32    temp_53069_1, spec_34386_1, temp_53056_1;
              mul.ftz.f32    temp_53069_2, spec_34386_2, temp_53056_2;
              .reg .f32      scl_41508_0, scl_41508_1, scl_41508_2;
              .reg.pred      temp_53060_60229;
              setp.ne.s32    temp_53060_60229, 0, temp_53060;
              selp.f32       scl_41508_0, 0F00000000, temp_53069_0, temp_53060_60229;
              selp.f32       scl_41508_1, 0F00000000, temp_53069_1, temp_53060_60229;
              selp.f32       scl_41508_2, 0F00000000, temp_53069_2, temp_53060_60229;
              .reg .f32      scl_41510_0, scl_41510_1, scl_41510_2;
              .reg.pred      temp_53060_60230;
              setp.ne.s32    temp_53060_60230, 0, temp_53060;
              selp.f32       scl_41510_0, temp_53056_0, 0F3f800000, temp_53060_60230;
              selp.f32       scl_41510_1, temp_53056_1, 0F3f800000, temp_53060_60230;
              selp.f32       scl_41510_2, temp_53056_2, 0F3f800000, temp_53060_60230;
              mov.b32        scl_41502_0, scl_41508_0;
              mov.b32        scl_41502_1, scl_41508_1;
              mov.b32        scl_41502_2, scl_41508_2;
              mov.b32        scl_41504_0, scl_41510_0;
              mov.b32        scl_41504_1, scl_41510_1;
              mov.b32        scl_41504_2, scl_41510_2;
              bra.uni        merge_60172;
else_60171:
              mov.b32        scl_41502_0, 0F00000000;
              mov.b32        scl_41502_1, 0F00000000;
              mov.b32        scl_41502_2, 0F00000000;
              mov.b32        scl_41504_0, 0F3f800000;
              mov.b32        scl_41504_1, 0F3f800000;
              mov.b32        scl_41504_2, 0F3f800000;
merge_60172:
              .reg.s32       temp_53074;
              and.b32        temp_53074, tmp_59715_5, 32;
              .reg.s32       temp_53075;
              set.gt.s32.s32 temp_53075, temp_53074, 0;
              .reg.s32       temp_30269;
              not.b32        temp_30269, temp_53075;
              .reg.s32       temp_30270;
              and.b32        temp_30270, tmp_59724, temp_30269;
              .reg.s32       scl_41526;
              .reg.s32       scl_41527;
              .reg .f32      scl_41528_0, scl_41528_1, scl_41528_2;
              .reg .f32      scl_41529_0, scl_41529_1, scl_41529_2;
              .reg.f32       scl_41530;
              .reg.pred      temp_30270_60233;
              setp.ne.s32    temp_30270_60233, 0, temp_30270;
  @!temp_30270_60233 bra     else_60231;
              .reg.u64       tmp_60234;
              .reg.s32       optix_buffer_id_60235;
              mov.b64        {_, optix_buffer_id_60235}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60236;
{
              .reg.s32       abstract_60237;
              mov.b32        abstract_60237, 1;
              .reg.u64       const_60238;
              mov.b64        const_60238, 592;
              .reg.u64       const_60239;
              mov.b64        const_60239, 0;
 call (ptr_from_optix_id_60236), _rt_buffer_get_id_64, (optix_buffer_id_60235, abstract_60237, abstract_60237, const_60238, const_60239, const_60239, const_60239); // resolving optix id
}
              ld.u64         tmp_60234, [ptr_from_optix_id_60236];
              .reg.u64       tmp_60240;
              .reg.u64       off_60241;
              mad.wide.u32   off_60241, tmp_59446, 8, 0;
              .reg.s32       optix_buffer_id_60242;
              mov.b64        {_, optix_buffer_id_60242}, tmp_60234;
              .reg.u64       ptr_from_optix_id_60243;
{
              .reg.s32       abstract_60244;
              mov.b32        abstract_60244, 1;
              .reg.u64       const_60245;
              mov.b64        const_60245, 512;
              .reg.u64       off_60246;
              add.u64        off_60246, const_60245, off_60241;
              .reg.u64       const_60247;
              mov.b64        const_60247, 0;
 call (ptr_from_optix_id_60243), _rt_buffer_get_id_64, (optix_buffer_id_60242, abstract_60244, abstract_60244, off_60246, const_60247, const_60247, const_60247); // resolving optix id
}
              ld.u64         tmp_60240, [ptr_from_optix_id_60243];
              .reg.s32       tmp_60248;
              .reg.s32       optix_buffer_id_60249;
              mov.b64        {_, optix_buffer_id_60249}, tmp_60240;
              .reg.u64       ptr_from_optix_id_60250;
{
              .reg.s32       abstract_60251;
              mov.b32        abstract_60251, 1;
              .reg.u64       const_60252;
              mov.b64        const_60252, 508;
              .reg.u64       const_60253;
              mov.b64        const_60253, 0;
 call (ptr_from_optix_id_60250), _rt_buffer_get_id_64, (optix_buffer_id_60249, abstract_60251, abstract_60251, const_60252, const_60253, const_60253, const_60253); // resolving optix id
}
              ld.s32         tmp_60248, [ptr_from_optix_id_60250];
              .reg.s32       count_nlight_31518;
              sub.cc.s32     count_nlight_31518, tmp_60248, 1;
              .reg.u64       tmp_60254;
              .reg.s32       optix_buffer_id_60255;
              mov.b64        {_, optix_buffer_id_60255}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60256;
{
              .reg.s32       abstract_60257;
              mov.b32        abstract_60257, 1;
              .reg.u64       const_60258;
              mov.b64        const_60258, 584;
              .reg.u64       const_60259;
              mov.b64        const_60259, 0;
 call (ptr_from_optix_id_60256), _rt_buffer_get_id_64, (optix_buffer_id_60255, abstract_60257, abstract_60257, const_60258, const_60259, const_60259, const_60259); // resolving optix id
}
              ld.u64         tmp_60254, [ptr_from_optix_id_60256];
              .reg.s32       tmp_60260;
              .reg.u64       off_60261;
              mad.wide.u32   off_60261, tmp_59695, 112, 0;
              .reg.s32       optix_buffer_id_60262;
              mov.b64        {_, optix_buffer_id_60262}, tmp_60254;
              .reg.u64       ptr_from_optix_id_60263;
{
              .reg.s32       abstract_60264;
              mov.b32        abstract_60264, 1;
              .reg.u64       const_60265;
              mov.b64        const_60265, 512;
              .reg.u64       off_60266;
              add.u64        off_60266, const_60265, off_60261;
              .reg.u64       const_60267;
              mov.b64        const_60267, 0;
 call (ptr_from_optix_id_60263), _rt_buffer_get_id_64, (optix_buffer_id_60262, abstract_60264, abstract_60264, off_60266, const_60267, const_60267, const_60267); // resolving optix id
}
              ld.s32         tmp_60260, [ptr_from_optix_id_60263];
              .reg.s32       temp_54454;
              and.b32        temp_54454, tmp_59715_5, 4;
              .reg.s32       temp_54455;
              set.gt.s32.s32 temp_54455, temp_54454, 0;
              .reg.s32       temp_54457;
              and.b32        temp_54457, tmp_59715_5, 8;
              .reg.s32       temp_54458;
              set.gt.s32.s32 temp_54458, temp_54457, 0;
              .reg.s32       temp_59434;
              or.b32         temp_59434, temp_54455, temp_54458;
              .reg.s32       temp_59435;
              and.b32        temp_59435, tmp_60260, temp_59434;
              .reg .f32      matte_contrib_31526_0, matte_contrib_31526_1, matte_contrib_31526_2;
              .reg.pred      temp_59435_60270;
              setp.ne.s32    temp_59435_60270, 0, temp_59435;
  @!temp_59435_60270 bra     else_60268;
              .reg.s32       scl_41616;
              .reg .f32      scl_41618_0, scl_41618_1;
              .reg .f32      scl_41619_0, scl_41619_1;
              .reg .f32      scl_41620_0, scl_41620_1;
              .reg.pred      temp_54455_60273;
              setp.ne.s32    temp_54455_60273, 0, temp_54455;
  @!temp_54455_60273 bra     else_60271;
              .reg.u64       tmp_60274;
              ld.param.u64   tmp_60274, [imagePlaneUV_22357];
              .reg .f32      tmp_60275_0, tmp_60275_1;
              ld.v2.f32      {tmp_60275_0, tmp_60275_1}, [tmp_60274];
              .reg.u64       tmp_60276;
              ld.param.u64   tmp_60276, [imagePlaneUV_22357];
              .reg .f32      tmp_60277_0, tmp_60277_1;
              ld.v2.f32      {tmp_60277_0, tmp_60277_1}, [tmp_60276+8];
              .reg.u64       tmp_60278;
              ld.param.u64   tmp_60278, [imagePlaneUV_22357];
              .reg .f32      tmp_60279_0, tmp_60279_1;
              ld.v2.f32      {tmp_60279_0, tmp_60279_1}, [tmp_60278+16];
              mov.b32        scl_41616, -1;
              mov.b32        scl_41618_0, tmp_60275_0;
              mov.b32        scl_41618_1, tmp_60275_1;
              mov.b32        scl_41619_0, tmp_60277_0;
              mov.b32        scl_41619_1, tmp_60277_1;
              mov.b32        scl_41620_0, tmp_60279_0;
              mov.b32        scl_41620_1, tmp_60279_1;
              bra.uni        merge_60272;
else_60271:
              .reg.u64       tmp_60280;
              ld.param.u64   tmp_60280, [camera_instance_index_22356];
              .reg.s32       tmp_60281;
              ld.s32         tmp_60281, [tmp_60280];
              .reg.u64       tmp_60282;
              .reg.s32       optix_buffer_id_60283;
              mov.b64        {_, optix_buffer_id_60283}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60284;
{
              .reg.s32       abstract_60285;
              mov.b32        abstract_60285, 1;
              .reg.u64       const_60286;
              mov.b64        const_60286, 680;
              .reg.u64       const_60287;
              mov.b64        const_60287, 0;
 call (ptr_from_optix_id_60284), _rt_buffer_get_id_64, (optix_buffer_id_60283, abstract_60285, abstract_60285, const_60286, const_60287, const_60287, const_60287); // resolving optix id
}
              ld.u64         tmp_60282, [ptr_from_optix_id_60284];
              .reg .f32      tmp_60288_0, tmp_60288_1, tmp_60288_2, tmp_60288_3;
              .reg.u64       off_60289;
              mad.wide.u32   off_60289, tmp_60281, 192, 80;
              .reg.s32       optix_buffer_id_60290;
              mov.b64        {_, optix_buffer_id_60290}, tmp_60282;
              .reg.u64       ptr_from_optix_id_60291;
{
              .reg.s32       abstract_60292;
              mov.b32        abstract_60292, 1;
              .reg.u64       const_60293;
              mov.b64        const_60293, 512;
              .reg.u64       off_60294;
              add.u64        off_60294, const_60293, off_60289;
              .reg.u64       const_60295;
              mov.b64        const_60295, 0;
 call (ptr_from_optix_id_60291), _rt_buffer_get_id_64, (optix_buffer_id_60290, abstract_60292, abstract_60292, off_60294, const_60295, const_60295, const_60295); // resolving optix id
}
              ld.v4.f32      {tmp_60288_0, tmp_60288_1, tmp_60288_2, tmp_60288_3}, [ptr_from_optix_id_60291];
              .reg .f32      temp_54475_0, temp_54475_1, temp_54475_2;
              mul.ftz.f32    temp_54475_0, tmp_60288_0, tmp_59506_0;
              mul.ftz.f32    temp_54475_1, tmp_60288_1, tmp_59506_0;
              mul.ftz.f32    temp_54475_2, tmp_60288_2, tmp_59506_0;
              .reg.u64       tmp_60296;
              ld.param.u64   tmp_60296, [camera_instance_index_22356];
              .reg.s32       tmp_60297;
              ld.s32         tmp_60297, [tmp_60296];
              .reg.u64       tmp_60298;
              .reg.s32       optix_buffer_id_60299;
              mov.b64        {_, optix_buffer_id_60299}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60300;
{
              .reg.s32       abstract_60301;
              mov.b32        abstract_60301, 1;
              .reg.u64       const_60302;
              mov.b64        const_60302, 680;
              .reg.u64       const_60303;
              mov.b64        const_60303, 0;
 call (ptr_from_optix_id_60300), _rt_buffer_get_id_64, (optix_buffer_id_60299, abstract_60301, abstract_60301, const_60302, const_60303, const_60303, const_60303); // resolving optix id
}
              ld.u64         tmp_60298, [ptr_from_optix_id_60300];
              .reg .f32      tmp_60304_0, tmp_60304_1, tmp_60304_2, tmp_60304_3;
              .reg.u64       off_60305;
              mad.wide.u32   off_60305, tmp_60297, 192, 96;
              .reg.s32       optix_buffer_id_60306;
              mov.b64        {_, optix_buffer_id_60306}, tmp_60298;
              .reg.u64       ptr_from_optix_id_60307;
{
              .reg.s32       abstract_60308;
              mov.b32        abstract_60308, 1;
              .reg.u64       const_60309;
              mov.b64        const_60309, 512;
              .reg.u64       off_60310;
              add.u64        off_60310, const_60309, off_60305;
              .reg.u64       const_60311;
              mov.b64        const_60311, 0;
 call (ptr_from_optix_id_60307), _rt_buffer_get_id_64, (optix_buffer_id_60306, abstract_60308, abstract_60308, off_60310, const_60311, const_60311, const_60311); // resolving optix id
}
              ld.v4.f32      {tmp_60304_0, tmp_60304_1, tmp_60304_2, tmp_60304_3}, [ptr_from_optix_id_60307];
              .reg .f32      temp_54489_0, temp_54489_1, temp_54489_2;
              mul.ftz.f32    temp_54489_0, tmp_60304_0, tmp_59506_1;
              mul.ftz.f32    temp_54489_1, tmp_60304_1, tmp_59506_1;
              mul.ftz.f32    temp_54489_2, tmp_60304_2, tmp_59506_1;
              .reg .f32      temp_54492_0, temp_54492_1, temp_54492_2;
              add.ftz.f32    temp_54492_0, temp_54475_0, temp_54489_0;
              add.ftz.f32    temp_54492_1, temp_54475_1, temp_54489_1;
              add.ftz.f32    temp_54492_2, temp_54475_2, temp_54489_2;
              .reg.u64       tmp_60312;
              ld.param.u64   tmp_60312, [camera_instance_index_22356];
              .reg.s32       tmp_60313;
              ld.s32         tmp_60313, [tmp_60312];
              .reg.u64       tmp_60314;
              .reg.s32       optix_buffer_id_60315;
              mov.b64        {_, optix_buffer_id_60315}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60316;
{
              .reg.s32       abstract_60317;
              mov.b32        abstract_60317, 1;
              .reg.u64       const_60318;
              mov.b64        const_60318, 680;
              .reg.u64       const_60319;
              mov.b64        const_60319, 0;
 call (ptr_from_optix_id_60316), _rt_buffer_get_id_64, (optix_buffer_id_60315, abstract_60317, abstract_60317, const_60318, const_60319, const_60319, const_60319); // resolving optix id
}
              ld.u64         tmp_60314, [ptr_from_optix_id_60316];
              .reg .f32      tmp_60320_0, tmp_60320_1, tmp_60320_2, tmp_60320_3;
              .reg.u64       off_60321;
              mad.wide.u32   off_60321, tmp_60313, 192, 112;
              .reg.s32       optix_buffer_id_60322;
              mov.b64        {_, optix_buffer_id_60322}, tmp_60314;
              .reg.u64       ptr_from_optix_id_60323;
{
              .reg.s32       abstract_60324;
              mov.b32        abstract_60324, 1;
              .reg.u64       const_60325;
              mov.b64        const_60325, 512;
              .reg.u64       off_60326;
              add.u64        off_60326, const_60325, off_60321;
              .reg.u64       const_60327;
              mov.b64        const_60327, 0;
 call (ptr_from_optix_id_60323), _rt_buffer_get_id_64, (optix_buffer_id_60322, abstract_60324, abstract_60324, off_60326, const_60327, const_60327, const_60327); // resolving optix id
}
              ld.v4.f32      {tmp_60320_0, tmp_60320_1, tmp_60320_2, tmp_60320_3}, [ptr_from_optix_id_60323];
              .reg .f32      temp_54506_0, temp_54506_1, temp_54506_2;
              mul.ftz.f32    temp_54506_0, tmp_60320_0, tmp_59506_2;
              mul.ftz.f32    temp_54506_1, tmp_60320_1, tmp_59506_2;
              mul.ftz.f32    temp_54506_2, tmp_60320_2, tmp_59506_2;
              .reg .f32      temp_54509_0, temp_54509_1, temp_54509_2;
              add.ftz.f32    temp_54509_0, temp_54492_0, temp_54506_0;
              add.ftz.f32    temp_54509_1, temp_54492_1, temp_54506_1;
              add.ftz.f32    temp_54509_2, temp_54492_2, temp_54506_2;
              .reg.u64       tmp_60328;
              ld.param.u64   tmp_60328, [camera_instance_index_22356];
              .reg.s32       tmp_60329;
              ld.s32         tmp_60329, [tmp_60328];
              .reg.u64       tmp_60330;
              .reg.s32       optix_buffer_id_60331;
              mov.b64        {_, optix_buffer_id_60331}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60332;
{
              .reg.s32       abstract_60333;
              mov.b32        abstract_60333, 1;
              .reg.u64       const_60334;
              mov.b64        const_60334, 680;
              .reg.u64       const_60335;
              mov.b64        const_60335, 0;
 call (ptr_from_optix_id_60332), _rt_buffer_get_id_64, (optix_buffer_id_60331, abstract_60333, abstract_60333, const_60334, const_60335, const_60335, const_60335); // resolving optix id
}
              ld.u64         tmp_60330, [ptr_from_optix_id_60332];
              .reg .f32      tmp_60336_0, tmp_60336_1, tmp_60336_2, tmp_60336_3;
              .reg.u64       off_60337;
              mad.wide.u32   off_60337, tmp_60329, 192, 128;
              .reg.s32       optix_buffer_id_60338;
              mov.b64        {_, optix_buffer_id_60338}, tmp_60330;
              .reg.u64       ptr_from_optix_id_60339;
{
              .reg.s32       abstract_60340;
              mov.b32        abstract_60340, 1;
              .reg.u64       const_60341;
              mov.b64        const_60341, 512;
              .reg.u64       off_60342;
              add.u64        off_60342, const_60341, off_60337;
              .reg.u64       const_60343;
              mov.b64        const_60343, 0;
 call (ptr_from_optix_id_60339), _rt_buffer_get_id_64, (optix_buffer_id_60338, abstract_60340, abstract_60340, off_60342, const_60343, const_60343, const_60343); // resolving optix id
}
              ld.v4.f32      {tmp_60336_0, tmp_60336_1, tmp_60336_2, tmp_60336_3}, [ptr_from_optix_id_60339];
              .reg .f32      temp_54514_0, temp_54514_1, temp_54514_2;
              add.ftz.f32    temp_54514_0, tmp_60336_0, temp_54509_0;
              add.ftz.f32    temp_54514_1, tmp_60336_1, temp_54509_1;
              add.ftz.f32    temp_54514_2, tmp_60336_2, temp_54509_2;
              .reg .f32      temp_54555_0, temp_54555_1, temp_54555_2;
              mul.ftz.f32    temp_54555_0, tmp_60288_0, tmp_59712_1_0_0_0;
              mul.ftz.f32    temp_54555_1, tmp_60288_1, tmp_59712_1_0_0_0;
              mul.ftz.f32    temp_54555_2, tmp_60288_2, tmp_59712_1_0_0_0;
              .reg .f32      temp_54558_0, temp_54558_1, temp_54558_2;
              mul.ftz.f32    temp_54558_0, tmp_60288_0, tmp_59712_1_0_1_0;
              mul.ftz.f32    temp_54558_1, tmp_60288_1, tmp_59712_1_0_1_0;
              mul.ftz.f32    temp_54558_2, tmp_60288_2, tmp_59712_1_0_1_0;
              .reg .f32      temp_54562_0, temp_54562_1, temp_54562_2;
              mul.ftz.f32    temp_54562_0, tmp_60288_0, tmp_59712_1_0_2_0;
              mul.ftz.f32    temp_54562_1, tmp_60288_1, tmp_59712_1_0_2_0;
              mul.ftz.f32    temp_54562_2, tmp_60288_2, tmp_59712_1_0_2_0;
              .reg .f32      temp_54574_0, temp_54574_1, temp_54574_2;
              mul.ftz.f32    temp_54574_0, tmp_60304_0, tmp_59712_1_0_0_1;
              mul.ftz.f32    temp_54574_1, tmp_60304_1, tmp_59712_1_0_0_1;
              mul.ftz.f32    temp_54574_2, tmp_60304_2, tmp_59712_1_0_0_1;
              .reg .f32      temp_54577_0, temp_54577_1, temp_54577_2;
              mul.ftz.f32    temp_54577_0, tmp_60304_0, tmp_59712_1_0_1_1;
              mul.ftz.f32    temp_54577_1, tmp_60304_1, tmp_59712_1_0_1_1;
              mul.ftz.f32    temp_54577_2, tmp_60304_2, tmp_59712_1_0_1_1;
              .reg .f32      temp_54581_0, temp_54581_1, temp_54581_2;
              mul.ftz.f32    temp_54581_0, tmp_60304_0, tmp_59712_1_0_2_1;
              mul.ftz.f32    temp_54581_1, tmp_60304_1, tmp_59712_1_0_2_1;
              mul.ftz.f32    temp_54581_2, tmp_60304_2, tmp_59712_1_0_2_1;
              .reg .f32      temp_54583_0, temp_54583_1, temp_54583_2;
              add.ftz.f32    temp_54583_0, temp_54555_0, temp_54574_0;
              add.ftz.f32    temp_54583_1, temp_54555_1, temp_54574_1;
              add.ftz.f32    temp_54583_2, temp_54555_2, temp_54574_2;
              .reg .f32      temp_54584_0, temp_54584_1, temp_54584_2;
              add.ftz.f32    temp_54584_0, temp_54558_0, temp_54577_0;
              add.ftz.f32    temp_54584_1, temp_54558_1, temp_54577_1;
              add.ftz.f32    temp_54584_2, temp_54558_2, temp_54577_2;
              .reg .f32      temp_54585_0, temp_54585_1, temp_54585_2;
              add.ftz.f32    temp_54585_0, temp_54562_0, temp_54581_0;
              add.ftz.f32    temp_54585_1, temp_54562_1, temp_54581_1;
              add.ftz.f32    temp_54585_2, temp_54562_2, temp_54581_2;
              .reg .f32      temp_54596_0, temp_54596_1, temp_54596_2;
              mul.ftz.f32    temp_54596_0, tmp_60320_0, tmp_59712_1_0_0_2;
              mul.ftz.f32    temp_54596_1, tmp_60320_1, tmp_59712_1_0_0_2;
              mul.ftz.f32    temp_54596_2, tmp_60320_2, tmp_59712_1_0_0_2;
              .reg .f32      temp_54599_0, temp_54599_1, temp_54599_2;
              mul.ftz.f32    temp_54599_0, tmp_60320_0, tmp_59712_1_0_1_2;
              mul.ftz.f32    temp_54599_1, tmp_60320_1, tmp_59712_1_0_1_2;
              mul.ftz.f32    temp_54599_2, tmp_60320_2, tmp_59712_1_0_1_2;
              .reg .f32      temp_54603_0, temp_54603_1, temp_54603_2;
              mul.ftz.f32    temp_54603_0, tmp_60320_0, tmp_59712_1_0_2_2;
              mul.ftz.f32    temp_54603_1, tmp_60320_1, tmp_59712_1_0_2_2;
              mul.ftz.f32    temp_54603_2, tmp_60320_2, tmp_59712_1_0_2_2;
              .reg .f32      temp_54605_0, temp_54605_1, temp_54605_2;
              add.ftz.f32    temp_54605_0, temp_54583_0, temp_54596_0;
              add.ftz.f32    temp_54605_1, temp_54583_1, temp_54596_1;
              add.ftz.f32    temp_54605_2, temp_54583_2, temp_54596_2;
              .reg .f32      temp_54606_0, temp_54606_1, temp_54606_2;
              add.ftz.f32    temp_54606_0, temp_54584_0, temp_54599_0;
              add.ftz.f32    temp_54606_1, temp_54584_1, temp_54599_1;
              add.ftz.f32    temp_54606_2, temp_54584_2, temp_54599_2;
              .reg .f32      temp_54607_0, temp_54607_1, temp_54607_2;
              add.ftz.f32    temp_54607_0, temp_54585_0, temp_54603_0;
              add.ftz.f32    temp_54607_1, temp_54585_1, temp_54603_1;
              add.ftz.f32    temp_54607_2, temp_54585_2, temp_54603_2;
              .reg.u64       tmp_60344;
              ld.param.u64   tmp_60344, [camera_instance_index_22356];
              .reg.s32       tmp_60345;
              ld.s32         tmp_60345, [tmp_60344];
              .reg.u64       tmp_60346;
              .reg.s32       optix_buffer_id_60347;
              mov.b64        {_, optix_buffer_id_60347}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60348;
{
              .reg.s32       abstract_60349;
              mov.b32        abstract_60349, 1;
              .reg.u64       const_60350;
              mov.b64        const_60350, 680;
              .reg.u64       const_60351;
              mov.b64        const_60351, 0;
 call (ptr_from_optix_id_60348), _rt_buffer_get_id_64, (optix_buffer_id_60347, abstract_60349, abstract_60349, const_60350, const_60351, const_60351, const_60351); // resolving optix id
}
              ld.u64         tmp_60346, [ptr_from_optix_id_60348];
              .reg.f32       tmp_60352;
              .reg.u64       off_60353;
              mad.wide.u32   off_60353, tmp_60345, 192, 144;
              .reg.s32       optix_buffer_id_60354;
              mov.b64        {_, optix_buffer_id_60354}, tmp_60346;
              .reg.u64       ptr_from_optix_id_60355;
{
              .reg.s32       abstract_60356;
              mov.b32        abstract_60356, 1;
              .reg.u64       const_60357;
              mov.b64        const_60357, 512;
              .reg.u64       off_60358;
              add.u64        off_60358, const_60357, off_60353;
              .reg.u64       const_60359;
              mov.b64        const_60359, 0;
 call (ptr_from_optix_id_60355), _rt_buffer_get_id_64, (optix_buffer_id_60354, abstract_60356, abstract_60356, off_60358, const_60359, const_60359, const_60359); // resolving optix id
}
              ld.f32         tmp_60352, [ptr_from_optix_id_60355];
              .reg.f32       temp_54633;
              neg.ftz.f32    temp_54633, temp_54605_2;
              .reg.f32       temp_54634;
              neg.ftz.f32    temp_54634, temp_54606_2;
              .reg.f32       temp_54635;
              neg.ftz.f32    temp_54635, temp_54607_2;
              .reg.f32       temp_54636;
              div.approx.ftz.f32 temp_54636, tmp_60352, temp_54633;
              .reg.f32       temp_54637;
              mul.ftz.f32    temp_54637, tmp_60352, temp_54634;
              .reg.f32       temp_54638;
              neg.ftz.f32    temp_54638, temp_54637;
              .reg.f32       temp_54639;
              mul.ftz.f32    temp_54639, temp_54633, temp_54633;
              .reg.f32       temp_54640;
              div.approx.ftz.f32 temp_54640, temp_54638, temp_54639;
              .reg.f32       temp_54641;
              mul.ftz.f32    temp_54641, tmp_60352, temp_54635;
              .reg.f32       temp_54642;
              neg.ftz.f32    temp_54642, temp_54641;
              .reg.f32       temp_54643;
              div.approx.ftz.f32 temp_54643, temp_54642, temp_54639;
              .reg .f32      temp_54647_0, temp_54647_1;
              mul.ftz.f32    temp_54647_0, temp_54605_0, temp_54636;
              mul.ftz.f32    temp_54647_1, temp_54605_1, temp_54636;
              .reg .f32      temp_54648_0, temp_54648_1;
              mul.ftz.f32    temp_54648_0, temp_54606_0, temp_54636;
              mul.ftz.f32    temp_54648_1, temp_54606_1, temp_54636;
              .reg .f32      temp_54649_0, temp_54649_1;
              mul.ftz.f32    temp_54649_0, temp_54605_0, temp_54640;
              mul.ftz.f32    temp_54649_1, temp_54605_1, temp_54640;
              .reg .f32      temp_54650_0, temp_54650_1;
              add.ftz.f32    temp_54650_0, temp_54648_0, temp_54649_0;
              add.ftz.f32    temp_54650_1, temp_54648_1, temp_54649_1;
              .reg .f32      temp_54651_0, temp_54651_1;
              mul.ftz.f32    temp_54651_0, temp_54607_0, temp_54636;
              mul.ftz.f32    temp_54651_1, temp_54607_1, temp_54636;
              .reg .f32      temp_54652_0, temp_54652_1;
              mul.ftz.f32    temp_54652_0, temp_54605_0, temp_54643;
              mul.ftz.f32    temp_54652_1, temp_54605_1, temp_54643;
              .reg .f32      temp_54653_0, temp_54653_1;
              add.ftz.f32    temp_54653_0, temp_54651_0, temp_54652_0;
              add.ftz.f32    temp_54653_1, temp_54651_1, temp_54652_1;
              .reg.u64       tmp_60360;
              ld.param.u64   tmp_60360, [camera_instance_index_22356];
              .reg.s32       tmp_60361;
              ld.s32         tmp_60361, [tmp_60360];
              .reg.u64       tmp_60362;
              .reg.s32       optix_buffer_id_60363;
              mov.b64        {_, optix_buffer_id_60363}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60364;
{
              .reg.s32       abstract_60365;
              mov.b32        abstract_60365, 1;
              .reg.u64       const_60366;
              mov.b64        const_60366, 680;
              .reg.u64       const_60367;
              mov.b64        const_60367, 0;
 call (ptr_from_optix_id_60364), _rt_buffer_get_id_64, (optix_buffer_id_60363, abstract_60365, abstract_60365, const_60366, const_60367, const_60367, const_60367); // resolving optix id
}
              ld.u64         tmp_60362, [ptr_from_optix_id_60364];
              .reg .f32      tmp_60368_0, tmp_60368_1;
              .reg.u64       off_60369;
              mad.wide.u32   off_60369, tmp_60361, 192, 168;
              .reg.s32       optix_buffer_id_60370;
              mov.b64        {_, optix_buffer_id_60370}, tmp_60362;
              .reg.u64       ptr_from_optix_id_60371;
{
              .reg.s32       abstract_60372;
              mov.b32        abstract_60372, 1;
              .reg.u64       const_60373;
              mov.b64        const_60373, 512;
              .reg.u64       off_60374;
              add.u64        off_60374, const_60373, off_60369;
              .reg.u64       const_60375;
              mov.b64        const_60375, 0;
 call (ptr_from_optix_id_60371), _rt_buffer_get_id_64, (optix_buffer_id_60370, abstract_60372, abstract_60372, off_60374, const_60375, const_60375, const_60375); // resolving optix id
}
              ld.v2.f32      {tmp_60368_0, tmp_60368_1}, [ptr_from_optix_id_60371];
              .reg .f32      temp_54655_0, temp_54655_1;
              div.approx.ftz.f32 temp_54655_0, temp_54647_0, tmp_60368_0;
              div.approx.ftz.f32 temp_54655_1, temp_54647_1, tmp_60368_1;
              .reg .f32      temp_54656_0, temp_54656_1;
              mul.ftz.f32    temp_54656_0, temp_54650_0, tmp_60368_0;
              mul.ftz.f32    temp_54656_1, temp_54650_1, tmp_60368_1;
              .reg .f32      temp_54657_0, temp_54657_1;
              mul.ftz.f32    temp_54657_0, tmp_60368_0, tmp_60368_0;
              mul.ftz.f32    temp_54657_1, tmp_60368_1, tmp_60368_1;
              .reg .f32      temp_54658_0, temp_54658_1;
              div.approx.ftz.f32 temp_54658_0, temp_54656_0, temp_54657_0;
              div.approx.ftz.f32 temp_54658_1, temp_54656_1, temp_54657_1;
              .reg .f32      temp_54659_0, temp_54659_1;
              mul.ftz.f32    temp_54659_0, temp_54653_0, tmp_60368_0;
              mul.ftz.f32    temp_54659_1, temp_54653_1, tmp_60368_1;
              .reg .f32      temp_54660_0, temp_54660_1;
              div.approx.ftz.f32 temp_54660_0, temp_54659_0, temp_54657_0;
              div.approx.ftz.f32 temp_54660_1, temp_54659_1, temp_54657_1;
              .reg .f32      temp_54662_0, temp_54662_1;
              add.ftz.f32    temp_54662_0, temp_54655_0, 0F3f000000;
              add.ftz.f32    temp_54662_1, temp_54655_1, 0F3f000000;
              .reg.s32       temp_54673;
              set.lt.ftz.s32.f32 temp_54673, temp_54514_2, 0F00000000;
              mov.b32        scl_41616, temp_54673;
              mov.b32        scl_41618_0, temp_54662_0;
              mov.b32        scl_41618_1, temp_54662_1;
              mov.b32        scl_41619_0, temp_54658_0;
              mov.b32        scl_41619_1, temp_54658_1;
              mov.b32        scl_41620_0, temp_54660_0;
              mov.b32        scl_41620_1, temp_54660_1;
merge_60272:
              .reg .f32      matte_contrib_31565_0, matte_contrib_31565_1, matte_contrib_31565_2;
              .reg.pred      scl_41616_60378;
              setp.ne.s32    scl_41616_60378, 0, scl_41616;
  @!scl_41616_60378 bra      else_60376;
              .reg .f32      scl_54675_0, scl_54675_1, scl_54675_2;
              .reg.f32       scl_54676;
              .reg.pred      tmp_60260_60381;
              setp.ne.s32    tmp_60260_60381, 0, tmp_60260;
  @!tmp_60260_60381 bra      else_60379;
              .reg.u64       tmp_60382;
              .reg.s32       optix_buffer_id_60383;
              mov.b64        {_, optix_buffer_id_60383}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60384;
{
              .reg.s32       abstract_60385;
              mov.b32        abstract_60385, 1;
              .reg.u64       const_60386;
              mov.b64        const_60386, 584;
              .reg.u64       const_60387;
              mov.b64        const_60387, 0;
 call (ptr_from_optix_id_60384), _rt_buffer_get_id_64, (optix_buffer_id_60383, abstract_60385, abstract_60385, const_60386, const_60387, const_60387, const_60387); // resolving optix id
}
              ld.u64         tmp_60382, [ptr_from_optix_id_60384];
              .reg .f32      tmp_60388_0, tmp_60388_1;
              .reg.u64       off_60389;
              mad.wide.u32   off_60389, tmp_59695, 112, 88;
              .reg.s32       optix_buffer_id_60390;
              mov.b64        {_, optix_buffer_id_60390}, tmp_60382;
              .reg.u64       ptr_from_optix_id_60391;
{
              .reg.s32       abstract_60392;
              mov.b32        abstract_60392, 1;
              .reg.u64       const_60393;
              mov.b64        const_60393, 512;
              .reg.u64       off_60394;
              add.u64        off_60394, const_60393, off_60389;
              .reg.u64       const_60395;
              mov.b64        const_60395, 0;
 call (ptr_from_optix_id_60391), _rt_buffer_get_id_64, (optix_buffer_id_60390, abstract_60392, abstract_60392, off_60394, const_60395, const_60395, const_60395); // resolving optix id
}
              ld.v2.f32      {tmp_60388_0, tmp_60388_1}, [ptr_from_optix_id_60391];
              .reg.u64       tmp_60396;
              .reg.s32       optix_buffer_id_60397;
              mov.b64        {_, optix_buffer_id_60397}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60398;
{
              .reg.s32       abstract_60399;
              mov.b32        abstract_60399, 1;
              .reg.u64       const_60400;
              mov.b64        const_60400, 584;
              .reg.u64       const_60401;
              mov.b64        const_60401, 0;
 call (ptr_from_optix_id_60398), _rt_buffer_get_id_64, (optix_buffer_id_60397, abstract_60399, abstract_60399, const_60400, const_60401, const_60401, const_60401); // resolving optix id
}
              ld.u64         tmp_60396, [ptr_from_optix_id_60398];
              .reg .f32      tmp_60402_0, tmp_60402_1;
              .reg.u64       off_60403;
              mad.wide.u32   off_60403, tmp_59695, 112, 96;
              .reg.s32       optix_buffer_id_60404;
              mov.b64        {_, optix_buffer_id_60404}, tmp_60396;
              .reg.u64       ptr_from_optix_id_60405;
{
              .reg.s32       abstract_60406;
              mov.b32        abstract_60406, 1;
              .reg.u64       const_60407;
              mov.b64        const_60407, 512;
              .reg.u64       off_60408;
              add.u64        off_60408, const_60407, off_60403;
              .reg.u64       const_60409;
              mov.b64        const_60409, 0;
 call (ptr_from_optix_id_60405), _rt_buffer_get_id_64, (optix_buffer_id_60404, abstract_60406, abstract_60406, off_60408, const_60409, const_60409, const_60409); // resolving optix id
}
              ld.v2.f32      {tmp_60402_0, tmp_60402_1}, [ptr_from_optix_id_60405];
              .reg .f32      temp_54681_0, temp_54681_1;
              sub.ftz.f32    temp_54681_0, tmp_60402_0, tmp_60388_0;
              sub.ftz.f32    temp_54681_1, tmp_60402_1, tmp_60388_1;
              .reg .f32      temp_54683_0, temp_54683_1;
              mul.ftz.f32    temp_54683_0, scl_41618_0, temp_54681_0;
              mul.ftz.f32    temp_54683_1, scl_41618_1, temp_54681_1;
              .reg .f32      temp_54685_0, temp_54685_1;
              mul.ftz.f32    temp_54685_0, scl_41619_0, temp_54681_0;
              mul.ftz.f32    temp_54685_1, scl_41619_1, temp_54681_1;
              .reg .f32      temp_54687_0, temp_54687_1;
              mul.ftz.f32    temp_54687_0, scl_41620_0, temp_54681_0;
              mul.ftz.f32    temp_54687_1, scl_41620_1, temp_54681_1;
              .reg .f32      temp_54688_0, temp_54688_1;
              add.ftz.f32    temp_54688_0, temp_54683_0, tmp_60388_0;
              add.ftz.f32    temp_54688_1, temp_54683_1, tmp_60388_1;
              .reg.u64       tmp_60410;
              .reg.s32       optix_buffer_id_60411;
              mov.b64        {_, optix_buffer_id_60411}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60412;
{
              .reg.s32       abstract_60413;
              mov.b32        abstract_60413, 1;
              .reg.u64       const_60414;
              mov.b64        const_60414, 584;
              .reg.u64       const_60415;
              mov.b64        const_60415, 0;
 call (ptr_from_optix_id_60412), _rt_buffer_get_id_64, (optix_buffer_id_60411, abstract_60413, abstract_60413, const_60414, const_60415, const_60415, const_60415); // resolving optix id
}
              ld.u64         tmp_60410, [ptr_from_optix_id_60412];
              .reg .f32      tmp_60416_0, tmp_60416_1, tmp_60416_2;
              .reg.u64       off_60417;
              mad.wide.u32   off_60417, tmp_59695, 112, 48;
              .reg.s32       optix_buffer_id_60418;
              mov.b64        {_, optix_buffer_id_60418}, tmp_60410;
              .reg.u64       ptr_from_optix_id_60419;
{
              .reg.s32       abstract_60420;
              mov.b32        abstract_60420, 1;
              .reg.u64       const_60421;
              mov.b64        const_60421, 512;
              .reg.u64       off_60422;
              add.u64        off_60422, const_60421, off_60417;
              .reg.u64       const_60423;
              mov.b64        const_60423, 0;
 call (ptr_from_optix_id_60419), _rt_buffer_get_id_64, (optix_buffer_id_60418, abstract_60420, abstract_60420, off_60422, const_60423, const_60423, const_60423); // resolving optix id
}
              ld.v2.f32      {tmp_60416_0, tmp_60416_1}, [ptr_from_optix_id_60419];
              ld.f32         tmp_60416_2, [ptr_from_optix_id_60419+8];
              .reg.u64       tmp_60424;
              .reg.s32       optix_buffer_id_60425;
              mov.b64        {_, optix_buffer_id_60425}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60426;
{
              .reg.s32       abstract_60427;
              mov.b32        abstract_60427, 1;
              .reg.u64       const_60428;
              mov.b64        const_60428, 584;
              .reg.u64       const_60429;
              mov.b64        const_60429, 0;
 call (ptr_from_optix_id_60426), _rt_buffer_get_id_64, (optix_buffer_id_60425, abstract_60427, abstract_60427, const_60428, const_60429, const_60429, const_60429); // resolving optix id
}
              ld.u64         tmp_60424, [ptr_from_optix_id_60426];
              .reg.f32       tmp_60430;
              .reg.u64       off_60431;
              mad.wide.u32   off_60431, tmp_59695, 112, 64;
              .reg.s32       optix_buffer_id_60432;
              mov.b64        {_, optix_buffer_id_60432}, tmp_60424;
              .reg.u64       ptr_from_optix_id_60433;
{
              .reg.s32       abstract_60434;
              mov.b32        abstract_60434, 1;
              .reg.u64       const_60435;
              mov.b64        const_60435, 512;
              .reg.u64       off_60436;
              add.u64        off_60436, const_60435, off_60431;
              .reg.u64       const_60437;
              mov.b64        const_60437, 0;
 call (ptr_from_optix_id_60433), _rt_buffer_get_id_64, (optix_buffer_id_60432, abstract_60434, abstract_60434, off_60436, const_60437, const_60437, const_60437); // resolving optix id
}
              ld.f32         tmp_60430, [ptr_from_optix_id_60433];
              .reg.u64       tmp_60438;
              .reg.s32       optix_buffer_id_60439;
              mov.b64        {_, optix_buffer_id_60439}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60440;
{
              .reg.s32       abstract_60441;
              mov.b32        abstract_60441, 1;
              .reg.u64       const_60442;
              mov.b64        const_60442, 584;
              .reg.u64       const_60443;
              mov.b64        const_60443, 0;
 call (ptr_from_optix_id_60440), _rt_buffer_get_id_64, (optix_buffer_id_60439, abstract_60441, abstract_60441, const_60442, const_60443, const_60443, const_60443); // resolving optix id
}
              ld.u64         tmp_60438, [ptr_from_optix_id_60440];
              .reg.s32       tmp_60444;
              .reg.u64       off_60445;
              mad.wide.u32   off_60445, tmp_59695, 112, 16;
              .reg.s32       optix_buffer_id_60446;
              mov.b64        {_, optix_buffer_id_60446}, tmp_60438;
              .reg.u64       ptr_from_optix_id_60447;
{
              .reg.s32       abstract_60448;
              mov.b32        abstract_60448, 1;
              .reg.u64       const_60449;
              mov.b64        const_60449, 512;
              .reg.u64       off_60450;
              add.u64        off_60450, const_60449, off_60445;
              .reg.u64       const_60451;
              mov.b64        const_60451, 0;
 call (ptr_from_optix_id_60447), _rt_buffer_get_id_64, (optix_buffer_id_60446, abstract_60448, abstract_60448, off_60450, const_60451, const_60451, const_60451); // resolving optix id
}
              ld.s32         tmp_60444, [ptr_from_optix_id_60447];
              .reg.u64       tmp_60452;
              .reg.s32       optix_buffer_id_60453;
              mov.b64        {_, optix_buffer_id_60453}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60454;
{
              .reg.s32       abstract_60455;
              mov.b32        abstract_60455, 1;
              .reg.u64       const_60456;
              mov.b64        const_60456, 584;
              .reg.u64       const_60457;
              mov.b64        const_60457, 0;
 call (ptr_from_optix_id_60454), _rt_buffer_get_id_64, (optix_buffer_id_60453, abstract_60455, abstract_60455, const_60456, const_60457, const_60457, const_60457); // resolving optix id
}
              ld.u64         tmp_60452, [ptr_from_optix_id_60454];
              .reg.u64       tmp_60458;
              .reg.u64       off_60459;
              mad.wide.u32   off_60459, tmp_59695, 112, 24;
              .reg.s32       optix_buffer_id_60460;
              mov.b64        {_, optix_buffer_id_60460}, tmp_60452;
              .reg.u64       ptr_from_optix_id_60461;
{
              .reg.s32       abstract_60462;
              mov.b32        abstract_60462, 1;
              .reg.u64       const_60463;
              mov.b64        const_60463, 512;
              .reg.u64       off_60464;
              add.u64        off_60464, const_60463, off_60459;
              .reg.u64       const_60465;
              mov.b64        const_60465, 0;
 call (ptr_from_optix_id_60461), _rt_buffer_get_id_64, (optix_buffer_id_60460, abstract_60462, abstract_60462, off_60464, const_60465, const_60465, const_60465); // resolving optix id
}
              ld.u64         tmp_60458, [ptr_from_optix_id_60461];
              .reg.u64       tmp_60466;
              .reg.s32       optix_buffer_id_60467;
              mov.b64        {_, optix_buffer_id_60467}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60468;
{
              .reg.s32       abstract_60469;
              mov.b32        abstract_60469, 1;
              .reg.u64       const_60470;
              mov.b64        const_60470, 536;
              .reg.u64       const_60471;
              mov.b64        const_60471, 0;
 call (ptr_from_optix_id_60468), _rt_buffer_get_id_64, (optix_buffer_id_60467, abstract_60469, abstract_60469, const_60470, const_60471, const_60471, const_60471); // resolving optix id
}
              ld.u64         tmp_60466, [ptr_from_optix_id_60468];
              .reg .s32      tmp_60472_0, tmp_60472_1;
              .reg.u64       off_60473;
              mad.wide.u32   off_60473, tmp_60444, 32, 16;
              .reg.s32       optix_buffer_id_60474;
              mov.b64        {_, optix_buffer_id_60474}, tmp_60466;
              .reg.u64       ptr_from_optix_id_60475;
{
              .reg.s32       abstract_60476;
              mov.b32        abstract_60476, 1;
              .reg.u64       const_60477;
              mov.b64        const_60477, 512;
              .reg.u64       off_60478;
              add.u64        off_60478, const_60477, off_60473;
              .reg.u64       const_60479;
              mov.b64        const_60479, 0;
 call (ptr_from_optix_id_60475), _rt_buffer_get_id_64, (optix_buffer_id_60474, abstract_60476, abstract_60476, off_60478, const_60479, const_60479, const_60479); // resolving optix id
}
              ld.v2.s32      {tmp_60472_0, tmp_60472_1}, [ptr_from_optix_id_60475];
              .reg .f32      temp_54698_0, temp_54698_1;
              cvt.rn.f32.s32 temp_54698_0, tmp_60472_0;
              cvt.rn.f32.s32 temp_54698_1, tmp_60472_1;
              .reg .f32      temp_54699_0, temp_54699_1;
              mul.ftz.f32    temp_54699_0, temp_54698_0, temp_54685_0;
              mul.ftz.f32    temp_54699_1, temp_54698_1, temp_54685_1;
              .reg.f32       temp_54700;
              mul.ftz.f32    temp_54700, temp_54699_0, temp_54699_0;
              fma.rn.ftz.f32 temp_54700, temp_54699_1, temp_54699_1, temp_54700;
              .reg.f32       temp_54701;
              sqrt.approx.f32 temp_54701, temp_54700;
              .reg .f32      temp_54702_0, temp_54702_1;
              mul.ftz.f32    temp_54702_0, temp_54698_0, temp_54687_0;
              mul.ftz.f32    temp_54702_1, temp_54698_1, temp_54687_1;
              .reg.f32       temp_54703;
              mul.ftz.f32    temp_54703, temp_54702_0, temp_54702_0;
              fma.rn.ftz.f32 temp_54703, temp_54702_1, temp_54702_1, temp_54703;
              .reg.f32       temp_54704;
              sqrt.approx.f32 temp_54704, temp_54703;
              .reg.f32       rho_54705;
              max.ftz.f32    rho_54705, temp_54701, temp_54704;
              .reg.f32       rho_54706;
              max.f32        rho_54706, rho_54705, 0F3f800000;
              min.f32        rho_54706, rho_54706, 0F47000000;
              .reg.f32       temp_54707;
              lg2.approx.ftz.f32 temp_54707, rho_54706;
              .reg .f32      rgba_54708_0, rgba_54708_1, rgba_54708_2, rgba_54708_3;
{
              .local .align 16 .b8 result_mem_60480[16] ;
              .reg.u64       result_60481;
              mov.u64        result_60481, result_mem_60480;
              cvta.local.u64 result_60481, result_60481;
              .local .align 8 .b8 param_mem_60482[8] ;
              .reg.u64       param_60483;
              mov.u64        param_60483, param_mem_60482;
              cvta.local.u64 param_60483, param_60483;
              st.u64         [param_60483], tmp_60458;
              .local .align 8 .b8 param_mem_60484[8] ;
              .reg.u64       param_60485;
              mov.u64        param_60485, param_mem_60484;
              cvta.local.u64 param_60485, param_60485;
              st.v2.f32      [param_60485], {temp_54688_0, temp_54688_1};
              .local .align 4 .b8 param_mem_60486[4] ;
              .reg.u64       param_60487;
              mov.u64        param_60487, param_mem_60486;
              cvta.local.u64 param_60487, param_60487;
              st.f32         [param_60487], temp_54707;
              call.uni       optix_texture_lod, (result_60481, param_60483, param_60485, param_60487);
              ld.v4.f32      {rgba_54708_0, rgba_54708_1, rgba_54708_2, rgba_54708_3}, [result_60481];
}
              .reg.u64       tmp_60488;
              .reg.s32       optix_buffer_id_60489;
              mov.b64        {_, optix_buffer_id_60489}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60490;
{
              .reg.s32       abstract_60491;
              mov.b32        abstract_60491, 1;
              .reg.u64       const_60492;
              mov.b64        const_60492, 536;
              .reg.u64       const_60493;
              mov.b64        const_60493, 0;
 call (ptr_from_optix_id_60490), _rt_buffer_get_id_64, (optix_buffer_id_60489, abstract_60491, abstract_60491, const_60492, const_60493, const_60493, const_60493); // resolving optix id
}
              ld.u64         tmp_60488, [ptr_from_optix_id_60490];
              .reg.s32       tmp_60494;
              .reg.u64       off_60495;
              mad.wide.u32   off_60495, tmp_60444, 32, 0;
              .reg.s32       optix_buffer_id_60496;
              mov.b64        {_, optix_buffer_id_60496}, tmp_60488;
              .reg.u64       ptr_from_optix_id_60497;
{
              .reg.s32       abstract_60498;
              mov.b32        abstract_60498, 1;
              .reg.u64       const_60499;
              mov.b64        const_60499, 512;
              .reg.u64       off_60500;
              add.u64        off_60500, const_60499, off_60495;
              .reg.u64       const_60501;
              mov.b64        const_60501, 0;
 call (ptr_from_optix_id_60497), _rt_buffer_get_id_64, (optix_buffer_id_60496, abstract_60498, abstract_60498, off_60500, const_60501, const_60501, const_60501); // resolving optix id
}
              ld.s32         tmp_60494, [ptr_from_optix_id_60497];
              .reg.s32       is_luminance_54710;
              set.lt.s32.s32 is_luminance_54710, tmp_60494, 4;
              .reg .f32      temp_54713_0, temp_54713_1, temp_54713_2, temp_54713_3;
              .reg.pred      is_luminance_54710_60502;
              setp.ne.s32    is_luminance_54710_60502, 0, is_luminance_54710;
              selp.f32       temp_54713_0, rgba_54708_0, rgba_54708_0, is_luminance_54710_60502;
              selp.f32       temp_54713_1, rgba_54708_0, rgba_54708_1, is_luminance_54710_60502;
              selp.f32       temp_54713_2, rgba_54708_0, rgba_54708_2, is_luminance_54710_60502;
              selp.f32       temp_54713_3, 0F3f800000, rgba_54708_3, is_luminance_54710_60502;
              .reg.u64       tmp_60503;
              .reg.s32       optix_buffer_id_60504;
              mov.b64        {_, optix_buffer_id_60504}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60505;
{
              .reg.s32       abstract_60506;
              mov.b32        abstract_60506, 1;
              .reg.u64       const_60507;
              mov.b64        const_60507, 584;
              .reg.u64       const_60508;
              mov.b64        const_60508, 0;
 call (ptr_from_optix_id_60505), _rt_buffer_get_id_64, (optix_buffer_id_60504, abstract_60506, abstract_60506, const_60507, const_60508, const_60508, const_60508); // resolving optix id
}
              ld.u64         tmp_60503, [ptr_from_optix_id_60505];
              .reg.s32       tmp_60509;
              .reg.u64       off_60510;
              mad.wide.u32   off_60510, tmp_59695, 112, 32;
              .reg.s32       optix_buffer_id_60511;
              mov.b64        {_, optix_buffer_id_60511}, tmp_60503;
              .reg.u64       ptr_from_optix_id_60512;
{
              .reg.s32       abstract_60513;
              mov.b32        abstract_60513, 1;
              .reg.u64       const_60514;
              mov.b64        const_60514, 512;
              .reg.u64       off_60515;
              add.u64        off_60515, const_60514, off_60510;
              .reg.u64       const_60516;
              mov.b64        const_60516, 0;
 call (ptr_from_optix_id_60512), _rt_buffer_get_id_64, (optix_buffer_id_60511, abstract_60513, abstract_60513, off_60515, const_60516, const_60516, const_60516); // resolving optix id
}
              ld.s32         tmp_60509, [ptr_from_optix_id_60512];
              .reg.s32       temp_54715;
              set.eq.s32.s32 temp_54715, tmp_60509, 1;
              .reg.f32       fraction_u_54716;
              .reg.pred      temp_54715_60519;
              setp.ne.s32    temp_54715_60519, 0, temp_54715;
  @!temp_54715_60519 bra     else_60517;
              .reg.f32       temp_54741;
              cvt.rn.f32.s32 temp_54741, tmp_60472_0;
              .reg.f32       min_clamp_54742;
              div.approx.ftz.f32 min_clamp_54742, 0F3f000000, temp_54741;
              .reg.f32       max_clamp_54743;
              sub.ftz.f32    max_clamp_54743, 0F3f800000, min_clamp_54742;
              .reg.f32       wrapped_coord_54744;
              max.f32        wrapped_coord_54744, temp_54688_0, min_clamp_54742;
              min.f32        wrapped_coord_54744, wrapped_coord_54744, max_clamp_54743;
              .reg.f32       temp_54745;
              sub.ftz.f32    temp_54745, temp_54688_0, wrapped_coord_54744;
              .reg.f32       temp_54746;
              abs.ftz.f32    temp_54746, temp_54745;
              .reg.f32       temp_54747;
              mul.ftz.f32    temp_54747, temp_54746, temp_54741;
              .reg.f32       temp_54748;
              max.f32        temp_54748, temp_54747, 0F00000000;
              min.f32        temp_54748, temp_54748, 0F3f800000;
              mov.b32        fraction_u_54716, temp_54748;
              bra.uni        merge_60518;
else_60517:
              mov.b32        fraction_u_54716, 0F00000000;
merge_60518:
              .reg.u64       tmp_60520;
              .reg.s32       optix_buffer_id_60521;
              mov.b64        {_, optix_buffer_id_60521}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60522;
{
              .reg.s32       abstract_60523;
              mov.b32        abstract_60523, 1;
              .reg.u64       const_60524;
              mov.b64        const_60524, 584;
              .reg.u64       const_60525;
              mov.b64        const_60525, 0;
 call (ptr_from_optix_id_60522), _rt_buffer_get_id_64, (optix_buffer_id_60521, abstract_60523, abstract_60523, const_60524, const_60525, const_60525, const_60525); // resolving optix id
}
              ld.u64         tmp_60520, [ptr_from_optix_id_60522];
              .reg.s32       tmp_60526;
              .reg.u64       off_60527;
              mad.wide.u32   off_60527, tmp_59695, 112, 36;
              .reg.s32       optix_buffer_id_60528;
              mov.b64        {_, optix_buffer_id_60528}, tmp_60520;
              .reg.u64       ptr_from_optix_id_60529;
{
              .reg.s32       abstract_60530;
              mov.b32        abstract_60530, 1;
              .reg.u64       const_60531;
              mov.b64        const_60531, 512;
              .reg.u64       off_60532;
              add.u64        off_60532, const_60531, off_60527;
              .reg.u64       const_60533;
              mov.b64        const_60533, 0;
 call (ptr_from_optix_id_60529), _rt_buffer_get_id_64, (optix_buffer_id_60528, abstract_60530, abstract_60530, off_60532, const_60533, const_60533, const_60533); // resolving optix id
}
              ld.s32         tmp_60526, [ptr_from_optix_id_60529];
              .reg.s32       temp_54718;
              set.eq.s32.s32 temp_54718, tmp_60526, 1;
              .reg.f32       fraction_v_54719;
              .reg.pred      temp_54718_60536;
              setp.ne.s32    temp_54718_60536, 0, temp_54718;
  @!temp_54718_60536 bra     else_60534;
              .reg.f32       temp_54731;
              cvt.rn.f32.s32 temp_54731, tmp_60472_1;
              .reg.f32       min_clamp_54732;
              div.approx.ftz.f32 min_clamp_54732, 0F3f000000, temp_54731;
              .reg.f32       max_clamp_54733;
              sub.ftz.f32    max_clamp_54733, 0F3f800000, min_clamp_54732;
              .reg.f32       wrapped_coord_54734;
              max.f32        wrapped_coord_54734, temp_54688_1, min_clamp_54732;
              min.f32        wrapped_coord_54734, wrapped_coord_54734, max_clamp_54733;
              .reg.f32       temp_54735;
              sub.ftz.f32    temp_54735, temp_54688_1, wrapped_coord_54734;
              .reg.f32       temp_54736;
              abs.ftz.f32    temp_54736, temp_54735;
              .reg.f32       temp_54737;
              mul.ftz.f32    temp_54737, temp_54736, temp_54731;
              .reg.f32       temp_54738;
              max.f32        temp_54738, temp_54737, 0F00000000;
              min.f32        temp_54738, temp_54738, 0F3f800000;
              mov.b32        fraction_v_54719, temp_54738;
              bra.uni        merge_60535;
else_60534:
              mov.b32        fraction_v_54719, 0F00000000;
merge_60535:
              .reg .f32      color_54721_0, color_54721_1, color_54721_2, color_54721_3;
              sub.rn.ftz.f32 color_54721_0, tmp_60416_0, temp_54713_0;
              fma.rn.f32     color_54721_0, fraction_u_54716, color_54721_0, temp_54713_0;
              sub.rn.ftz.f32 color_54721_1, tmp_60416_1, temp_54713_1;
              fma.rn.f32     color_54721_1, fraction_u_54716, color_54721_1, temp_54713_1;
              sub.rn.ftz.f32 color_54721_2, tmp_60416_2, temp_54713_2;
              fma.rn.f32     color_54721_2, fraction_u_54716, color_54721_2, temp_54713_2;
              sub.rn.ftz.f32 color_54721_3, tmp_60430, temp_54713_3;
              fma.rn.f32     color_54721_3, fraction_u_54716, color_54721_3, temp_54713_3;
              .reg .f32      color_54723_0, color_54723_1, color_54723_2, color_54723_3;
              sub.rn.ftz.f32 color_54723_0, tmp_60416_0, color_54721_0;
              fma.rn.f32     color_54723_0, fraction_v_54719, color_54723_0, color_54721_0;
              sub.rn.ftz.f32 color_54723_1, tmp_60416_1, color_54721_1;
              fma.rn.f32     color_54723_1, fraction_v_54719, color_54723_1, color_54721_1;
              sub.rn.ftz.f32 color_54723_2, tmp_60416_2, color_54721_2;
              fma.rn.f32     color_54723_2, fraction_v_54719, color_54723_2, color_54721_2;
              sub.rn.ftz.f32 color_54723_3, tmp_60430, color_54721_3;
              fma.rn.f32     color_54723_3, fraction_v_54719, color_54723_3, color_54721_3;
              .reg.u64       tmp_60537;
              .reg.s32       optix_buffer_id_60538;
              mov.b64        {_, optix_buffer_id_60538}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60539;
{
              .reg.s32       abstract_60540;
              mov.b32        abstract_60540, 1;
              .reg.u64       const_60541;
              mov.b64        const_60541, 584;
              .reg.u64       const_60542;
              mov.b64        const_60542, 0;
 call (ptr_from_optix_id_60539), _rt_buffer_get_id_64, (optix_buffer_id_60538, abstract_60540, abstract_60540, const_60541, const_60542, const_60542, const_60542); // resolving optix id
}
              ld.u64         tmp_60537, [ptr_from_optix_id_60539];
              .reg.f32       tmp_60543;
              .reg.u64       off_60544;
              mad.wide.u32   off_60544, tmp_59695, 112, 80;
              .reg.s32       optix_buffer_id_60545;
              mov.b64        {_, optix_buffer_id_60545}, tmp_60537;
              .reg.u64       ptr_from_optix_id_60546;
{
              .reg.s32       abstract_60547;
              mov.b32        abstract_60547, 1;
              .reg.u64       const_60548;
              mov.b64        const_60548, 512;
              .reg.u64       off_60549;
              add.u64        off_60549, const_60548, off_60544;
              .reg.u64       const_60550;
              mov.b64        const_60550, 0;
 call (ptr_from_optix_id_60546), _rt_buffer_get_id_64, (optix_buffer_id_60545, abstract_60547, abstract_60547, off_60549, const_60550, const_60550, const_60550); // resolving optix id
}
              ld.f32         tmp_60543, [ptr_from_optix_id_60546];
              .reg .f32      temp_54728_0, temp_54728_1, temp_54728_2;
              mul.ftz.f32    temp_54728_0, tmp_60543, color_54723_0;
              mul.ftz.f32    temp_54728_1, tmp_60543, color_54723_1;
              mul.ftz.f32    temp_54728_2, tmp_60543, color_54723_2;
              mov.b32        scl_54675_0, temp_54728_0;
              mov.b32        scl_54675_1, temp_54728_1;
              mov.b32        scl_54675_2, temp_54728_2;
              mov.b32        scl_54676, color_54723_3;
              bra.uni        merge_60380;
else_60379:
              mov.b32        scl_54675_0, 0F00000000;
              mov.b32        scl_54675_1, 0F00000000;
              mov.b32        scl_54675_2, 0F00000000;
              mov.b32        scl_54676, 0F00000000;
merge_60380:
              .reg .f32      temp_54751_0, temp_54751_1, temp_54751_2;
              mul.ftz.f32    temp_54751_0, scl_54676, scl_54675_0;
              mul.ftz.f32    temp_54751_1, scl_54676, scl_54675_1;
              mul.ftz.f32    temp_54751_2, scl_54676, scl_54675_2;
              mov.b32        matte_contrib_31565_0, temp_54751_0;
              mov.b32        matte_contrib_31565_1, temp_54751_1;
              mov.b32        matte_contrib_31565_2, temp_54751_2;
              bra.uni        merge_60377;
else_60376:
              mov.b32        matte_contrib_31565_0, 0F00000000;
              mov.b32        matte_contrib_31565_1, 0F00000000;
              mov.b32        matte_contrib_31565_2, 0F00000000;
merge_60377:
              mov.b32        matte_contrib_31526_0, matte_contrib_31565_0;
              mov.b32        matte_contrib_31526_1, matte_contrib_31565_1;
              mov.b32        matte_contrib_31526_2, matte_contrib_31565_2;
              bra.uni        merge_60269;
else_60268:
              mov.b32        matte_contrib_31526_0, 0F00000000;
              mov.b32        matte_contrib_31526_1, 0F00000000;
              mov.b32        matte_contrib_31526_2, 0F00000000;
merge_60269:
              .reg .f32      temp_54765_0, temp_54765_1, temp_54765_2;
              mul.ftz.f32    temp_54765_0, temp_52777_2, 0F3e38c49c;
              mul.ftz.f32    temp_54765_1, temp_52777_2, 0F3d93d07d;
              mul.ftz.f32    temp_54765_2, temp_52777_2, 0F3f734721;
              .reg .f32      temp_54766_0, temp_54766_1, temp_54766_2;
              fma.rn.ftz.f32 temp_54766_0, 0F3eb71437, temp_52777_1, temp_54765_0;
              fma.rn.ftz.f32 temp_54766_1, 0F3f371437, temp_52777_1, temp_54765_1;
              fma.rn.ftz.f32 temp_54766_2, 0F3df41aef, temp_52777_1, temp_54765_2;
              .reg .f32      temp_54767_0, temp_54767_1, temp_54767_2;
              fma.rn.ftz.f32 temp_54767_0, 0F3ed32d7c, temp_52777_0, temp_54766_0;
              fma.rn.ftz.f32 temp_54767_1, 0F3e59c6ed, temp_52777_0, temp_54766_1;
              fma.rn.ftz.f32 temp_54767_2, 0F3c9e6221, temp_52777_0, temp_54766_2;
              .reg.s32       temp_34788;
              set.gt.ftz.s32.f32 temp_34788, temp_54767_1, 0F00000000;
              .reg.s32       temp_54771;
              set.eq.ftz.s32.f32 temp_54771, temp_52815, 0F00000000;
              .reg.s32       is_diffuse_34779;
              .reg.pred      temp_54771_60553;
              setp.ne.s32    temp_54771_60553, 0, temp_54771;
  @!temp_54771_60553 bra     else_60551;
              .reg .f32      temp_54781_0, temp_54781_1, temp_54781_2;
              mul.ftz.f32    temp_54781_0, temp_52778_2, 0F3e38c49c;
              mul.ftz.f32    temp_54781_1, temp_52778_2, 0F3d93d07d;
              mul.ftz.f32    temp_54781_2, temp_52778_2, 0F3f734721;
              .reg .f32      temp_54782_0, temp_54782_1, temp_54782_2;
              fma.rn.ftz.f32 temp_54782_0, 0F3eb71437, temp_52778_1, temp_54781_0;
              fma.rn.ftz.f32 temp_54782_1, 0F3f371437, temp_52778_1, temp_54781_1;
              fma.rn.ftz.f32 temp_54782_2, 0F3df41aef, temp_52778_1, temp_54781_2;
              .reg .f32      temp_54783_0, temp_54783_1, temp_54783_2;
              fma.rn.ftz.f32 temp_54783_0, 0F3ed32d7c, temp_52778_0, temp_54782_0;
              fma.rn.ftz.f32 temp_54783_1, 0F3e59c6ed, temp_52778_0, temp_54782_1;
              fma.rn.ftz.f32 temp_54783_2, 0F3c9e6221, temp_52778_0, temp_54782_2;
              .reg.s32       temp_34783;
              set.gt.ftz.s32.f32 temp_34783, temp_54783_1, 0F00000000;
              .reg.s32       temp_34784;
              or.b32         temp_34784, temp_34783, temp_34788;
              mov.b32        is_diffuse_34779, temp_34784;
              bra.uni        merge_60552;
else_60551:
              mov.b32        is_diffuse_34779, temp_34788;
merge_60552:
              .reg .f32      scl_41634_0, scl_41634_1, scl_41634_2;
              .reg.f32       scl_41635;
              .reg.pred      is_diffuse_34779_60556;
              setp.ne.s32    is_diffuse_34779_60556, 0, is_diffuse_34779;
  @!is_diffuse_34779_60556 bra else_60554;
              .reg.s32       temp_31540;
              set.lt.s32.s32 temp_31540, tmp_60248, 2;
              .reg.f32       trans_from_matte_31541;
              .reg.pred      temp_31540_60559;
              setp.ne.s32    temp_31540_60559, 0, temp_31540;
  @!temp_31540_60559 bra.uni else_60557;
              mov.b32        trans_from_matte_31541, tmp_59715_1;
              bra.uni        merge_60558;
else_60557:
              mov.b32        trans_from_matte_31541, 0F00000000;
merge_60558:
              mov.b32        scl_41634_0, scl_41502_0;
              mov.b32        scl_41634_1, scl_41502_1;
              mov.b32        scl_41634_2, scl_41502_2;
              mov.b32        scl_41635, trans_from_matte_31541;
              bra.uni        merge_60555;
else_60554:
              mov.b32        scl_41634_0, scl_41502_0;
              mov.b32        scl_41634_1, scl_41502_1;
              mov.b32        scl_41634_2, scl_41502_2;
              mov.b32        scl_41635, 0F00000000;
merge_60555:
              mov.b32        scl_41526, count_nlight_31518;
              mov.b32        scl_41527, is_diffuse_34779;
              mov.b32        scl_41528_0, scl_41634_0;
              mov.b32        scl_41528_1, scl_41634_1;
              mov.b32        scl_41528_2, scl_41634_2;
              mov.b32        scl_41529_0, matte_contrib_31526_0;
              mov.b32        scl_41529_1, matte_contrib_31526_1;
              mov.b32        scl_41529_2, matte_contrib_31526_2;
              mov.b32        scl_41530, scl_41635;
              bra.uni        merge_60232;
else_60231:
              mov.b32        scl_41526, 0;
              mov.b32        scl_41527, 0;
              mov.b32        scl_41528_0, scl_41502_0;
              mov.b32        scl_41528_1, scl_41502_1;
              mov.b32        scl_41528_2, scl_41502_2;
              mov.b32        scl_41529_0, 0F00000000;
              mov.b32        scl_41529_1, 0F00000000;
              mov.b32        scl_41529_2, 0F00000000;
              mov.b32        scl_41530, 0F00000000;
merge_60232:
              .reg.u64       tmp_60560;
              ld.param.u64   tmp_60560, [f_22353];
              .reg .f32      tmp_60561_0, tmp_60561_1, tmp_60561_2;
              ld.v2.f32      {tmp_60561_0, tmp_60561_1}, [tmp_60560+48];
              ld.f32         tmp_60561_2, [tmp_60560+56];
              .reg .f32      temp_54792_0, temp_54792_1, temp_54792_2;
              mul.ftz.f32    temp_54792_0, tmp_60561_0, temp_52006_0;
              mul.ftz.f32    temp_54792_1, tmp_60561_1, temp_52006_1;
              mul.ftz.f32    temp_54792_2, tmp_60561_2, temp_52006_2;
              .reg.f32       temp_54809;
              add.ftz.f32    temp_54809, temp_54792_0, temp_54792_1;
              .reg.f32       temp_54815;
              add.ftz.f32    temp_54815, temp_54809, temp_54792_2;
              .reg.s32       temp_54821;
              set.gt.ftz.s32.f32 temp_54821, temp_54815, 0F00000000;
              .reg.f32       side_31504;
              .reg.pred      temp_54821_60562;
              setp.ne.s32    temp_54821_60562, 0, temp_54821;
              selp.f32       side_31504, 0F3f800000, 0Fbf800000, temp_54821_60562;
              .reg.s32       temp_30284;
              not.b32        temp_30284, scl_41527;
              .reg.s32       temp_30285;
              and.b32        temp_30285, tmp_59724, temp_30284;
              .reg .f32      scl_41660_0, scl_41660_1, scl_41660_2;
              .reg.u64       scl_41675;
              .reg.u64       scl_41676;
              .reg.u64       scl_41677;
              .reg.s32       scl_41663;
              .reg.pred      temp_30285_60565;
              setp.ne.s32    temp_30285_60565, 0, temp_30285;
  @!temp_30285_60565 bra     else_60563;
              .reg .f32      temp_54822_0, temp_54822_1, temp_54822_2;
              add.ftz.f32    temp_54822_0, scl_41528_0, scl_41529_0;
              add.ftz.f32    temp_54822_1, scl_41528_1, scl_41529_1;
              add.ftz.f32    temp_54822_2, scl_41528_2, scl_41529_2;
              mov.b32        scl_41660_0, temp_54822_0;
              mov.b32        scl_41660_1, temp_54822_1;
              mov.b32        scl_41660_2, temp_54822_2;
              mov.u64        scl_41675, tmp_59706;
              mov.u64        scl_41676, tmp_59708;
              mov.u64        scl_41677, tmp_59710;
              mov.b32        scl_41663, tmp_59715_4;
              bra.uni        merge_60564;
else_60563:
              .reg.u64       tmp_60566;
              .reg.s32       optix_buffer_id_60567;
              mov.b64        {_, optix_buffer_id_60567}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60568;
{
              .reg.s32       abstract_60569;
              mov.b32        abstract_60569, 1;
              .reg.u64       const_60570;
              mov.b64        const_60570, 592;
              .reg.u64       const_60571;
              mov.b64        const_60571, 0;
 call (ptr_from_optix_id_60568), _rt_buffer_get_id_64, (optix_buffer_id_60567, abstract_60569, abstract_60569, const_60570, const_60571, const_60571, const_60571); // resolving optix id
}
              ld.u64         tmp_60566, [ptr_from_optix_id_60568];
              .reg.u64       tmp_60572;
              .reg.u64       off_60573;
              mad.wide.u32   off_60573, tmp_59446, 8, 0;
              .reg.s32       optix_buffer_id_60574;
              mov.b64        {_, optix_buffer_id_60574}, tmp_60566;
              .reg.u64       ptr_from_optix_id_60575;
{
              .reg.s32       abstract_60576;
              mov.b32        abstract_60576, 1;
              .reg.u64       const_60577;
              mov.b64        const_60577, 512;
              .reg.u64       off_60578;
              add.u64        off_60578, const_60577, off_60573;
              .reg.u64       const_60579;
              mov.b64        const_60579, 0;
 call (ptr_from_optix_id_60575), _rt_buffer_get_id_64, (optix_buffer_id_60574, abstract_60576, abstract_60576, off_60578, const_60579, const_60579, const_60579); // resolving optix id
}
              ld.u64         tmp_60572, [ptr_from_optix_id_60575];
              .reg.s32       tmp_60580;
              .reg.s32       optix_buffer_id_60581;
              mov.b64        {_, optix_buffer_id_60581}, tmp_60572;
              .reg.u64       ptr_from_optix_id_60582;
{
              .reg.s32       abstract_60583;
              mov.b32        abstract_60583, 1;
              .reg.u64       const_60584;
              mov.b64        const_60584, 508;
              .reg.u64       const_60585;
              mov.b64        const_60585, 0;
 call (ptr_from_optix_id_60582), _rt_buffer_get_id_64, (optix_buffer_id_60581, abstract_60583, abstract_60583, const_60584, const_60585, const_60585, const_60585); // resolving optix id
}
              ld.s32         tmp_60580, [ptr_from_optix_id_60582];
              .reg.s32       temp_31240;
              set.lt.s32.s32 temp_31240, 1, tmp_60580;
              .reg .f32      scl_41708_0, scl_41708_1, scl_41708_2;
              .reg.u64       scl_41723;
              .reg.u64       scl_41724;
              .reg.u64       scl_41725;
              .reg.s32       scl_41711;
              .reg.pred      temp_31240_60588;
              setp.ne.s32    temp_31240_60588, 0, temp_31240;
  @!temp_31240_60588 bra.uni else_60586;
              .reg.s32       cdf_iter_31254;
              mov.b32        cdf_iter_31254, 1;
              .reg .f32      lighting_31255_0, lighting_31255_1, lighting_31255_2;
              mov.b32        lighting_31255_0, scl_41528_0;
              mov.b32        lighting_31255_1, scl_41528_1;
              mov.b32        lighting_31255_2, scl_41528_2;
              .reg.u64       scl_41801;
              mov.u64        scl_41801, tmp_59706;
              .reg.u64       scl_41802;
              mov.u64        scl_41802, tmp_59708;
              .reg.u64       scl_41803;
              mov.u64        scl_41803, tmp_59710;
              .reg.s32       sampler_31258;
              mov.b32        sampler_31258, tmp_59715_4;
              .reg.f32       side_31259;
              mov.b32        side_31259, side_31504;
              .reg .f32      scl_41744_0, scl_41744_1, scl_41744_2;
              .reg.u64       scl_41759;
              .reg.u64       scl_41760;
              .reg.u64       scl_41761;
              .reg.s32       scl_41747;
doloop_60589:
              .reg.s32       tmp_60590;
              .reg.u64       off_60591;
              mad.wide.u32   off_60591, cdf_iter_31254, 20, 16;
              .reg.s32       optix_buffer_id_60592;
              mov.b64        {_, optix_buffer_id_60592}, tmp_60572;
              .reg.u64       ptr_from_optix_id_60593;
{
              .reg.s32       abstract_60594;
              mov.b32        abstract_60594, 1;
              .reg.u64       const_60595;
              mov.b64        const_60595, 512;
              .reg.u64       off_60596;
              add.u64        off_60596, const_60595, off_60591;
              .reg.u64       const_60597;
              mov.b64        const_60597, 0;
 call (ptr_from_optix_id_60593), _rt_buffer_get_id_64, (optix_buffer_id_60592, abstract_60594, abstract_60594, off_60596, const_60597, const_60597, const_60597); // resolving optix id
}
              ld.s32         tmp_60590, [ptr_from_optix_id_60593];
              .reg.u64       tmp_60598;
              .reg.s32       optix_buffer_id_60599;
              mov.b64        {_, optix_buffer_id_60599}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60600;
{
              .reg.s32       abstract_60601;
              mov.b32        abstract_60601, 1;
              .reg.u64       const_60602;
              mov.b64        const_60602, 640;
              .reg.u64       const_60603;
              mov.b64        const_60603, 0;
 call (ptr_from_optix_id_60600), _rt_buffer_get_id_64, (optix_buffer_id_60599, abstract_60601, abstract_60601, const_60602, const_60603, const_60603, const_60603); // resolving optix id
}
              ld.u64         tmp_60598, [ptr_from_optix_id_60600];
              .reg.s32       tmp_60604;
              .reg.s32       optix_buffer_id_60605;
              mov.b64        {_, optix_buffer_id_60605}, tmp_60598;
              .reg.u64       ptr_from_optix_id_60606;
{
              .reg.s32       abstract_60607;
              mov.b32        abstract_60607, 1;
              .reg.u64       const_60608;
              mov.b64        const_60608, 512;
              .reg.u64       const_60609;
              mov.b64        const_60609, 0;
 call (ptr_from_optix_id_60606), _rt_buffer_get_id_64, (optix_buffer_id_60605, abstract_60607, abstract_60607, const_60608, const_60609, const_60609, const_60609); // resolving optix id
}
              ld.s32         tmp_60604, [ptr_from_optix_id_60606];
              .reg.s32       temp_34807;
              set.eq.s32.s32 temp_34807, tmp_60604, tmp_60590;
              .reg .f32      scl_41818_0, scl_41818_1, scl_41818_2;
              .reg.u64       scl_41834;
              .reg.u64       scl_41835;
              .reg.u64       scl_41836;
              .reg.s32       scl_41821;
              .reg.f32       scl_41822;
              .reg.pred      temp_34807_60612;
              setp.ne.s32    temp_34807_60612, 0, temp_34807;
  @!temp_34807_60612 bra     else_60610;
              .reg.s32       tmp_60613;
              .reg.u64       off_60614;
              mad.wide.u32   off_60614, cdf_iter_31254, 20, 8;
              .reg.s32       optix_buffer_id_60615;
              mov.b64        {_, optix_buffer_id_60615}, tmp_60572;
              .reg.u64       ptr_from_optix_id_60616;
{
              .reg.s32       abstract_60617;
              mov.b32        abstract_60617, 1;
              .reg.u64       const_60618;
              mov.b64        const_60618, 512;
              .reg.u64       off_60619;
              add.u64        off_60619, const_60618, off_60614;
              .reg.u64       const_60620;
              mov.b64        const_60620, 0;
 call (ptr_from_optix_id_60616), _rt_buffer_get_id_64, (optix_buffer_id_60615, abstract_60617, abstract_60617, off_60619, const_60620, const_60620, const_60620); // resolving optix id
}
              ld.s32         tmp_60613, [ptr_from_optix_id_60616];
              .reg.u64       tmp_60621;
              .reg.s32       optix_buffer_id_60622;
              mov.b64        {_, optix_buffer_id_60622}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60623;
{
              .reg.s32       abstract_60624;
              mov.b32        abstract_60624, 1;
              .reg.u64       const_60625;
              mov.b64        const_60625, 632;
              .reg.u64       const_60626;
              mov.b64        const_60626, 0;
 call (ptr_from_optix_id_60623), _rt_buffer_get_id_64, (optix_buffer_id_60622, abstract_60624, abstract_60624, const_60625, const_60626, const_60626, const_60626); // resolving optix id
}
              ld.u64         tmp_60621, [ptr_from_optix_id_60623];
              .reg .f32      tmp_60627_0, tmp_60627_1, tmp_60627_2, tmp_60627_3;
              .reg.u64       off_60628;
              mad.wide.u32   off_60628, tmp_60613, 160, 16;
              .reg.s32       optix_buffer_id_60629;
              mov.b64        {_, optix_buffer_id_60629}, tmp_60621;
              .reg.u64       ptr_from_optix_id_60630;
{
              .reg.s32       abstract_60631;
              mov.b32        abstract_60631, 1;
              .reg.u64       const_60632;
              mov.b64        const_60632, 512;
              .reg.u64       off_60633;
              add.u64        off_60633, const_60632, off_60628;
              .reg.u64       const_60634;
              mov.b64        const_60634, 0;
 call (ptr_from_optix_id_60630), _rt_buffer_get_id_64, (optix_buffer_id_60629, abstract_60631, abstract_60631, off_60633, const_60634, const_60634, const_60634); // resolving optix id
}
              ld.v4.f32      {tmp_60627_0, tmp_60627_1, tmp_60627_2, tmp_60627_3}, [ptr_from_optix_id_60630];
              .reg.u64       tmp_60635;
              .reg.s32       optix_buffer_id_60636;
              mov.b64        {_, optix_buffer_id_60636}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60637;
{
              .reg.s32       abstract_60638;
              mov.b32        abstract_60638, 1;
              .reg.u64       const_60639;
              mov.b64        const_60639, 632;
              .reg.u64       const_60640;
              mov.b64        const_60640, 0;
 call (ptr_from_optix_id_60637), _rt_buffer_get_id_64, (optix_buffer_id_60636, abstract_60638, abstract_60638, const_60639, const_60640, const_60640, const_60640); // resolving optix id
}
              ld.u64         tmp_60635, [ptr_from_optix_id_60637];
              .reg .f32      tmp_60641_0, tmp_60641_1, tmp_60641_2, tmp_60641_3;
              .reg.u64       off_60642;
              mad.wide.u32   off_60642, tmp_60613, 160, 32;
              .reg.s32       optix_buffer_id_60643;
              mov.b64        {_, optix_buffer_id_60643}, tmp_60635;
              .reg.u64       ptr_from_optix_id_60644;
{
              .reg.s32       abstract_60645;
              mov.b32        abstract_60645, 1;
              .reg.u64       const_60646;
              mov.b64        const_60646, 512;
              .reg.u64       off_60647;
              add.u64        off_60647, const_60646, off_60642;
              .reg.u64       const_60648;
              mov.b64        const_60648, 0;
 call (ptr_from_optix_id_60644), _rt_buffer_get_id_64, (optix_buffer_id_60643, abstract_60645, abstract_60645, off_60647, const_60648, const_60648, const_60648); // resolving optix id
}
              ld.v4.f32      {tmp_60641_0, tmp_60641_1, tmp_60641_2, tmp_60641_3}, [ptr_from_optix_id_60644];
              .reg.u64       tmp_60649;
              .reg.s32       optix_buffer_id_60650;
              mov.b64        {_, optix_buffer_id_60650}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60651;
{
              .reg.s32       abstract_60652;
              mov.b32        abstract_60652, 1;
              .reg.u64       const_60653;
              mov.b64        const_60653, 632;
              .reg.u64       const_60654;
              mov.b64        const_60654, 0;
 call (ptr_from_optix_id_60651), _rt_buffer_get_id_64, (optix_buffer_id_60650, abstract_60652, abstract_60652, const_60653, const_60654, const_60654, const_60654); // resolving optix id
}
              ld.u64         tmp_60649, [ptr_from_optix_id_60651];
              .reg .f32      tmp_60655_0, tmp_60655_1, tmp_60655_2, tmp_60655_3;
              .reg.u64       off_60656;
              mad.wide.u32   off_60656, tmp_60613, 160, 48;
              .reg.s32       optix_buffer_id_60657;
              mov.b64        {_, optix_buffer_id_60657}, tmp_60649;
              .reg.u64       ptr_from_optix_id_60658;
{
              .reg.s32       abstract_60659;
              mov.b32        abstract_60659, 1;
              .reg.u64       const_60660;
              mov.b64        const_60660, 512;
              .reg.u64       off_60661;
              add.u64        off_60661, const_60660, off_60656;
              .reg.u64       const_60662;
              mov.b64        const_60662, 0;
 call (ptr_from_optix_id_60658), _rt_buffer_get_id_64, (optix_buffer_id_60657, abstract_60659, abstract_60659, off_60661, const_60662, const_60662, const_60662); // resolving optix id
}
              ld.v4.f32      {tmp_60655_0, tmp_60655_1, tmp_60655_2, tmp_60655_3}, [ptr_from_optix_id_60658];
              .reg.u64       tmp_60663;
              .reg.s32       optix_buffer_id_60664;
              mov.b64        {_, optix_buffer_id_60664}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60665;
{
              .reg.s32       abstract_60666;
              mov.b32        abstract_60666, 1;
              .reg.u64       const_60667;
              mov.b64        const_60667, 632;
              .reg.u64       const_60668;
              mov.b64        const_60668, 0;
 call (ptr_from_optix_id_60665), _rt_buffer_get_id_64, (optix_buffer_id_60664, abstract_60666, abstract_60666, const_60667, const_60668, const_60668, const_60668); // resolving optix id
}
              ld.u64         tmp_60663, [ptr_from_optix_id_60665];
              .reg .f32      tmp_60669_0, tmp_60669_1, tmp_60669_2, tmp_60669_3;
              .reg.u64       off_60670;
              mad.wide.u32   off_60670, tmp_60613, 160, 64;
              .reg.s32       optix_buffer_id_60671;
              mov.b64        {_, optix_buffer_id_60671}, tmp_60663;
              .reg.u64       ptr_from_optix_id_60672;
{
              .reg.s32       abstract_60673;
              mov.b32        abstract_60673, 1;
              .reg.u64       const_60674;
              mov.b64        const_60674, 512;
              .reg.u64       off_60675;
              add.u64        off_60675, const_60674, off_60670;
              .reg.u64       const_60676;
              mov.b64        const_60676, 0;
 call (ptr_from_optix_id_60672), _rt_buffer_get_id_64, (optix_buffer_id_60671, abstract_60673, abstract_60673, off_60675, const_60676, const_60676, const_60676); // resolving optix id
}
              ld.v4.f32      {tmp_60669_0, tmp_60669_1, tmp_60669_2, tmp_60669_3}, [ptr_from_optix_id_60672];
              .reg.u64       tmp_60677;
              .reg.s32       optix_buffer_id_60678;
              mov.b64        {_, optix_buffer_id_60678}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60679;
{
              .reg.s32       abstract_60680;
              mov.b32        abstract_60680, 1;
              .reg.u64       const_60681;
              mov.b64        const_60681, 632;
              .reg.u64       const_60682;
              mov.b64        const_60682, 0;
 call (ptr_from_optix_id_60679), _rt_buffer_get_id_64, (optix_buffer_id_60678, abstract_60680, abstract_60680, const_60681, const_60682, const_60682, const_60682); // resolving optix id
}
              ld.u64         tmp_60677, [ptr_from_optix_id_60679];
              .reg .f32      tmp_60683_0, tmp_60683_1, tmp_60683_2;
              .reg.u64       off_60684;
              mad.wide.u32   off_60684, tmp_60613, 160, 144;
              .reg.s32       optix_buffer_id_60685;
              mov.b64        {_, optix_buffer_id_60685}, tmp_60677;
              .reg.u64       ptr_from_optix_id_60686;
{
              .reg.s32       abstract_60687;
              mov.b32        abstract_60687, 1;
              .reg.u64       const_60688;
              mov.b64        const_60688, 512;
              .reg.u64       off_60689;
              add.u64        off_60689, const_60688, off_60684;
              .reg.u64       const_60690;
              mov.b64        const_60690, 0;
 call (ptr_from_optix_id_60686), _rt_buffer_get_id_64, (optix_buffer_id_60685, abstract_60687, abstract_60687, off_60689, const_60690, const_60690, const_60690); // resolving optix id
}
              ld.v2.f32      {tmp_60683_0, tmp_60683_1}, [ptr_from_optix_id_60686];
              ld.f32         tmp_60683_2, [ptr_from_optix_id_60686+8];
              .reg .f32      temp_54914_0, temp_54914_1, temp_54914_2;
              mul.ftz.f32    temp_54914_0, tmp_60641_1, tmp_60655_2;
              mul.ftz.f32    temp_54914_1, tmp_60655_1, tmp_60627_2;
              mul.ftz.f32    temp_54914_2, tmp_60627_1, tmp_60641_2;
              .reg .f32      temp_54927_0, temp_54927_1, temp_54927_2;
              mul.ftz.f32    temp_54927_0, tmp_60655_1, tmp_60641_2;
              mul.ftz.f32    temp_54927_1, tmp_60627_1, tmp_60655_2;
              mul.ftz.f32    temp_54927_2, tmp_60641_1, tmp_60627_2;
              .reg .f32      temp_54934_0, temp_54934_1, temp_54934_2;
              sub.ftz.f32    temp_54934_0, temp_54914_0, temp_54927_0;
              sub.ftz.f32    temp_54934_1, temp_54914_1, temp_54927_1;
              sub.ftz.f32    temp_54934_2, temp_54914_2, temp_54927_2;
              .reg .f32      temp_54940_0, temp_54940_1, temp_54940_2;
              mul.ftz.f32    temp_54940_0, tmp_60655_0, tmp_60641_2;
              mul.ftz.f32    temp_54940_1, tmp_60627_0, tmp_60655_2;
              mul.ftz.f32    temp_54940_2, tmp_60641_0, tmp_60627_2;
              .reg .f32      temp_54950_0, temp_54950_1, temp_54950_2;
              mul.ftz.f32    temp_54950_0, tmp_60641_0, tmp_60655_2;
              mul.ftz.f32    temp_54950_1, tmp_60655_0, tmp_60627_2;
              mul.ftz.f32    temp_54950_2, tmp_60627_0, tmp_60641_2;
              .reg .f32      temp_54957_0, temp_54957_1, temp_54957_2;
              sub.ftz.f32    temp_54957_0, temp_54940_0, temp_54950_0;
              sub.ftz.f32    temp_54957_1, temp_54940_1, temp_54950_1;
              sub.ftz.f32    temp_54957_2, temp_54940_2, temp_54950_2;
              .reg .f32      temp_54960_0, temp_54960_1, temp_54960_2;
              mul.ftz.f32    temp_54960_0, tmp_60641_0, tmp_60655_1;
              mul.ftz.f32    temp_54960_1, tmp_60655_0, tmp_60627_1;
              mul.ftz.f32    temp_54960_2, tmp_60627_0, tmp_60641_1;
              .reg .f32      temp_54967_0, temp_54967_1, temp_54967_2;
              mul.ftz.f32    temp_54967_0, tmp_60655_0, tmp_60641_1;
              mul.ftz.f32    temp_54967_1, tmp_60627_0, tmp_60655_1;
              mul.ftz.f32    temp_54967_2, tmp_60641_0, tmp_60627_1;
              .reg .f32      temp_54974_0, temp_54974_1, temp_54974_2;
              sub.ftz.f32    temp_54974_0, temp_54960_0, temp_54967_0;
              sub.ftz.f32    temp_54974_1, temp_54960_1, temp_54967_1;
              sub.ftz.f32    temp_54974_2, temp_54960_2, temp_54967_2;
              .reg .f32      temp_54980_0, temp_54980_1, temp_54980_2;
              mul.ftz.f32    temp_54980_0, tmp_60627_0, temp_54934_0;
              mul.ftz.f32    temp_54980_1, tmp_60641_0, temp_54934_1;
              mul.ftz.f32    temp_54980_2, tmp_60655_0, temp_54934_2;
              .reg.f32       temp_54993;
              add.ftz.f32    temp_54993, temp_54980_0, temp_54980_1;
              .reg.f32       temp_54999;
              add.ftz.f32    temp_54999, temp_54993, temp_54980_2;
              .reg.f32       temp_55004;
              rcp.approx.ftz.f32 temp_55004, temp_54999;
              .reg .f32      temp_55010_0, temp_55010_1, temp_55010_2;
              mul.ftz.f32    temp_55010_0, temp_54934_0, temp_55004;
              mul.ftz.f32    temp_55010_1, temp_54934_1, temp_55004;
              mul.ftz.f32    temp_55010_2, temp_54934_2, temp_55004;
              .reg .f32      temp_55022_0, temp_55022_1, temp_55022_2;
              mul.ftz.f32    temp_55022_0, temp_54957_0, temp_55004;
              mul.ftz.f32    temp_55022_1, temp_54957_1, temp_55004;
              mul.ftz.f32    temp_55022_2, temp_54957_2, temp_55004;
              .reg .f32      temp_55034_0, temp_55034_1, temp_55034_2;
              mul.ftz.f32    temp_55034_0, temp_54974_0, temp_55004;
              mul.ftz.f32    temp_55034_1, temp_54974_1, temp_55004;
              mul.ftz.f32    temp_55034_2, temp_54974_2, temp_55004;
              .reg .f32      temp_55051_0, temp_55051_1, temp_55051_2;
              sub.ftz.f32    temp_55051_0, tmp_59506_0, tmp_60669_0;
              sub.ftz.f32    temp_55051_1, tmp_59506_1, tmp_60669_1;
              sub.ftz.f32    temp_55051_2, tmp_59506_2, tmp_60669_2;
              .reg .f32      temp_55071_0, temp_55071_1, temp_55071_2;
              mul.ftz.f32    temp_55071_0, temp_55010_0, temp_55051_0;
              mul.ftz.f32    temp_55071_1, temp_55010_1, temp_55051_0;
              mul.ftz.f32    temp_55071_2, temp_55010_2, temp_55051_0;
              .reg .f32      temp_55074_0, temp_55074_1, temp_55074_2;
              mul.ftz.f32    temp_55074_0, temp_55010_0, tmp_59508_0;
              mul.ftz.f32    temp_55074_1, temp_55010_1, tmp_59508_0;
              mul.ftz.f32    temp_55074_2, temp_55010_2, tmp_59508_0;
              .reg .f32      temp_55078_0, temp_55078_1, temp_55078_2;
              mul.ftz.f32    temp_55078_0, temp_55010_0, tmp_59510_0;
              mul.ftz.f32    temp_55078_1, temp_55010_1, tmp_59510_0;
              mul.ftz.f32    temp_55078_2, temp_55010_2, tmp_59510_0;
              .reg .f32      temp_55090_0, temp_55090_1, temp_55090_2;
              mul.ftz.f32    temp_55090_0, temp_55022_0, temp_55051_1;
              mul.ftz.f32    temp_55090_1, temp_55022_1, temp_55051_1;
              mul.ftz.f32    temp_55090_2, temp_55022_2, temp_55051_1;
              .reg .f32      temp_55093_0, temp_55093_1, temp_55093_2;
              mul.ftz.f32    temp_55093_0, temp_55022_0, tmp_59508_1;
              mul.ftz.f32    temp_55093_1, temp_55022_1, tmp_59508_1;
              mul.ftz.f32    temp_55093_2, temp_55022_2, tmp_59508_1;
              .reg .f32      temp_55097_0, temp_55097_1, temp_55097_2;
              mul.ftz.f32    temp_55097_0, temp_55022_0, tmp_59510_1;
              mul.ftz.f32    temp_55097_1, temp_55022_1, tmp_59510_1;
              mul.ftz.f32    temp_55097_2, temp_55022_2, tmp_59510_1;
              .reg .f32      temp_55099_0, temp_55099_1, temp_55099_2;
              add.ftz.f32    temp_55099_0, temp_55071_0, temp_55090_0;
              add.ftz.f32    temp_55099_1, temp_55071_1, temp_55090_1;
              add.ftz.f32    temp_55099_2, temp_55071_2, temp_55090_2;
              .reg .f32      temp_55100_0, temp_55100_1, temp_55100_2;
              add.ftz.f32    temp_55100_0, temp_55074_0, temp_55093_0;
              add.ftz.f32    temp_55100_1, temp_55074_1, temp_55093_1;
              add.ftz.f32    temp_55100_2, temp_55074_2, temp_55093_2;
              .reg .f32      temp_55101_0, temp_55101_1, temp_55101_2;
              add.ftz.f32    temp_55101_0, temp_55078_0, temp_55097_0;
              add.ftz.f32    temp_55101_1, temp_55078_1, temp_55097_1;
              add.ftz.f32    temp_55101_2, temp_55078_2, temp_55097_2;
              .reg .f32      temp_55112_0, temp_55112_1, temp_55112_2;
              mul.ftz.f32    temp_55112_0, temp_55034_0, temp_55051_2;
              mul.ftz.f32    temp_55112_1, temp_55034_1, temp_55051_2;
              mul.ftz.f32    temp_55112_2, temp_55034_2, temp_55051_2;
              .reg .f32      temp_55115_0, temp_55115_1, temp_55115_2;
              mul.ftz.f32    temp_55115_0, temp_55034_0, tmp_59508_2;
              mul.ftz.f32    temp_55115_1, temp_55034_1, tmp_59508_2;
              mul.ftz.f32    temp_55115_2, temp_55034_2, tmp_59508_2;
              .reg .f32      temp_55119_0, temp_55119_1, temp_55119_2;
              mul.ftz.f32    temp_55119_0, temp_55034_0, tmp_59510_2;
              mul.ftz.f32    temp_55119_1, temp_55034_1, tmp_59510_2;
              mul.ftz.f32    temp_55119_2, temp_55034_2, tmp_59510_2;
              .reg .f32      temp_55121_0, temp_55121_1, temp_55121_2;
              add.ftz.f32    temp_55121_0, temp_55099_0, temp_55112_0;
              add.ftz.f32    temp_55121_1, temp_55099_1, temp_55112_1;
              add.ftz.f32    temp_55121_2, temp_55099_2, temp_55112_2;
              .reg .f32      temp_55122_0, temp_55122_1, temp_55122_2;
              add.ftz.f32    temp_55122_0, temp_55100_0, temp_55115_0;
              add.ftz.f32    temp_55122_1, temp_55100_1, temp_55115_1;
              add.ftz.f32    temp_55122_2, temp_55100_2, temp_55115_2;
              .reg .f32      temp_55123_0, temp_55123_1, temp_55123_2;
              add.ftz.f32    temp_55123_0, temp_55101_0, temp_55119_0;
              add.ftz.f32    temp_55123_1, temp_55101_1, temp_55119_1;
              add.ftz.f32    temp_55123_2, temp_55101_2, temp_55119_2;
              .reg .f32      temp_55130_0, temp_55130_1, temp_55130_2;
              mul.ftz.f32    temp_55130_0, temp_55121_0, temp_55121_0;
              mul.ftz.f32    temp_55130_1, temp_55121_1, temp_55121_1;
              mul.ftz.f32    temp_55130_2, temp_55121_2, temp_55121_2;
              .reg .f32      temp_55132_0, temp_55132_1, temp_55132_2;
              mul.ftz.f32    temp_55132_0, temp_55122_0, temp_55121_0;
              mul.ftz.f32    temp_55132_1, temp_55122_1, temp_55121_1;
              mul.ftz.f32    temp_55132_2, temp_55122_2, temp_55121_2;
              .reg .f32      temp_55134_0, temp_55134_1, temp_55134_2;
              mul.ftz.f32    temp_55134_0, temp_55121_0, temp_55122_0;
              mul.ftz.f32    temp_55134_1, temp_55121_1, temp_55122_1;
              mul.ftz.f32    temp_55134_2, temp_55121_2, temp_55122_2;
              .reg .f32      temp_55135_0, temp_55135_1, temp_55135_2;
              add.ftz.f32    temp_55135_0, temp_55132_0, temp_55134_0;
              add.ftz.f32    temp_55135_1, temp_55132_1, temp_55134_1;
              add.ftz.f32    temp_55135_2, temp_55132_2, temp_55134_2;
              .reg .f32      temp_55137_0, temp_55137_1, temp_55137_2;
              mul.ftz.f32    temp_55137_0, temp_55123_0, temp_55121_0;
              mul.ftz.f32    temp_55137_1, temp_55123_1, temp_55121_1;
              mul.ftz.f32    temp_55137_2, temp_55123_2, temp_55121_2;
              .reg .f32      temp_55139_0, temp_55139_1, temp_55139_2;
              mul.ftz.f32    temp_55139_0, temp_55121_0, temp_55123_0;
              mul.ftz.f32    temp_55139_1, temp_55121_1, temp_55123_1;
              mul.ftz.f32    temp_55139_2, temp_55121_2, temp_55123_2;
              .reg .f32      temp_55140_0, temp_55140_1, temp_55140_2;
              add.ftz.f32    temp_55140_0, temp_55137_0, temp_55139_0;
              add.ftz.f32    temp_55140_1, temp_55137_1, temp_55139_1;
              add.ftz.f32    temp_55140_2, temp_55137_2, temp_55139_2;
              .reg.f32       temp_55147;
              add.ftz.f32    temp_55147, temp_55130_0, temp_55130_1;
              .reg.f32       temp_55148;
              add.ftz.f32    temp_55148, temp_55135_0, temp_55135_1;
              .reg.f32       temp_55149;
              add.ftz.f32    temp_55149, temp_55140_0, temp_55140_1;
              .reg.f32       temp_55153;
              add.ftz.f32    temp_55153, temp_55147, temp_55130_2;
              .reg.f32       temp_55154;
              add.ftz.f32    temp_55154, temp_55148, temp_55135_2;
              .reg.f32       temp_55155;
              add.ftz.f32    temp_55155, temp_55149, temp_55140_2;
              .reg.f32       temp_55158;
              lg2.approx.ftz.f32 temp_55158, temp_55153;
              mul.ftz.f32    temp_55158, temp_55158, 0Fbfc00000;
              ex2.approx.ftz.f32 temp_55158, temp_55158;
              .reg.f32       f_55159;
              mul.ftz.f32    f_55159, 0Fbf000000, temp_55158;
              .reg.f32       temp_55160;
              rsqrt.approx.ftz.f32 temp_55160, temp_55153;
              .reg.f32       temp_55162;
              mul.ftz.f32    temp_55162, f_55159, temp_55154;
              .reg.f32       temp_55164;
              mul.ftz.f32    temp_55164, f_55159, temp_55155;
              .reg.f32       temp_55168;
              mul.ftz.f32    temp_55168, temp_55160, temp_55160;
              .reg .f32      temp_55182_0, temp_55182_1, temp_55182_2;
              mul.ftz.f32    temp_55182_0, temp_55168, tmp_60683_0;
              mul.ftz.f32    temp_55182_1, temp_55168, tmp_60683_1;
              mul.ftz.f32    temp_55182_2, temp_55168, tmp_60683_2;
              .reg.f32       temp_55184;
              neg.ftz.f32    temp_55184, temp_55160;
              .reg.f32       temp_55186;
              neg.ftz.f32    temp_55186, temp_55162;
              .reg.f32       temp_55188;
              neg.ftz.f32    temp_55188, temp_55164;
              .reg .f32      temp_55197_0, temp_55197_1, temp_55197_2;
              mul.ftz.f32    temp_55197_0, temp_55121_0, temp_55184;
              mul.ftz.f32    temp_55197_1, temp_55121_1, temp_55184;
              mul.ftz.f32    temp_55197_2, temp_55121_2, temp_55184;
              .reg .f32      temp_55199_0, temp_55199_1, temp_55199_2;
              mul.ftz.f32    temp_55199_0, temp_55122_0, temp_55184;
              mul.ftz.f32    temp_55199_1, temp_55122_1, temp_55184;
              mul.ftz.f32    temp_55199_2, temp_55122_2, temp_55184;
              .reg .f32      temp_55200_0, temp_55200_1, temp_55200_2;
              mul.ftz.f32    temp_55200_0, temp_55121_0, temp_55186;
              mul.ftz.f32    temp_55200_1, temp_55121_1, temp_55186;
              mul.ftz.f32    temp_55200_2, temp_55121_2, temp_55186;
              .reg .f32      temp_55201_0, temp_55201_1, temp_55201_2;
              add.ftz.f32    temp_55201_0, temp_55199_0, temp_55200_0;
              add.ftz.f32    temp_55201_1, temp_55199_1, temp_55200_1;
              add.ftz.f32    temp_55201_2, temp_55199_2, temp_55200_2;
              .reg .f32      temp_55203_0, temp_55203_1, temp_55203_2;
              mul.ftz.f32    temp_55203_0, temp_55123_0, temp_55184;
              mul.ftz.f32    temp_55203_1, temp_55123_1, temp_55184;
              mul.ftz.f32    temp_55203_2, temp_55123_2, temp_55184;
              .reg .f32      temp_55204_0, temp_55204_1, temp_55204_2;
              mul.ftz.f32    temp_55204_0, temp_55121_0, temp_55188;
              mul.ftz.f32    temp_55204_1, temp_55121_1, temp_55188;
              mul.ftz.f32    temp_55204_2, temp_55121_2, temp_55188;
              .reg .f32      temp_55205_0, temp_55205_1, temp_55205_2;
              add.ftz.f32    temp_55205_0, temp_55203_0, temp_55204_0;
              add.ftz.f32    temp_55205_1, temp_55203_1, temp_55204_1;
              add.ftz.f32    temp_55205_2, temp_55203_2, temp_55204_2;
              .reg.f32       temp_55213;
              rcp.approx.ftz.f32 temp_55213, temp_55160;
              .reg .f32      temp_55231_0, temp_55231_1, temp_55231_2;
              mul.ftz.f32    temp_55231_0, tmp_60627_0, temp_55197_0;
              mul.ftz.f32    temp_55231_1, tmp_60627_1, temp_55197_0;
              mul.ftz.f32    temp_55231_2, tmp_60627_2, temp_55197_0;
              .reg .f32      temp_55234_0, temp_55234_1, temp_55234_2;
              mul.ftz.f32    temp_55234_0, tmp_60627_0, temp_55201_0;
              mul.ftz.f32    temp_55234_1, tmp_60627_1, temp_55201_0;
              mul.ftz.f32    temp_55234_2, tmp_60627_2, temp_55201_0;
              .reg .f32      temp_55238_0, temp_55238_1, temp_55238_2;
              mul.ftz.f32    temp_55238_0, tmp_60627_0, temp_55205_0;
              mul.ftz.f32    temp_55238_1, tmp_60627_1, temp_55205_0;
              mul.ftz.f32    temp_55238_2, tmp_60627_2, temp_55205_0;
              .reg .f32      temp_55250_0, temp_55250_1, temp_55250_2;
              mul.ftz.f32    temp_55250_0, tmp_60641_0, temp_55197_1;
              mul.ftz.f32    temp_55250_1, tmp_60641_1, temp_55197_1;
              mul.ftz.f32    temp_55250_2, tmp_60641_2, temp_55197_1;
              .reg .f32      temp_55253_0, temp_55253_1, temp_55253_2;
              mul.ftz.f32    temp_55253_0, tmp_60641_0, temp_55201_1;
              mul.ftz.f32    temp_55253_1, tmp_60641_1, temp_55201_1;
              mul.ftz.f32    temp_55253_2, tmp_60641_2, temp_55201_1;
              .reg .f32      temp_55257_0, temp_55257_1, temp_55257_2;
              mul.ftz.f32    temp_55257_0, tmp_60641_0, temp_55205_1;
              mul.ftz.f32    temp_55257_1, tmp_60641_1, temp_55205_1;
              mul.ftz.f32    temp_55257_2, tmp_60641_2, temp_55205_1;
              .reg .f32      temp_55259_0, temp_55259_1, temp_55259_2;
              add.ftz.f32    temp_55259_0, temp_55231_0, temp_55250_0;
              add.ftz.f32    temp_55259_1, temp_55231_1, temp_55250_1;
              add.ftz.f32    temp_55259_2, temp_55231_2, temp_55250_2;
              .reg .f32      temp_55260_0, temp_55260_1, temp_55260_2;
              add.ftz.f32    temp_55260_0, temp_55234_0, temp_55253_0;
              add.ftz.f32    temp_55260_1, temp_55234_1, temp_55253_1;
              add.ftz.f32    temp_55260_2, temp_55234_2, temp_55253_2;
              .reg .f32      temp_55261_0, temp_55261_1, temp_55261_2;
              add.ftz.f32    temp_55261_0, temp_55238_0, temp_55257_0;
              add.ftz.f32    temp_55261_1, temp_55238_1, temp_55257_1;
              add.ftz.f32    temp_55261_2, temp_55238_2, temp_55257_2;
              .reg .f32      temp_55272_0, temp_55272_1, temp_55272_2;
              mul.ftz.f32    temp_55272_0, tmp_60655_0, temp_55197_2;
              mul.ftz.f32    temp_55272_1, tmp_60655_1, temp_55197_2;
              mul.ftz.f32    temp_55272_2, tmp_60655_2, temp_55197_2;
              .reg .f32      temp_55275_0, temp_55275_1, temp_55275_2;
              mul.ftz.f32    temp_55275_0, tmp_60655_0, temp_55201_2;
              mul.ftz.f32    temp_55275_1, tmp_60655_1, temp_55201_2;
              mul.ftz.f32    temp_55275_2, tmp_60655_2, temp_55201_2;
              .reg .f32      temp_55279_0, temp_55279_1, temp_55279_2;
              mul.ftz.f32    temp_55279_0, tmp_60655_0, temp_55205_2;
              mul.ftz.f32    temp_55279_1, tmp_60655_1, temp_55205_2;
              mul.ftz.f32    temp_55279_2, tmp_60655_2, temp_55205_2;
              .reg .f32      temp_55281_0, temp_55281_1, temp_55281_2;
              add.ftz.f32    temp_55281_0, temp_55259_0, temp_55272_0;
              add.ftz.f32    temp_55281_1, temp_55259_1, temp_55272_1;
              add.ftz.f32    temp_55281_2, temp_55259_2, temp_55272_2;
              .reg .f32      temp_55282_0, temp_55282_1, temp_55282_2;
              add.ftz.f32    temp_55282_0, temp_55260_0, temp_55275_0;
              add.ftz.f32    temp_55282_1, temp_55260_1, temp_55275_1;
              add.ftz.f32    temp_55282_2, temp_55260_2, temp_55275_2;
              .reg .f32      temp_55283_0, temp_55283_1, temp_55283_2;
              add.ftz.f32    temp_55283_0, temp_55261_0, temp_55279_0;
              add.ftz.f32    temp_55283_1, temp_55261_1, temp_55279_1;
              add.ftz.f32    temp_55283_2, temp_55261_2, temp_55279_2;
              .reg .f32      temp_55290_0, temp_55290_1, temp_55290_2;
              mul.ftz.f32    temp_55290_0, temp_52006_0, tmp_60561_0;
              mul.ftz.f32    temp_55290_1, temp_52006_1, tmp_60561_1;
              mul.ftz.f32    temp_55290_2, temp_52006_2, tmp_60561_2;
              .reg.f32       temp_55307;
              add.ftz.f32    temp_55307, temp_55290_0, temp_55290_1;
              .reg.f32       temp_55313;
              add.ftz.f32    temp_55313, temp_55307, temp_55290_2;
              .reg .f32      temp_55321_0, temp_55321_1, temp_55321_2;
              mul.ftz.f32    temp_55321_0, temp_55281_0, tmp_60561_0;
              mul.ftz.f32    temp_55321_1, temp_55281_1, tmp_60561_1;
              mul.ftz.f32    temp_55321_2, temp_55281_2, tmp_60561_2;
              .reg.f32       temp_55338;
              add.ftz.f32    temp_55338, temp_55321_0, temp_55321_1;
              .reg.f32       temp_55344;
              add.ftz.f32    temp_55344, temp_55338, temp_55321_2;
              .reg.f32       temp_55350;
              mul.ftz.f32    temp_55350, temp_55313, temp_55344;
              .reg.s32       temp_55364;
              set.gt.ftz.s32.f32 temp_55364, temp_55350, 0F00000000;
              .reg .f32      bsdf_35282_0, bsdf_35282_1, bsdf_35282_2;
              .reg.pred      temp_55364_60693;
              setp.ne.s32    temp_55364_60693, 0, temp_55364;
  @!temp_55364_60693 bra     else_60691;
              .reg .f32      temp_55367_0, temp_55367_1, temp_55367_2;
              div.approx.ftz.f32 temp_55367_0, temp_52777_0, 0F40490fdb;
              div.approx.ftz.f32 temp_55367_1, temp_52777_1, 0F40490fdb;
              div.approx.ftz.f32 temp_55367_2, temp_52777_2, 0F40490fdb;
              .reg .f32      temp_55372_0, temp_55372_1, temp_55372_2;
              mul.ftz.f32    temp_55372_0, temp_55281_0, tmp_59490_0;
              mul.ftz.f32    temp_55372_1, temp_55281_1, tmp_59490_1;
              mul.ftz.f32    temp_55372_2, temp_55281_2, tmp_59490_2;
              .reg.f32       temp_55389;
              add.ftz.f32    temp_55389, temp_55372_0, temp_55372_1;
              .reg.f32       temp_55395;
              add.ftz.f32    temp_55395, temp_55389, temp_55372_2;
              .reg.s32       temp_55401;
              set.ge.ftz.s32.f32 temp_55401, temp_55350, 0F00000000;
              .reg.s32       temp_55404;
              set.lt.ftz.s32.f32 temp_55404, temp_55395, 0F00000000;
              .reg.s32       temp_55407;
              set.lt.ftz.s32.f32 temp_55407, temp_55344, 0F00000000;
              .reg.s32       temp_35714;
              xor.b32        temp_35714, temp_55404, temp_55407;
              .reg.s32       temp_35715;
              not.b32        temp_35715, temp_35714;
              .reg.s32       temp_55408;
              and.b32        temp_55408, temp_55401, temp_35715;
              .reg.s32       temp_35707;
              not.b32        temp_35707, temp_55408;
              .reg .f32      refl_35708_0, refl_35708_1, refl_35708_2;
              .reg.pred      temp_35707_60694;
              setp.ne.s32    temp_35707_60694, 0, temp_35707;
              selp.f32       refl_35708_0, 0F00000000, temp_55367_0, temp_35707_60694;
              selp.f32       refl_35708_1, 0F00000000, temp_55367_1, temp_35707_60694;
              selp.f32       refl_35708_2, 0F00000000, temp_55367_2, temp_35707_60694;
              .reg .f32      temp_55413_0, temp_55413_1, temp_55413_2;
              mul.ftz.f32    temp_55413_0, tmp_59490_0, temp_55281_0;
              mul.ftz.f32    temp_55413_1, tmp_59490_1, temp_55281_1;
              mul.ftz.f32    temp_55413_2, tmp_59490_2, temp_55281_2;
              .reg.f32       temp_55430;
              add.ftz.f32    temp_55430, temp_55413_0, temp_55413_1;
              .reg.f32       temp_55436;
              add.ftz.f32    temp_55436, temp_55430, temp_55413_2;
              .reg.s32       temp_55441;
              set.lt.ftz.s32.f32 temp_55441, temp_55436, 0F00000000;
              .reg.f32       temp_55449;
              neg.ftz.f32    temp_55449, temp_55436;
              .reg.f32       scl_55442;
              .reg.pred      temp_55441_60695;
              setp.ne.s32    temp_55441_60695, 0, temp_55441;
              selp.f32       scl_55442, temp_55449, temp_55436, temp_55441_60695;
              .reg .f32      temp_55456_0, temp_55456_1, temp_55456_2;
              mul.ftz.f32    temp_55456_0, scl_55442, refl_35708_0;
              mul.ftz.f32    temp_55456_1, scl_55442, refl_35708_1;
              mul.ftz.f32    temp_55456_2, scl_55442, refl_35708_2;
              .reg .f32      temp_55469_0, temp_55469_1, temp_55469_2;
              mul.ftz.f32    temp_55469_0, temp_52657_0, temp_55281_0;
              mul.ftz.f32    temp_55469_1, temp_52657_1, temp_55281_0;
              mul.ftz.f32    temp_55469_2, temp_52657_2, temp_55281_0;
              .reg .f32      temp_55488_0, temp_55488_1, temp_55488_2;
              mul.ftz.f32    temp_55488_0, temp_52669_0, temp_55281_1;
              mul.ftz.f32    temp_55488_1, temp_52669_1, temp_55281_1;
              mul.ftz.f32    temp_55488_2, temp_52669_2, temp_55281_1;
              .reg .f32      temp_55497_0, temp_55497_1, temp_55497_2;
              add.ftz.f32    temp_55497_0, temp_55469_0, temp_55488_0;
              add.ftz.f32    temp_55497_1, temp_55469_1, temp_55488_1;
              add.ftz.f32    temp_55497_2, temp_55469_2, temp_55488_2;
              .reg .f32      temp_55510_0, temp_55510_1, temp_55510_2;
              mul.ftz.f32    temp_55510_0, temp_52681_0, temp_55281_2;
              mul.ftz.f32    temp_55510_1, temp_52681_1, temp_55281_2;
              mul.ftz.f32    temp_55510_2, temp_52681_2, temp_55281_2;
              .reg .f32      temp_55519_0, temp_55519_1, temp_55519_2;
              add.ftz.f32    temp_55519_0, temp_55497_0, temp_55510_0;
              add.ftz.f32    temp_55519_1, temp_55497_1, temp_55510_1;
              add.ftz.f32    temp_55519_2, temp_55497_2, temp_55510_2;
              .reg .f32      temp_55535_0, temp_55535_1, temp_55535_2;
              mul.ftz.f32    temp_55535_0, temp_52657_0, temp_52006_0;
              mul.ftz.f32    temp_55535_1, temp_52657_1, temp_52006_0;
              mul.ftz.f32    temp_55535_2, temp_52657_2, temp_52006_0;
              .reg .f32      temp_55554_0, temp_55554_1, temp_55554_2;
              mul.ftz.f32    temp_55554_0, temp_52669_0, temp_52006_1;
              mul.ftz.f32    temp_55554_1, temp_52669_1, temp_52006_1;
              mul.ftz.f32    temp_55554_2, temp_52669_2, temp_52006_1;
              .reg .f32      temp_55563_0, temp_55563_1, temp_55563_2;
              add.ftz.f32    temp_55563_0, temp_55535_0, temp_55554_0;
              add.ftz.f32    temp_55563_1, temp_55535_1, temp_55554_1;
              add.ftz.f32    temp_55563_2, temp_55535_2, temp_55554_2;
              .reg .f32      temp_55576_0, temp_55576_1, temp_55576_2;
              mul.ftz.f32    temp_55576_0, temp_52681_0, temp_52006_2;
              mul.ftz.f32    temp_55576_1, temp_52681_1, temp_52006_2;
              mul.ftz.f32    temp_55576_2, temp_52681_2, temp_52006_2;
              .reg .f32      temp_55585_0, temp_55585_1, temp_55585_2;
              add.ftz.f32    temp_55585_0, temp_55563_0, temp_55576_0;
              add.ftz.f32    temp_55585_1, temp_55563_1, temp_55576_1;
              add.ftz.f32    temp_55585_2, temp_55563_2, temp_55576_2;
              .reg .f32      temp_55594_0, temp_55594_1, temp_55594_2;
              add.ftz.f32    temp_55594_0, temp_55585_0, temp_55519_0;
              add.ftz.f32    temp_55594_1, temp_55585_1, temp_55519_1;
              add.ftz.f32    temp_55594_2, temp_55585_2, temp_55519_2;
              .reg .f32      temp_55605_0, temp_55605_1, temp_55605_2;
              mul.ftz.f32    temp_55605_0, temp_55594_0, temp_55594_0;
              mul.ftz.f32    temp_55605_1, temp_55594_1, temp_55594_1;
              mul.ftz.f32    temp_55605_2, temp_55594_2, temp_55594_2;
              .reg.f32       temp_55622;
              add.ftz.f32    temp_55622, temp_55605_0, temp_55605_1;
              .reg.f32       temp_55628;
              add.ftz.f32    temp_55628, temp_55622, temp_55605_2;
              .reg.f32       temp_55633;
              rsqrt.approx.ftz.f32 temp_55633, temp_55628;
              .reg .f32      temp_55640_0, temp_55640_1, temp_55640_2;
              mul.ftz.f32    temp_55640_0, temp_55594_0, temp_55633;
              mul.ftz.f32    temp_55640_1, temp_55594_1, temp_55633;
              mul.ftz.f32    temp_55640_2, temp_55594_2, temp_55633;
              .reg.s32       temp_55659;
              set.lt.ftz.s32.f32 temp_55659, temp_55640_2, 0F00000000;
              .reg.f32       temp_55667;
              neg.ftz.f32    temp_55667, temp_55640_2;
              .reg.f32       scl_55660;
              .reg.pred      temp_55659_60696;
              setp.ne.s32    temp_55659_60696, 0, temp_55659;
              selp.f32       scl_55660, temp_55667, temp_55640_2, temp_55659_60696;
              .reg.f32       temp_55674;
              add.ftz.f32    temp_55674, tmp_60051, 0F40000000;
              .reg.f32       temp_55684;
              div.approx.ftz.f32 temp_55684, temp_55674, 0F41c90fdb;
              .reg.f32       temp_55704;
              lg2.approx.ftz.f32 temp_55704, scl_55660;
              mul.ftz.f32    temp_55704, temp_55704, tmp_60051;
              ex2.approx.ftz.f32 temp_55704, temp_55704;
              .reg.f32       temp_55712;
              mul.ftz.f32    temp_55712, temp_55684, temp_55704;
              .reg .f32      temp_55726_0, temp_55726_1, temp_55726_2;
              mul.ftz.f32    temp_55726_0, temp_55712, temp_52778_0;
              mul.ftz.f32    temp_55726_1, temp_55712, temp_52778_1;
              mul.ftz.f32    temp_55726_2, temp_55712, temp_52778_2;
              .reg .f32      refl_35799_0, refl_35799_1, refl_35799_2;
              .reg.pred      temp_35707_60697;
              setp.ne.s32    temp_35707_60697, 0, temp_35707;
              selp.f32       refl_35799_0, 0F00000000, temp_55726_0, temp_35707_60697;
              selp.f32       refl_35799_1, 0F00000000, temp_55726_1, temp_35707_60697;
              selp.f32       refl_35799_2, 0F00000000, temp_55726_2, temp_35707_60697;
              .reg .f32      temp_55729_0, temp_55729_1, temp_55729_2;
              mul.ftz.f32    temp_55729_0, scl_55442, refl_35799_0;
              mul.ftz.f32    temp_55729_1, scl_55442, refl_35799_1;
              mul.ftz.f32    temp_55729_2, scl_55442, refl_35799_2;
              .reg .f32      temp_55730_0, temp_55730_1, temp_55730_2;
              add.ftz.f32    temp_55730_0, temp_55456_0, temp_55729_0;
              add.ftz.f32    temp_55730_1, temp_55456_1, temp_55729_1;
              add.ftz.f32    temp_55730_2, temp_55456_2, temp_55729_2;
              mov.b32        bsdf_35282_0, temp_55730_0;
              mov.b32        bsdf_35282_1, temp_55730_1;
              mov.b32        bsdf_35282_2, temp_55730_2;
              bra.uni        merge_60692;
else_60691:
              mov.b32        bsdf_35282_0, 0F00000000;
              mov.b32        bsdf_35282_1, 0F00000000;
              mov.b32        bsdf_35282_2, 0F00000000;
merge_60692:
              .reg .f32      temp_55743_0, temp_55743_1, temp_55743_2;
              mul.ftz.f32    temp_55743_0, bsdf_35282_0, temp_55182_0;
              mul.ftz.f32    temp_55743_1, bsdf_35282_1, temp_55182_1;
              mul.ftz.f32    temp_55743_2, bsdf_35282_2, temp_55182_2;
              .reg .f32      scl_41856_0, scl_41856_1, scl_41856_2;
              .reg .f32      scl_41857_0, scl_41857_1, scl_41857_2;
              .reg.s32       scl_41858;
              .reg.pred      tmp_59724_60700;
              setp.ne.s32    tmp_59724_60700, 0, tmp_59724;
  @!tmp_59724_60700 bra      else_60698;
              .reg .f32      temp_55744_0, temp_55744_1, temp_55744_2;
              mul.ftz.f32    temp_55744_0, scl_41529_0, tmp_59715_0_0;
              mul.ftz.f32    temp_55744_1, scl_41529_1, tmp_59715_0_1;
              mul.ftz.f32    temp_55744_2, scl_41529_2, tmp_59715_0_2;
              .reg.f32       temp_35413;
              cvt.rn.f32.s32 temp_35413, scl_41526;
              .reg .f32      temp_55746_0, temp_55746_1, temp_55746_2;
              div.approx.ftz.f32 temp_55746_0, temp_55744_0, temp_35413;
              div.approx.ftz.f32 temp_55746_1, temp_55744_1, temp_35413;
              div.approx.ftz.f32 temp_55746_2, temp_55744_2, temp_35413;
              .reg.s32       temp_35415;
              not.b32        temp_35415, temp_55364;
              .reg.s32       temp_35416;
              .reg.pred      temp_35415_60703;
              setp.ne.s32    temp_35415_60703, 0, temp_35415;
  @!temp_35415_60703 bra     else_60701;
              mov.b32        temp_35416, -1;
              bra.uni        merge_60702;
else_60701:
              .reg .f32      temp_55756_0, temp_55756_1, temp_55756_2;
              mul.ftz.f32    temp_55756_0, temp_55182_2, 0F3e38c49c;
              mul.ftz.f32    temp_55756_1, temp_55182_2, 0F3d93d07d;
              mul.ftz.f32    temp_55756_2, temp_55182_2, 0F3f734721;
              .reg .f32      temp_55757_0, temp_55757_1, temp_55757_2;
              fma.rn.ftz.f32 temp_55757_0, 0F3eb71437, temp_55182_1, temp_55756_0;
              fma.rn.ftz.f32 temp_55757_1, 0F3f371437, temp_55182_1, temp_55756_1;
              fma.rn.ftz.f32 temp_55757_2, 0F3df41aef, temp_55182_1, temp_55756_2;
              .reg .f32      temp_55758_0, temp_55758_1, temp_55758_2;
              fma.rn.ftz.f32 temp_55758_0, 0F3ed32d7c, temp_55182_0, temp_55757_0;
              fma.rn.ftz.f32 temp_55758_1, 0F3e59c6ed, temp_55182_0, temp_55757_1;
              fma.rn.ftz.f32 temp_55758_2, 0F3c9e6221, temp_55182_0, temp_55757_2;
              .reg.s32       temp_35427;
              set.eq.ftz.s32.f32 temp_35427, temp_55758_1, 0F00000000;
              mov.b32        temp_35416, temp_35427;
merge_60702:
              .reg .f32      temp_55760_0, temp_55760_1, temp_55760_2;
              add.ftz.f32    temp_55760_0, lighting_31255_0, temp_55746_0;
              add.ftz.f32    temp_55760_1, lighting_31255_1, temp_55746_1;
              add.ftz.f32    temp_55760_2, lighting_31255_2, temp_55746_2;
              .reg .f32      scl_41862_0, scl_41862_1, scl_41862_2;
              .reg.pred      temp_35416_60704;
              setp.ne.s32    temp_35416_60704, 0, temp_35416;
              selp.f32       scl_41862_0, 0F00000000, temp_55746_0, temp_35416_60704;
              selp.f32       scl_41862_1, 0F00000000, temp_55746_1, temp_35416_60704;
              selp.f32       scl_41862_2, 0F00000000, temp_55746_2, temp_35416_60704;
              .reg .f32      scl_41863_0, scl_41863_1, scl_41863_2;
              .reg.pred      temp_35416_60705;
              setp.ne.s32    temp_35416_60705, 0, temp_35416;
              selp.f32       scl_41863_0, temp_55760_0, lighting_31255_0, temp_35416_60705;
              selp.f32       scl_41863_1, temp_55760_1, lighting_31255_1, temp_35416_60705;
              selp.f32       scl_41863_2, temp_55760_2, lighting_31255_2, temp_35416_60705;
              .reg.s32       temp_55761;
              not.b32        temp_55761, temp_35416;
              mov.b32        scl_41856_0, scl_41862_0;
              mov.b32        scl_41856_1, scl_41862_1;
              mov.b32        scl_41856_2, scl_41862_2;
              mov.b32        scl_41857_0, scl_41863_0;
              mov.b32        scl_41857_1, scl_41863_1;
              mov.b32        scl_41857_2, scl_41863_2;
              mov.b32        scl_41858, temp_55761;
              bra.uni        merge_60699;
else_60698:
              .reg .f32      temp_55762_0, temp_55762_1, temp_55762_2;
              mul.ftz.f32    temp_55762_0, temp_55743_0, tmp_59715_0_0;
              mul.ftz.f32    temp_55762_1, temp_55743_1, tmp_59715_0_1;
              mul.ftz.f32    temp_55762_2, temp_55743_2, tmp_59715_0_2;
              mov.b32        scl_41856_0, temp_55762_0;
              mov.b32        scl_41856_1, temp_55762_1;
              mov.b32        scl_41856_2, temp_55762_2;
              mov.b32        scl_41857_0, lighting_31255_0;
              mov.b32        scl_41857_1, lighting_31255_1;
              mov.b32        scl_41857_2, lighting_31255_2;
              mov.b32        scl_41858, 0;
merge_60699:
              .reg .f32      temp_55763_0, temp_55763_1, temp_55763_2;
              mul.ftz.f32    temp_55763_0, scl_41856_0, scl_41504_0;
              mul.ftz.f32    temp_55763_1, scl_41856_1, scl_41504_1;
              mul.ftz.f32    temp_55763_2, scl_41856_2, scl_41504_2;
              .reg .f32      temp_55773_0, temp_55773_1, temp_55773_2;
              mul.ftz.f32    temp_55773_0, temp_55763_2, 0F3e38c49c;
              mul.ftz.f32    temp_55773_1, temp_55763_2, 0F3d93d07d;
              mul.ftz.f32    temp_55773_2, temp_55763_2, 0F3f734721;
              .reg .f32      temp_55774_0, temp_55774_1, temp_55774_2;
              fma.rn.ftz.f32 temp_55774_0, 0F3eb71437, temp_55763_1, temp_55773_0;
              fma.rn.ftz.f32 temp_55774_1, 0F3f371437, temp_55763_1, temp_55773_1;
              fma.rn.ftz.f32 temp_55774_2, 0F3df41aef, temp_55763_1, temp_55773_2;
              .reg .f32      temp_55775_0, temp_55775_1, temp_55775_2;
              fma.rn.ftz.f32 temp_55775_0, 0F3ed32d7c, temp_55763_0, temp_55774_0;
              fma.rn.ftz.f32 temp_55775_1, 0F3e59c6ed, temp_55763_0, temp_55774_1;
              fma.rn.ftz.f32 temp_55775_2, 0F3c9e6221, temp_55763_0, temp_55774_2;
              .reg.u64       tmp_60706;
              ld.param.u64   tmp_60706, [integratorInstanceID_22355];
              .reg.s32       tmp_60707;
              ld.s32         tmp_60707, [tmp_60706];
              .reg.u64       tmp_60708;
              .reg.s32       optix_buffer_id_60709;
              mov.b64        {_, optix_buffer_id_60709}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60710;
{
              .reg.s32       abstract_60711;
              mov.b32        abstract_60711, 1;
              .reg.u64       const_60712;
              mov.b64        const_60712, 568;
              .reg.u64       const_60713;
              mov.b64        const_60713, 0;
 call (ptr_from_optix_id_60710), _rt_buffer_get_id_64, (optix_buffer_id_60709, abstract_60711, abstract_60711, const_60712, const_60713, const_60713, const_60713); // resolving optix id
}
              ld.u64         tmp_60708, [ptr_from_optix_id_60710];
              .reg.f32       tmp_60714;
              .reg.u64       off_60715;
              mad.wide.u32   off_60715, tmp_60707, 112, 4;
              .reg.s32       optix_buffer_id_60716;
              mov.b64        {_, optix_buffer_id_60716}, tmp_60708;
              .reg.u64       ptr_from_optix_id_60717;
{
              .reg.s32       abstract_60718;
              mov.b32        abstract_60718, 1;
              .reg.u64       const_60719;
              mov.b64        const_60719, 512;
              .reg.u64       off_60720;
              add.u64        off_60720, const_60719, off_60715;
              .reg.u64       const_60721;
              mov.b64        const_60721, 0;
 call (ptr_from_optix_id_60717), _rt_buffer_get_id_64, (optix_buffer_id_60716, abstract_60718, abstract_60718, off_60720, const_60721, const_60721, const_60721); // resolving optix id
}
              ld.f32         tmp_60714, [ptr_from_optix_id_60717];
              .reg.s32       has_contrib_35300;
              set.ge.ftz.s32.f32 has_contrib_35300, temp_55775_1, tmp_60714;
              .reg.u64       tmp_60722;
              ld.param.u64   tmp_60722, [integratorInstanceID_22355];
              .reg.s32       tmp_60723;
              ld.s32         tmp_60723, [tmp_60722];
              .reg.u64       tmp_60724;
              .reg.s32       optix_buffer_id_60725;
              mov.b64        {_, optix_buffer_id_60725}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60726;
{
              .reg.s32       abstract_60727;
              mov.b32        abstract_60727, 1;
              .reg.u64       const_60728;
              mov.b64        const_60728, 568;
              .reg.u64       const_60729;
              mov.b64        const_60729, 0;
 call (ptr_from_optix_id_60726), _rt_buffer_get_id_64, (optix_buffer_id_60725, abstract_60727, abstract_60727, const_60728, const_60729, const_60729, const_60729); // resolving optix id
}
              ld.u64         tmp_60724, [ptr_from_optix_id_60726];
              .reg.s32       tmp_60730;
              .reg.u64       off_60731;
              mad.wide.u32   off_60731, tmp_60723, 112, 12;
              .reg.s32       optix_buffer_id_60732;
              mov.b64        {_, optix_buffer_id_60732}, tmp_60724;
              .reg.u64       ptr_from_optix_id_60733;
{
              .reg.s32       abstract_60734;
              mov.b32        abstract_60734, 1;
              .reg.u64       const_60735;
              mov.b64        const_60735, 512;
              .reg.u64       off_60736;
              add.u64        off_60736, const_60735, off_60731;
              .reg.u64       const_60737;
              mov.b64        const_60737, 0;
 call (ptr_from_optix_id_60733), _rt_buffer_get_id_64, (optix_buffer_id_60732, abstract_60734, abstract_60734, off_60736, const_60737, const_60737, const_60737); // resolving optix id
}
              ld.s32         tmp_60730, [ptr_from_optix_id_60733];
              .reg.s32       do_bounce_35302;
              set.lt.s32.s32 do_bounce_35302, tmp_59715_3, tmp_60730;
              .reg.s32       temp_35303;
              or.b32         temp_35303, has_contrib_35300, scl_41858;
              .reg.s32       temp_35304;
              and.b32        temp_35304, temp_35303, do_bounce_35302;
              .reg.u64       scl_41894;
              .reg.u64       scl_41895;
              .reg.u64       scl_41896;
              .reg.f32       scl_41882;
              .reg.pred      temp_35304_60740;
              setp.ne.s32    temp_35304_60740, 0, temp_35304;
  @!temp_35304_60740 bra     else_60738;
              .reg.f32       temp_35315;
              mul.ftz.f32    temp_35315, tmp_59738, side_31259;
              .reg .f32      temp_55786_0, temp_55786_1, temp_55786_2;
              mul.ftz.f32    temp_55786_0, tmp_60561_0, temp_35315;
              mul.ftz.f32    temp_55786_1, tmp_60561_1, temp_35315;
              mul.ftz.f32    temp_55786_2, tmp_60561_2, temp_35315;
              .reg.u64       tmp_60741;
              ld.param.u64   tmp_60741, [f_22353];
              .reg .f32      tmp_60742_0, tmp_60742_1, tmp_60742_2;
              ld.v2.f32      {tmp_60742_0, tmp_60742_1}, [tmp_60741+64];
              ld.f32         tmp_60742_2, [tmp_60741+72];
              .reg .f32      temp_55788_0, temp_55788_1, temp_55788_2;
              mul.ftz.f32    temp_55788_0, tmp_60742_0, temp_35315;
              mul.ftz.f32    temp_55788_1, tmp_60742_1, temp_35315;
              mul.ftz.f32    temp_55788_2, tmp_60742_2, temp_35315;
              .reg.u64       tmp_60743;
              ld.param.u64   tmp_60743, [f_22353];
              .reg .f32      tmp_60744_0, tmp_60744_1, tmp_60744_2;
              ld.v2.f32      {tmp_60744_0, tmp_60744_1}, [tmp_60743+80];
              ld.f32         tmp_60744_2, [tmp_60743+88];
              .reg .f32      temp_55792_0, temp_55792_1, temp_55792_2;
              mul.ftz.f32    temp_55792_0, tmp_60744_0, temp_35315;
              mul.ftz.f32    temp_55792_1, tmp_60744_1, temp_35315;
              mul.ftz.f32    temp_55792_2, tmp_60744_2, temp_35315;
              .reg .f32      temp_55799_0, temp_55799_1, temp_55799_2;
              add.ftz.f32    temp_55799_0, tmp_59506_0, temp_55786_0;
              add.ftz.f32    temp_55799_1, tmp_59506_1, temp_55786_1;
              add.ftz.f32    temp_55799_2, tmp_59506_2, temp_55786_2;
              .reg .f32      temp_55802_0, temp_55802_1, temp_55802_2;
              add.ftz.f32    temp_55802_0, tmp_59508_0, temp_55788_0;
              add.ftz.f32    temp_55802_1, tmp_59508_1, temp_55788_1;
              add.ftz.f32    temp_55802_2, tmp_59508_2, temp_55788_2;
              .reg .f32      temp_55805_0, temp_55805_1, temp_55805_2;
              add.ftz.f32    temp_55805_0, tmp_59510_0, temp_55792_0;
              add.ftz.f32    temp_55805_1, tmp_59510_1, temp_55792_1;
              add.ftz.f32    temp_55805_2, tmp_59510_2, temp_55792_2;
              .reg.f32       temp_35320;
              mul.ftz.f32    temp_35320, 0F40000000, tmp_59738;
              .reg.f32       temp_55811;
              sub.ftz.f32    temp_55811, temp_55213, temp_35320;
              .reg.f32       temp_35325;
              cvt.rn.f32.s32 temp_35325, scl_41526;
              .reg.f32       temp_35326;
              div.approx.ftz.f32 temp_35326, tmp_59715_1, temp_35325;
              .reg.f32       trans_35327;
              .reg.pred      tmp_59724_60745;
              setp.ne.s32    tmp_59724_60745, 0, tmp_59724;
              selp.f32       trans_35327, temp_35326, 0F00000000, tmp_59724_60745;
              .reg.s32       tmp_60746;
              .reg.u64       off_60747;
              mad.wide.u32   off_60747, cdf_iter_31254, 20, 4;
              .reg.s32       optix_buffer_id_60748;
              mov.b64        {_, optix_buffer_id_60748}, tmp_60572;
              .reg.u64       ptr_from_optix_id_60749;
{
              .reg.s32       abstract_60750;
              mov.b32        abstract_60750, 1;
              .reg.u64       const_60751;
              mov.b64        const_60751, 512;
              .reg.u64       off_60752;
              add.u64        off_60752, const_60751, off_60747;
              .reg.u64       const_60753;
              mov.b64        const_60753, 0;
 call (ptr_from_optix_id_60749), _rt_buffer_get_id_64, (optix_buffer_id_60748, abstract_60750, abstract_60750, off_60752, const_60753, const_60753, const_60753); // resolving optix id
}
              ld.s32         tmp_60746, [ptr_from_optix_id_60749];
              .reg.s32       temp_35331;
              .reg.pred      temp_55364_60756;
              setp.ne.s32    temp_55364_60756, 0, temp_55364;
  @!temp_55364_60756 bra     else_60754;
              mov.b32        temp_35331, 0;
              bra.uni        merge_60755;
else_60754:
              mov.b32        temp_35331, 1;
merge_60755:
              .reg.s32       temp_35334;
              set.eq.s32.s32 temp_35334, temp_35331, 0;
              .reg.s32       state_is_same_as_shadow_ray_35401;
              or.b32         state_is_same_as_shadow_ray_35401, tmp_59715_10, 512;
              .reg.s32       state_is_same_as_shadow_ray_35400;
              and.b32        state_is_same_as_shadow_ray_35400, tmp_59715_10, -513;
              .reg.s32       state_is_same_as_shadow_ray_35335;
              .reg.pred      temp_35334_60757;
              setp.ne.s32    temp_35334_60757, 0, temp_35334;
              selp.s32       state_is_same_as_shadow_ray_35335, state_is_same_as_shadow_ray_35401, state_is_same_as_shadow_ray_35400, temp_35334_60757;
              .reg.s32       state_35336;
              and.b32        state_35336, tmp_59715_10, -32;
              .reg.s32       temp_35394;
              or.b32         temp_35394, state_35336, 1;
              .reg.s32       state_35395;
              or.b32         state_35395, temp_35394, 32;
              .reg.s32       temp_35342;
              set.gt.s32.s32 temp_35342, temp_52080, 0;
              .reg.s32       temp_35343;
              and.b32        temp_35343, temp_35334, temp_35342;
              .reg.s32       temp_35344;
              not.b32        temp_35344, temp_35343;
              .reg.s32       temp_35347;
              .reg.pred      temp_35334_60760;
              setp.ne.s32    temp_35334_60760, 0, temp_35334;
  @!temp_35334_60760 bra     else_60758;
              .reg.u64       tmp_60761;
              .reg.s32       optix_buffer_id_60762;
              mov.b64        {_, optix_buffer_id_60762}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60763;
{
              .reg.s32       abstract_60764;
              mov.b32        abstract_60764, 1;
              .reg.u64       const_60765;
              mov.b64        const_60765, 544;
              .reg.u64       const_60766;
              mov.b64        const_60766, 0;
 call (ptr_from_optix_id_60763), _rt_buffer_get_id_64, (optix_buffer_id_60762, abstract_60764, abstract_60764, const_60765, const_60766, const_60766, const_60766); // resolving optix id
}
              ld.u64         tmp_60761, [ptr_from_optix_id_60763];
              .reg.s32       tmp_60767;
              .reg.u64       off_60768;
              mad.wide.u32   off_60768, tmp_59446, 48, 40;
              .reg.s32       optix_buffer_id_60769;
              mov.b64        {_, optix_buffer_id_60769}, tmp_60761;
              .reg.u64       ptr_from_optix_id_60770;
{
              .reg.s32       abstract_60771;
              mov.b32        abstract_60771, 1;
              .reg.u64       const_60772;
              mov.b64        const_60772, 512;
              .reg.u64       off_60773;
              add.u64        off_60773, const_60772, off_60768;
              .reg.u64       const_60774;
              mov.b64        const_60774, 0;
 call (ptr_from_optix_id_60770), _rt_buffer_get_id_64, (optix_buffer_id_60769, abstract_60771, abstract_60771, off_60773, const_60774, const_60774, const_60774); // resolving optix id
}
              ld.s32         tmp_60767, [ptr_from_optix_id_60770];
              .reg.s32       temp_35393;
              not.b32        temp_35393, tmp_60767;
              mov.b32        temp_35347, temp_35393;
              bra.uni        merge_60759;
else_60758:
              mov.b32        temp_35347, 0;
merge_60759:
              .reg.s32       state_35348;
              or.b32         state_35348, tmp_59715_10, 1024;
              .reg.s32       state_35349;
              .reg.pred      temp_35347_60775;
              setp.ne.s32    temp_35347_60775, 0, temp_35347;
              selp.s32       state_35349, state_35348, tmp_59715_10, temp_35347_60775;
              .reg.s32       temp_35352;
              .reg.pred      temp_35334_60778;
              setp.ne.s32    temp_35334_60778, 0, temp_35334;
  @!temp_35334_60778 bra     else_60776;
              .reg.u64       tmp_60779;
              .reg.s32       optix_buffer_id_60780;
              mov.b64        {_, optix_buffer_id_60780}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60781;
{
              .reg.s32       abstract_60782;
              mov.b32        abstract_60782, 1;
              .reg.u64       const_60783;
              mov.b64        const_60783, 544;
              .reg.u64       const_60784;
              mov.b64        const_60784, 0;
 call (ptr_from_optix_id_60781), _rt_buffer_get_id_64, (optix_buffer_id_60780, abstract_60782, abstract_60782, const_60783, const_60784, const_60784, const_60784); // resolving optix id
}
              ld.u64         tmp_60779, [ptr_from_optix_id_60781];
              .reg.s32       tmp_60785;
              .reg.u64       off_60786;
              mad.wide.u32   off_60786, tmp_59446, 48, 28;
              .reg.s32       optix_buffer_id_60787;
              mov.b64        {_, optix_buffer_id_60787}, tmp_60779;
              .reg.u64       ptr_from_optix_id_60788;
{
              .reg.s32       abstract_60789;
              mov.b32        abstract_60789, 1;
              .reg.u64       const_60790;
              mov.b64        const_60790, 512;
              .reg.u64       off_60791;
              add.u64        off_60791, const_60790, off_60786;
              .reg.u64       const_60792;
              mov.b64        const_60792, 0;
 call (ptr_from_optix_id_60788), _rt_buffer_get_id_64, (optix_buffer_id_60787, abstract_60789, abstract_60789, off_60791, const_60792, const_60792, const_60792); // resolving optix id
}
              ld.s32         tmp_60785, [ptr_from_optix_id_60788];
              .reg.s32       temp_35390;
              not.b32        temp_35390, tmp_60785;
              mov.b32        temp_35352, temp_35390;
              bra.uni        merge_60777;
else_60776:
              mov.b32        temp_35352, 0;
merge_60777:
              .reg.s32       temp_35353;
              and.b32        temp_35353, state_35349, 512;
              .reg.s32       temp_35354;
              set.gt.s32.s32 temp_35354, temp_35353, 0;
              .reg.s32       temp_35355;
              and.b32        temp_35355, temp_35352, temp_35354;
              .reg.s32       bounce_35356;
              .reg.pred      temp_35355_60793;
              setp.ne.s32    temp_35355_60793, 0, temp_35355;
              selp.s32       bounce_35356, 0, temp_35344, temp_35355_60793;
              .reg.s32       state_35357;
              and.b32        state_35357, tmp_59715_10, -2049;
              .reg.s32       state_35387;
              and.b32        state_35387, tmp_59715_10, -98305;
              .reg.s32       temp_35362;
              .reg.pred      temp_35334_60796;
              setp.ne.s32    temp_35334_60796, 0, temp_35334;
  @!temp_35334_60796 bra     else_60794;
              .reg.u64       tmp_60797;
              .reg.s32       optix_buffer_id_60798;
              mov.b64        {_, optix_buffer_id_60798}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60799;
{
              .reg.s32       abstract_60800;
              mov.b32        abstract_60800, 1;
              .reg.u64       const_60801;
              mov.b64        const_60801, 544;
              .reg.u64       const_60802;
              mov.b64        const_60802, 0;
 call (ptr_from_optix_id_60799), _rt_buffer_get_id_64, (optix_buffer_id_60798, abstract_60800, abstract_60800, const_60801, const_60802, const_60802, const_60802); // resolving optix id
}
              ld.u64         tmp_60797, [ptr_from_optix_id_60799];
              .reg.s32       tmp_60803;
              .reg.u64       off_60804;
              mad.wide.u32   off_60804, tmp_59446, 48, 36;
              .reg.s32       optix_buffer_id_60805;
              mov.b64        {_, optix_buffer_id_60805}, tmp_60797;
              .reg.u64       ptr_from_optix_id_60806;
{
              .reg.s32       abstract_60807;
              mov.b32        abstract_60807, 1;
              .reg.u64       const_60808;
              mov.b64        const_60808, 512;
              .reg.u64       off_60809;
              add.u64        off_60809, const_60808, off_60804;
              .reg.u64       const_60810;
              mov.b64        const_60810, 0;
 call (ptr_from_optix_id_60806), _rt_buffer_get_id_64, (optix_buffer_id_60805, abstract_60807, abstract_60807, off_60809, const_60810, const_60810, const_60810); // resolving optix id
}
              ld.s32         tmp_60803, [ptr_from_optix_id_60806];
              .reg.s32       temp_35385;
              not.b32        temp_35385, tmp_60803;
              mov.b32        temp_35362, temp_35385;
              bra.uni        merge_60795;
else_60794:
              mov.b32        temp_35362, 0;
merge_60795:
              .reg.s32       state_35363;
              or.b32         state_35363, state_35387, 16384;
              .reg.s32       state_35364;
              and.b32        state_35364, state_35387, -16385;
              .reg.s32       state_35365;
              .reg.pred      temp_35362_60811;
              setp.ne.s32    temp_35362_60811, 0, temp_35362;
              selp.s32       state_35365, state_35363, state_35364, temp_35362_60811;
              .reg.s32       temp_35366;
              and.b32        temp_35366, state_is_same_as_shadow_ray_35335, 512;
              .reg.s32       temp_35367;
              and.b32        temp_35367, state_35395, 511;
              .reg.s32       temp_35368;
              or.b32         temp_35368, temp_35366, temp_35367;
              .reg.s32       temp_35369;
              and.b32        temp_35369, state_35349, 1024;
              .reg.s32       temp_35370;
              or.b32         temp_35370, temp_35368, temp_35369;
              .reg.s32       temp_35371;
              and.b32        temp_35371, state_35357, 6144;
              .reg.s32       temp_35372;
              or.b32         temp_35372, temp_35370, temp_35371;
              .reg.s32       temp_35373;
              and.b32        temp_35373, state_35365, 122880;
              .reg.s32       temp_35374;
              or.b32         temp_35374, temp_35372, temp_35373;
              .reg.u64       scl_41916;
              .reg.u64       scl_41917;
              .reg.u64       scl_41918;
              .reg.pred      bounce_35356_60814;
              setp.ne.s32    bounce_35356_60814, 0, bounce_35356;
  @!bounce_35356_60814 bra   else_60812;
              .reg.s32       temp_35377;
              add.cc.s32     temp_35377, tmp_59715_3, 1;
              .reg.s32       temp_35379;
              .reg.pred      tmp_59724_60815;
              setp.ne.s32    tmp_59724_60815, 0, tmp_59724;
              selp.s32       temp_35379, 32, 0, tmp_59724_60815;
              .reg.s32       flags_35380;
              add.cc.s32     flags_35380, 1, temp_35379;
              .reg.s32       tmp_60816;
              .reg.s32       optix_buffer_id_60817;
              .reg.s32       is_optix_buffer_id_60818;
              mov.b64        {is_optix_buffer_id_60818, optix_buffer_id_60817}, scl_41801;
              .reg.u64       off_60819;
              add.u64        off_60819, scl_41801, 0;
              .reg.pred      is_optix_buffer_id_60820;
              setp.eq.s32    is_optix_buffer_id_60820, -1, is_optix_buffer_id_60818;
{
              .reg.s32       abstract_60821;
              mov.b32        abstract_60821, 1;
              .reg.u64       const_60822;
              mov.b64        const_60822, 512;
              .reg.u64       const_60823;
              mov.b64        const_60823, 0;
@is_optix_buffer_id_60820 call (off_60819), _rt_buffer_get_id_64, (optix_buffer_id_60817, abstract_60821, abstract_60821, const_60822, const_60823, const_60823, const_60823); // resolving optix id
}
              ld.s32         tmp_60816, [off_60819];
              .reg.s32       temp_55834;
              set.lt.s32.s32 temp_55834, tmp_60816, 16;
              .reg.u64       scl_55835;
              .reg.u64       scl_55836;
              .reg.u64       scl_55837;
              .reg.pred      temp_55834_60826;
              setp.ne.s32    temp_55834_60826, 0, temp_55834;
  @!temp_55834_60826 bra     else_60824;
              .reg.s32       temp_55839;
              add.cc.s32     temp_55839, tmp_60816, 1;
              st.s32         [scl_41801], temp_55839;
              .reg.u64       off_60827;
              mad.wide.u32   off_60827, tmp_60816, 112, 0;
              .reg.u64       off_60828;
              add.u64        off_60828, scl_41802, off_60827;
              st.v2.f32      [off_60828], {temp_55799_0, temp_55799_1};
              st.f32         [off_60828+8], temp_55799_2;
              st.v2.f32      [off_60828+16], {temp_55802_0, temp_55802_1};
              st.f32         [off_60828+24], temp_55802_2;
              st.v2.f32      [off_60828+32], {temp_55805_0, temp_55805_1};
              st.f32         [off_60828+40], temp_55805_2;
              st.v2.f32      [off_60828+48], {temp_55281_0, temp_55281_1};
              st.f32         [off_60828+56], temp_55281_2;
              st.v2.f32      [off_60828+64], {temp_55282_0, temp_55282_1};
              st.f32         [off_60828+72], temp_55282_2;
              st.v2.f32      [off_60828+80], {temp_55283_0, temp_55283_1};
              st.f32         [off_60828+88], temp_55283_2;
              st.f32         [off_60828+96], temp_55811;
              .reg.u64       off_60829;
              mad.wide.u32   off_60829, tmp_60816, 112, 0;
              .reg.u64       off_60830;
              add.u64        off_60830, scl_41803, off_60829;
              st.v2.f32      [off_60830], {temp_55763_0, temp_55763_1};
              st.f32         [off_60830+8], temp_55763_2;
              st.f32         [off_60830+16], trans_35327;
              st.f32         [off_60830+20], tmp_59715_2;
              st.s32         [off_60830+24], temp_35377;
              st.s32         [off_60830+28], sampler_31258;
              st.s32         [off_60830+32], flags_35380;
              st.v2.f32      [off_60830+48], {temp_55799_0, temp_55799_1};
              st.f32         [off_60830+56], temp_55799_2;
              st.v2.f32      [off_60830+64], {temp_55802_0, temp_55802_1};
              st.f32         [off_60830+72], temp_55802_2;
              st.v2.f32      [off_60830+80], {temp_55805_0, temp_55805_1};
              st.f32         [off_60830+88], temp_55805_2;
              .reg.f32       abstract_60831;
              mov.b32        abstract_60831, 0F00000000;
              st.f32         [off_60830+96], abstract_60831;
              .reg.f32       abstract_60832;
              mov.b32        abstract_60832, 0F3f800000;
              st.f32         [off_60830+100], abstract_60832;
              st.s32         [off_60830+104], tmp_60746;
              st.s32         [off_60830+108], temp_35374;
              mov.u64        scl_55835, scl_41801;
              mov.u64        scl_55836, scl_41802;
              mov.u64        scl_55837, scl_41803;
              bra.uni        merge_60825;
else_60824:
              mov.u64        scl_55835, scl_41801;
              mov.u64        scl_55836, scl_41802;
              mov.u64        scl_55837, scl_41803;
merge_60825:
              mov.u64        scl_41916, scl_55835;
              mov.u64        scl_41917, scl_55836;
              mov.u64        scl_41918, scl_55837;
              bra.uni        merge_60813;
else_60812:
              mov.u64        scl_41916, scl_41801;
              mov.u64        scl_41917, scl_41802;
              mov.u64        scl_41918, scl_41803;
merge_60813:
              mov.u64        scl_41894, scl_41916;
              mov.u64        scl_41895, scl_41917;
              mov.u64        scl_41896, scl_41918;
              mov.b32        scl_41882, side_31259;
              bra.uni        merge_60739;
else_60738:
              mov.u64        scl_41894, scl_41801;
              mov.u64        scl_41895, scl_41802;
              mov.u64        scl_41896, scl_41803;
              mov.b32        scl_41882, side_31259;
merge_60739:
              mov.b32        scl_41818_0, scl_41857_0;
              mov.b32        scl_41818_1, scl_41857_1;
              mov.b32        scl_41818_2, scl_41857_2;
              mov.u64        scl_41834, scl_41894;
              mov.u64        scl_41835, scl_41895;
              mov.u64        scl_41836, scl_41896;
              mov.b32        scl_41821, sampler_31258;
              mov.b32        scl_41822, scl_41882;
              bra.uni        merge_60611;
else_60610:
              mov.b32        scl_41818_0, lighting_31255_0;
              mov.b32        scl_41818_1, lighting_31255_1;
              mov.b32        scl_41818_2, lighting_31255_2;
              mov.u64        scl_41834, scl_41801;
              mov.u64        scl_41835, scl_41802;
              mov.u64        scl_41836, scl_41803;
              mov.b32        scl_41821, sampler_31258;
              mov.b32        scl_41822, side_31259;
merge_60611:
              .reg.u64       tmp_60833;
              .reg.s32       optix_buffer_id_60834;
              mov.b64        {_, optix_buffer_id_60834}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60835;
{
              .reg.s32       abstract_60836;
              mov.b32        abstract_60836, 1;
              .reg.u64       const_60837;
              mov.b64        const_60837, 656;
              .reg.u64       const_60838;
              mov.b64        const_60838, 0;
 call (ptr_from_optix_id_60835), _rt_buffer_get_id_64, (optix_buffer_id_60834, abstract_60836, abstract_60836, const_60837, const_60838, const_60838, const_60838); // resolving optix id
}
              ld.u64         tmp_60833, [ptr_from_optix_id_60835];
              .reg.s32       tmp_60839;
              .reg.s32       optix_buffer_id_60840;
              mov.b64        {_, optix_buffer_id_60840}, tmp_60833;
              .reg.u64       ptr_from_optix_id_60841;
{
              .reg.s32       abstract_60842;
              mov.b32        abstract_60842, 1;
              .reg.u64       const_60843;
              mov.b64        const_60843, 512;
              .reg.u64       const_60844;
              mov.b64        const_60844, 0;
 call (ptr_from_optix_id_60841), _rt_buffer_get_id_64, (optix_buffer_id_60840, abstract_60842, abstract_60842, const_60843, const_60844, const_60844, const_60844); // resolving optix id
}
              ld.s32         tmp_60839, [ptr_from_optix_id_60841];
              .reg.s32       temp_34816;
              set.eq.s32.s32 temp_34816, tmp_60839, tmp_60590;
              .reg .f32      scl_41976_0, scl_41976_1, scl_41976_2;
              .reg.u64       scl_41992;
              .reg.u64       scl_41993;
              .reg.u64       scl_41994;
              .reg.s32       scl_41979;
              .reg.f32       scl_41980;
              .reg.pred      temp_34816_60847;
              setp.ne.s32    temp_34816_60847, 0, temp_34816;
  @!temp_34816_60847 bra     else_60845;
              .reg.s32       tmp_60848;
              .reg.u64       off_60849;
              mad.wide.u32   off_60849, cdf_iter_31254, 20, 8;
              .reg.s32       optix_buffer_id_60850;
              mov.b64        {_, optix_buffer_id_60850}, tmp_60572;
              .reg.u64       ptr_from_optix_id_60851;
{
              .reg.s32       abstract_60852;
              mov.b32        abstract_60852, 1;
              .reg.u64       const_60853;
              mov.b64        const_60853, 512;
              .reg.u64       off_60854;
              add.u64        off_60854, const_60853, off_60849;
              .reg.u64       const_60855;
              mov.b64        const_60855, 0;
 call (ptr_from_optix_id_60851), _rt_buffer_get_id_64, (optix_buffer_id_60850, abstract_60852, abstract_60852, off_60854, const_60855, const_60855, const_60855); // resolving optix id
}
              ld.s32         tmp_60848, [ptr_from_optix_id_60851];
              .reg.u64       tmp_60856;
              .reg.s32       optix_buffer_id_60857;
              mov.b64        {_, optix_buffer_id_60857}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60858;
{
              .reg.s32       abstract_60859;
              mov.b32        abstract_60859, 1;
              .reg.u64       const_60860;
              mov.b64        const_60860, 648;
              .reg.u64       const_60861;
              mov.b64        const_60861, 0;
 call (ptr_from_optix_id_60858), _rt_buffer_get_id_64, (optix_buffer_id_60857, abstract_60859, abstract_60859, const_60860, const_60861, const_60861, const_60861); // resolving optix id
}
              ld.u64         tmp_60856, [ptr_from_optix_id_60858];
              .reg .f32      tmp_60862_0, tmp_60862_1, tmp_60862_2, tmp_60862_3;
              .reg.u64       off_60863;
              mad.wide.u32   off_60863, tmp_60848, 176, 16;
              .reg.s32       optix_buffer_id_60864;
              mov.b64        {_, optix_buffer_id_60864}, tmp_60856;
              .reg.u64       ptr_from_optix_id_60865;
{
              .reg.s32       abstract_60866;
              mov.b32        abstract_60866, 1;
              .reg.u64       const_60867;
              mov.b64        const_60867, 512;
              .reg.u64       off_60868;
              add.u64        off_60868, const_60867, off_60863;
              .reg.u64       const_60869;
              mov.b64        const_60869, 0;
 call (ptr_from_optix_id_60865), _rt_buffer_get_id_64, (optix_buffer_id_60864, abstract_60866, abstract_60866, off_60868, const_60869, const_60869, const_60869); // resolving optix id
}
              ld.v4.f32      {tmp_60862_0, tmp_60862_1, tmp_60862_2, tmp_60862_3}, [ptr_from_optix_id_60865];
              .reg.u64       tmp_60870;
              .reg.s32       optix_buffer_id_60871;
              mov.b64        {_, optix_buffer_id_60871}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60872;
{
              .reg.s32       abstract_60873;
              mov.b32        abstract_60873, 1;
              .reg.u64       const_60874;
              mov.b64        const_60874, 648;
              .reg.u64       const_60875;
              mov.b64        const_60875, 0;
 call (ptr_from_optix_id_60872), _rt_buffer_get_id_64, (optix_buffer_id_60871, abstract_60873, abstract_60873, const_60874, const_60875, const_60875, const_60875); // resolving optix id
}
              ld.u64         tmp_60870, [ptr_from_optix_id_60872];
              .reg .f32      tmp_60876_0, tmp_60876_1, tmp_60876_2, tmp_60876_3;
              .reg.u64       off_60877;
              mad.wide.u32   off_60877, tmp_60848, 176, 32;
              .reg.s32       optix_buffer_id_60878;
              mov.b64        {_, optix_buffer_id_60878}, tmp_60870;
              .reg.u64       ptr_from_optix_id_60879;
{
              .reg.s32       abstract_60880;
              mov.b32        abstract_60880, 1;
              .reg.u64       const_60881;
              mov.b64        const_60881, 512;
              .reg.u64       off_60882;
              add.u64        off_60882, const_60881, off_60877;
              .reg.u64       const_60883;
              mov.b64        const_60883, 0;
 call (ptr_from_optix_id_60879), _rt_buffer_get_id_64, (optix_buffer_id_60878, abstract_60880, abstract_60880, off_60882, const_60883, const_60883, const_60883); // resolving optix id
}
              ld.v4.f32      {tmp_60876_0, tmp_60876_1, tmp_60876_2, tmp_60876_3}, [ptr_from_optix_id_60879];
              .reg.u64       tmp_60884;
              .reg.s32       optix_buffer_id_60885;
              mov.b64        {_, optix_buffer_id_60885}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60886;
{
              .reg.s32       abstract_60887;
              mov.b32        abstract_60887, 1;
              .reg.u64       const_60888;
              mov.b64        const_60888, 648;
              .reg.u64       const_60889;
              mov.b64        const_60889, 0;
 call (ptr_from_optix_id_60886), _rt_buffer_get_id_64, (optix_buffer_id_60885, abstract_60887, abstract_60887, const_60888, const_60889, const_60889, const_60889); // resolving optix id
}
              ld.u64         tmp_60884, [ptr_from_optix_id_60886];
              .reg .f32      tmp_60890_0, tmp_60890_1, tmp_60890_2, tmp_60890_3;
              .reg.u64       off_60891;
              mad.wide.u32   off_60891, tmp_60848, 176, 48;
              .reg.s32       optix_buffer_id_60892;
              mov.b64        {_, optix_buffer_id_60892}, tmp_60884;
              .reg.u64       ptr_from_optix_id_60893;
{
              .reg.s32       abstract_60894;
              mov.b32        abstract_60894, 1;
              .reg.u64       const_60895;
              mov.b64        const_60895, 512;
              .reg.u64       off_60896;
              add.u64        off_60896, const_60895, off_60891;
              .reg.u64       const_60897;
              mov.b64        const_60897, 0;
 call (ptr_from_optix_id_60893), _rt_buffer_get_id_64, (optix_buffer_id_60892, abstract_60894, abstract_60894, off_60896, const_60897, const_60897, const_60897); // resolving optix id
}
              ld.v4.f32      {tmp_60890_0, tmp_60890_1, tmp_60890_2, tmp_60890_3}, [ptr_from_optix_id_60893];
              .reg.u64       tmp_60898;
              .reg.s32       optix_buffer_id_60899;
              mov.b64        {_, optix_buffer_id_60899}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60900;
{
              .reg.s32       abstract_60901;
              mov.b32        abstract_60901, 1;
              .reg.u64       const_60902;
              mov.b64        const_60902, 648;
              .reg.u64       const_60903;
              mov.b64        const_60903, 0;
 call (ptr_from_optix_id_60900), _rt_buffer_get_id_64, (optix_buffer_id_60899, abstract_60901, abstract_60901, const_60902, const_60903, const_60903, const_60903); // resolving optix id
}
              ld.u64         tmp_60898, [ptr_from_optix_id_60900];
              .reg .f32      tmp_60904_0, tmp_60904_1, tmp_60904_2, tmp_60904_3;
              .reg.u64       off_60905;
              mad.wide.u32   off_60905, tmp_60848, 176, 64;
              .reg.s32       optix_buffer_id_60906;
              mov.b64        {_, optix_buffer_id_60906}, tmp_60898;
              .reg.u64       ptr_from_optix_id_60907;
{
              .reg.s32       abstract_60908;
              mov.b32        abstract_60908, 1;
              .reg.u64       const_60909;
              mov.b64        const_60909, 512;
              .reg.u64       off_60910;
              add.u64        off_60910, const_60909, off_60905;
              .reg.u64       const_60911;
              mov.b64        const_60911, 0;
 call (ptr_from_optix_id_60907), _rt_buffer_get_id_64, (optix_buffer_id_60906, abstract_60908, abstract_60908, off_60910, const_60911, const_60911, const_60911); // resolving optix id
}
              ld.v4.f32      {tmp_60904_0, tmp_60904_1, tmp_60904_2, tmp_60904_3}, [ptr_from_optix_id_60907];
              .reg.u64       tmp_60912;
              .reg.s32       optix_buffer_id_60913;
              mov.b64        {_, optix_buffer_id_60913}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60914;
{
              .reg.s32       abstract_60915;
              mov.b32        abstract_60915, 1;
              .reg.u64       const_60916;
              mov.b64        const_60916, 648;
              .reg.u64       const_60917;
              mov.b64        const_60917, 0;
 call (ptr_from_optix_id_60914), _rt_buffer_get_id_64, (optix_buffer_id_60913, abstract_60915, abstract_60915, const_60916, const_60917, const_60917, const_60917); // resolving optix id
}
              ld.u64         tmp_60912, [ptr_from_optix_id_60914];
              .reg.f32       tmp_60918;
              .reg.u64       off_60919;
              mad.wide.u32   off_60919, tmp_60848, 176, 160;
              .reg.s32       optix_buffer_id_60920;
              mov.b64        {_, optix_buffer_id_60920}, tmp_60912;
              .reg.u64       ptr_from_optix_id_60921;
{
              .reg.s32       abstract_60922;
              mov.b32        abstract_60922, 1;
              .reg.u64       const_60923;
              mov.b64        const_60923, 512;
              .reg.u64       off_60924;
              add.u64        off_60924, const_60923, off_60919;
              .reg.u64       const_60925;
              mov.b64        const_60925, 0;
 call (ptr_from_optix_id_60921), _rt_buffer_get_id_64, (optix_buffer_id_60920, abstract_60922, abstract_60922, off_60924, const_60925, const_60925, const_60925); // resolving optix id
}
              ld.f32         tmp_60918, [ptr_from_optix_id_60921];
              .reg.f32       temp_35831;
              mul.ftz.f32    temp_35831, 0F3f000000, tmp_60918;
              .reg.f32       cosW_35833;
              cos.approx.ftz.f32 cosW_35833, temp_35831;
              .reg.u64       tmp_60926;
              .reg.s32       optix_buffer_id_60927;
              mov.b64        {_, optix_buffer_id_60927}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60928;
{
              .reg.s32       abstract_60929;
              mov.b32        abstract_60929, 1;
              .reg.u64       const_60930;
              mov.b64        const_60930, 648;
              .reg.u64       const_60931;
              mov.b64        const_60931, 0;
 call (ptr_from_optix_id_60928), _rt_buffer_get_id_64, (optix_buffer_id_60927, abstract_60929, abstract_60929, const_60930, const_60931, const_60931, const_60931); // resolving optix id
}
              ld.u64         tmp_60926, [ptr_from_optix_id_60928];
              .reg.f32       tmp_60932;
              .reg.u64       off_60933;
              mad.wide.u32   off_60933, tmp_60848, 176, 164;
              .reg.s32       optix_buffer_id_60934;
              mov.b64        {_, optix_buffer_id_60934}, tmp_60926;
              .reg.u64       ptr_from_optix_id_60935;
{
              .reg.s32       abstract_60936;
              mov.b32        abstract_60936, 1;
              .reg.u64       const_60937;
              mov.b64        const_60937, 512;
              .reg.u64       off_60938;
              add.u64        off_60938, const_60937, off_60933;
              .reg.u64       const_60939;
              mov.b64        const_60939, 0;
 call (ptr_from_optix_id_60935), _rt_buffer_get_id_64, (optix_buffer_id_60934, abstract_60936, abstract_60936, off_60938, const_60939, const_60939, const_60939); // resolving optix id
}
              ld.f32         tmp_60932, [ptr_from_optix_id_60935];
              .reg.f32       temp_35837;
              sub.ftz.f32    temp_35837, temp_35831, tmp_60932;
              .reg.f32       temp_35838;
              max.ftz.f32    temp_35838, 0F00000000, temp_35837;
              .reg.f32       cosF_35840;
              cos.approx.ftz.f32 cosF_35840, temp_35838;
              .reg .f32      temp_55934_0, temp_55934_1, temp_55934_2;
              mul.ftz.f32    temp_55934_0, tmp_60876_1, tmp_60890_2;
              mul.ftz.f32    temp_55934_1, tmp_60890_1, tmp_60862_2;
              mul.ftz.f32    temp_55934_2, tmp_60862_1, tmp_60876_2;
              .reg .f32      temp_55947_0, temp_55947_1, temp_55947_2;
              mul.ftz.f32    temp_55947_0, tmp_60890_1, tmp_60876_2;
              mul.ftz.f32    temp_55947_1, tmp_60862_1, tmp_60890_2;
              mul.ftz.f32    temp_55947_2, tmp_60876_1, tmp_60862_2;
              .reg .f32      temp_55954_0, temp_55954_1, temp_55954_2;
              sub.ftz.f32    temp_55954_0, temp_55934_0, temp_55947_0;
              sub.ftz.f32    temp_55954_1, temp_55934_1, temp_55947_1;
              sub.ftz.f32    temp_55954_2, temp_55934_2, temp_55947_2;
              .reg .f32      temp_55960_0, temp_55960_1, temp_55960_2;
              mul.ftz.f32    temp_55960_0, tmp_60890_0, tmp_60876_2;
              mul.ftz.f32    temp_55960_1, tmp_60862_0, tmp_60890_2;
              mul.ftz.f32    temp_55960_2, tmp_60876_0, tmp_60862_2;
              .reg .f32      temp_55970_0, temp_55970_1, temp_55970_2;
              mul.ftz.f32    temp_55970_0, tmp_60876_0, tmp_60890_2;
              mul.ftz.f32    temp_55970_1, tmp_60890_0, tmp_60862_2;
              mul.ftz.f32    temp_55970_2, tmp_60862_0, tmp_60876_2;
              .reg .f32      temp_55977_0, temp_55977_1, temp_55977_2;
              sub.ftz.f32    temp_55977_0, temp_55960_0, temp_55970_0;
              sub.ftz.f32    temp_55977_1, temp_55960_1, temp_55970_1;
              sub.ftz.f32    temp_55977_2, temp_55960_2, temp_55970_2;
              .reg .f32      temp_55980_0, temp_55980_1, temp_55980_2;
              mul.ftz.f32    temp_55980_0, tmp_60876_0, tmp_60890_1;
              mul.ftz.f32    temp_55980_1, tmp_60890_0, tmp_60862_1;
              mul.ftz.f32    temp_55980_2, tmp_60862_0, tmp_60876_1;
              .reg .f32      temp_55987_0, temp_55987_1, temp_55987_2;
              mul.ftz.f32    temp_55987_0, tmp_60890_0, tmp_60876_1;
              mul.ftz.f32    temp_55987_1, tmp_60862_0, tmp_60890_1;
              mul.ftz.f32    temp_55987_2, tmp_60876_0, tmp_60862_1;
              .reg .f32      temp_55994_0, temp_55994_1, temp_55994_2;
              sub.ftz.f32    temp_55994_0, temp_55980_0, temp_55987_0;
              sub.ftz.f32    temp_55994_1, temp_55980_1, temp_55987_1;
              sub.ftz.f32    temp_55994_2, temp_55980_2, temp_55987_2;
              .reg .f32      temp_56000_0, temp_56000_1, temp_56000_2;
              mul.ftz.f32    temp_56000_0, tmp_60862_0, temp_55954_0;
              mul.ftz.f32    temp_56000_1, tmp_60876_0, temp_55954_1;
              mul.ftz.f32    temp_56000_2, tmp_60890_0, temp_55954_2;
              .reg.f32       temp_56013;
              add.ftz.f32    temp_56013, temp_56000_0, temp_56000_1;
              .reg.f32       temp_56019;
              add.ftz.f32    temp_56019, temp_56013, temp_56000_2;
              .reg.f32       temp_56024;
              rcp.approx.ftz.f32 temp_56024, temp_56019;
              .reg .f32      temp_56030_0, temp_56030_1, temp_56030_2;
              mul.ftz.f32    temp_56030_0, temp_55954_0, temp_56024;
              mul.ftz.f32    temp_56030_1, temp_55954_1, temp_56024;
              mul.ftz.f32    temp_56030_2, temp_55954_2, temp_56024;
              .reg .f32      temp_56042_0, temp_56042_1, temp_56042_2;
              mul.ftz.f32    temp_56042_0, temp_55977_0, temp_56024;
              mul.ftz.f32    temp_56042_1, temp_55977_1, temp_56024;
              mul.ftz.f32    temp_56042_2, temp_55977_2, temp_56024;
              .reg .f32      temp_56054_0, temp_56054_1, temp_56054_2;
              mul.ftz.f32    temp_56054_0, temp_55994_0, temp_56024;
              mul.ftz.f32    temp_56054_1, temp_55994_1, temp_56024;
              mul.ftz.f32    temp_56054_2, temp_55994_2, temp_56024;
              .reg .f32      temp_56071_0, temp_56071_1, temp_56071_2;
              sub.ftz.f32    temp_56071_0, tmp_59506_0, tmp_60904_0;
              sub.ftz.f32    temp_56071_1, tmp_59506_1, tmp_60904_1;
              sub.ftz.f32    temp_56071_2, tmp_59506_2, tmp_60904_2;
              .reg .f32      temp_56091_0, temp_56091_1, temp_56091_2;
              mul.ftz.f32    temp_56091_0, temp_56030_0, temp_56071_0;
              mul.ftz.f32    temp_56091_1, temp_56030_1, temp_56071_0;
              mul.ftz.f32    temp_56091_2, temp_56030_2, temp_56071_0;
              .reg .f32      temp_56094_0, temp_56094_1, temp_56094_2;
              mul.ftz.f32    temp_56094_0, temp_56030_0, tmp_59508_0;
              mul.ftz.f32    temp_56094_1, temp_56030_1, tmp_59508_0;
              mul.ftz.f32    temp_56094_2, temp_56030_2, tmp_59508_0;
              .reg .f32      temp_56098_0, temp_56098_1, temp_56098_2;
              mul.ftz.f32    temp_56098_0, temp_56030_0, tmp_59510_0;
              mul.ftz.f32    temp_56098_1, temp_56030_1, tmp_59510_0;
              mul.ftz.f32    temp_56098_2, temp_56030_2, tmp_59510_0;
              .reg .f32      temp_56110_0, temp_56110_1, temp_56110_2;
              mul.ftz.f32    temp_56110_0, temp_56042_0, temp_56071_1;
              mul.ftz.f32    temp_56110_1, temp_56042_1, temp_56071_1;
              mul.ftz.f32    temp_56110_2, temp_56042_2, temp_56071_1;
              .reg .f32      temp_56113_0, temp_56113_1, temp_56113_2;
              mul.ftz.f32    temp_56113_0, temp_56042_0, tmp_59508_1;
              mul.ftz.f32    temp_56113_1, temp_56042_1, tmp_59508_1;
              mul.ftz.f32    temp_56113_2, temp_56042_2, tmp_59508_1;
              .reg .f32      temp_56117_0, temp_56117_1, temp_56117_2;
              mul.ftz.f32    temp_56117_0, temp_56042_0, tmp_59510_1;
              mul.ftz.f32    temp_56117_1, temp_56042_1, tmp_59510_1;
              mul.ftz.f32    temp_56117_2, temp_56042_2, tmp_59510_1;
              .reg .f32      temp_56119_0, temp_56119_1, temp_56119_2;
              add.ftz.f32    temp_56119_0, temp_56091_0, temp_56110_0;
              add.ftz.f32    temp_56119_1, temp_56091_1, temp_56110_1;
              add.ftz.f32    temp_56119_2, temp_56091_2, temp_56110_2;
              .reg .f32      temp_56120_0, temp_56120_1, temp_56120_2;
              add.ftz.f32    temp_56120_0, temp_56094_0, temp_56113_0;
              add.ftz.f32    temp_56120_1, temp_56094_1, temp_56113_1;
              add.ftz.f32    temp_56120_2, temp_56094_2, temp_56113_2;
              .reg .f32      temp_56121_0, temp_56121_1, temp_56121_2;
              add.ftz.f32    temp_56121_0, temp_56098_0, temp_56117_0;
              add.ftz.f32    temp_56121_1, temp_56098_1, temp_56117_1;
              add.ftz.f32    temp_56121_2, temp_56098_2, temp_56117_2;
              .reg .f32      temp_56132_0, temp_56132_1, temp_56132_2;
              mul.ftz.f32    temp_56132_0, temp_56054_0, temp_56071_2;
              mul.ftz.f32    temp_56132_1, temp_56054_1, temp_56071_2;
              mul.ftz.f32    temp_56132_2, temp_56054_2, temp_56071_2;
              .reg .f32      temp_56135_0, temp_56135_1, temp_56135_2;
              mul.ftz.f32    temp_56135_0, temp_56054_0, tmp_59508_2;
              mul.ftz.f32    temp_56135_1, temp_56054_1, tmp_59508_2;
              mul.ftz.f32    temp_56135_2, temp_56054_2, tmp_59508_2;
              .reg .f32      temp_56139_0, temp_56139_1, temp_56139_2;
              mul.ftz.f32    temp_56139_0, temp_56054_0, tmp_59510_2;
              mul.ftz.f32    temp_56139_1, temp_56054_1, tmp_59510_2;
              mul.ftz.f32    temp_56139_2, temp_56054_2, tmp_59510_2;
              .reg .f32      temp_56141_0, temp_56141_1, temp_56141_2;
              add.ftz.f32    temp_56141_0, temp_56119_0, temp_56132_0;
              add.ftz.f32    temp_56141_1, temp_56119_1, temp_56132_1;
              add.ftz.f32    temp_56141_2, temp_56119_2, temp_56132_2;
              .reg .f32      temp_56142_0, temp_56142_1, temp_56142_2;
              add.ftz.f32    temp_56142_0, temp_56120_0, temp_56135_0;
              add.ftz.f32    temp_56142_1, temp_56120_1, temp_56135_1;
              add.ftz.f32    temp_56142_2, temp_56120_2, temp_56135_2;
              .reg .f32      temp_56143_0, temp_56143_1, temp_56143_2;
              add.ftz.f32    temp_56143_0, temp_56121_0, temp_56139_0;
              add.ftz.f32    temp_56143_1, temp_56121_1, temp_56139_1;
              add.ftz.f32    temp_56143_2, temp_56121_2, temp_56139_2;
              .reg.s32       temp_36148;
              set.lt.s32.s32 temp_36148, scl_41821, 8;
              .reg.f32       f1_36149;
              .reg.pred      temp_36148_60942;
              setp.ne.s32    temp_36148_60942, 0, temp_36148;
  @!temp_36148_60942 bra     else_60940;
              .reg.s32       temp_56146;
              and.b32        temp_56146, scl_41821, 63;
              .reg.u64       tmp_60943;
              .reg.s32       optix_buffer_id_60944;
              mov.b64        {_, optix_buffer_id_60944}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60945;
{
              .reg.s32       abstract_60946;
              mov.b32        abstract_60946, 1;
              .reg.u64       const_60947;
              mov.b64        const_60947, 512;
              .reg.u64       const_60948;
              mov.b64        const_60948, 0;
 call (ptr_from_optix_id_60945), _rt_buffer_get_id_64, (optix_buffer_id_60944, abstract_60946, abstract_60946, const_60947, const_60948, const_60948, const_60948); // resolving optix id
}
              ld.u64         tmp_60943, [ptr_from_optix_id_60945];
              .reg.s32       tmp_60949;
              .reg.u64       off_60950;
              mad.wide.u32   off_60950, temp_56146, 4, 0;
              .reg.s32       optix_buffer_id_60951;
              mov.b64        {_, optix_buffer_id_60951}, tmp_60943;
              .reg.u64       ptr_from_optix_id_60952;
{
              .reg.s32       abstract_60953;
              mov.b32        abstract_60953, 1;
              .reg.u64       const_60954;
              mov.b64        const_60954, 512;
              .reg.u64       off_60955;
              add.u64        off_60955, const_60954, off_60950;
              .reg.u64       const_60956;
              mov.b64        const_60956, 0;
 call (ptr_from_optix_id_60952), _rt_buffer_get_id_64, (optix_buffer_id_60951, abstract_60953, abstract_60953, off_60955, const_60956, const_60956, const_60956); // resolving optix id
}
              ld.s32         tmp_60949, [ptr_from_optix_id_60952];
              .reg.f32       temp_36239;
              cvt.rn.f32.s32 temp_36239, tmp_60949;
              .reg.f32       digit_36240;
              div.approx.ftz.f32 digit_36240, 0F3f800000, temp_36239;
              .reg.s32       temp_36241;
              set.gt.s32.s32 temp_36241, temp_30198, 0;
              .reg.f32       ilwerse_36242;
              .reg.pred      temp_36241_60959;
              setp.ne.s32    temp_36241_60959, 0, temp_36241;
  @!temp_36241_60959 bra     else_60957;
              .reg.f32       digit_36256;
              mov.b32        digit_36256, digit_36240;
              .reg.s32       i_36257;
              mov.b32        i_36257, temp_30198;
              .reg.f32       ilwerse_36258;
              mov.b32        ilwerse_36258, 0F00000000;
              .reg.f32       ilwerse_36255;
doloop_60960:
              .reg.s32       temp_36259;
              rem.s32        temp_36259, i_36257, tmp_60949;
              .reg.f32       temp_36260;
              cvt.rn.f32.s32 temp_36260, temp_36259;
              .reg.f32       temp_36261;
              mul.ftz.f32    temp_36261, digit_36256, temp_36260;
              .reg.f32       ilwerse_36262;
              add.ftz.f32    ilwerse_36262, ilwerse_36258, temp_36261;
              .reg.f32       digit_36263;
              mul.ftz.f32    digit_36263, digit_36256, digit_36240;
              .reg.s32       i_36264;
              div.s32        i_36264, i_36257, tmp_60949;
              .reg.s32       temp_36265;
              set.gt.s32.s32 temp_36265, i_36264, 0;
              mov.b32        ilwerse_36255, ilwerse_36262;
              mov.b32        digit_36256, digit_36263;
              mov.b32        i_36257, i_36264;
              mov.b32        ilwerse_36258, ilwerse_36262;
              .reg.pred      temp_36265_60961;
              setp.ne.s32    temp_36265_60961, 0, temp_36265;
  @temp_36265_60961 bra      doloop_60960;
              mov.b32        ilwerse_36242, ilwerse_36255;
              bra.uni        merge_60958;
else_60957:
              mov.b32        ilwerse_36242, 0F00000000;
merge_60958:
              .reg.s32       temp_36243;
              set.eq.s32.s32 temp_36243, scl_41821, 0;
              .reg.f32       f1_36244;
              .reg.pred      temp_36243_60964;
              setp.ne.s32    temp_36243_60964, 0, temp_36243;
  @!temp_36243_60964 bra     else_60962;
              .reg.f32       temp_36251;
              mul.ftz.f32    temp_36251, ilwerse_36242, 0F43800000;
              .reg.s32       temp_36252;
              rem.s32        temp_36252, temp_30189, 256;
              .reg.f32       temp_36253;
              cvt.rn.f32.s32 temp_36253, temp_36252;
              .reg.f32       f1_36254;
              sub.ftz.f32    f1_36254, temp_36251, temp_36253;
              mov.b32        f1_36244, f1_36254;
              bra.uni        merge_60963;
else_60962:
              .reg.s32       temp_36245;
              set.eq.s32.s32 temp_36245, scl_41821, 1;
              .reg.f32       f1_36246;
              .reg.pred      temp_36245_60967;
              setp.ne.s32    temp_36245_60967, 0, temp_36245;
  @!temp_36245_60967 bra     else_60965;
              .reg.f32       temp_36247;
              mul.ftz.f32    temp_36247, ilwerse_36242, 0F43730000;
              .reg.s32       temp_36248;
              rem.s32        temp_36248, temp_30192, 243;
              .reg.f32       temp_36249;
              cvt.rn.f32.s32 temp_36249, temp_36248;
              .reg.f32       f1_36250;
              sub.ftz.f32    f1_36250, temp_36247, temp_36249;
              mov.b32        f1_36246, f1_36250;
              bra.uni        merge_60966;
else_60965:
              mov.b32        f1_36246, ilwerse_36242;
merge_60966:
              mov.b32        f1_36244, f1_36246;
merge_60963:
              mov.b32        f1_36149, f1_36244;
              bra.uni        merge_60941;
else_60940:
              .reg.s32       i_36214;
              mov.b32        i_36214, 0;
              .reg.s32       sum_36215;
              mov.b32        sum_36215, 0;
              .reg.s32       v0_36216;
              mov.b32        v0_36216, scl_41821;
              .reg.s32       v1_36217;
              mov.b32        v1_36217, temp_30198;
              .reg.s32       scl_42014;
doloop_60968:
              .reg.s32       sum_36218;
              add.cc.s32     sum_36218, sum_36215, -1640531527;
              .reg.s32       temp_36219;
              shl.b32        temp_36219, v1_36217, 4;
              .reg.s32       temp_36220;
              add.cc.s32     temp_36220, temp_36219, -1556008596;
              .reg.s32       temp_36221;
              add.cc.s32     temp_36221, v1_36217, sum_36218;
              .reg.s32       temp_36222;
              xor.b32        temp_36222, temp_36220, temp_36221;
              .reg.s32       temp_36223;
              shr.u32        temp_36223, v1_36217, 5;
              .reg.s32       temp_36224;
              add.cc.s32     temp_36224, temp_36223, -939442524;
              .reg.s32       temp_36225;
              xor.b32        temp_36225, temp_36222, temp_36224;
              .reg.s32       v0_36226;
              add.cc.s32     v0_36226, v0_36216, temp_36225;
              .reg.s32       temp_36227;
              shl.b32        temp_36227, v0_36226, 4;
              .reg.s32       temp_36228;
              add.cc.s32     temp_36228, temp_36227, -1383041155;
              .reg.s32       temp_36229;
              add.cc.s32     temp_36229, v0_36226, sum_36218;
              .reg.s32       temp_36230;
              xor.b32        temp_36230, temp_36228, temp_36229;
              .reg.s32       temp_36231;
              shr.u32        temp_36231, v0_36226, 5;
              .reg.s32       temp_36232;
              add.cc.s32     temp_36232, temp_36231, 2123724318;
              .reg.s32       temp_36233;
              xor.b32        temp_36233, temp_36230, temp_36232;
              .reg.s32       v1_36234;
              add.cc.s32     v1_36234, v1_36217, temp_36233;
              .reg.s32       i_36235;
              add.cc.s32     i_36235, i_36214, 1;
              .reg.s32       temp_36236;
              set.lt.s32.s32 temp_36236, i_36235, 8;
              mov.b32        scl_42014, v0_36226;
              mov.b32        i_36214, i_36235;
              mov.b32        sum_36215, sum_36218;
              mov.b32        v0_36216, v0_36226;
              mov.b32        v1_36217, v1_36234;
              .reg.pred      temp_36236_60969;
              setp.ne.s32    temp_36236_60969, 0, temp_36236;
  @temp_36236_60969 bra.uni  doloop_60968;
              .reg.s32       temp_56148;
              and.b32        temp_56148, scl_42014, 2147483647;
              .reg.f32       temp_56149;
              cvt.rn.f32.s32 temp_56149, temp_56148;
              .reg.f32       temp_56150;
              div.approx.ftz.f32 temp_56150, temp_56149, 0F4f000000;
              mov.b32        f1_36149, temp_56150;
merge_60941:
              .reg.s32       temp_36150;
              add.cc.s32     temp_36150, scl_41821, 1;
              .reg.s32       temp_36151;
              set.lt.s32.s32 temp_36151, temp_36150, 8;
              .reg.f32       f1_36152;
              .reg.pred      temp_36151_60972;
              setp.ne.s32    temp_36151_60972, 0, temp_36151;
  @!temp_36151_60972 bra     else_60970;
              .reg.s32       temp_56151;
              and.b32        temp_56151, temp_36150, 63;
              .reg.u64       tmp_60973;
              .reg.s32       optix_buffer_id_60974;
              mov.b64        {_, optix_buffer_id_60974}, tmp_59444;
              .reg.u64       ptr_from_optix_id_60975;
{
              .reg.s32       abstract_60976;
              mov.b32        abstract_60976, 1;
              .reg.u64       const_60977;
              mov.b64        const_60977, 512;
              .reg.u64       const_60978;
              mov.b64        const_60978, 0;
 call (ptr_from_optix_id_60975), _rt_buffer_get_id_64, (optix_buffer_id_60974, abstract_60976, abstract_60976, const_60977, const_60978, const_60978, const_60978); // resolving optix id
}
              ld.u64         tmp_60973, [ptr_from_optix_id_60975];
              .reg.s32       tmp_60979;
              .reg.u64       off_60980;
              mad.wide.u32   off_60980, temp_56151, 4, 0;
              .reg.s32       optix_buffer_id_60981;
              mov.b64        {_, optix_buffer_id_60981}, tmp_60973;
              .reg.u64       ptr_from_optix_id_60982;
{
              .reg.s32       abstract_60983;
              mov.b32        abstract_60983, 1;
              .reg.u64       const_60984;
              mov.b64        const_60984, 512;
              .reg.u64       off_60985;
              add.u64        off_60985, const_60984, off_60980;
              .reg.u64       const_60986;
              mov.b64        const_60986, 0;
 call (ptr_from_optix_id_60982), _rt_buffer_get_id_64, (optix_buffer_id_60981, abstract_60983, abstract_60983, off_60985, const_60986, const_60986, const_60986); // resolving optix id
}
              ld.s32         tmp_60979, [ptr_from_optix_id_60982];
              .reg.f32       temp_36184;
              cvt.rn.f32.s32 temp_36184, tmp_60979;
              .reg.f32       digit_36185;
              div.approx.ftz.f32 digit_36185, 0F3f800000, temp_36184;
              .reg.s32       temp_36186;
              set.gt.s32.s32 temp_36186, temp_30198, 0;
              .reg.f32       ilwerse_36187;
              .reg.pred      temp_36186_60989;
              setp.ne.s32    temp_36186_60989, 0, temp_36186;
  @!temp_36186_60989 bra     else_60987;
              .reg.f32       digit_36201;
              mov.b32        digit_36201, digit_36185;
              .reg.s32       i_36202;
              mov.b32        i_36202, temp_30198;
              .reg.f32       ilwerse_36203;
              mov.b32        ilwerse_36203, 0F00000000;
              .reg.f32       ilwerse_36200;
doloop_60990:
              .reg.s32       temp_36204;
              rem.s32        temp_36204, i_36202, tmp_60979;
              .reg.f32       temp_36205;
              cvt.rn.f32.s32 temp_36205, temp_36204;
              .reg.f32       temp_36206;
              mul.ftz.f32    temp_36206, digit_36201, temp_36205;
              .reg.f32       ilwerse_36207;
              add.ftz.f32    ilwerse_36207, ilwerse_36203, temp_36206;
              .reg.f32       digit_36208;
              mul.ftz.f32    digit_36208, digit_36201, digit_36185;
              .reg.s32       i_36209;
              div.s32        i_36209, i_36202, tmp_60979;
              .reg.s32       temp_36210;
              set.gt.s32.s32 temp_36210, i_36209, 0;
              mov.b32        ilwerse_36200, ilwerse_36207;
              mov.b32        digit_36201, digit_36208;
              mov.b32        i_36202, i_36209;
              mov.b32        ilwerse_36203, ilwerse_36207;
              .reg.pred      temp_36210_60991;
              setp.ne.s32    temp_36210_60991, 0, temp_36210;
  @temp_36210_60991 bra      doloop_60990;
              mov.b32        ilwerse_36187, ilwerse_36200;
              bra.uni        merge_60988;
else_60987:
              mov.b32        ilwerse_36187, 0F00000000;
merge_60988:
              .reg.s32       temp_36188;
              set.eq.s32.s32 temp_36188, temp_36150, 0;
              .reg.f32       f1_36189;
              .reg.pred      temp_36188_60994;
              setp.ne.s32    temp_36188_60994, 0, temp_36188;
  @!temp_36188_60994 bra     else_60992;
              .reg.f32       temp_36196;
              mul.ftz.f32    temp_36196, ilwerse_36187, 0F43800000;
              .reg.s32       temp_36197;
              rem.s32        temp_36197, temp_30189, 256;
              .reg.f32       temp_36198;
              cvt.rn.f32.s32 temp_36198, temp_36197;
              .reg.f32       f1_36199;
              sub.ftz.f32    f1_36199, temp_36196, temp_36198;
              mov.b32        f1_36189, f1_36199;
              bra.uni        merge_60993;
else_60992:
              .reg.s32       temp_36190;
              set.eq.s32.s32 temp_36190, temp_36150, 1;
              .reg.f32       f1_36191;
              .reg.pred      temp_36190_60997;
              setp.ne.s32    temp_36190_60997, 0, temp_36190;
  @!temp_36190_60997 bra     else_60995;
              .reg.f32       temp_36192;
              mul.ftz.f32    temp_36192, ilwerse_36187, 0F43730000;
              .reg.s32       temp_36193;
              rem.s32        temp_36193, temp_30192, 243;
              .reg.f32       temp_36194;
              cvt.rn.f32.s32 temp_36194, temp_36193;
              .reg.f32       f1_36195;
              sub.ftz.f32    f1_36195, temp_36192, temp_36194;
              mov.b32        f1_36191, f1_36195;
              bra.uni        merge_60996;
else_60995:
              mov.b32        f1_36191, ilwerse_36187;
merge_60996:
              mov.b32        f1_36189, f1_36191;
merge_60993:
              mov.b32        f1_36152, f1_36189;
              bra.uni        merge_60971;
else_60970:
              .reg.s32       i_36159;
              mov.b32        i_36159, 0;
              .reg.s32       sum_36160;
              mov.b32        sum_36160, 0;
              .reg.s32       v0_36161;
              mov.b32        v0_36161, temp_36150;
              .reg.s32       v1_36162;
              mov.b32        v1_36162, temp_30198;
              .reg.s32       scl_42020;
doloop_60998:
              .reg.s32       sum_36163;
              add.cc.s32     sum_36163, sum_36160, -1640531527;
              .reg.s32       temp_36164;
              shl.b32        temp_36164, v1_36162, 4;
              .reg.s32       temp_36165;
              add.cc.s32     temp_36165, temp_36164, -1556008596;
              .reg.s32       temp_36166;
              add.cc.s32     temp_36166, v1_36162, sum_36163;
              .reg.s32       temp_36167;
              xor.b32        temp_36167, temp_36165, temp_36166;
              .reg.s32       temp_36168;
              shr.u32        temp_36168, v1_36162, 5;
              .reg.s32       temp_36169;
              add.cc.s32     temp_36169, temp_36168, -939442524;
              .reg.s32       temp_36170;
              xor.b32        temp_36170, temp_36167, temp_36169;
              .reg.s32       v0_36171;
              add.cc.s32     v0_36171, v0_36161, temp_36170;
              .reg.s32       temp_36172;
              shl.b32        temp_36172, v0_36171, 4;
              .reg.s32       temp_36173;
              add.cc.s32     temp_36173, temp_36172, -1383041155;
              .reg.s32       temp_36174;
              add.cc.s32     temp_36174, v0_36171, sum_36163;
              .reg.s32       temp_36175;
              xor.b32        temp_36175, temp_36173, temp_36174;
              .reg.s32       temp_36176;
              shr.u32        temp_36176, v0_36171, 5;
              .reg.s32       temp_36177;
              add.cc.s32     temp_36177, temp_36176, 2123724318;
              .reg.s32       temp_36178;
              xor.b32        temp_36178, temp_36175, temp_36177;
              .reg.s32       v1_36179;
              add.cc.s32     v1_36179, v1_36162, temp_36178;
              .reg.s32       i_36180;
              add.cc.s32     i_36180, i_36159, 1;
              .reg.s32       temp_36181;
              set.lt.s32.s32 temp_36181, i_36180, 8;
              mov.b32        scl_42020, v0_36171;
              mov.b32        i_36159, i_36180;
              mov.b32        sum_36160, sum_36163;
              mov.b32        v0_36161, v0_36171;
              mov.b32        v1_36162, v1_36179;
              .reg.pred      temp_36181_60999;
              setp.ne.s32    temp_36181_60999, 0, temp_36181;
  @temp_36181_60999 bra.uni  doloop_60998;
              .reg.s32       temp_56153;
              and.b32        temp_56153, scl_42020, 2147483647;
              .reg.f32       temp_56154;
              cvt.rn.f32.s32 temp_56154, temp_56153;
              .reg.f32       temp_56155;
              div.approx.ftz.f32 temp_56155, temp_56154, 0F4f000000;
              mov.b32        f1_36152, temp_56155;
merge_60971:
              .reg.s32       temp_36153;
              add.cc.s32     temp_36153, temp_36150, 1;
              .reg.f32       r_35987;
              sqrt.approx.f32 r_35987, f1_36152;
              .reg.f32       temp_56159;
              mul.ftz.f32    temp_56159, 0F40c90fdb, f1_36149;
              .reg.f32       temp_56164;
              sin.approx.ftz.f32 temp_56164, temp_56159;
              .reg.f32       cos_56165;
              cos.approx.ftz.f32 cos_56165, temp_56159;
              .reg.f32       temp_56170;
              mul.ftz.f32    temp_56170, r_35987, cos_56165;
              .reg.f32       temp_56184;
              mul.ftz.f32    temp_56184, r_35987, temp_56164;
              .reg.u64       tmp_61000;
              .reg.s32       optix_buffer_id_61001;
              mov.b64        {_, optix_buffer_id_61001}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61002;
{
              .reg.s32       abstract_61003;
              mov.b32        abstract_61003, 1;
              .reg.u64       const_61004;
              mov.b64        const_61004, 648;
              .reg.u64       const_61005;
              mov.b64        const_61005, 0;
 call (ptr_from_optix_id_61002), _rt_buffer_get_id_64, (optix_buffer_id_61001, abstract_61003, abstract_61003, const_61004, const_61005, const_61005, const_61005); // resolving optix id
}
              ld.u64         tmp_61000, [ptr_from_optix_id_61002];
              .reg.f32       tmp_61006;
              .reg.u64       off_61007;
              mad.wide.u32   off_61007, tmp_60848, 176, 168;
              .reg.s32       optix_buffer_id_61008;
              mov.b64        {_, optix_buffer_id_61008}, tmp_61000;
              .reg.u64       ptr_from_optix_id_61009;
{
              .reg.s32       abstract_61010;
              mov.b32        abstract_61010, 1;
              .reg.u64       const_61011;
              mov.b64        const_61011, 512;
              .reg.u64       off_61012;
              add.u64        off_61012, const_61011, off_61007;
              .reg.u64       const_61013;
              mov.b64        const_61013, 0;
 call (ptr_from_optix_id_61009), _rt_buffer_get_id_64, (optix_buffer_id_61008, abstract_61010, abstract_61010, off_61012, const_61013, const_61013, const_61013); // resolving optix id
}
              ld.f32         tmp_61006, [ptr_from_optix_id_61009];
              .reg .f32      temp_56216_0, temp_56216_1, temp_56216_2;
              mul.ftz.f32    temp_56216_0, temp_56170, tmp_61006;
              mul.ftz.f32    temp_56216_1, temp_56184, tmp_61006;
              mul.ftz.f32    temp_56216_2, 0F00000000, tmp_61006;
              .reg .f32      temp_56231_0, temp_56231_1, temp_56231_2;
              sub.ftz.f32    temp_56231_0, temp_56141_0, temp_56216_0;
              sub.ftz.f32    temp_56231_1, temp_56141_1, temp_56216_1;
              sub.ftz.f32    temp_56231_2, temp_56141_2, temp_56216_2;
              .reg .f32      temp_56242_0, temp_56242_1, temp_56242_2;
              mul.ftz.f32    temp_56242_0, temp_56231_0, temp_56231_0;
              mul.ftz.f32    temp_56242_1, temp_56231_1, temp_56231_1;
              mul.ftz.f32    temp_56242_2, temp_56231_2, temp_56231_2;
              .reg .f32      temp_56244_0, temp_56244_1, temp_56244_2;
              mul.ftz.f32    temp_56244_0, temp_56142_0, temp_56231_0;
              mul.ftz.f32    temp_56244_1, temp_56142_1, temp_56231_1;
              mul.ftz.f32    temp_56244_2, temp_56142_2, temp_56231_2;
              .reg .f32      temp_56246_0, temp_56246_1, temp_56246_2;
              mul.ftz.f32    temp_56246_0, temp_56231_0, temp_56142_0;
              mul.ftz.f32    temp_56246_1, temp_56231_1, temp_56142_1;
              mul.ftz.f32    temp_56246_2, temp_56231_2, temp_56142_2;
              .reg .f32      temp_56247_0, temp_56247_1, temp_56247_2;
              add.ftz.f32    temp_56247_0, temp_56244_0, temp_56246_0;
              add.ftz.f32    temp_56247_1, temp_56244_1, temp_56246_1;
              add.ftz.f32    temp_56247_2, temp_56244_2, temp_56246_2;
              .reg .f32      temp_56249_0, temp_56249_1, temp_56249_2;
              mul.ftz.f32    temp_56249_0, temp_56143_0, temp_56231_0;
              mul.ftz.f32    temp_56249_1, temp_56143_1, temp_56231_1;
              mul.ftz.f32    temp_56249_2, temp_56143_2, temp_56231_2;
              .reg .f32      temp_56251_0, temp_56251_1, temp_56251_2;
              mul.ftz.f32    temp_56251_0, temp_56231_0, temp_56143_0;
              mul.ftz.f32    temp_56251_1, temp_56231_1, temp_56143_1;
              mul.ftz.f32    temp_56251_2, temp_56231_2, temp_56143_2;
              .reg .f32      temp_56252_0, temp_56252_1, temp_56252_2;
              add.ftz.f32    temp_56252_0, temp_56249_0, temp_56251_0;
              add.ftz.f32    temp_56252_1, temp_56249_1, temp_56251_1;
              add.ftz.f32    temp_56252_2, temp_56249_2, temp_56251_2;
              .reg.f32       temp_56259;
              add.ftz.f32    temp_56259, temp_56242_0, temp_56242_1;
              .reg.f32       temp_56260;
              add.ftz.f32    temp_56260, temp_56247_0, temp_56247_1;
              .reg.f32       temp_56261;
              add.ftz.f32    temp_56261, temp_56252_0, temp_56252_1;
              .reg.f32       temp_56265;
              add.ftz.f32    temp_56265, temp_56259, temp_56242_2;
              .reg.f32       temp_56266;
              add.ftz.f32    temp_56266, temp_56260, temp_56247_2;
              .reg.f32       temp_56267;
              add.ftz.f32    temp_56267, temp_56261, temp_56252_2;
              .reg.f32       temp_56270;
              lg2.approx.ftz.f32 temp_56270, temp_56265;
              mul.ftz.f32    temp_56270, temp_56270, 0Fbfc00000;
              ex2.approx.ftz.f32 temp_56270, temp_56270;
              .reg.f32       f_56271;
              mul.ftz.f32    f_56271, 0Fbf000000, temp_56270;
              .reg.f32       temp_56272;
              rsqrt.approx.ftz.f32 temp_56272, temp_56265;
              .reg.f32       temp_56274;
              mul.ftz.f32    temp_56274, f_56271, temp_56266;
              .reg.f32       temp_56276;
              mul.ftz.f32    temp_56276, f_56271, temp_56267;
              .reg .f32      temp_56285_0, temp_56285_1, temp_56285_2;
              mul.ftz.f32    temp_56285_0, temp_56231_0, temp_56272;
              mul.ftz.f32    temp_56285_1, temp_56231_1, temp_56272;
              mul.ftz.f32    temp_56285_2, temp_56231_2, temp_56272;
              .reg .f32      temp_56287_0, temp_56287_1, temp_56287_2;
              mul.ftz.f32    temp_56287_0, temp_56142_0, temp_56272;
              mul.ftz.f32    temp_56287_1, temp_56142_1, temp_56272;
              mul.ftz.f32    temp_56287_2, temp_56142_2, temp_56272;
              .reg .f32      temp_56288_0, temp_56288_1, temp_56288_2;
              mul.ftz.f32    temp_56288_0, temp_56231_0, temp_56274;
              mul.ftz.f32    temp_56288_1, temp_56231_1, temp_56274;
              mul.ftz.f32    temp_56288_2, temp_56231_2, temp_56274;
              .reg .f32      temp_56289_0, temp_56289_1, temp_56289_2;
              add.ftz.f32    temp_56289_0, temp_56287_0, temp_56288_0;
              add.ftz.f32    temp_56289_1, temp_56287_1, temp_56288_1;
              add.ftz.f32    temp_56289_2, temp_56287_2, temp_56288_2;
              .reg .f32      temp_56291_0, temp_56291_1, temp_56291_2;
              mul.ftz.f32    temp_56291_0, temp_56143_0, temp_56272;
              mul.ftz.f32    temp_56291_1, temp_56143_1, temp_56272;
              mul.ftz.f32    temp_56291_2, temp_56143_2, temp_56272;
              .reg .f32      temp_56292_0, temp_56292_1, temp_56292_2;
              mul.ftz.f32    temp_56292_0, temp_56231_0, temp_56276;
              mul.ftz.f32    temp_56292_1, temp_56231_1, temp_56276;
              mul.ftz.f32    temp_56292_2, temp_56231_2, temp_56276;
              .reg .f32      temp_56293_0, temp_56293_1, temp_56293_2;
              add.ftz.f32    temp_56293_0, temp_56291_0, temp_56292_0;
              add.ftz.f32    temp_56293_1, temp_56291_1, temp_56292_1;
              add.ftz.f32    temp_56293_2, temp_56291_2, temp_56292_2;
              .reg.s32       temp_56308;
              set.lt.ftz.s32.f32 temp_56308, temp_56285_2, cosW_35833;
              .reg.f32       scl_42028;
              .reg .f32      scl_42027_0, scl_42027_1, scl_42027_2;
              .reg.pred      temp_56308_61016;
              setp.ne.s32    temp_56308_61016, 0, temp_56308;
  @!temp_56308_61016 bra     else_61014;
              mov.b32        scl_42028, 0F7f800000;
              mov.b32        scl_42027_0, 0F00000000;
              mov.b32        scl_42027_1, 0F00000000;
              mov.b32        scl_42027_2, 0F00000000;
              bra.uni        merge_61015;
else_61014:
              .reg.f32       temp_56312;
              mul.ftz.f32    temp_56312, temp_56272, temp_56272;
              .reg.f32       temp_56327;
              sub.ftz.f32    temp_56327, temp_56285_2, cosW_35833;
              .reg.f32       temp_56336;
              sub.ftz.f32    temp_56336, cosF_35840, cosW_35833;
              .reg.f32       temp_56343;
              div.approx.ftz.f32 temp_56343, temp_56327, temp_56336;
              .reg.s32       temp_56353;
              set.lt.ftz.s32.f32 temp_56353, temp_56343, 0F00000000;
              .reg.f32       temp_56354;
              .reg.pred      temp_56353_61017;
              setp.ne.s32    temp_56353_61017, 0, temp_56353;
              selp.f32       temp_56354, 0F00000000, temp_56343, temp_56353_61017;
              .reg.s32       temp_56357;
              set.lt.ftz.s32.f32 temp_56357, temp_56354, 0F3f800000;
              .reg.f32       temp_56358;
              .reg.pred      temp_56357_61018;
              setp.ne.s32    temp_56357_61018, 0, temp_56357;
              selp.f32       temp_56358, temp_56354, 0F3f800000, temp_56357_61018;
              .reg.f32       temp_56361;
              mul.ftz.f32    temp_56361, temp_56358, temp_56358;
              .reg.f32       temp_56368;
              mul.ftz.f32    temp_56368, 0F40000000, temp_56358;
              .reg.f32       temp_56369;
              sub.ftz.f32    temp_56369, 0F40400000, temp_56368;
              .reg.f32       temp_56370;
              mul.ftz.f32    temp_56370, temp_56361, temp_56369;
              .reg.f32       temp_56376;
              mul.ftz.f32    temp_56376, temp_56312, temp_56370;
              .reg.u64       tmp_61019;
              .reg.s32       optix_buffer_id_61020;
              mov.b64        {_, optix_buffer_id_61020}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61021;
{
              .reg.s32       abstract_61022;
              mov.b32        abstract_61022, 1;
              .reg.u64       const_61023;
              mov.b64        const_61023, 648;
              .reg.u64       const_61024;
              mov.b64        const_61024, 0;
 call (ptr_from_optix_id_61021), _rt_buffer_get_id_64, (optix_buffer_id_61020, abstract_61022, abstract_61022, const_61023, const_61024, const_61024, const_61024); // resolving optix id
}
              ld.u64         tmp_61019, [ptr_from_optix_id_61021];
              .reg .f32      tmp_61025_0, tmp_61025_1, tmp_61025_2;
              .reg.u64       off_61026;
              mad.wide.u32   off_61026, tmp_60848, 176, 144;
              .reg.s32       optix_buffer_id_61027;
              mov.b64        {_, optix_buffer_id_61027}, tmp_61019;
              .reg.u64       ptr_from_optix_id_61028;
{
              .reg.s32       abstract_61029;
              mov.b32        abstract_61029, 1;
              .reg.u64       const_61030;
              mov.b64        const_61030, 512;
              .reg.u64       off_61031;
              add.u64        off_61031, const_61030, off_61026;
              .reg.u64       const_61032;
              mov.b64        const_61032, 0;
 call (ptr_from_optix_id_61028), _rt_buffer_get_id_64, (optix_buffer_id_61027, abstract_61029, abstract_61029, off_61031, const_61032, const_61032, const_61032); // resolving optix id
}
              ld.v2.f32      {tmp_61025_0, tmp_61025_1}, [ptr_from_optix_id_61028];
              ld.f32         tmp_61025_2, [ptr_from_optix_id_61028+8];
              .reg .f32      temp_56390_0, temp_56390_1, temp_56390_2;
              mul.ftz.f32    temp_56390_0, temp_56376, tmp_61025_0;
              mul.ftz.f32    temp_56390_1, temp_56376, tmp_61025_1;
              mul.ftz.f32    temp_56390_2, temp_56376, tmp_61025_2;
              .reg .f32      temp_56392_0, temp_56392_1, temp_56392_2;
              mul.ftz.f32    temp_56392_0, 0F3ea2f983, temp_56390_0;
              mul.ftz.f32    temp_56392_1, 0F3ea2f983, temp_56390_1;
              mul.ftz.f32    temp_56392_2, 0F3ea2f983, temp_56390_2;
              .reg.f32       temp_56396;
              rcp.approx.ftz.f32 temp_56396, temp_56272;
              mov.b32        scl_42028, temp_56396;
              mov.b32        scl_42027_0, temp_56392_0;
              mov.b32        scl_42027_1, temp_56392_1;
              mov.b32        scl_42027_2, temp_56392_2;
merge_61015:
              .reg .f32      temp_56403_0, temp_56403_1, temp_56403_2;
              neg.ftz.f32    temp_56403_0, temp_56285_0;
              neg.ftz.f32    temp_56403_1, temp_56285_1;
              neg.ftz.f32    temp_56403_2, temp_56285_2;
              .reg .f32      temp_56405_0, temp_56405_1, temp_56405_2;
              neg.ftz.f32    temp_56405_0, temp_56289_0;
              neg.ftz.f32    temp_56405_1, temp_56289_1;
              neg.ftz.f32    temp_56405_2, temp_56289_2;
              .reg .f32      temp_56407_0, temp_56407_1, temp_56407_2;
              neg.ftz.f32    temp_56407_0, temp_56293_0;
              neg.ftz.f32    temp_56407_1, temp_56293_1;
              neg.ftz.f32    temp_56407_2, temp_56293_2;
              .reg .f32      temp_56421_0, temp_56421_1, temp_56421_2;
              mul.ftz.f32    temp_56421_0, tmp_60862_0, temp_56403_0;
              mul.ftz.f32    temp_56421_1, tmp_60862_1, temp_56403_0;
              mul.ftz.f32    temp_56421_2, tmp_60862_2, temp_56403_0;
              .reg .f32      temp_56424_0, temp_56424_1, temp_56424_2;
              mul.ftz.f32    temp_56424_0, tmp_60862_0, temp_56405_0;
              mul.ftz.f32    temp_56424_1, tmp_60862_1, temp_56405_0;
              mul.ftz.f32    temp_56424_2, tmp_60862_2, temp_56405_0;
              .reg .f32      temp_56428_0, temp_56428_1, temp_56428_2;
              mul.ftz.f32    temp_56428_0, tmp_60862_0, temp_56407_0;
              mul.ftz.f32    temp_56428_1, tmp_60862_1, temp_56407_0;
              mul.ftz.f32    temp_56428_2, tmp_60862_2, temp_56407_0;
              .reg .f32      temp_56440_0, temp_56440_1, temp_56440_2;
              mul.ftz.f32    temp_56440_0, tmp_60876_0, temp_56403_1;
              mul.ftz.f32    temp_56440_1, tmp_60876_1, temp_56403_1;
              mul.ftz.f32    temp_56440_2, tmp_60876_2, temp_56403_1;
              .reg .f32      temp_56443_0, temp_56443_1, temp_56443_2;
              mul.ftz.f32    temp_56443_0, tmp_60876_0, temp_56405_1;
              mul.ftz.f32    temp_56443_1, tmp_60876_1, temp_56405_1;
              mul.ftz.f32    temp_56443_2, tmp_60876_2, temp_56405_1;
              .reg .f32      temp_56447_0, temp_56447_1, temp_56447_2;
              mul.ftz.f32    temp_56447_0, tmp_60876_0, temp_56407_1;
              mul.ftz.f32    temp_56447_1, tmp_60876_1, temp_56407_1;
              mul.ftz.f32    temp_56447_2, tmp_60876_2, temp_56407_1;
              .reg .f32      temp_56449_0, temp_56449_1, temp_56449_2;
              add.ftz.f32    temp_56449_0, temp_56421_0, temp_56440_0;
              add.ftz.f32    temp_56449_1, temp_56421_1, temp_56440_1;
              add.ftz.f32    temp_56449_2, temp_56421_2, temp_56440_2;
              .reg .f32      temp_56450_0, temp_56450_1, temp_56450_2;
              add.ftz.f32    temp_56450_0, temp_56424_0, temp_56443_0;
              add.ftz.f32    temp_56450_1, temp_56424_1, temp_56443_1;
              add.ftz.f32    temp_56450_2, temp_56424_2, temp_56443_2;
              .reg .f32      temp_56451_0, temp_56451_1, temp_56451_2;
              add.ftz.f32    temp_56451_0, temp_56428_0, temp_56447_0;
              add.ftz.f32    temp_56451_1, temp_56428_1, temp_56447_1;
              add.ftz.f32    temp_56451_2, temp_56428_2, temp_56447_2;
              .reg .f32      temp_56462_0, temp_56462_1, temp_56462_2;
              mul.ftz.f32    temp_56462_0, tmp_60890_0, temp_56403_2;
              mul.ftz.f32    temp_56462_1, tmp_60890_1, temp_56403_2;
              mul.ftz.f32    temp_56462_2, tmp_60890_2, temp_56403_2;
              .reg .f32      temp_56465_0, temp_56465_1, temp_56465_2;
              mul.ftz.f32    temp_56465_0, tmp_60890_0, temp_56405_2;
              mul.ftz.f32    temp_56465_1, tmp_60890_1, temp_56405_2;
              mul.ftz.f32    temp_56465_2, tmp_60890_2, temp_56405_2;
              .reg .f32      temp_56469_0, temp_56469_1, temp_56469_2;
              mul.ftz.f32    temp_56469_0, tmp_60890_0, temp_56407_2;
              mul.ftz.f32    temp_56469_1, tmp_60890_1, temp_56407_2;
              mul.ftz.f32    temp_56469_2, tmp_60890_2, temp_56407_2;
              .reg .f32      temp_56471_0, temp_56471_1, temp_56471_2;
              add.ftz.f32    temp_56471_0, temp_56449_0, temp_56462_0;
              add.ftz.f32    temp_56471_1, temp_56449_1, temp_56462_1;
              add.ftz.f32    temp_56471_2, temp_56449_2, temp_56462_2;
              .reg .f32      temp_56472_0, temp_56472_1, temp_56472_2;
              add.ftz.f32    temp_56472_0, temp_56450_0, temp_56465_0;
              add.ftz.f32    temp_56472_1, temp_56450_1, temp_56465_1;
              add.ftz.f32    temp_56472_2, temp_56450_2, temp_56465_2;
              .reg .f32      temp_56473_0, temp_56473_1, temp_56473_2;
              add.ftz.f32    temp_56473_0, temp_56451_0, temp_56469_0;
              add.ftz.f32    temp_56473_1, temp_56451_1, temp_56469_1;
              add.ftz.f32    temp_56473_2, temp_56451_2, temp_56469_2;
              .reg .f32      temp_56480_0, temp_56480_1, temp_56480_2;
              mul.ftz.f32    temp_56480_0, temp_52006_0, tmp_60561_0;
              mul.ftz.f32    temp_56480_1, temp_52006_1, tmp_60561_1;
              mul.ftz.f32    temp_56480_2, temp_52006_2, tmp_60561_2;
              .reg.f32       temp_56497;
              add.ftz.f32    temp_56497, temp_56480_0, temp_56480_1;
              .reg.f32       temp_56503;
              add.ftz.f32    temp_56503, temp_56497, temp_56480_2;
              .reg .f32      temp_56511_0, temp_56511_1, temp_56511_2;
              mul.ftz.f32    temp_56511_0, temp_56471_0, tmp_60561_0;
              mul.ftz.f32    temp_56511_1, temp_56471_1, tmp_60561_1;
              mul.ftz.f32    temp_56511_2, temp_56471_2, tmp_60561_2;
              .reg.f32       temp_56528;
              add.ftz.f32    temp_56528, temp_56511_0, temp_56511_1;
              .reg.f32       temp_56534;
              add.ftz.f32    temp_56534, temp_56528, temp_56511_2;
              .reg.f32       temp_56540;
              mul.ftz.f32    temp_56540, temp_56503, temp_56534;
              .reg.s32       temp_56554;
              set.gt.ftz.s32.f32 temp_56554, temp_56540, 0F00000000;
              .reg .f32      bsdf_35074_0, bsdf_35074_1, bsdf_35074_2;
              .reg.pred      temp_56554_61035;
              setp.ne.s32    temp_56554_61035, 0, temp_56554;
  @!temp_56554_61035 bra     else_61033;
              .reg .f32      temp_56557_0, temp_56557_1, temp_56557_2;
              div.approx.ftz.f32 temp_56557_0, temp_52777_0, 0F40490fdb;
              div.approx.ftz.f32 temp_56557_1, temp_52777_1, 0F40490fdb;
              div.approx.ftz.f32 temp_56557_2, temp_52777_2, 0F40490fdb;
              .reg .f32      temp_56562_0, temp_56562_1, temp_56562_2;
              mul.ftz.f32    temp_56562_0, temp_56471_0, tmp_59490_0;
              mul.ftz.f32    temp_56562_1, temp_56471_1, tmp_59490_1;
              mul.ftz.f32    temp_56562_2, temp_56471_2, tmp_59490_2;
              .reg.f32       temp_56579;
              add.ftz.f32    temp_56579, temp_56562_0, temp_56562_1;
              .reg.f32       temp_56585;
              add.ftz.f32    temp_56585, temp_56579, temp_56562_2;
              .reg.s32       temp_56591;
              set.ge.ftz.s32.f32 temp_56591, temp_56540, 0F00000000;
              .reg.s32       temp_56594;
              set.lt.ftz.s32.f32 temp_56594, temp_56585, 0F00000000;
              .reg.s32       temp_56597;
              set.lt.ftz.s32.f32 temp_56597, temp_56534, 0F00000000;
              .reg.s32       temp_36301;
              xor.b32        temp_36301, temp_56594, temp_56597;
              .reg.s32       temp_36302;
              not.b32        temp_36302, temp_36301;
              .reg.s32       temp_56598;
              and.b32        temp_56598, temp_56591, temp_36302;
              .reg.s32       temp_36294;
              not.b32        temp_36294, temp_56598;
              .reg .f32      refl_36295_0, refl_36295_1, refl_36295_2;
              .reg.pred      temp_36294_61036;
              setp.ne.s32    temp_36294_61036, 0, temp_36294;
              selp.f32       refl_36295_0, 0F00000000, temp_56557_0, temp_36294_61036;
              selp.f32       refl_36295_1, 0F00000000, temp_56557_1, temp_36294_61036;
              selp.f32       refl_36295_2, 0F00000000, temp_56557_2, temp_36294_61036;
              .reg .f32      temp_56603_0, temp_56603_1, temp_56603_2;
              mul.ftz.f32    temp_56603_0, tmp_59490_0, temp_56471_0;
              mul.ftz.f32    temp_56603_1, tmp_59490_1, temp_56471_1;
              mul.ftz.f32    temp_56603_2, tmp_59490_2, temp_56471_2;
              .reg.f32       temp_56620;
              add.ftz.f32    temp_56620, temp_56603_0, temp_56603_1;
              .reg.f32       temp_56626;
              add.ftz.f32    temp_56626, temp_56620, temp_56603_2;
              .reg.s32       temp_56631;
              set.lt.ftz.s32.f32 temp_56631, temp_56626, 0F00000000;
              .reg.f32       temp_56639;
              neg.ftz.f32    temp_56639, temp_56626;
              .reg.f32       scl_56632;
              .reg.pred      temp_56631_61037;
              setp.ne.s32    temp_56631_61037, 0, temp_56631;
              selp.f32       scl_56632, temp_56639, temp_56626, temp_56631_61037;
              .reg .f32      temp_56646_0, temp_56646_1, temp_56646_2;
              mul.ftz.f32    temp_56646_0, scl_56632, refl_36295_0;
              mul.ftz.f32    temp_56646_1, scl_56632, refl_36295_1;
              mul.ftz.f32    temp_56646_2, scl_56632, refl_36295_2;
              .reg .f32      temp_56659_0, temp_56659_1, temp_56659_2;
              mul.ftz.f32    temp_56659_0, temp_52657_0, temp_56471_0;
              mul.ftz.f32    temp_56659_1, temp_52657_1, temp_56471_0;
              mul.ftz.f32    temp_56659_2, temp_52657_2, temp_56471_0;
              .reg .f32      temp_56678_0, temp_56678_1, temp_56678_2;
              mul.ftz.f32    temp_56678_0, temp_52669_0, temp_56471_1;
              mul.ftz.f32    temp_56678_1, temp_52669_1, temp_56471_1;
              mul.ftz.f32    temp_56678_2, temp_52669_2, temp_56471_1;
              .reg .f32      temp_56687_0, temp_56687_1, temp_56687_2;
              add.ftz.f32    temp_56687_0, temp_56659_0, temp_56678_0;
              add.ftz.f32    temp_56687_1, temp_56659_1, temp_56678_1;
              add.ftz.f32    temp_56687_2, temp_56659_2, temp_56678_2;
              .reg .f32      temp_56700_0, temp_56700_1, temp_56700_2;
              mul.ftz.f32    temp_56700_0, temp_52681_0, temp_56471_2;
              mul.ftz.f32    temp_56700_1, temp_52681_1, temp_56471_2;
              mul.ftz.f32    temp_56700_2, temp_52681_2, temp_56471_2;
              .reg .f32      temp_56709_0, temp_56709_1, temp_56709_2;
              add.ftz.f32    temp_56709_0, temp_56687_0, temp_56700_0;
              add.ftz.f32    temp_56709_1, temp_56687_1, temp_56700_1;
              add.ftz.f32    temp_56709_2, temp_56687_2, temp_56700_2;
              .reg .f32      temp_56725_0, temp_56725_1, temp_56725_2;
              mul.ftz.f32    temp_56725_0, temp_52657_0, temp_52006_0;
              mul.ftz.f32    temp_56725_1, temp_52657_1, temp_52006_0;
              mul.ftz.f32    temp_56725_2, temp_52657_2, temp_52006_0;
              .reg .f32      temp_56744_0, temp_56744_1, temp_56744_2;
              mul.ftz.f32    temp_56744_0, temp_52669_0, temp_52006_1;
              mul.ftz.f32    temp_56744_1, temp_52669_1, temp_52006_1;
              mul.ftz.f32    temp_56744_2, temp_52669_2, temp_52006_1;
              .reg .f32      temp_56753_0, temp_56753_1, temp_56753_2;
              add.ftz.f32    temp_56753_0, temp_56725_0, temp_56744_0;
              add.ftz.f32    temp_56753_1, temp_56725_1, temp_56744_1;
              add.ftz.f32    temp_56753_2, temp_56725_2, temp_56744_2;
              .reg .f32      temp_56766_0, temp_56766_1, temp_56766_2;
              mul.ftz.f32    temp_56766_0, temp_52681_0, temp_52006_2;
              mul.ftz.f32    temp_56766_1, temp_52681_1, temp_52006_2;
              mul.ftz.f32    temp_56766_2, temp_52681_2, temp_52006_2;
              .reg .f32      temp_56775_0, temp_56775_1, temp_56775_2;
              add.ftz.f32    temp_56775_0, temp_56753_0, temp_56766_0;
              add.ftz.f32    temp_56775_1, temp_56753_1, temp_56766_1;
              add.ftz.f32    temp_56775_2, temp_56753_2, temp_56766_2;
              .reg .f32      temp_56784_0, temp_56784_1, temp_56784_2;
              add.ftz.f32    temp_56784_0, temp_56775_0, temp_56709_0;
              add.ftz.f32    temp_56784_1, temp_56775_1, temp_56709_1;
              add.ftz.f32    temp_56784_2, temp_56775_2, temp_56709_2;
              .reg .f32      temp_56795_0, temp_56795_1, temp_56795_2;
              mul.ftz.f32    temp_56795_0, temp_56784_0, temp_56784_0;
              mul.ftz.f32    temp_56795_1, temp_56784_1, temp_56784_1;
              mul.ftz.f32    temp_56795_2, temp_56784_2, temp_56784_2;
              .reg.f32       temp_56812;
              add.ftz.f32    temp_56812, temp_56795_0, temp_56795_1;
              .reg.f32       temp_56818;
              add.ftz.f32    temp_56818, temp_56812, temp_56795_2;
              .reg.f32       temp_56823;
              rsqrt.approx.ftz.f32 temp_56823, temp_56818;
              .reg .f32      temp_56830_0, temp_56830_1, temp_56830_2;
              mul.ftz.f32    temp_56830_0, temp_56784_0, temp_56823;
              mul.ftz.f32    temp_56830_1, temp_56784_1, temp_56823;
              mul.ftz.f32    temp_56830_2, temp_56784_2, temp_56823;
              .reg.s32       temp_56849;
              set.lt.ftz.s32.f32 temp_56849, temp_56830_2, 0F00000000;
              .reg.f32       temp_56857;
              neg.ftz.f32    temp_56857, temp_56830_2;
              .reg.f32       scl_56850;
              .reg.pred      temp_56849_61038;
              setp.ne.s32    temp_56849_61038, 0, temp_56849;
              selp.f32       scl_56850, temp_56857, temp_56830_2, temp_56849_61038;
              .reg.f32       temp_56864;
              add.ftz.f32    temp_56864, tmp_60051, 0F40000000;
              .reg.f32       temp_56874;
              div.approx.ftz.f32 temp_56874, temp_56864, 0F41c90fdb;
              .reg.f32       temp_56894;
              lg2.approx.ftz.f32 temp_56894, scl_56850;
              mul.ftz.f32    temp_56894, temp_56894, tmp_60051;
              ex2.approx.ftz.f32 temp_56894, temp_56894;
              .reg.f32       temp_56902;
              mul.ftz.f32    temp_56902, temp_56874, temp_56894;
              .reg .f32      temp_56916_0, temp_56916_1, temp_56916_2;
              mul.ftz.f32    temp_56916_0, temp_56902, temp_52778_0;
              mul.ftz.f32    temp_56916_1, temp_56902, temp_52778_1;
              mul.ftz.f32    temp_56916_2, temp_56902, temp_52778_2;
              .reg .f32      refl_36324_0, refl_36324_1, refl_36324_2;
              .reg.pred      temp_36294_61039;
              setp.ne.s32    temp_36294_61039, 0, temp_36294;
              selp.f32       refl_36324_0, 0F00000000, temp_56916_0, temp_36294_61039;
              selp.f32       refl_36324_1, 0F00000000, temp_56916_1, temp_36294_61039;
              selp.f32       refl_36324_2, 0F00000000, temp_56916_2, temp_36294_61039;
              .reg .f32      temp_56919_0, temp_56919_1, temp_56919_2;
              mul.ftz.f32    temp_56919_0, scl_56632, refl_36324_0;
              mul.ftz.f32    temp_56919_1, scl_56632, refl_36324_1;
              mul.ftz.f32    temp_56919_2, scl_56632, refl_36324_2;
              .reg .f32      temp_56920_0, temp_56920_1, temp_56920_2;
              add.ftz.f32    temp_56920_0, temp_56646_0, temp_56919_0;
              add.ftz.f32    temp_56920_1, temp_56646_1, temp_56919_1;
              add.ftz.f32    temp_56920_2, temp_56646_2, temp_56919_2;
              mov.b32        bsdf_35074_0, temp_56920_0;
              mov.b32        bsdf_35074_1, temp_56920_1;
              mov.b32        bsdf_35074_2, temp_56920_2;
              bra.uni        merge_61034;
else_61033:
              mov.b32        bsdf_35074_0, 0F00000000;
              mov.b32        bsdf_35074_1, 0F00000000;
              mov.b32        bsdf_35074_2, 0F00000000;
merge_61034:
              .reg .f32      temp_56932_0, temp_56932_1, temp_56932_2;
              mul.ftz.f32    temp_56932_0, 0F40490fdb, scl_42027_0;
              mul.ftz.f32    temp_56932_1, 0F40490fdb, scl_42027_1;
              mul.ftz.f32    temp_56932_2, 0F40490fdb, scl_42027_2;
              .reg .f32      temp_56933_0, temp_56933_1, temp_56933_2;
              mul.ftz.f32    temp_56933_0, bsdf_35074_0, temp_56932_0;
              mul.ftz.f32    temp_56933_1, bsdf_35074_1, temp_56932_1;
              mul.ftz.f32    temp_56933_2, bsdf_35074_2, temp_56932_2;
              .reg .f32      scl_42044_0, scl_42044_1, scl_42044_2;
              .reg .f32      scl_42045_0, scl_42045_1, scl_42045_2;
              .reg.s32       scl_42046;
              .reg.pred      tmp_59724_61042;
              setp.ne.s32    tmp_59724_61042, 0, tmp_59724;
  @!tmp_59724_61042 bra      else_61040;
              .reg .f32      temp_56934_0, temp_56934_1, temp_56934_2;
              mul.ftz.f32    temp_56934_0, scl_41529_0, tmp_59715_0_0;
              mul.ftz.f32    temp_56934_1, scl_41529_1, tmp_59715_0_1;
              mul.ftz.f32    temp_56934_2, scl_41529_2, tmp_59715_0_2;
              .reg.f32       temp_35205;
              cvt.rn.f32.s32 temp_35205, scl_41526;
              .reg .f32      temp_56936_0, temp_56936_1, temp_56936_2;
              div.approx.ftz.f32 temp_56936_0, temp_56934_0, temp_35205;
              div.approx.ftz.f32 temp_56936_1, temp_56934_1, temp_35205;
              div.approx.ftz.f32 temp_56936_2, temp_56934_2, temp_35205;
              .reg.s32       temp_35207;
              not.b32        temp_35207, temp_56554;
              .reg.s32       temp_35208;
              .reg.pred      temp_35207_61045;
              setp.ne.s32    temp_35207_61045, 0, temp_35207;
  @!temp_35207_61045 bra     else_61043;
              mov.b32        temp_35208, -1;
              bra.uni        merge_61044;
else_61043:
              .reg .f32      temp_56946_0, temp_56946_1, temp_56946_2;
              mul.ftz.f32    temp_56946_0, temp_56932_2, 0F3e38c49c;
              mul.ftz.f32    temp_56946_1, temp_56932_2, 0F3d93d07d;
              mul.ftz.f32    temp_56946_2, temp_56932_2, 0F3f734721;
              .reg .f32      temp_56947_0, temp_56947_1, temp_56947_2;
              fma.rn.ftz.f32 temp_56947_0, 0F3eb71437, temp_56932_1, temp_56946_0;
              fma.rn.ftz.f32 temp_56947_1, 0F3f371437, temp_56932_1, temp_56946_1;
              fma.rn.ftz.f32 temp_56947_2, 0F3df41aef, temp_56932_1, temp_56946_2;
              .reg .f32      temp_56948_0, temp_56948_1, temp_56948_2;
              fma.rn.ftz.f32 temp_56948_0, 0F3ed32d7c, temp_56932_0, temp_56947_0;
              fma.rn.ftz.f32 temp_56948_1, 0F3e59c6ed, temp_56932_0, temp_56947_1;
              fma.rn.ftz.f32 temp_56948_2, 0F3c9e6221, temp_56932_0, temp_56947_2;
              .reg.s32       temp_35219;
              set.eq.ftz.s32.f32 temp_35219, temp_56948_1, 0F00000000;
              mov.b32        temp_35208, temp_35219;
merge_61044:
              .reg .f32      temp_56950_0, temp_56950_1, temp_56950_2;
              add.ftz.f32    temp_56950_0, scl_41818_0, temp_56936_0;
              add.ftz.f32    temp_56950_1, scl_41818_1, temp_56936_1;
              add.ftz.f32    temp_56950_2, scl_41818_2, temp_56936_2;
              .reg .f32      scl_42050_0, scl_42050_1, scl_42050_2;
              .reg.pred      temp_35208_61046;
              setp.ne.s32    temp_35208_61046, 0, temp_35208;
              selp.f32       scl_42050_0, 0F00000000, temp_56936_0, temp_35208_61046;
              selp.f32       scl_42050_1, 0F00000000, temp_56936_1, temp_35208_61046;
              selp.f32       scl_42050_2, 0F00000000, temp_56936_2, temp_35208_61046;
              .reg .f32      scl_42051_0, scl_42051_1, scl_42051_2;
              .reg.pred      temp_35208_61047;
              setp.ne.s32    temp_35208_61047, 0, temp_35208;
              selp.f32       scl_42051_0, temp_56950_0, scl_41818_0, temp_35208_61047;
              selp.f32       scl_42051_1, temp_56950_1, scl_41818_1, temp_35208_61047;
              selp.f32       scl_42051_2, temp_56950_2, scl_41818_2, temp_35208_61047;
              .reg.s32       temp_56951;
              not.b32        temp_56951, temp_35208;
              mov.b32        scl_42044_0, scl_42050_0;
              mov.b32        scl_42044_1, scl_42050_1;
              mov.b32        scl_42044_2, scl_42050_2;
              mov.b32        scl_42045_0, scl_42051_0;
              mov.b32        scl_42045_1, scl_42051_1;
              mov.b32        scl_42045_2, scl_42051_2;
              mov.b32        scl_42046, temp_56951;
              bra.uni        merge_61041;
else_61040:
              .reg .f32      temp_56952_0, temp_56952_1, temp_56952_2;
              mul.ftz.f32    temp_56952_0, temp_56933_0, tmp_59715_0_0;
              mul.ftz.f32    temp_56952_1, temp_56933_1, tmp_59715_0_1;
              mul.ftz.f32    temp_56952_2, temp_56933_2, tmp_59715_0_2;
              mov.b32        scl_42044_0, temp_56952_0;
              mov.b32        scl_42044_1, temp_56952_1;
              mov.b32        scl_42044_2, temp_56952_2;
              mov.b32        scl_42045_0, scl_41818_0;
              mov.b32        scl_42045_1, scl_41818_1;
              mov.b32        scl_42045_2, scl_41818_2;
              mov.b32        scl_42046, 0;
merge_61041:
              .reg .f32      temp_56953_0, temp_56953_1, temp_56953_2;
              mul.ftz.f32    temp_56953_0, scl_42044_0, scl_41504_0;
              mul.ftz.f32    temp_56953_1, scl_42044_1, scl_41504_1;
              mul.ftz.f32    temp_56953_2, scl_42044_2, scl_41504_2;
              .reg .f32      temp_56963_0, temp_56963_1, temp_56963_2;
              mul.ftz.f32    temp_56963_0, temp_56953_2, 0F3e38c49c;
              mul.ftz.f32    temp_56963_1, temp_56953_2, 0F3d93d07d;
              mul.ftz.f32    temp_56963_2, temp_56953_2, 0F3f734721;
              .reg .f32      temp_56964_0, temp_56964_1, temp_56964_2;
              fma.rn.ftz.f32 temp_56964_0, 0F3eb71437, temp_56953_1, temp_56963_0;
              fma.rn.ftz.f32 temp_56964_1, 0F3f371437, temp_56953_1, temp_56963_1;
              fma.rn.ftz.f32 temp_56964_2, 0F3df41aef, temp_56953_1, temp_56963_2;
              .reg .f32      temp_56965_0, temp_56965_1, temp_56965_2;
              fma.rn.ftz.f32 temp_56965_0, 0F3ed32d7c, temp_56953_0, temp_56964_0;
              fma.rn.ftz.f32 temp_56965_1, 0F3e59c6ed, temp_56953_0, temp_56964_1;
              fma.rn.ftz.f32 temp_56965_2, 0F3c9e6221, temp_56953_0, temp_56964_2;
              .reg.u64       tmp_61048;
              ld.param.u64   tmp_61048, [integratorInstanceID_22355];
              .reg.s32       tmp_61049;
              ld.s32         tmp_61049, [tmp_61048];
              .reg.u64       tmp_61050;
              .reg.s32       optix_buffer_id_61051;
              mov.b64        {_, optix_buffer_id_61051}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61052;
{
              .reg.s32       abstract_61053;
              mov.b32        abstract_61053, 1;
              .reg.u64       const_61054;
              mov.b64        const_61054, 568;
              .reg.u64       const_61055;
              mov.b64        const_61055, 0;
 call (ptr_from_optix_id_61052), _rt_buffer_get_id_64, (optix_buffer_id_61051, abstract_61053, abstract_61053, const_61054, const_61055, const_61055, const_61055); // resolving optix id
}
              ld.u64         tmp_61050, [ptr_from_optix_id_61052];
              .reg.f32       tmp_61056;
              .reg.u64       off_61057;
              mad.wide.u32   off_61057, tmp_61049, 112, 4;
              .reg.s32       optix_buffer_id_61058;
              mov.b64        {_, optix_buffer_id_61058}, tmp_61050;
              .reg.u64       ptr_from_optix_id_61059;
{
              .reg.s32       abstract_61060;
              mov.b32        abstract_61060, 1;
              .reg.u64       const_61061;
              mov.b64        const_61061, 512;
              .reg.u64       off_61062;
              add.u64        off_61062, const_61061, off_61057;
              .reg.u64       const_61063;
              mov.b64        const_61063, 0;
 call (ptr_from_optix_id_61059), _rt_buffer_get_id_64, (optix_buffer_id_61058, abstract_61060, abstract_61060, off_61062, const_61063, const_61063, const_61063); // resolving optix id
}
              ld.f32         tmp_61056, [ptr_from_optix_id_61059];
              .reg.s32       has_contrib_35092;
              set.ge.ftz.s32.f32 has_contrib_35092, temp_56965_1, tmp_61056;
              .reg.u64       tmp_61064;
              ld.param.u64   tmp_61064, [integratorInstanceID_22355];
              .reg.s32       tmp_61065;
              ld.s32         tmp_61065, [tmp_61064];
              .reg.u64       tmp_61066;
              .reg.s32       optix_buffer_id_61067;
              mov.b64        {_, optix_buffer_id_61067}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61068;
{
              .reg.s32       abstract_61069;
              mov.b32        abstract_61069, 1;
              .reg.u64       const_61070;
              mov.b64        const_61070, 568;
              .reg.u64       const_61071;
              mov.b64        const_61071, 0;
 call (ptr_from_optix_id_61068), _rt_buffer_get_id_64, (optix_buffer_id_61067, abstract_61069, abstract_61069, const_61070, const_61071, const_61071, const_61071); // resolving optix id
}
              ld.u64         tmp_61066, [ptr_from_optix_id_61068];
              .reg.s32       tmp_61072;
              .reg.u64       off_61073;
              mad.wide.u32   off_61073, tmp_61065, 112, 12;
              .reg.s32       optix_buffer_id_61074;
              mov.b64        {_, optix_buffer_id_61074}, tmp_61066;
              .reg.u64       ptr_from_optix_id_61075;
{
              .reg.s32       abstract_61076;
              mov.b32        abstract_61076, 1;
              .reg.u64       const_61077;
              mov.b64        const_61077, 512;
              .reg.u64       off_61078;
              add.u64        off_61078, const_61077, off_61073;
              .reg.u64       const_61079;
              mov.b64        const_61079, 0;
 call (ptr_from_optix_id_61075), _rt_buffer_get_id_64, (optix_buffer_id_61074, abstract_61076, abstract_61076, off_61078, const_61079, const_61079, const_61079); // resolving optix id
}
              ld.s32         tmp_61072, [ptr_from_optix_id_61075];
              .reg.s32       do_bounce_35094;
              set.lt.s32.s32 do_bounce_35094, tmp_59715_3, tmp_61072;
              .reg.s32       temp_35095;
              or.b32         temp_35095, has_contrib_35092, scl_42046;
              .reg.s32       temp_35096;
              and.b32        temp_35096, temp_35095, do_bounce_35094;
              .reg.u64       scl_42082;
              .reg.u64       scl_42083;
              .reg.u64       scl_42084;
              .reg.f32       scl_42070;
              .reg.pred      temp_35096_61082;
              setp.ne.s32    temp_35096_61082, 0, temp_35096;
  @!temp_35096_61082 bra     else_61080;
              .reg.f32       temp_35107;
              mul.ftz.f32    temp_35107, tmp_59738, scl_41822;
              .reg .f32      temp_56976_0, temp_56976_1, temp_56976_2;
              mul.ftz.f32    temp_56976_0, tmp_60561_0, temp_35107;
              mul.ftz.f32    temp_56976_1, tmp_60561_1, temp_35107;
              mul.ftz.f32    temp_56976_2, tmp_60561_2, temp_35107;
              .reg.u64       tmp_61083;
              ld.param.u64   tmp_61083, [f_22353];
              .reg .f32      tmp_61084_0, tmp_61084_1, tmp_61084_2;
              ld.v2.f32      {tmp_61084_0, tmp_61084_1}, [tmp_61083+64];
              ld.f32         tmp_61084_2, [tmp_61083+72];
              .reg .f32      temp_56978_0, temp_56978_1, temp_56978_2;
              mul.ftz.f32    temp_56978_0, tmp_61084_0, temp_35107;
              mul.ftz.f32    temp_56978_1, tmp_61084_1, temp_35107;
              mul.ftz.f32    temp_56978_2, tmp_61084_2, temp_35107;
              .reg.u64       tmp_61085;
              ld.param.u64   tmp_61085, [f_22353];
              .reg .f32      tmp_61086_0, tmp_61086_1, tmp_61086_2;
              ld.v2.f32      {tmp_61086_0, tmp_61086_1}, [tmp_61085+80];
              ld.f32         tmp_61086_2, [tmp_61085+88];
              .reg .f32      temp_56982_0, temp_56982_1, temp_56982_2;
              mul.ftz.f32    temp_56982_0, tmp_61086_0, temp_35107;
              mul.ftz.f32    temp_56982_1, tmp_61086_1, temp_35107;
              mul.ftz.f32    temp_56982_2, tmp_61086_2, temp_35107;
              .reg .f32      temp_56989_0, temp_56989_1, temp_56989_2;
              add.ftz.f32    temp_56989_0, tmp_59506_0, temp_56976_0;
              add.ftz.f32    temp_56989_1, tmp_59506_1, temp_56976_1;
              add.ftz.f32    temp_56989_2, tmp_59506_2, temp_56976_2;
              .reg .f32      temp_56992_0, temp_56992_1, temp_56992_2;
              add.ftz.f32    temp_56992_0, tmp_59508_0, temp_56978_0;
              add.ftz.f32    temp_56992_1, tmp_59508_1, temp_56978_1;
              add.ftz.f32    temp_56992_2, tmp_59508_2, temp_56978_2;
              .reg .f32      temp_56995_0, temp_56995_1, temp_56995_2;
              add.ftz.f32    temp_56995_0, tmp_59510_0, temp_56982_0;
              add.ftz.f32    temp_56995_1, tmp_59510_1, temp_56982_1;
              add.ftz.f32    temp_56995_2, tmp_59510_2, temp_56982_2;
              .reg.f32       temp_35112;
              mul.ftz.f32    temp_35112, 0F40000000, tmp_59738;
              .reg.f32       temp_57001;
              sub.ftz.f32    temp_57001, scl_42028, temp_35112;
              .reg.f32       temp_35117;
              cvt.rn.f32.s32 temp_35117, scl_41526;
              .reg.f32       temp_35118;
              div.approx.ftz.f32 temp_35118, tmp_59715_1, temp_35117;
              .reg.f32       trans_35119;
              .reg.pred      tmp_59724_61087;
              setp.ne.s32    tmp_59724_61087, 0, tmp_59724;
              selp.f32       trans_35119, temp_35118, 0F00000000, tmp_59724_61087;
              .reg.s32       tmp_61088;
              .reg.u64       off_61089;
              mad.wide.u32   off_61089, cdf_iter_31254, 20, 4;
              .reg.s32       optix_buffer_id_61090;
              mov.b64        {_, optix_buffer_id_61090}, tmp_60572;
              .reg.u64       ptr_from_optix_id_61091;
{
              .reg.s32       abstract_61092;
              mov.b32        abstract_61092, 1;
              .reg.u64       const_61093;
              mov.b64        const_61093, 512;
              .reg.u64       off_61094;
              add.u64        off_61094, const_61093, off_61089;
              .reg.u64       const_61095;
              mov.b64        const_61095, 0;
 call (ptr_from_optix_id_61091), _rt_buffer_get_id_64, (optix_buffer_id_61090, abstract_61092, abstract_61092, off_61094, const_61095, const_61095, const_61095); // resolving optix id
}
              ld.s32         tmp_61088, [ptr_from_optix_id_61091];
              .reg.s32       temp_35123;
              .reg.pred      temp_56554_61098;
              setp.ne.s32    temp_56554_61098, 0, temp_56554;
  @!temp_56554_61098 bra     else_61096;
              mov.b32        temp_35123, 0;
              bra.uni        merge_61097;
else_61096:
              mov.b32        temp_35123, 1;
merge_61097:
              .reg.s32       temp_35126;
              set.eq.s32.s32 temp_35126, temp_35123, 0;
              .reg.s32       state_is_same_as_shadow_ray_35193;
              or.b32         state_is_same_as_shadow_ray_35193, tmp_59715_10, 512;
              .reg.s32       state_is_same_as_shadow_ray_35192;
              and.b32        state_is_same_as_shadow_ray_35192, tmp_59715_10, -513;
              .reg.s32       state_is_same_as_shadow_ray_35127;
              .reg.pred      temp_35126_61099;
              setp.ne.s32    temp_35126_61099, 0, temp_35126;
              selp.s32       state_is_same_as_shadow_ray_35127, state_is_same_as_shadow_ray_35193, state_is_same_as_shadow_ray_35192, temp_35126_61099;
              .reg.s32       state_35128;
              and.b32        state_35128, tmp_59715_10, -32;
              .reg.s32       temp_35186;
              or.b32         temp_35186, state_35128, 1;
              .reg.s32       state_35187;
              or.b32         state_35187, temp_35186, 32;
              .reg.s32       temp_35134;
              set.gt.s32.s32 temp_35134, temp_52080, 0;
              .reg.s32       temp_35135;
              and.b32        temp_35135, temp_35126, temp_35134;
              .reg.s32       temp_35136;
              not.b32        temp_35136, temp_35135;
              .reg.s32       temp_35139;
              .reg.pred      temp_35126_61102;
              setp.ne.s32    temp_35126_61102, 0, temp_35126;
  @!temp_35126_61102 bra     else_61100;
              .reg.u64       tmp_61103;
              .reg.s32       optix_buffer_id_61104;
              mov.b64        {_, optix_buffer_id_61104}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61105;
{
              .reg.s32       abstract_61106;
              mov.b32        abstract_61106, 1;
              .reg.u64       const_61107;
              mov.b64        const_61107, 544;
              .reg.u64       const_61108;
              mov.b64        const_61108, 0;
 call (ptr_from_optix_id_61105), _rt_buffer_get_id_64, (optix_buffer_id_61104, abstract_61106, abstract_61106, const_61107, const_61108, const_61108, const_61108); // resolving optix id
}
              ld.u64         tmp_61103, [ptr_from_optix_id_61105];
              .reg.s32       tmp_61109;
              .reg.u64       off_61110;
              mad.wide.u32   off_61110, tmp_59446, 48, 40;
              .reg.s32       optix_buffer_id_61111;
              mov.b64        {_, optix_buffer_id_61111}, tmp_61103;
              .reg.u64       ptr_from_optix_id_61112;
{
              .reg.s32       abstract_61113;
              mov.b32        abstract_61113, 1;
              .reg.u64       const_61114;
              mov.b64        const_61114, 512;
              .reg.u64       off_61115;
              add.u64        off_61115, const_61114, off_61110;
              .reg.u64       const_61116;
              mov.b64        const_61116, 0;
 call (ptr_from_optix_id_61112), _rt_buffer_get_id_64, (optix_buffer_id_61111, abstract_61113, abstract_61113, off_61115, const_61116, const_61116, const_61116); // resolving optix id
}
              ld.s32         tmp_61109, [ptr_from_optix_id_61112];
              .reg.s32       temp_35185;
              not.b32        temp_35185, tmp_61109;
              mov.b32        temp_35139, temp_35185;
              bra.uni        merge_61101;
else_61100:
              mov.b32        temp_35139, 0;
merge_61101:
              .reg.s32       state_35140;
              or.b32         state_35140, tmp_59715_10, 1024;
              .reg.s32       state_35141;
              .reg.pred      temp_35139_61117;
              setp.ne.s32    temp_35139_61117, 0, temp_35139;
              selp.s32       state_35141, state_35140, tmp_59715_10, temp_35139_61117;
              .reg.s32       temp_35144;
              .reg.pred      temp_35126_61120;
              setp.ne.s32    temp_35126_61120, 0, temp_35126;
  @!temp_35126_61120 bra     else_61118;
              .reg.u64       tmp_61121;
              .reg.s32       optix_buffer_id_61122;
              mov.b64        {_, optix_buffer_id_61122}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61123;
{
              .reg.s32       abstract_61124;
              mov.b32        abstract_61124, 1;
              .reg.u64       const_61125;
              mov.b64        const_61125, 544;
              .reg.u64       const_61126;
              mov.b64        const_61126, 0;
 call (ptr_from_optix_id_61123), _rt_buffer_get_id_64, (optix_buffer_id_61122, abstract_61124, abstract_61124, const_61125, const_61126, const_61126, const_61126); // resolving optix id
}
              ld.u64         tmp_61121, [ptr_from_optix_id_61123];
              .reg.s32       tmp_61127;
              .reg.u64       off_61128;
              mad.wide.u32   off_61128, tmp_59446, 48, 28;
              .reg.s32       optix_buffer_id_61129;
              mov.b64        {_, optix_buffer_id_61129}, tmp_61121;
              .reg.u64       ptr_from_optix_id_61130;
{
              .reg.s32       abstract_61131;
              mov.b32        abstract_61131, 1;
              .reg.u64       const_61132;
              mov.b64        const_61132, 512;
              .reg.u64       off_61133;
              add.u64        off_61133, const_61132, off_61128;
              .reg.u64       const_61134;
              mov.b64        const_61134, 0;
 call (ptr_from_optix_id_61130), _rt_buffer_get_id_64, (optix_buffer_id_61129, abstract_61131, abstract_61131, off_61133, const_61134, const_61134, const_61134); // resolving optix id
}
              ld.s32         tmp_61127, [ptr_from_optix_id_61130];
              .reg.s32       temp_35182;
              not.b32        temp_35182, tmp_61127;
              mov.b32        temp_35144, temp_35182;
              bra.uni        merge_61119;
else_61118:
              mov.b32        temp_35144, 0;
merge_61119:
              .reg.s32       temp_35145;
              and.b32        temp_35145, state_35141, 512;
              .reg.s32       temp_35146;
              set.gt.s32.s32 temp_35146, temp_35145, 0;
              .reg.s32       temp_35147;
              and.b32        temp_35147, temp_35144, temp_35146;
              .reg.s32       bounce_35148;
              .reg.pred      temp_35147_61135;
              setp.ne.s32    temp_35147_61135, 0, temp_35147;
              selp.s32       bounce_35148, 0, temp_35136, temp_35147_61135;
              .reg.s32       state_35149;
              and.b32        state_35149, tmp_59715_10, -2049;
              .reg.s32       state_35179;
              and.b32        state_35179, tmp_59715_10, -98305;
              .reg.s32       temp_35154;
              .reg.pred      temp_35126_61138;
              setp.ne.s32    temp_35126_61138, 0, temp_35126;
  @!temp_35126_61138 bra     else_61136;
              .reg.u64       tmp_61139;
              .reg.s32       optix_buffer_id_61140;
              mov.b64        {_, optix_buffer_id_61140}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61141;
{
              .reg.s32       abstract_61142;
              mov.b32        abstract_61142, 1;
              .reg.u64       const_61143;
              mov.b64        const_61143, 544;
              .reg.u64       const_61144;
              mov.b64        const_61144, 0;
 call (ptr_from_optix_id_61141), _rt_buffer_get_id_64, (optix_buffer_id_61140, abstract_61142, abstract_61142, const_61143, const_61144, const_61144, const_61144); // resolving optix id
}
              ld.u64         tmp_61139, [ptr_from_optix_id_61141];
              .reg.s32       tmp_61145;
              .reg.u64       off_61146;
              mad.wide.u32   off_61146, tmp_59446, 48, 36;
              .reg.s32       optix_buffer_id_61147;
              mov.b64        {_, optix_buffer_id_61147}, tmp_61139;
              .reg.u64       ptr_from_optix_id_61148;
{
              .reg.s32       abstract_61149;
              mov.b32        abstract_61149, 1;
              .reg.u64       const_61150;
              mov.b64        const_61150, 512;
              .reg.u64       off_61151;
              add.u64        off_61151, const_61150, off_61146;
              .reg.u64       const_61152;
              mov.b64        const_61152, 0;
 call (ptr_from_optix_id_61148), _rt_buffer_get_id_64, (optix_buffer_id_61147, abstract_61149, abstract_61149, off_61151, const_61152, const_61152, const_61152); // resolving optix id
}
              ld.s32         tmp_61145, [ptr_from_optix_id_61148];
              .reg.s32       temp_35177;
              not.b32        temp_35177, tmp_61145;
              mov.b32        temp_35154, temp_35177;
              bra.uni        merge_61137;
else_61136:
              mov.b32        temp_35154, 0;
merge_61137:
              .reg.s32       state_35155;
              or.b32         state_35155, state_35179, 16384;
              .reg.s32       state_35156;
              and.b32        state_35156, state_35179, -16385;
              .reg.s32       state_35157;
              .reg.pred      temp_35154_61153;
              setp.ne.s32    temp_35154_61153, 0, temp_35154;
              selp.s32       state_35157, state_35155, state_35156, temp_35154_61153;
              .reg.s32       temp_35158;
              and.b32        temp_35158, state_is_same_as_shadow_ray_35127, 512;
              .reg.s32       temp_35159;
              and.b32        temp_35159, state_35187, 511;
              .reg.s32       temp_35160;
              or.b32         temp_35160, temp_35158, temp_35159;
              .reg.s32       temp_35161;
              and.b32        temp_35161, state_35141, 1024;
              .reg.s32       temp_35162;
              or.b32         temp_35162, temp_35160, temp_35161;
              .reg.s32       temp_35163;
              and.b32        temp_35163, state_35149, 6144;
              .reg.s32       temp_35164;
              or.b32         temp_35164, temp_35162, temp_35163;
              .reg.s32       temp_35165;
              and.b32        temp_35165, state_35157, 122880;
              .reg.s32       temp_35166;
              or.b32         temp_35166, temp_35164, temp_35165;
              .reg.u64       scl_42104;
              .reg.u64       scl_42105;
              .reg.u64       scl_42106;
              .reg.pred      bounce_35148_61156;
              setp.ne.s32    bounce_35148_61156, 0, bounce_35148;
  @!bounce_35148_61156 bra   else_61154;
              .reg.s32       temp_35169;
              add.cc.s32     temp_35169, tmp_59715_3, 1;
              .reg.s32       temp_35171;
              .reg.pred      tmp_59724_61157;
              setp.ne.s32    tmp_59724_61157, 0, tmp_59724;
              selp.s32       temp_35171, 32, 0, tmp_59724_61157;
              .reg.s32       flags_35172;
              add.cc.s32     flags_35172, 1, temp_35171;
              .reg.s32       tmp_61158;
              .reg.s32       optix_buffer_id_61159;
              .reg.s32       is_optix_buffer_id_61160;
              mov.b64        {is_optix_buffer_id_61160, optix_buffer_id_61159}, scl_41834;
              .reg.u64       off_61161;
              add.u64        off_61161, scl_41834, 0;
              .reg.pred      is_optix_buffer_id_61162;
              setp.eq.s32    is_optix_buffer_id_61162, -1, is_optix_buffer_id_61160;
{
              .reg.s32       abstract_61163;
              mov.b32        abstract_61163, 1;
              .reg.u64       const_61164;
              mov.b64        const_61164, 512;
              .reg.u64       const_61165;
              mov.b64        const_61165, 0;
@is_optix_buffer_id_61162 call (off_61161), _rt_buffer_get_id_64, (optix_buffer_id_61159, abstract_61163, abstract_61163, const_61164, const_61165, const_61165, const_61165); // resolving optix id
}
              ld.s32         tmp_61158, [off_61161];
              .reg.s32       temp_57024;
              set.lt.s32.s32 temp_57024, tmp_61158, 16;
              .reg.u64       scl_57025;
              .reg.u64       scl_57026;
              .reg.u64       scl_57027;
              .reg.pred      temp_57024_61168;
              setp.ne.s32    temp_57024_61168, 0, temp_57024;
  @!temp_57024_61168 bra     else_61166;
              .reg.s32       temp_57029;
              add.cc.s32     temp_57029, tmp_61158, 1;
              st.s32         [scl_41834], temp_57029;
              .reg.u64       off_61169;
              mad.wide.u32   off_61169, tmp_61158, 112, 0;
              .reg.u64       off_61170;
              add.u64        off_61170, scl_41835, off_61169;
              st.v2.f32      [off_61170], {temp_56989_0, temp_56989_1};
              st.f32         [off_61170+8], temp_56989_2;
              st.v2.f32      [off_61170+16], {temp_56992_0, temp_56992_1};
              st.f32         [off_61170+24], temp_56992_2;
              st.v2.f32      [off_61170+32], {temp_56995_0, temp_56995_1};
              st.f32         [off_61170+40], temp_56995_2;
              st.v2.f32      [off_61170+48], {temp_56471_0, temp_56471_1};
              st.f32         [off_61170+56], temp_56471_2;
              st.v2.f32      [off_61170+64], {temp_56472_0, temp_56472_1};
              st.f32         [off_61170+72], temp_56472_2;
              st.v2.f32      [off_61170+80], {temp_56473_0, temp_56473_1};
              st.f32         [off_61170+88], temp_56473_2;
              st.f32         [off_61170+96], temp_57001;
              .reg.u64       off_61171;
              mad.wide.u32   off_61171, tmp_61158, 112, 0;
              .reg.u64       off_61172;
              add.u64        off_61172, scl_41836, off_61171;
              st.v2.f32      [off_61172], {temp_56953_0, temp_56953_1};
              st.f32         [off_61172+8], temp_56953_2;
              st.f32         [off_61172+16], trans_35119;
              st.f32         [off_61172+20], tmp_59715_2;
              st.s32         [off_61172+24], temp_35169;
              st.s32         [off_61172+28], temp_36153;
              st.s32         [off_61172+32], flags_35172;
              st.v2.f32      [off_61172+48], {temp_56989_0, temp_56989_1};
              st.f32         [off_61172+56], temp_56989_2;
              st.v2.f32      [off_61172+64], {temp_56992_0, temp_56992_1};
              st.f32         [off_61172+72], temp_56992_2;
              st.v2.f32      [off_61172+80], {temp_56995_0, temp_56995_1};
              st.f32         [off_61172+88], temp_56995_2;
              .reg.f32       abstract_61173;
              mov.b32        abstract_61173, 0F00000000;
              st.f32         [off_61172+96], abstract_61173;
              .reg.f32       abstract_61174;
              mov.b32        abstract_61174, 0F3f800000;
              st.f32         [off_61172+100], abstract_61174;
              st.s32         [off_61172+104], tmp_61088;
              st.s32         [off_61172+108], temp_35166;
              mov.u64        scl_57025, scl_41834;
              mov.u64        scl_57026, scl_41835;
              mov.u64        scl_57027, scl_41836;
              bra.uni        merge_61167;
else_61166:
              mov.u64        scl_57025, scl_41834;
              mov.u64        scl_57026, scl_41835;
              mov.u64        scl_57027, scl_41836;
merge_61167:
              mov.u64        scl_42104, scl_57025;
              mov.u64        scl_42105, scl_57026;
              mov.u64        scl_42106, scl_57027;
              bra.uni        merge_61155;
else_61154:
              mov.u64        scl_42104, scl_41834;
              mov.u64        scl_42105, scl_41835;
              mov.u64        scl_42106, scl_41836;
merge_61155:
              mov.u64        scl_42082, scl_42104;
              mov.u64        scl_42083, scl_42105;
              mov.u64        scl_42084, scl_42106;
              mov.b32        scl_42070, scl_41822;
              bra.uni        merge_61081;
else_61080:
              mov.u64        scl_42082, scl_41834;
              mov.u64        scl_42083, scl_41835;
              mov.u64        scl_42084, scl_41836;
              mov.b32        scl_42070, scl_41822;
merge_61081:
              mov.b32        scl_41976_0, scl_42045_0;
              mov.b32        scl_41976_1, scl_42045_1;
              mov.b32        scl_41976_2, scl_42045_2;
              mov.u64        scl_41992, scl_42082;
              mov.u64        scl_41993, scl_42083;
              mov.u64        scl_41994, scl_42084;
              mov.b32        scl_41979, temp_36153;
              mov.b32        scl_41980, scl_42070;
              bra.uni        merge_60846;
else_60845:
              mov.b32        scl_41976_0, scl_41818_0;
              mov.b32        scl_41976_1, scl_41818_1;
              mov.b32        scl_41976_2, scl_41818_2;
              mov.u64        scl_41992, scl_41834;
              mov.u64        scl_41993, scl_41835;
              mov.u64        scl_41994, scl_41836;
              mov.b32        scl_41979, scl_41821;
              mov.b32        scl_41980, scl_41822;
merge_60846:
              .reg.u64       tmp_61175;
              .reg.s32       optix_buffer_id_61176;
              mov.b64        {_, optix_buffer_id_61176}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61177;
{
              .reg.s32       abstract_61178;
              mov.b32        abstract_61178, 1;
              .reg.u64       const_61179;
              mov.b64        const_61179, 672;
              .reg.u64       const_61180;
              mov.b64        const_61180, 0;
 call (ptr_from_optix_id_61177), _rt_buffer_get_id_64, (optix_buffer_id_61176, abstract_61178, abstract_61178, const_61179, const_61180, const_61180, const_61180); // resolving optix id
}
              ld.u64         tmp_61175, [ptr_from_optix_id_61177];
              .reg.s32       tmp_61181;
              .reg.s32       optix_buffer_id_61182;
              mov.b64        {_, optix_buffer_id_61182}, tmp_61175;
              .reg.u64       ptr_from_optix_id_61183;
{
              .reg.s32       abstract_61184;
              mov.b32        abstract_61184, 1;
              .reg.u64       const_61185;
              mov.b64        const_61185, 512;
              .reg.u64       const_61186;
              mov.b64        const_61186, 0;
 call (ptr_from_optix_id_61183), _rt_buffer_get_id_64, (optix_buffer_id_61182, abstract_61184, abstract_61184, const_61185, const_61186, const_61186, const_61186); // resolving optix id
}
              ld.s32         tmp_61181, [ptr_from_optix_id_61183];
              .reg.s32       temp_34825;
              set.eq.s32.s32 temp_34825, tmp_61181, tmp_60590;
              .reg .f32      scl_42164_0, scl_42164_1, scl_42164_2;
              .reg.u64       scl_42180;
              .reg.u64       scl_42181;
              .reg.u64       scl_42182;
              .reg.s32       scl_42167;
              .reg.f32       scl_42168;
              .reg.pred      temp_34825_61189;
              setp.ne.s32    temp_34825_61189, 0, temp_34825;
  @!temp_34825_61189 bra     else_61187;
              .reg.s32       tmp_61190;
              .reg.u64       off_61191;
              mad.wide.u32   off_61191, cdf_iter_31254, 20, 8;
              .reg.s32       optix_buffer_id_61192;
              mov.b64        {_, optix_buffer_id_61192}, tmp_60572;
              .reg.u64       ptr_from_optix_id_61193;
{
              .reg.s32       abstract_61194;
              mov.b32        abstract_61194, 1;
              .reg.u64       const_61195;
              mov.b64        const_61195, 512;
              .reg.u64       off_61196;
              add.u64        off_61196, const_61195, off_61191;
              .reg.u64       const_61197;
              mov.b64        const_61197, 0;
 call (ptr_from_optix_id_61193), _rt_buffer_get_id_64, (optix_buffer_id_61192, abstract_61194, abstract_61194, off_61196, const_61197, const_61197, const_61197); // resolving optix id
}
              ld.s32         tmp_61190, [ptr_from_optix_id_61193];
              .reg.u64       tmp_61198;
              .reg.s32       optix_buffer_id_61199;
              mov.b64        {_, optix_buffer_id_61199}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61200;
{
              .reg.s32       abstract_61201;
              mov.b32        abstract_61201, 1;
              .reg.u64       const_61202;
              mov.b64        const_61202, 664;
              .reg.u64       const_61203;
              mov.b64        const_61203, 0;
 call (ptr_from_optix_id_61200), _rt_buffer_get_id_64, (optix_buffer_id_61199, abstract_61201, abstract_61201, const_61202, const_61203, const_61203, const_61203); // resolving optix id
}
              ld.u64         tmp_61198, [ptr_from_optix_id_61200];
              .reg .f32      tmp_61204_0, tmp_61204_1, tmp_61204_2, tmp_61204_3;
              .reg.u64       off_61205;
              mad.wide.u32   off_61205, tmp_61190, 160, 48;
              .reg.s32       optix_buffer_id_61206;
              mov.b64        {_, optix_buffer_id_61206}, tmp_61198;
              .reg.u64       ptr_from_optix_id_61207;
{
              .reg.s32       abstract_61208;
              mov.b32        abstract_61208, 1;
              .reg.u64       const_61209;
              mov.b64        const_61209, 512;
              .reg.u64       off_61210;
              add.u64        off_61210, const_61209, off_61205;
              .reg.u64       const_61211;
              mov.b64        const_61211, 0;
 call (ptr_from_optix_id_61207), _rt_buffer_get_id_64, (optix_buffer_id_61206, abstract_61208, abstract_61208, off_61210, const_61211, const_61211, const_61211); // resolving optix id
}
              ld.v4.f32      {tmp_61204_0, tmp_61204_1, tmp_61204_2, tmp_61204_3}, [ptr_from_optix_id_61207];
              .reg.u64       tmp_61212;
              .reg.s32       optix_buffer_id_61213;
              mov.b64        {_, optix_buffer_id_61213}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61214;
{
              .reg.s32       abstract_61215;
              mov.b32        abstract_61215, 1;
              .reg.u64       const_61216;
              mov.b64        const_61216, 664;
              .reg.u64       const_61217;
              mov.b64        const_61217, 0;
 call (ptr_from_optix_id_61214), _rt_buffer_get_id_64, (optix_buffer_id_61213, abstract_61215, abstract_61215, const_61216, const_61217, const_61217, const_61217); // resolving optix id
}
              ld.u64         tmp_61212, [ptr_from_optix_id_61214];
              .reg .f32      tmp_61218_0, tmp_61218_1, tmp_61218_2;
              .reg.u64       off_61219;
              mad.wide.u32   off_61219, tmp_61190, 160, 144;
              .reg.s32       optix_buffer_id_61220;
              mov.b64        {_, optix_buffer_id_61220}, tmp_61212;
              .reg.u64       ptr_from_optix_id_61221;
{
              .reg.s32       abstract_61222;
              mov.b32        abstract_61222, 1;
              .reg.u64       const_61223;
              mov.b64        const_61223, 512;
              .reg.u64       off_61224;
              add.u64        off_61224, const_61223, off_61219;
              .reg.u64       const_61225;
              mov.b64        const_61225, 0;
 call (ptr_from_optix_id_61221), _rt_buffer_get_id_64, (optix_buffer_id_61220, abstract_61222, abstract_61222, off_61224, const_61225, const_61225, const_61225); // resolving optix id
}
              ld.v2.f32      {tmp_61218_0, tmp_61218_1}, [ptr_from_optix_id_61221];
              ld.f32         tmp_61218_2, [ptr_from_optix_id_61221+8];
              .reg .f32      temp_57360_0, temp_57360_1, temp_57360_2;
              neg.ftz.f32    temp_57360_0, tmp_61204_0;
              neg.ftz.f32    temp_57360_1, tmp_61204_1;
              neg.ftz.f32    temp_57360_2, tmp_61204_2;
              .reg .f32      temp_57378_0, temp_57378_1, temp_57378_2;
              mul.ftz.f32    temp_57378_0, temp_52006_0, tmp_60561_0;
              mul.ftz.f32    temp_57378_1, temp_52006_1, tmp_60561_1;
              mul.ftz.f32    temp_57378_2, temp_52006_2, tmp_60561_2;
              .reg.f32       temp_57395;
              add.ftz.f32    temp_57395, temp_57378_0, temp_57378_1;
              .reg.f32       temp_57401;
              add.ftz.f32    temp_57401, temp_57395, temp_57378_2;
              .reg .f32      temp_57409_0, temp_57409_1, temp_57409_2;
              mul.ftz.f32    temp_57409_0, temp_57360_0, tmp_60561_0;
              mul.ftz.f32    temp_57409_1, temp_57360_1, tmp_60561_1;
              mul.ftz.f32    temp_57409_2, temp_57360_2, tmp_60561_2;
              .reg.f32       temp_57426;
              add.ftz.f32    temp_57426, temp_57409_0, temp_57409_1;
              .reg.f32       temp_57432;
              add.ftz.f32    temp_57432, temp_57426, temp_57409_2;
              .reg.f32       temp_57438;
              mul.ftz.f32    temp_57438, temp_57401, temp_57432;
              .reg.s32       temp_57452;
              set.gt.ftz.s32.f32 temp_57452, temp_57438, 0F00000000;
              .reg .f32      bsdf_34866_0, bsdf_34866_1, bsdf_34866_2;
              .reg.pred      temp_57452_61228;
              setp.ne.s32    temp_57452_61228, 0, temp_57452;
  @!temp_57452_61228 bra     else_61226;
              .reg .f32      temp_57455_0, temp_57455_1, temp_57455_2;
              div.approx.ftz.f32 temp_57455_0, temp_52777_0, 0F40490fdb;
              div.approx.ftz.f32 temp_57455_1, temp_52777_1, 0F40490fdb;
              div.approx.ftz.f32 temp_57455_2, temp_52777_2, 0F40490fdb;
              .reg .f32      temp_57460_0, temp_57460_1, temp_57460_2;
              mul.ftz.f32    temp_57460_0, temp_57360_0, tmp_59490_0;
              mul.ftz.f32    temp_57460_1, temp_57360_1, tmp_59490_1;
              mul.ftz.f32    temp_57460_2, temp_57360_2, tmp_59490_2;
              .reg.f32       temp_57477;
              add.ftz.f32    temp_57477, temp_57460_0, temp_57460_1;
              .reg.f32       temp_57483;
              add.ftz.f32    temp_57483, temp_57477, temp_57460_2;
              .reg.s32       temp_57489;
              set.ge.ftz.s32.f32 temp_57489, temp_57438, 0F00000000;
              .reg.s32       temp_57492;
              set.lt.ftz.s32.f32 temp_57492, temp_57483, 0F00000000;
              .reg.s32       temp_57495;
              set.lt.ftz.s32.f32 temp_57495, temp_57432, 0F00000000;
              .reg.s32       temp_36440;
              xor.b32        temp_36440, temp_57492, temp_57495;
              .reg.s32       temp_36441;
              not.b32        temp_36441, temp_36440;
              .reg.s32       temp_57496;
              and.b32        temp_57496, temp_57489, temp_36441;
              .reg.s32       temp_36433;
              not.b32        temp_36433, temp_57496;
              .reg .f32      refl_36434_0, refl_36434_1, refl_36434_2;
              .reg.pred      temp_36433_61229;
              setp.ne.s32    temp_36433_61229, 0, temp_36433;
              selp.f32       refl_36434_0, 0F00000000, temp_57455_0, temp_36433_61229;
              selp.f32       refl_36434_1, 0F00000000, temp_57455_1, temp_36433_61229;
              selp.f32       refl_36434_2, 0F00000000, temp_57455_2, temp_36433_61229;
              .reg .f32      temp_57501_0, temp_57501_1, temp_57501_2;
              mul.ftz.f32    temp_57501_0, tmp_59490_0, temp_57360_0;
              mul.ftz.f32    temp_57501_1, tmp_59490_1, temp_57360_1;
              mul.ftz.f32    temp_57501_2, tmp_59490_2, temp_57360_2;
              .reg.f32       temp_57518;
              add.ftz.f32    temp_57518, temp_57501_0, temp_57501_1;
              .reg.f32       temp_57524;
              add.ftz.f32    temp_57524, temp_57518, temp_57501_2;
              .reg.s32       temp_57529;
              set.lt.ftz.s32.f32 temp_57529, temp_57524, 0F00000000;
              .reg.f32       temp_57537;
              neg.ftz.f32    temp_57537, temp_57524;
              .reg.f32       scl_57530;
              .reg.pred      temp_57529_61230;
              setp.ne.s32    temp_57529_61230, 0, temp_57529;
              selp.f32       scl_57530, temp_57537, temp_57524, temp_57529_61230;
              .reg .f32      temp_57544_0, temp_57544_1, temp_57544_2;
              mul.ftz.f32    temp_57544_0, scl_57530, refl_36434_0;
              mul.ftz.f32    temp_57544_1, scl_57530, refl_36434_1;
              mul.ftz.f32    temp_57544_2, scl_57530, refl_36434_2;
              .reg .f32      temp_57557_0, temp_57557_1, temp_57557_2;
              mul.ftz.f32    temp_57557_0, temp_52657_0, temp_57360_0;
              mul.ftz.f32    temp_57557_1, temp_52657_1, temp_57360_0;
              mul.ftz.f32    temp_57557_2, temp_52657_2, temp_57360_0;
              .reg .f32      temp_57576_0, temp_57576_1, temp_57576_2;
              mul.ftz.f32    temp_57576_0, temp_52669_0, temp_57360_1;
              mul.ftz.f32    temp_57576_1, temp_52669_1, temp_57360_1;
              mul.ftz.f32    temp_57576_2, temp_52669_2, temp_57360_1;
              .reg .f32      temp_57585_0, temp_57585_1, temp_57585_2;
              add.ftz.f32    temp_57585_0, temp_57557_0, temp_57576_0;
              add.ftz.f32    temp_57585_1, temp_57557_1, temp_57576_1;
              add.ftz.f32    temp_57585_2, temp_57557_2, temp_57576_2;
              .reg .f32      temp_57598_0, temp_57598_1, temp_57598_2;
              mul.ftz.f32    temp_57598_0, temp_52681_0, temp_57360_2;
              mul.ftz.f32    temp_57598_1, temp_52681_1, temp_57360_2;
              mul.ftz.f32    temp_57598_2, temp_52681_2, temp_57360_2;
              .reg .f32      temp_57607_0, temp_57607_1, temp_57607_2;
              add.ftz.f32    temp_57607_0, temp_57585_0, temp_57598_0;
              add.ftz.f32    temp_57607_1, temp_57585_1, temp_57598_1;
              add.ftz.f32    temp_57607_2, temp_57585_2, temp_57598_2;
              .reg .f32      temp_57623_0, temp_57623_1, temp_57623_2;
              mul.ftz.f32    temp_57623_0, temp_52657_0, temp_52006_0;
              mul.ftz.f32    temp_57623_1, temp_52657_1, temp_52006_0;
              mul.ftz.f32    temp_57623_2, temp_52657_2, temp_52006_0;
              .reg .f32      temp_57642_0, temp_57642_1, temp_57642_2;
              mul.ftz.f32    temp_57642_0, temp_52669_0, temp_52006_1;
              mul.ftz.f32    temp_57642_1, temp_52669_1, temp_52006_1;
              mul.ftz.f32    temp_57642_2, temp_52669_2, temp_52006_1;
              .reg .f32      temp_57651_0, temp_57651_1, temp_57651_2;
              add.ftz.f32    temp_57651_0, temp_57623_0, temp_57642_0;
              add.ftz.f32    temp_57651_1, temp_57623_1, temp_57642_1;
              add.ftz.f32    temp_57651_2, temp_57623_2, temp_57642_2;
              .reg .f32      temp_57664_0, temp_57664_1, temp_57664_2;
              mul.ftz.f32    temp_57664_0, temp_52681_0, temp_52006_2;
              mul.ftz.f32    temp_57664_1, temp_52681_1, temp_52006_2;
              mul.ftz.f32    temp_57664_2, temp_52681_2, temp_52006_2;
              .reg .f32      temp_57673_0, temp_57673_1, temp_57673_2;
              add.ftz.f32    temp_57673_0, temp_57651_0, temp_57664_0;
              add.ftz.f32    temp_57673_1, temp_57651_1, temp_57664_1;
              add.ftz.f32    temp_57673_2, temp_57651_2, temp_57664_2;
              .reg .f32      temp_57682_0, temp_57682_1, temp_57682_2;
              add.ftz.f32    temp_57682_0, temp_57673_0, temp_57607_0;
              add.ftz.f32    temp_57682_1, temp_57673_1, temp_57607_1;
              add.ftz.f32    temp_57682_2, temp_57673_2, temp_57607_2;
              .reg .f32      temp_57693_0, temp_57693_1, temp_57693_2;
              mul.ftz.f32    temp_57693_0, temp_57682_0, temp_57682_0;
              mul.ftz.f32    temp_57693_1, temp_57682_1, temp_57682_1;
              mul.ftz.f32    temp_57693_2, temp_57682_2, temp_57682_2;
              .reg.f32       temp_57710;
              add.ftz.f32    temp_57710, temp_57693_0, temp_57693_1;
              .reg.f32       temp_57716;
              add.ftz.f32    temp_57716, temp_57710, temp_57693_2;
              .reg.f32       temp_57721;
              rsqrt.approx.ftz.f32 temp_57721, temp_57716;
              .reg .f32      temp_57728_0, temp_57728_1, temp_57728_2;
              mul.ftz.f32    temp_57728_0, temp_57682_0, temp_57721;
              mul.ftz.f32    temp_57728_1, temp_57682_1, temp_57721;
              mul.ftz.f32    temp_57728_2, temp_57682_2, temp_57721;
              .reg.s32       temp_57747;
              set.lt.ftz.s32.f32 temp_57747, temp_57728_2, 0F00000000;
              .reg.f32       temp_57755;
              neg.ftz.f32    temp_57755, temp_57728_2;
              .reg.f32       scl_57748;
              .reg.pred      temp_57747_61231;
              setp.ne.s32    temp_57747_61231, 0, temp_57747;
              selp.f32       scl_57748, temp_57755, temp_57728_2, temp_57747_61231;
              .reg.f32       temp_57762;
              add.ftz.f32    temp_57762, tmp_60051, 0F40000000;
              .reg.f32       temp_57772;
              div.approx.ftz.f32 temp_57772, temp_57762, 0F41c90fdb;
              .reg.f32       temp_57792;
              lg2.approx.ftz.f32 temp_57792, scl_57748;
              mul.ftz.f32    temp_57792, temp_57792, tmp_60051;
              ex2.approx.ftz.f32 temp_57792, temp_57792;
              .reg.f32       temp_57800;
              mul.ftz.f32    temp_57800, temp_57772, temp_57792;
              .reg .f32      temp_57814_0, temp_57814_1, temp_57814_2;
              mul.ftz.f32    temp_57814_0, temp_57800, temp_52778_0;
              mul.ftz.f32    temp_57814_1, temp_57800, temp_52778_1;
              mul.ftz.f32    temp_57814_2, temp_57800, temp_52778_2;
              .reg .f32      refl_36463_0, refl_36463_1, refl_36463_2;
              .reg.pred      temp_36433_61232;
              setp.ne.s32    temp_36433_61232, 0, temp_36433;
              selp.f32       refl_36463_0, 0F00000000, temp_57814_0, temp_36433_61232;
              selp.f32       refl_36463_1, 0F00000000, temp_57814_1, temp_36433_61232;
              selp.f32       refl_36463_2, 0F00000000, temp_57814_2, temp_36433_61232;
              .reg .f32      temp_57817_0, temp_57817_1, temp_57817_2;
              mul.ftz.f32    temp_57817_0, scl_57530, refl_36463_0;
              mul.ftz.f32    temp_57817_1, scl_57530, refl_36463_1;
              mul.ftz.f32    temp_57817_2, scl_57530, refl_36463_2;
              .reg .f32      temp_57818_0, temp_57818_1, temp_57818_2;
              add.ftz.f32    temp_57818_0, temp_57544_0, temp_57817_0;
              add.ftz.f32    temp_57818_1, temp_57544_1, temp_57817_1;
              add.ftz.f32    temp_57818_2, temp_57544_2, temp_57817_2;
              mov.b32        bsdf_34866_0, temp_57818_0;
              mov.b32        bsdf_34866_1, temp_57818_1;
              mov.b32        bsdf_34866_2, temp_57818_2;
              bra.uni        merge_61227;
else_61226:
              mov.b32        bsdf_34866_0, 0F00000000;
              mov.b32        bsdf_34866_1, 0F00000000;
              mov.b32        bsdf_34866_2, 0F00000000;
merge_61227:
              .reg .f32      temp_57831_0, temp_57831_1, temp_57831_2;
              mul.ftz.f32    temp_57831_0, bsdf_34866_0, tmp_61218_0;
              mul.ftz.f32    temp_57831_1, bsdf_34866_1, tmp_61218_1;
              mul.ftz.f32    temp_57831_2, bsdf_34866_2, tmp_61218_2;
              .reg .f32      scl_42202_0, scl_42202_1, scl_42202_2;
              .reg .f32      scl_42203_0, scl_42203_1, scl_42203_2;
              .reg.s32       scl_42204;
              .reg.pred      tmp_59724_61235;
              setp.ne.s32    tmp_59724_61235, 0, tmp_59724;
  @!tmp_59724_61235 bra      else_61233;
              .reg .f32      temp_57832_0, temp_57832_1, temp_57832_2;
              mul.ftz.f32    temp_57832_0, scl_41529_0, tmp_59715_0_0;
              mul.ftz.f32    temp_57832_1, scl_41529_1, tmp_59715_0_1;
              mul.ftz.f32    temp_57832_2, scl_41529_2, tmp_59715_0_2;
              .reg.f32       temp_34997;
              cvt.rn.f32.s32 temp_34997, scl_41526;
              .reg .f32      temp_57834_0, temp_57834_1, temp_57834_2;
              div.approx.ftz.f32 temp_57834_0, temp_57832_0, temp_34997;
              div.approx.ftz.f32 temp_57834_1, temp_57832_1, temp_34997;
              div.approx.ftz.f32 temp_57834_2, temp_57832_2, temp_34997;
              .reg.s32       temp_34999;
              not.b32        temp_34999, temp_57452;
              .reg.s32       temp_35000;
              .reg.pred      temp_34999_61238;
              setp.ne.s32    temp_34999_61238, 0, temp_34999;
  @!temp_34999_61238 bra     else_61236;
              mov.b32        temp_35000, -1;
              bra.uni        merge_61237;
else_61236:
              .reg .f32      temp_57844_0, temp_57844_1, temp_57844_2;
              mul.ftz.f32    temp_57844_0, tmp_61218_2, 0F3e38c49c;
              mul.ftz.f32    temp_57844_1, tmp_61218_2, 0F3d93d07d;
              mul.ftz.f32    temp_57844_2, tmp_61218_2, 0F3f734721;
              .reg .f32      temp_57845_0, temp_57845_1, temp_57845_2;
              fma.rn.ftz.f32 temp_57845_0, 0F3eb71437, tmp_61218_1, temp_57844_0;
              fma.rn.ftz.f32 temp_57845_1, 0F3f371437, tmp_61218_1, temp_57844_1;
              fma.rn.ftz.f32 temp_57845_2, 0F3df41aef, tmp_61218_1, temp_57844_2;
              .reg .f32      temp_57846_0, temp_57846_1, temp_57846_2;
              fma.rn.ftz.f32 temp_57846_0, 0F3ed32d7c, tmp_61218_0, temp_57845_0;
              fma.rn.ftz.f32 temp_57846_1, 0F3e59c6ed, tmp_61218_0, temp_57845_1;
              fma.rn.ftz.f32 temp_57846_2, 0F3c9e6221, tmp_61218_0, temp_57845_2;
              .reg.s32       temp_35011;
              set.eq.ftz.s32.f32 temp_35011, temp_57846_1, 0F00000000;
              mov.b32        temp_35000, temp_35011;
merge_61237:
              .reg .f32      temp_57848_0, temp_57848_1, temp_57848_2;
              add.ftz.f32    temp_57848_0, scl_41976_0, temp_57834_0;
              add.ftz.f32    temp_57848_1, scl_41976_1, temp_57834_1;
              add.ftz.f32    temp_57848_2, scl_41976_2, temp_57834_2;
              .reg .f32      scl_42208_0, scl_42208_1, scl_42208_2;
              .reg.pred      temp_35000_61239;
              setp.ne.s32    temp_35000_61239, 0, temp_35000;
              selp.f32       scl_42208_0, 0F00000000, temp_57834_0, temp_35000_61239;
              selp.f32       scl_42208_1, 0F00000000, temp_57834_1, temp_35000_61239;
              selp.f32       scl_42208_2, 0F00000000, temp_57834_2, temp_35000_61239;
              .reg .f32      scl_42209_0, scl_42209_1, scl_42209_2;
              .reg.pred      temp_35000_61240;
              setp.ne.s32    temp_35000_61240, 0, temp_35000;
              selp.f32       scl_42209_0, temp_57848_0, scl_41976_0, temp_35000_61240;
              selp.f32       scl_42209_1, temp_57848_1, scl_41976_1, temp_35000_61240;
              selp.f32       scl_42209_2, temp_57848_2, scl_41976_2, temp_35000_61240;
              .reg.s32       temp_57849;
              not.b32        temp_57849, temp_35000;
              mov.b32        scl_42202_0, scl_42208_0;
              mov.b32        scl_42202_1, scl_42208_1;
              mov.b32        scl_42202_2, scl_42208_2;
              mov.b32        scl_42203_0, scl_42209_0;
              mov.b32        scl_42203_1, scl_42209_1;
              mov.b32        scl_42203_2, scl_42209_2;
              mov.b32        scl_42204, temp_57849;
              bra.uni        merge_61234;
else_61233:
              .reg .f32      temp_57850_0, temp_57850_1, temp_57850_2;
              mul.ftz.f32    temp_57850_0, temp_57831_0, tmp_59715_0_0;
              mul.ftz.f32    temp_57850_1, temp_57831_1, tmp_59715_0_1;
              mul.ftz.f32    temp_57850_2, temp_57831_2, tmp_59715_0_2;
              mov.b32        scl_42202_0, temp_57850_0;
              mov.b32        scl_42202_1, temp_57850_1;
              mov.b32        scl_42202_2, temp_57850_2;
              mov.b32        scl_42203_0, scl_41976_0;
              mov.b32        scl_42203_1, scl_41976_1;
              mov.b32        scl_42203_2, scl_41976_2;
              mov.b32        scl_42204, 0;
merge_61234:
              .reg .f32      temp_57851_0, temp_57851_1, temp_57851_2;
              mul.ftz.f32    temp_57851_0, scl_42202_0, scl_41504_0;
              mul.ftz.f32    temp_57851_1, scl_42202_1, scl_41504_1;
              mul.ftz.f32    temp_57851_2, scl_42202_2, scl_41504_2;
              .reg .f32      temp_57861_0, temp_57861_1, temp_57861_2;
              mul.ftz.f32    temp_57861_0, temp_57851_2, 0F3e38c49c;
              mul.ftz.f32    temp_57861_1, temp_57851_2, 0F3d93d07d;
              mul.ftz.f32    temp_57861_2, temp_57851_2, 0F3f734721;
              .reg .f32      temp_57862_0, temp_57862_1, temp_57862_2;
              fma.rn.ftz.f32 temp_57862_0, 0F3eb71437, temp_57851_1, temp_57861_0;
              fma.rn.ftz.f32 temp_57862_1, 0F3f371437, temp_57851_1, temp_57861_1;
              fma.rn.ftz.f32 temp_57862_2, 0F3df41aef, temp_57851_1, temp_57861_2;
              .reg .f32      temp_57863_0, temp_57863_1, temp_57863_2;
              fma.rn.ftz.f32 temp_57863_0, 0F3ed32d7c, temp_57851_0, temp_57862_0;
              fma.rn.ftz.f32 temp_57863_1, 0F3e59c6ed, temp_57851_0, temp_57862_1;
              fma.rn.ftz.f32 temp_57863_2, 0F3c9e6221, temp_57851_0, temp_57862_2;
              .reg.u64       tmp_61241;
              ld.param.u64   tmp_61241, [integratorInstanceID_22355];
              .reg.s32       tmp_61242;
              ld.s32         tmp_61242, [tmp_61241];
              .reg.u64       tmp_61243;
              .reg.s32       optix_buffer_id_61244;
              mov.b64        {_, optix_buffer_id_61244}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61245;
{
              .reg.s32       abstract_61246;
              mov.b32        abstract_61246, 1;
              .reg.u64       const_61247;
              mov.b64        const_61247, 568;
              .reg.u64       const_61248;
              mov.b64        const_61248, 0;
 call (ptr_from_optix_id_61245), _rt_buffer_get_id_64, (optix_buffer_id_61244, abstract_61246, abstract_61246, const_61247, const_61248, const_61248, const_61248); // resolving optix id
}
              ld.u64         tmp_61243, [ptr_from_optix_id_61245];
              .reg.f32       tmp_61249;
              .reg.u64       off_61250;
              mad.wide.u32   off_61250, tmp_61242, 112, 4;
              .reg.s32       optix_buffer_id_61251;
              mov.b64        {_, optix_buffer_id_61251}, tmp_61243;
              .reg.u64       ptr_from_optix_id_61252;
{
              .reg.s32       abstract_61253;
              mov.b32        abstract_61253, 1;
              .reg.u64       const_61254;
              mov.b64        const_61254, 512;
              .reg.u64       off_61255;
              add.u64        off_61255, const_61254, off_61250;
              .reg.u64       const_61256;
              mov.b64        const_61256, 0;
 call (ptr_from_optix_id_61252), _rt_buffer_get_id_64, (optix_buffer_id_61251, abstract_61253, abstract_61253, off_61255, const_61256, const_61256, const_61256); // resolving optix id
}
              ld.f32         tmp_61249, [ptr_from_optix_id_61252];
              .reg.s32       has_contrib_34884;
              set.ge.ftz.s32.f32 has_contrib_34884, temp_57863_1, tmp_61249;
              .reg.u64       tmp_61257;
              ld.param.u64   tmp_61257, [integratorInstanceID_22355];
              .reg.s32       tmp_61258;
              ld.s32         tmp_61258, [tmp_61257];
              .reg.u64       tmp_61259;
              .reg.s32       optix_buffer_id_61260;
              mov.b64        {_, optix_buffer_id_61260}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61261;
{
              .reg.s32       abstract_61262;
              mov.b32        abstract_61262, 1;
              .reg.u64       const_61263;
              mov.b64        const_61263, 568;
              .reg.u64       const_61264;
              mov.b64        const_61264, 0;
 call (ptr_from_optix_id_61261), _rt_buffer_get_id_64, (optix_buffer_id_61260, abstract_61262, abstract_61262, const_61263, const_61264, const_61264, const_61264); // resolving optix id
}
              ld.u64         tmp_61259, [ptr_from_optix_id_61261];
              .reg.s32       tmp_61265;
              .reg.u64       off_61266;
              mad.wide.u32   off_61266, tmp_61258, 112, 12;
              .reg.s32       optix_buffer_id_61267;
              mov.b64        {_, optix_buffer_id_61267}, tmp_61259;
              .reg.u64       ptr_from_optix_id_61268;
{
              .reg.s32       abstract_61269;
              mov.b32        abstract_61269, 1;
              .reg.u64       const_61270;
              mov.b64        const_61270, 512;
              .reg.u64       off_61271;
              add.u64        off_61271, const_61270, off_61266;
              .reg.u64       const_61272;
              mov.b64        const_61272, 0;
 call (ptr_from_optix_id_61268), _rt_buffer_get_id_64, (optix_buffer_id_61267, abstract_61269, abstract_61269, off_61271, const_61272, const_61272, const_61272); // resolving optix id
}
              ld.s32         tmp_61265, [ptr_from_optix_id_61268];
              .reg.s32       do_bounce_34886;
              set.lt.s32.s32 do_bounce_34886, tmp_59715_3, tmp_61265;
              .reg.s32       temp_34887;
              or.b32         temp_34887, has_contrib_34884, scl_42204;
              .reg.s32       temp_34888;
              and.b32        temp_34888, temp_34887, do_bounce_34886;
              .reg.u64       scl_42240;
              .reg.u64       scl_42241;
              .reg.u64       scl_42242;
              .reg.f32       scl_42228;
              .reg.pred      temp_34888_61275;
              setp.ne.s32    temp_34888_61275, 0, temp_34888;
  @!temp_34888_61275 bra     else_61273;
              .reg.f32       temp_34899;
              mul.ftz.f32    temp_34899, tmp_59738, scl_41980;
              .reg .f32      temp_57874_0, temp_57874_1, temp_57874_2;
              mul.ftz.f32    temp_57874_0, tmp_60561_0, temp_34899;
              mul.ftz.f32    temp_57874_1, tmp_60561_1, temp_34899;
              mul.ftz.f32    temp_57874_2, tmp_60561_2, temp_34899;
              .reg.u64       tmp_61276;
              ld.param.u64   tmp_61276, [f_22353];
              .reg .f32      tmp_61277_0, tmp_61277_1, tmp_61277_2;
              ld.v2.f32      {tmp_61277_0, tmp_61277_1}, [tmp_61276+64];
              ld.f32         tmp_61277_2, [tmp_61276+72];
              .reg .f32      temp_57876_0, temp_57876_1, temp_57876_2;
              mul.ftz.f32    temp_57876_0, tmp_61277_0, temp_34899;
              mul.ftz.f32    temp_57876_1, tmp_61277_1, temp_34899;
              mul.ftz.f32    temp_57876_2, tmp_61277_2, temp_34899;
              .reg.u64       tmp_61278;
              ld.param.u64   tmp_61278, [f_22353];
              .reg .f32      tmp_61279_0, tmp_61279_1, tmp_61279_2;
              ld.v2.f32      {tmp_61279_0, tmp_61279_1}, [tmp_61278+80];
              ld.f32         tmp_61279_2, [tmp_61278+88];
              .reg .f32      temp_57880_0, temp_57880_1, temp_57880_2;
              mul.ftz.f32    temp_57880_0, tmp_61279_0, temp_34899;
              mul.ftz.f32    temp_57880_1, tmp_61279_1, temp_34899;
              mul.ftz.f32    temp_57880_2, tmp_61279_2, temp_34899;
              .reg .f32      temp_57887_0, temp_57887_1, temp_57887_2;
              add.ftz.f32    temp_57887_0, tmp_59506_0, temp_57874_0;
              add.ftz.f32    temp_57887_1, tmp_59506_1, temp_57874_1;
              add.ftz.f32    temp_57887_2, tmp_59506_2, temp_57874_2;
              .reg .f32      temp_57890_0, temp_57890_1, temp_57890_2;
              add.ftz.f32    temp_57890_0, tmp_59508_0, temp_57876_0;
              add.ftz.f32    temp_57890_1, tmp_59508_1, temp_57876_1;
              add.ftz.f32    temp_57890_2, tmp_59508_2, temp_57876_2;
              .reg .f32      temp_57893_0, temp_57893_1, temp_57893_2;
              add.ftz.f32    temp_57893_0, tmp_59510_0, temp_57880_0;
              add.ftz.f32    temp_57893_1, tmp_59510_1, temp_57880_1;
              add.ftz.f32    temp_57893_2, tmp_59510_2, temp_57880_2;
              .reg.f32       temp_34904;
              mul.ftz.f32    temp_34904, 0F40000000, tmp_59738;
              .reg.f32       temp_57899;
              sub.ftz.f32    temp_57899, 0F7f800000, temp_34904;
              .reg.f32       temp_34909;
              cvt.rn.f32.s32 temp_34909, scl_41526;
              .reg.f32       temp_34910;
              div.approx.ftz.f32 temp_34910, tmp_59715_1, temp_34909;
              .reg.f32       trans_34911;
              .reg.pred      tmp_59724_61280;
              setp.ne.s32    tmp_59724_61280, 0, tmp_59724;
              selp.f32       trans_34911, temp_34910, 0F00000000, tmp_59724_61280;
              .reg.s32       tmp_61281;
              .reg.u64       off_61282;
              mad.wide.u32   off_61282, cdf_iter_31254, 20, 4;
              .reg.s32       optix_buffer_id_61283;
              mov.b64        {_, optix_buffer_id_61283}, tmp_60572;
              .reg.u64       ptr_from_optix_id_61284;
{
              .reg.s32       abstract_61285;
              mov.b32        abstract_61285, 1;
              .reg.u64       const_61286;
              mov.b64        const_61286, 512;
              .reg.u64       off_61287;
              add.u64        off_61287, const_61286, off_61282;
              .reg.u64       const_61288;
              mov.b64        const_61288, 0;
 call (ptr_from_optix_id_61284), _rt_buffer_get_id_64, (optix_buffer_id_61283, abstract_61285, abstract_61285, off_61287, const_61288, const_61288, const_61288); // resolving optix id
}
              ld.s32         tmp_61281, [ptr_from_optix_id_61284];
              .reg.s32       temp_34915;
              .reg.pred      temp_57452_61291;
              setp.ne.s32    temp_57452_61291, 0, temp_57452;
  @!temp_57452_61291 bra     else_61289;
              mov.b32        temp_34915, 0;
              bra.uni        merge_61290;
else_61289:
              mov.b32        temp_34915, 1;
merge_61290:
              .reg.s32       temp_34918;
              set.eq.s32.s32 temp_34918, temp_34915, 0;
              .reg.s32       state_is_same_as_shadow_ray_34985;
              or.b32         state_is_same_as_shadow_ray_34985, tmp_59715_10, 512;
              .reg.s32       state_is_same_as_shadow_ray_34984;
              and.b32        state_is_same_as_shadow_ray_34984, tmp_59715_10, -513;
              .reg.s32       state_is_same_as_shadow_ray_34919;
              .reg.pred      temp_34918_61292;
              setp.ne.s32    temp_34918_61292, 0, temp_34918;
              selp.s32       state_is_same_as_shadow_ray_34919, state_is_same_as_shadow_ray_34985, state_is_same_as_shadow_ray_34984, temp_34918_61292;
              .reg.s32       state_34920;
              and.b32        state_34920, tmp_59715_10, -32;
              .reg.s32       temp_34978;
              or.b32         temp_34978, state_34920, 1;
              .reg.s32       state_34979;
              or.b32         state_34979, temp_34978, 32;
              .reg.s32       temp_34926;
              set.gt.s32.s32 temp_34926, temp_52080, 0;
              .reg.s32       temp_34927;
              and.b32        temp_34927, temp_34918, temp_34926;
              .reg.s32       temp_34928;
              not.b32        temp_34928, temp_34927;
              .reg.s32       temp_34931;
              .reg.pred      temp_34918_61295;
              setp.ne.s32    temp_34918_61295, 0, temp_34918;
  @!temp_34918_61295 bra     else_61293;
              .reg.u64       tmp_61296;
              .reg.s32       optix_buffer_id_61297;
              mov.b64        {_, optix_buffer_id_61297}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61298;
{
              .reg.s32       abstract_61299;
              mov.b32        abstract_61299, 1;
              .reg.u64       const_61300;
              mov.b64        const_61300, 544;
              .reg.u64       const_61301;
              mov.b64        const_61301, 0;
 call (ptr_from_optix_id_61298), _rt_buffer_get_id_64, (optix_buffer_id_61297, abstract_61299, abstract_61299, const_61300, const_61301, const_61301, const_61301); // resolving optix id
}
              ld.u64         tmp_61296, [ptr_from_optix_id_61298];
              .reg.s32       tmp_61302;
              .reg.u64       off_61303;
              mad.wide.u32   off_61303, tmp_59446, 48, 40;
              .reg.s32       optix_buffer_id_61304;
              mov.b64        {_, optix_buffer_id_61304}, tmp_61296;
              .reg.u64       ptr_from_optix_id_61305;
{
              .reg.s32       abstract_61306;
              mov.b32        abstract_61306, 1;
              .reg.u64       const_61307;
              mov.b64        const_61307, 512;
              .reg.u64       off_61308;
              add.u64        off_61308, const_61307, off_61303;
              .reg.u64       const_61309;
              mov.b64        const_61309, 0;
 call (ptr_from_optix_id_61305), _rt_buffer_get_id_64, (optix_buffer_id_61304, abstract_61306, abstract_61306, off_61308, const_61309, const_61309, const_61309); // resolving optix id
}
              ld.s32         tmp_61302, [ptr_from_optix_id_61305];
              .reg.s32       temp_34977;
              not.b32        temp_34977, tmp_61302;
              mov.b32        temp_34931, temp_34977;
              bra.uni        merge_61294;
else_61293:
              mov.b32        temp_34931, 0;
merge_61294:
              .reg.s32       state_34932;
              or.b32         state_34932, tmp_59715_10, 1024;
              .reg.s32       state_34933;
              .reg.pred      temp_34931_61310;
              setp.ne.s32    temp_34931_61310, 0, temp_34931;
              selp.s32       state_34933, state_34932, tmp_59715_10, temp_34931_61310;
              .reg.s32       temp_34936;
              .reg.pred      temp_34918_61313;
              setp.ne.s32    temp_34918_61313, 0, temp_34918;
  @!temp_34918_61313 bra     else_61311;
              .reg.u64       tmp_61314;
              .reg.s32       optix_buffer_id_61315;
              mov.b64        {_, optix_buffer_id_61315}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61316;
{
              .reg.s32       abstract_61317;
              mov.b32        abstract_61317, 1;
              .reg.u64       const_61318;
              mov.b64        const_61318, 544;
              .reg.u64       const_61319;
              mov.b64        const_61319, 0;
 call (ptr_from_optix_id_61316), _rt_buffer_get_id_64, (optix_buffer_id_61315, abstract_61317, abstract_61317, const_61318, const_61319, const_61319, const_61319); // resolving optix id
}
              ld.u64         tmp_61314, [ptr_from_optix_id_61316];
              .reg.s32       tmp_61320;
              .reg.u64       off_61321;
              mad.wide.u32   off_61321, tmp_59446, 48, 28;
              .reg.s32       optix_buffer_id_61322;
              mov.b64        {_, optix_buffer_id_61322}, tmp_61314;
              .reg.u64       ptr_from_optix_id_61323;
{
              .reg.s32       abstract_61324;
              mov.b32        abstract_61324, 1;
              .reg.u64       const_61325;
              mov.b64        const_61325, 512;
              .reg.u64       off_61326;
              add.u64        off_61326, const_61325, off_61321;
              .reg.u64       const_61327;
              mov.b64        const_61327, 0;
 call (ptr_from_optix_id_61323), _rt_buffer_get_id_64, (optix_buffer_id_61322, abstract_61324, abstract_61324, off_61326, const_61327, const_61327, const_61327); // resolving optix id
}
              ld.s32         tmp_61320, [ptr_from_optix_id_61323];
              .reg.s32       temp_34974;
              not.b32        temp_34974, tmp_61320;
              mov.b32        temp_34936, temp_34974;
              bra.uni        merge_61312;
else_61311:
              mov.b32        temp_34936, 0;
merge_61312:
              .reg.s32       temp_34937;
              and.b32        temp_34937, state_34933, 512;
              .reg.s32       temp_34938;
              set.gt.s32.s32 temp_34938, temp_34937, 0;
              .reg.s32       temp_34939;
              and.b32        temp_34939, temp_34936, temp_34938;
              .reg.s32       bounce_34940;
              .reg.pred      temp_34939_61328;
              setp.ne.s32    temp_34939_61328, 0, temp_34939;
              selp.s32       bounce_34940, 0, temp_34928, temp_34939_61328;
              .reg.s32       state_34941;
              and.b32        state_34941, tmp_59715_10, -2049;
              .reg.s32       state_34971;
              and.b32        state_34971, tmp_59715_10, -98305;
              .reg.s32       temp_34946;
              .reg.pred      temp_34918_61331;
              setp.ne.s32    temp_34918_61331, 0, temp_34918;
  @!temp_34918_61331 bra     else_61329;
              .reg.u64       tmp_61332;
              .reg.s32       optix_buffer_id_61333;
              mov.b64        {_, optix_buffer_id_61333}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61334;
{
              .reg.s32       abstract_61335;
              mov.b32        abstract_61335, 1;
              .reg.u64       const_61336;
              mov.b64        const_61336, 544;
              .reg.u64       const_61337;
              mov.b64        const_61337, 0;
 call (ptr_from_optix_id_61334), _rt_buffer_get_id_64, (optix_buffer_id_61333, abstract_61335, abstract_61335, const_61336, const_61337, const_61337, const_61337); // resolving optix id
}
              ld.u64         tmp_61332, [ptr_from_optix_id_61334];
              .reg.s32       tmp_61338;
              .reg.u64       off_61339;
              mad.wide.u32   off_61339, tmp_59446, 48, 36;
              .reg.s32       optix_buffer_id_61340;
              mov.b64        {_, optix_buffer_id_61340}, tmp_61332;
              .reg.u64       ptr_from_optix_id_61341;
{
              .reg.s32       abstract_61342;
              mov.b32        abstract_61342, 1;
              .reg.u64       const_61343;
              mov.b64        const_61343, 512;
              .reg.u64       off_61344;
              add.u64        off_61344, const_61343, off_61339;
              .reg.u64       const_61345;
              mov.b64        const_61345, 0;
 call (ptr_from_optix_id_61341), _rt_buffer_get_id_64, (optix_buffer_id_61340, abstract_61342, abstract_61342, off_61344, const_61345, const_61345, const_61345); // resolving optix id
}
              ld.s32         tmp_61338, [ptr_from_optix_id_61341];
              .reg.s32       temp_34969;
              not.b32        temp_34969, tmp_61338;
              mov.b32        temp_34946, temp_34969;
              bra.uni        merge_61330;
else_61329:
              mov.b32        temp_34946, 0;
merge_61330:
              .reg.s32       state_34947;
              or.b32         state_34947, state_34971, 16384;
              .reg.s32       state_34948;
              and.b32        state_34948, state_34971, -16385;
              .reg.s32       state_34949;
              .reg.pred      temp_34946_61346;
              setp.ne.s32    temp_34946_61346, 0, temp_34946;
              selp.s32       state_34949, state_34947, state_34948, temp_34946_61346;
              .reg.s32       temp_34950;
              and.b32        temp_34950, state_is_same_as_shadow_ray_34919, 512;
              .reg.s32       temp_34951;
              and.b32        temp_34951, state_34979, 511;
              .reg.s32       temp_34952;
              or.b32         temp_34952, temp_34950, temp_34951;
              .reg.s32       temp_34953;
              and.b32        temp_34953, state_34933, 1024;
              .reg.s32       temp_34954;
              or.b32         temp_34954, temp_34952, temp_34953;
              .reg.s32       temp_34955;
              and.b32        temp_34955, state_34941, 6144;
              .reg.s32       temp_34956;
              or.b32         temp_34956, temp_34954, temp_34955;
              .reg.s32       temp_34957;
              and.b32        temp_34957, state_34949, 122880;
              .reg.s32       temp_34958;
              or.b32         temp_34958, temp_34956, temp_34957;
              .reg.u64       scl_42262;
              .reg.u64       scl_42263;
              .reg.u64       scl_42264;
              .reg.pred      bounce_34940_61349;
              setp.ne.s32    bounce_34940_61349, 0, bounce_34940;
  @!bounce_34940_61349 bra   else_61347;
              .reg.s32       temp_34961;
              add.cc.s32     temp_34961, tmp_59715_3, 1;
              .reg.s32       temp_34963;
              .reg.pred      tmp_59724_61350;
              setp.ne.s32    tmp_59724_61350, 0, tmp_59724;
              selp.s32       temp_34963, 32, 0, tmp_59724_61350;
              .reg.s32       flags_34964;
              add.cc.s32     flags_34964, 1, temp_34963;
              .reg.s32       tmp_61351;
              .reg.s32       optix_buffer_id_61352;
              .reg.s32       is_optix_buffer_id_61353;
              mov.b64        {is_optix_buffer_id_61353, optix_buffer_id_61352}, scl_41992;
              .reg.u64       off_61354;
              add.u64        off_61354, scl_41992, 0;
              .reg.pred      is_optix_buffer_id_61355;
              setp.eq.s32    is_optix_buffer_id_61355, -1, is_optix_buffer_id_61353;
{
              .reg.s32       abstract_61356;
              mov.b32        abstract_61356, 1;
              .reg.u64       const_61357;
              mov.b64        const_61357, 512;
              .reg.u64       const_61358;
              mov.b64        const_61358, 0;
@is_optix_buffer_id_61355 call (off_61354), _rt_buffer_get_id_64, (optix_buffer_id_61352, abstract_61356, abstract_61356, const_61357, const_61358, const_61358, const_61358); // resolving optix id
}
              ld.s32         tmp_61351, [off_61354];
              .reg.s32       temp_57922;
              set.lt.s32.s32 temp_57922, tmp_61351, 16;
              .reg.u64       scl_57923;
              .reg.u64       scl_57924;
              .reg.u64       scl_57925;
              .reg.pred      temp_57922_61361;
              setp.ne.s32    temp_57922_61361, 0, temp_57922;
  @!temp_57922_61361 bra     else_61359;
              .reg.s32       temp_57927;
              add.cc.s32     temp_57927, tmp_61351, 1;
              st.s32         [scl_41992], temp_57927;
              .reg.u64       off_61362;
              mad.wide.u32   off_61362, tmp_61351, 112, 0;
              .reg.u64       off_61363;
              add.u64        off_61363, scl_41993, off_61362;
              st.v2.f32      [off_61363], {temp_57887_0, temp_57887_1};
              st.f32         [off_61363+8], temp_57887_2;
              st.v2.f32      [off_61363+16], {temp_57890_0, temp_57890_1};
              st.f32         [off_61363+24], temp_57890_2;
              st.v2.f32      [off_61363+32], {temp_57893_0, temp_57893_1};
              st.f32         [off_61363+40], temp_57893_2;
              st.v2.f32      [off_61363+48], {temp_57360_0, temp_57360_1};
              st.f32         [off_61363+56], temp_57360_2;
              .reg.f32       abstract_61364;
              mov.b32        abstract_61364, 0F00000000;
              .reg.f32       abstract_61365;
              mov.b32        abstract_61365, 0F00000000;
              .reg.f32       abstract_61366;
              mov.b32        abstract_61366, 0F00000000;
              st.v2.f32      [off_61363+64], {abstract_61364, abstract_61365};
              st.f32         [off_61363+72], abstract_61366;
              .reg.f32       abstract_61367;
              mov.b32        abstract_61367, 0F00000000;
              .reg.f32       abstract_61368;
              mov.b32        abstract_61368, 0F00000000;
              .reg.f32       abstract_61369;
              mov.b32        abstract_61369, 0F00000000;
              st.v2.f32      [off_61363+80], {abstract_61367, abstract_61368};
              st.f32         [off_61363+88], abstract_61369;
              st.f32         [off_61363+96], temp_57899;
              .reg.u64       off_61370;
              mad.wide.u32   off_61370, tmp_61351, 112, 0;
              .reg.u64       off_61371;
              add.u64        off_61371, scl_41994, off_61370;
              st.v2.f32      [off_61371], {temp_57851_0, temp_57851_1};
              st.f32         [off_61371+8], temp_57851_2;
              st.f32         [off_61371+16], trans_34911;
              st.f32         [off_61371+20], tmp_59715_2;
              st.s32         [off_61371+24], temp_34961;
              st.s32         [off_61371+28], scl_41979;
              st.s32         [off_61371+32], flags_34964;
              st.v2.f32      [off_61371+48], {temp_57887_0, temp_57887_1};
              st.f32         [off_61371+56], temp_57887_2;
              st.v2.f32      [off_61371+64], {temp_57890_0, temp_57890_1};
              st.f32         [off_61371+72], temp_57890_2;
              st.v2.f32      [off_61371+80], {temp_57893_0, temp_57893_1};
              st.f32         [off_61371+88], temp_57893_2;
              .reg.f32       abstract_61372;
              mov.b32        abstract_61372, 0F00000000;
              st.f32         [off_61371+96], abstract_61372;
              .reg.f32       abstract_61373;
              mov.b32        abstract_61373, 0F3f800000;
              st.f32         [off_61371+100], abstract_61373;
              st.s32         [off_61371+104], tmp_61281;
              st.s32         [off_61371+108], temp_34958;
              mov.u64        scl_57923, scl_41992;
              mov.u64        scl_57924, scl_41993;
              mov.u64        scl_57925, scl_41994;
              bra.uni        merge_61360;
else_61359:
              mov.u64        scl_57923, scl_41992;
              mov.u64        scl_57924, scl_41993;
              mov.u64        scl_57925, scl_41994;
merge_61360:
              mov.u64        scl_42262, scl_57923;
              mov.u64        scl_42263, scl_57924;
              mov.u64        scl_42264, scl_57925;
              bra.uni        merge_61348;
else_61347:
              mov.u64        scl_42262, scl_41992;
              mov.u64        scl_42263, scl_41993;
              mov.u64        scl_42264, scl_41994;
merge_61348:
              mov.u64        scl_42240, scl_42262;
              mov.u64        scl_42241, scl_42263;
              mov.u64        scl_42242, scl_42264;
              mov.b32        scl_42228, scl_41980;
              bra.uni        merge_61274;
else_61273:
              mov.u64        scl_42240, scl_41992;
              mov.u64        scl_42241, scl_41993;
              mov.u64        scl_42242, scl_41994;
              mov.b32        scl_42228, scl_41980;
merge_61274:
              mov.b32        scl_42164_0, scl_42203_0;
              mov.b32        scl_42164_1, scl_42203_1;
              mov.b32        scl_42164_2, scl_42203_2;
              mov.u64        scl_42180, scl_42240;
              mov.u64        scl_42181, scl_42241;
              mov.u64        scl_42182, scl_42242;
              mov.b32        scl_42167, scl_41979;
              mov.b32        scl_42168, scl_42228;
              bra.uni        merge_61188;
else_61187:
              mov.b32        scl_42164_0, scl_41976_0;
              mov.b32        scl_42164_1, scl_41976_1;
              mov.b32        scl_42164_2, scl_41976_2;
              mov.u64        scl_42180, scl_41992;
              mov.u64        scl_42181, scl_41993;
              mov.u64        scl_42182, scl_41994;
              mov.b32        scl_42167, scl_41979;
              mov.b32        scl_42168, scl_41980;
merge_61188:
              .reg.s32       cdf_iter_31269;
              add.cc.s32     cdf_iter_31269, cdf_iter_31254, 1;
              .reg.s32       temp_31271;
              set.lt.s32.s32 temp_31271, cdf_iter_31269, tmp_60580;
              mov.b32        scl_41744_0, scl_42164_0;
              mov.b32        scl_41744_1, scl_42164_1;
              mov.b32        scl_41744_2, scl_42164_2;
              mov.u64        scl_41759, scl_42180;
              mov.u64        scl_41760, scl_42181;
              mov.u64        scl_41761, scl_42182;
              mov.b32        scl_41747, scl_42167;
              mov.b32        cdf_iter_31254, cdf_iter_31269;
              mov.b32        lighting_31255_0, scl_42164_0;
              mov.b32        lighting_31255_1, scl_42164_1;
              mov.b32        lighting_31255_2, scl_42164_2;
              mov.u64        scl_41801, scl_42180;
              mov.u64        scl_41802, scl_42181;
              mov.u64        scl_41803, scl_42182;
              mov.b32        sampler_31258, scl_42167;
              mov.b32        side_31259, scl_42168;
              .reg.pred      temp_31271_61374;
              setp.ne.s32    temp_31271_61374, 0, temp_31271;
  @temp_31271_61374 bra.uni  doloop_60589;
              mov.b32        scl_41708_0, scl_41744_0;
              mov.b32        scl_41708_1, scl_41744_1;
              mov.b32        scl_41708_2, scl_41744_2;
              mov.u64        scl_41723, scl_41759;
              mov.u64        scl_41724, scl_41760;
              mov.u64        scl_41725, scl_41761;
              mov.b32        scl_41711, scl_41747;
              bra.uni        merge_60587;
else_60586:
              mov.b32        scl_41708_0, scl_41528_0;
              mov.b32        scl_41708_1, scl_41528_1;
              mov.b32        scl_41708_2, scl_41528_2;
              mov.u64        scl_41723, tmp_59706;
              mov.u64        scl_41724, tmp_59708;
              mov.u64        scl_41725, tmp_59710;
              mov.b32        scl_41711, tmp_59715_4;
merge_60587:
              mov.b32        scl_41660_0, scl_41708_0;
              mov.b32        scl_41660_1, scl_41708_1;
              mov.b32        scl_41660_2, scl_41708_2;
              mov.u64        scl_41675, scl_41723;
              mov.u64        scl_41676, scl_41724;
              mov.u64        scl_41677, scl_41725;
              mov.b32        scl_41663, scl_41711;
merge_60564:
              .reg.u64       tmp_61375;
              ld.param.u64   tmp_61375, [integratorInstanceID_22355];
              .reg.s32       tmp_61376;
              ld.s32         tmp_61376, [tmp_61375];
              .reg.u64       tmp_61377;
              .reg.s32       optix_buffer_id_61378;
              mov.b64        {_, optix_buffer_id_61378}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61379;
{
              .reg.s32       abstract_61380;
              mov.b32        abstract_61380, 1;
              .reg.u64       const_61381;
              mov.b64        const_61381, 568;
              .reg.u64       const_61382;
              mov.b64        const_61382, 0;
 call (ptr_from_optix_id_61379), _rt_buffer_get_id_64, (optix_buffer_id_61378, abstract_61380, abstract_61380, const_61381, const_61382, const_61382, const_61382); // resolving optix id
}
              ld.u64         tmp_61377, [ptr_from_optix_id_61379];
              .reg.f32       tmp_61383;
              .reg.u64       off_61384;
              mad.wide.u32   off_61384, tmp_61376, 112, 8;
              .reg.s32       optix_buffer_id_61385;
              mov.b64        {_, optix_buffer_id_61385}, tmp_61377;
              .reg.u64       ptr_from_optix_id_61386;
{
              .reg.s32       abstract_61387;
              mov.b32        abstract_61387, 1;
              .reg.u64       const_61388;
              mov.b64        const_61388, 512;
              .reg.u64       off_61389;
              add.u64        off_61389, const_61388, off_61384;
              .reg.u64       const_61390;
              mov.b64        const_61390, 0;
 call (ptr_from_optix_id_61386), _rt_buffer_get_id_64, (optix_buffer_id_61385, abstract_61387, abstract_61387, off_61389, const_61390, const_61390, const_61390); // resolving optix id
}
              ld.f32         tmp_61383, [ptr_from_optix_id_61386];
              .reg.s32       temp_57937;
              set.ge.ftz.s32.f32 temp_57937, 0F00000000, tmp_61383;
              .reg .f32      scl_42380_0, scl_42380_1, scl_42380_2;
              .reg.u64       scl_42395;
              .reg.u64       scl_42396;
              .reg.u64       scl_42397;
              .reg.s32       scl_42383;
              .reg.pred      temp_57937_61393;
              setp.ne.s32    temp_57937_61393, 0, temp_57937;
  @!temp_57937_61393 bra     else_61391;
              .reg .f32      temp_57949_0, temp_57949_1, temp_57949_2;
              mul.ftz.f32    temp_57949_0, temp_52657_0, temp_52006_0;
              mul.ftz.f32    temp_57949_1, temp_52657_1, temp_52006_0;
              mul.ftz.f32    temp_57949_2, temp_52657_2, temp_52006_0;
              .reg .f32      temp_57968_0, temp_57968_1, temp_57968_2;
              mul.ftz.f32    temp_57968_0, temp_52669_0, temp_52006_1;
              mul.ftz.f32    temp_57968_1, temp_52669_1, temp_52006_1;
              mul.ftz.f32    temp_57968_2, temp_52669_2, temp_52006_1;
              .reg .f32      temp_57977_0, temp_57977_1, temp_57977_2;
              add.ftz.f32    temp_57977_0, temp_57949_0, temp_57968_0;
              add.ftz.f32    temp_57977_1, temp_57949_1, temp_57968_1;
              add.ftz.f32    temp_57977_2, temp_57949_2, temp_57968_2;
              .reg .f32      temp_57990_0, temp_57990_1, temp_57990_2;
              mul.ftz.f32    temp_57990_0, temp_52681_0, temp_52006_2;
              mul.ftz.f32    temp_57990_1, temp_52681_1, temp_52006_2;
              mul.ftz.f32    temp_57990_2, temp_52681_2, temp_52006_2;
              .reg .f32      temp_57999_0, temp_57999_1, temp_57999_2;
              add.ftz.f32    temp_57999_0, temp_57977_0, temp_57990_0;
              add.ftz.f32    temp_57999_1, temp_57977_1, temp_57990_1;
              add.ftz.f32    temp_57999_2, temp_57977_2, temp_57990_2;
              .reg.s32       temp_37371;
              set.lt.s32.s32 temp_37371, scl_41663, 8;
              .reg.f32       f1_37372;
              .reg.pred      temp_37371_61396;
              setp.ne.s32    temp_37371_61396, 0, temp_37371;
  @!temp_37371_61396 bra     else_61394;
              .reg.s32       temp_58004;
              and.b32        temp_58004, scl_41663, 63;
              .reg.u64       tmp_61397;
              .reg.s32       optix_buffer_id_61398;
              mov.b64        {_, optix_buffer_id_61398}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61399;
{
              .reg.s32       abstract_61400;
              mov.b32        abstract_61400, 1;
              .reg.u64       const_61401;
              mov.b64        const_61401, 512;
              .reg.u64       const_61402;
              mov.b64        const_61402, 0;
 call (ptr_from_optix_id_61399), _rt_buffer_get_id_64, (optix_buffer_id_61398, abstract_61400, abstract_61400, const_61401, const_61402, const_61402, const_61402); // resolving optix id
}
              ld.u64         tmp_61397, [ptr_from_optix_id_61399];
              .reg.s32       tmp_61403;
              .reg.u64       off_61404;
              mad.wide.u32   off_61404, temp_58004, 4, 0;
              .reg.s32       optix_buffer_id_61405;
              mov.b64        {_, optix_buffer_id_61405}, tmp_61397;
              .reg.u64       ptr_from_optix_id_61406;
{
              .reg.s32       abstract_61407;
              mov.b32        abstract_61407, 1;
              .reg.u64       const_61408;
              mov.b64        const_61408, 512;
              .reg.u64       off_61409;
              add.u64        off_61409, const_61408, off_61404;
              .reg.u64       const_61410;
              mov.b64        const_61410, 0;
 call (ptr_from_optix_id_61406), _rt_buffer_get_id_64, (optix_buffer_id_61405, abstract_61407, abstract_61407, off_61409, const_61410, const_61410, const_61410); // resolving optix id
}
              ld.s32         tmp_61403, [ptr_from_optix_id_61406];
              .reg.f32       temp_37462;
              cvt.rn.f32.s32 temp_37462, tmp_61403;
              .reg.f32       digit_37463;
              div.approx.ftz.f32 digit_37463, 0F3f800000, temp_37462;
              .reg.s32       temp_37464;
              set.gt.s32.s32 temp_37464, temp_30198, 0;
              .reg.f32       ilwerse_37465;
              .reg.pred      temp_37464_61413;
              setp.ne.s32    temp_37464_61413, 0, temp_37464;
  @!temp_37464_61413 bra     else_61411;
              .reg.f32       digit_37479;
              mov.b32        digit_37479, digit_37463;
              .reg.s32       i_37480;
              mov.b32        i_37480, temp_30198;
              .reg.f32       ilwerse_37481;
              mov.b32        ilwerse_37481, 0F00000000;
              .reg.f32       ilwerse_37478;
doloop_61414:
              .reg.s32       temp_37482;
              rem.s32        temp_37482, i_37480, tmp_61403;
              .reg.f32       temp_37483;
              cvt.rn.f32.s32 temp_37483, temp_37482;
              .reg.f32       temp_37484;
              mul.ftz.f32    temp_37484, digit_37479, temp_37483;
              .reg.f32       ilwerse_37485;
              add.ftz.f32    ilwerse_37485, ilwerse_37481, temp_37484;
              .reg.f32       digit_37486;
              mul.ftz.f32    digit_37486, digit_37479, digit_37463;
              .reg.s32       i_37487;
              div.s32        i_37487, i_37480, tmp_61403;
              .reg.s32       temp_37488;
              set.gt.s32.s32 temp_37488, i_37487, 0;
              mov.b32        ilwerse_37478, ilwerse_37485;
              mov.b32        digit_37479, digit_37486;
              mov.b32        i_37480, i_37487;
              mov.b32        ilwerse_37481, ilwerse_37485;
              .reg.pred      temp_37488_61415;
              setp.ne.s32    temp_37488_61415, 0, temp_37488;
  @temp_37488_61415 bra      doloop_61414;
              mov.b32        ilwerse_37465, ilwerse_37478;
              bra.uni        merge_61412;
else_61411:
              mov.b32        ilwerse_37465, 0F00000000;
merge_61412:
              .reg.s32       temp_37466;
              set.eq.s32.s32 temp_37466, scl_41663, 0;
              .reg.f32       f1_37467;
              .reg.pred      temp_37466_61418;
              setp.ne.s32    temp_37466_61418, 0, temp_37466;
  @!temp_37466_61418 bra     else_61416;
              .reg.f32       temp_37474;
              mul.ftz.f32    temp_37474, ilwerse_37465, 0F43800000;
              .reg.s32       temp_37475;
              rem.s32        temp_37475, temp_30189, 256;
              .reg.f32       temp_37476;
              cvt.rn.f32.s32 temp_37476, temp_37475;
              .reg.f32       f1_37477;
              sub.ftz.f32    f1_37477, temp_37474, temp_37476;
              mov.b32        f1_37467, f1_37477;
              bra.uni        merge_61417;
else_61416:
              .reg.s32       temp_37468;
              set.eq.s32.s32 temp_37468, scl_41663, 1;
              .reg.f32       f1_37469;
              .reg.pred      temp_37468_61421;
              setp.ne.s32    temp_37468_61421, 0, temp_37468;
  @!temp_37468_61421 bra     else_61419;
              .reg.f32       temp_37470;
              mul.ftz.f32    temp_37470, ilwerse_37465, 0F43730000;
              .reg.s32       temp_37471;
              rem.s32        temp_37471, temp_30192, 243;
              .reg.f32       temp_37472;
              cvt.rn.f32.s32 temp_37472, temp_37471;
              .reg.f32       f1_37473;
              sub.ftz.f32    f1_37473, temp_37470, temp_37472;
              mov.b32        f1_37469, f1_37473;
              bra.uni        merge_61420;
else_61419:
              mov.b32        f1_37469, ilwerse_37465;
merge_61420:
              mov.b32        f1_37467, f1_37469;
merge_61417:
              mov.b32        f1_37372, f1_37467;
              bra.uni        merge_61395;
else_61394:
              .reg.s32       i_37437;
              mov.b32        i_37437, 0;
              .reg.s32       sum_37438;
              mov.b32        sum_37438, 0;
              .reg.s32       v0_37439;
              mov.b32        v0_37439, scl_41663;
              .reg.s32       v1_37440;
              mov.b32        v1_37440, temp_30198;
              .reg.s32       scl_42416;
doloop_61422:
              .reg.s32       sum_37441;
              add.cc.s32     sum_37441, sum_37438, -1640531527;
              .reg.s32       temp_37442;
              shl.b32        temp_37442, v1_37440, 4;
              .reg.s32       temp_37443;
              add.cc.s32     temp_37443, temp_37442, -1556008596;
              .reg.s32       temp_37444;
              add.cc.s32     temp_37444, v1_37440, sum_37441;
              .reg.s32       temp_37445;
              xor.b32        temp_37445, temp_37443, temp_37444;
              .reg.s32       temp_37446;
              shr.u32        temp_37446, v1_37440, 5;
              .reg.s32       temp_37447;
              add.cc.s32     temp_37447, temp_37446, -939442524;
              .reg.s32       temp_37448;
              xor.b32        temp_37448, temp_37445, temp_37447;
              .reg.s32       v0_37449;
              add.cc.s32     v0_37449, v0_37439, temp_37448;
              .reg.s32       temp_37450;
              shl.b32        temp_37450, v0_37449, 4;
              .reg.s32       temp_37451;
              add.cc.s32     temp_37451, temp_37450, -1383041155;
              .reg.s32       temp_37452;
              add.cc.s32     temp_37452, v0_37449, sum_37441;
              .reg.s32       temp_37453;
              xor.b32        temp_37453, temp_37451, temp_37452;
              .reg.s32       temp_37454;
              shr.u32        temp_37454, v0_37449, 5;
              .reg.s32       temp_37455;
              add.cc.s32     temp_37455, temp_37454, 2123724318;
              .reg.s32       temp_37456;
              xor.b32        temp_37456, temp_37453, temp_37455;
              .reg.s32       v1_37457;
              add.cc.s32     v1_37457, v1_37440, temp_37456;
              .reg.s32       i_37458;
              add.cc.s32     i_37458, i_37437, 1;
              .reg.s32       temp_37459;
              set.lt.s32.s32 temp_37459, i_37458, 8;
              mov.b32        scl_42416, v0_37449;
              mov.b32        i_37437, i_37458;
              mov.b32        sum_37438, sum_37441;
              mov.b32        v0_37439, v0_37449;
              mov.b32        v1_37440, v1_37457;
              .reg.pred      temp_37459_61423;
              setp.ne.s32    temp_37459_61423, 0, temp_37459;
  @temp_37459_61423 bra.uni  doloop_61422;
              .reg.s32       temp_58006;
              and.b32        temp_58006, scl_42416, 2147483647;
              .reg.f32       temp_58007;
              cvt.rn.f32.s32 temp_58007, temp_58006;
              .reg.f32       temp_58008;
              div.approx.ftz.f32 temp_58008, temp_58007, 0F4f000000;
              mov.b32        f1_37372, temp_58008;
merge_61395:
              .reg.s32       temp_37373;
              add.cc.s32     temp_37373, scl_41663, 1;
              .reg.s32       temp_37374;
              set.lt.s32.s32 temp_37374, temp_37373, 8;
              .reg.f32       f1_37375;
              .reg.pred      temp_37374_61426;
              setp.ne.s32    temp_37374_61426, 0, temp_37374;
  @!temp_37374_61426 bra     else_61424;
              .reg.s32       temp_58009;
              and.b32        temp_58009, temp_37373, 63;
              .reg.u64       tmp_61427;
              .reg.s32       optix_buffer_id_61428;
              mov.b64        {_, optix_buffer_id_61428}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61429;
{
              .reg.s32       abstract_61430;
              mov.b32        abstract_61430, 1;
              .reg.u64       const_61431;
              mov.b64        const_61431, 512;
              .reg.u64       const_61432;
              mov.b64        const_61432, 0;
 call (ptr_from_optix_id_61429), _rt_buffer_get_id_64, (optix_buffer_id_61428, abstract_61430, abstract_61430, const_61431, const_61432, const_61432, const_61432); // resolving optix id
}
              ld.u64         tmp_61427, [ptr_from_optix_id_61429];
              .reg.s32       tmp_61433;
              .reg.u64       off_61434;
              mad.wide.u32   off_61434, temp_58009, 4, 0;
              .reg.s32       optix_buffer_id_61435;
              mov.b64        {_, optix_buffer_id_61435}, tmp_61427;
              .reg.u64       ptr_from_optix_id_61436;
{
              .reg.s32       abstract_61437;
              mov.b32        abstract_61437, 1;
              .reg.u64       const_61438;
              mov.b64        const_61438, 512;
              .reg.u64       off_61439;
              add.u64        off_61439, const_61438, off_61434;
              .reg.u64       const_61440;
              mov.b64        const_61440, 0;
 call (ptr_from_optix_id_61436), _rt_buffer_get_id_64, (optix_buffer_id_61435, abstract_61437, abstract_61437, off_61439, const_61440, const_61440, const_61440); // resolving optix id
}
              ld.s32         tmp_61433, [ptr_from_optix_id_61436];
              .reg.f32       temp_37407;
              cvt.rn.f32.s32 temp_37407, tmp_61433;
              .reg.f32       digit_37408;
              div.approx.ftz.f32 digit_37408, 0F3f800000, temp_37407;
              .reg.s32       temp_37409;
              set.gt.s32.s32 temp_37409, temp_30198, 0;
              .reg.f32       ilwerse_37410;
              .reg.pred      temp_37409_61443;
              setp.ne.s32    temp_37409_61443, 0, temp_37409;
  @!temp_37409_61443 bra     else_61441;
              .reg.f32       digit_37424;
              mov.b32        digit_37424, digit_37408;
              .reg.s32       i_37425;
              mov.b32        i_37425, temp_30198;
              .reg.f32       ilwerse_37426;
              mov.b32        ilwerse_37426, 0F00000000;
              .reg.f32       ilwerse_37423;
doloop_61444:
              .reg.s32       temp_37427;
              rem.s32        temp_37427, i_37425, tmp_61433;
              .reg.f32       temp_37428;
              cvt.rn.f32.s32 temp_37428, temp_37427;
              .reg.f32       temp_37429;
              mul.ftz.f32    temp_37429, digit_37424, temp_37428;
              .reg.f32       ilwerse_37430;
              add.ftz.f32    ilwerse_37430, ilwerse_37426, temp_37429;
              .reg.f32       digit_37431;
              mul.ftz.f32    digit_37431, digit_37424, digit_37408;
              .reg.s32       i_37432;
              div.s32        i_37432, i_37425, tmp_61433;
              .reg.s32       temp_37433;
              set.gt.s32.s32 temp_37433, i_37432, 0;
              mov.b32        ilwerse_37423, ilwerse_37430;
              mov.b32        digit_37424, digit_37431;
              mov.b32        i_37425, i_37432;
              mov.b32        ilwerse_37426, ilwerse_37430;
              .reg.pred      temp_37433_61445;
              setp.ne.s32    temp_37433_61445, 0, temp_37433;
  @temp_37433_61445 bra      doloop_61444;
              mov.b32        ilwerse_37410, ilwerse_37423;
              bra.uni        merge_61442;
else_61441:
              mov.b32        ilwerse_37410, 0F00000000;
merge_61442:
              .reg.s32       temp_37411;
              set.eq.s32.s32 temp_37411, temp_37373, 0;
              .reg.f32       f1_37412;
              .reg.pred      temp_37411_61448;
              setp.ne.s32    temp_37411_61448, 0, temp_37411;
  @!temp_37411_61448 bra     else_61446;
              .reg.f32       temp_37419;
              mul.ftz.f32    temp_37419, ilwerse_37410, 0F43800000;
              .reg.s32       temp_37420;
              rem.s32        temp_37420, temp_30189, 256;
              .reg.f32       temp_37421;
              cvt.rn.f32.s32 temp_37421, temp_37420;
              .reg.f32       f1_37422;
              sub.ftz.f32    f1_37422, temp_37419, temp_37421;
              mov.b32        f1_37412, f1_37422;
              bra.uni        merge_61447;
else_61446:
              .reg.s32       temp_37413;
              set.eq.s32.s32 temp_37413, temp_37373, 1;
              .reg.f32       f1_37414;
              .reg.pred      temp_37413_61451;
              setp.ne.s32    temp_37413_61451, 0, temp_37413;
  @!temp_37413_61451 bra     else_61449;
              .reg.f32       temp_37415;
              mul.ftz.f32    temp_37415, ilwerse_37410, 0F43730000;
              .reg.s32       temp_37416;
              rem.s32        temp_37416, temp_30192, 243;
              .reg.f32       temp_37417;
              cvt.rn.f32.s32 temp_37417, temp_37416;
              .reg.f32       f1_37418;
              sub.ftz.f32    f1_37418, temp_37415, temp_37417;
              mov.b32        f1_37414, f1_37418;
              bra.uni        merge_61450;
else_61449:
              mov.b32        f1_37414, ilwerse_37410;
merge_61450:
              mov.b32        f1_37412, f1_37414;
merge_61447:
              mov.b32        f1_37375, f1_37412;
              bra.uni        merge_61425;
else_61424:
              .reg.s32       i_37382;
              mov.b32        i_37382, 0;
              .reg.s32       sum_37383;
              mov.b32        sum_37383, 0;
              .reg.s32       v0_37384;
              mov.b32        v0_37384, temp_37373;
              .reg.s32       v1_37385;
              mov.b32        v1_37385, temp_30198;
              .reg.s32       scl_42422;
doloop_61452:
              .reg.s32       sum_37386;
              add.cc.s32     sum_37386, sum_37383, -1640531527;
              .reg.s32       temp_37387;
              shl.b32        temp_37387, v1_37385, 4;
              .reg.s32       temp_37388;
              add.cc.s32     temp_37388, temp_37387, -1556008596;
              .reg.s32       temp_37389;
              add.cc.s32     temp_37389, v1_37385, sum_37386;
              .reg.s32       temp_37390;
              xor.b32        temp_37390, temp_37388, temp_37389;
              .reg.s32       temp_37391;
              shr.u32        temp_37391, v1_37385, 5;
              .reg.s32       temp_37392;
              add.cc.s32     temp_37392, temp_37391, -939442524;
              .reg.s32       temp_37393;
              xor.b32        temp_37393, temp_37390, temp_37392;
              .reg.s32       v0_37394;
              add.cc.s32     v0_37394, v0_37384, temp_37393;
              .reg.s32       temp_37395;
              shl.b32        temp_37395, v0_37394, 4;
              .reg.s32       temp_37396;
              add.cc.s32     temp_37396, temp_37395, -1383041155;
              .reg.s32       temp_37397;
              add.cc.s32     temp_37397, v0_37394, sum_37386;
              .reg.s32       temp_37398;
              xor.b32        temp_37398, temp_37396, temp_37397;
              .reg.s32       temp_37399;
              shr.u32        temp_37399, v0_37394, 5;
              .reg.s32       temp_37400;
              add.cc.s32     temp_37400, temp_37399, 2123724318;
              .reg.s32       temp_37401;
              xor.b32        temp_37401, temp_37398, temp_37400;
              .reg.s32       v1_37402;
              add.cc.s32     v1_37402, v1_37385, temp_37401;
              .reg.s32       i_37403;
              add.cc.s32     i_37403, i_37382, 1;
              .reg.s32       temp_37404;
              set.lt.s32.s32 temp_37404, i_37403, 8;
              mov.b32        scl_42422, v0_37394;
              mov.b32        i_37382, i_37403;
              mov.b32        sum_37383, sum_37386;
              mov.b32        v0_37384, v0_37394;
              mov.b32        v1_37385, v1_37402;
              .reg.pred      temp_37404_61453;
              setp.ne.s32    temp_37404_61453, 0, temp_37404;
  @temp_37404_61453 bra.uni  doloop_61452;
              .reg.s32       temp_58011;
              and.b32        temp_58011, scl_42422, 2147483647;
              .reg.f32       temp_58012;
              cvt.rn.f32.s32 temp_58012, temp_58011;
              .reg.f32       temp_58013;
              div.approx.ftz.f32 temp_58013, temp_58012, 0F4f000000;
              mov.b32        f1_37375, temp_58013;
merge_61425:
              .reg.s32       temp_37376;
              add.cc.s32     temp_37376, temp_37373, 1;
              .reg.f32       temp_37336;
              sub.ftz.f32    temp_37336, 0F3f800000, f1_37375;
              .reg.f32       r_37337;
              sqrt.approx.f32 r_37337, temp_37336;
              .reg.f32       z_37340;
              sqrt.approx.f32 z_37340, f1_37375;
              .reg.f32       temp_58018;
              mul.ftz.f32    temp_58018, 0F40c90fdb, f1_37372;
              .reg.f32       temp_58023;
              sin.approx.ftz.f32 temp_58023, temp_58018;
              .reg.f32       cos_58024;
              cos.approx.ftz.f32 cos_58024, temp_58018;
              .reg.f32       temp_58029;
              mul.ftz.f32    temp_58029, r_37337, cos_58024;
              .reg.f32       temp_58043;
              mul.ftz.f32    temp_58043, r_37337, temp_58023;
              .reg.f32       temp_37347;
              div.approx.ftz.f32 temp_37347, z_37340, 0F40490fdb;
              .reg.s32       temp_58075;
              set.ge.ftz.s32.f32 temp_58075, temp_57999_2, 0F00000000;
              .reg.f32       temp_58090;
              neg.ftz.f32    temp_58090, z_37340;
              .reg.f32       scl_58076;
              .reg.pred      temp_58075_61454;
              setp.ne.s32    temp_58075_61454, 0, temp_58075;
              selp.f32       scl_58076, z_37340, temp_58090, temp_58075_61454;
              .reg .f32      temp_58100_0, temp_58100_1, temp_58100_2;
              div.approx.ftz.f32 temp_58100_0, temp_52777_0, 0F40490fdb;
              div.approx.ftz.f32 temp_58100_1, temp_52777_1, 0F40490fdb;
              div.approx.ftz.f32 temp_58100_2, temp_52777_2, 0F40490fdb;
              .reg .f32      temp_58112_0, temp_58112_1, temp_58112_2;
              mul.ftz.f32    temp_58112_0, tmp_59923_0, temp_58029;
              mul.ftz.f32    temp_58112_1, tmp_59923_1, temp_58029;
              mul.ftz.f32    temp_58112_2, tmp_59923_2, temp_58029;
              .reg .f32      temp_58114_0, temp_58114_1, temp_58114_2;
              mul.ftz.f32    temp_58114_0, tmp_59925_0, temp_58029;
              mul.ftz.f32    temp_58114_1, tmp_59925_1, temp_58029;
              mul.ftz.f32    temp_58114_2, tmp_59925_2, temp_58029;
              .reg .f32      temp_58118_0, temp_58118_1, temp_58118_2;
              mul.ftz.f32    temp_58118_0, tmp_59927_0, temp_58029;
              mul.ftz.f32    temp_58118_1, tmp_59927_1, temp_58029;
              mul.ftz.f32    temp_58118_2, tmp_59927_2, temp_58029;
              .reg .f32      temp_58131_0, temp_58131_1, temp_58131_2;
              mul.ftz.f32    temp_58131_0, tmp_59929_0, temp_58043;
              mul.ftz.f32    temp_58131_1, tmp_59929_1, temp_58043;
              mul.ftz.f32    temp_58131_2, tmp_59929_2, temp_58043;
              .reg .f32      temp_58133_0, temp_58133_1, temp_58133_2;
              mul.ftz.f32    temp_58133_0, tmp_59931_0, temp_58043;
              mul.ftz.f32    temp_58133_1, tmp_59931_1, temp_58043;
              mul.ftz.f32    temp_58133_2, tmp_59931_2, temp_58043;
              .reg .f32      temp_58137_0, temp_58137_1, temp_58137_2;
              mul.ftz.f32    temp_58137_0, tmp_59933_0, temp_58043;
              mul.ftz.f32    temp_58137_1, tmp_59933_1, temp_58043;
              mul.ftz.f32    temp_58137_2, tmp_59933_2, temp_58043;
              .reg .f32      temp_58140_0, temp_58140_1, temp_58140_2;
              add.ftz.f32    temp_58140_0, temp_58112_0, temp_58131_0;
              add.ftz.f32    temp_58140_1, temp_58112_1, temp_58131_1;
              add.ftz.f32    temp_58140_2, temp_58112_2, temp_58131_2;
              .reg .f32      temp_58141_0, temp_58141_1, temp_58141_2;
              add.ftz.f32    temp_58141_0, temp_58114_0, temp_58133_0;
              add.ftz.f32    temp_58141_1, temp_58114_1, temp_58133_1;
              add.ftz.f32    temp_58141_2, temp_58114_2, temp_58133_2;
              .reg .f32      temp_58142_0, temp_58142_1, temp_58142_2;
              add.ftz.f32    temp_58142_0, temp_58118_0, temp_58137_0;
              add.ftz.f32    temp_58142_1, temp_58118_1, temp_58137_1;
              add.ftz.f32    temp_58142_2, temp_58118_2, temp_58137_2;
              .reg .f32      temp_58153_0, temp_58153_1, temp_58153_2;
              mul.ftz.f32    temp_58153_0, tmp_59490_0, scl_58076;
              mul.ftz.f32    temp_58153_1, tmp_59490_1, scl_58076;
              mul.ftz.f32    temp_58153_2, tmp_59490_2, scl_58076;
              .reg .f32      temp_58155_0, temp_58155_1, temp_58155_2;
              mul.ftz.f32    temp_58155_0, tmp_59935_0, scl_58076;
              mul.ftz.f32    temp_58155_1, tmp_59935_1, scl_58076;
              mul.ftz.f32    temp_58155_2, tmp_59935_2, scl_58076;
              .reg .f32      temp_58159_0, temp_58159_1, temp_58159_2;
              mul.ftz.f32    temp_58159_0, tmp_59937_0, scl_58076;
              mul.ftz.f32    temp_58159_1, tmp_59937_1, scl_58076;
              mul.ftz.f32    temp_58159_2, tmp_59937_2, scl_58076;
              .reg .f32      temp_58162_0, temp_58162_1, temp_58162_2;
              add.ftz.f32    temp_58162_0, temp_58140_0, temp_58153_0;
              add.ftz.f32    temp_58162_1, temp_58140_1, temp_58153_1;
              add.ftz.f32    temp_58162_2, temp_58140_2, temp_58153_2;
              .reg .f32      temp_58163_0, temp_58163_1, temp_58163_2;
              add.ftz.f32    temp_58163_0, temp_58141_0, temp_58155_0;
              add.ftz.f32    temp_58163_1, temp_58141_1, temp_58155_1;
              add.ftz.f32    temp_58163_2, temp_58141_2, temp_58155_2;
              .reg .f32      temp_58164_0, temp_58164_1, temp_58164_2;
              add.ftz.f32    temp_58164_0, temp_58142_0, temp_58159_0;
              add.ftz.f32    temp_58164_1, temp_58142_1, temp_58159_1;
              add.ftz.f32    temp_58164_2, temp_58142_2, temp_58159_2;
              .reg .f32      temp_58171_0, temp_58171_1, temp_58171_2;
              mul.ftz.f32    temp_58171_0, temp_52006_0, tmp_60561_0;
              mul.ftz.f32    temp_58171_1, temp_52006_1, tmp_60561_1;
              mul.ftz.f32    temp_58171_2, temp_52006_2, tmp_60561_2;
              .reg.f32       temp_58188;
              add.ftz.f32    temp_58188, temp_58171_0, temp_58171_1;
              .reg.f32       temp_58194;
              add.ftz.f32    temp_58194, temp_58188, temp_58171_2;
              .reg .f32      temp_58202_0, temp_58202_1, temp_58202_2;
              mul.ftz.f32    temp_58202_0, temp_58162_0, tmp_59490_0;
              mul.ftz.f32    temp_58202_1, temp_58162_1, tmp_59490_1;
              mul.ftz.f32    temp_58202_2, temp_58162_2, tmp_59490_2;
              .reg.f32       temp_58219;
              add.ftz.f32    temp_58219, temp_58202_0, temp_58202_1;
              .reg.f32       temp_58225;
              add.ftz.f32    temp_58225, temp_58219, temp_58202_2;
              .reg .f32      temp_58233_0, temp_58233_1, temp_58233_2;
              mul.ftz.f32    temp_58233_0, temp_58162_0, tmp_60561_0;
              mul.ftz.f32    temp_58233_1, temp_58162_1, tmp_60561_1;
              mul.ftz.f32    temp_58233_2, temp_58162_2, tmp_60561_2;
              .reg.f32       temp_58250;
              add.ftz.f32    temp_58250, temp_58233_0, temp_58233_1;
              .reg.f32       temp_58256;
              add.ftz.f32    temp_58256, temp_58250, temp_58233_2;
              .reg.f32       temp_58262;
              mul.ftz.f32    temp_58262, temp_58194, temp_58256;
              .reg.s32       temp_58276;
              set.ge.ftz.s32.f32 temp_58276, temp_58262, 0F00000000;
              .reg.s32       temp_58279;
              set.lt.ftz.s32.f32 temp_58279, temp_58225, 0F00000000;
              .reg.s32       temp_58282;
              set.lt.ftz.s32.f32 temp_58282, temp_58256, 0F00000000;
              .reg.s32       temp_37369;
              xor.b32        temp_37369, temp_58279, temp_58282;
              .reg.s32       temp_37370;
              not.b32        temp_37370, temp_37369;
              .reg.s32       temp_58283;
              and.b32        temp_58283, temp_58276, temp_37370;
              .reg.s32       temp_37361;
              not.b32        temp_37361, temp_58283;
              .reg .f32      refl_37362_0, refl_37362_1, refl_37362_2;
              .reg.pred      temp_37361_61455;
              setp.ne.s32    temp_37361_61455, 0, temp_37361;
              selp.f32       refl_37362_0, 0F00000000, temp_58100_0, temp_37361_61455;
              selp.f32       refl_37362_1, 0F00000000, temp_58100_1, temp_37361_61455;
              selp.f32       refl_37362_2, 0F00000000, temp_58100_2, temp_37361_61455;
              .reg .f32      temp_58289_0, temp_58289_1, temp_58289_2;
              mul.ftz.f32    temp_58289_0, tmp_59490_0, temp_58162_0;
              mul.ftz.f32    temp_58289_1, tmp_59490_1, temp_58162_1;
              mul.ftz.f32    temp_58289_2, tmp_59490_2, temp_58162_2;
              .reg.f32       temp_58306;
              add.ftz.f32    temp_58306, temp_58289_0, temp_58289_1;
              .reg.f32       temp_58312;
              add.ftz.f32    temp_58312, temp_58306, temp_58289_2;
              .reg.s32       temp_58317;
              set.lt.ftz.s32.f32 temp_58317, temp_58312, 0F00000000;
              .reg.f32       temp_58325;
              neg.ftz.f32    temp_58325, temp_58312;
              .reg.f32       scl_58318;
              .reg.pred      temp_58317_61456;
              setp.ne.s32    temp_58317_61456, 0, temp_58317;
              selp.f32       scl_58318, temp_58325, temp_58312, temp_58317_61456;
              .reg.f32       temp_58333;
              rcp.approx.ftz.f32 temp_58333, temp_37347;
              .reg.f32       temp_58341;
              mul.ftz.f32    temp_58341, scl_58318, temp_58333;
              .reg .f32      temp_58355_0, temp_58355_1, temp_58355_2;
              mul.ftz.f32    temp_58355_0, temp_58341, tmp_59715_0_0;
              mul.ftz.f32    temp_58355_1, temp_58341, tmp_59715_0_1;
              mul.ftz.f32    temp_58355_2, temp_58341, tmp_59715_0_2;
              .reg .f32      temp_58356_0, temp_58356_1, temp_58356_2;
              mul.ftz.f32    temp_58356_0, refl_37362_0, temp_58355_0;
              mul.ftz.f32    temp_58356_1, refl_37362_1, temp_58355_1;
              mul.ftz.f32    temp_58356_2, refl_37362_2, temp_58355_2;
              .reg.s32       state_is_same_as_shadow_ray_37048;
              or.b32         state_is_same_as_shadow_ray_37048, tmp_59715_10, 512;
              .reg.s32       state_36822;
              and.b32        state_36822, tmp_59715_10, -32;
              .reg.s32       temp_37028;
              or.b32         temp_37028, state_36822, 1;
              .reg.s32       state_37029;
              or.b32         state_37029, temp_37028, 32;
              .reg.s32       temp_36829;
              set.gt.s32.s32 temp_36829, temp_52080, 0;
              .reg.s32       temp_36831;
              not.b32        temp_36831, temp_36829;
              .reg.u64       tmp_61457;
              .reg.s32       optix_buffer_id_61458;
              mov.b64        {_, optix_buffer_id_61458}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61459;
{
              .reg.s32       abstract_61460;
              mov.b32        abstract_61460, 1;
              .reg.u64       const_61461;
              mov.b64        const_61461, 544;
              .reg.u64       const_61462;
              mov.b64        const_61462, 0;
 call (ptr_from_optix_id_61459), _rt_buffer_get_id_64, (optix_buffer_id_61458, abstract_61460, abstract_61460, const_61461, const_61462, const_61462, const_61462); // resolving optix id
}
              ld.u64         tmp_61457, [ptr_from_optix_id_61459];
              .reg.s32       tmp_61463;
              .reg.u64       off_61464;
              mad.wide.u32   off_61464, tmp_59446, 48, 40;
              .reg.s32       optix_buffer_id_61465;
              mov.b64        {_, optix_buffer_id_61465}, tmp_61457;
              .reg.u64       ptr_from_optix_id_61466;
{
              .reg.s32       abstract_61467;
              mov.b32        abstract_61467, 1;
              .reg.u64       const_61468;
              mov.b64        const_61468, 512;
              .reg.u64       off_61469;
              add.u64        off_61469, const_61468, off_61464;
              .reg.u64       const_61470;
              mov.b64        const_61470, 0;
 call (ptr_from_optix_id_61466), _rt_buffer_get_id_64, (optix_buffer_id_61465, abstract_61467, abstract_61467, off_61469, const_61470, const_61470, const_61470); // resolving optix id
}
              ld.s32         tmp_61463, [ptr_from_optix_id_61466];
              .reg.s32       temp_37013;
              not.b32        temp_37013, tmp_61463;
              .reg.s32       state_36836;
              or.b32         state_36836, tmp_59715_10, 1024;
              .reg.s32       state_36837;
              .reg.pred      temp_37013_61471;
              setp.ne.s32    temp_37013_61471, 0, temp_37013;
              selp.s32       state_36837, state_36836, tmp_59715_10, temp_37013_61471;
              .reg.u64       tmp_61472;
              .reg.s32       optix_buffer_id_61473;
              mov.b64        {_, optix_buffer_id_61473}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61474;
{
              .reg.s32       abstract_61475;
              mov.b32        abstract_61475, 1;
              .reg.u64       const_61476;
              mov.b64        const_61476, 544;
              .reg.u64       const_61477;
              mov.b64        const_61477, 0;
 call (ptr_from_optix_id_61474), _rt_buffer_get_id_64, (optix_buffer_id_61473, abstract_61475, abstract_61475, const_61476, const_61477, const_61477, const_61477); // resolving optix id
}
              ld.u64         tmp_61472, [ptr_from_optix_id_61474];
              .reg.s32       tmp_61478;
              .reg.u64       off_61479;
              mad.wide.u32   off_61479, tmp_59446, 48, 28;
              .reg.s32       optix_buffer_id_61480;
              mov.b64        {_, optix_buffer_id_61480}, tmp_61472;
              .reg.u64       ptr_from_optix_id_61481;
{
              .reg.s32       abstract_61482;
              mov.b32        abstract_61482, 1;
              .reg.u64       const_61483;
              mov.b64        const_61483, 512;
              .reg.u64       off_61484;
              add.u64        off_61484, const_61483, off_61479;
              .reg.u64       const_61485;
              mov.b64        const_61485, 0;
 call (ptr_from_optix_id_61481), _rt_buffer_get_id_64, (optix_buffer_id_61480, abstract_61482, abstract_61482, off_61484, const_61485, const_61485, const_61485); // resolving optix id
}
              ld.s32         tmp_61478, [ptr_from_optix_id_61481];
              .reg.s32       temp_37005;
              not.b32        temp_37005, tmp_61478;
              .reg.s32       temp_36842;
              and.b32        temp_36842, state_36837, 512;
              .reg.s32       temp_36843;
              set.gt.s32.s32 temp_36843, temp_36842, 0;
              .reg.s32       temp_36844;
              and.b32        temp_36844, temp_37005, temp_36843;
              .reg.s32       bounce_36845;
              .reg.pred      temp_36844_61486;
              setp.ne.s32    temp_36844_61486, 0, temp_36844;
              selp.s32       bounce_36845, 0, temp_36831, temp_36844_61486;
              .reg.s32       state_36849;
              and.b32        state_36849, tmp_59715_10, -2049;
              .reg.s32       state_36986;
              and.b32        state_36986, tmp_59715_10, -98305;
              .reg.u64       tmp_61487;
              .reg.s32       optix_buffer_id_61488;
              mov.b64        {_, optix_buffer_id_61488}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61489;
{
              .reg.s32       abstract_61490;
              mov.b32        abstract_61490, 1;
              .reg.u64       const_61491;
              mov.b64        const_61491, 544;
              .reg.u64       const_61492;
              mov.b64        const_61492, 0;
 call (ptr_from_optix_id_61489), _rt_buffer_get_id_64, (optix_buffer_id_61488, abstract_61490, abstract_61490, const_61491, const_61492, const_61492, const_61492); // resolving optix id
}
              ld.u64         tmp_61487, [ptr_from_optix_id_61489];
              .reg.s32       tmp_61493;
              .reg.u64       off_61494;
              mad.wide.u32   off_61494, tmp_59446, 48, 36;
              .reg.s32       optix_buffer_id_61495;
              mov.b64        {_, optix_buffer_id_61495}, tmp_61487;
              .reg.u64       ptr_from_optix_id_61496;
{
              .reg.s32       abstract_61497;
              mov.b32        abstract_61497, 1;
              .reg.u64       const_61498;
              mov.b64        const_61498, 512;
              .reg.u64       off_61499;
              add.u64        off_61499, const_61498, off_61494;
              .reg.u64       const_61500;
              mov.b64        const_61500, 0;
 call (ptr_from_optix_id_61496), _rt_buffer_get_id_64, (optix_buffer_id_61495, abstract_61497, abstract_61497, off_61499, const_61500, const_61500, const_61500); // resolving optix id
}
              ld.s32         tmp_61493, [ptr_from_optix_id_61496];
              .reg.s32       temp_36975;
              not.b32        temp_36975, tmp_61493;
              .reg.s32       state_36857;
              or.b32         state_36857, state_36986, 16384;
              .reg.s32       state_36858;
              and.b32        state_36858, state_36986, -16385;
              .reg.s32       state_36859;
              .reg.pred      temp_36975_61501;
              setp.ne.s32    temp_36975_61501, 0, temp_36975;
              selp.s32       state_36859, state_36857, state_36858, temp_36975_61501;
              .reg.s32       temp_36860;
              and.b32        temp_36860, state_is_same_as_shadow_ray_37048, 512;
              .reg.s32       temp_36861;
              and.b32        temp_36861, state_37029, 511;
              .reg.s32       temp_36862;
              or.b32         temp_36862, temp_36860, temp_36861;
              .reg.s32       temp_36863;
              and.b32        temp_36863, state_36837, 1024;
              .reg.s32       temp_36864;
              or.b32         temp_36864, temp_36862, temp_36863;
              .reg.s32       temp_36865;
              and.b32        temp_36865, state_36849, 6144;
              .reg.s32       temp_36866;
              or.b32         temp_36866, temp_36864, temp_36865;
              .reg.s32       temp_36867;
              and.b32        temp_36867, state_36859, 122880;
              .reg.s32       temp_36868;
              or.b32         temp_36868, temp_36866, temp_36867;
              .reg.s32       temp_36869;
              .reg.pred      bounce_36845_61504;
              setp.ne.s32    bounce_36845_61504, 0, bounce_36845;
  @!bounce_36845_61504 bra   else_61502;
              .reg.u64       tmp_61505;
              ld.param.u64   tmp_61505, [integratorInstanceID_22355];
              .reg.s32       tmp_61506;
              ld.s32         tmp_61506, [tmp_61505];
              .reg.u64       tmp_61507;
              .reg.s32       optix_buffer_id_61508;
              mov.b64        {_, optix_buffer_id_61508}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61509;
{
              .reg.s32       abstract_61510;
              mov.b32        abstract_61510, 1;
              .reg.u64       const_61511;
              mov.b64        const_61511, 568;
              .reg.u64       const_61512;
              mov.b64        const_61512, 0;
 call (ptr_from_optix_id_61509), _rt_buffer_get_id_64, (optix_buffer_id_61508, abstract_61510, abstract_61510, const_61511, const_61512, const_61512, const_61512); // resolving optix id
}
              ld.u64         tmp_61507, [ptr_from_optix_id_61509];
              .reg.s32       tmp_61513;
              .reg.u64       off_61514;
              mad.wide.u32   off_61514, tmp_61506, 112, 12;
              .reg.s32       optix_buffer_id_61515;
              mov.b64        {_, optix_buffer_id_61515}, tmp_61507;
              .reg.u64       ptr_from_optix_id_61516;
{
              .reg.s32       abstract_61517;
              mov.b32        abstract_61517, 1;
              .reg.u64       const_61518;
              mov.b64        const_61518, 512;
              .reg.u64       off_61519;
              add.u64        off_61519, const_61518, off_61514;
              .reg.u64       const_61520;
              mov.b64        const_61520, 0;
 call (ptr_from_optix_id_61516), _rt_buffer_get_id_64, (optix_buffer_id_61515, abstract_61517, abstract_61517, off_61519, const_61520, const_61520, const_61520); // resolving optix id
}
              ld.s32         tmp_61513, [ptr_from_optix_id_61516];
              .reg.s32       temp_36972;
              set.lt.s32.s32 temp_36972, tmp_59715_3, tmp_61513;
              mov.b32        temp_36869, temp_36972;
              bra.uni        merge_61503;
else_61502:
              mov.b32        temp_36869, 0;
merge_61503:
              .reg.s32       temp_36870;
              .reg.pred      temp_36869_61523;
              setp.ne.s32    temp_36869_61523, 0, temp_36869;
  @!temp_36869_61523 bra     else_61521;
              .reg .f32      temp_58377_0, temp_58377_1, temp_58377_2;
              mul.ftz.f32    temp_58377_0, temp_58356_2, 0F3e38c49c;
              mul.ftz.f32    temp_58377_1, temp_58356_2, 0F3d93d07d;
              mul.ftz.f32    temp_58377_2, temp_58356_2, 0F3f734721;
              .reg .f32      temp_58378_0, temp_58378_1, temp_58378_2;
              fma.rn.ftz.f32 temp_58378_0, 0F3eb71437, temp_58356_1, temp_58377_0;
              fma.rn.ftz.f32 temp_58378_1, 0F3f371437, temp_58356_1, temp_58377_1;
              fma.rn.ftz.f32 temp_58378_2, 0F3df41aef, temp_58356_1, temp_58377_2;
              .reg .f32      temp_58379_0, temp_58379_1, temp_58379_2;
              fma.rn.ftz.f32 temp_58379_0, 0F3ed32d7c, temp_58356_0, temp_58378_0;
              fma.rn.ftz.f32 temp_58379_1, 0F3e59c6ed, temp_58356_0, temp_58378_1;
              fma.rn.ftz.f32 temp_58379_2, 0F3c9e6221, temp_58356_0, temp_58378_2;
              .reg.u64       tmp_61524;
              ld.param.u64   tmp_61524, [integratorInstanceID_22355];
              .reg.s32       tmp_61525;
              ld.s32         tmp_61525, [tmp_61524];
              .reg.u64       tmp_61526;
              .reg.s32       optix_buffer_id_61527;
              mov.b64        {_, optix_buffer_id_61527}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61528;
{
              .reg.s32       abstract_61529;
              mov.b32        abstract_61529, 1;
              .reg.u64       const_61530;
              mov.b64        const_61530, 568;
              .reg.u64       const_61531;
              mov.b64        const_61531, 0;
 call (ptr_from_optix_id_61528), _rt_buffer_get_id_64, (optix_buffer_id_61527, abstract_61529, abstract_61529, const_61530, const_61531, const_61531, const_61531); // resolving optix id
}
              ld.u64         tmp_61526, [ptr_from_optix_id_61528];
              .reg.f32       tmp_61532;
              .reg.u64       off_61533;
              mad.wide.u32   off_61533, tmp_61525, 112, 4;
              .reg.s32       optix_buffer_id_61534;
              mov.b64        {_, optix_buffer_id_61534}, tmp_61526;
              .reg.u64       ptr_from_optix_id_61535;
{
              .reg.s32       abstract_61536;
              mov.b32        abstract_61536, 1;
              .reg.u64       const_61537;
              mov.b64        const_61537, 512;
              .reg.u64       off_61538;
              add.u64        off_61538, const_61537, off_61533;
              .reg.u64       const_61539;
              mov.b64        const_61539, 0;
 call (ptr_from_optix_id_61535), _rt_buffer_get_id_64, (optix_buffer_id_61534, abstract_61536, abstract_61536, off_61538, const_61539, const_61539, const_61539); // resolving optix id
}
              ld.f32         tmp_61532, [ptr_from_optix_id_61535];
              .reg.s32       temp_36970;
              set.ge.ftz.s32.f32 temp_36970, temp_58379_1, tmp_61532;
              mov.b32        temp_36870, temp_36970;
              bra.uni        merge_61522;
else_61521:
              mov.b32        temp_36870, 0;
merge_61522:
              .reg .f32      scl_42432_0, scl_42432_1, scl_42432_2;
              .reg.u64       scl_42446;
              .reg.u64       scl_42447;
              .reg.u64       scl_42448;
              .reg.pred      temp_36870_61542;
              setp.ne.s32    temp_36870_61542, 0, temp_36870;
  @!temp_36870_61542 bra     else_61540;
              .reg .f32      temp_58385_0, temp_58385_1, temp_58385_2;
              mul.ftz.f32    temp_58385_0, tmp_60561_0, temp_58162_0;
              mul.ftz.f32    temp_58385_1, tmp_60561_1, temp_58162_1;
              mul.ftz.f32    temp_58385_2, tmp_60561_2, temp_58162_2;
              .reg.f32       temp_58402;
              add.ftz.f32    temp_58402, temp_58385_0, temp_58385_1;
              .reg.f32       temp_58408;
              add.ftz.f32    temp_58408, temp_58402, temp_58385_2;
              .reg.s32       temp_58414;
              set.gt.ftz.s32.f32 temp_58414, temp_58408, 0F00000000;
              .reg.f32       side_36938;
              .reg.pred      temp_58414_61543;
              setp.ne.s32    temp_58414_61543, 0, temp_58414;
              selp.f32       side_36938, 0F3f800000, 0Fbf800000, temp_58414_61543;
              .reg.f32       temp_36940;
              mul.ftz.f32    temp_36940, tmp_59738, side_36938;
              .reg .f32      temp_58424_0, temp_58424_1, temp_58424_2;
              mul.ftz.f32    temp_58424_0, tmp_60561_0, temp_36940;
              mul.ftz.f32    temp_58424_1, tmp_60561_1, temp_36940;
              mul.ftz.f32    temp_58424_2, tmp_60561_2, temp_36940;
              .reg.u64       tmp_61544;
              ld.param.u64   tmp_61544, [f_22353];
              .reg .f32      tmp_61545_0, tmp_61545_1, tmp_61545_2;
              ld.v2.f32      {tmp_61545_0, tmp_61545_1}, [tmp_61544+64];
              ld.f32         tmp_61545_2, [tmp_61544+72];
              .reg .f32      temp_58426_0, temp_58426_1, temp_58426_2;
              mul.ftz.f32    temp_58426_0, tmp_61545_0, temp_36940;
              mul.ftz.f32    temp_58426_1, tmp_61545_1, temp_36940;
              mul.ftz.f32    temp_58426_2, tmp_61545_2, temp_36940;
              .reg.u64       tmp_61546;
              ld.param.u64   tmp_61546, [f_22353];
              .reg .f32      tmp_61547_0, tmp_61547_1, tmp_61547_2;
              ld.v2.f32      {tmp_61547_0, tmp_61547_1}, [tmp_61546+80];
              ld.f32         tmp_61547_2, [tmp_61546+88];
              .reg .f32      temp_58430_0, temp_58430_1, temp_58430_2;
              mul.ftz.f32    temp_58430_0, tmp_61547_0, temp_36940;
              mul.ftz.f32    temp_58430_1, tmp_61547_1, temp_36940;
              mul.ftz.f32    temp_58430_2, tmp_61547_2, temp_36940;
              .reg .f32      temp_58437_0, temp_58437_1, temp_58437_2;
              add.ftz.f32    temp_58437_0, tmp_59506_0, temp_58424_0;
              add.ftz.f32    temp_58437_1, tmp_59506_1, temp_58424_1;
              add.ftz.f32    temp_58437_2, tmp_59506_2, temp_58424_2;
              .reg .f32      temp_58440_0, temp_58440_1, temp_58440_2;
              add.ftz.f32    temp_58440_0, tmp_59508_0, temp_58426_0;
              add.ftz.f32    temp_58440_1, tmp_59508_1, temp_58426_1;
              add.ftz.f32    temp_58440_2, tmp_59508_2, temp_58426_2;
              .reg .f32      temp_58443_0, temp_58443_1, temp_58443_2;
              add.ftz.f32    temp_58443_0, tmp_59510_0, temp_58430_0;
              add.ftz.f32    temp_58443_1, tmp_59510_1, temp_58430_1;
              add.ftz.f32    temp_58443_2, tmp_59510_2, temp_58430_2;
              .reg.u64       scl_42466;
              .reg.u64       scl_42467;
              .reg.u64       scl_42468;
              .reg.pred      tmp_59724_61550;
              setp.ne.s32    tmp_59724_61550, 0, tmp_59724;
  @!tmp_59724_61550 bra      else_61548;
              .reg.s32       temp_36964;
              add.cc.s32     temp_36964, tmp_59715_3, 1;
              .reg.s32       tmp_61551;
              .reg.s32       optix_buffer_id_61552;
              .reg.s32       is_optix_buffer_id_61553;
              mov.b64        {is_optix_buffer_id_61553, optix_buffer_id_61552}, scl_41675;
              .reg.u64       off_61554;
              add.u64        off_61554, scl_41675, 0;
              .reg.pred      is_optix_buffer_id_61555;
              setp.eq.s32    is_optix_buffer_id_61555, -1, is_optix_buffer_id_61553;
{
              .reg.s32       abstract_61556;
              mov.b32        abstract_61556, 1;
              .reg.u64       const_61557;
              mov.b64        const_61557, 512;
              .reg.u64       const_61558;
              mov.b64        const_61558, 0;
@is_optix_buffer_id_61555 call (off_61554), _rt_buffer_get_id_64, (optix_buffer_id_61552, abstract_61556, abstract_61556, const_61557, const_61558, const_61558, const_61558); // resolving optix id
}
              ld.s32         tmp_61551, [off_61554];
              .reg.s32       temp_58453;
              set.lt.s32.s32 temp_58453, tmp_61551, 16;
              .reg.u64       scl_58454;
              .reg.u64       scl_58455;
              .reg.u64       scl_58456;
              .reg.pred      temp_58453_61561;
              setp.ne.s32    temp_58453_61561, 0, temp_58453;
  @!temp_58453_61561 bra     else_61559;
              .reg.s32       temp_58458;
              add.cc.s32     temp_58458, tmp_61551, 1;
              st.s32         [scl_41675], temp_58458;
              .reg.u64       off_61562;
              mad.wide.u32   off_61562, tmp_61551, 112, 0;
              .reg.u64       off_61563;
              add.u64        off_61563, scl_41676, off_61562;
              st.v2.f32      [off_61563], {temp_58437_0, temp_58437_1};
              st.f32         [off_61563+8], temp_58437_2;
              st.v2.f32      [off_61563+16], {temp_58440_0, temp_58440_1};
              st.f32         [off_61563+24], temp_58440_2;
              st.v2.f32      [off_61563+32], {temp_58443_0, temp_58443_1};
              st.f32         [off_61563+40], temp_58443_2;
              st.v2.f32      [off_61563+48], {temp_58162_0, temp_58162_1};
              st.f32         [off_61563+56], temp_58162_2;
              st.v2.f32      [off_61563+64], {temp_58163_0, temp_58163_1};
              st.f32         [off_61563+72], temp_58163_2;
              st.v2.f32      [off_61563+80], {temp_58164_0, temp_58164_1};
              st.f32         [off_61563+88], temp_58164_2;
              .reg.f32       abstract_61564;
              mov.b32        abstract_61564, 0F7f800000;
              st.f32         [off_61563+96], abstract_61564;
              .reg.u64       off_61565;
              mad.wide.u32   off_61565, tmp_61551, 112, 0;
              .reg.u64       off_61566;
              add.u64        off_61566, scl_41677, off_61565;
              st.v2.f32      [off_61566], {temp_58356_0, temp_58356_1};
              st.f32         [off_61566+8], temp_58356_2;
              .reg.f32       abstract_61567;
              mov.b32        abstract_61567, 0F00000000;
              st.f32         [off_61566+16], abstract_61567;
              st.f32         [off_61566+20], tmp_59715_2;
              st.s32         [off_61566+24], temp_36964;
              st.s32         [off_61566+28], temp_37376;
              .reg.s32       abstract_61568;
              mov.b32        abstract_61568, 48;
              st.s32         [off_61566+32], abstract_61568;
              st.v2.f32      [off_61566+48], {temp_58437_0, temp_58437_1};
              st.f32         [off_61566+56], temp_58437_2;
              st.v2.f32      [off_61566+64], {temp_58440_0, temp_58440_1};
              st.f32         [off_61566+72], temp_58440_2;
              st.v2.f32      [off_61566+80], {temp_58443_0, temp_58443_1};
              st.f32         [off_61566+88], temp_58443_2;
              .reg.f32       abstract_61569;
              mov.b32        abstract_61569, 0F00000000;
              st.f32         [off_61566+96], abstract_61569;
              .reg.f32       abstract_61570;
              mov.b32        abstract_61570, 0F3f800000;
              st.f32         [off_61566+100], abstract_61570;
              .reg.s32       abstract_61571;
              mov.b32        abstract_61571, -1;
              st.s32         [off_61566+104], abstract_61571;
              st.s32         [off_61566+108], temp_36868;
              mov.u64        scl_58454, scl_41675;
              mov.u64        scl_58455, scl_41676;
              mov.u64        scl_58456, scl_41677;
              bra.uni        merge_61560;
else_61559:
              mov.u64        scl_58454, scl_41675;
              mov.u64        scl_58455, scl_41676;
              mov.u64        scl_58456, scl_41677;
merge_61560:
              mov.u64        scl_42466, scl_58454;
              mov.u64        scl_42467, scl_58455;
              mov.u64        scl_42468, scl_58456;
              bra.uni        merge_61549;
else_61548:
              .reg.s32       temp_36957;
              add.cc.s32     temp_36957, tmp_59715_3, 1;
              .reg.s32       tmp_61572;
              .reg.s32       optix_buffer_id_61573;
              .reg.s32       is_optix_buffer_id_61574;
              mov.b64        {is_optix_buffer_id_61574, optix_buffer_id_61573}, scl_41675;
              .reg.u64       off_61575;
              add.u64        off_61575, scl_41675, 0;
              .reg.pred      is_optix_buffer_id_61576;
              setp.eq.s32    is_optix_buffer_id_61576, -1, is_optix_buffer_id_61574;
{
              .reg.s32       abstract_61577;
              mov.b32        abstract_61577, 1;
              .reg.u64       const_61578;
              mov.b64        const_61578, 512;
              .reg.u64       const_61579;
              mov.b64        const_61579, 0;
@is_optix_buffer_id_61576 call (off_61575), _rt_buffer_get_id_64, (optix_buffer_id_61573, abstract_61577, abstract_61577, const_61578, const_61579, const_61579, const_61579); // resolving optix id
}
              ld.s32         tmp_61572, [off_61575];
              .reg.s32       temp_58468;
              set.lt.s32.s32 temp_58468, tmp_61572, 16;
              .reg.u64       scl_58469;
              .reg.u64       scl_58470;
              .reg.u64       scl_58471;
              .reg.pred      temp_58468_61582;
              setp.ne.s32    temp_58468_61582, 0, temp_58468;
  @!temp_58468_61582 bra     else_61580;
              .reg.s32       temp_58473;
              add.cc.s32     temp_58473, tmp_61572, 1;
              st.s32         [scl_41675], temp_58473;
              .reg.u64       off_61583;
              mad.wide.u32   off_61583, tmp_61572, 112, 0;
              .reg.u64       off_61584;
              add.u64        off_61584, scl_41676, off_61583;
              st.v2.f32      [off_61584], {temp_58437_0, temp_58437_1};
              st.f32         [off_61584+8], temp_58437_2;
              st.v2.f32      [off_61584+16], {temp_58440_0, temp_58440_1};
              st.f32         [off_61584+24], temp_58440_2;
              st.v2.f32      [off_61584+32], {temp_58443_0, temp_58443_1};
              st.f32         [off_61584+40], temp_58443_2;
              st.v2.f32      [off_61584+48], {temp_58162_0, temp_58162_1};
              st.f32         [off_61584+56], temp_58162_2;
              st.v2.f32      [off_61584+64], {temp_58163_0, temp_58163_1};
              st.f32         [off_61584+72], temp_58163_2;
              st.v2.f32      [off_61584+80], {temp_58164_0, temp_58164_1};
              st.f32         [off_61584+88], temp_58164_2;
              .reg.f32       abstract_61585;
              mov.b32        abstract_61585, 0F7f800000;
              st.f32         [off_61584+96], abstract_61585;
              .reg.u64       off_61586;
              mad.wide.u32   off_61586, tmp_61572, 112, 0;
              .reg.u64       off_61587;
              add.u64        off_61587, scl_41677, off_61586;
              st.v2.f32      [off_61587], {temp_58356_0, temp_58356_1};
              st.f32         [off_61587+8], temp_58356_2;
              .reg.f32       abstract_61588;
              mov.b32        abstract_61588, 0F00000000;
              st.f32         [off_61587+16], abstract_61588;
              st.f32         [off_61587+20], tmp_59715_2;
              st.s32         [off_61587+24], temp_36957;
              st.s32         [off_61587+28], temp_37376;
              .reg.s32       abstract_61589;
              mov.b32        abstract_61589, 0;
              st.s32         [off_61587+32], abstract_61589;
              st.v2.f32      [off_61587+48], {temp_58437_0, temp_58437_1};
              st.f32         [off_61587+56], temp_58437_2;
              st.v2.f32      [off_61587+64], {temp_58440_0, temp_58440_1};
              st.f32         [off_61587+72], temp_58440_2;
              st.v2.f32      [off_61587+80], {temp_58443_0, temp_58443_1};
              st.f32         [off_61587+88], temp_58443_2;
              .reg.f32       abstract_61590;
              mov.b32        abstract_61590, 0F00000000;
              st.f32         [off_61587+96], abstract_61590;
              .reg.f32       abstract_61591;
              mov.b32        abstract_61591, 0F3f800000;
              st.f32         [off_61587+100], abstract_61591;
              st.s32         [off_61587+104], tmp_59446;
              st.s32         [off_61587+108], temp_36868;
              mov.u64        scl_58469, scl_41675;
              mov.u64        scl_58470, scl_41676;
              mov.u64        scl_58471, scl_41677;
              bra.uni        merge_61581;
else_61580:
              mov.u64        scl_58469, scl_41675;
              mov.u64        scl_58470, scl_41676;
              mov.u64        scl_58471, scl_41677;
merge_61581:
              mov.u64        scl_42466, scl_58469;
              mov.u64        scl_42467, scl_58470;
              mov.u64        scl_42468, scl_58471;
merge_61549:
              mov.b32        scl_42432_0, scl_41660_0;
              mov.b32        scl_42432_1, scl_41660_1;
              mov.b32        scl_42432_2, scl_41660_2;
              mov.u64        scl_42446, scl_42466;
              mov.u64        scl_42447, scl_42467;
              mov.u64        scl_42448, scl_42468;
              bra.uni        merge_61541;
else_61540:
              mov.b32        scl_42432_0, scl_41660_0;
              mov.b32        scl_42432_1, scl_41660_1;
              mov.b32        scl_42432_2, scl_41660_2;
              mov.u64        scl_42446, scl_41675;
              mov.u64        scl_42447, scl_41676;
              mov.u64        scl_42448, scl_41677;
merge_61541:
              mov.b32        scl_42380_0, scl_42432_0;
              mov.b32        scl_42380_1, scl_42432_1;
              mov.b32        scl_42380_2, scl_42432_2;
              mov.u64        scl_42395, scl_42446;
              mov.u64        scl_42396, scl_42447;
              mov.u64        scl_42397, scl_42448;
              mov.b32        scl_42383, temp_37376;
              bra.uni        merge_61392;
else_61391:
              mov.b32        scl_42380_0, scl_41660_0;
              mov.b32        scl_42380_1, scl_41660_1;
              mov.b32        scl_42380_2, scl_41660_2;
              mov.u64        scl_42395, scl_41675;
              mov.u64        scl_42396, scl_41676;
              mov.u64        scl_42397, scl_41677;
              mov.b32        scl_42383, scl_41663;
merge_61392:
              .reg.s32       temp_58482;
              set.eq.ftz.s32.f32 temp_58482, temp_52815, 0F3f800000;
              .reg.s32       temp_58486;
              set.ge.ftz.s32.f32 temp_58486, temp_52815, tmp_61383;
              .reg.s32       temp_59436;
              or.b32         temp_59436, temp_58482, temp_58486;
              .reg .f32      scl_42524_0, scl_42524_1, scl_42524_2;
              .reg.u64       scl_42539;
              .reg.u64       scl_42540;
              .reg.u64       scl_42541;
              .reg.s32       scl_42527;
              .reg.pred      temp_59436_61594;
              setp.ne.s32    temp_59436_61594, 0, temp_59436;
  @!temp_59436_61594 bra     else_61592;
              .reg .f32      temp_58498_0, temp_58498_1, temp_58498_2;
              mul.ftz.f32    temp_58498_0, temp_52657_0, temp_52006_0;
              mul.ftz.f32    temp_58498_1, temp_52657_1, temp_52006_0;
              mul.ftz.f32    temp_58498_2, temp_52657_2, temp_52006_0;
              .reg .f32      temp_58500_0, temp_58500_1, temp_58500_2;
              mul.ftz.f32    temp_58500_0, temp_52660_0, temp_52006_0;
              mul.ftz.f32    temp_58500_1, temp_52660_1, temp_52006_0;
              mul.ftz.f32    temp_58500_2, temp_52660_2, temp_52006_0;
              .reg .f32      temp_58501_0, temp_58501_1, temp_58501_2;
              mul.ftz.f32    temp_58501_0, temp_52657_0, temp_52008_0;
              mul.ftz.f32    temp_58501_1, temp_52657_1, temp_52008_0;
              mul.ftz.f32    temp_58501_2, temp_52657_2, temp_52008_0;
              .reg .f32      temp_58502_0, temp_58502_1, temp_58502_2;
              add.ftz.f32    temp_58502_0, temp_58500_0, temp_58501_0;
              add.ftz.f32    temp_58502_1, temp_58500_1, temp_58501_1;
              add.ftz.f32    temp_58502_2, temp_58500_2, temp_58501_2;
              .reg .f32      temp_58504_0, temp_58504_1, temp_58504_2;
              mul.ftz.f32    temp_58504_0, temp_52663_0, temp_52006_0;
              mul.ftz.f32    temp_58504_1, temp_52663_1, temp_52006_0;
              mul.ftz.f32    temp_58504_2, temp_52663_2, temp_52006_0;
              .reg .f32      temp_58505_0, temp_58505_1, temp_58505_2;
              mul.ftz.f32    temp_58505_0, temp_52657_0, temp_52010_0;
              mul.ftz.f32    temp_58505_1, temp_52657_1, temp_52010_0;
              mul.ftz.f32    temp_58505_2, temp_52657_2, temp_52010_0;
              .reg .f32      temp_58506_0, temp_58506_1, temp_58506_2;
              add.ftz.f32    temp_58506_0, temp_58504_0, temp_58505_0;
              add.ftz.f32    temp_58506_1, temp_58504_1, temp_58505_1;
              add.ftz.f32    temp_58506_2, temp_58504_2, temp_58505_2;
              .reg .f32      temp_58517_0, temp_58517_1, temp_58517_2;
              mul.ftz.f32    temp_58517_0, temp_52669_0, temp_52006_1;
              mul.ftz.f32    temp_58517_1, temp_52669_1, temp_52006_1;
              mul.ftz.f32    temp_58517_2, temp_52669_2, temp_52006_1;
              .reg .f32      temp_58519_0, temp_58519_1, temp_58519_2;
              mul.ftz.f32    temp_58519_0, temp_52672_0, temp_52006_1;
              mul.ftz.f32    temp_58519_1, temp_52672_1, temp_52006_1;
              mul.ftz.f32    temp_58519_2, temp_52672_2, temp_52006_1;
              .reg .f32      temp_58520_0, temp_58520_1, temp_58520_2;
              mul.ftz.f32    temp_58520_0, temp_52669_0, temp_52008_1;
              mul.ftz.f32    temp_58520_1, temp_52669_1, temp_52008_1;
              mul.ftz.f32    temp_58520_2, temp_52669_2, temp_52008_1;
              .reg .f32      temp_58521_0, temp_58521_1, temp_58521_2;
              add.ftz.f32    temp_58521_0, temp_58519_0, temp_58520_0;
              add.ftz.f32    temp_58521_1, temp_58519_1, temp_58520_1;
              add.ftz.f32    temp_58521_2, temp_58519_2, temp_58520_2;
              .reg .f32      temp_58523_0, temp_58523_1, temp_58523_2;
              mul.ftz.f32    temp_58523_0, temp_52675_0, temp_52006_1;
              mul.ftz.f32    temp_58523_1, temp_52675_1, temp_52006_1;
              mul.ftz.f32    temp_58523_2, temp_52675_2, temp_52006_1;
              .reg .f32      temp_58524_0, temp_58524_1, temp_58524_2;
              mul.ftz.f32    temp_58524_0, temp_52669_0, temp_52010_1;
              mul.ftz.f32    temp_58524_1, temp_52669_1, temp_52010_1;
              mul.ftz.f32    temp_58524_2, temp_52669_2, temp_52010_1;
              .reg .f32      temp_58525_0, temp_58525_1, temp_58525_2;
              add.ftz.f32    temp_58525_0, temp_58523_0, temp_58524_0;
              add.ftz.f32    temp_58525_1, temp_58523_1, temp_58524_1;
              add.ftz.f32    temp_58525_2, temp_58523_2, temp_58524_2;
              .reg .f32      temp_58526_0, temp_58526_1, temp_58526_2;
              add.ftz.f32    temp_58526_0, temp_58498_0, temp_58517_0;
              add.ftz.f32    temp_58526_1, temp_58498_1, temp_58517_1;
              add.ftz.f32    temp_58526_2, temp_58498_2, temp_58517_2;
              .reg .f32      temp_58527_0, temp_58527_1, temp_58527_2;
              add.ftz.f32    temp_58527_0, temp_58502_0, temp_58521_0;
              add.ftz.f32    temp_58527_1, temp_58502_1, temp_58521_1;
              add.ftz.f32    temp_58527_2, temp_58502_2, temp_58521_2;
              .reg .f32      temp_58528_0, temp_58528_1, temp_58528_2;
              add.ftz.f32    temp_58528_0, temp_58506_0, temp_58525_0;
              add.ftz.f32    temp_58528_1, temp_58506_1, temp_58525_1;
              add.ftz.f32    temp_58528_2, temp_58506_2, temp_58525_2;
              .reg .f32      temp_58539_0, temp_58539_1, temp_58539_2;
              mul.ftz.f32    temp_58539_0, temp_52681_0, temp_52006_2;
              mul.ftz.f32    temp_58539_1, temp_52681_1, temp_52006_2;
              mul.ftz.f32    temp_58539_2, temp_52681_2, temp_52006_2;
              .reg .f32      temp_58541_0, temp_58541_1, temp_58541_2;
              mul.ftz.f32    temp_58541_0, temp_52684_0, temp_52006_2;
              mul.ftz.f32    temp_58541_1, temp_52684_1, temp_52006_2;
              mul.ftz.f32    temp_58541_2, temp_52684_2, temp_52006_2;
              .reg .f32      temp_58542_0, temp_58542_1, temp_58542_2;
              mul.ftz.f32    temp_58542_0, temp_52681_0, temp_52008_2;
              mul.ftz.f32    temp_58542_1, temp_52681_1, temp_52008_2;
              mul.ftz.f32    temp_58542_2, temp_52681_2, temp_52008_2;
              .reg .f32      temp_58543_0, temp_58543_1, temp_58543_2;
              add.ftz.f32    temp_58543_0, temp_58541_0, temp_58542_0;
              add.ftz.f32    temp_58543_1, temp_58541_1, temp_58542_1;
              add.ftz.f32    temp_58543_2, temp_58541_2, temp_58542_2;
              .reg .f32      temp_58545_0, temp_58545_1, temp_58545_2;
              mul.ftz.f32    temp_58545_0, temp_52687_0, temp_52006_2;
              mul.ftz.f32    temp_58545_1, temp_52687_1, temp_52006_2;
              mul.ftz.f32    temp_58545_2, temp_52687_2, temp_52006_2;
              .reg .f32      temp_58546_0, temp_58546_1, temp_58546_2;
              mul.ftz.f32    temp_58546_0, temp_52681_0, temp_52010_2;
              mul.ftz.f32    temp_58546_1, temp_52681_1, temp_52010_2;
              mul.ftz.f32    temp_58546_2, temp_52681_2, temp_52010_2;
              .reg .f32      temp_58547_0, temp_58547_1, temp_58547_2;
              add.ftz.f32    temp_58547_0, temp_58545_0, temp_58546_0;
              add.ftz.f32    temp_58547_1, temp_58545_1, temp_58546_1;
              add.ftz.f32    temp_58547_2, temp_58545_2, temp_58546_2;
              .reg .f32      temp_58548_0, temp_58548_1, temp_58548_2;
              add.ftz.f32    temp_58548_0, temp_58526_0, temp_58539_0;
              add.ftz.f32    temp_58548_1, temp_58526_1, temp_58539_1;
              add.ftz.f32    temp_58548_2, temp_58526_2, temp_58539_2;
              .reg .f32      temp_58549_0, temp_58549_1, temp_58549_2;
              add.ftz.f32    temp_58549_0, temp_58527_0, temp_58543_0;
              add.ftz.f32    temp_58549_1, temp_58527_1, temp_58543_1;
              add.ftz.f32    temp_58549_2, temp_58527_2, temp_58543_2;
              .reg .f32      temp_58550_0, temp_58550_1, temp_58550_2;
              add.ftz.f32    temp_58550_0, temp_58528_0, temp_58547_0;
              add.ftz.f32    temp_58550_1, temp_58528_1, temp_58547_1;
              add.ftz.f32    temp_58550_2, temp_58528_2, temp_58547_2;
              .reg.s32       temp_37926;
              set.lt.s32.s32 temp_37926, scl_42383, 8;
              .reg.f32       f1_37927;
              .reg.pred      temp_37926_61597;
              setp.ne.s32    temp_37926_61597, 0, temp_37926;
  @!temp_37926_61597 bra     else_61595;
              .reg.s32       temp_58553;
              and.b32        temp_58553, scl_42383, 63;
              .reg.u64       tmp_61598;
              .reg.s32       optix_buffer_id_61599;
              mov.b64        {_, optix_buffer_id_61599}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61600;
{
              .reg.s32       abstract_61601;
              mov.b32        abstract_61601, 1;
              .reg.u64       const_61602;
              mov.b64        const_61602, 512;
              .reg.u64       const_61603;
              mov.b64        const_61603, 0;
 call (ptr_from_optix_id_61600), _rt_buffer_get_id_64, (optix_buffer_id_61599, abstract_61601, abstract_61601, const_61602, const_61603, const_61603, const_61603); // resolving optix id
}
              ld.u64         tmp_61598, [ptr_from_optix_id_61600];
              .reg.s32       tmp_61604;
              .reg.u64       off_61605;
              mad.wide.u32   off_61605, temp_58553, 4, 0;
              .reg.s32       optix_buffer_id_61606;
              mov.b64        {_, optix_buffer_id_61606}, tmp_61598;
              .reg.u64       ptr_from_optix_id_61607;
{
              .reg.s32       abstract_61608;
              mov.b32        abstract_61608, 1;
              .reg.u64       const_61609;
              mov.b64        const_61609, 512;
              .reg.u64       off_61610;
              add.u64        off_61610, const_61609, off_61605;
              .reg.u64       const_61611;
              mov.b64        const_61611, 0;
 call (ptr_from_optix_id_61607), _rt_buffer_get_id_64, (optix_buffer_id_61606, abstract_61608, abstract_61608, off_61610, const_61611, const_61611, const_61611); // resolving optix id
}
              ld.s32         tmp_61604, [ptr_from_optix_id_61607];
              .reg.f32       temp_38017;
              cvt.rn.f32.s32 temp_38017, tmp_61604;
              .reg.f32       digit_38018;
              div.approx.ftz.f32 digit_38018, 0F3f800000, temp_38017;
              .reg.s32       temp_38019;
              set.gt.s32.s32 temp_38019, temp_30198, 0;
              .reg.f32       ilwerse_38020;
              .reg.pred      temp_38019_61614;
              setp.ne.s32    temp_38019_61614, 0, temp_38019;
  @!temp_38019_61614 bra     else_61612;
              .reg.f32       digit_38034;
              mov.b32        digit_38034, digit_38018;
              .reg.s32       i_38035;
              mov.b32        i_38035, temp_30198;
              .reg.f32       ilwerse_38036;
              mov.b32        ilwerse_38036, 0F00000000;
              .reg.f32       ilwerse_38033;
doloop_61615:
              .reg.s32       temp_38037;
              rem.s32        temp_38037, i_38035, tmp_61604;
              .reg.f32       temp_38038;
              cvt.rn.f32.s32 temp_38038, temp_38037;
              .reg.f32       temp_38039;
              mul.ftz.f32    temp_38039, digit_38034, temp_38038;
              .reg.f32       ilwerse_38040;
              add.ftz.f32    ilwerse_38040, ilwerse_38036, temp_38039;
              .reg.f32       digit_38041;
              mul.ftz.f32    digit_38041, digit_38034, digit_38018;
              .reg.s32       i_38042;
              div.s32        i_38042, i_38035, tmp_61604;
              .reg.s32       temp_38043;
              set.gt.s32.s32 temp_38043, i_38042, 0;
              mov.b32        ilwerse_38033, ilwerse_38040;
              mov.b32        digit_38034, digit_38041;
              mov.b32        i_38035, i_38042;
              mov.b32        ilwerse_38036, ilwerse_38040;
              .reg.pred      temp_38043_61616;
              setp.ne.s32    temp_38043_61616, 0, temp_38043;
  @temp_38043_61616 bra      doloop_61615;
              mov.b32        ilwerse_38020, ilwerse_38033;
              bra.uni        merge_61613;
else_61612:
              mov.b32        ilwerse_38020, 0F00000000;
merge_61613:
              .reg.s32       temp_38021;
              set.eq.s32.s32 temp_38021, scl_42383, 0;
              .reg.f32       f1_38022;
              .reg.pred      temp_38021_61619;
              setp.ne.s32    temp_38021_61619, 0, temp_38021;
  @!temp_38021_61619 bra     else_61617;
              .reg.f32       temp_38029;
              mul.ftz.f32    temp_38029, ilwerse_38020, 0F43800000;
              .reg.s32       temp_38030;
              rem.s32        temp_38030, temp_30189, 256;
              .reg.f32       temp_38031;
              cvt.rn.f32.s32 temp_38031, temp_38030;
              .reg.f32       f1_38032;
              sub.ftz.f32    f1_38032, temp_38029, temp_38031;
              mov.b32        f1_38022, f1_38032;
              bra.uni        merge_61618;
else_61617:
              .reg.s32       temp_38023;
              set.eq.s32.s32 temp_38023, scl_42383, 1;
              .reg.f32       f1_38024;
              .reg.pred      temp_38023_61622;
              setp.ne.s32    temp_38023_61622, 0, temp_38023;
  @!temp_38023_61622 bra     else_61620;
              .reg.f32       temp_38025;
              mul.ftz.f32    temp_38025, ilwerse_38020, 0F43730000;
              .reg.s32       temp_38026;
              rem.s32        temp_38026, temp_30192, 243;
              .reg.f32       temp_38027;
              cvt.rn.f32.s32 temp_38027, temp_38026;
              .reg.f32       f1_38028;
              sub.ftz.f32    f1_38028, temp_38025, temp_38027;
              mov.b32        f1_38024, f1_38028;
              bra.uni        merge_61621;
else_61620:
              mov.b32        f1_38024, ilwerse_38020;
merge_61621:
              mov.b32        f1_38022, f1_38024;
merge_61618:
              mov.b32        f1_37927, f1_38022;
              bra.uni        merge_61596;
else_61595:
              .reg.s32       i_37992;
              mov.b32        i_37992, 0;
              .reg.s32       sum_37993;
              mov.b32        sum_37993, 0;
              .reg.s32       v0_37994;
              mov.b32        v0_37994, scl_42383;
              .reg.s32       v1_37995;
              mov.b32        v1_37995, temp_30198;
              .reg.s32       scl_42560;
doloop_61623:
              .reg.s32       sum_37996;
              add.cc.s32     sum_37996, sum_37993, -1640531527;
              .reg.s32       temp_37997;
              shl.b32        temp_37997, v1_37995, 4;
              .reg.s32       temp_37998;
              add.cc.s32     temp_37998, temp_37997, -1556008596;
              .reg.s32       temp_37999;
              add.cc.s32     temp_37999, v1_37995, sum_37996;
              .reg.s32       temp_38000;
              xor.b32        temp_38000, temp_37998, temp_37999;
              .reg.s32       temp_38001;
              shr.u32        temp_38001, v1_37995, 5;
              .reg.s32       temp_38002;
              add.cc.s32     temp_38002, temp_38001, -939442524;
              .reg.s32       temp_38003;
              xor.b32        temp_38003, temp_38000, temp_38002;
              .reg.s32       v0_38004;
              add.cc.s32     v0_38004, v0_37994, temp_38003;
              .reg.s32       temp_38005;
              shl.b32        temp_38005, v0_38004, 4;
              .reg.s32       temp_38006;
              add.cc.s32     temp_38006, temp_38005, -1383041155;
              .reg.s32       temp_38007;
              add.cc.s32     temp_38007, v0_38004, sum_37996;
              .reg.s32       temp_38008;
              xor.b32        temp_38008, temp_38006, temp_38007;
              .reg.s32       temp_38009;
              shr.u32        temp_38009, v0_38004, 5;
              .reg.s32       temp_38010;
              add.cc.s32     temp_38010, temp_38009, 2123724318;
              .reg.s32       temp_38011;
              xor.b32        temp_38011, temp_38008, temp_38010;
              .reg.s32       v1_38012;
              add.cc.s32     v1_38012, v1_37995, temp_38011;
              .reg.s32       i_38013;
              add.cc.s32     i_38013, i_37992, 1;
              .reg.s32       temp_38014;
              set.lt.s32.s32 temp_38014, i_38013, 8;
              mov.b32        scl_42560, v0_38004;
              mov.b32        i_37992, i_38013;
              mov.b32        sum_37993, sum_37996;
              mov.b32        v0_37994, v0_38004;
              mov.b32        v1_37995, v1_38012;
              .reg.pred      temp_38014_61624;
              setp.ne.s32    temp_38014_61624, 0, temp_38014;
  @temp_38014_61624 bra.uni  doloop_61623;
              .reg.s32       temp_58555;
              and.b32        temp_58555, scl_42560, 2147483647;
              .reg.f32       temp_58556;
              cvt.rn.f32.s32 temp_58556, temp_58555;
              .reg.f32       temp_58557;
              div.approx.ftz.f32 temp_58557, temp_58556, 0F4f000000;
              mov.b32        f1_37927, temp_58557;
merge_61596:
              .reg.s32       temp_37928;
              add.cc.s32     temp_37928, scl_42383, 1;
              .reg.s32       temp_37929;
              set.lt.s32.s32 temp_37929, temp_37928, 8;
              .reg.f32       f1_37930;
              .reg.pred      temp_37929_61627;
              setp.ne.s32    temp_37929_61627, 0, temp_37929;
  @!temp_37929_61627 bra     else_61625;
              .reg.s32       temp_58558;
              and.b32        temp_58558, temp_37928, 63;
              .reg.u64       tmp_61628;
              .reg.s32       optix_buffer_id_61629;
              mov.b64        {_, optix_buffer_id_61629}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61630;
{
              .reg.s32       abstract_61631;
              mov.b32        abstract_61631, 1;
              .reg.u64       const_61632;
              mov.b64        const_61632, 512;
              .reg.u64       const_61633;
              mov.b64        const_61633, 0;
 call (ptr_from_optix_id_61630), _rt_buffer_get_id_64, (optix_buffer_id_61629, abstract_61631, abstract_61631, const_61632, const_61633, const_61633, const_61633); // resolving optix id
}
              ld.u64         tmp_61628, [ptr_from_optix_id_61630];
              .reg.s32       tmp_61634;
              .reg.u64       off_61635;
              mad.wide.u32   off_61635, temp_58558, 4, 0;
              .reg.s32       optix_buffer_id_61636;
              mov.b64        {_, optix_buffer_id_61636}, tmp_61628;
              .reg.u64       ptr_from_optix_id_61637;
{
              .reg.s32       abstract_61638;
              mov.b32        abstract_61638, 1;
              .reg.u64       const_61639;
              mov.b64        const_61639, 512;
              .reg.u64       off_61640;
              add.u64        off_61640, const_61639, off_61635;
              .reg.u64       const_61641;
              mov.b64        const_61641, 0;
 call (ptr_from_optix_id_61637), _rt_buffer_get_id_64, (optix_buffer_id_61636, abstract_61638, abstract_61638, off_61640, const_61641, const_61641, const_61641); // resolving optix id
}
              ld.s32         tmp_61634, [ptr_from_optix_id_61637];
              .reg.f32       temp_37962;
              cvt.rn.f32.s32 temp_37962, tmp_61634;
              .reg.f32       digit_37963;
              div.approx.ftz.f32 digit_37963, 0F3f800000, temp_37962;
              .reg.s32       temp_37964;
              set.gt.s32.s32 temp_37964, temp_30198, 0;
              .reg.f32       ilwerse_37965;
              .reg.pred      temp_37964_61644;
              setp.ne.s32    temp_37964_61644, 0, temp_37964;
  @!temp_37964_61644 bra     else_61642;
              .reg.f32       digit_37979;
              mov.b32        digit_37979, digit_37963;
              .reg.s32       i_37980;
              mov.b32        i_37980, temp_30198;
              .reg.f32       ilwerse_37981;
              mov.b32        ilwerse_37981, 0F00000000;
              .reg.f32       ilwerse_37978;
doloop_61645:
              .reg.s32       temp_37982;
              rem.s32        temp_37982, i_37980, tmp_61634;
              .reg.f32       temp_37983;
              cvt.rn.f32.s32 temp_37983, temp_37982;
              .reg.f32       temp_37984;
              mul.ftz.f32    temp_37984, digit_37979, temp_37983;
              .reg.f32       ilwerse_37985;
              add.ftz.f32    ilwerse_37985, ilwerse_37981, temp_37984;
              .reg.f32       digit_37986;
              mul.ftz.f32    digit_37986, digit_37979, digit_37963;
              .reg.s32       i_37987;
              div.s32        i_37987, i_37980, tmp_61634;
              .reg.s32       temp_37988;
              set.gt.s32.s32 temp_37988, i_37987, 0;
              mov.b32        ilwerse_37978, ilwerse_37985;
              mov.b32        digit_37979, digit_37986;
              mov.b32        i_37980, i_37987;
              mov.b32        ilwerse_37981, ilwerse_37985;
              .reg.pred      temp_37988_61646;
              setp.ne.s32    temp_37988_61646, 0, temp_37988;
  @temp_37988_61646 bra      doloop_61645;
              mov.b32        ilwerse_37965, ilwerse_37978;
              bra.uni        merge_61643;
else_61642:
              mov.b32        ilwerse_37965, 0F00000000;
merge_61643:
              .reg.s32       temp_37966;
              set.eq.s32.s32 temp_37966, temp_37928, 0;
              .reg.f32       f1_37967;
              .reg.pred      temp_37966_61649;
              setp.ne.s32    temp_37966_61649, 0, temp_37966;
  @!temp_37966_61649 bra     else_61647;
              .reg.f32       temp_37974;
              mul.ftz.f32    temp_37974, ilwerse_37965, 0F43800000;
              .reg.s32       temp_37975;
              rem.s32        temp_37975, temp_30189, 256;
              .reg.f32       temp_37976;
              cvt.rn.f32.s32 temp_37976, temp_37975;
              .reg.f32       f1_37977;
              sub.ftz.f32    f1_37977, temp_37974, temp_37976;
              mov.b32        f1_37967, f1_37977;
              bra.uni        merge_61648;
else_61647:
              .reg.s32       temp_37968;
              set.eq.s32.s32 temp_37968, temp_37928, 1;
              .reg.f32       f1_37969;
              .reg.pred      temp_37968_61652;
              setp.ne.s32    temp_37968_61652, 0, temp_37968;
  @!temp_37968_61652 bra     else_61650;
              .reg.f32       temp_37970;
              mul.ftz.f32    temp_37970, ilwerse_37965, 0F43730000;
              .reg.s32       temp_37971;
              rem.s32        temp_37971, temp_30192, 243;
              .reg.f32       temp_37972;
              cvt.rn.f32.s32 temp_37972, temp_37971;
              .reg.f32       f1_37973;
              sub.ftz.f32    f1_37973, temp_37970, temp_37972;
              mov.b32        f1_37969, f1_37973;
              bra.uni        merge_61651;
else_61650:
              mov.b32        f1_37969, ilwerse_37965;
merge_61651:
              mov.b32        f1_37967, f1_37969;
merge_61648:
              mov.b32        f1_37930, f1_37967;
              bra.uni        merge_61626;
else_61625:
              .reg.s32       i_37937;
              mov.b32        i_37937, 0;
              .reg.s32       sum_37938;
              mov.b32        sum_37938, 0;
              .reg.s32       v0_37939;
              mov.b32        v0_37939, temp_37928;
              .reg.s32       v1_37940;
              mov.b32        v1_37940, temp_30198;
              .reg.s32       scl_42566;
doloop_61653:
              .reg.s32       sum_37941;
              add.cc.s32     sum_37941, sum_37938, -1640531527;
              .reg.s32       temp_37942;
              shl.b32        temp_37942, v1_37940, 4;
              .reg.s32       temp_37943;
              add.cc.s32     temp_37943, temp_37942, -1556008596;
              .reg.s32       temp_37944;
              add.cc.s32     temp_37944, v1_37940, sum_37941;
              .reg.s32       temp_37945;
              xor.b32        temp_37945, temp_37943, temp_37944;
              .reg.s32       temp_37946;
              shr.u32        temp_37946, v1_37940, 5;
              .reg.s32       temp_37947;
              add.cc.s32     temp_37947, temp_37946, -939442524;
              .reg.s32       temp_37948;
              xor.b32        temp_37948, temp_37945, temp_37947;
              .reg.s32       v0_37949;
              add.cc.s32     v0_37949, v0_37939, temp_37948;
              .reg.s32       temp_37950;
              shl.b32        temp_37950, v0_37949, 4;
              .reg.s32       temp_37951;
              add.cc.s32     temp_37951, temp_37950, -1383041155;
              .reg.s32       temp_37952;
              add.cc.s32     temp_37952, v0_37949, sum_37941;
              .reg.s32       temp_37953;
              xor.b32        temp_37953, temp_37951, temp_37952;
              .reg.s32       temp_37954;
              shr.u32        temp_37954, v0_37949, 5;
              .reg.s32       temp_37955;
              add.cc.s32     temp_37955, temp_37954, 2123724318;
              .reg.s32       temp_37956;
              xor.b32        temp_37956, temp_37953, temp_37955;
              .reg.s32       v1_37957;
              add.cc.s32     v1_37957, v1_37940, temp_37956;
              .reg.s32       i_37958;
              add.cc.s32     i_37958, i_37937, 1;
              .reg.s32       temp_37959;
              set.lt.s32.s32 temp_37959, i_37958, 8;
              mov.b32        scl_42566, v0_37949;
              mov.b32        i_37937, i_37958;
              mov.b32        sum_37938, sum_37941;
              mov.b32        v0_37939, v0_37949;
              mov.b32        v1_37940, v1_37957;
              .reg.pred      temp_37959_61654;
              setp.ne.s32    temp_37959_61654, 0, temp_37959;
  @temp_37959_61654 bra.uni  doloop_61653;
              .reg.s32       temp_58560;
              and.b32        temp_58560, scl_42566, 2147483647;
              .reg.f32       temp_58561;
              cvt.rn.f32.s32 temp_58561, temp_58560;
              .reg.f32       temp_58562;
              div.approx.ftz.f32 temp_58562, temp_58561, 0F4f000000;
              mov.b32        f1_37930, temp_58562;
merge_61626:
              .reg.s32       temp_37931;
              add.cc.s32     temp_37931, temp_37928, 1;
              .reg.f32       temp_58566;
              add.ftz.f32    temp_58566, tmp_60051, 0F3f800000;
              .reg.f32       temp_58577;
              rcp.approx.ftz.f32 temp_58577, temp_58566;
              .reg.f32       temp_58588;
              lg2.approx.ftz.f32 temp_58588, f1_37930;
              mul.ftz.f32    temp_58588, temp_58588, temp_58577;
              ex2.approx.ftz.f32 temp_58588, temp_58588;
              .reg.f32       temp_58596;
              mul.ftz.f32    temp_58596, temp_58588, temp_58588;
              .reg.f32       temp_58610;
              sub.ftz.f32    temp_58610, 0F3f800000, temp_58596;
              .reg.s32       temp_58620;
              set.lt.ftz.s32.f32 temp_58620, 0F00000000, temp_58610;
              .reg.f32       temp_58622;
              .reg.pred      temp_58620_61655;
              setp.ne.s32    temp_58620_61655, 0, temp_58620;
              selp.f32       temp_58622, temp_58610, 0F00000000, temp_58620_61655;
              .reg.f32       temp_58628;
              sqrt.approx.f32 temp_58628, temp_58622;
              .reg.f32       temp_58636;
              mul.ftz.f32    temp_58636, 0F40c90fdb, f1_37927;
              .reg.f32       temp_58641;
              sin.approx.ftz.f32 temp_58641, temp_58636;
              .reg.f32       cos_58642;
              cos.approx.ftz.f32 cos_58642, temp_58636;
              .reg.f32       temp_58647;
              mul.ftz.f32    temp_58647, temp_58628, cos_58642;
              .reg.f32       temp_58661;
              mul.ftz.f32    temp_58661, temp_58628, temp_58641;
              .reg.f32       temp_58683;
              lg2.approx.ftz.f32 temp_58683, temp_58588;
              mul.ftz.f32    temp_58683, temp_58683, tmp_60051;
              ex2.approx.ftz.f32 temp_58683, temp_58683;
              .reg.f32       temp_58691;
              mul.ftz.f32    temp_58691, temp_58683, temp_58566;
              .reg.f32       temp_58705;
              div.approx.ftz.f32 temp_58705, temp_58691, 0F40c90fdb;
              .reg.s32       temp_58741;
              set.ge.ftz.s32.f32 temp_58741, temp_58548_2, 0F00000000;
              .reg.f32       temp_58756;
              neg.ftz.f32    temp_58756, temp_58588;
              .reg.f32       scl_58742;
              .reg.pred      temp_58741_61656;
              setp.ne.s32    temp_58741_61656, 0, temp_58741;
              selp.f32       scl_58742, temp_58588, temp_58756, temp_58741_61656;
              .reg .f32      temp_58767_0, temp_58767_1, temp_58767_2;
              mul.ftz.f32    temp_58767_0, temp_58548_0, temp_58647;
              mul.ftz.f32    temp_58767_1, temp_58548_1, temp_58661;
              mul.ftz.f32    temp_58767_2, temp_58548_2, scl_58742;
              .reg .f32      temp_58769_0, temp_58769_1, temp_58769_2;
              mul.ftz.f32    temp_58769_0, temp_58549_0, temp_58647;
              mul.ftz.f32    temp_58769_1, temp_58549_1, temp_58661;
              mul.ftz.f32    temp_58769_2, temp_58549_2, scl_58742;
              .reg .f32      temp_58774_0, temp_58774_1, temp_58774_2;
              mul.ftz.f32    temp_58774_0, temp_58550_0, temp_58647;
              mul.ftz.f32    temp_58774_1, temp_58550_1, temp_58661;
              mul.ftz.f32    temp_58774_2, temp_58550_2, scl_58742;
              .reg.f32       temp_58784;
              add.ftz.f32    temp_58784, temp_58767_0, temp_58767_1;
              .reg.f32       temp_58785;
              add.ftz.f32    temp_58785, temp_58769_0, temp_58769_1;
              .reg.f32       temp_58786;
              add.ftz.f32    temp_58786, temp_58774_0, temp_58774_1;
              .reg.f32       temp_58790;
              add.ftz.f32    temp_58790, temp_58784, temp_58767_2;
              .reg.f32       temp_58791;
              add.ftz.f32    temp_58791, temp_58785, temp_58769_2;
              .reg.f32       temp_58792;
              add.ftz.f32    temp_58792, temp_58786, temp_58774_2;
              .reg.f32       temp_58793;
              mul.ftz.f32    temp_58793, 0F40000000, temp_58790;
              .reg.f32       temp_58794;
              mul.ftz.f32    temp_58794, 0F40000000, temp_58791;
              .reg.f32       temp_58795;
              mul.ftz.f32    temp_58795, 0F40000000, temp_58792;
              .reg .f32      temp_58800_0, temp_58800_1, temp_58800_2;
              mul.ftz.f32    temp_58800_0, temp_58647, temp_58793;
              mul.ftz.f32    temp_58800_1, temp_58661, temp_58793;
              mul.ftz.f32    temp_58800_2, scl_58742, temp_58793;
              .reg .f32      temp_58803_0, temp_58803_1, temp_58803_2;
              mul.ftz.f32    temp_58803_0, temp_58647, temp_58794;
              mul.ftz.f32    temp_58803_1, temp_58661, temp_58794;
              mul.ftz.f32    temp_58803_2, scl_58742, temp_58794;
              .reg .f32      temp_58807_0, temp_58807_1, temp_58807_2;
              mul.ftz.f32    temp_58807_0, temp_58647, temp_58795;
              mul.ftz.f32    temp_58807_1, temp_58661, temp_58795;
              mul.ftz.f32    temp_58807_2, scl_58742, temp_58795;
              .reg .f32      temp_58810_0, temp_58810_1, temp_58810_2;
              sub.ftz.f32    temp_58810_0, temp_58800_0, temp_58548_0;
              sub.ftz.f32    temp_58810_1, temp_58800_1, temp_58548_1;
              sub.ftz.f32    temp_58810_2, temp_58800_2, temp_58548_2;
              .reg .f32      temp_58812_0, temp_58812_1, temp_58812_2;
              sub.ftz.f32    temp_58812_0, temp_58803_0, temp_58549_0;
              sub.ftz.f32    temp_58812_1, temp_58803_1, temp_58549_1;
              sub.ftz.f32    temp_58812_2, temp_58803_2, temp_58549_2;
              .reg .f32      temp_58814_0, temp_58814_1, temp_58814_2;
              sub.ftz.f32    temp_58814_0, temp_58807_0, temp_58550_0;
              sub.ftz.f32    temp_58814_1, temp_58807_1, temp_58550_1;
              sub.ftz.f32    temp_58814_2, temp_58807_2, temp_58550_2;
              .reg.f32       temp_58850;
              mul.ftz.f32    temp_58850, 0F40800000, temp_58790;
              .reg.f32       temp_58865;
              rcp.approx.ftz.f32 temp_58865, temp_58850;
              .reg.f32       temp_58873;
              mul.ftz.f32    temp_58873, temp_58705, temp_58865;
              .reg.f32       temp_58887;
              add.ftz.f32    temp_58887, tmp_60051, 0F40000000;
              .reg.f32       temp_58897;
              div.approx.ftz.f32 temp_58897, temp_58887, 0F41c90fdb;
              .reg.f32       temp_58925;
              mul.ftz.f32    temp_58925, temp_58897, temp_58683;
              .reg .f32      temp_58939_0, temp_58939_1, temp_58939_2;
              mul.ftz.f32    temp_58939_0, temp_58925, temp_52778_0;
              mul.ftz.f32    temp_58939_1, temp_58925, temp_52778_1;
              mul.ftz.f32    temp_58939_2, temp_58925, temp_52778_2;
              .reg .f32      temp_58951_0, temp_58951_1, temp_58951_2;
              mul.ftz.f32    temp_58951_0, tmp_59923_0, temp_58810_0;
              mul.ftz.f32    temp_58951_1, tmp_59923_1, temp_58810_0;
              mul.ftz.f32    temp_58951_2, tmp_59923_2, temp_58810_0;
              .reg .f32      temp_58953_0, temp_58953_1, temp_58953_2;
              mul.ftz.f32    temp_58953_0, tmp_59925_0, temp_58810_0;
              mul.ftz.f32    temp_58953_1, tmp_59925_1, temp_58810_0;
              mul.ftz.f32    temp_58953_2, tmp_59925_2, temp_58810_0;
              .reg .f32      temp_58954_0, temp_58954_1, temp_58954_2;
              mul.ftz.f32    temp_58954_0, tmp_59923_0, temp_58812_0;
              mul.ftz.f32    temp_58954_1, tmp_59923_1, temp_58812_0;
              mul.ftz.f32    temp_58954_2, tmp_59923_2, temp_58812_0;
              .reg .f32      temp_58955_0, temp_58955_1, temp_58955_2;
              add.ftz.f32    temp_58955_0, temp_58953_0, temp_58954_0;
              add.ftz.f32    temp_58955_1, temp_58953_1, temp_58954_1;
              add.ftz.f32    temp_58955_2, temp_58953_2, temp_58954_2;
              .reg .f32      temp_58957_0, temp_58957_1, temp_58957_2;
              mul.ftz.f32    temp_58957_0, tmp_59927_0, temp_58810_0;
              mul.ftz.f32    temp_58957_1, tmp_59927_1, temp_58810_0;
              mul.ftz.f32    temp_58957_2, tmp_59927_2, temp_58810_0;
              .reg .f32      temp_58958_0, temp_58958_1, temp_58958_2;
              mul.ftz.f32    temp_58958_0, tmp_59923_0, temp_58814_0;
              mul.ftz.f32    temp_58958_1, tmp_59923_1, temp_58814_0;
              mul.ftz.f32    temp_58958_2, tmp_59923_2, temp_58814_0;
              .reg .f32      temp_58959_0, temp_58959_1, temp_58959_2;
              add.ftz.f32    temp_58959_0, temp_58957_0, temp_58958_0;
              add.ftz.f32    temp_58959_1, temp_58957_1, temp_58958_1;
              add.ftz.f32    temp_58959_2, temp_58957_2, temp_58958_2;
              .reg .f32      temp_58970_0, temp_58970_1, temp_58970_2;
              mul.ftz.f32    temp_58970_0, tmp_59929_0, temp_58810_1;
              mul.ftz.f32    temp_58970_1, tmp_59929_1, temp_58810_1;
              mul.ftz.f32    temp_58970_2, tmp_59929_2, temp_58810_1;
              .reg .f32      temp_58972_0, temp_58972_1, temp_58972_2;
              mul.ftz.f32    temp_58972_0, tmp_59931_0, temp_58810_1;
              mul.ftz.f32    temp_58972_1, tmp_59931_1, temp_58810_1;
              mul.ftz.f32    temp_58972_2, tmp_59931_2, temp_58810_1;
              .reg .f32      temp_58973_0, temp_58973_1, temp_58973_2;
              mul.ftz.f32    temp_58973_0, tmp_59929_0, temp_58812_1;
              mul.ftz.f32    temp_58973_1, tmp_59929_1, temp_58812_1;
              mul.ftz.f32    temp_58973_2, tmp_59929_2, temp_58812_1;
              .reg .f32      temp_58974_0, temp_58974_1, temp_58974_2;
              add.ftz.f32    temp_58974_0, temp_58972_0, temp_58973_0;
              add.ftz.f32    temp_58974_1, temp_58972_1, temp_58973_1;
              add.ftz.f32    temp_58974_2, temp_58972_2, temp_58973_2;
              .reg .f32      temp_58976_0, temp_58976_1, temp_58976_2;
              mul.ftz.f32    temp_58976_0, tmp_59933_0, temp_58810_1;
              mul.ftz.f32    temp_58976_1, tmp_59933_1, temp_58810_1;
              mul.ftz.f32    temp_58976_2, tmp_59933_2, temp_58810_1;
              .reg .f32      temp_58977_0, temp_58977_1, temp_58977_2;
              mul.ftz.f32    temp_58977_0, tmp_59929_0, temp_58814_1;
              mul.ftz.f32    temp_58977_1, tmp_59929_1, temp_58814_1;
              mul.ftz.f32    temp_58977_2, tmp_59929_2, temp_58814_1;
              .reg .f32      temp_58978_0, temp_58978_1, temp_58978_2;
              add.ftz.f32    temp_58978_0, temp_58976_0, temp_58977_0;
              add.ftz.f32    temp_58978_1, temp_58976_1, temp_58977_1;
              add.ftz.f32    temp_58978_2, temp_58976_2, temp_58977_2;
              .reg .f32      temp_58979_0, temp_58979_1, temp_58979_2;
              add.ftz.f32    temp_58979_0, temp_58951_0, temp_58970_0;
              add.ftz.f32    temp_58979_1, temp_58951_1, temp_58970_1;
              add.ftz.f32    temp_58979_2, temp_58951_2, temp_58970_2;
              .reg .f32      temp_58980_0, temp_58980_1, temp_58980_2;
              add.ftz.f32    temp_58980_0, temp_58955_0, temp_58974_0;
              add.ftz.f32    temp_58980_1, temp_58955_1, temp_58974_1;
              add.ftz.f32    temp_58980_2, temp_58955_2, temp_58974_2;
              .reg .f32      temp_58981_0, temp_58981_1, temp_58981_2;
              add.ftz.f32    temp_58981_0, temp_58959_0, temp_58978_0;
              add.ftz.f32    temp_58981_1, temp_58959_1, temp_58978_1;
              add.ftz.f32    temp_58981_2, temp_58959_2, temp_58978_2;
              .reg .f32      temp_58992_0, temp_58992_1, temp_58992_2;
              mul.ftz.f32    temp_58992_0, tmp_59490_0, temp_58810_2;
              mul.ftz.f32    temp_58992_1, tmp_59490_1, temp_58810_2;
              mul.ftz.f32    temp_58992_2, tmp_59490_2, temp_58810_2;
              .reg .f32      temp_58994_0, temp_58994_1, temp_58994_2;
              mul.ftz.f32    temp_58994_0, tmp_59935_0, temp_58810_2;
              mul.ftz.f32    temp_58994_1, tmp_59935_1, temp_58810_2;
              mul.ftz.f32    temp_58994_2, tmp_59935_2, temp_58810_2;
              .reg .f32      temp_58995_0, temp_58995_1, temp_58995_2;
              mul.ftz.f32    temp_58995_0, tmp_59490_0, temp_58812_2;
              mul.ftz.f32    temp_58995_1, tmp_59490_1, temp_58812_2;
              mul.ftz.f32    temp_58995_2, tmp_59490_2, temp_58812_2;
              .reg .f32      temp_58996_0, temp_58996_1, temp_58996_2;
              add.ftz.f32    temp_58996_0, temp_58994_0, temp_58995_0;
              add.ftz.f32    temp_58996_1, temp_58994_1, temp_58995_1;
              add.ftz.f32    temp_58996_2, temp_58994_2, temp_58995_2;
              .reg .f32      temp_58998_0, temp_58998_1, temp_58998_2;
              mul.ftz.f32    temp_58998_0, tmp_59937_0, temp_58810_2;
              mul.ftz.f32    temp_58998_1, tmp_59937_1, temp_58810_2;
              mul.ftz.f32    temp_58998_2, tmp_59937_2, temp_58810_2;
              .reg .f32      temp_58999_0, temp_58999_1, temp_58999_2;
              mul.ftz.f32    temp_58999_0, tmp_59490_0, temp_58814_2;
              mul.ftz.f32    temp_58999_1, tmp_59490_1, temp_58814_2;
              mul.ftz.f32    temp_58999_2, tmp_59490_2, temp_58814_2;
              .reg .f32      temp_59000_0, temp_59000_1, temp_59000_2;
              add.ftz.f32    temp_59000_0, temp_58998_0, temp_58999_0;
              add.ftz.f32    temp_59000_1, temp_58998_1, temp_58999_1;
              add.ftz.f32    temp_59000_2, temp_58998_2, temp_58999_2;
              .reg .f32      temp_59001_0, temp_59001_1, temp_59001_2;
              add.ftz.f32    temp_59001_0, temp_58979_0, temp_58992_0;
              add.ftz.f32    temp_59001_1, temp_58979_1, temp_58992_1;
              add.ftz.f32    temp_59001_2, temp_58979_2, temp_58992_2;
              .reg .f32      temp_59002_0, temp_59002_1, temp_59002_2;
              add.ftz.f32    temp_59002_0, temp_58980_0, temp_58996_0;
              add.ftz.f32    temp_59002_1, temp_58980_1, temp_58996_1;
              add.ftz.f32    temp_59002_2, temp_58980_2, temp_58996_2;
              .reg .f32      temp_59003_0, temp_59003_1, temp_59003_2;
              add.ftz.f32    temp_59003_0, temp_58981_0, temp_59000_0;
              add.ftz.f32    temp_59003_1, temp_58981_1, temp_59000_1;
              add.ftz.f32    temp_59003_2, temp_58981_2, temp_59000_2;
              .reg .f32      temp_59010_0, temp_59010_1, temp_59010_2;
              mul.ftz.f32    temp_59010_0, temp_52006_0, tmp_60561_0;
              mul.ftz.f32    temp_59010_1, temp_52006_1, tmp_60561_1;
              mul.ftz.f32    temp_59010_2, temp_52006_2, tmp_60561_2;
              .reg.f32       temp_59027;
              add.ftz.f32    temp_59027, temp_59010_0, temp_59010_1;
              .reg.f32       temp_59033;
              add.ftz.f32    temp_59033, temp_59027, temp_59010_2;
              .reg .f32      temp_59041_0, temp_59041_1, temp_59041_2;
              mul.ftz.f32    temp_59041_0, temp_59001_0, tmp_59490_0;
              mul.ftz.f32    temp_59041_1, temp_59001_1, tmp_59490_1;
              mul.ftz.f32    temp_59041_2, temp_59001_2, tmp_59490_2;
              .reg.f32       temp_59058;
              add.ftz.f32    temp_59058, temp_59041_0, temp_59041_1;
              .reg.f32       temp_59064;
              add.ftz.f32    temp_59064, temp_59058, temp_59041_2;
              .reg .f32      temp_59072_0, temp_59072_1, temp_59072_2;
              mul.ftz.f32    temp_59072_0, temp_59001_0, tmp_60561_0;
              mul.ftz.f32    temp_59072_1, temp_59001_1, tmp_60561_1;
              mul.ftz.f32    temp_59072_2, temp_59001_2, tmp_60561_2;
              .reg.f32       temp_59089;
              add.ftz.f32    temp_59089, temp_59072_0, temp_59072_1;
              .reg.f32       temp_59095;
              add.ftz.f32    temp_59095, temp_59089, temp_59072_2;
              .reg.f32       temp_59101;
              mul.ftz.f32    temp_59101, temp_59033, temp_59095;
              .reg.s32       temp_59115;
              set.ge.ftz.s32.f32 temp_59115, temp_59101, 0F00000000;
              .reg.s32       temp_59118;
              set.lt.ftz.s32.f32 temp_59118, temp_59064, 0F00000000;
              .reg.s32       temp_59121;
              set.lt.ftz.s32.f32 temp_59121, temp_59095, 0F00000000;
              .reg.s32       temp_37924;
              xor.b32        temp_37924, temp_59118, temp_59121;
              .reg.s32       temp_37925;
              not.b32        temp_37925, temp_37924;
              .reg.s32       temp_59122;
              and.b32        temp_59122, temp_59115, temp_37925;
              .reg.s32       temp_37916;
              not.b32        temp_37916, temp_59122;
              .reg .f32      refl_37917_0, refl_37917_1, refl_37917_2;
              .reg.pred      temp_37916_61657;
              setp.ne.s32    temp_37916_61657, 0, temp_37916;
              selp.f32       refl_37917_0, 0F00000000, temp_58939_0, temp_37916_61657;
              selp.f32       refl_37917_1, 0F00000000, temp_58939_1, temp_37916_61657;
              selp.f32       refl_37917_2, 0F00000000, temp_58939_2, temp_37916_61657;
              .reg .f32      temp_59128_0, temp_59128_1, temp_59128_2;
              mul.ftz.f32    temp_59128_0, tmp_59490_0, temp_59001_0;
              mul.ftz.f32    temp_59128_1, tmp_59490_1, temp_59001_1;
              mul.ftz.f32    temp_59128_2, tmp_59490_2, temp_59001_2;
              .reg.f32       temp_59145;
              add.ftz.f32    temp_59145, temp_59128_0, temp_59128_1;
              .reg.f32       temp_59151;
              add.ftz.f32    temp_59151, temp_59145, temp_59128_2;
              .reg.s32       temp_59156;
              set.lt.ftz.s32.f32 temp_59156, temp_59151, 0F00000000;
              .reg.f32       temp_59164;
              neg.ftz.f32    temp_59164, temp_59151;
              .reg.f32       scl_59157;
              .reg.pred      temp_59156_61658;
              setp.ne.s32    temp_59156_61658, 0, temp_59156;
              selp.f32       scl_59157, temp_59164, temp_59151, temp_59156_61658;
              .reg.f32       temp_59172;
              rcp.approx.ftz.f32 temp_59172, temp_58873;
              .reg.f32       temp_59180;
              mul.ftz.f32    temp_59180, scl_59157, temp_59172;
              .reg .f32      temp_59194_0, temp_59194_1, temp_59194_2;
              mul.ftz.f32    temp_59194_0, temp_59180, tmp_59715_0_0;
              mul.ftz.f32    temp_59194_1, temp_59180, tmp_59715_0_1;
              mul.ftz.f32    temp_59194_2, temp_59180, tmp_59715_0_2;
              .reg .f32      temp_59195_0, temp_59195_1, temp_59195_2;
              mul.ftz.f32    temp_59195_0, refl_37917_0, temp_59194_0;
              mul.ftz.f32    temp_59195_1, refl_37917_1, temp_59194_1;
              mul.ftz.f32    temp_59195_2, refl_37917_2, temp_59194_2;
              .reg.s32       temp_59198;
              set.eq.ftz.s32.f32 temp_59198, temp_52815, 0F00000000;
              .reg.s32       s_36775;
              .reg.pred      temp_59198_61661;
              setp.ne.s32    temp_59198_61661, 0, temp_59198;
  @!temp_59198_61661 bra     else_61659;
              mov.b32        s_36775, 0;
              bra.uni        merge_61660;
else_61659:
              .reg.s32       temp_59201;
              set.lt.ftz.s32.f32 temp_59201, temp_52815, 0F3f800000;
              .reg.s32       s_36779;
              .reg.pred      temp_59201_61664;
              setp.ne.s32    temp_59201_61664, 0, temp_59201;
  @!temp_59201_61664 bra     else_61662;
              mov.b32        s_36779, 1;
              bra.uni        merge_61663;
else_61662:
              mov.b32        s_36779, 2;
merge_61663:
              mov.b32        s_36775, s_36779;
merge_61660:
              .reg.s32       temp_36768;
              set.eq.s32.s32 temp_36768, s_36775, 0;
              .reg.s32       temp_36771;
              set.eq.s32.s32 temp_36771, s_36775, 1;
              .reg.s32       temp_59202;
              or.b32         temp_59202, temp_36768, temp_36771;
              .reg.s32       state_is_same_as_shadow_ray_36766;
              or.b32         state_is_same_as_shadow_ray_36766, tmp_59715_10, 512;
              .reg.s32       state_is_same_as_shadow_ray_36762;
              and.b32        state_is_same_as_shadow_ray_36762, tmp_59715_10, -513;
              .reg.s32       state_is_same_as_shadow_ray_36539;
              .reg.pred      temp_59202_61665;
              setp.ne.s32    temp_59202_61665, 0, temp_59202;
              selp.s32       state_is_same_as_shadow_ray_36539, state_is_same_as_shadow_ray_36766, state_is_same_as_shadow_ray_36762, temp_59202_61665;
              .reg.s32       state_36540;
              and.b32        state_36540, tmp_59715_10, -32;
              .reg.s32       state_36745;
              .reg.pred      pred_61668;
              setp.eq.s32    pred_61668, s_36775, 2;
  @pred_61668 bra            case_2_61666;
              .reg.s32       temp_36746;
              or.b32         temp_36746, state_36540, 1;
              .reg.s32       state_36747;
              or.b32         state_36747, temp_36746, 32;
              mov.b32        state_36745, state_36747;
              bra.uni        merge_61667;
case_2_61666:
              .reg.s32       temp_36748;
              or.b32         temp_36748, state_36540, 4;
              .reg.s32       state_36749;
              or.b32         state_36749, temp_36748, 64;
              mov.b32        state_36745, state_36749;
              bra.uni        merge_61667;
merge_61667:
              .reg.s32       temp_36547;
              set.gt.s32.s32 temp_36547, temp_52080, 0;
              .reg.s32       temp_36548;
              and.b32        temp_36548, temp_59202, temp_36547;
              .reg.s32       temp_36549;
              not.b32        temp_36549, temp_36548;
              .reg.s32       temp_36553;
              .reg.pred      temp_59202_61671;
              setp.ne.s32    temp_59202_61671, 0, temp_59202;
  @!temp_59202_61671 bra     else_61669;
              .reg.u64       tmp_61672;
              .reg.s32       optix_buffer_id_61673;
              mov.b64        {_, optix_buffer_id_61673}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61674;
{
              .reg.s32       abstract_61675;
              mov.b32        abstract_61675, 1;
              .reg.u64       const_61676;
              mov.b64        const_61676, 544;
              .reg.u64       const_61677;
              mov.b64        const_61677, 0;
 call (ptr_from_optix_id_61674), _rt_buffer_get_id_64, (optix_buffer_id_61673, abstract_61675, abstract_61675, const_61676, const_61677, const_61677, const_61677); // resolving optix id
}
              ld.u64         tmp_61672, [ptr_from_optix_id_61674];
              .reg.s32       tmp_61678;
              .reg.u64       off_61679;
              mad.wide.u32   off_61679, tmp_59446, 48, 40;
              .reg.s32       optix_buffer_id_61680;
              mov.b64        {_, optix_buffer_id_61680}, tmp_61672;
              .reg.u64       ptr_from_optix_id_61681;
{
              .reg.s32       abstract_61682;
              mov.b32        abstract_61682, 1;
              .reg.u64       const_61683;
              mov.b64        const_61683, 512;
              .reg.u64       off_61684;
              add.u64        off_61684, const_61683, off_61679;
              .reg.u64       const_61685;
              mov.b64        const_61685, 0;
 call (ptr_from_optix_id_61681), _rt_buffer_get_id_64, (optix_buffer_id_61680, abstract_61682, abstract_61682, off_61684, const_61685, const_61685, const_61685); // resolving optix id
}
              ld.s32         tmp_61678, [ptr_from_optix_id_61681];
              .reg.s32       temp_36731;
              not.b32        temp_36731, tmp_61678;
              mov.b32        temp_36553, temp_36731;
              bra.uni        merge_61670;
else_61669:
              mov.b32        temp_36553, 0;
merge_61670:
              .reg.s32       state_36554;
              or.b32         state_36554, tmp_59715_10, 1024;
              .reg.s32       state_36555;
              .reg.pred      temp_36553_61686;
              setp.ne.s32    temp_36553_61686, 0, temp_36553;
              selp.s32       state_36555, state_36554, tmp_59715_10, temp_36553_61686;
              .reg.s32       temp_36559;
              .reg.pred      temp_59202_61689;
              setp.ne.s32    temp_59202_61689, 0, temp_59202;
  @!temp_59202_61689 bra     else_61687;
              .reg.u64       tmp_61690;
              .reg.s32       optix_buffer_id_61691;
              mov.b64        {_, optix_buffer_id_61691}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61692;
{
              .reg.s32       abstract_61693;
              mov.b32        abstract_61693, 1;
              .reg.u64       const_61694;
              mov.b64        const_61694, 544;
              .reg.u64       const_61695;
              mov.b64        const_61695, 0;
 call (ptr_from_optix_id_61692), _rt_buffer_get_id_64, (optix_buffer_id_61691, abstract_61693, abstract_61693, const_61694, const_61695, const_61695, const_61695); // resolving optix id
}
              ld.u64         tmp_61690, [ptr_from_optix_id_61692];
              .reg.s32       tmp_61696;
              .reg.u64       off_61697;
              mad.wide.u32   off_61697, tmp_59446, 48, 28;
              .reg.s32       optix_buffer_id_61698;
              mov.b64        {_, optix_buffer_id_61698}, tmp_61690;
              .reg.u64       ptr_from_optix_id_61699;
{
              .reg.s32       abstract_61700;
              mov.b32        abstract_61700, 1;
              .reg.u64       const_61701;
              mov.b64        const_61701, 512;
              .reg.u64       off_61702;
              add.u64        off_61702, const_61701, off_61697;
              .reg.u64       const_61703;
              mov.b64        const_61703, 0;
 call (ptr_from_optix_id_61699), _rt_buffer_get_id_64, (optix_buffer_id_61698, abstract_61700, abstract_61700, off_61702, const_61703, const_61703, const_61703); // resolving optix id
}
              ld.s32         tmp_61696, [ptr_from_optix_id_61699];
              .reg.s32       temp_36723;
              not.b32        temp_36723, tmp_61696;
              mov.b32        temp_36559, temp_36723;
              bra.uni        merge_61688;
else_61687:
              mov.b32        temp_36559, 0;
merge_61688:
              .reg.s32       temp_36560;
              and.b32        temp_36560, state_36555, 512;
              .reg.s32       temp_36561;
              set.gt.s32.s32 temp_36561, temp_36560, 0;
              .reg.s32       temp_36562;
              and.b32        temp_36562, temp_36559, temp_36561;
              .reg.s32       bounce_36563;
              .reg.pred      temp_36562_61704;
              setp.ne.s32    temp_36562_61704, 0, temp_36562;
              selp.s32       bounce_36563, 0, temp_36549, temp_36562_61704;
              .reg.s32       state_36567;
              and.b32        state_36567, tmp_59715_10, -2049;
              .reg.s32       state_36704;
              and.b32        state_36704, tmp_59715_10, -98305;
              .reg.s32       temp_36574;
              .reg.pred      temp_59202_61707;
              setp.ne.s32    temp_59202_61707, 0, temp_59202;
  @!temp_59202_61707 bra     else_61705;
              .reg.u64       tmp_61708;
              .reg.s32       optix_buffer_id_61709;
              mov.b64        {_, optix_buffer_id_61709}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61710;
{
              .reg.s32       abstract_61711;
              mov.b32        abstract_61711, 1;
              .reg.u64       const_61712;
              mov.b64        const_61712, 544;
              .reg.u64       const_61713;
              mov.b64        const_61713, 0;
 call (ptr_from_optix_id_61710), _rt_buffer_get_id_64, (optix_buffer_id_61709, abstract_61711, abstract_61711, const_61712, const_61713, const_61713, const_61713); // resolving optix id
}
              ld.u64         tmp_61708, [ptr_from_optix_id_61710];
              .reg.s32       tmp_61714;
              .reg.u64       off_61715;
              mad.wide.u32   off_61715, tmp_59446, 48, 36;
              .reg.s32       optix_buffer_id_61716;
              mov.b64        {_, optix_buffer_id_61716}, tmp_61708;
              .reg.u64       ptr_from_optix_id_61717;
{
              .reg.s32       abstract_61718;
              mov.b32        abstract_61718, 1;
              .reg.u64       const_61719;
              mov.b64        const_61719, 512;
              .reg.u64       off_61720;
              add.u64        off_61720, const_61719, off_61715;
              .reg.u64       const_61721;
              mov.b64        const_61721, 0;
 call (ptr_from_optix_id_61717), _rt_buffer_get_id_64, (optix_buffer_id_61716, abstract_61718, abstract_61718, off_61720, const_61721, const_61721, const_61721); // resolving optix id
}
              ld.s32         tmp_61714, [ptr_from_optix_id_61717];
              .reg.s32       temp_36693;
              not.b32        temp_36693, tmp_61714;
              mov.b32        temp_36574, temp_36693;
              bra.uni        merge_61706;
else_61705:
              mov.b32        temp_36574, 0;
merge_61706:
              .reg.s32       state_36575;
              or.b32         state_36575, state_36704, 16384;
              .reg.s32       state_36576;
              and.b32        state_36576, state_36704, -16385;
              .reg.s32       state_36577;
              .reg.pred      temp_36574_61722;
              setp.ne.s32    temp_36574_61722, 0, temp_36574;
              selp.s32       state_36577, state_36575, state_36576, temp_36574_61722;
              .reg.s32       temp_36578;
              and.b32        temp_36578, state_is_same_as_shadow_ray_36539, 512;
              .reg.s32       temp_36579;
              and.b32        temp_36579, state_36745, 511;
              .reg.s32       temp_36580;
              or.b32         temp_36580, temp_36578, temp_36579;
              .reg.s32       temp_36581;
              and.b32        temp_36581, state_36555, 1024;
              .reg.s32       temp_36582;
              or.b32         temp_36582, temp_36580, temp_36581;
              .reg.s32       temp_36583;
              and.b32        temp_36583, state_36567, 6144;
              .reg.s32       temp_36584;
              or.b32         temp_36584, temp_36582, temp_36583;
              .reg.s32       temp_36585;
              and.b32        temp_36585, state_36577, 122880;
              .reg.s32       temp_36586;
              or.b32         temp_36586, temp_36584, temp_36585;
              .reg.s32       temp_36587;
              .reg.pred      bounce_36563_61725;
              setp.ne.s32    bounce_36563_61725, 0, bounce_36563;
  @!bounce_36563_61725 bra   else_61723;
              .reg.u64       tmp_61726;
              ld.param.u64   tmp_61726, [integratorInstanceID_22355];
              .reg.s32       tmp_61727;
              ld.s32         tmp_61727, [tmp_61726];
              .reg.u64       tmp_61728;
              .reg.s32       optix_buffer_id_61729;
              mov.b64        {_, optix_buffer_id_61729}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61730;
{
              .reg.s32       abstract_61731;
              mov.b32        abstract_61731, 1;
              .reg.u64       const_61732;
              mov.b64        const_61732, 568;
              .reg.u64       const_61733;
              mov.b64        const_61733, 0;
 call (ptr_from_optix_id_61730), _rt_buffer_get_id_64, (optix_buffer_id_61729, abstract_61731, abstract_61731, const_61732, const_61733, const_61733, const_61733); // resolving optix id
}
              ld.u64         tmp_61728, [ptr_from_optix_id_61730];
              .reg.s32       tmp_61734;
              .reg.u64       off_61735;
              mad.wide.u32   off_61735, tmp_61727, 112, 12;
              .reg.s32       optix_buffer_id_61736;
              mov.b64        {_, optix_buffer_id_61736}, tmp_61728;
              .reg.u64       ptr_from_optix_id_61737;
{
              .reg.s32       abstract_61738;
              mov.b32        abstract_61738, 1;
              .reg.u64       const_61739;
              mov.b64        const_61739, 512;
              .reg.u64       off_61740;
              add.u64        off_61740, const_61739, off_61735;
              .reg.u64       const_61741;
              mov.b64        const_61741, 0;
 call (ptr_from_optix_id_61737), _rt_buffer_get_id_64, (optix_buffer_id_61736, abstract_61738, abstract_61738, off_61740, const_61741, const_61741, const_61741); // resolving optix id
}
              ld.s32         tmp_61734, [ptr_from_optix_id_61737];
              .reg.s32       temp_36690;
              set.lt.s32.s32 temp_36690, tmp_59715_3, tmp_61734;
              mov.b32        temp_36587, temp_36690;
              bra.uni        merge_61724;
else_61723:
              mov.b32        temp_36587, 0;
merge_61724:
              .reg.s32       temp_36588;
              .reg.pred      temp_36587_61744;
              setp.ne.s32    temp_36587_61744, 0, temp_36587;
  @!temp_36587_61744 bra     else_61742;
              .reg .f32      temp_59220_0, temp_59220_1, temp_59220_2;
              mul.ftz.f32    temp_59220_0, temp_59195_2, 0F3e38c49c;
              mul.ftz.f32    temp_59220_1, temp_59195_2, 0F3d93d07d;
              mul.ftz.f32    temp_59220_2, temp_59195_2, 0F3f734721;
              .reg .f32      temp_59221_0, temp_59221_1, temp_59221_2;
              fma.rn.ftz.f32 temp_59221_0, 0F3eb71437, temp_59195_1, temp_59220_0;
              fma.rn.ftz.f32 temp_59221_1, 0F3f371437, temp_59195_1, temp_59220_1;
              fma.rn.ftz.f32 temp_59221_2, 0F3df41aef, temp_59195_1, temp_59220_2;
              .reg .f32      temp_59222_0, temp_59222_1, temp_59222_2;
              fma.rn.ftz.f32 temp_59222_0, 0F3ed32d7c, temp_59195_0, temp_59221_0;
              fma.rn.ftz.f32 temp_59222_1, 0F3e59c6ed, temp_59195_0, temp_59221_1;
              fma.rn.ftz.f32 temp_59222_2, 0F3c9e6221, temp_59195_0, temp_59221_2;
              .reg.u64       tmp_61745;
              ld.param.u64   tmp_61745, [integratorInstanceID_22355];
              .reg.s32       tmp_61746;
              ld.s32         tmp_61746, [tmp_61745];
              .reg.u64       tmp_61747;
              .reg.s32       optix_buffer_id_61748;
              mov.b64        {_, optix_buffer_id_61748}, tmp_59444;
              .reg.u64       ptr_from_optix_id_61749;
{
              .reg.s32       abstract_61750;
              mov.b32        abstract_61750, 1;
              .reg.u64       const_61751;
              mov.b64        const_61751, 568;
              .reg.u64       const_61752;
              mov.b64        const_61752, 0;
 call (ptr_from_optix_id_61749), _rt_buffer_get_id_64, (optix_buffer_id_61748, abstract_61750, abstract_61750, const_61751, const_61752, const_61752, const_61752); // resolving optix id
}
              ld.u64         tmp_61747, [ptr_from_optix_id_61749];
              .reg.f32       tmp_61753;
              .reg.u64       off_61754;
              mad.wide.u32   off_61754, tmp_61746, 112, 4;
              .reg.s32       optix_buffer_id_61755;
              mov.b64        {_, optix_buffer_id_61755}, tmp_61747;
              .reg.u64       ptr_from_optix_id_61756;
{
              .reg.s32       abstract_61757;
              mov.b32        abstract_61757, 1;
              .reg.u64       const_61758;
              mov.b64        const_61758, 512;
              .reg.u64       off_61759;
              add.u64        off_61759, const_61758, off_61754;
              .reg.u64       const_61760;
              mov.b64        const_61760, 0;
 call (ptr_from_optix_id_61756), _rt_buffer_get_id_64, (optix_buffer_id_61755, abstract_61757, abstract_61757, off_61759, const_61760, const_61760, const_61760); // resolving optix id
}
              ld.f32         tmp_61753, [ptr_from_optix_id_61756];
              .reg.s32       temp_36688;
              set.ge.ftz.s32.f32 temp_36688, temp_59222_1, tmp_61753;
              mov.b32        temp_36588, temp_36688;
              bra.uni        merge_61743;
else_61742:
              mov.b32        temp_36588, 0;
merge_61743:
              .reg .f32      scl_42576_0, scl_42576_1, scl_42576_2;
              .reg.u64       scl_42590;
              .reg.u64       scl_42591;
              .reg.u64       scl_42592;
              .reg.pred      temp_36588_61763;
              setp.ne.s32    temp_36588_61763, 0, temp_36588;
  @!temp_36588_61763 bra     else_61761;
              .reg .f32      temp_59228_0, temp_59228_1, temp_59228_2;
              mul.ftz.f32    temp_59228_0, tmp_60561_0, temp_59001_0;
              mul.ftz.f32    temp_59228_1, tmp_60561_1, temp_59001_1;
              mul.ftz.f32    temp_59228_2, tmp_60561_2, temp_59001_2;
              .reg.f32       temp_59245;
              add.ftz.f32    temp_59245, temp_59228_0, temp_59228_1;
              .reg.f32       temp_59251;
              add.ftz.f32    temp_59251, temp_59245, temp_59228_2;
              .reg.s32       temp_59257;
              set.gt.ftz.s32.f32 temp_59257, temp_59251, 0F00000000;
              .reg.f32       side_36656;
              .reg.pred      temp_59257_61764;
              setp.ne.s32    temp_59257_61764, 0, temp_59257;
              selp.f32       side_36656, 0F3f800000, 0Fbf800000, temp_59257_61764;
              .reg.f32       temp_36658;
              mul.ftz.f32    temp_36658, tmp_59738, side_36656;
              .reg .f32      temp_59267_0, temp_59267_1, temp_59267_2;
              mul.ftz.f32    temp_59267_0, tmp_60561_0, temp_36658;
              mul.ftz.f32    temp_59267_1, tmp_60561_1, temp_36658;
              mul.ftz.f32    temp_59267_2, tmp_60561_2, temp_36658;
              .reg.u64       tmp_61765;
              ld.param.u64   tmp_61765, [f_22353];
              .reg .f32      tmp_61766_0, tmp_61766_1, tmp_61766_2;
              ld.v2.f32      {tmp_61766_0, tmp_61766_1}, [tmp_61765+64];
              ld.f32         tmp_61766_2, [tmp_61765+72];
              .reg .f32      temp_59269_0, temp_59269_1, temp_59269_2;
              mul.ftz.f32    temp_59269_0, tmp_61766_0, temp_36658;
              mul.ftz.f32    temp_59269_1, tmp_61766_1, temp_36658;
              mul.ftz.f32    temp_59269_2, tmp_61766_2, temp_36658;
              .reg.u64       tmp_61767;
              ld.param.u64   tmp_61767, [f_22353];
              .reg .f32      tmp_61768_0, tmp_61768_1, tmp_61768_2;
              ld.v2.f32      {tmp_61768_0, tmp_61768_1}, [tmp_61767+80];
              ld.f32         tmp_61768_2, [tmp_61767+88];
              .reg .f32      temp_59273_0, temp_59273_1, temp_59273_2;
              mul.ftz.f32    temp_59273_0, tmp_61768_0, temp_36658;
              mul.ftz.f32    temp_59273_1, tmp_61768_1, temp_36658;
              mul.ftz.f32    temp_59273_2, tmp_61768_2, temp_36658;
              .reg .f32      temp_59280_0, temp_59280_1, temp_59280_2;
              add.ftz.f32    temp_59280_0, tmp_59506_0, temp_59267_0;
              add.ftz.f32    temp_59280_1, tmp_59506_1, temp_59267_1;
              add.ftz.f32    temp_59280_2, tmp_59506_2, temp_59267_2;
              .reg .f32      temp_59283_0, temp_59283_1, temp_59283_2;
              add.ftz.f32    temp_59283_0, tmp_59508_0, temp_59269_0;
              add.ftz.f32    temp_59283_1, tmp_59508_1, temp_59269_1;
              add.ftz.f32    temp_59283_2, tmp_59508_2, temp_59269_2;
              .reg .f32      temp_59286_0, temp_59286_1, temp_59286_2;
              add.ftz.f32    temp_59286_0, tmp_59510_0, temp_59273_0;
              add.ftz.f32    temp_59286_1, tmp_59510_1, temp_59273_1;
              add.ftz.f32    temp_59286_2, tmp_59510_2, temp_59273_2;
              .reg.u64       scl_42610;
              .reg.u64       scl_42611;
              .reg.u64       scl_42612;
              .reg.pred      tmp_59724_61771;
              setp.ne.s32    tmp_59724_61771, 0, tmp_59724;
  @!tmp_59724_61771 bra      else_61769;
              .reg.s32       temp_36682;
              add.cc.s32     temp_36682, tmp_59715_3, 1;
              .reg.s32       tmp_61772;
              .reg.s32       optix_buffer_id_61773;
              .reg.s32       is_optix_buffer_id_61774;
              mov.b64        {is_optix_buffer_id_61774, optix_buffer_id_61773}, scl_42395;
              .reg.u64       off_61775;
              add.u64        off_61775, scl_42395, 0;
              .reg.pred      is_optix_buffer_id_61776;
              setp.eq.s32    is_optix_buffer_id_61776, -1, is_optix_buffer_id_61774;
{
              .reg.s32       abstract_61777;
              mov.b32        abstract_61777, 1;
              .reg.u64       const_61778;
              mov.b64        const_61778, 512;
              .reg.u64       const_61779;
              mov.b64        const_61779, 0;
@is_optix_buffer_id_61776 call (off_61775), _rt_buffer_get_id_64, (optix_buffer_id_61773, abstract_61777, abstract_61777, const_61778, const_61779, const_61779, const_61779); // resolving optix id
}
              ld.s32         tmp_61772, [off_61775];
              .reg.s32       temp_59296;
              set.lt.s32.s32 temp_59296, tmp_61772, 16;
              .reg.u64       scl_59297;
              .reg.u64       scl_59298;
              .reg.u64       scl_59299;
              .reg.pred      temp_59296_61782;
              setp.ne.s32    temp_59296_61782, 0, temp_59296;
  @!temp_59296_61782 bra     else_61780;
              .reg.s32       temp_59301;
              add.cc.s32     temp_59301, tmp_61772, 1;
              st.s32         [scl_42395], temp_59301;
              .reg.u64       off_61783;
              mad.wide.u32   off_61783, tmp_61772, 112, 0;
              .reg.u64       off_61784;
              add.u64        off_61784, scl_42396, off_61783;
              st.v2.f32      [off_61784], {temp_59280_0, temp_59280_1};
              st.f32         [off_61784+8], temp_59280_2;
              st.v2.f32      [off_61784+16], {temp_59283_0, temp_59283_1};
              st.f32         [off_61784+24], temp_59283_2;
              st.v2.f32      [off_61784+32], {temp_59286_0, temp_59286_1};
              st.f32         [off_61784+40], temp_59286_2;
              st.v2.f32      [off_61784+48], {temp_59001_0, temp_59001_1};
              st.f32         [off_61784+56], temp_59001_2;
              st.v2.f32      [off_61784+64], {temp_59002_0, temp_59002_1};
              st.f32         [off_61784+72], temp_59002_2;
              st.v2.f32      [off_61784+80], {temp_59003_0, temp_59003_1};
              st.f32         [off_61784+88], temp_59003_2;
              .reg.f32       abstract_61785;
              mov.b32        abstract_61785, 0F7f800000;
              st.f32         [off_61784+96], abstract_61785;
              .reg.u64       off_61786;
              mad.wide.u32   off_61786, tmp_61772, 112, 0;
              .reg.u64       off_61787;
              add.u64        off_61787, scl_42397, off_61786;
              st.v2.f32      [off_61787], {temp_59195_0, temp_59195_1};
              st.f32         [off_61787+8], temp_59195_2;
              .reg.f32       abstract_61788;
              mov.b32        abstract_61788, 0F00000000;
              st.f32         [off_61787+16], abstract_61788;
              st.f32         [off_61787+20], tmp_59715_2;
              st.s32         [off_61787+24], temp_36682;
              st.s32         [off_61787+28], temp_37931;
              .reg.s32       abstract_61789;
              mov.b32        abstract_61789, 48;
              st.s32         [off_61787+32], abstract_61789;
              st.v2.f32      [off_61787+48], {temp_59280_0, temp_59280_1};
              st.f32         [off_61787+56], temp_59280_2;
              st.v2.f32      [off_61787+64], {temp_59283_0, temp_59283_1};
              st.f32         [off_61787+72], temp_59283_2;
              st.v2.f32      [off_61787+80], {temp_59286_0, temp_59286_1};
              st.f32         [off_61787+88], temp_59286_2;
              .reg.f32       abstract_61790;
              mov.b32        abstract_61790, 0F00000000;
              st.f32         [off_61787+96], abstract_61790;
              .reg.f32       abstract_61791;
              mov.b32        abstract_61791, 0F3f800000;
              st.f32         [off_61787+100], abstract_61791;
              .reg.s32       abstract_61792;
              mov.b32        abstract_61792, -1;
              st.s32         [off_61787+104], abstract_61792;
              st.s32         [off_61787+108], temp_36586;
              mov.u64        scl_59297, scl_42395;
              mov.u64        scl_59298, scl_42396;
              mov.u64        scl_59299, scl_42397;
              bra.uni        merge_61781;
else_61780:
              mov.u64        scl_59297, scl_42395;
              mov.u64        scl_59298, scl_42396;
              mov.u64        scl_59299, scl_42397;
merge_61781:
              mov.u64        scl_42610, scl_59297;
              mov.u64        scl_42611, scl_59298;
              mov.u64        scl_42612, scl_59299;
              bra.uni        merge_61770;
else_61769:
              .reg.s32       temp_36675;
              add.cc.s32     temp_36675, tmp_59715_3, 1;
              .reg.s32       tmp_61793;
              .reg.s32       optix_buffer_id_61794;
              .reg.s32       is_optix_buffer_id_61795;
              mov.b64        {is_optix_buffer_id_61795, optix_buffer_id_61794}, scl_42395;
              .reg.u64       off_61796;
              add.u64        off_61796, scl_42395, 0;
              .reg.pred      is_optix_buffer_id_61797;
              setp.eq.s32    is_optix_buffer_id_61797, -1, is_optix_buffer_id_61795;
{
              .reg.s32       abstract_61798;
              mov.b32        abstract_61798, 1;
              .reg.u64       const_61799;
              mov.b64        const_61799, 512;
              .reg.u64       const_61800;
              mov.b64        const_61800, 0;
@is_optix_buffer_id_61797 call (off_61796), _rt_buffer_get_id_64, (optix_buffer_id_61794, abstract_61798, abstract_61798, const_61799, const_61800, const_61800, const_61800); // resolving optix id
}
              ld.s32         tmp_61793, [off_61796];
              .reg.s32       temp_59311;
              set.lt.s32.s32 temp_59311, tmp_61793, 16;
              .reg.u64       scl_59312;
              .reg.u64       scl_59313;
              .reg.u64       scl_59314;
              .reg.pred      temp_59311_61803;
              setp.ne.s32    temp_59311_61803, 0, temp_59311;
  @!temp_59311_61803 bra     else_61801;
              .reg.s32       temp_59316;
              add.cc.s32     temp_59316, tmp_61793, 1;
              st.s32         [scl_42395], temp_59316;
              .reg.u64       off_61804;
              mad.wide.u32   off_61804, tmp_61793, 112, 0;
              .reg.u64       off_61805;
              add.u64        off_61805, scl_42396, off_61804;
              st.v2.f32      [off_61805], {temp_59280_0, temp_59280_1};
              st.f32         [off_61805+8], temp_59280_2;
              st.v2.f32      [off_61805+16], {temp_59283_0, temp_59283_1};
              st.f32         [off_61805+24], temp_59283_2;
              st.v2.f32      [off_61805+32], {temp_59286_0, temp_59286_1};
              st.f32         [off_61805+40], temp_59286_2;
              st.v2.f32      [off_61805+48], {temp_59001_0, temp_59001_1};
              st.f32         [off_61805+56], temp_59001_2;
              st.v2.f32      [off_61805+64], {temp_59002_0, temp_59002_1};
              st.f32         [off_61805+72], temp_59002_2;
              st.v2.f32      [off_61805+80], {temp_59003_0, temp_59003_1};
              st.f32         [off_61805+88], temp_59003_2;
              .reg.f32       abstract_61806;
              mov.b32        abstract_61806, 0F7f800000;
              st.f32         [off_61805+96], abstract_61806;
              .reg.u64       off_61807;
              mad.wide.u32   off_61807, tmp_61793, 112, 0;
              .reg.u64       off_61808;
              add.u64        off_61808, scl_42397, off_61807;
              st.v2.f32      [off_61808], {temp_59195_0, temp_59195_1};
              st.f32         [off_61808+8], temp_59195_2;
              .reg.f32       abstract_61809;
              mov.b32        abstract_61809, 0F00000000;
              st.f32         [off_61808+16], abstract_61809;
              st.f32         [off_61808+20], tmp_59715_2;
              st.s32         [off_61808+24], temp_36675;
              st.s32         [off_61808+28], temp_37931;
              .reg.s32       abstract_61810;
              mov.b32        abstract_61810, 0;
              st.s32         [off_61808+32], abstract_61810;
              st.v2.f32      [off_61808+48], {temp_59280_0, temp_59280_1};
              st.f32         [off_61808+56], temp_59280_2;
              st.v2.f32      [off_61808+64], {temp_59283_0, temp_59283_1};
              st.f32         [off_61808+72], temp_59283_2;
              st.v2.f32      [off_61808+80], {temp_59286_0, temp_59286_1};
              st.f32         [off_61808+88], temp_59286_2;
              .reg.f32       abstract_61811;
              mov.b32        abstract_61811, 0F00000000;
              st.f32         [off_61808+96], abstract_61811;
              .reg.f32       abstract_61812;
              mov.b32        abstract_61812, 0F3f800000;
              st.f32         [off_61808+100], abstract_61812;
              st.s32         [off_61808+104], tmp_59446;
              st.s32         [off_61808+108], temp_36586;
              mov.u64        scl_59312, scl_42395;
              mov.u64        scl_59313, scl_42396;
              mov.u64        scl_59314, scl_42397;
              bra.uni        merge_61802;
else_61801:
              mov.u64        scl_59312, scl_42395;
              mov.u64        scl_59313, scl_42396;
              mov.u64        scl_59314, scl_42397;
merge_61802:
              mov.u64        scl_42610, scl_59312;
              mov.u64        scl_42611, scl_59313;
              mov.u64        scl_42612, scl_59314;
merge_61770:
              mov.b32        scl_42576_0, scl_42380_0;
              mov.b32        scl_42576_1, scl_42380_1;
              mov.b32        scl_42576_2, scl_42380_2;
              mov.u64        scl_42590, scl_42610;
              mov.u64        scl_42591, scl_42611;
              mov.u64        scl_42592, scl_42612;
              bra.uni        merge_61762;
else_61761:
              mov.b32        scl_42576_0, scl_42380_0;
              mov.b32        scl_42576_1, scl_42380_1;
              mov.b32        scl_42576_2, scl_42380_2;
              mov.u64        scl_42590, scl_42395;
              mov.u64        scl_42591, scl_42396;
              mov.u64        scl_42592, scl_42397;
merge_61762:
              mov.b32        scl_42524_0, scl_42576_0;
              mov.b32        scl_42524_1, scl_42576_1;
              mov.b32        scl_42524_2, scl_42576_2;
              mov.u64        scl_42539, scl_42590;
              mov.u64        scl_42540, scl_42591;
              mov.u64        scl_42541, scl_42592;
              mov.b32        scl_42527, temp_37931;
              bra.uni        merge_61593;
else_61592:
              mov.b32        scl_42524_0, scl_42380_0;
              mov.b32        scl_42524_1, scl_42380_1;
              mov.b32        scl_42524_2, scl_42380_2;
              mov.u64        scl_42539, scl_42395;
              mov.u64        scl_42540, scl_42396;
              mov.u64        scl_42541, scl_42397;
              mov.b32        scl_42527, scl_42383;
merge_61593:
              .reg.s32       temp_30301;
              set.eq.s32.s32 temp_30301, scl_41526, 0;
              .reg.s32       temp_30302;
              and.b32        temp_30302, tmp_59724, temp_30301;
              .reg .f32      scl_42668_0, scl_42668_1, scl_42668_2;
              .reg.u64       scl_42670;
              .reg.u64       scl_42671;
              .reg.u64       scl_42672;
              .reg.pred      temp_30302_61815;
              setp.ne.s32    temp_30302_61815, 0, temp_30302;
  @!temp_30302_61815 bra     else_61813;
              .reg .f32      scl_42678_0, scl_42678_1, scl_42678_2;
              .reg.u64       scl_42680;
              .reg.u64       scl_42681;
              .reg.u64       scl_42682;
              .reg.pred      scl_41527_61818;
              setp.ne.s32    scl_41527_61818, 0, scl_41527;
  @!scl_41527_61818 bra      else_61816;
              .reg .f32      temp_59329_0, temp_59329_1, temp_59329_2;
              add.ftz.f32    temp_59329_0, scl_42524_0, scl_41529_0;
              add.ftz.f32    temp_59329_1, scl_42524_1, scl_41529_1;
              add.ftz.f32    temp_59329_2, scl_42524_2, scl_41529_2;
              mov.b32        scl_42678_0, temp_59329_0;
              mov.b32        scl_42678_1, temp_59329_1;
              mov.b32        scl_42678_2, temp_59329_2;
              mov.u64        scl_42680, scl_42539;
              mov.u64        scl_42681, scl_42540;
              mov.u64        scl_42682, scl_42541;
              bra.uni        merge_61817;
else_61816:
              .reg .f32      temp_59331_0, temp_59331_1, temp_59331_2;
              neg.ftz.f32    temp_59331_0, temp_52006_0;
              neg.ftz.f32    temp_59331_1, temp_52006_1;
              neg.ftz.f32    temp_59331_2, temp_52006_2;
              .reg .f32      temp_59333_0, temp_59333_1, temp_59333_2;
              neg.ftz.f32    temp_59333_0, temp_52008_0;
              neg.ftz.f32    temp_59333_1, temp_52008_1;
              neg.ftz.f32    temp_59333_2, temp_52008_2;
              .reg .f32      temp_59335_0, temp_59335_1, temp_59335_2;
              neg.ftz.f32    temp_59335_0, temp_52010_0;
              neg.ftz.f32    temp_59335_1, temp_52010_1;
              neg.ftz.f32    temp_59335_2, temp_52010_2;
              .reg .f32      temp_59342_0, temp_59342_1, temp_59342_2;
              mul.ftz.f32    temp_59342_0, tmp_60561_0, temp_59331_0;
              mul.ftz.f32    temp_59342_1, tmp_60561_1, temp_59331_1;
              mul.ftz.f32    temp_59342_2, tmp_60561_2, temp_59331_2;
              .reg.f32       temp_59359;
              add.ftz.f32    temp_59359, temp_59342_0, temp_59342_1;
              .reg.f32       temp_59365;
              add.ftz.f32    temp_59365, temp_59359, temp_59342_2;
              .reg.s32       temp_59371;
              set.gt.ftz.s32.f32 temp_59371, temp_59365, 0F00000000;
              .reg.f32       side_30698;
              .reg.pred      temp_59371_61819;
              setp.ne.s32    temp_59371_61819, 0, temp_59371;
              selp.f32       side_30698, 0F3f800000, 0Fbf800000, temp_59371_61819;
              .reg.f32       temp_30700;
              mul.ftz.f32    temp_30700, tmp_59738, side_30698;
              .reg .f32      temp_59381_0, temp_59381_1, temp_59381_2;
              mul.ftz.f32    temp_59381_0, tmp_60561_0, temp_30700;
              mul.ftz.f32    temp_59381_1, tmp_60561_1, temp_30700;
              mul.ftz.f32    temp_59381_2, tmp_60561_2, temp_30700;
              .reg.u64       tmp_61820;
              ld.param.u64   tmp_61820, [f_22353];
              .reg .f32      tmp_61821_0, tmp_61821_1, tmp_61821_2;
              ld.v2.f32      {tmp_61821_0, tmp_61821_1}, [tmp_61820+64];
              ld.f32         tmp_61821_2, [tmp_61820+72];
              .reg .f32      temp_59383_0, temp_59383_1, temp_59383_2;
              mul.ftz.f32    temp_59383_0, tmp_61821_0, temp_30700;
              mul.ftz.f32    temp_59383_1, tmp_61821_1, temp_30700;
              mul.ftz.f32    temp_59383_2, tmp_61821_2, temp_30700;
              .reg.u64       tmp_61822;
              ld.param.u64   tmp_61822, [f_22353];
              .reg .f32      tmp_61823_0, tmp_61823_1, tmp_61823_2;
              ld.v2.f32      {tmp_61823_0, tmp_61823_1}, [tmp_61822+80];
              ld.f32         tmp_61823_2, [tmp_61822+88];
              .reg .f32      temp_59387_0, temp_59387_1, temp_59387_2;
              mul.ftz.f32    temp_59387_0, tmp_61823_0, temp_30700;
              mul.ftz.f32    temp_59387_1, tmp_61823_1, temp_30700;
              mul.ftz.f32    temp_59387_2, tmp_61823_2, temp_30700;
              .reg .f32      temp_59394_0, temp_59394_1, temp_59394_2;
              add.ftz.f32    temp_59394_0, tmp_59506_0, temp_59381_0;
              add.ftz.f32    temp_59394_1, tmp_59506_1, temp_59381_1;
              add.ftz.f32    temp_59394_2, tmp_59506_2, temp_59381_2;
              .reg .f32      temp_59397_0, temp_59397_1, temp_59397_2;
              add.ftz.f32    temp_59397_0, tmp_59508_0, temp_59383_0;
              add.ftz.f32    temp_59397_1, tmp_59508_1, temp_59383_1;
              add.ftz.f32    temp_59397_2, tmp_59508_2, temp_59383_2;
              .reg .f32      temp_59400_0, temp_59400_1, temp_59400_2;
              add.ftz.f32    temp_59400_0, tmp_59510_0, temp_59387_0;
              add.ftz.f32    temp_59400_1, tmp_59510_1, temp_59387_1;
              add.ftz.f32    temp_59400_2, tmp_59510_2, temp_59387_2;
              .reg.s32       tmp_61824;
              .reg.s32       optix_buffer_id_61825;
              .reg.s32       is_optix_buffer_id_61826;
              mov.b64        {is_optix_buffer_id_61826, optix_buffer_id_61825}, scl_42539;
              .reg.u64       off_61827;
              add.u64        off_61827, scl_42539, 0;
              .reg.pred      is_optix_buffer_id_61828;
              setp.eq.s32    is_optix_buffer_id_61828, -1, is_optix_buffer_id_61826;
{
              .reg.s32       abstract_61829;
              mov.b32        abstract_61829, 1;
              .reg.u64       const_61830;
              mov.b64        const_61830, 512;
              .reg.u64       const_61831;
              mov.b64        const_61831, 0;
@is_optix_buffer_id_61828 call (off_61827), _rt_buffer_get_id_64, (optix_buffer_id_61825, abstract_61829, abstract_61829, const_61830, const_61831, const_61831, const_61831); // resolving optix id
}
              ld.s32         tmp_61824, [off_61827];
              .reg.s32       temp_59409;
              set.lt.s32.s32 temp_59409, tmp_61824, 16;
              .reg.u64       scl_59410;
              .reg.u64       scl_59411;
              .reg.u64       scl_59412;
              .reg.pred      temp_59409_61834;
              setp.ne.s32    temp_59409_61834, 0, temp_59409;
  @!temp_59409_61834 bra     else_61832;
              .reg.s32       temp_59414;
              add.cc.s32     temp_59414, tmp_61824, 1;
              st.s32         [scl_42539], temp_59414;
              .reg.u64       off_61835;
              mad.wide.u32   off_61835, tmp_61824, 112, 0;
              .reg.u64       off_61836;
              add.u64        off_61836, scl_42540, off_61835;
              st.v2.f32      [off_61836], {temp_59394_0, temp_59394_1};
              st.f32         [off_61836+8], temp_59394_2;
              st.v2.f32      [off_61836+16], {temp_59397_0, temp_59397_1};
              st.f32         [off_61836+24], temp_59397_2;
              st.v2.f32      [off_61836+32], {temp_59400_0, temp_59400_1};
              st.f32         [off_61836+40], temp_59400_2;
              st.v2.f32      [off_61836+48], {temp_59331_0, temp_59331_1};
              st.f32         [off_61836+56], temp_59331_2;
              st.v2.f32      [off_61836+64], {temp_59333_0, temp_59333_1};
              st.f32         [off_61836+72], temp_59333_2;
              st.v2.f32      [off_61836+80], {temp_59335_0, temp_59335_1};
              st.f32         [off_61836+88], temp_59335_2;
              .reg.f32       abstract_61837;
              mov.b32        abstract_61837, 0F7f800000;
              st.f32         [off_61836+96], abstract_61837;
              .reg.u64       off_61838;
              mad.wide.u32   off_61838, tmp_61824, 112, 0;
              .reg.u64       off_61839;
              add.u64        off_61839, scl_42541, off_61838;
              st.v2.f32      [off_61839], {scl_41529_0, scl_41529_1};
              st.f32         [off_61839+8], scl_41529_2;
              .reg.f32       abstract_61840;
              mov.b32        abstract_61840, 0F00000000;
              st.f32         [off_61839+16], abstract_61840;
              st.f32         [off_61839+20], tmp_59715_2;
              st.s32         [off_61839+24], tmp_59715_3;
              st.s32         [off_61839+28], scl_42527;
              .reg.s32       abstract_61841;
              mov.b32        abstract_61841, 33;
              st.s32         [off_61839+32], abstract_61841;
              st.v2.f32      [off_61839+48], {temp_59394_0, temp_59394_1};
              st.f32         [off_61839+56], temp_59394_2;
              st.v2.f32      [off_61839+64], {temp_59397_0, temp_59397_1};
              st.f32         [off_61839+72], temp_59397_2;
              st.v2.f32      [off_61839+80], {temp_59400_0, temp_59400_1};
              st.f32         [off_61839+88], temp_59400_2;
              .reg.f32       abstract_61842;
              mov.b32        abstract_61842, 0F00000000;
              st.f32         [off_61839+96], abstract_61842;
              .reg.f32       abstract_61843;
              mov.b32        abstract_61843, 0F3f800000;
              st.f32         [off_61839+100], abstract_61843;
              .reg.s32       abstract_61844;
              mov.b32        abstract_61844, -1;
              st.s32         [off_61839+104], abstract_61844;
              st.s32         [off_61839+108], tmp_59715_10;
              mov.u64        scl_59410, scl_42539;
              mov.u64        scl_59411, scl_42540;
              mov.u64        scl_59412, scl_42541;
              bra.uni        merge_61833;
else_61832:
              mov.u64        scl_59410, scl_42539;
              mov.u64        scl_59411, scl_42540;
              mov.u64        scl_59412, scl_42541;
merge_61833:
              mov.b32        scl_42678_0, scl_42524_0;
              mov.b32        scl_42678_1, scl_42524_1;
              mov.b32        scl_42678_2, scl_42524_2;
              mov.u64        scl_42680, scl_59410;
              mov.u64        scl_42681, scl_59411;
              mov.u64        scl_42682, scl_59412;
merge_61817:
              mov.b32        scl_42668_0, scl_42678_0;
              mov.b32        scl_42668_1, scl_42678_1;
              mov.b32        scl_42668_2, scl_42678_2;
              mov.u64        scl_42670, scl_42680;
              mov.u64        scl_42671, scl_42681;
              mov.u64        scl_42672, scl_42682;
              bra.uni        merge_61814;
else_61813:
              mov.b32        scl_42668_0, scl_42524_0;
              mov.b32        scl_42668_1, scl_42524_1;
              mov.b32        scl_42668_2, scl_42524_2;
              mov.u64        scl_42670, scl_42539;
              mov.u64        scl_42671, scl_42540;
              mov.u64        scl_42672, scl_42541;
merge_61814:
              .reg .f32      temp_59418_0, temp_59418_1, temp_59418_2;
              mul.ftz.f32    temp_59418_0, scl_42668_0, scl_41504_0;
              mul.ftz.f32    temp_59418_1, scl_42668_1, scl_41504_1;
              mul.ftz.f32    temp_59418_2, scl_42668_2, scl_41504_2;
              .reg .f32      temp_59419_0, temp_59419_1, temp_59419_2;
              mul.ftz.f32    temp_59419_0, temp_59418_0, tmp_59715_0_0;
              mul.ftz.f32    temp_59419_1, temp_59418_1, tmp_59715_0_1;
              mul.ftz.f32    temp_59419_2, temp_59418_2, tmp_59715_0_2;
              mov.u64        scl_41414, scl_42670;
              mov.u64        scl_41415, scl_42671;
              mov.u64        scl_41416, scl_42672;
              mov.b32        scl_41412_0, temp_59419_0;
              mov.b32        scl_41412_1, temp_59419_1;
              mov.b32        scl_41412_2, temp_59419_2;
              mov.b32        scl_41413, scl_41530;
merge_60060:
              mov.u64        scl_41142, scl_41414;
              mov.u64        scl_41143, scl_41415;
              mov.u64        scl_41144, scl_41416;
              mov.b32        scl_41140_0, scl_41412_0;
              mov.b32        scl_41140_1, scl_41412_1;
              mov.b32        scl_41140_2, scl_41412_2;
              mov.b32        scl_41141, scl_41413;
merge_59864:
              .reg.s32       temp_59421;
              .reg.pred      pred_61845;
              testp.notanumber.f32 pred_61845, scl_41140_0;
              selp.s32       temp_59421, -1, 0, pred_61845;
              .reg.s32       temp_59423;
              .reg.pred      pred_61846;
              testp.notanumber.f32 pred_61846, scl_41140_1;
              selp.s32       temp_59423, -1, 0, pred_61846;
              .reg.s32       temp_59424;
              or.b32         temp_59424, temp_59421, temp_59423;
              .reg.s32       temp_59426;
              .reg.pred      pred_61847;
              testp.notanumber.f32 pred_61847, scl_41140_2;
              selp.s32       temp_59426, -1, 0, pred_61847;
              .reg.s32       temp_59427;
              or.b32         temp_59427, temp_59424, temp_59426;
              .reg .f32      color_59429_0, color_59429_1, color_59429_2;
              .reg.pred      temp_59427_61848;
              setp.ne.s32    temp_59427_61848, 0, temp_59427;
              selp.f32       color_59429_0, 0F00000000, scl_41140_0, temp_59427_61848;
              selp.f32       color_59429_1, 0F00000000, scl_41140_1, temp_59427_61848;
              selp.f32       color_59429_2, 0F00000000, scl_41140_2, temp_59427_61848;
              .reg.s32       temp_59430;
              .reg.pred      pred_61849;
              testp.notanumber.f32 pred_61849, scl_41141;
              selp.s32       temp_59430, -1, 0, pred_61849;
              .reg.f32       alpha_59431;
              .reg.pred      temp_59430_61850;
              setp.ne.s32    temp_59430_61850, 0, temp_59430;
              selp.f32       alpha_59431, 0F3f800000, scl_41141, temp_59430_61850;
              .reg.u64       tmp_61851;
              ld.param.u64   tmp_61851, [res_59442];
              st.u64         [tmp_61851], scl_41142;
              st.u64         [tmp_61851+8], scl_41143;
              st.u64         [tmp_61851+16], scl_41144;
              st.v2.f32      [tmp_61851+32], {color_59429_0, color_59429_1};
              st.f32         [tmp_61851+40], color_59429_2;
              st.f32         [tmp_61851+48], alpha_59431;
}

.visible .global .u64 g_main = stlr_main;

