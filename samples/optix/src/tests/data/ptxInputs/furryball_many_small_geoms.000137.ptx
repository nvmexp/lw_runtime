//

// Generated by LWPU LWVM Compiler

//

// Compiler Build ID: CL-19324574

// Lwca compilation tools, release 7.0, V7.0.27

// Based on LLVM 3.4svn

//



.version 4.2

.target sm_20

.address_size 64



	// .globl	_Z9TexSampleib6float2

.global .align 4 .f32 materialGamma;

.global .align 4 .f32 lightsGamma;

.global .align 4 .b8 opt_ray[36];

.global .align 16 .b8 opt_prdIL[400];

.global .align 4 .b8 opt_prdFast[56];

.global .align 16 .b8 opt_prdShadow[144];

.global .align 4 .b8 opt_prdAO[108];

.global .align 16 .b8 opt_prdBP[112];

.global .align 4 .u32 effect;

.global .align 4 .u32 shadow_ray_type;

.global .align 4 .u32 transparent_shadow_ray_type;

.global .align 4 .u32 fast_ray_type;

.global .align 4 .u32 totalLightsCount;

.global .align 4 .f32 wireframeSize;

.global .align 4 .u32 wireframeType;

.global .align 4 .u32 wireframeForceEnabled;

.global .align 4 .u32 instGeometryID;

.global .align 4 .u32 instLinkedLightsBuffID;

.global .align 4 .u32 instObjectSelected;

.global .align 4 .b8 geomData[32];

.global .align 8 .b8 out_attributes[204];

.global .align 1 .b8 textureSampleBuff[1];

.global .align 1 .b8 vertexBuffer[1];

.global .align 1 .b8 indexBuffer[1];

.global .align 4 .u32 instComponentsBuffId;

.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;

.global .align 8 .b8 _ZTVSt14error_category[72];

.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];

.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];

.global .align 8 .b8 _ZTVSt22_System_error_category[72];

.global .align 4 .b8 _ZN21rti_internal_typeinfo13materialGammaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo11lightsGammaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo7opt_rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo9opt_prdILE[8] = {82, 97, 121, 0, 144, 1, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo11opt_prdFastE[8] = {82, 97, 121, 0, 56, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo13opt_prdShadowE[8] = {82, 97, 121, 0, 144, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo9opt_prdAOE[8] = {82, 97, 121, 0, 108, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo9opt_prdBPE[8] = {82, 97, 121, 0, 112, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo6effectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo15shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo27transparent_shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo13fast_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo16totalLightsCountE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo13wireframeSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo13wireframeTypeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo21wireframeForceEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo14instGeometryIDE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo22instLinkedLightsBuffIDE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo18instObjectSelectedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo8geomDataE[8] = {82, 97, 121, 0, 32, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo14out_attributesE[8] = {82, 97, 121, 0, 204, 0, 0, 0};

.global .align 4 .b8 _ZN21rti_internal_typeinfo20instComponentsBuffIdE[8] = {82, 97, 121, 0, 4, 0, 0, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13materialGammaE[6] = {102, 108, 111, 97, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename11lightsGammaE[6] = {102, 108, 111, 97, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename7opt_rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};

.global .align 1 .b8 _ZN21rti_internal_typename9opt_prdILE[19] = {80, 101, 114, 76, 105, 103, 104, 116, 105, 110, 103, 82, 97, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename11opt_prdFastE[15] = {80, 101, 114, 70, 97, 115, 116, 82, 97, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13opt_prdShadowE[17] = {80, 101, 114, 83, 104, 97, 100, 111, 119, 82, 97, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename9opt_prdAOE[13] = {80, 101, 114, 65, 79, 82, 97, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename9opt_prdBPE[22] = {80, 101, 114, 66, 97, 115, 105, 99, 80, 97, 115, 115, 101, 115, 82, 97, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename6effectE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename15shadow_ray_typeE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename27transparent_shadow_ray_typeE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13fast_ray_typeE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename16totalLightsCountE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13wireframeSizeE[6] = {102, 108, 111, 97, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename13wireframeTypeE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename21wireframeForceEnabledE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename14instGeometryIDE[4] = {105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename22instLinkedLightsBuffIDE[4] = {105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename18instObjectSelectedE[5] = {117, 105, 110, 116, 0};

.global .align 1 .b8 _ZN21rti_internal_typename8geomDataE[19] = {67, 111, 109, 109, 111, 110, 71, 101, 111, 109, 101, 116, 114, 121, 68, 97, 116, 97, 0};

.global .align 1 .b8 _ZN21rti_internal_typename14out_attributesE[25] = {67, 111, 109, 109, 111, 110, 71, 101, 111, 109, 101, 116, 114, 121, 65, 116, 116, 114, 105, 98, 117, 116, 101, 115, 0};

.global .align 1 .b8 _ZN21rti_internal_typename20instComponentsBuffIdE[4] = {105, 110, 116, 0};

.global .align 4 .u32 _ZN21rti_internal_typeenum13materialGammaE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum11lightsGammaE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum7opt_rayE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum9opt_prdILE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum11opt_prdFastE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum13opt_prdShadowE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum9opt_prdAOE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum9opt_prdBPE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum6effectE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum15shadow_ray_typeE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum27transparent_shadow_ray_typeE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum13fast_ray_typeE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum16totalLightsCountE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum13wireframeSizeE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum13wireframeTypeE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum21wireframeForceEnabledE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum14instGeometryIDE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum22instLinkedLightsBuffIDE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum18instObjectSelectedE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum8geomDataE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum14out_attributesE = 4919;

.global .align 4 .u32 _ZN21rti_internal_typeenum20instComponentsBuffIdE = 4919;

.global .align 1 .b8 _ZN21rti_internal_semantic13materialGammaE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic11lightsGammaE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic7opt_rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic9opt_prdILE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic11opt_prdFastE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic13opt_prdShadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic9opt_prdAOE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic9opt_prdBPE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic6effectE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic15shadow_ray_typeE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic27transparent_shadow_ray_typeE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic13fast_ray_typeE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic16totalLightsCountE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic13wireframeSizeE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic13wireframeTypeE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic21wireframeForceEnabledE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic14instGeometryIDE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic22instLinkedLightsBuffIDE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic18instObjectSelectedE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic8geomDataE[1];

.global .align 1 .b8 _ZN21rti_internal_semantic14out_attributesE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 116, 116, 95, 97, 116, 116, 114, 105, 98, 117, 116, 101, 115, 0};

.global .align 1 .b8 _ZN21rti_internal_semantic20instComponentsBuffIdE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13materialGammaE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation11lightsGammaE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation7opt_rayE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation9opt_prdILE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation11opt_prdFastE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13opt_prdShadowE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation9opt_prdAOE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation9opt_prdBPE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation6effectE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation15shadow_ray_typeE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation27transparent_shadow_ray_typeE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13fast_ray_typeE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation16totalLightsCountE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13wireframeSizeE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation13wireframeTypeE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation21wireframeForceEnabledE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation14instGeometryIDE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation22instLinkedLightsBuffIDE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation18instObjectSelectedE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation8geomDataE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation14out_attributesE[1];

.global .align 1 .b8 _ZN23rti_internal_annotation20instComponentsBuffIdE[1];



.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z9TexSampleib6float2(

	.param .b32 _Z9TexSampleib6float2_param_0,

	.param .b32 _Z9TexSampleib6float2_param_1,

	.param .align 8 .b8 _Z9TexSampleib6float2_param_2[8]

)

{

	.reg .pred 	%p<2>;

	.reg .s16 	%rs<7>;

	.reg .f32 	%f<33>;

	.reg .s32 	%r<10>;





	ld.param.u32 	%r1, [_Z9TexSampleib6float2_param_0];

	ld.param.f32 	%f1, [_Z9TexSampleib6float2_param_2];

	ld.param.f32 	%f15, [_Z9TexSampleib6float2_param_2+4];

	mov.f32 	%f16, 0f3F800000;

	sub.ftz.f32 	%f2, %f16, %f15;

	ld.param.s8 	%rs1, [_Z9TexSampleib6float2_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB0_2;



	mov.u32 	%r7, 2;

	mov.f32 	%f20, 0f00000000;

	// inline asm

	call (%r2, %r3, %r4, %r5), _rt_texture_get_u_id, (%r1, %r7, %f1, %f2, %f20, %f20);

	// inline asm

	cvt.u16.u32	%rs3, %r2;

	cvt.u16.u32	%rs4, %r3;

	cvt.u16.u32	%rs5, %r4;

	cvt.u16.u32	%rs6, %r5;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs3;

	cvt.f32.f16 	%f29, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs4;

	cvt.f32.f16 	%f30, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs5;

	cvt.f32.f16 	%f31, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs6;

	cvt.f32.f16 	%f32, %temp;

	}

	bra.uni 	BB0_3;



BB0_2:

	mov.u32 	%r9, 2;

	mov.f32 	%f28, 0f00000000;

	// inline asm

	call (%f21, %f22, %f23, %f24), _rt_texture_get_f_id, (%r1, %r9, %f1, %f2, %f28, %f28);

	// inline asm

	mov.f32 	%f32, %f24;

	mov.f32 	%f31, %f23;

	mov.f32 	%f30, %f22;

	mov.f32 	%f29, %f21;



BB0_3:

	st.param.f32	[func_retval0+0], %f29;

	st.param.f32	[func_retval0+4], %f30;

	st.param.f32	[func_retval0+8], %f31;

	st.param.f32	[func_retval0+12], %f32;

	ret;

}



	// .globl	_ZN5optix19rt_texture_get_u_idEiiffff

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_u_idEiiffff(

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_0,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_1,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_2,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_3,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_4,

	.param .b32 _ZN5optix19rt_texture_get_u_idEiiffff_param_5

)

{

	.reg .f32 	%f<5>;

	.reg .s32 	%r<7>;





	ld.param.u32 	%r5, [_ZN5optix19rt_texture_get_u_idEiiffff_param_0];

	ld.param.u32 	%r6, [_ZN5optix19rt_texture_get_u_idEiiffff_param_1];

	ld.param.f32 	%f1, [_ZN5optix19rt_texture_get_u_idEiiffff_param_2];

	ld.param.f32 	%f2, [_ZN5optix19rt_texture_get_u_idEiiffff_param_3];

	ld.param.f32 	%f3, [_ZN5optix19rt_texture_get_u_idEiiffff_param_4];

	ld.param.f32 	%f4, [_ZN5optix19rt_texture_get_u_idEiiffff_param_5];

	// inline asm

	call (%r1, %r2, %r3, %r4), _rt_texture_get_u_id, (%r5, %r6, %f1, %f2, %f3, %f4);

	// inline asm

	st.param.b32	[func_retval0+0], %r1;

	st.param.b32	[func_retval0+4], %r2;

	st.param.b32	[func_retval0+8], %r3;

	st.param.b32	[func_retval0+12], %r4;

	ret;

}



	// .globl	_ZN5optix19rt_texture_get_f_idEiiffff

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,

	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5

)

{

	.reg .f32 	%f<9>;

	.reg .s32 	%r<3>;





	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];

	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];

	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];

	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];

	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];

	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];

	// inline asm

	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);

	// inline asm

	st.param.f32	[func_retval0+0], %f1;

	st.param.f32	[func_retval0+4], %f2;

	st.param.f32	[func_retval0+8], %f3;

	st.param.f32	[func_retval0+12], %f4;

	ret;

}



	// .globl	_Z11TexSample3Dib6float3

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z11TexSample3Dib6float3(

	.param .b32 _Z11TexSample3Dib6float3_param_0,

	.param .b32 _Z11TexSample3Dib6float3_param_1,

	.param .align 4 .b8 _Z11TexSample3Dib6float3_param_2[12]

)

{

	.reg .pred 	%p<2>;

	.reg .s16 	%rs<7>;

	.reg .f32 	%f<32>;

	.reg .s32 	%r<10>;





	ld.param.u32 	%r1, [_Z11TexSample3Dib6float3_param_0];

	ld.param.f32 	%f1, [_Z11TexSample3Dib6float3_param_2];

	ld.param.f32 	%f2, [_Z11TexSample3Dib6float3_param_2+4];

	ld.param.f32 	%f3, [_Z11TexSample3Dib6float3_param_2+8];

	ld.param.s8 	%rs1, [_Z11TexSample3Dib6float3_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB3_2;



	mov.u32 	%r7, 3;

	mov.f32 	%f19, 0f00000000;

	// inline asm

	call (%r2, %r3, %r4, %r5), _rt_texture_get_u_id, (%r1, %r7, %f1, %f2, %f3, %f19);

	// inline asm

	cvt.u16.u32	%rs3, %r2;

	cvt.u16.u32	%rs4, %r3;

	cvt.u16.u32	%rs5, %r4;

	cvt.u16.u32	%rs6, %r5;

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs3;

	cvt.f32.f16 	%f28, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs4;

	cvt.f32.f16 	%f29, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs5;

	cvt.f32.f16 	%f30, %temp;

	}

	{

	.reg .b16 %temp;

	mov.b16 	%temp, %rs6;

	cvt.f32.f16 	%f31, %temp;

	}

	bra.uni 	BB3_3;



BB3_2:

	mov.u32 	%r9, 3;

	mov.f32 	%f27, 0f00000000;

	// inline asm

	call (%f20, %f21, %f22, %f23), _rt_texture_get_f_id, (%r1, %r9, %f1, %f2, %f3, %f27);

	// inline asm

	mov.f32 	%f31, %f23;

	mov.f32 	%f30, %f22;

	mov.f32 	%f29, %f21;

	mov.f32 	%f28, %f20;



BB3_3:

	st.param.f32	[func_retval0+0], %f28;

	st.param.f32	[func_retval0+4], %f29;

	st.param.f32	[func_retval0+8], %f30;

	st.param.f32	[func_retval0+12], %f31;

	ret;

}



	// .globl	_Z12ColorBalance6float4S_S_ifbf

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12ColorBalance6float4S_S_ifbf(

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_0[16],

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_1[16],

	.param .align 16 .b8 _Z12ColorBalance6float4S_S_ifbf_param_2[16],

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_3,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_4,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_5,

	.param .b32 _Z12ColorBalance6float4S_S_ifbf_param_6

)

{

	.reg .pred 	%p<4>;

	.reg .s16 	%rs<3>;

	.reg .f32 	%f<55>;

	.reg .s32 	%r<2>;





	ld.param.f32 	%f28, [_Z12ColorBalance6float4S_S_ifbf_param_0+12];

	ld.param.f32 	%f50, [_Z12ColorBalance6float4S_S_ifbf_param_0+8];

	ld.param.f32 	%f49, [_Z12ColorBalance6float4S_S_ifbf_param_0+4];

	ld.param.f32 	%f48, [_Z12ColorBalance6float4S_S_ifbf_param_0];

	ld.param.f32 	%f32, [_Z12ColorBalance6float4S_S_ifbf_param_1+12];

	ld.param.f32 	%f31, [_Z12ColorBalance6float4S_S_ifbf_param_1+8];

	ld.param.f32 	%f30, [_Z12ColorBalance6float4S_S_ifbf_param_1+4];

	ld.param.f32 	%f29, [_Z12ColorBalance6float4S_S_ifbf_param_1];

	ld.param.f32 	%f36, [_Z12ColorBalance6float4S_S_ifbf_param_2+12];

	ld.param.f32 	%f35, [_Z12ColorBalance6float4S_S_ifbf_param_2+8];

	ld.param.f32 	%f34, [_Z12ColorBalance6float4S_S_ifbf_param_2+4];

	ld.param.f32 	%f33, [_Z12ColorBalance6float4S_S_ifbf_param_2];

	ld.param.u32 	%r1, [_Z12ColorBalance6float4S_S_ifbf_param_3];

	ld.param.f32 	%f37, [_Z12ColorBalance6float4S_S_ifbf_param_4];

	ld.param.f32 	%f38, [_Z12ColorBalance6float4S_S_ifbf_param_6];

	ld.param.s8 	%rs1, [_Z12ColorBalance6float4S_S_ifbf_param_5];

	setp.eq.s32	%p1, %r1, 0;

	@%p1 bra 	BB4_3;

	bra.uni 	BB4_1;



BB4_3:

	cvt.ftz.sat.f32.f32	%f48, %f48;

	cvt.ftz.sat.f32.f32	%f49, %f49;

	cvt.ftz.sat.f32.f32	%f50, %f50;

	bra.uni 	BB4_4;



BB4_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB4_4;



	mov.f32 	%f39, 0f40000000;

	lg2.approx.ftz.f32 	%f40, %f39;

	mul.ftz.f32 	%f41, %f40, %f37;

	ex2.approx.ftz.f32 	%f42, %f41;

	mul.ftz.f32 	%f48, %f48, %f42;

	mul.ftz.f32 	%f49, %f49, %f42;

	mul.ftz.f32 	%f50, %f50, %f42;



BB4_4:

	fma.rn.ftz.f32 	%f51, %f29, %f48, %f33;

	fma.rn.ftz.f32 	%f52, %f30, %f49, %f34;

	fma.rn.ftz.f32 	%f53, %f31, %f50, %f35;

	fma.rn.ftz.f32 	%f54, %f28, %f32, %f36;

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p3, %rs2, 0;

	@%p3 bra 	BB4_6;



	mov.f32 	%f43, 0f3F800000;

	sub.ftz.f32 	%f51, %f43, %f51;

	sub.ftz.f32 	%f52, %f43, %f52;

	sub.ftz.f32 	%f53, %f43, %f53;

	sub.ftz.f32 	%f54, %f43, %f54;



BB4_6:

	max.ftz.f32 	%f44, %f38, %f51;

	max.ftz.f32 	%f45, %f38, %f52;

	max.ftz.f32 	%f46, %f38, %f53;

	max.ftz.f32 	%f47, %f38, %f54;

	st.param.f32	[func_retval0+0], %f44;

	st.param.f32	[func_retval0+4], %f45;

	st.param.f32	[func_retval0+8], %f46;

	st.param.f32	[func_retval0+12], %f47;

	ret;

}



	// .globl	_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE

.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE(

	.param .align 8 .b8 _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0[8],

	.param .b64 _Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_1

)

{

	.reg .f32 	%f<19>;

	.reg .s64 	%rd<2>;





	ld.param.f32 	%f1, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0+4];

	ld.param.f32 	%f2, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_0];

	ld.param.u64 	%rd1, [_Z11TransformUV6float2N5optix6MatrixILj4ELj4EEE_param_1];

	ld.f32 	%f3, [%rd1];

	fma.rn.ftz.f32 	%f4, %f2, %f3, 0f00000000;

	ld.f32 	%f5, [%rd1+16];

	fma.rn.ftz.f32 	%f6, %f1, %f5, %f4;

	ld.f32 	%f7, [%rd1+32];

	fma.rn.ftz.f32 	%f8, %f7, 0f00000000, %f6;

	ld.f32 	%f9, [%rd1+48];

	add.ftz.f32 	%f10, %f8, %f9;

	ld.f32 	%f11, [%rd1+4];

	fma.rn.ftz.f32 	%f12, %f2, %f11, 0f00000000;

	ld.f32 	%f13, [%rd1+20];

	fma.rn.ftz.f32 	%f14, %f1, %f13, %f12;

	ld.f32 	%f15, [%rd1+36];

	fma.rn.ftz.f32 	%f16, %f15, 0f00000000, %f14;

	ld.f32 	%f17, [%rd1+52];

	add.ftz.f32 	%f18, %f16, %f17;

	st.param.f32	[func_retval0+0], %f10;

	st.param.f32	[func_retval0+4], %f18;

	ret;

}



	// .globl	_Z9WrapCoordfb

.visible .func  (.param .b32 func_retval0) _Z9WrapCoordfb(

	.param .b32 _Z9WrapCoordfb_param_0,

	.param .b32 _Z9WrapCoordfb_param_1

)

{

	.reg .pred 	%p<10>;

	.reg .s16 	%rs<3>;

	.reg .f32 	%f<9>;

	.reg .s32 	%r<3>;





	ld.param.f32 	%f4, [_Z9WrapCoordfb_param_0];

	cvt.rmi.ftz.f32.f32	%f5, %f4;

	sub.ftz.f32 	%f8, %f4, %f5;

	ld.param.s8 	%rs1, [_Z9WrapCoordfb_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p2, %rs2, 0;

	@%p2 bra 	BB6_5;



	cvt.rzi.ftz.s32.f32	%r1, %f4;

	mov.pred 	%p3, -1;

	and.b32  	%r2, %r1, 1;

	setp.eq.b32	%p4, %r2, 1;

	mov.pred 	%p9, %p3;

	@%p4 bra 	BB6_4;



	mov.pred 	%p5, 0;

	setp.geu.ftz.f32	%p6, %f4, 0f00000000;

	mov.pred 	%p9, %p5;

	@%p6 bra 	BB6_4;



	mov.pred 	%p9, %p3;



BB6_4:

	mov.f32 	%f6, 0f3F800000;

	sub.ftz.f32 	%f7, %f6, %f8;

	selp.f32	%f8, %f7, %f8, %p9;



BB6_5:

	st.param.f32	[func_retval0+0], %f8;

	ret;

}



	// .globl	_Z17checkLinkedLightsv

.visible .func  (.param .b32 func_retval0) _Z17checkLinkedLightsv(



)

{

	.reg .pred 	%p<7>;

	.reg .s16 	%rs<6>;

	.reg .s32 	%r<17>;

	.reg .s64 	%rd<10>;





	ld.global.u32 	%r1, [instLinkedLightsBuffID];

	mov.u32 	%r8, 1;

	mov.u32 	%r9, 4;

	// inline asm

	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_id_size_64, (%r1, %r8, %r9);

	// inline asm

	cvt.u32.u64	%r2, %rd1;

	ld.global.u32 	%r10, [totalLightsCount];

	setp.eq.s32	%p1, %r2, %r10;

	@%p1 bra 	BB7_4;



	setp.eq.s32	%p2, %r2, 0;

	mov.u32 	%r16, 0;

	mov.u16 	%rs5, 0;

	@%p2 bra 	BB7_5;



BB7_2:

	cvt.u64.u32	%rd6, %r16;

	mov.u64 	%rd9, 0;

	// inline asm

	call (%rd5), _rt_buffer_get_id_64, (%r1, %r8, %r9, %rd6, %rd9, %rd9, %rd9);

	// inline asm

	ld.global.u32 	%r4, [opt_prdShadow+76];

	ld.u32 	%r5, [%rd5];

	add.s32 	%r16, %r16, 1;

	setp.lt.u32	%p3, %r16, %r2;

	setp.ne.s32	%p4, %r4, %r5;

	and.pred  	%p5, %p3, %p4;

	@%p5 bra 	BB7_2;



	@%p4 bra 	BB7_5;



BB7_4:

	mov.u16 	%rs5, 1;



BB7_5:

	cvt.u32.u16	%r15, %rs5;

	st.param.b32	[func_retval0+0], %r15;

	ret;

}



	// .globl	_Z11GetMBVertexR6Vertexjf

.visible .func _Z11GetMBVertexR6Vertexjf(

	.param .b64 _Z11GetMBVertexR6Vertexjf_param_0,

	.param .b32 _Z11GetMBVertexR6Vertexjf_param_1,

	.param .b32 _Z11GetMBVertexR6Vertexjf_param_2

)

{

	.reg .f32 	%f<12>;

	.reg .s32 	%r<3>;

	.reg .s64 	%rd<9>;





	ld.param.u64 	%rd7, [_Z11GetMBVertexR6Vertexjf_param_0];

	ld.param.u32 	%rd3, [_Z11GetMBVertexR6Vertexjf_param_1];

	mov.u64 	%rd8, vertexBuffer;

	cvta.global.u64 	%rd2, %rd8;

	mov.u32 	%r1, 1;

	mov.u32 	%r2, 44;

	mov.u64 	%rd6, 0;

	// inline asm

	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);

	// inline asm

	ld.f32 	%f1, [%rd1];

	ld.f32 	%f2, [%rd1+4];

	ld.f32 	%f3, [%rd1+8];

	ld.f32 	%f4, [%rd1+12];

	ld.f32 	%f5, [%rd1+16];

	ld.f32 	%f6, [%rd1+20];

	ld.f32 	%f7, [%rd1+24];

	ld.f32 	%f8, [%rd1+28];

	ld.f32 	%f9, [%rd1+32];

	ld.f32 	%f10, [%rd1+36];

	ld.f32 	%f11, [%rd1+40];

	st.f32 	[%rd7+40], %f11;

	st.f32 	[%rd7+36], %f10;

	st.f32 	[%rd7+32], %f9;

	st.f32 	[%rd7+28], %f8;

	st.f32 	[%rd7+24], %f7;

	st.f32 	[%rd7+20], %f6;

	st.f32 	[%rd7+16], %f5;

	st.f32 	[%rd7+12], %f4;

	st.f32 	[%rd7+8], %f3;

	st.f32 	[%rd7+4], %f2;

	st.f32 	[%rd7], %f1;

	ret;

}



	// .globl	_Z13meshIntersecti

.visible .entry _Z13meshIntersecti(

	.param .u32 _Z13meshIntersecti_param_0

)

{

	.reg .pred 	%p<95>;

	.reg .s16 	%rs<55>;

	.reg .f32 	%f<329>;

	.reg .s32 	%r<115>;

	.reg .s64 	%rd<50>;





	ld.param.u32 	%r22, [_Z13meshIntersecti_param_0];

	ldu.global.u32 	%r23, [effect];

	mov.u16 	%rs8, 0;

	mov.f32 	%f314, 0f00000000;

	setp.ne.s32	%p3, %r23, 1;

	mov.u16 	%rs54, %rs8;

	@%p3 bra 	BB9_21;



	ldu.global.u32 	%r24, [shadow_ray_type];

	ld.global.u32 	%r1, [opt_ray+24];

	setp.eq.s32	%p4, %r1, %r24;

	ldu.global.u32 	%r25, [transparent_shadow_ray_type];

	setp.eq.s32	%p5, %r1, %r25;

	or.pred  	%p6, %p4, %p5;

	@%p6 bra 	BB9_15;

	bra.uni 	BB9_2;



BB9_15:

	mov.u64 	%rd5, opt_prdShadow;

	add.s64 	%rd6, %rd5, 16;

	ldu.global.f32 	%f314, [%rd6];

	ldu.global.u32 	%r57, [instGeometryID];

	ld.global.v2.u32 	{%r58, %r59}, [opt_prdShadow];

	setp.eq.s32	%p44, %r58, %r57;

	setp.eq.s32	%p45, %r59, %r22;

	and.pred  	%p46, %p44, %p45;

	mov.u64 	%rd7, geomData;

	add.s64 	%rd8, %rd7, 12;

	ldu.global.f32 	%f122, [%rd8];

	setp.eq.ftz.f32	%p47, %f122, 0f00000000;

	or.pred  	%p48, %p46, %p47;

	mov.u16 	%rs25, 1;

	mov.u16 	%rs54, %rs25;

	@%p48 bra 	BB9_21;



	ldu.global.u32 	%r6, [instLinkedLightsBuffID];

	mov.u32 	%r63, 1;

	mov.u32 	%r64, 4;

	// inline asm

	call (%rd9, %rd10, %rd11, %rd12), _rt_buffer_get_id_size_64, (%r6, %r63, %r64);

	// inline asm

	cvt.u32.u64	%r7, %rd9;

	ld.global.u32 	%r65, [totalLightsCount];

	setp.eq.s32	%p49, %r7, %r65;

	@%p49 bra 	BB9_20;



	setp.eq.s32	%p50, %r7, 0;

	mov.u32 	%r113, 0;

	mov.u16 	%rs48, %rs25;

	mov.u16 	%rs54, %rs48;

	@%p50 bra 	BB9_21;



BB9_18:

	cvt.u64.u32	%rd14, %r113;

	mov.u64 	%rd17, 0;

	// inline asm

	call (%rd13), _rt_buffer_get_id_64, (%r6, %r63, %r64, %rd14, %rd17, %rd17, %rd17);

	// inline asm

	ld.global.u32 	%r9, [opt_prdShadow+76];

	ld.u32 	%r10, [%rd13];

	add.s32 	%r113, %r113, 1;

	setp.lt.u32	%p51, %r113, %r7;

	setp.ne.s32	%p52, %r9, %r10;

	and.pred  	%p53, %p51, %p52;

	@%p53 bra 	BB9_18;



	mov.u16 	%rs49, %rs25;

	mov.u16 	%rs54, %rs49;

	@%p52 bra 	BB9_21;



BB9_20:

	mov.u16 	%rs54, %rs8;

	bra.uni 	BB9_21;



BB9_2:

	ldu.global.u32 	%r26, [fast_ray_type];

	setp.eq.s32	%p7, %r1, %r26;

	@%p7 bra 	BB9_9;

	bra.uni 	BB9_3;



BB9_9:

	mov.u64 	%rd3, opt_prdFast;

	add.s64 	%rd4, %rd3, 16;

	ldu.global.f32 	%f314, [%rd4];

	ldu.global.u32 	%r43, [instGeometryID];

	ld.global.u32 	%r44, [opt_prdFast];

	setp.eq.s32	%p26, %r44, %r43;

	ld.global.u32 	%r45, [opt_prdFast+4];

	setp.eq.s32	%p27, %r45, %r22;

	and.pred  	%p28, %p26, %p27;

	mov.u16 	%rs17, 1;

	mov.u16 	%rs54, %rs17;

	@%p28 bra 	BB9_21;



	ld.global.u32 	%r4, [geomData+16];

	cvt.u16.u32	%rs19, %r4;

	and.b16  	%rs20, %rs19, 255;

	setp.eq.s16	%p29, %rs20, 0;

	ld.global.u32 	%r5, [opt_prdFast+20];

	and.b32  	%r46, %r5, 1;

	setp.eq.b32	%p30, %r46, 1;

	and.pred  	%p31, %p29, %p30;

	mov.u16 	%rs44, %rs17;

	mov.u16 	%rs54, %rs44;

	@%p31 bra 	BB9_21;



	and.b32  	%r47, %r4, 65280;

	setp.eq.s32	%p32, %r47, 0;

	shr.u32 	%r48, %r5, 3;

	and.b32  	%r49, %r48, 1;

	setp.eq.b32	%p33, %r49, 1;

	and.pred  	%p34, %p32, %p33;

	mov.u16 	%rs45, %rs17;

	mov.u16 	%rs54, %rs45;

	@%p34 bra 	BB9_21;



	and.b32  	%r50, %r4, 16711680;

	setp.eq.s32	%p35, %r50, 0;

	shr.u32 	%r51, %r5, 4;

	and.b32  	%r52, %r51, 1;

	setp.eq.b32	%p36, %r52, 1;

	and.pred  	%p37, %p35, %p36;

	mov.u16 	%rs46, %rs17;

	mov.u16 	%rs54, %rs46;

	@%p37 bra 	BB9_21;



	setp.lt.u32	%p38, %r4, 16777216;

	shr.u32 	%r53, %r5, 5;

	and.b32  	%r54, %r53, 1;

	setp.eq.b32	%p39, %r54, 1;

	and.pred  	%p40, %p38, %p39;

	mov.u16 	%rs54, %rs17;

	@%p40 bra 	BB9_21;



	ld.global.u8 	%rs24, [geomData+20];

	setp.eq.s16	%p41, %rs24, 0;

	shr.u32 	%r55, %r5, 6;

	and.b32  	%r56, %r55, 1;

	setp.eq.b32	%p42, %r56, 1;

	and.pred  	%p43, %p41, %p42;

	selp.u16	%rs54, 1, 0, %p43;

	bra.uni 	BB9_21;



BB9_3:

	mov.u64 	%rd1, opt_prdIL;

	add.s64 	%rd2, %rd1, 88;

	ldu.global.f32 	%f314, [%rd2];

	ldu.global.u32 	%r27, [instGeometryID];

	ld.global.v2.u32 	{%r28, %r29}, [opt_prdIL];

	setp.eq.s32	%p8, %r28, %r27;

	setp.eq.s32	%p9, %r29, %r22;

	and.pred  	%p10, %p8, %p9;

	mov.u16 	%rs9, 1;

	mov.u16 	%rs54, %rs9;

	@%p10 bra 	BB9_21;



	ld.global.u32 	%r2, [geomData+16];

	cvt.u16.u32	%rs11, %r2;

	and.b16  	%rs12, %rs11, 255;

	setp.eq.s16	%p11, %rs12, 0;

	ld.global.u32 	%r3, [opt_prdIL+116];

	and.b32  	%r32, %r3, 1;

	setp.eq.b32	%p12, %r32, 1;

	and.pred  	%p13, %p11, %p12;

	mov.u16 	%rs40, %rs9;

	mov.u16 	%rs54, %rs40;

	@%p13 bra 	BB9_21;



	and.b32  	%r33, %r2, 65280;

	setp.eq.s32	%p14, %r33, 0;

	shr.u32 	%r34, %r3, 3;

	and.b32  	%r35, %r34, 1;

	setp.eq.b32	%p15, %r35, 1;

	and.pred  	%p16, %p14, %p15;

	mov.u16 	%rs41, %rs9;

	mov.u16 	%rs54, %rs41;

	@%p16 bra 	BB9_21;



	and.b32  	%r36, %r2, 16711680;

	setp.eq.s32	%p17, %r36, 0;

	shr.u32 	%r37, %r3, 4;

	and.b32  	%r38, %r37, 1;

	setp.eq.b32	%p18, %r38, 1;

	and.pred  	%p19, %p17, %p18;

	mov.u16 	%rs42, %rs9;

	mov.u16 	%rs54, %rs42;

	@%p19 bra 	BB9_21;



	setp.lt.u32	%p20, %r2, 16777216;

	shr.u32 	%r39, %r3, 5;

	and.b32  	%r40, %r39, 1;

	setp.eq.b32	%p21, %r40, 1;

	and.pred  	%p22, %p20, %p21;

	mov.u16 	%rs54, %rs9;

	@%p22 bra 	BB9_21;



	ld.global.u8 	%rs16, [geomData+20];

	setp.eq.s16	%p23, %rs16, 0;

	shr.u32 	%r41, %r3, 6;

	and.b32  	%r42, %r41, 1;

	setp.eq.b32	%p24, %r42, 1;

	and.pred  	%p25, %p23, %p24;

	selp.u16	%rs54, 1, 0, %p25;



BB9_21:

	mov.u16 	%rs53, %rs54;

	ld.global.u32 	%r12, [effect];

	setp.ne.s32	%p55, %r12, 0;

	@%p55 bra 	BB9_23;



	ld.global.f32 	%f314, [opt_prdAO+16];

	ld.global.u32 	%r70, [instGeometryID];

	ld.global.u32 	%r71, [opt_prdAO];

	setp.eq.s32	%p56, %r71, %r70;

	ld.global.u32 	%r72, [opt_prdAO+4];

	setp.eq.s32	%p57, %r72, %r22;

	and.pred  	%p58, %p56, %p57;

	ld.global.u8 	%rs29, [geomData+16];

	setp.eq.s16	%p59, %rs29, 0;

	or.pred  	%p60, %p58, %p59;

	selp.b16	%rs53, 1, %rs53, %p60;



BB9_23:

	mov.u16 	%rs52, %rs53;

	setp.ne.s32	%p61, %r12, 2;

	@%p61 bra 	BB9_25;



	ld.global.f32 	%f314, [opt_prdBP+32];

	ld.global.u32 	%r73, [instGeometryID];

	ld.global.v2.u32 	{%r74, %r75}, [opt_prdBP];

	setp.eq.s32	%p62, %r74, %r73;

	setp.eq.s32	%p63, %r75, %r22;

	and.pred  	%p64, %p62, %p63;

	ld.global.u8 	%rs30, [geomData+16];

	setp.eq.s16	%p65, %rs30, 0;

	or.pred  	%p66, %p64, %p65;

	selp.b16	%rs52, 1, %rs52, %p66;



BB9_25:

	and.b16  	%rs31, %rs52, 1;

	setp.eq.b16	%p67, %rs31, 1;

	@%p67 bra 	BB9_51;



	cvt.s64.s32	%rd20, %r22;

	mov.u64 	%rd42, indexBuffer;

	cvta.global.u64 	%rd19, %rd42;

	mov.u32 	%r84, 1;

	mov.u32 	%r79, 16;

	mov.u64 	%rd41, 0;

	// inline asm

	call (%rd18), _rt_buffer_get_64, (%rd19, %r84, %r79, %rd20, %rd41, %rd41, %rd41);

	// inline asm

	ld.v4.u32 	{%r86, %r87, %r88, %r89}, [%rd18];

	cvt.u64.u32	%rd26, %r86;

	mov.u64 	%rd43, vertexBuffer;

	cvta.global.u64 	%rd25, %rd43;

	mov.u32 	%r85, 44;

	// inline asm

	call (%rd24), _rt_buffer_get_64, (%rd25, %r84, %r85, %rd26, %rd41, %rd41, %rd41);

	// inline asm

	ld.f32 	%f19, [%rd24+40];

	ld.f32 	%f18, [%rd24+36];

	ld.f32 	%f17, [%rd24+32];

	ld.f32 	%f16, [%rd24+28];

	ld.f32 	%f15, [%rd24+24];

	ld.f32 	%f14, [%rd24+20];

	ld.f32 	%f13, [%rd24+16];

	ld.f32 	%f12, [%rd24+12];

	ld.f32 	%f11, [%rd24+8];

	ld.f32 	%f10, [%rd24+4];

	ld.f32 	%f9, [%rd24];

	cvt.u64.u32	%rd32, %r87;

	// inline asm

	call (%rd30), _rt_buffer_get_64, (%rd25, %r84, %r85, %rd32, %rd41, %rd41, %rd41);

	// inline asm

	ld.f32 	%f30, [%rd30+40];

	ld.f32 	%f29, [%rd30+36];

	ld.f32 	%f28, [%rd30+32];

	ld.f32 	%f27, [%rd30+28];

	ld.f32 	%f26, [%rd30+24];

	ld.f32 	%f25, [%rd30+20];

	ld.f32 	%f24, [%rd30+16];

	ld.f32 	%f23, [%rd30+12];

	ld.f32 	%f22, [%rd30+8];

	ld.f32 	%f21, [%rd30+4];

	ld.f32 	%f20, [%rd30];

	cvt.u64.u32	%rd38, %r88;

	// inline asm

	call (%rd36), _rt_buffer_get_64, (%rd25, %r84, %r85, %rd38, %rd41, %rd41, %rd41);

	// inline asm

	ld.f32 	%f41, [%rd36+40];

	ld.f32 	%f40, [%rd36+36];

	ld.f32 	%f39, [%rd36+32];

	ld.f32 	%f38, [%rd36+28];

	ld.f32 	%f37, [%rd36+24];

	ld.f32 	%f36, [%rd36+20];

	ld.f32 	%f35, [%rd36+16];

	ld.f32 	%f34, [%rd36+12];

	ld.f32 	%f33, [%rd36+8];

	ld.f32 	%f32, [%rd36+4];

	ld.f32 	%f31, [%rd36];

	sub.ftz.f32 	%f125, %f20, %f9;

	sub.ftz.f32 	%f126, %f21, %f10;

	sub.ftz.f32 	%f127, %f22, %f11;

	sub.ftz.f32 	%f128, %f9, %f31;

	sub.ftz.f32 	%f129, %f10, %f32;

	sub.ftz.f32 	%f130, %f11, %f33;

	mul.ftz.f32 	%f131, %f126, %f130;

	mul.ftz.f32 	%f132, %f127, %f129;

	sub.ftz.f32 	%f315, %f131, %f132;

	mul.ftz.f32 	%f133, %f127, %f128;

	mul.ftz.f32 	%f134, %f125, %f130;

	sub.ftz.f32 	%f316, %f133, %f134;

	mul.ftz.f32 	%f135, %f125, %f129;

	mul.ftz.f32 	%f136, %f126, %f128;

	sub.ftz.f32 	%f317, %f135, %f136;

	ld.global.f32 	%f45, [opt_ray+12];

	ld.global.f32 	%f46, [opt_ray+16];

	mul.ftz.f32 	%f137, %f46, %f316;

	fma.rn.ftz.f32 	%f138, %f45, %f315, %f137;

	ld.global.f32 	%f47, [opt_ray+20];

	fma.rn.ftz.f32 	%f48, %f47, %f317, %f138;

	rcp.approx.ftz.f32 	%f49, %f48;

	ld.global.f32 	%f139, [opt_ray];

	sub.ftz.f32 	%f50, %f9, %f139;

	ld.global.f32 	%f140, [opt_ray+4];

	sub.ftz.f32 	%f51, %f10, %f140;

	ld.global.f32 	%f141, [opt_ray+8];

	sub.ftz.f32 	%f52, %f11, %f141;

	mul.ftz.f32 	%f142, %f316, %f51;

	fma.rn.ftz.f32 	%f143, %f315, %f50, %f142;

	fma.rn.ftz.f32 	%f144, %f317, %f52, %f143;

	mul.ftz.f32 	%f53, %f49, %f144;

	ld.global.f32 	%f145, [opt_ray+32];

	setp.lt.ftz.f32	%p69, %f53, %f145;

	ld.global.f32 	%f146, [opt_ray+28];

	setp.gt.ftz.f32	%p70, %f53, %f146;

	and.pred  	%p71, %p69, %p70;

	mov.pred 	%p94, 0;

	mov.f32 	%f319, 0f00000000;

	mov.f32 	%f318, %f319;

	@!%p71 bra 	BB9_29;

	bra.uni 	BB9_27;



BB9_27:

	mul.ftz.f32 	%f148, %f51, %f47;

	mul.ftz.f32 	%f149, %f52, %f46;

	sub.ftz.f32 	%f54, %f148, %f149;

	mul.ftz.f32 	%f150, %f50, %f47;

	mul.ftz.f32 	%f151, %f52, %f45;

	sub.ftz.f32 	%f55, %f151, %f150;

	mul.ftz.f32 	%f152, %f51, %f45;

	mul.ftz.f32 	%f153, %f50, %f46;

	sub.ftz.f32 	%f56, %f153, %f152;

	mul.ftz.f32 	%f156, %f129, %f55;

	fma.rn.ftz.f32 	%f157, %f128, %f54, %f156;

	fma.rn.ftz.f32 	%f57, %f130, %f56, %f157;

	mul.ftz.f32 	%f318, %f49, %f57;

	setp.ltu.ftz.f32	%p73, %f318, 0f00000000;

	@%p73 bra 	BB9_29;



	sub.ftz.f32 	%f313, %f22, %f11;

	sub.ftz.f32 	%f312, %f20, %f9;

	sub.ftz.f32 	%f311, %f21, %f10;

	mul.ftz.f32 	%f161, %f311, %f55;

	fma.rn.ftz.f32 	%f162, %f312, %f54, %f161;

	fma.rn.ftz.f32 	%f164, %f313, %f56, %f162;

	mul.ftz.f32 	%f319, %f49, %f164;

	neg.ftz.f32 	%f315, %f315;

	neg.ftz.f32 	%f316, %f316;

	neg.ftz.f32 	%f317, %f317;

	add.ftz.f32 	%f165, %f57, %f164;

	mul.ftz.f32 	%f166, %f48, %f165;

	setp.ge.ftz.f32	%p74, %f319, 0f00000000;

	mul.ftz.f32 	%f167, %f48, %f48;

	setp.le.ftz.f32	%p75, %f166, %f167;

	and.pred  	%p94, %p75, %p74;



BB9_29:

	@!%p94 bra 	BB9_51;

	bra.uni 	BB9_30;



BB9_30:

	// inline asm

	call (%r90), _rt_potential_intersection, (%f53);

	// inline asm

	setp.eq.s32	%p76, %r90, 0;

	@%p76 bra 	BB9_51;



	mov.u32 	%r110, 1;

	mov.f32 	%f169, 0f3F800000;

	sub.ftz.f32 	%f170, %f169, %f318;

	sub.ftz.f32 	%f68, %f170, %f319;

	mov.f32 	%f171, 0f00000000;

	st.global.v2.f32 	[out_attributes], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+16], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+8], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+24], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+40], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+32], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+48], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+64], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+56], {%f171, %f171};

	mov.u32 	%r114, 0;

	st.global.u32 	[out_attributes+80], %r114;

	st.global.v2.f32 	[out_attributes+72], {%f171, %f171};

	st.global.u32 	[out_attributes+84], %r114;

	st.global.u32 	[out_attributes+88], %r114;

	st.global.f32 	[out_attributes+92], %f314;

	st.global.v2.f32 	[out_attributes+96], {%f171, %f171};

	st.global.v2.f32 	[out_attributes+104], {%f171, %f169};

	st.global.v2.f32 	[out_attributes+112], {%f169, %f169};

	st.global.v2.f32 	[out_attributes+120], {%f169, %f171};

	st.global.v2.f32 	[out_attributes+128], {%f169, %f171};

	st.global.u32 	[out_attributes+140], %r114;

	st.global.u32 	[out_attributes+136], %r114;

	mov.u32 	%r92, 1065353216;

	st.global.u32 	[out_attributes+148], %r92;

	st.global.u32 	[out_attributes+144], %r114;

	st.global.u32 	[out_attributes+152], %r114;

	st.global.v2.f32 	[out_attributes+160], {%f169, %f171};

	st.global.v2.f32 	[out_attributes+168], {%f169, %f171};

	st.global.u32 	[out_attributes+176], %r114;

	mul.ftz.f32 	%f172, %f12, %f68;

	mul.ftz.f32 	%f173, %f13, %f68;

	mul.ftz.f32 	%f174, %f14, %f68;

	fma.rn.ftz.f32 	%f175, %f23, %f318, %f172;

	fma.rn.ftz.f32 	%f176, %f24, %f318, %f173;

	fma.rn.ftz.f32 	%f177, %f25, %f318, %f174;

	fma.rn.ftz.f32 	%f178, %f34, %f319, %f175;

	fma.rn.ftz.f32 	%f179, %f35, %f319, %f176;

	fma.rn.ftz.f32 	%f180, %f36, %f319, %f177;

	mul.ftz.f32 	%f181, %f179, %f179;

	fma.rn.ftz.f32 	%f182, %f178, %f178, %f181;

	fma.rn.ftz.f32 	%f183, %f180, %f180, %f182;

	sqrt.approx.ftz.f32 	%f184, %f183;

	rcp.approx.ftz.f32 	%f185, %f184;

	mul.ftz.f32 	%f186, %f179, %f185;

	mul.ftz.f32 	%f187, %f178, %f185;

	st.global.v2.f32 	[out_attributes+144], {%f187, %f186};

	mul.ftz.f32 	%f188, %f180, %f185;

	st.global.v2.f32 	[out_attributes+152], {%f188, %f171};

	st.global.u32 	[out_attributes+180], %r114;

	st.global.v2.u32 	[out_attributes+184], {%r114, %r114};

	st.global.u32 	[out_attributes+192], %r110;

	mul.ftz.f32 	%f189, %f15, %f68;

	mul.ftz.f32 	%f190, %f16, %f68;

	mul.ftz.f32 	%f191, %f17, %f68;

	fma.rn.ftz.f32 	%f192, %f26, %f318, %f189;

	fma.rn.ftz.f32 	%f193, %f27, %f318, %f190;

	fma.rn.ftz.f32 	%f194, %f28, %f318, %f191;

	fma.rn.ftz.f32 	%f195, %f37, %f319, %f192;

	fma.rn.ftz.f32 	%f196, %f38, %f319, %f193;

	fma.rn.ftz.f32 	%f197, %f39, %f319, %f194;

	mul.ftz.f32 	%f198, %f196, %f196;

	fma.rn.ftz.f32 	%f199, %f195, %f195, %f198;

	fma.rn.ftz.f32 	%f200, %f197, %f197, %f199;

	sqrt.approx.ftz.f32 	%f201, %f200;

	rcp.approx.ftz.f32 	%f202, %f201;

	mul.ftz.f32 	%f203, %f197, %f202;

	mul.ftz.f32 	%f204, %f196, %f202;

	mul.ftz.f32 	%f205, %f195, %f202;

	st.global.v2.f32 	[out_attributes+168], {%f205, %f204};

	st.global.f32 	[out_attributes+176], %f203;

	mov.u16 	%rs32, 0;

	st.global.v4.u8 	[out_attributes+196], {%rs32, %rs32, %rs32, %rs32};

	st.global.v2.u8 	[out_attributes+200], {%rs32, %rs32};

	mov.u16 	%rs33, 1;

	st.global.u8 	[out_attributes+202], %rs33;

	mul.ftz.f32 	%f206, %f18, %f68;

	mul.ftz.f32 	%f207, %f19, %f68;

	fma.rn.ftz.f32 	%f208, %f29, %f318, %f206;

	fma.rn.ftz.f32 	%f209, %f30, %f318, %f207;

	fma.rn.ftz.f32 	%f210, %f40, %f319, %f208;

	fma.rn.ftz.f32 	%f211, %f41, %f319, %f209;

	st.global.f32 	[out_attributes+72], %f210;

	st.global.f32 	[out_attributes+76], %f211;

	st.global.u32 	[out_attributes+80], %r114;

	mul.ftz.f32 	%f212, %f316, %f316;

	fma.rn.ftz.f32 	%f213, %f315, %f315, %f212;

	fma.rn.ftz.f32 	%f214, %f317, %f317, %f213;

	sqrt.approx.ftz.f32 	%f215, %f214;

	rcp.approx.ftz.f32 	%f216, %f215;

	mul.ftz.f32 	%f69, %f315, %f216;

	mul.ftz.f32 	%f70, %f316, %f216;

	mul.ftz.f32 	%f71, %f317, %f216;

	st.global.f32 	[out_attributes+156], %f69;

	st.global.f32 	[out_attributes+160], %f70;

	st.global.f32 	[out_attributes+164], %f71;

	ld.global.u32 	%r17, [effect];

	setp.ne.s32	%p77, %r17, 0;

	@%p77 bra 	BB9_33;



	ld.global.f32 	%f217, [geomData];

	ld.global.f32 	%f218, [geomData+4];

	st.global.f32 	[out_attributes+108], %f217;

	st.global.f32 	[out_attributes+112], %f218;



BB9_33:

	setp.ne.s32	%p78, %r17, 1;

	@%p78 bra 	BB9_44;



	ld.global.u32 	%r98, [instLinkedLightsBuffID];

	st.global.u32 	[out_attributes+180], %r98;

	ld.global.f32 	%f251, [geomData+12];

	ld.global.f32 	%f252, [geomData+8];

	st.global.f32 	[out_attributes+120], %f251;

	st.global.f32 	[out_attributes+116], %f252;

	ld.global.u8 	%rs34, [geomData+23];

	st.global.u8 	[out_attributes+197], %rs34;

	ld.global.f32 	%f253, [opt_ray+12];

	mul.ftz.f32 	%f254, %f253, %f69;

	ld.global.f32 	%f255, [opt_ray+16];

	mul.ftz.f32 	%f256, %f255, %f70;

	neg.ftz.f32 	%f257, %f256;

	sub.ftz.f32 	%f258, %f257, %f254;

	ld.global.f32 	%f259, [opt_ray+20];

	mul.ftz.f32 	%f260, %f259, %f71;

	sub.ftz.f32 	%f72, %f258, %f260;

	setp.ge.ftz.f32	%p79, %f72, 0f00000000;

	mov.u32 	%r96, 3841;

	// inline asm

	call (%f219, %f220, %f221, %f222), _rt_transform_tuple, (%r96, %f9, %f10, %f11, %f169);

	// inline asm

	div.approx.ftz.f32 	%f261, %f221, %f222;

	div.approx.ftz.f32 	%f262, %f220, %f222;

	div.approx.ftz.f32 	%f263, %f219, %f222;

	st.global.v2.f32 	[out_attributes], {%f263, %f262};

	st.global.f32 	[out_attributes+8], %f261;

	// inline asm

	call (%f227, %f228, %f229, %f230), _rt_transform_tuple, (%r96, %f20, %f21, %f22, %f169);

	// inline asm

	div.approx.ftz.f32 	%f264, %f227, %f230;

	st.global.f32 	[out_attributes+12], %f264;

	div.approx.ftz.f32 	%f265, %f228, %f230;

	div.approx.ftz.f32 	%f266, %f229, %f230;

	st.global.f32 	[out_attributes+20], %f266;

	st.global.f32 	[out_attributes+16], %f265;

	// inline asm

	call (%f235, %f236, %f237, %f238), _rt_transform_tuple, (%r96, %f31, %f32, %f33, %f169);

	// inline asm

	div.approx.ftz.f32 	%f267, %f237, %f238;

	div.approx.ftz.f32 	%f268, %f236, %f238;

	div.approx.ftz.f32 	%f269, %f235, %f238;

	st.global.v2.f32 	[out_attributes+24], {%f269, %f268};

	st.global.f32 	[out_attributes+32], %f267;

	mov.u32 	%r97, 7937;

	// inline asm

	call (%f243, %f244, %f245, %f246), _rt_transform_tuple, (%r97, %f12, %f13, %f14, %f171);

	// inline asm

	mov.f32 	%f321, %f243;

	mov.f32 	%f322, %f244;

	@%p79 bra 	BB9_36;

	bra.uni 	BB9_35;



BB9_36:

	mov.f32 	%f320, %f245;

	bra.uni 	BB9_37;



BB9_35:

	neg.ftz.f32 	%f78, %f243;

	mov.f32 	%f321, %f78;

	neg.ftz.f32 	%f79, %f244;

	mov.f32 	%f322, %f79;

	neg.ftz.f32 	%f320, %f245;



BB9_37:

	mul.ftz.f32 	%f278, %f322, %f322;

	fma.rn.ftz.f32 	%f279, %f321, %f321, %f278;

	fma.rn.ftz.f32 	%f280, %f320, %f320, %f279;

	sqrt.approx.ftz.f32 	%f281, %f280;

	rcp.approx.ftz.f32 	%f282, %f281;

	mul.ftz.f32 	%f283, %f321, %f282;

	st.global.f32 	[out_attributes+36], %f283;

	mul.ftz.f32 	%f284, %f322, %f282;

	mul.ftz.f32 	%f285, %f320, %f282;

	st.global.f32 	[out_attributes+44], %f285;

	st.global.f32 	[out_attributes+40], %f284;

	// inline asm

	call (%f270, %f271, %f272, %f273), _rt_transform_tuple, (%r97, %f23, %f24, %f25, %f171);

	// inline asm

	mov.f32 	%f324, %f270;

	mov.f32 	%f325, %f271;

	@%p79 bra 	BB9_39;

	bra.uni 	BB9_38;



BB9_39:

	mov.f32 	%f323, %f272;

	bra.uni 	BB9_40;



BB9_38:

	neg.ftz.f32 	%f94, %f270;

	mov.f32 	%f324, %f94;

	neg.ftz.f32 	%f95, %f271;

	mov.f32 	%f325, %f95;

	neg.ftz.f32 	%f323, %f272;



BB9_40:

	mul.ftz.f32 	%f294, %f325, %f325;

	fma.rn.ftz.f32 	%f295, %f324, %f324, %f294;

	fma.rn.ftz.f32 	%f296, %f323, %f323, %f295;

	sqrt.approx.ftz.f32 	%f297, %f296;

	rcp.approx.ftz.f32 	%f298, %f297;

	mul.ftz.f32 	%f299, %f323, %f298;

	mul.ftz.f32 	%f300, %f325, %f298;

	mul.ftz.f32 	%f301, %f324, %f298;

	st.global.v2.f32 	[out_attributes+48], {%f301, %f300};

	st.global.f32 	[out_attributes+56], %f299;

	// inline asm

	call (%f286, %f287, %f288, %f289), _rt_transform_tuple, (%r97, %f34, %f35, %f36, %f171);

	// inline asm

	mov.f32 	%f328, %f286;

	mov.f32 	%f327, %f287;

	@%p79 bra 	BB9_42;

	bra.uni 	BB9_41;



BB9_42:

	mov.f32 	%f326, %f288;

	bra.uni 	BB9_43;



BB9_41:

	neg.ftz.f32 	%f110, %f286;

	mov.f32 	%f328, %f110;

	neg.ftz.f32 	%f111, %f287;

	mov.f32 	%f327, %f111;

	neg.ftz.f32 	%f326, %f288;



BB9_43:

	mul.ftz.f32 	%f302, %f328, %f328;

	fma.rn.ftz.f32 	%f303, %f327, %f327, %f302;

	fma.rn.ftz.f32 	%f304, %f326, %f326, %f303;

	sqrt.approx.ftz.f32 	%f305, %f304;

	rcp.approx.ftz.f32 	%f306, %f305;

	mul.ftz.f32 	%f307, %f328, %f306;

	st.global.f32 	[out_attributes+60], %f307;

	mul.ftz.f32 	%f308, %f327, %f306;

	mul.ftz.f32 	%f309, %f326, %f306;

	st.global.f32 	[out_attributes+68], %f309;

	st.global.f32 	[out_attributes+64], %f308;



BB9_44:

	ld.param.u32 	%r111, [_Z13meshIntersecti_param_0];

	ld.global.u32 	%r101, [instGeometryID];

	st.global.v2.u32 	[out_attributes+184], {%r101, %r111};

	ld.global.u8 	%rs35, [geomData+21];

	ld.global.u8 	%rs36, [geomData+22];

	st.global.u8 	[out_attributes+196], %rs35;

	st.global.u8 	[out_attributes+198], %rs36;

	ld.global.u32 	%r18, [wireframeType];

	setp.eq.s32	%p82, %r18, 2;

	ld.global.u32 	%r102, [wireframeForceEnabled];

	setp.ne.s32	%p83, %r102, 0;

	or.pred  	%p84, %p82, %p83;

	@%p84 bra 	BB9_46;



	setp.eq.s32	%p85, %r18, 1;

	ld.global.u32 	%r103, [instObjectSelected];

	setp.ne.s32	%p86, %r103, 0;

	and.pred  	%p87, %p85, %p86;

	@!%p87 bra 	BB9_48;

	bra.uni 	BB9_46;



BB9_46:

	ld.global.f32 	%f310, [wireframeSize];

	setp.lt.ftz.f32	%p88, %f318, %f310;

	setp.lt.ftz.f32	%p89, %f319, %f310;

	or.pred  	%p90, %p88, %p89;

	setp.lt.ftz.f32	%p91, %f68, %f310;

	or.pred  	%p92, %p90, %p91;

	@!%p92 bra 	BB9_48;

	bra.uni 	BB9_47;



BB9_47:

	st.global.u8 	[out_attributes+199], %rs33;



BB9_48:

	st.global.u8 	[out_attributes+200], %rs32;

	ld.global.u32 	%r19, [instComponentsBuffId];

	setp.eq.s32	%p93, %r19, 0;

	@%p93 bra 	BB9_50;



	mov.u64 	%rd49, 0;

	mov.u32 	%r112, 1;

	cvt.u64.u32	%rd45, %r89;

	mov.u32 	%r107, 4;

	// inline asm

	call (%rd44), _rt_buffer_get_id_64, (%r19, %r112, %r107, %rd45, %rd49, %rd49, %rd49);

	// inline asm

	ld.u32 	%r114, [%rd44];



BB9_50:

	// inline asm

	call (%r108), _rt_report_intersection, (%r114);

	// inline asm



BB9_51:

	ret;

}



	// .globl	_ZN11NormalUtils9getNormalERK6float3b

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN11NormalUtils9getNormalERK6float3b(

	.param .b64 _ZN11NormalUtils9getNormalERK6float3b_param_0,

	.param .b32 _ZN11NormalUtils9getNormalERK6float3b_param_1

)

{

	.reg .pred 	%p<2>;

	.reg .s16 	%rs<3>;

	.reg .f32 	%f<30>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN11NormalUtils9getNormalERK6float3b_param_0];

	ld.param.s8 	%rs1, [_ZN11NormalUtils9getNormalERK6float3b_param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB10_2;



	ld.f32 	%f27, [%rd1+8];

	ld.f32 	%f28, [%rd1+4];

	ld.f32 	%f29, [%rd1];

	bra.uni 	BB10_3;



BB10_2:

	ld.f32 	%f16, [%rd1];

	neg.ftz.f32 	%f8, %f16;

	mov.f32 	%f29, %f8;

	ld.f32 	%f17, [%rd1+4];

	neg.ftz.f32 	%f9, %f17;

	mov.f32 	%f28, %f9;

	ld.f32 	%f18, [%rd1+8];

	neg.ftz.f32 	%f27, %f18;



BB10_3:

	mul.ftz.f32 	%f19, %f29, %f29;

	fma.rn.ftz.f32 	%f20, %f28, %f28, %f19;

	fma.rn.ftz.f32 	%f21, %f27, %f27, %f20;

	sqrt.approx.ftz.f32 	%f22, %f21;

	rcp.approx.ftz.f32 	%f23, %f22;

	mul.ftz.f32 	%f24, %f29, %f23;

	mul.ftz.f32 	%f25, %f28, %f23;

	mul.ftz.f32 	%f26, %f27, %f23;

	st.param.f32	[func_retval0+0], %f24;

	st.param.f32	[func_retval0+4], %f25;

	st.param.f32	[func_retval0+8], %f26;

	ret;

}



	// .globl	_Z10meshBoundsiPN5optix4AabbE

.visible .entry _Z10meshBoundsiPN5optix4AabbE(

	.param .u32 _Z10meshBoundsiPN5optix4AabbE_param_0,

	.param .u64 _Z10meshBoundsiPN5optix4AabbE_param_1

)

{

	.reg .pred 	%p<10>;

	.reg .f32 	%f<73>;

	.reg .s32 	%r<11>;

	.reg .s64 	%rd<29>;





	ld.param.u64 	%rd2, [_Z10meshBoundsiPN5optix4AabbE_param_1];

	ld.param.s32 	%rd5, [_Z10meshBoundsiPN5optix4AabbE_param_0];

	mov.u64 	%rd27, indexBuffer;

	cvta.global.u64 	%rd4, %rd27;

	mov.u32 	%r7, 1;

	mov.u32 	%r2, 16;

	mov.u64 	%rd26, 0;

	// inline asm

	call (%rd3), _rt_buffer_get_64, (%rd4, %r7, %r2, %rd5, %rd26, %rd26, %rd26);

	// inline asm

	ld.u32 	%rd11, [%rd3];

	mov.u64 	%rd28, vertexBuffer;

	cvta.global.u64 	%rd10, %rd28;

	ld.u32 	%rd17, [%rd3+4];

	ld.u32 	%rd23, [%rd3+8];

	mov.u32 	%r8, 44;

	// inline asm

	call (%rd9), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd11, %rd26, %rd26, %rd26);

	// inline asm

	ld.f32 	%f4, [%rd9+8];

	ld.f32 	%f2, [%rd9+4];

	ld.f32 	%f1, [%rd9];

	// inline asm

	call (%rd15), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd17, %rd26, %rd26, %rd26);

	// inline asm

	ld.f32 	%f7, [%rd15+8];

	ld.f32 	%f6, [%rd15+4];

	ld.f32 	%f5, [%rd15];

	// inline asm

	call (%rd21), _rt_buffer_get_64, (%rd10, %r7, %r8, %rd23, %rd26, %rd26, %rd26);

	// inline asm

	sub.ftz.f32 	%f30, %f5, %f1;

	sub.ftz.f32 	%f31, %f6, %f2;

	sub.ftz.f32 	%f32, %f7, %f4;

	ld.f32 	%f10, [%rd21+8];

	ld.f32 	%f9, [%rd21+4];

	ld.f32 	%f8, [%rd21];

	sub.ftz.f32 	%f33, %f8, %f1;

	sub.ftz.f32 	%f34, %f9, %f2;

	sub.ftz.f32 	%f35, %f10, %f4;

	mul.ftz.f32 	%f36, %f31, %f35;

	mul.ftz.f32 	%f37, %f32, %f34;

	sub.ftz.f32 	%f38, %f36, %f37;

	mul.ftz.f32 	%f39, %f32, %f33;

	mul.ftz.f32 	%f40, %f30, %f35;

	sub.ftz.f32 	%f41, %f39, %f40;

	mul.ftz.f32 	%f42, %f30, %f34;

	mul.ftz.f32 	%f43, %f31, %f33;

	sub.ftz.f32 	%f44, %f42, %f43;

	mul.ftz.f32 	%f45, %f41, %f41;

	fma.rn.ftz.f32 	%f46, %f38, %f38, %f45;

	fma.rn.ftz.f32 	%f47, %f44, %f44, %f46;

	sqrt.approx.ftz.f32 	%f11, %f47;

	mov.f32 	%f72, 0f00000000;

	mov.f32 	%f71, %f72;

	mov.f32 	%f70, %f72;

	mov.f32 	%f69, %f72;

	mov.f32 	%f68, %f72;

	mov.f32 	%f67, %f72;

	setp.leu.ftz.f32	%p3, %f11, 0f00000000;

	@%p3 bra 	BB11_3;



	abs.ftz.f32 	%f54, %f11;

	setp.eq.ftz.f32	%p4, %f54, 0f7F800000;

	mov.f32 	%f72, 0f00000000;

	mov.f32 	%f71, %f72;

	mov.f32 	%f70, %f72;

	mov.f32 	%f69, %f72;

	mov.f32 	%f68, %f72;

	mov.f32 	%f67, %f72;

	@%p4 bra 	BB11_3;



	min.ftz.f32 	%f55, %f1, %f5;

	min.ftz.f32 	%f56, %f2, %f6;

	min.ftz.f32 	%f67, %f55, %f8;

	min.ftz.f32 	%f68, %f56, %f9;

	min.ftz.f32 	%f57, %f4, %f7;

	min.ftz.f32 	%f69, %f57, %f10;

	max.ftz.f32 	%f58, %f1, %f5;

	max.ftz.f32 	%f59, %f2, %f6;

	max.ftz.f32 	%f70, %f58, %f8;

	max.ftz.f32 	%f71, %f59, %f9;

	max.ftz.f32 	%f60, %f4, %f7;

	max.ftz.f32 	%f72, %f60, %f10;



BB11_3:

	sub.ftz.f32 	%f61, %f70, %f67;

	abs.ftz.f32 	%f62, %f61;

	setp.gt.ftz.f32	%p6, %f62, 0f3727C5AC;

	mov.pred 	%p9, -1;

	@%p6 bra 	BB11_6;



	sub.ftz.f32 	%f63, %f71, %f68;

	abs.ftz.f32 	%f64, %f63;

	setp.gt.ftz.f32	%p8, %f64, 0f3727C5AC;

	@%p8 bra 	BB11_6;



	sub.ftz.f32 	%f65, %f72, %f69;

	abs.ftz.f32 	%f66, %f65;

	setp.gt.ftz.f32	%p9, %f66, 0f3727C5AC;



BB11_6:

	cvta.to.global.u64 	%rd1, %rd2;

	@%p9 bra 	BB11_8;

	bra.uni 	BB11_7;



BB11_8:

	st.global.f32 	[%rd1], %f67;

	st.global.f32 	[%rd1+4], %f68;

	st.global.f32 	[%rd1+8], %f69;

	st.global.f32 	[%rd1+12], %f70;

	st.global.f32 	[%rd1+16], %f71;

	st.global.f32 	[%rd1+20], %f72;

	bra.uni 	BB11_9;



BB11_7:

	mov.u32 	%r9, 2096152002;

	st.global.u32 	[%rd1], %r9;

	st.global.u32 	[%rd1+8], %r9;

	st.global.u32 	[%rd1+4], %r9;

	mov.u32 	%r10, -51331646;

	st.global.u32 	[%rd1+12], %r10;

	st.global.u32 	[%rd1+16], %r10;

	st.global.u32 	[%rd1+20], %r10;



BB11_9:

	ret;

}



	// .globl	_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo(

	.param .b64 _ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_0,

	.param .align 4 .b8 _ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_1[12],

	.param .align 4 .b8 _ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_2[12],

	.param .b64 _ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_3

)

{

	.reg .pred 	%p<5>;

	.reg .s16 	%rs<2>;

	.reg .f32 	%f<106>;

	.reg .s32 	%r<16>;

	.reg .s64 	%rd<14>;





	ld.param.u64 	%rd3, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_0];

	ld.param.f32 	%f3, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_1+8];

	ld.param.f32 	%f2, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_1+4];

	ld.param.f32 	%f1, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_1];

	ld.param.f32 	%f4, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_2+8];

	ld.param.f32 	%f39, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_2+4];

	ld.param.f32 	%f38, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_2];

	ld.param.u64 	%rd4, [_ZNK11BumpMapData6SampleE6float3S0_RK11SamplerInfo_param_3];

	mov.f32 	%f105, %f3;

	mov.f32 	%f104, %f2;

	mov.f32 	%f103, %f1;

	add.s64 	%rd1, %rd3, 32;

	ld.u64 	%rd2, [%rd3+32];

	cvt.u32.u64	%r15, %rd2;

	setp.eq.s32	%p1, %r15, 0;

	@%p1 bra 	BB12_8;



	shr.u64 	%rd5, %rd2, 32;

	cvt.u32.u64	%r5, %rd5;

	mov.b32 	 %f96, %r5;

	ld.v4.f32 	{%f41, %f42, %f43, %f44}, [%rd1+-32];

	mov.f32 	%f97, %f41;

	mov.f32 	%f98, %f42;

	mov.f32 	%f99, %f43;

	ld.u32 	%r6, [%rd1+-12];

	setp.eq.s32	%p2, %r6, -1;

	ld.u32 	%r2, [%rd3+16];

	@%p2 bra 	BB12_4;



	setp.gt.u32	%p3, %r2, 6;

	@%p3 bra 	BB12_4;



	cvt.u64.u32	%rd8, %r2;

	mov.u64 	%rd13, textureSampleBuff;

	cvta.global.u64 	%rd7, %rd13;

	mov.u32 	%r7, 1;

	mov.u32 	%r8, 4;

	mov.u64 	%rd11, 0;

	// inline asm

	call (%rd6), _rt_buffer_get_64, (%rd7, %r7, %r8, %rd8, %rd11, %rd11, %rd11);

	// inline asm

	ld.u32 	%r10, [%rd1+-12];

	ld.f32 	%f45, [%rd4+20];

	ld.u32 	%r11, [%rd4+16];

	ld.u32 	%r12, [%rd4+12];

	ld.f32 	%f46, [%rd4+8];

	ld.f32 	%f47, [%rd4+4];

	ld.f32 	%f48, [%rd4];

	ld.u32 	%r9, [%rd6];

	// inline asm

	call (%rd12), _rt_callable_program_from_id_64, (%r9);

	// inline asm

	mov.u16 	%rs1, 0;

	cvt.s32.s16	%r13, %rs1;

	// Callseq Start 0

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r10;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f48;

	st.param.f32	[param1+4], %f47;

	st.param.f32	[param1+8], %f46;

	st.param.b32	[param1+12], %r12;

	st.param.b32	[param1+16], %r11;

	st.param.f32	[param1+20], %f45;

	.param .b32 param2;

	st.param.b32	[param2+0], %r13;

	.param .align 16 .b8 retval0[16];

	prototype_0 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd12, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_0;

	ld.param.f32	%f97, [retval0+0];

	ld.param.f32	%f98, [retval0+4];

	ld.param.f32	%f99, [retval0+8];

	ld.param.f32	%f49, [retval0+12];

	

	//{

	}// Callseq End 0

	ld.f32 	%f96, [%rd1+4];

	ld.u32 	%r15, [%rd1];



BB12_4:

	fma.rn.ftz.f32 	%f50, %f97, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f51, %f98, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f17, %f99, 0f40000000, 0fBF800000;

	mul.ftz.f32 	%f18, %f96, %f50;

	mul.ftz.f32 	%f19, %f96, %f51;

	setp.eq.s32	%p4, %r15, 3;

	@%p4 bra 	BB12_6;

	bra.uni 	BB12_5;



BB12_6:

	mov.u32 	%r14, 7937;

	mov.f32 	%f90, 0f00000000;

	// inline asm

	call (%f83, %f84, %f85, %f86), _rt_transform_tuple, (%r14, %f18, %f19, %f17, %f90);

	// inline asm

	mov.f32 	%f100, %f83;

	mov.f32 	%f101, %f84;

	mov.f32 	%f102, %f85;

	bra.uni 	BB12_7;



BB12_5:

	mul.ftz.f32 	%f52, %f39, %f39;

	fma.rn.ftz.f32 	%f53, %f38, %f38, %f52;

	fma.rn.ftz.f32 	%f54, %f4, %f4, %f53;

	sqrt.approx.ftz.f32 	%f55, %f54;

	rcp.approx.ftz.f32 	%f56, %f55;

	mul.ftz.f32 	%f57, %f38, %f56;

	mul.ftz.f32 	%f58, %f39, %f56;

	mul.ftz.f32 	%f59, %f4, %f56;

	mul.ftz.f32 	%f60, %f2, %f59;

	mul.ftz.f32 	%f61, %f3, %f58;

	sub.ftz.f32 	%f62, %f60, %f61;

	mul.ftz.f32 	%f63, %f3, %f57;

	mul.ftz.f32 	%f64, %f1, %f59;

	sub.ftz.f32 	%f65, %f63, %f64;

	mul.ftz.f32 	%f66, %f1, %f58;

	mul.ftz.f32 	%f67, %f2, %f57;

	sub.ftz.f32 	%f68, %f66, %f67;

	mul.ftz.f32 	%f69, %f65, %f65;

	fma.rn.ftz.f32 	%f70, %f62, %f62, %f69;

	fma.rn.ftz.f32 	%f71, %f68, %f68, %f70;

	sqrt.approx.ftz.f32 	%f72, %f71;

	rcp.approx.ftz.f32 	%f73, %f72;

	mul.ftz.f32 	%f74, %f73, %f62;

	mul.ftz.f32 	%f75, %f73, %f65;

	mul.ftz.f32 	%f76, %f73, %f68;

	fma.rn.ftz.f32 	%f77, %f18, %f57, 0f00000000;

	fma.rn.ftz.f32 	%f78, %f19, %f74, %f77;

	fma.rn.ftz.f32 	%f100, %f17, %f1, %f78;

	fma.rn.ftz.f32 	%f79, %f18, %f58, 0f00000000;

	fma.rn.ftz.f32 	%f80, %f19, %f75, %f79;

	fma.rn.ftz.f32 	%f101, %f17, %f2, %f80;

	fma.rn.ftz.f32 	%f81, %f18, %f59, 0f00000000;

	fma.rn.ftz.f32 	%f82, %f19, %f76, %f81;

	fma.rn.ftz.f32 	%f102, %f17, %f3, %f82;



BB12_7:

	mul.ftz.f32 	%f91, %f101, %f101;

	fma.rn.ftz.f32 	%f92, %f100, %f100, %f91;

	fma.rn.ftz.f32 	%f93, %f102, %f102, %f92;

	sqrt.approx.ftz.f32 	%f94, %f93;

	rcp.approx.ftz.f32 	%f95, %f94;

	mul.ftz.f32 	%f103, %f95, %f100;

	mul.ftz.f32 	%f104, %f95, %f101;

	mul.ftz.f32 	%f105, %f95, %f102;



BB12_8:

	st.param.f32	[func_retval0+0], %f103;

	st.param.f32	[func_retval0+4], %f104;

	st.param.f32	[func_retval0+8], %f105;

	ret;

}



	// .globl	_ZN10ColorUtils17DoGammaCorrectionERK6float4j

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN10ColorUtils17DoGammaCorrectionERK6float4j(

	.param .b64 _ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_0,

	.param .b32 _ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_1

)

{

	.reg .pred 	%p<4>;

	.reg .f32 	%f<39>;

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<3>;





	ld.param.u64 	%rd2, [_ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_0];

	ld.param.u32 	%r1, [_ZN10ColorUtils17DoGammaCorrectionERK6float4j_param_1];

	mov.f32 	%f35, 0f3F800000;

	setp.eq.s32	%p1, %r1, 1;

	@%p1 bra 	BB13_3;

	bra.uni 	BB13_1;



BB13_3:

	ld.global.f32 	%f35, [materialGamma];

	bra.uni 	BB13_4;



BB13_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB13_4;



	ld.global.f32 	%f35, [lightsGamma];



BB13_4:

	ld.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd2];

	mov.f32 	%f36, %f18;

	mov.f32 	%f37, %f19;

	mov.f32 	%f38, %f20;

	setp.eq.ftz.f32	%p3, %f35, 0f3F800000;

	@%p3 bra 	BB13_6;



	mov.f32 	%f22, 0f00000000;

	max.ftz.f32 	%f23, %f18, %f22;

	max.ftz.f32 	%f24, %f22, %f23;

	max.ftz.f32 	%f25, %f19, %f22;

	max.ftz.f32 	%f26, %f22, %f25;

	max.ftz.f32 	%f27, %f20, %f22;

	max.ftz.f32 	%f28, %f22, %f27;

	lg2.approx.ftz.f32 	%f29, %f24;

	mul.ftz.f32 	%f30, %f35, %f29;

	ex2.approx.ftz.f32 	%f36, %f30;

	lg2.approx.ftz.f32 	%f31, %f26;

	mul.ftz.f32 	%f32, %f35, %f31;

	ex2.approx.ftz.f32 	%f37, %f32;

	lg2.approx.ftz.f32 	%f33, %f28;

	mul.ftz.f32 	%f34, %f35, %f33;

	ex2.approx.ftz.f32 	%f38, %f34;



BB13_6:

	st.param.f32	[func_retval0+0], %f36;

	st.param.f32	[func_retval0+4], %f37;

	st.param.f32	[func_retval0+8], %f38;

	st.param.f32	[func_retval0+12], %f21;

	ret;

}



	// .globl	_ZN5optix6MatrixILj3ELj3EEC1Ev

.visible .func _ZN5optix6MatrixILj3ELj3EEC1Ev(

	.param .b64 _ZN5optix6MatrixILj3ELj3EEC1Ev_param_0

)

{







	ret;

}



	// .globl	_ZN5optix6MatrixILj3ELj3EEixEj

.visible .func  (.param .b64 func_retval0) _ZN5optix6MatrixILj3ELj3EEixEj(

	.param .b64 _ZN5optix6MatrixILj3ELj3EEixEj_param_0,

	.param .b32 _ZN5optix6MatrixILj3ELj3EEixEj_param_1

)

{

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZN5optix6MatrixILj3ELj3EEixEj_param_0];

	ld.param.u32 	%r1, [_ZN5optix6MatrixILj3ELj3EEixEj_param_1];

	mul.wide.u32 	%rd2, %r1, 4;

	add.s64 	%rd3, %rd1, %rd2;

	st.param.b64	[func_retval0+0], %rd3;

	ret;

}



	// .globl	_ZN5optix6MatrixILj3ELj3EEC1EPKf

.visible .func _ZN5optix6MatrixILj3ELj3EEC1EPKf(

	.param .b64 _ZN5optix6MatrixILj3ELj3EEC1EPKf_param_0,

	.param .b64 _ZN5optix6MatrixILj3ELj3EEC1EPKf_param_1

)

{

	.reg .f32 	%f<10>;

	.reg .s64 	%rd<3>;





	ld.param.u64 	%rd1, [_ZN5optix6MatrixILj3ELj3EEC1EPKf_param_0];

	ld.param.u64 	%rd2, [_ZN5optix6MatrixILj3ELj3EEC1EPKf_param_1];

	ld.f32 	%f1, [%rd2];

	st.f32 	[%rd1], %f1;

	ld.f32 	%f2, [%rd2+4];

	st.f32 	[%rd1+4], %f2;

	ld.f32 	%f3, [%rd2+8];

	st.f32 	[%rd1+8], %f3;

	ld.f32 	%f4, [%rd2+12];

	st.f32 	[%rd1+12], %f4;

	ld.f32 	%f5, [%rd2+16];

	st.f32 	[%rd1+16], %f5;

	ld.f32 	%f6, [%rd2+20];

	st.f32 	[%rd1+20], %f6;

	ld.f32 	%f7, [%rd2+24];

	st.f32 	[%rd1+24], %f7;

	ld.f32 	%f8, [%rd2+28];

	st.f32 	[%rd1+28], %f8;

	ld.f32 	%f9, [%rd2+32];

	st.f32 	[%rd1+32], %f9;

	ret;

}



	// .globl	_ZN10ColorUtils17DoGammaCorrectionERK6float3j

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils17DoGammaCorrectionERK6float3j(

	.param .b64 _ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_0,

	.param .b32 _ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_1

)

{

	.reg .pred 	%p<4>;

	.reg .f32 	%f<34>;

	.reg .s32 	%r<2>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_0];

	ld.param.u32 	%r1, [_ZN10ColorUtils17DoGammaCorrectionERK6float3j_param_1];

	mov.f32 	%f30, 0f3F800000;

	setp.eq.s32	%p1, %r1, 1;

	@%p1 bra 	BB17_3;

	bra.uni 	BB17_1;



BB17_3:

	ld.global.f32 	%f30, [materialGamma];

	bra.uni 	BB17_4;



BB17_1:

	setp.ne.s32	%p2, %r1, 2;

	@%p2 bra 	BB17_4;



	ld.global.f32 	%f30, [lightsGamma];



BB17_4:

	ld.f32 	%f33, [%rd1+8];

	ld.f32 	%f32, [%rd1+4];

	ld.f32 	%f31, [%rd1];

	setp.eq.ftz.f32	%p3, %f30, 0f3F800000;

	@%p3 bra 	BB17_6;



	ld.f32 	%f14, [%rd1];

	mov.f32 	%f15, 0f00000000;

	max.ftz.f32 	%f16, %f14, %f15;

	ld.f32 	%f17, [%rd1+4];

	max.ftz.f32 	%f18, %f17, %f15;

	ld.f32 	%f19, [%rd1+8];

	max.ftz.f32 	%f20, %f19, %f15;

	max.ftz.f32 	%f21, %f15, %f16;

	max.ftz.f32 	%f22, %f15, %f18;

	max.ftz.f32 	%f23, %f15, %f20;

	lg2.approx.ftz.f32 	%f24, %f21;

	mul.ftz.f32 	%f25, %f30, %f24;

	ex2.approx.ftz.f32 	%f31, %f25;

	lg2.approx.ftz.f32 	%f26, %f22;

	mul.ftz.f32 	%f27, %f30, %f26;

	ex2.approx.ftz.f32 	%f32, %f27;

	lg2.approx.ftz.f32 	%f28, %f23;

	mul.ftz.f32 	%f29, %f30, %f28;

	ex2.approx.ftz.f32 	%f33, %f29;



BB17_6:

	st.param.f32	[func_retval0+0], %f31;

	st.param.f32	[func_retval0+4], %f32;

	st.param.f32	[func_retval0+8], %f33;

	ret;

}



	// .globl	_ZN10ColorUtils7rgb2hsvERK6float3

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils7rgb2hsvERK6float3(

	.param .b64 _ZN10ColorUtils7rgb2hsvERK6float3_param_0

)

{

	.reg .pred 	%p<8>;

	.reg .f32 	%f<41>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils7rgb2hsvERK6float3_param_0];

	ld.f32 	%f1, [%rd1+4];

	ld.f32 	%f2, [%rd1];

	min.ftz.f32 	%f18, %f2, %f1;

	ld.f32 	%f3, [%rd1+8];

	min.ftz.f32 	%f19, %f18, %f3;

	max.ftz.f32 	%f20, %f2, %f1;

	max.ftz.f32 	%f4, %f20, %f3;

	sub.ftz.f32 	%f5, %f4, %f19;

	mov.f32 	%f17, 0f00000000;

	setp.eq.ftz.f32	%p1, %f4, 0f00000000;

	mov.f32 	%f40, %f17;

	@%p1 bra 	BB18_2;



	div.approx.ftz.f32 	%f6, %f5, %f4;

	mov.f32 	%f40, %f6;



BB18_2:

	mov.f32 	%f7, %f40;

	setp.eq.ftz.f32	%p2, %f5, 0f00000000;

	mov.f32 	%f39, %f17;

	@%p2 bra 	BB18_9;



	sub.ftz.f32 	%f22, %f4, %f2;

	sub.ftz.f32 	%f23, %f4, %f1;

	sub.ftz.f32 	%f24, %f4, %f3;

	mov.f32 	%f25, 0f40000000;

	div.approx.ftz.f32 	%f26, %f5, %f25;

	fma.rn.ftz.f32 	%f27, %f22, 0f3E2AAAAB, %f26;

	fma.rn.ftz.f32 	%f28, %f23, 0f3E2AAAAB, %f26;

	fma.rn.ftz.f32 	%f29, %f24, 0f3E2AAAAB, %f26;

	rcp.approx.ftz.f32 	%f30, %f5;

	mul.ftz.f32 	%f8, %f27, %f30;

	mul.ftz.f32 	%f9, %f28, %f30;

	mul.ftz.f32 	%f10, %f30, %f29;

	setp.eq.ftz.f32	%p3, %f2, %f4;

	@%p3 bra 	BB18_7;

	bra.uni 	BB18_4;



BB18_7:

	sub.ftz.f32 	%f37, %f10, %f9;

	bra.uni 	BB18_8;



BB18_4:

	setp.eq.ftz.f32	%p4, %f1, %f4;

	@%p4 bra 	BB18_6;

	bra.uni 	BB18_5;



BB18_6:

	add.ftz.f32 	%f33, %f8, 0f3EAAAAAB;

	sub.ftz.f32 	%f37, %f33, %f10;

	bra.uni 	BB18_8;



BB18_5:

	setp.eq.ftz.f32	%p5, %f3, %f4;

	add.ftz.f32 	%f31, %f9, 0f3F2AAAAB;

	sub.ftz.f32 	%f32, %f31, %f8;

	selp.f32	%f37, %f32, 0f00000000, %p5;



BB18_8:

	add.ftz.f32 	%f34, %f37, 0f3F800000;

	setp.lt.ftz.f32	%p6, %f37, 0f00000000;

	selp.f32	%f35, %f34, %f37, %p6;

	setp.gt.ftz.f32	%p7, %f35, 0f3F800000;

	add.ftz.f32 	%f36, %f35, 0fBF800000;

	selp.f32	%f39, %f36, %f35, %p7;



BB18_9:

	st.param.f32	[func_retval0+0], %f39;

	st.param.f32	[func_retval0+4], %f7;

	st.param.f32	[func_retval0+8], %f4;

	ret;

}



	// .globl	_ZN10ColorUtils7hsv2rgbERK6float3

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils7hsv2rgbERK6float3(

	.param .b64 _ZN10ColorUtils7hsv2rgbERK6float3_param_0

)

{

	.reg .pred 	%p<9>;

	.reg .f32 	%f<53>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN10ColorUtils7hsv2rgbERK6float3_param_0];

	ld.f32 	%f1, [%rd1];

	ld.f32 	%f2, [%rd1+8];

	ld.f32 	%f9, [%rd1+4];

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f2;

	setp.eq.ftz.f32	%p1, %f9, 0f00000000;

	@%p1 bra 	BB19_13;



	setp.lt.ftz.f32	%p2, %f1, 0f00000000;

	add.ftz.f32 	%f37, %f1, 0f3F800000;

	selp.f32	%f38, %f37, %f1, %p2;

	setp.gt.ftz.f32	%p3, %f38, 0f3F800000;

	add.ftz.f32 	%f39, %f38, 0fBF800000;

	selp.f32	%f40, %f39, %f38, %p3;

	mul.ftz.f32 	%f41, %f40, 0f40C00000;

	cvt.rmi.ftz.f32.f32	%f10, %f41;

	mov.f32 	%f42, 0f3F800000;

	sub.ftz.f32 	%f43, %f42, %f9;

	mul.ftz.f32 	%f11, %f2, %f43;

	sub.ftz.f32 	%f44, %f41, %f10;

	mul.ftz.f32 	%f45, %f9, %f44;

	sub.ftz.f32 	%f46, %f42, %f45;

	mul.ftz.f32 	%f12, %f2, %f46;

	sub.ftz.f32 	%f47, %f42, %f44;

	mul.ftz.f32 	%f48, %f9, %f47;

	sub.ftz.f32 	%f49, %f42, %f48;

	mul.ftz.f32 	%f13, %f2, %f49;

	setp.eq.ftz.f32	%p4, %f10, 0f00000000;

	@%p4 bra 	BB19_11;

	bra.uni 	BB19_2;



BB19_11:

	mov.f32 	%f52, %f11;

	mov.f32 	%f51, %f13;



BB19_12:

	mov.f32 	%f50, %f2;

	bra.uni 	BB19_13;



BB19_2:

	setp.eq.ftz.f32	%p5, %f10, 0f3F800000;

	@%p5 bra 	BB19_10;

	bra.uni 	BB19_3;



BB19_10:

	mov.f32 	%f52, %f11;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f12;

	bra.uni 	BB19_13;



BB19_3:

	setp.eq.ftz.f32	%p6, %f10, 0f40000000;

	@%p6 bra 	BB19_9;

	bra.uni 	BB19_4;



BB19_9:

	mov.f32 	%f52, %f13;

	mov.f32 	%f51, %f2;

	mov.f32 	%f50, %f11;

	bra.uni 	BB19_13;



BB19_4:

	setp.eq.ftz.f32	%p7, %f10, 0f40400000;

	@%p7 bra 	BB19_8;

	bra.uni 	BB19_5;



BB19_8:

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f12;

	mov.f32 	%f50, %f11;

	bra.uni 	BB19_13;



BB19_5:

	setp.eq.ftz.f32	%p8, %f10, 0f40800000;

	@%p8 bra 	BB19_7;

	bra.uni 	BB19_6;



BB19_7:

	mov.f32 	%f52, %f2;

	mov.f32 	%f51, %f11;

	mov.f32 	%f50, %f13;



BB19_13:

	st.param.f32	[func_retval0+0], %f50;

	st.param.f32	[func_retval0+4], %f51;

	st.param.f32	[func_retval0+8], %f52;

	ret;



BB19_6:

	mov.f32 	%f52, %f12;

	mov.f32 	%f51, %f11;

	bra.uni 	BB19_12;

}



	// .globl	_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2_

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2_(

	.param .align 4 .b8 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0[12],

	.param .b64 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_1,

	.param .b64 _ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_2

)

{

	.reg .pred 	%p<19>;

	.reg .f32 	%f<119>;

	.reg .s64 	%rd<4>;





	ld.param.f32 	%f118, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0+8];

	ld.param.f32 	%f117, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0+4];

	ld.param.f32 	%f116, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_0];

	ld.param.u64 	%rd2, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_1];

	ld.param.u64 	%rd3, [_ZN10ColorUtils13ColorVarianceE6float3RKS0_S2__param_2];

	ld.f32 	%f4, [%rd2];

	abs.ftz.f32 	%f64, %f4;

	setp.gt.ftz.f32	%p1, %f64, 0f3727C5AC;

	@%p1 bra 	BB20_3;



	ld.f32 	%f65, [%rd2+4];

	abs.ftz.f32 	%f66, %f65;

	setp.gt.ftz.f32	%p2, %f66, 0f3727C5AC;

	@%p2 bra 	BB20_3;



	ld.f32 	%f67, [%rd2+8];

	abs.ftz.f32 	%f68, %f67;

	setp.leu.ftz.f32	%p3, %f68, 0f3727C5AC;

	@%p3 bra 	BB20_26;



BB20_3:

	ld.f32 	%f5, [%rd3];

	ld.f32 	%f6, [%rd3+4];

	ld.f32 	%f7, [%rd3+8];

	min.ftz.f32 	%f70, %f116, %f117;

	min.ftz.f32 	%f71, %f70, %f118;

	max.ftz.f32 	%f72, %f116, %f117;

	max.ftz.f32 	%f8, %f72, %f118;

	sub.ftz.f32 	%f9, %f8, %f71;

	mov.f32 	%f69, 0f00000000;

	setp.eq.ftz.f32	%p4, %f8, 0f00000000;

	mov.f32 	%f112, %f69;

	@%p4 bra 	BB20_5;



	div.approx.ftz.f32 	%f10, %f9, %f8;

	mov.f32 	%f112, %f10;



BB20_5:

	mov.f32 	%f11, %f112;

	setp.eq.ftz.f32	%p5, %f9, 0f00000000;

	mov.f32 	%f111, %f69;

	@%p5 bra 	BB20_12;



	sub.ftz.f32 	%f74, %f8, %f116;

	sub.ftz.f32 	%f75, %f8, %f117;

	sub.ftz.f32 	%f76, %f8, %f118;

	mov.f32 	%f77, 0f40000000;

	div.approx.ftz.f32 	%f78, %f9, %f77;

	fma.rn.ftz.f32 	%f79, %f74, 0f3E2AAAAB, %f78;

	fma.rn.ftz.f32 	%f80, %f75, 0f3E2AAAAB, %f78;

	fma.rn.ftz.f32 	%f81, %f76, 0f3E2AAAAB, %f78;

	rcp.approx.ftz.f32 	%f82, %f9;

	mul.ftz.f32 	%f12, %f79, %f82;

	mul.ftz.f32 	%f13, %f80, %f82;

	mul.ftz.f32 	%f14, %f81, %f82;

	setp.eq.ftz.f32	%p6, %f116, %f8;

	@%p6 bra 	BB20_10;

	bra.uni 	BB20_7;



BB20_10:

	sub.ftz.f32 	%f109, %f14, %f13;

	bra.uni 	BB20_11;



BB20_7:

	setp.eq.ftz.f32	%p7, %f117, %f8;

	@%p7 bra 	BB20_9;

	bra.uni 	BB20_8;



BB20_9:

	add.ftz.f32 	%f85, %f12, 0f3EAAAAAB;

	sub.ftz.f32 	%f109, %f85, %f14;

	bra.uni 	BB20_11;



BB20_8:

	setp.eq.ftz.f32	%p8, %f118, %f8;

	add.ftz.f32 	%f83, %f13, 0f3F2AAAAB;

	sub.ftz.f32 	%f84, %f83, %f12;

	selp.f32	%f109, %f84, 0f00000000, %p8;



BB20_11:

	add.ftz.f32 	%f86, %f109, 0f3F800000;

	setp.lt.ftz.f32	%p9, %f109, 0f00000000;

	selp.f32	%f87, %f86, %f109, %p9;

	setp.gt.ftz.f32	%p10, %f87, 0f3F800000;

	add.ftz.f32 	%f88, %f87, 0fBF800000;

	selp.f32	%f111, %f88, %f87, %p10;



BB20_12:

	fma.rn.ftz.f32 	%f89, %f5, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f90, %f6, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f91, %f7, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f21, %f89, %f4, %f111;

	ld.f32 	%f92, [%rd2+4];

	fma.rn.ftz.f32 	%f22, %f90, %f92, %f11;

	ld.f32 	%f93, [%rd2+8];

	fma.rn.ftz.f32 	%f23, %f91, %f93, %f8;

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f23;

	setp.eq.ftz.f32	%p11, %f22, 0f00000000;

	@%p11 bra 	BB20_25;



	setp.lt.ftz.f32	%p12, %f21, 0f00000000;

	add.ftz.f32 	%f96, %f21, 0f3F800000;

	selp.f32	%f97, %f96, %f21, %p12;

	setp.gt.ftz.f32	%p13, %f97, 0f3F800000;

	add.ftz.f32 	%f98, %f97, 0fBF800000;

	selp.f32	%f99, %f98, %f97, %p13;

	mul.ftz.f32 	%f100, %f99, 0f40C00000;

	cvt.rmi.ftz.f32.f32	%f30, %f100;

	mov.f32 	%f101, 0f3F800000;

	sub.ftz.f32 	%f102, %f101, %f22;

	mul.ftz.f32 	%f31, %f23, %f102;

	sub.ftz.f32 	%f103, %f100, %f30;

	mul.ftz.f32 	%f104, %f22, %f103;

	sub.ftz.f32 	%f105, %f101, %f104;

	mul.ftz.f32 	%f32, %f23, %f105;

	sub.ftz.f32 	%f106, %f101, %f103;

	mul.ftz.f32 	%f107, %f22, %f106;

	sub.ftz.f32 	%f108, %f101, %f107;

	mul.ftz.f32 	%f33, %f23, %f108;

	setp.eq.ftz.f32	%p14, %f30, 0f00000000;

	@%p14 bra 	BB20_23;

	bra.uni 	BB20_14;



BB20_23:

	mov.f32 	%f115, %f31;

	mov.f32 	%f114, %f33;



BB20_24:

	mov.f32 	%f113, %f23;

	bra.uni 	BB20_25;



BB20_14:

	setp.eq.ftz.f32	%p15, %f30, 0f3F800000;

	@%p15 bra 	BB20_22;

	bra.uni 	BB20_15;



BB20_22:

	mov.f32 	%f115, %f31;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f32;

	bra.uni 	BB20_25;



BB20_15:

	setp.eq.ftz.f32	%p16, %f30, 0f40000000;

	@%p16 bra 	BB20_21;

	bra.uni 	BB20_16;



BB20_21:

	mov.f32 	%f115, %f33;

	mov.f32 	%f114, %f23;

	mov.f32 	%f113, %f31;

	bra.uni 	BB20_25;



BB20_16:

	setp.eq.ftz.f32	%p17, %f30, 0f40400000;

	@%p17 bra 	BB20_20;

	bra.uni 	BB20_17;



BB20_20:

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f32;

	mov.f32 	%f113, %f31;

	bra.uni 	BB20_25;



BB20_17:

	setp.eq.ftz.f32	%p18, %f30, 0f40800000;

	@%p18 bra 	BB20_19;

	bra.uni 	BB20_18;



BB20_19:

	mov.f32 	%f115, %f23;

	mov.f32 	%f114, %f31;

	mov.f32 	%f113, %f33;



BB20_25:

	cvt.ftz.sat.f32.f32	%f116, %f113;

	cvt.ftz.sat.f32.f32	%f117, %f114;

	cvt.ftz.sat.f32.f32	%f118, %f115;



BB20_26:

	st.param.f32	[func_retval0+0], %f116;

	st.param.f32	[func_retval0+4], %f117;

	st.param.f32	[func_retval0+8], %f118;

	ret;



BB20_18:

	mov.f32 	%f115, %f32;

	mov.f32 	%f114, %f31;

	bra.uni 	BB20_24;

}



	// .globl	_ZN21SphericalMappingUtils16SphericalMappingERK6float3

.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZN21SphericalMappingUtils16SphericalMappingERK6float3(

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3_param_0

)

{

	.reg .pred 	%p<6>;

	.reg .f32 	%f<59>;

	.reg .s32 	%r<5>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3_param_0];

	ld.f32 	%f1, [%rd1];

	ld.f32 	%f2, [%rd1+8];

	mul.ftz.f32 	%f3, %f2, %f2;

	fma.rn.ftz.f32 	%f4, %f1, %f1, %f3;

	sqrt.approx.ftz.f32 	%f5, %f4;

	div.approx.ftz.f32 	%f6, %f1, %f5;

	mov.f32 	%f7, 0f3F800000;

	min.ftz.f32 	%f8, %f6, %f7;

	mov.f32 	%f9, 0fBF800000;

	max.ftz.f32 	%f10, %f9, %f8;

	abs.ftz.f32 	%f11, %f10;

	sub.ftz.f32 	%f12, %f7, %f11;

	mul.ftz.f32 	%f13, %f12, 0f3F000000;

	sqrt.approx.ftz.f32 	%f14, %f13;

	setp.gt.ftz.f32	%p1, %f11, 0f3F11EB85;

	selp.f32	%f15, %f14, %f11, %p1;

	mul.ftz.f32 	%f16, %f15, %f15;

	mov.f32 	%f17, 0f3C94D2E9;

	mov.f32 	%f18, 0f3D53F941;

	fma.rn.ftz.f32 	%f19, %f18, %f16, %f17;

	mov.f32 	%f20, 0f3D3F841F;

	fma.rn.ftz.f32 	%f21, %f19, %f16, %f20;

	mov.f32 	%f22, 0f3D994929;

	fma.rn.ftz.f32 	%f23, %f21, %f16, %f22;

	mov.f32 	%f24, 0f3E2AAB94;

	fma.rn.ftz.f32 	%f25, %f23, %f16, %f24;

	mul.ftz.f32 	%f26, %f16, %f25;

	fma.rn.ftz.f32 	%f27, %f26, %f15, %f15;

	add.ftz.f32 	%f28, %f27, %f27;

	mov.f32 	%f29, 0f3FC90FDB;

	sub.ftz.f32 	%f30, %f29, %f27;

	selp.f32	%f31, %f28, %f30, %p1;

	setp.lt.ftz.f32	%p2, %f10, 0f00000000;

	mov.f32 	%f32, 0f40490FDB;

	sub.ftz.f32 	%f33, %f32, %f31;

	selp.f32	%f34, %f33, %f31, %p2;

	mul.ftz.f32 	%f35, %f34, 0f3E22F981;

	ld.f32 	%f36, [%rd1+4];

	min.ftz.f32 	%f37, %f36, %f7;

	max.ftz.f32 	%f38, %f9, %f37;

	abs.ftz.f32 	%f39, %f38;

	sub.ftz.f32 	%f40, %f7, %f39;

	mul.ftz.f32 	%f41, %f40, 0f3F000000;

	sqrt.approx.ftz.f32 	%f42, %f41;

	setp.gt.ftz.f32	%p3, %f39, 0f3F11EB85;

	selp.f32	%f43, %f42, %f39, %p3;

	mul.ftz.f32 	%f44, %f43, %f43;

	fma.rn.ftz.f32 	%f45, %f18, %f44, %f17;

	fma.rn.ftz.f32 	%f46, %f45, %f44, %f20;

	fma.rn.ftz.f32 	%f47, %f46, %f44, %f22;

	fma.rn.ftz.f32 	%f48, %f47, %f44, %f24;

	mul.ftz.f32 	%f49, %f44, %f48;

	fma.rn.ftz.f32 	%f50, %f49, %f43, %f43;

	mov.f32 	%f51, 0fC0000000;

	fma.rn.ftz.f32 	%f52, %f51, %f50, %f29;

	selp.f32	%f53, %f52, %f50, %p3;

	setp.gtu.ftz.f32	%p4, %f53, 0f7F800000;

	mov.b32 	 %r1, %f53;

	mov.b32 	 %r2, %f38;

	and.b32  	%r3, %r2, -2147483648;

	or.b32  	%r4, %r1, %r3;

	mov.b32 	 %f54, %r4;

	selp.f32	%f55, %f53, %f54, %p4;

	fma.rn.ftz.f32 	%f56, %f55, 0f3EA2F984, 0f3F000000;

	setp.lt.ftz.f32	%p5, %f2, 0f00000000;

	sub.ftz.f32 	%f57, %f7, %f35;

	selp.f32	%f58, %f57, %f35, %p5;

	st.param.f32	[func_retval0+0], %f58;

	st.param.f32	[func_retval0+4], %f56;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2_

.visible .func  (.param .align 8 .b8 func_retval0[8]) _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2_(

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_0,

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_1,

	.param .b64 _ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_2

)

{

	.reg .pred 	%p<6>;

	.reg .f32 	%f<83>;

	.reg .s32 	%r<5>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_0];

	ld.param.u64 	%rd2, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_2];

	ld.f32 	%f1, [%rd2+4];

	ld.param.u64 	%rd3, [_ZN21SphericalMappingUtils16SphericalMappingERK6float3S2_S2__param_1];

	ld.f32 	%f2, [%rd3+8];

	mul.ftz.f32 	%f3, %f1, %f2;

	ld.f32 	%f4, [%rd2+8];

	ld.f32 	%f5, [%rd3+4];

	mul.ftz.f32 	%f6, %f4, %f5;

	sub.ftz.f32 	%f7, %f3, %f6;

	ld.f32 	%f8, [%rd3];

	mul.ftz.f32 	%f9, %f4, %f8;

	ld.f32 	%f10, [%rd2];

	mul.ftz.f32 	%f11, %f10, %f2;

	sub.ftz.f32 	%f12, %f9, %f11;

	mul.ftz.f32 	%f13, %f10, %f5;

	mul.ftz.f32 	%f14, %f1, %f8;

	sub.ftz.f32 	%f15, %f13, %f14;

	ld.f32 	%f16, [%rd1];

	fma.rn.ftz.f32 	%f17, %f7, %f16, 0f00000000;

	ld.f32 	%f18, [%rd1+4];

	fma.rn.ftz.f32 	%f19, %f12, %f18, %f17;

	ld.f32 	%f20, [%rd1+8];

	fma.rn.ftz.f32 	%f21, %f15, %f20, %f19;

	fma.rn.ftz.f32 	%f22, %f10, %f16, 0f00000000;

	fma.rn.ftz.f32 	%f23, %f1, %f18, %f22;

	fma.rn.ftz.f32 	%f24, %f4, %f20, %f23;

	fma.rn.ftz.f32 	%f25, %f8, %f16, 0f00000000;

	fma.rn.ftz.f32 	%f26, %f5, %f18, %f25;

	fma.rn.ftz.f32 	%f27, %f2, %f20, %f26;

	mul.ftz.f32 	%f28, %f27, %f27;

	fma.rn.ftz.f32 	%f29, %f21, %f21, %f28;

	sqrt.approx.ftz.f32 	%f30, %f29;

	div.approx.ftz.f32 	%f31, %f21, %f30;

	mov.f32 	%f32, 0f3F800000;

	min.ftz.f32 	%f33, %f31, %f32;

	mov.f32 	%f34, 0fBF800000;

	max.ftz.f32 	%f35, %f34, %f33;

	abs.ftz.f32 	%f36, %f35;

	sub.ftz.f32 	%f37, %f32, %f36;

	mul.ftz.f32 	%f38, %f37, 0f3F000000;

	sqrt.approx.ftz.f32 	%f39, %f38;

	setp.gt.ftz.f32	%p1, %f36, 0f3F11EB85;

	selp.f32	%f40, %f39, %f36, %p1;

	mul.ftz.f32 	%f41, %f40, %f40;

	mov.f32 	%f42, 0f3C94D2E9;

	mov.f32 	%f43, 0f3D53F941;

	fma.rn.ftz.f32 	%f44, %f43, %f41, %f42;

	mov.f32 	%f45, 0f3D3F841F;

	fma.rn.ftz.f32 	%f46, %f44, %f41, %f45;

	mov.f32 	%f47, 0f3D994929;

	fma.rn.ftz.f32 	%f48, %f46, %f41, %f47;

	mov.f32 	%f49, 0f3E2AAB94;

	fma.rn.ftz.f32 	%f50, %f48, %f41, %f49;

	mul.ftz.f32 	%f51, %f41, %f50;

	fma.rn.ftz.f32 	%f52, %f51, %f40, %f40;

	add.ftz.f32 	%f53, %f52, %f52;

	mov.f32 	%f54, 0f3FC90FDB;

	sub.ftz.f32 	%f55, %f54, %f52;

	selp.f32	%f56, %f53, %f55, %p1;

	setp.lt.ftz.f32	%p2, %f35, 0f00000000;

	mov.f32 	%f57, 0f40490FDB;

	sub.ftz.f32 	%f58, %f57, %f56;

	selp.f32	%f59, %f58, %f56, %p2;

	mul.ftz.f32 	%f60, %f59, 0f3E22F981;

	min.ftz.f32 	%f61, %f24, %f32;

	max.ftz.f32 	%f62, %f34, %f61;

	abs.ftz.f32 	%f63, %f62;

	sub.ftz.f32 	%f64, %f32, %f63;

	mul.ftz.f32 	%f65, %f64, 0f3F000000;

	sqrt.approx.ftz.f32 	%f66, %f65;

	setp.gt.ftz.f32	%p3, %f63, 0f3F11EB85;

	selp.f32	%f67, %f66, %f63, %p3;

	mul.ftz.f32 	%f68, %f67, %f67;

	fma.rn.ftz.f32 	%f69, %f43, %f68, %f42;

	fma.rn.ftz.f32 	%f70, %f69, %f68, %f45;

	fma.rn.ftz.f32 	%f71, %f70, %f68, %f47;

	fma.rn.ftz.f32 	%f72, %f71, %f68, %f49;

	mul.ftz.f32 	%f73, %f68, %f72;

	fma.rn.ftz.f32 	%f74, %f73, %f67, %f67;

	mov.f32 	%f75, 0fC0000000;

	fma.rn.ftz.f32 	%f76, %f75, %f74, %f54;

	selp.f32	%f77, %f76, %f74, %p3;

	setp.gtu.ftz.f32	%p4, %f77, 0f7F800000;

	mov.b32 	 %r1, %f77;

	mov.b32 	 %r2, %f62;

	and.b32  	%r3, %r2, -2147483648;

	or.b32  	%r4, %r1, %r3;

	mov.b32 	 %f78, %r4;

	selp.f32	%f79, %f77, %f78, %p4;

	fma.rn.ftz.f32 	%f80, %f79, 0f3EA2F984, 0f3F000000;

	setp.lt.ftz.f32	%p5, %f27, 0f00000000;

	sub.ftz.f32 	%f81, %f32, %f60;

	selp.f32	%f82, %f81, %f60, %p5;

	st.param.f32	[func_retval0+0], %f82;

	st.param.f32	[func_retval0+4], %f80;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2(

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2_param_0

)

{

	.reg .pred 	%p<5>;

	.reg .f32 	%f<27>;

	.reg .s64 	%rd<2>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2_param_0];

	ld.v2.f32 	{%f1, %f2}, [%rd1];

	add.ftz.f32 	%f4, %f1, %f1;

	mul.ftz.f32 	%f5, %f4, 0f40490FDB;

	sin.approx.ftz.f32 	%f6, %f5;

	cos.approx.ftz.f32 	%f7, %f5;

	div.approx.ftz.f32 	%f8, %f6, %f7;

	add.ftz.f32 	%f10, %f2, 0fBF000000;

	mul.ftz.f32 	%f11, %f10, 0f40490FDB;

	sin.approx.ftz.f32 	%f12, %f11;

	mul.ftz.f32 	%f13, %f12, %f12;

	mov.f32 	%f14, 0f3F800000;

	sub.ftz.f32 	%f15, %f14, %f13;

	fma.rn.ftz.f32 	%f16, %f8, %f8, 0f3F800000;

	div.approx.ftz.f32 	%f17, %f15, %f16;

	sqrt.approx.ftz.f32 	%f18, %f17;

	mul.ftz.f32 	%f19, %f18, %f18;

	mul.ftz.f32 	%f20, %f8, %f19;

	mul.ftz.f32 	%f21, %f8, %f20;

	sqrt.approx.ftz.f32 	%f22, %f21;

	setp.gt.ftz.f32	%p1, %f1, 0f3F000000;

	neg.ftz.f32 	%f23, %f22;

	selp.f32	%f24, %f23, %f22, %p1;

	setp.gt.ftz.f32	%p2, %f1, 0f3E800000;

	setp.lt.ftz.f32	%p3, %f1, 0f3F400000;

	and.pred  	%p4, %p2, %p3;

	neg.ftz.f32 	%f25, %f18;

	selp.f32	%f26, %f25, %f18, %p4;

	st.param.f32	[func_retval0+0], %f26;

	st.param.f32	[func_retval0+4], %f12;

	st.param.f32	[func_retval0+8], %f24;

	ret;

}



	// .globl	_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5_

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5_(

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_0,

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_1,

	.param .b64 _ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_2

)

{

	.reg .pred 	%p<5>;

	.reg .f32 	%f<59>;

	.reg .s64 	%rd<4>;





	ld.param.u64 	%rd1, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_0];

	ld.param.u64 	%rd2, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_2];

	ld.f32 	%f1, [%rd2+4];

	ld.param.u64 	%rd3, [_ZN21SphericalMappingUtils19SphericalMappingIlwERK6float2RK6float3S5__param_1];

	ld.f32 	%f2, [%rd3+8];

	mul.ftz.f32 	%f3, %f1, %f2;

	ld.f32 	%f4, [%rd2+8];

	ld.f32 	%f5, [%rd3+4];

	mul.ftz.f32 	%f6, %f4, %f5;

	sub.ftz.f32 	%f7, %f3, %f6;

	ld.f32 	%f8, [%rd3];

	mul.ftz.f32 	%f9, %f4, %f8;

	ld.f32 	%f10, [%rd2];

	mul.ftz.f32 	%f11, %f10, %f2;

	sub.ftz.f32 	%f12, %f9, %f11;

	mul.ftz.f32 	%f13, %f10, %f5;

	mul.ftz.f32 	%f14, %f1, %f8;

	sub.ftz.f32 	%f15, %f13, %f14;

	ld.v2.f32 	{%f16, %f17}, [%rd1];

	add.ftz.f32 	%f19, %f16, %f16;

	mul.ftz.f32 	%f20, %f19, 0f40490FDB;

	sin.approx.ftz.f32 	%f21, %f20;

	cos.approx.ftz.f32 	%f22, %f20;

	div.approx.ftz.f32 	%f23, %f21, %f22;

	add.ftz.f32 	%f25, %f17, 0fBF000000;

	mul.ftz.f32 	%f26, %f25, 0f40490FDB;

	sin.approx.ftz.f32 	%f27, %f26;

	mul.ftz.f32 	%f28, %f27, %f27;

	mov.f32 	%f29, 0f3F800000;

	sub.ftz.f32 	%f30, %f29, %f28;

	fma.rn.ftz.f32 	%f31, %f23, %f23, 0f3F800000;

	div.approx.ftz.f32 	%f32, %f30, %f31;

	sqrt.approx.ftz.f32 	%f33, %f32;

	mul.ftz.f32 	%f34, %f33, %f33;

	mul.ftz.f32 	%f35, %f23, %f34;

	mul.ftz.f32 	%f36, %f23, %f35;

	sqrt.approx.ftz.f32 	%f37, %f36;

	setp.gt.ftz.f32	%p1, %f16, 0f3F000000;

	neg.ftz.f32 	%f38, %f37;

	selp.f32	%f39, %f38, %f37, %p1;

	setp.gt.ftz.f32	%p2, %f16, 0f3E800000;

	setp.lt.ftz.f32	%p3, %f16, 0f3F400000;

	and.pred  	%p4, %p2, %p3;

	neg.ftz.f32 	%f40, %f33;

	selp.f32	%f41, %f40, %f33, %p4;

	fma.rn.ftz.f32 	%f42, %f41, %f7, 0f00000000;

	fma.rn.ftz.f32 	%f43, %f27, %f10, %f42;

	fma.rn.ftz.f32 	%f44, %f39, %f8, %f43;

	fma.rn.ftz.f32 	%f45, %f41, %f12, 0f00000000;

	fma.rn.ftz.f32 	%f46, %f27, %f1, %f45;

	fma.rn.ftz.f32 	%f47, %f39, %f5, %f46;

	fma.rn.ftz.f32 	%f48, %f41, %f15, 0f00000000;

	fma.rn.ftz.f32 	%f49, %f27, %f4, %f48;

	fma.rn.ftz.f32 	%f50, %f39, %f2, %f49;

	mul.ftz.f32 	%f51, %f47, %f47;

	fma.rn.ftz.f32 	%f52, %f44, %f44, %f51;

	fma.rn.ftz.f32 	%f53, %f50, %f50, %f52;

	sqrt.approx.ftz.f32 	%f54, %f53;

	rcp.approx.ftz.f32 	%f55, %f54;

	mul.ftz.f32 	%f56, %f44, %f55;

	mul.ftz.f32 	%f57, %f47, %f55;

	mul.ftz.f32 	%f58, %f50, %f55;

	st.param.f32	[func_retval0+0], %f56;

	st.param.f32	[func_retval0+4], %f57;

	st.param.f32	[func_retval0+8], %f58;

	ret;

}



	// .globl	_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2_

.visible .func  (.param .align 4 .b8 func_retval0[12]) _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2_(

	.param .b64 _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_0,

	.param .b32 _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_1,

	.param .b64 _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_2,

	.param .b64 _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_3,

	.param .b64 _ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_4

)

{

	.reg .pred 	%p<6>;

	.reg .s16 	%rs<4>;

	.reg .f32 	%f<138>;

	.reg .s32 	%r<17>;

	.reg .s64 	%rd<16>;





	ld.param.u64 	%rd1, [_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_0];

	ld.param.u64 	%rd4, [_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_2];

	ld.param.u64 	%rd5, [_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_3];

	ld.param.u64 	%rd6, [_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_4];

	ld.param.s8 	%rs1, [_ZN11NormalUtils9getNormalERK6float3bRK11BumpMapDataRK11SamplerInfoS2__param_1];

	and.b16  	%rs2, %rs1, 255;

	setp.eq.s16	%p1, %rs2, 0;

	@%p1 bra 	BB25_2;



	ld.f32 	%f125, [%rd1+8];

	ld.f32 	%f127, [%rd1+4];

	ld.f32 	%f126, [%rd1];

	bra.uni 	BB25_3;



BB25_2:

	ld.f32 	%f62, [%rd1];

	neg.ftz.f32 	%f8, %f62;

	mov.f32 	%f126, %f8;

	ld.f32 	%f63, [%rd1+4];

	neg.ftz.f32 	%f9, %f63;

	mov.f32 	%f127, %f9;

	ld.f32 	%f64, [%rd1+8];

	neg.ftz.f32 	%f125, %f64;



BB25_3:

	mul.ftz.f32 	%f65, %f127, %f127;

	fma.rn.ftz.f32 	%f66, %f126, %f126, %f65;

	fma.rn.ftz.f32 	%f67, %f125, %f125, %f66;

	sqrt.approx.ftz.f32 	%f68, %f67;

	rcp.approx.ftz.f32 	%f69, %f68;

	mul.ftz.f32 	%f16, %f126, %f69;

	mul.ftz.f32 	%f17, %f127, %f69;

	mul.ftz.f32 	%f18, %f125, %f69;

	ld.f32 	%f19, [%rd6];

	ld.f32 	%f20, [%rd6+4];

	ld.f32 	%f21, [%rd6+8];

	add.s64 	%rd2, %rd4, 32;

	ld.u64 	%rd3, [%rd4+32];

	cvt.u32.u64	%r16, %rd3;

	setp.eq.s32	%p2, %r16, 0;

	@%p2 bra 	BB25_11;



	shr.u64 	%rd7, %rd3, 32;

	cvt.u32.u64	%r6, %rd7;

	mov.b32 	 %f128, %r6;

	ld.v4.f32 	{%f70, %f71, %f72, %f73}, [%rd2+-32];

	mov.f32 	%f129, %f70;

	mov.f32 	%f130, %f71;

	mov.f32 	%f131, %f72;

	ld.u32 	%r7, [%rd2+-12];

	setp.eq.s32	%p3, %r7, -1;

	ld.u32 	%r2, [%rd4+16];

	@%p3 bra 	BB25_7;



	mov.f32 	%f129, %f70;

	mov.f32 	%f130, %f71;

	mov.f32 	%f131, %f72;

	setp.gt.u32	%p4, %r2, 6;

	@%p4 bra 	BB25_7;



	cvt.u64.u32	%rd10, %r2;

	mov.u64 	%rd15, textureSampleBuff;

	cvta.global.u64 	%rd9, %rd15;

	mov.u32 	%r8, 1;

	mov.u32 	%r9, 4;

	mov.u64 	%rd13, 0;

	// inline asm

	call (%rd8), _rt_buffer_get_64, (%rd9, %r8, %r9, %rd10, %rd13, %rd13, %rd13);

	// inline asm

	ld.u32 	%r11, [%rd2+-12];

	ld.f32 	%f74, [%rd5+20];

	ld.u32 	%r12, [%rd5+16];

	ld.u32 	%r13, [%rd5+12];

	ld.f32 	%f75, [%rd5+8];

	ld.f32 	%f76, [%rd5+4];

	ld.f32 	%f77, [%rd5];

	ld.u32 	%r10, [%rd8];

	// inline asm

	call (%rd14), _rt_callable_program_from_id_64, (%r10);

	// inline asm

	mov.u16 	%rs3, 0;

	cvt.s32.s16	%r14, %rs3;

	// Callseq Start 1

	{

	.reg .b32 temp_param_reg;

	// <end>}

	.param .b32 param0;

	st.param.b32	[param0+0], %r11;

	.param .align 4 .b8 param1[24];

	st.param.f32	[param1+0], %f77;

	st.param.f32	[param1+4], %f76;

	st.param.f32	[param1+8], %f75;

	st.param.b32	[param1+12], %r13;

	st.param.b32	[param1+16], %r12;

	st.param.f32	[param1+20], %f74;

	.param .b32 param2;

	st.param.b32	[param2+0], %r14;

	.param .align 16 .b8 retval0[16];

	prototype_1 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .align 4 .b8 _[24], .param .b32 _);

	call (retval0), 

	%rd14, 

	(

	param0, 

	param1, 

	param2

	)

	, prototype_1;

	ld.param.f32	%f129, [retval0+0];

	ld.param.f32	%f130, [retval0+4];

	ld.param.f32	%f131, [retval0+8];

	ld.param.f32	%f78, [retval0+12];

	

	//{

	}// Callseq End 1

	ld.f32 	%f128, [%rd2+4];

	ld.u32 	%r16, [%rd2];



BB25_7:

	fma.rn.ftz.f32 	%f79, %f129, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f80, %f130, 0f40000000, 0fBF800000;

	fma.rn.ftz.f32 	%f41, %f131, 0f40000000, 0fBF800000;

	mul.ftz.f32 	%f42, %f128, %f79;

	mul.ftz.f32 	%f43, %f128, %f80;

	setp.eq.s32	%p5, %r16, 3;

	@%p5 bra 	BB25_9;

	bra.uni 	BB25_8;



BB25_9:

	mov.u32 	%r15, 7937;

	mov.f32 	%f119, 0f00000000;

	// inline asm

	call (%f112, %f113, %f114, %f115), _rt_transform_tuple, (%r15, %f42, %f43, %f41, %f119);

	// inline asm

	mov.f32 	%f132, %f112;

	mov.f32 	%f133, %f113;

	mov.f32 	%f134, %f114;

	bra.uni 	BB25_10;



BB25_11:

	mov.f32 	%f137, %f18;

	mov.f32 	%f136, %f17;

	mov.f32 	%f135, %f16;

	bra.uni 	BB25_12;



BB25_8:

	mul.ftz.f32 	%f81, %f20, %f20;

	fma.rn.ftz.f32 	%f82, %f19, %f19, %f81;

	fma.rn.ftz.f32 	%f83, %f21, %f21, %f82;

	sqrt.approx.ftz.f32 	%f84, %f83;

	rcp.approx.ftz.f32 	%f85, %f84;

	mul.ftz.f32 	%f86, %f19, %f85;

	mul.ftz.f32 	%f87, %f20, %f85;

	mul.ftz.f32 	%f88, %f21, %f85;

	mul.ftz.f32 	%f89, %f17, %f88;

	mul.ftz.f32 	%f90, %f18, %f87;

	sub.ftz.f32 	%f91, %f89, %f90;

	mul.ftz.f32 	%f92, %f18, %f86;

	mul.ftz.f32 	%f93, %f16, %f88;

	sub.ftz.f32 	%f94, %f92, %f93;

	mul.ftz.f32 	%f95, %f16, %f87;

	mul.ftz.f32 	%f96, %f17, %f86;

	sub.ftz.f32 	%f97, %f95, %f96;

	mul.ftz.f32 	%f98, %f94, %f94;

	fma.rn.ftz.f32 	%f99, %f91, %f91, %f98;

	fma.rn.ftz.f32 	%f100, %f97, %f97, %f99;

	sqrt.approx.ftz.f32 	%f101, %f100;

	rcp.approx.ftz.f32 	%f102, %f101;

	mul.ftz.f32 	%f103, %f102, %f91;

	mul.ftz.f32 	%f104, %f102, %f94;

	mul.ftz.f32 	%f105, %f102, %f97;

	fma.rn.ftz.f32 	%f106, %f42, %f86, 0f00000000;

	fma.rn.ftz.f32 	%f107, %f43, %f103, %f106;

	fma.rn.ftz.f32 	%f132, %f41, %f16, %f107;

	fma.rn.ftz.f32 	%f108, %f42, %f87, 0f00000000;

	fma.rn.ftz.f32 	%f109, %f43, %f104, %f108;

	fma.rn.ftz.f32 	%f133, %f41, %f17, %f109;

	fma.rn.ftz.f32 	%f110, %f42, %f88, 0f00000000;

	fma.rn.ftz.f32 	%f111, %f43, %f105, %f110;

	fma.rn.ftz.f32 	%f134, %f41, %f18, %f111;



BB25_10:

	mul.ftz.f32 	%f120, %f133, %f133;

	fma.rn.ftz.f32 	%f121, %f132, %f132, %f120;

	fma.rn.ftz.f32 	%f122, %f134, %f134, %f121;

	sqrt.approx.ftz.f32 	%f123, %f122;

	rcp.approx.ftz.f32 	%f124, %f123;

	mul.ftz.f32 	%f135, %f124, %f132;

	mul.ftz.f32 	%f136, %f124, %f133;

	mul.ftz.f32 	%f137, %f124, %f134;



BB25_12:

	st.param.f32	[func_retval0+0], %f135;

	st.param.f32	[func_retval0+4], %f136;

	st.param.f32	[func_retval0+8], %f137;

	ret;

}



	// .globl	_ZN15MotionBlurUtils7GetTimeEfRjS0_

.visible .func  (.param .b32 func_retval0) _ZN15MotionBlurUtils7GetTimeEfRjS0_(

	.param .b32 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_0,

	.param .b64 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_1,

	.param .b64 _ZN15MotionBlurUtils7GetTimeEfRjS0__param_2

)

{

	.reg .f32 	%f<6>;

	.reg .s32 	%r<4>;

	.reg .s64 	%rd<3>;





	ld.param.f32 	%f1, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_0];

	ld.param.u64 	%rd1, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_1];

	ld.param.u64 	%rd2, [_ZN15MotionBlurUtils7GetTimeEfRjS0__param_2];

	cvt.rmi.ftz.f32.f32	%f2, %f1;

	cvt.rzi.ftz.u32.f32	%r1, %f2;

	st.u32 	[%rd1], %r1;

	cvt.rpi.ftz.f32.f32	%f3, %f1;

	cvt.rzi.ftz.u32.f32	%r2, %f3;

	st.u32 	[%rd2], %r2;

	ld.u32 	%r3, [%rd1];

	cvt.rn.f32.u32	%f4, %r3;

	sub.ftz.f32 	%f5, %f1, %f4;

	st.param.f32	[func_retval0+0], %f5;

	ret;

}





