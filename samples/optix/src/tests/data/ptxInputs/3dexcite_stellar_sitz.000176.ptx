//
// Generated by LWPU LWVM Compiler
// Compiler built on Wed Jul 10 21:41:20 2013 (1373485280)
// Lwca compilation tools, release 5.5, V5.5.0
//

.version 3.2
.target sm_20
.address_size 64

	.file	1 "E:/stellar/src/rendering/components/optix/programs/Miss.lw", 1435152873, 1340
	.file	2 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\Textures.h", 1435073305, 1534
	.file	3 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\internal/optix_internal.h", 1434101976, 18808
	.file	4 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\optix_device.h", 1434101976, 118634
	.file	5 "E:/stellar/src\\util/Vec2.hpp", 1429187304, 11203
	.file	6 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\OptixBufferPtr.hpp", 1435073284, 2233
.visible .func stlr_main
(
	.param .b64 stlr_main_param_0,
	.param .b64 stlr_main_param_1,
	.param .b64 stlr_main_param_2,
	.param .b64 stlr_main_param_3,
	.param .b64 stlr_main_param_4
)
;
.global .align 16 .b8 ray_data[64];
.global .align 1 .b8 render_task_data[1];
.global .align 4 .u32 render_task_id;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo8ray_dataE[8] = {82, 97, 121, 0, 64, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14render_task_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8ray_dataE[8] = {82, 97, 121, 68, 97, 116, 97, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14render_task_idE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8ray_dataE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14render_task_idE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8ray_dataE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14render_task_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8ray_dataE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14render_task_idE[1];

.visible .func  (.param .b32 func_retval0) _Z14colwertPtrToIdRKPKv(
	.param .b64 _Z14colwertPtrToIdRKPKv_param_0
)
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z14colwertPtrToIdRKPKv_param_0];
	.loc 2 8 1
	ld.u32 	%r1, [%rd1];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .func optix_texture(
	.param .b64 optix_texture_param_0,
	.param .b64 optix_texture_param_1,
	.param .b64 optix_texture_param_2
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_texture_param_0];
	ld.param.u64 	%rd2, [optix_texture_param_1];
	ld.param.u64 	%rd3, [optix_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.f32 	%f8, 0f00000000;
	.loc 2 17 23
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f9, %f10, %f8, %f8);
	// inline asm
	.loc 2 17 128
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 18 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];
	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 167 1
	ret;
}

.visible .func optix_texture_lod(
	.param .b64 optix_texture_lod_param_0,
	.param .b64 optix_texture_lod_param_1,
	.param .b64 optix_texture_lod_param_2,
	.param .b64 optix_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 27 50
	ld.f32 	%f8, [%rd4];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 2 27 50
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f9, %f10, %f7, %r3, %f8);
	// inline asm
	.loc 2 27 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 28 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix10rtTex2DLodI6float4EET_ifff(
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_2];
	ld.param.f32 	%f8, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_3];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 666 19
	ret;
}

.visible .func optix_texture_grad(
	.param .b64 optix_texture_grad_param_0,
	.param .b64 optix_texture_grad_param_1,
	.param .b64 optix_texture_grad_param_2,
	.param .b64 optix_texture_grad_param_3,
	.param .b64 optix_texture_grad_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<20>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [optix_texture_grad_param_0];
	ld.param.u64 	%rd2, [optix_texture_grad_param_1];
	ld.param.u64 	%rd3, [optix_texture_grad_param_2];
	ld.param.u64 	%rd4, [optix_texture_grad_param_3];
	ld.param.u64 	%rd5, [optix_texture_grad_param_4];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 2 38 60
	ld.v2.f32 	{%f14, %f15}, [%rd3];
	ld.v2.f32 	{%f16, %f17}, [%rd4];
	ld.v2.f32 	{%f18, %f19}, [%rd5];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f14, %f15, %f13, %r3, %f16, %f17, %f13, %f18, %f19, %f13);
	// inline asm
	.loc 2 38 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 39 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3_(
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2,
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3[8],
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4[8]
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0];
	ld.param.f32 	%f5, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1];
	ld.param.f32 	%f6, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2];
	ld.param.f32 	%f8, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3];
	ld.param.f32 	%f9, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3+4];
	ld.param.f32 	%f11, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4];
	ld.param.f32 	%f12, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4+4];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f13, %r3, %f8, %f9, %f13, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 636 19
	ret;
}

.visible .func optix_lwbe_texture(
	.param .b64 optix_lwbe_texture_param_0,
	.param .b64 optix_lwbe_texture_param_1,
	.param .b64 optix_lwbe_texture_param_2
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 47 52
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	.loc 2 47 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 48 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix12rtTexLwbemapI6float4EET_ifff(
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2];
	ld.param.f32 	%f7, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 702 19
	ret;
}

.visible .func optix_lwbe_texture_lod(
	.param .b64 optix_lwbe_texture_lod_param_0,
	.param .b64 optix_lwbe_texture_lod_param_1,
	.param .b64 optix_lwbe_texture_lod_param_2,
	.param .b64 optix_lwbe_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_lwbe_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 57 56
	ld.f32 	%f8, [%rd4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	.loc 2 57 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 58 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix15rtTexLwbemapLodI6float4EET_iffff(
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0];
	ld.param.f32 	%f5, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1];
	ld.param.f32 	%f6, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2];
	ld.param.f32 	%f7, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3];
	ld.param.f32 	%f8, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 714 19
	ret;
}

.visible .entry _Z4missv(

)
{
	.local .align 16 .b8 	__local_depot11[160];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .s32 	%r<32>;
	.reg .f32 	%f<37>;
	.reg .s64 	%rd<17>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd7, %SP, 0;
	cvta.to.local.u64 	%rd8, %rd7;
	add.u64 	%rd9, %SP, 64;
	cvta.to.local.u64 	%rd10, %rd9;
	.loc 1 32 1
	ldu.global.u32 	%r3, [render_task_id];
	cvt.s64.s32	%rd3, %r3;
	cvta.global.u64 	%rd2, render_task_data;
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 96;
	mov.u64 	%rd6, 0;
	.loc 3 217 1
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	.loc 1 32 1
	ld.v2.u32 	{%r4, %r5}, [%rd1+8];
	ld.v2.u32 	{%r6, %r7}, [%rd1];
	st.local.v2.u32 	[%rd10], {%r6, %r7};
	add.s64 	%rd11, %rd9, 8;
	st.local.v2.u32 	[%rd10+8], {%r4, %r5};
	ld.u32 	%r12, [%rd1+16];
	.loc 5 55 1
	ld.v2.f32 	{%f1, %f2}, [%rd1+24];
	.loc 1 32 1
	st.local.u32 	[%rd10+16], %r12;
	.loc 5 55 1
	st.local.v2.f32 	[%rd10+24], {%f1, %f2};
	ld.v2.f32 	{%f5, %f6}, [%rd1+40];
	ld.v2.f32 	{%f7, %f8}, [%rd1+32];
	st.local.v2.f32 	[%rd10+32], {%f7, %f8};
	st.local.v2.f32 	[%rd10+40], {%f5, %f6};
	.loc 1 32 1
	ld.v2.u32 	{%r13, %r14}, [%rd1+56];
	ld.v2.f32 	{%f13, %f14}, [%rd1+48];
	st.local.v2.f32 	[%rd10+48], {%f13, %f14};
	st.local.v2.u32 	[%rd10+56], {%r13, %r14};
	ld.u32 	%r17, [%rd1+80];
	ld.v2.u32 	{%r18, %r19}, [%rd1+72];
	ld.v2.u32 	{%r20, %r21}, [%rd1+64];
	st.local.v2.u32 	[%rd10+64], {%r20, %r21};
	st.local.v2.u32 	[%rd10+72], {%r18, %r19};
	st.local.u32 	[%rd10+80], %r17;
	ld.u32 	%r26, [%rd1+84];
	ld.v2.u32 	{%r27, %r28}, [%rd1+88];
	st.local.u32 	[%rd10+84], %r26;
	st.local.v2.u32 	[%rd10+88], {%r27, %r28};
	.loc 1 34 131
	ld.global.u64 	%rd12, [ray_data+16];
	mov.u64 	%rd13, ray_data;
	add.s64 	%rd14, %rd13, 24;
	cvta.global.u64 	%rd15, %rd14;
	.loc 6 66 1
	ld.local.u64 	%rd16, [%rd10+64];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	.loc 1 34 1
	call.uni 
	stlr_main, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	}
	// Callseq End 0
	.loc 1 41 1
	ld.local.f32 	%f17, [%rd8+48];
	ld.local.v4.f32 	{%f18, %f19, %f20, %f21}, [%rd8+32];
	.loc 1 41 1
	ld.global.v4.f32 	{%f23, %f24, %f25, %f26}, [ray_data];
	add.f32 	%f28, %f23, %f18;
	add.f32 	%f31, %f24, %f19;
	add.f32 	%f34, %f25, %f20;
	add.f32 	%f36, %f26, %f17;
	st.global.v4.f32 	[ray_data], {%f28, %f31, %f34, %f36};
	mov.u32 	%r31, 2139095040;
	.loc 1 42 24
	st.global.u32 	[ray_data+56], %r31;
	.loc 1 43 2
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv(
	.param .b64 _ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0
)
{
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0];
	.loc 6 66 1
	ld.u64 	%rd2, [%rd1];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_base_idEiifffi(
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_0,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_1,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_2,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_3,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_4,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_5
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_base_idEiifffi_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_base_idEiifffi_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_base_idEiifffi_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_base_idEiifffi_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_base_idEiifffi_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_base_idEiifffi_param_5];
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 113 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix23rt_texture_get_level_idEiifffif(
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_0,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_1,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_2,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_3,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_4,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_5,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_6
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix23rt_texture_get_level_idEiifffif_param_0];
	ld.param.u32 	%r2, [_ZN5optix23rt_texture_get_level_idEiifffif_param_1];
	ld.param.f32 	%f5, [_ZN5optix23rt_texture_get_level_idEiifffif_param_2];
	ld.param.f32 	%f6, [_ZN5optix23rt_texture_get_level_idEiifffif_param_3];
	ld.param.f32 	%f7, [_ZN5optix23rt_texture_get_level_idEiifffif_param_4];
	ld.param.u32 	%r3, [_ZN5optix23rt_texture_get_level_idEiifffif_param_5];
	ld.param.f32 	%f8, [_ZN5optix23rt_texture_get_level_idEiifffif_param_6];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 131 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_grad_idEiifffiffffff(
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5];
	ld.param.f32 	%f8, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6];
	ld.param.f32 	%f9, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7];
	ld.param.f32 	%f10, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8];
	ld.param.f32 	%f11, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9];
	ld.param.f32 	%f12, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10];
	ld.param.f32 	%f13, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8, %f9, %f10, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 149 1
	ret;
}


/*
 * Compiled with
 * MLCC - The StellarCode Compiler
 * Version 0.13-1 - Monocle
 * Copyright 2000-2015 Dassault Systemes 3DExcite GmbH
 */







.visible .func stlr_create_for_stellarcheck( .param.b64 res_26166, .param.b64 externs_26167, .param.b64 seed_910) {
              .reg.u64       tmp_26168;
              ld.param.u64   tmp_26168, [seed_910];
              .reg.s32       tmp_26169;
              ld.s32         tmp_26169, [tmp_26168];
              .reg.u64       tmp_26170;
              ld.param.u64   tmp_26170, [res_26166];
              st.s32         [tmp_26170], tmp_26169;
}

.visible .global .u64 g_create_for_stellarcheck = stlr_create_for_stellarcheck;

.visible .func stlr_main( .param.b64 res_26171, .param.b64 externs_26172, .param.b64 rs_20307, .param.b64 camera_instance_idx_20308, .param.b64 imagePlaneUV_20309) {
              .reg.u64       tmp_26173;
              ld.param.u64   tmp_26173, [externs_26172];
              .reg.u64       tmp_26174;
              ld.param.u64   tmp_26174, [camera_instance_idx_20308];
              .reg.s32       tmp_26175;
              ld.s32         tmp_26175, [tmp_26174];
              .reg.u64       tmp_26176;
              .reg.s32       optix_buffer_id_26177;
              mov.b64        {_, optix_buffer_id_26177}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26178;
{
              .reg.s32       abstract_26179;
              mov.b32        abstract_26179, 1;
              .reg.u64       const_26180;
              mov.b64        const_26180, 536;
              .reg.u64       const_26181;
              mov.b64        const_26181, 0;
 call (ptr_from_optix_id_26178), _rt_buffer_get_id_64, (optix_buffer_id_26177, abstract_26179, abstract_26179, const_26180, const_26181, const_26181, const_26181); // resolving optix id
}
              ld.u64         tmp_26176, [ptr_from_optix_id_26178];
              .reg.s32       tmp_26182;
              .reg.u64       off_26183;
              mad.wide.u32   off_26183, tmp_26175, 192, 0;
              .reg.s32       optix_buffer_id_26184;
              mov.b64        {_, optix_buffer_id_26184}, tmp_26176;
              .reg.u64       ptr_from_optix_id_26185;
{
              .reg.s32       abstract_26186;
              mov.b32        abstract_26186, 1;
              .reg.u64       const_26187;
              mov.b64        const_26187, 512;
              .reg.u64       off_26188;
              add.u64        off_26188, const_26187, off_26183;
              .reg.u64       const_26189;
              mov.b64        const_26189, 0;
 call (ptr_from_optix_id_26185), _rt_buffer_get_id_64, (optix_buffer_id_26184, abstract_26186, abstract_26186, off_26188, const_26189, const_26189, const_26189); // resolving optix id
}
              ld.s32         tmp_26182, [ptr_from_optix_id_26185];
              .reg.u64       tmp_26190;
              ld.param.u64   tmp_26190, [rs_20307];
              .reg.u64       tmp_26191;
              ld.u64         tmp_26191, [tmp_26190];
              .reg.u64       tmp_26192;
              ld.param.u64   tmp_26192, [rs_20307];
              .reg.u64       tmp_26193;
              ld.u64         tmp_26193, [tmp_26192+8];
              .reg.u64       tmp_26194;
              ld.param.u64   tmp_26194, [rs_20307];
              .reg.u64       tmp_26195;
              ld.u64         tmp_26195, [tmp_26194+16];
              .reg.s32       tmp_26196;
              ld.s32         tmp_26196, [tmp_26191];
              .reg.s32       temp_24327;
              sub.cc.s32     temp_24327, tmp_26196, 1;
              .reg .f32      tmp_26197_0_0_0_0, tmp_26197_0_0_0_1, tmp_26197_0_0_0_2;
              .reg .f32      tmp_26197_0_0_1_0, tmp_26197_0_0_1_1, tmp_26197_0_0_1_2;
              .reg .f32      tmp_26197_0_0_2_0, tmp_26197_0_0_2_1, tmp_26197_0_0_2_2;
              .reg .f32      tmp_26197_1_0_0_0, tmp_26197_1_0_0_1, tmp_26197_1_0_0_2;
              .reg .f32      tmp_26197_1_0_1_0, tmp_26197_1_0_1_1, tmp_26197_1_0_1_2;
              .reg .f32      tmp_26197_1_0_2_0, tmp_26197_1_0_2_1, tmp_26197_1_0_2_2;
              .reg.f32       tmp_26197_2;
              .reg.u64       off_26198;
              mad.wide.u32   off_26198, temp_24327, 112, 0;
              .reg.u64       off_26199;
              add.u64        off_26199, tmp_26193, off_26198;
              ld.v2.f32      {tmp_26197_0_0_0_0, tmp_26197_0_0_0_1}, [off_26199];
              ld.f32         tmp_26197_0_0_0_2, [off_26199+8];
              ld.v2.f32      {tmp_26197_0_0_1_0, tmp_26197_0_0_1_1}, [off_26199+16];
              ld.f32         tmp_26197_0_0_1_2, [off_26199+24];
              ld.v2.f32      {tmp_26197_0_0_2_0, tmp_26197_0_0_2_1}, [off_26199+32];
              ld.f32         tmp_26197_0_0_2_2, [off_26199+40];
              ld.v2.f32      {tmp_26197_1_0_0_0, tmp_26197_1_0_0_1}, [off_26199+48];
              ld.f32         tmp_26197_1_0_0_2, [off_26199+56];
              ld.v2.f32      {tmp_26197_1_0_1_0, tmp_26197_1_0_1_1}, [off_26199+64];
              ld.f32         tmp_26197_1_0_1_2, [off_26199+72];
              ld.v2.f32      {tmp_26197_1_0_2_0, tmp_26197_1_0_2_1}, [off_26199+80];
              ld.f32         tmp_26197_1_0_2_2, [off_26199+88];
              ld.f32         tmp_26197_2, [off_26199+96];
              .reg .f32      tmp_26200_0_0, tmp_26200_0_1, tmp_26200_0_2;
              .reg.f32       tmp_26200_1;
              .reg.f32       tmp_26200_2;
              .reg.s32       tmp_26200_3;
              .reg.s32       tmp_26200_4;
              .reg.s32       tmp_26200_5;
              .reg .f32      tmp_26200_6_0_0_0, tmp_26200_6_0_0_1, tmp_26200_6_0_0_2;
              .reg .f32      tmp_26200_6_0_1_0, tmp_26200_6_0_1_1, tmp_26200_6_0_1_2;
              .reg .f32      tmp_26200_6_0_2_0, tmp_26200_6_0_2_1, tmp_26200_6_0_2_2;
              .reg.f32       tmp_26200_7;
              .reg.f32       tmp_26200_8;
              .reg.s32       tmp_26200_9;
              .reg.s32       tmp_26200_10;
              .reg.u64       off_26201;
              mad.wide.u32   off_26201, temp_24327, 112, 0;
              .reg.u64       off_26202;
              add.u64        off_26202, tmp_26195, off_26201;
              ld.v2.f32      {tmp_26200_0_0, tmp_26200_0_1}, [off_26202];
              ld.f32         tmp_26200_0_2, [off_26202+8];
              ld.f32         tmp_26200_1, [off_26202+16];
              ld.f32         tmp_26200_2, [off_26202+20];
              ld.s32         tmp_26200_3, [off_26202+24];
              ld.s32         tmp_26200_4, [off_26202+28];
              ld.s32         tmp_26200_5, [off_26202+32];
              ld.v2.f32      {tmp_26200_6_0_0_0, tmp_26200_6_0_0_1}, [off_26202+48];
              ld.f32         tmp_26200_6_0_0_2, [off_26202+56];
              ld.v2.f32      {tmp_26200_6_0_1_0, tmp_26200_6_0_1_1}, [off_26202+64];
              ld.f32         tmp_26200_6_0_1_2, [off_26202+72];
              ld.v2.f32      {tmp_26200_6_0_2_0, tmp_26200_6_0_2_1}, [off_26202+80];
              ld.f32         tmp_26200_6_0_2_2, [off_26202+88];
              ld.f32         tmp_26200_7, [off_26202+96];
              ld.f32         tmp_26200_8, [off_26202+100];
              ld.s32         tmp_26200_9, [off_26202+104];
              ld.s32         tmp_26200_10, [off_26202+108];
              st.s32         [tmp_26191], temp_24327;
              .reg.u64       tmp_26203;
              .reg.s32       optix_buffer_id_26204;
              mov.b64        {_, optix_buffer_id_26204}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26205;
{
              .reg.s32       abstract_26206;
              mov.b32        abstract_26206, 1;
              .reg.u64       const_26207;
              mov.b64        const_26207, 528;
              .reg.u64       const_26208;
              mov.b64        const_26208, 0;
 call (ptr_from_optix_id_26205), _rt_buffer_get_id_64, (optix_buffer_id_26204, abstract_26206, abstract_26206, const_26207, const_26208, const_26208, const_26208); // resolving optix id
}
              ld.u64         tmp_26203, [ptr_from_optix_id_26205];
              .reg.s32       tmp_26209;
              .reg.u64       off_26210;
              mad.wide.u32   off_26210, tmp_26182, 112, 0;
              .reg.s32       optix_buffer_id_26211;
              mov.b64        {_, optix_buffer_id_26211}, tmp_26203;
              .reg.u64       ptr_from_optix_id_26212;
{
              .reg.s32       abstract_26213;
              mov.b32        abstract_26213, 1;
              .reg.u64       const_26214;
              mov.b64        const_26214, 512;
              .reg.u64       off_26215;
              add.u64        off_26215, const_26214, off_26210;
              .reg.u64       const_26216;
              mov.b64        const_26216, 0;
 call (ptr_from_optix_id_26212), _rt_buffer_get_id_64, (optix_buffer_id_26211, abstract_26213, abstract_26213, off_26215, const_26216, const_26216, const_26216); // resolving optix id
}
              ld.s32         tmp_26209, [ptr_from_optix_id_26212];
              .reg.s32       temp_24338;
              and.b32        temp_24338, tmp_26200_5, 4;
              .reg.s32       temp_24339;
              set.gt.s32.s32 temp_24339, temp_24338, 0;
              .reg.s32       temp_24341;
              and.b32        temp_24341, tmp_26200_5, 8;
              .reg.s32       temp_24342;
              set.gt.s32.s32 temp_24342, temp_24341, 0;
              .reg.s32       temp_20842;
              or.b32         temp_20842, temp_24339, temp_24342;
              .reg.s32       temp_20843;
              and.b32        temp_20843, tmp_26209, temp_20842;
              .reg.f32       scl_21740;
              .reg .f32      scl_21741_0, scl_21741_1, scl_21741_2;
              .reg.pred      temp_20843_26219;
              setp.ne.s32    temp_20843_26219, 0, temp_20843;
  @!temp_20843_26219 bra     else_26217;
              .reg .f32      scl_21744_0, scl_21744_1;
              .reg .f32      scl_21745_0, scl_21745_1;
              .reg .f32      scl_21746_0, scl_21746_1;
              .reg.pred      temp_24339_26222;
              setp.ne.s32    temp_24339_26222, 0, temp_24339;
  @!temp_24339_26222 bra     else_26220;
              .reg.u64       tmp_26223;
              ld.param.u64   tmp_26223, [imagePlaneUV_20309];
              .reg .f32      tmp_26224_0, tmp_26224_1;
              ld.v2.f32      {tmp_26224_0, tmp_26224_1}, [tmp_26223];
              .reg.u64       tmp_26225;
              ld.param.u64   tmp_26225, [imagePlaneUV_20309];
              .reg .f32      tmp_26226_0, tmp_26226_1;
              ld.v2.f32      {tmp_26226_0, tmp_26226_1}, [tmp_26225+8];
              .reg.u64       tmp_26227;
              ld.param.u64   tmp_26227, [imagePlaneUV_20309];
              .reg .f32      tmp_26228_0, tmp_26228_1;
              ld.v2.f32      {tmp_26228_0, tmp_26228_1}, [tmp_26227+16];
              mov.b32        scl_21744_0, tmp_26224_0;
              mov.b32        scl_21744_1, tmp_26224_1;
              mov.b32        scl_21745_0, tmp_26226_0;
              mov.b32        scl_21745_1, tmp_26226_1;
              mov.b32        scl_21746_0, tmp_26228_0;
              mov.b32        scl_21746_1, tmp_26228_1;
              bra.uni        merge_26221;
else_26220:
              .reg.u64       tmp_26229;
              ld.param.u64   tmp_26229, [camera_instance_idx_20308];
              .reg.s32       tmp_26230;
              ld.s32         tmp_26230, [tmp_26229];
              .reg.u64       tmp_26231;
              .reg.s32       optix_buffer_id_26232;
              mov.b64        {_, optix_buffer_id_26232}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26233;
{
              .reg.s32       abstract_26234;
              mov.b32        abstract_26234, 1;
              .reg.u64       const_26235;
              mov.b64        const_26235, 536;
              .reg.u64       const_26236;
              mov.b64        const_26236, 0;
 call (ptr_from_optix_id_26233), _rt_buffer_get_id_64, (optix_buffer_id_26232, abstract_26234, abstract_26234, const_26235, const_26236, const_26236, const_26236); // resolving optix id
}
              ld.u64         tmp_26231, [ptr_from_optix_id_26233];
              .reg .f32      tmp_26237_0, tmp_26237_1, tmp_26237_2, tmp_26237_3;
              .reg.u64       off_26238;
              mad.wide.u32   off_26238, tmp_26230, 192, 80;
              .reg.s32       optix_buffer_id_26239;
              mov.b64        {_, optix_buffer_id_26239}, tmp_26231;
              .reg.u64       ptr_from_optix_id_26240;
{
              .reg.s32       abstract_26241;
              mov.b32        abstract_26241, 1;
              .reg.u64       const_26242;
              mov.b64        const_26242, 512;
              .reg.u64       off_26243;
              add.u64        off_26243, const_26242, off_26238;
              .reg.u64       const_26244;
              mov.b64        const_26244, 0;
 call (ptr_from_optix_id_26240), _rt_buffer_get_id_64, (optix_buffer_id_26239, abstract_26241, abstract_26241, off_26243, const_26244, const_26244, const_26244); // resolving optix id
}
              ld.v4.f32      {tmp_26237_0, tmp_26237_1, tmp_26237_2, tmp_26237_3}, [ptr_from_optix_id_26240];
              .reg.u64       tmp_26245;
              ld.param.u64   tmp_26245, [camera_instance_idx_20308];
              .reg.s32       tmp_26246;
              ld.s32         tmp_26246, [tmp_26245];
              .reg.u64       tmp_26247;
              .reg.s32       optix_buffer_id_26248;
              mov.b64        {_, optix_buffer_id_26248}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26249;
{
              .reg.s32       abstract_26250;
              mov.b32        abstract_26250, 1;
              .reg.u64       const_26251;
              mov.b64        const_26251, 536;
              .reg.u64       const_26252;
              mov.b64        const_26252, 0;
 call (ptr_from_optix_id_26249), _rt_buffer_get_id_64, (optix_buffer_id_26248, abstract_26250, abstract_26250, const_26251, const_26252, const_26252, const_26252); // resolving optix id
}
              ld.u64         tmp_26247, [ptr_from_optix_id_26249];
              .reg .f32      tmp_26253_0, tmp_26253_1, tmp_26253_2, tmp_26253_3;
              .reg.u64       off_26254;
              mad.wide.u32   off_26254, tmp_26246, 192, 96;
              .reg.s32       optix_buffer_id_26255;
              mov.b64        {_, optix_buffer_id_26255}, tmp_26247;
              .reg.u64       ptr_from_optix_id_26256;
{
              .reg.s32       abstract_26257;
              mov.b32        abstract_26257, 1;
              .reg.u64       const_26258;
              mov.b64        const_26258, 512;
              .reg.u64       off_26259;
              add.u64        off_26259, const_26258, off_26254;
              .reg.u64       const_26260;
              mov.b64        const_26260, 0;
 call (ptr_from_optix_id_26256), _rt_buffer_get_id_64, (optix_buffer_id_26255, abstract_26257, abstract_26257, off_26259, const_26260, const_26260, const_26260); // resolving optix id
}
              ld.v4.f32      {tmp_26253_0, tmp_26253_1, tmp_26253_2, tmp_26253_3}, [ptr_from_optix_id_26256];
              .reg.u64       tmp_26261;
              ld.param.u64   tmp_26261, [camera_instance_idx_20308];
              .reg.s32       tmp_26262;
              ld.s32         tmp_26262, [tmp_26261];
              .reg.u64       tmp_26263;
              .reg.s32       optix_buffer_id_26264;
              mov.b64        {_, optix_buffer_id_26264}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26265;
{
              .reg.s32       abstract_26266;
              mov.b32        abstract_26266, 1;
              .reg.u64       const_26267;
              mov.b64        const_26267, 536;
              .reg.u64       const_26268;
              mov.b64        const_26268, 0;
 call (ptr_from_optix_id_26265), _rt_buffer_get_id_64, (optix_buffer_id_26264, abstract_26266, abstract_26266, const_26267, const_26268, const_26268, const_26268); // resolving optix id
}
              ld.u64         tmp_26263, [ptr_from_optix_id_26265];
              .reg .f32      tmp_26269_0, tmp_26269_1, tmp_26269_2, tmp_26269_3;
              .reg.u64       off_26270;
              mad.wide.u32   off_26270, tmp_26262, 192, 112;
              .reg.s32       optix_buffer_id_26271;
              mov.b64        {_, optix_buffer_id_26271}, tmp_26263;
              .reg.u64       ptr_from_optix_id_26272;
{
              .reg.s32       abstract_26273;
              mov.b32        abstract_26273, 1;
              .reg.u64       const_26274;
              mov.b64        const_26274, 512;
              .reg.u64       off_26275;
              add.u64        off_26275, const_26274, off_26270;
              .reg.u64       const_26276;
              mov.b64        const_26276, 0;
 call (ptr_from_optix_id_26272), _rt_buffer_get_id_64, (optix_buffer_id_26271, abstract_26273, abstract_26273, off_26275, const_26276, const_26276, const_26276); // resolving optix id
}
              ld.v4.f32      {tmp_26269_0, tmp_26269_1, tmp_26269_2, tmp_26269_3}, [ptr_from_optix_id_26272];
              .reg .f32      temp_24436_0, temp_24436_1, temp_24436_2;
              mul.ftz.f32    temp_24436_0, tmp_26237_0, tmp_26197_1_0_0_0;
              mul.ftz.f32    temp_24436_1, tmp_26237_1, tmp_26197_1_0_0_0;
              mul.ftz.f32    temp_24436_2, tmp_26237_2, tmp_26197_1_0_0_0;
              .reg .f32      temp_24439_0, temp_24439_1, temp_24439_2;
              mul.ftz.f32    temp_24439_0, tmp_26237_0, tmp_26197_1_0_1_0;
              mul.ftz.f32    temp_24439_1, tmp_26237_1, tmp_26197_1_0_1_0;
              mul.ftz.f32    temp_24439_2, tmp_26237_2, tmp_26197_1_0_1_0;
              .reg .f32      temp_24443_0, temp_24443_1, temp_24443_2;
              mul.ftz.f32    temp_24443_0, tmp_26237_0, tmp_26197_1_0_2_0;
              mul.ftz.f32    temp_24443_1, tmp_26237_1, tmp_26197_1_0_2_0;
              mul.ftz.f32    temp_24443_2, tmp_26237_2, tmp_26197_1_0_2_0;
              .reg .f32      temp_24455_0, temp_24455_1, temp_24455_2;
              mul.ftz.f32    temp_24455_0, tmp_26253_0, tmp_26197_1_0_0_1;
              mul.ftz.f32    temp_24455_1, tmp_26253_1, tmp_26197_1_0_0_1;
              mul.ftz.f32    temp_24455_2, tmp_26253_2, tmp_26197_1_0_0_1;
              .reg .f32      temp_24458_0, temp_24458_1, temp_24458_2;
              mul.ftz.f32    temp_24458_0, tmp_26253_0, tmp_26197_1_0_1_1;
              mul.ftz.f32    temp_24458_1, tmp_26253_1, tmp_26197_1_0_1_1;
              mul.ftz.f32    temp_24458_2, tmp_26253_2, tmp_26197_1_0_1_1;
              .reg .f32      temp_24462_0, temp_24462_1, temp_24462_2;
              mul.ftz.f32    temp_24462_0, tmp_26253_0, tmp_26197_1_0_2_1;
              mul.ftz.f32    temp_24462_1, tmp_26253_1, tmp_26197_1_0_2_1;
              mul.ftz.f32    temp_24462_2, tmp_26253_2, tmp_26197_1_0_2_1;
              .reg .f32      temp_24464_0, temp_24464_1, temp_24464_2;
              add.ftz.f32    temp_24464_0, temp_24436_0, temp_24455_0;
              add.ftz.f32    temp_24464_1, temp_24436_1, temp_24455_1;
              add.ftz.f32    temp_24464_2, temp_24436_2, temp_24455_2;
              .reg .f32      temp_24465_0, temp_24465_1, temp_24465_2;
              add.ftz.f32    temp_24465_0, temp_24439_0, temp_24458_0;
              add.ftz.f32    temp_24465_1, temp_24439_1, temp_24458_1;
              add.ftz.f32    temp_24465_2, temp_24439_2, temp_24458_2;
              .reg .f32      temp_24466_0, temp_24466_1, temp_24466_2;
              add.ftz.f32    temp_24466_0, temp_24443_0, temp_24462_0;
              add.ftz.f32    temp_24466_1, temp_24443_1, temp_24462_1;
              add.ftz.f32    temp_24466_2, temp_24443_2, temp_24462_2;
              .reg .f32      temp_24477_0, temp_24477_1, temp_24477_2;
              mul.ftz.f32    temp_24477_0, tmp_26269_0, tmp_26197_1_0_0_2;
              mul.ftz.f32    temp_24477_1, tmp_26269_1, tmp_26197_1_0_0_2;
              mul.ftz.f32    temp_24477_2, tmp_26269_2, tmp_26197_1_0_0_2;
              .reg .f32      temp_24480_0, temp_24480_1, temp_24480_2;
              mul.ftz.f32    temp_24480_0, tmp_26269_0, tmp_26197_1_0_1_2;
              mul.ftz.f32    temp_24480_1, tmp_26269_1, tmp_26197_1_0_1_2;
              mul.ftz.f32    temp_24480_2, tmp_26269_2, tmp_26197_1_0_1_2;
              .reg .f32      temp_24484_0, temp_24484_1, temp_24484_2;
              mul.ftz.f32    temp_24484_0, tmp_26269_0, tmp_26197_1_0_2_2;
              mul.ftz.f32    temp_24484_1, tmp_26269_1, tmp_26197_1_0_2_2;
              mul.ftz.f32    temp_24484_2, tmp_26269_2, tmp_26197_1_0_2_2;
              .reg .f32      temp_24486_0, temp_24486_1, temp_24486_2;
              add.ftz.f32    temp_24486_0, temp_24464_0, temp_24477_0;
              add.ftz.f32    temp_24486_1, temp_24464_1, temp_24477_1;
              add.ftz.f32    temp_24486_2, temp_24464_2, temp_24477_2;
              .reg .f32      temp_24487_0, temp_24487_1, temp_24487_2;
              add.ftz.f32    temp_24487_0, temp_24465_0, temp_24480_0;
              add.ftz.f32    temp_24487_1, temp_24465_1, temp_24480_1;
              add.ftz.f32    temp_24487_2, temp_24465_2, temp_24480_2;
              .reg .f32      temp_24488_0, temp_24488_1, temp_24488_2;
              add.ftz.f32    temp_24488_0, temp_24466_0, temp_24484_0;
              add.ftz.f32    temp_24488_1, temp_24466_1, temp_24484_1;
              add.ftz.f32    temp_24488_2, temp_24466_2, temp_24484_2;
              .reg.u64       tmp_26277;
              ld.param.u64   tmp_26277, [camera_instance_idx_20308];
              .reg.s32       tmp_26278;
              ld.s32         tmp_26278, [tmp_26277];
              .reg.u64       tmp_26279;
              .reg.s32       optix_buffer_id_26280;
              mov.b64        {_, optix_buffer_id_26280}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26281;
{
              .reg.s32       abstract_26282;
              mov.b32        abstract_26282, 1;
              .reg.u64       const_26283;
              mov.b64        const_26283, 536;
              .reg.u64       const_26284;
              mov.b64        const_26284, 0;
 call (ptr_from_optix_id_26281), _rt_buffer_get_id_64, (optix_buffer_id_26280, abstract_26282, abstract_26282, const_26283, const_26284, const_26284, const_26284); // resolving optix id
}
              ld.u64         tmp_26279, [ptr_from_optix_id_26281];
              .reg.f32       tmp_26285;
              .reg.u64       off_26286;
              mad.wide.u32   off_26286, tmp_26278, 192, 144;
              .reg.s32       optix_buffer_id_26287;
              mov.b64        {_, optix_buffer_id_26287}, tmp_26279;
              .reg.u64       ptr_from_optix_id_26288;
{
              .reg.s32       abstract_26289;
              mov.b32        abstract_26289, 1;
              .reg.u64       const_26290;
              mov.b64        const_26290, 512;
              .reg.u64       off_26291;
              add.u64        off_26291, const_26290, off_26286;
              .reg.u64       const_26292;
              mov.b64        const_26292, 0;
 call (ptr_from_optix_id_26288), _rt_buffer_get_id_64, (optix_buffer_id_26287, abstract_26289, abstract_26289, off_26291, const_26292, const_26292, const_26292); // resolving optix id
}
              ld.f32         tmp_26285, [ptr_from_optix_id_26288];
              .reg.f32       temp_24514;
              neg.ftz.f32    temp_24514, temp_24486_2;
              .reg.f32       temp_24515;
              neg.ftz.f32    temp_24515, temp_24487_2;
              .reg.f32       temp_24516;
              neg.ftz.f32    temp_24516, temp_24488_2;
              .reg.f32       temp_24517;
              div.approx.ftz.f32 temp_24517, tmp_26285, temp_24514;
              .reg.f32       temp_24518;
              mul.ftz.f32    temp_24518, tmp_26285, temp_24515;
              .reg.f32       temp_24519;
              neg.ftz.f32    temp_24519, temp_24518;
              .reg.f32       temp_24520;
              mul.ftz.f32    temp_24520, temp_24514, temp_24514;
              .reg.f32       temp_24521;
              div.approx.ftz.f32 temp_24521, temp_24519, temp_24520;
              .reg.f32       temp_24522;
              mul.ftz.f32    temp_24522, tmp_26285, temp_24516;
              .reg.f32       temp_24523;
              neg.ftz.f32    temp_24523, temp_24522;
              .reg.f32       temp_24524;
              div.approx.ftz.f32 temp_24524, temp_24523, temp_24520;
              .reg .f32      temp_24528_0, temp_24528_1;
              mul.ftz.f32    temp_24528_0, temp_24486_0, temp_24517;
              mul.ftz.f32    temp_24528_1, temp_24486_1, temp_24517;
              .reg .f32      temp_24529_0, temp_24529_1;
              mul.ftz.f32    temp_24529_0, temp_24487_0, temp_24517;
              mul.ftz.f32    temp_24529_1, temp_24487_1, temp_24517;
              .reg .f32      temp_24530_0, temp_24530_1;
              mul.ftz.f32    temp_24530_0, temp_24486_0, temp_24521;
              mul.ftz.f32    temp_24530_1, temp_24486_1, temp_24521;
              .reg .f32      temp_24531_0, temp_24531_1;
              add.ftz.f32    temp_24531_0, temp_24529_0, temp_24530_0;
              add.ftz.f32    temp_24531_1, temp_24529_1, temp_24530_1;
              .reg .f32      temp_24532_0, temp_24532_1;
              mul.ftz.f32    temp_24532_0, temp_24488_0, temp_24517;
              mul.ftz.f32    temp_24532_1, temp_24488_1, temp_24517;
              .reg .f32      temp_24533_0, temp_24533_1;
              mul.ftz.f32    temp_24533_0, temp_24486_0, temp_24524;
              mul.ftz.f32    temp_24533_1, temp_24486_1, temp_24524;
              .reg .f32      temp_24534_0, temp_24534_1;
              add.ftz.f32    temp_24534_0, temp_24532_0, temp_24533_0;
              add.ftz.f32    temp_24534_1, temp_24532_1, temp_24533_1;
              .reg.u64       tmp_26293;
              ld.param.u64   tmp_26293, [camera_instance_idx_20308];
              .reg.s32       tmp_26294;
              ld.s32         tmp_26294, [tmp_26293];
              .reg.u64       tmp_26295;
              .reg.s32       optix_buffer_id_26296;
              mov.b64        {_, optix_buffer_id_26296}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26297;
{
              .reg.s32       abstract_26298;
              mov.b32        abstract_26298, 1;
              .reg.u64       const_26299;
              mov.b64        const_26299, 536;
              .reg.u64       const_26300;
              mov.b64        const_26300, 0;
 call (ptr_from_optix_id_26297), _rt_buffer_get_id_64, (optix_buffer_id_26296, abstract_26298, abstract_26298, const_26299, const_26300, const_26300, const_26300); // resolving optix id
}
              ld.u64         tmp_26295, [ptr_from_optix_id_26297];
              .reg .f32      tmp_26301_0, tmp_26301_1;
              .reg.u64       off_26302;
              mad.wide.u32   off_26302, tmp_26294, 192, 168;
              .reg.s32       optix_buffer_id_26303;
              mov.b64        {_, optix_buffer_id_26303}, tmp_26295;
              .reg.u64       ptr_from_optix_id_26304;
{
              .reg.s32       abstract_26305;
              mov.b32        abstract_26305, 1;
              .reg.u64       const_26306;
              mov.b64        const_26306, 512;
              .reg.u64       off_26307;
              add.u64        off_26307, const_26306, off_26302;
              .reg.u64       const_26308;
              mov.b64        const_26308, 0;
 call (ptr_from_optix_id_26304), _rt_buffer_get_id_64, (optix_buffer_id_26303, abstract_26305, abstract_26305, off_26307, const_26308, const_26308, const_26308); // resolving optix id
}
              ld.v2.f32      {tmp_26301_0, tmp_26301_1}, [ptr_from_optix_id_26304];
              .reg .f32      temp_24536_0, temp_24536_1;
              div.approx.ftz.f32 temp_24536_0, temp_24528_0, tmp_26301_0;
              div.approx.ftz.f32 temp_24536_1, temp_24528_1, tmp_26301_1;
              .reg .f32      temp_24537_0, temp_24537_1;
              mul.ftz.f32    temp_24537_0, temp_24531_0, tmp_26301_0;
              mul.ftz.f32    temp_24537_1, temp_24531_1, tmp_26301_1;
              .reg .f32      temp_24538_0, temp_24538_1;
              mul.ftz.f32    temp_24538_0, tmp_26301_0, tmp_26301_0;
              mul.ftz.f32    temp_24538_1, tmp_26301_1, tmp_26301_1;
              .reg .f32      temp_24539_0, temp_24539_1;
              div.approx.ftz.f32 temp_24539_0, temp_24537_0, temp_24538_0;
              div.approx.ftz.f32 temp_24539_1, temp_24537_1, temp_24538_1;
              .reg .f32      temp_24540_0, temp_24540_1;
              mul.ftz.f32    temp_24540_0, temp_24534_0, tmp_26301_0;
              mul.ftz.f32    temp_24540_1, temp_24534_1, tmp_26301_1;
              .reg .f32      temp_24541_0, temp_24541_1;
              div.approx.ftz.f32 temp_24541_0, temp_24540_0, temp_24538_0;
              div.approx.ftz.f32 temp_24541_1, temp_24540_1, temp_24538_1;
              .reg .f32      temp_24543_0, temp_24543_1;
              add.ftz.f32    temp_24543_0, temp_24536_0, 0F3f000000;
              add.ftz.f32    temp_24543_1, temp_24536_1, 0F3f000000;
              mov.b32        scl_21744_0, temp_24543_0;
              mov.b32        scl_21744_1, temp_24543_1;
              mov.b32        scl_21745_0, temp_24539_0;
              mov.b32        scl_21745_1, temp_24539_1;
              mov.b32        scl_21746_0, temp_24541_0;
              mov.b32        scl_21746_1, temp_24541_1;
merge_26221:
              .reg .f32      scl_24546_0, scl_24546_1, scl_24546_2;
              .reg.f32       scl_24547;
              .reg.pred      tmp_26209_26311;
              setp.ne.s32    tmp_26209_26311, 0, tmp_26209;
  @!tmp_26209_26311 bra      else_26309;
              .reg.u64       tmp_26312;
              .reg.s32       optix_buffer_id_26313;
              mov.b64        {_, optix_buffer_id_26313}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26314;
{
              .reg.s32       abstract_26315;
              mov.b32        abstract_26315, 1;
              .reg.u64       const_26316;
              mov.b64        const_26316, 528;
              .reg.u64       const_26317;
              mov.b64        const_26317, 0;
 call (ptr_from_optix_id_26314), _rt_buffer_get_id_64, (optix_buffer_id_26313, abstract_26315, abstract_26315, const_26316, const_26317, const_26317, const_26317); // resolving optix id
}
              ld.u64         tmp_26312, [ptr_from_optix_id_26314];
              .reg .f32      tmp_26318_0, tmp_26318_1;
              .reg.u64       off_26319;
              mad.wide.u32   off_26319, tmp_26182, 112, 88;
              .reg.s32       optix_buffer_id_26320;
              mov.b64        {_, optix_buffer_id_26320}, tmp_26312;
              .reg.u64       ptr_from_optix_id_26321;
{
              .reg.s32       abstract_26322;
              mov.b32        abstract_26322, 1;
              .reg.u64       const_26323;
              mov.b64        const_26323, 512;
              .reg.u64       off_26324;
              add.u64        off_26324, const_26323, off_26319;
              .reg.u64       const_26325;
              mov.b64        const_26325, 0;
 call (ptr_from_optix_id_26321), _rt_buffer_get_id_64, (optix_buffer_id_26320, abstract_26322, abstract_26322, off_26324, const_26325, const_26325, const_26325); // resolving optix id
}
              ld.v2.f32      {tmp_26318_0, tmp_26318_1}, [ptr_from_optix_id_26321];
              .reg.u64       tmp_26326;
              .reg.s32       optix_buffer_id_26327;
              mov.b64        {_, optix_buffer_id_26327}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26328;
{
              .reg.s32       abstract_26329;
              mov.b32        abstract_26329, 1;
              .reg.u64       const_26330;
              mov.b64        const_26330, 528;
              .reg.u64       const_26331;
              mov.b64        const_26331, 0;
 call (ptr_from_optix_id_26328), _rt_buffer_get_id_64, (optix_buffer_id_26327, abstract_26329, abstract_26329, const_26330, const_26331, const_26331, const_26331); // resolving optix id
}
              ld.u64         tmp_26326, [ptr_from_optix_id_26328];
              .reg .f32      tmp_26332_0, tmp_26332_1;
              .reg.u64       off_26333;
              mad.wide.u32   off_26333, tmp_26182, 112, 96;
              .reg.s32       optix_buffer_id_26334;
              mov.b64        {_, optix_buffer_id_26334}, tmp_26326;
              .reg.u64       ptr_from_optix_id_26335;
{
              .reg.s32       abstract_26336;
              mov.b32        abstract_26336, 1;
              .reg.u64       const_26337;
              mov.b64        const_26337, 512;
              .reg.u64       off_26338;
              add.u64        off_26338, const_26337, off_26333;
              .reg.u64       const_26339;
              mov.b64        const_26339, 0;
 call (ptr_from_optix_id_26335), _rt_buffer_get_id_64, (optix_buffer_id_26334, abstract_26336, abstract_26336, off_26338, const_26339, const_26339, const_26339); // resolving optix id
}
              ld.v2.f32      {tmp_26332_0, tmp_26332_1}, [ptr_from_optix_id_26335];
              .reg .f32      temp_24552_0, temp_24552_1;
              sub.ftz.f32    temp_24552_0, tmp_26332_0, tmp_26318_0;
              sub.ftz.f32    temp_24552_1, tmp_26332_1, tmp_26318_1;
              .reg .f32      temp_24554_0, temp_24554_1;
              mul.ftz.f32    temp_24554_0, scl_21744_0, temp_24552_0;
              mul.ftz.f32    temp_24554_1, scl_21744_1, temp_24552_1;
              .reg .f32      temp_24556_0, temp_24556_1;
              mul.ftz.f32    temp_24556_0, scl_21745_0, temp_24552_0;
              mul.ftz.f32    temp_24556_1, scl_21745_1, temp_24552_1;
              .reg .f32      temp_24558_0, temp_24558_1;
              mul.ftz.f32    temp_24558_0, scl_21746_0, temp_24552_0;
              mul.ftz.f32    temp_24558_1, scl_21746_1, temp_24552_1;
              .reg .f32      temp_24559_0, temp_24559_1;
              add.ftz.f32    temp_24559_0, temp_24554_0, tmp_26318_0;
              add.ftz.f32    temp_24559_1, temp_24554_1, tmp_26318_1;
              .reg.u64       tmp_26340;
              .reg.s32       optix_buffer_id_26341;
              mov.b64        {_, optix_buffer_id_26341}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26342;
{
              .reg.s32       abstract_26343;
              mov.b32        abstract_26343, 1;
              .reg.u64       const_26344;
              mov.b64        const_26344, 528;
              .reg.u64       const_26345;
              mov.b64        const_26345, 0;
 call (ptr_from_optix_id_26342), _rt_buffer_get_id_64, (optix_buffer_id_26341, abstract_26343, abstract_26343, const_26344, const_26345, const_26345, const_26345); // resolving optix id
}
              ld.u64         tmp_26340, [ptr_from_optix_id_26342];
              .reg .f32      tmp_26346_0, tmp_26346_1, tmp_26346_2;
              .reg.u64       off_26347;
              mad.wide.u32   off_26347, tmp_26182, 112, 48;
              .reg.s32       optix_buffer_id_26348;
              mov.b64        {_, optix_buffer_id_26348}, tmp_26340;
              .reg.u64       ptr_from_optix_id_26349;
{
              .reg.s32       abstract_26350;
              mov.b32        abstract_26350, 1;
              .reg.u64       const_26351;
              mov.b64        const_26351, 512;
              .reg.u64       off_26352;
              add.u64        off_26352, const_26351, off_26347;
              .reg.u64       const_26353;
              mov.b64        const_26353, 0;
 call (ptr_from_optix_id_26349), _rt_buffer_get_id_64, (optix_buffer_id_26348, abstract_26350, abstract_26350, off_26352, const_26353, const_26353, const_26353); // resolving optix id
}
              ld.v2.f32      {tmp_26346_0, tmp_26346_1}, [ptr_from_optix_id_26349];
              ld.f32         tmp_26346_2, [ptr_from_optix_id_26349+8];
              .reg.u64       tmp_26354;
              .reg.s32       optix_buffer_id_26355;
              mov.b64        {_, optix_buffer_id_26355}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26356;
{
              .reg.s32       abstract_26357;
              mov.b32        abstract_26357, 1;
              .reg.u64       const_26358;
              mov.b64        const_26358, 528;
              .reg.u64       const_26359;
              mov.b64        const_26359, 0;
 call (ptr_from_optix_id_26356), _rt_buffer_get_id_64, (optix_buffer_id_26355, abstract_26357, abstract_26357, const_26358, const_26359, const_26359, const_26359); // resolving optix id
}
              ld.u64         tmp_26354, [ptr_from_optix_id_26356];
              .reg.f32       tmp_26360;
              .reg.u64       off_26361;
              mad.wide.u32   off_26361, tmp_26182, 112, 64;
              .reg.s32       optix_buffer_id_26362;
              mov.b64        {_, optix_buffer_id_26362}, tmp_26354;
              .reg.u64       ptr_from_optix_id_26363;
{
              .reg.s32       abstract_26364;
              mov.b32        abstract_26364, 1;
              .reg.u64       const_26365;
              mov.b64        const_26365, 512;
              .reg.u64       off_26366;
              add.u64        off_26366, const_26365, off_26361;
              .reg.u64       const_26367;
              mov.b64        const_26367, 0;
 call (ptr_from_optix_id_26363), _rt_buffer_get_id_64, (optix_buffer_id_26362, abstract_26364, abstract_26364, off_26366, const_26367, const_26367, const_26367); // resolving optix id
}
              ld.f32         tmp_26360, [ptr_from_optix_id_26363];
              .reg.u64       tmp_26368;
              .reg.s32       optix_buffer_id_26369;
              mov.b64        {_, optix_buffer_id_26369}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26370;
{
              .reg.s32       abstract_26371;
              mov.b32        abstract_26371, 1;
              .reg.u64       const_26372;
              mov.b64        const_26372, 528;
              .reg.u64       const_26373;
              mov.b64        const_26373, 0;
 call (ptr_from_optix_id_26370), _rt_buffer_get_id_64, (optix_buffer_id_26369, abstract_26371, abstract_26371, const_26372, const_26373, const_26373, const_26373); // resolving optix id
}
              ld.u64         tmp_26368, [ptr_from_optix_id_26370];
              .reg.s32       tmp_26374;
              .reg.u64       off_26375;
              mad.wide.u32   off_26375, tmp_26182, 112, 16;
              .reg.s32       optix_buffer_id_26376;
              mov.b64        {_, optix_buffer_id_26376}, tmp_26368;
              .reg.u64       ptr_from_optix_id_26377;
{
              .reg.s32       abstract_26378;
              mov.b32        abstract_26378, 1;
              .reg.u64       const_26379;
              mov.b64        const_26379, 512;
              .reg.u64       off_26380;
              add.u64        off_26380, const_26379, off_26375;
              .reg.u64       const_26381;
              mov.b64        const_26381, 0;
 call (ptr_from_optix_id_26377), _rt_buffer_get_id_64, (optix_buffer_id_26376, abstract_26378, abstract_26378, off_26380, const_26381, const_26381, const_26381); // resolving optix id
}
              ld.s32         tmp_26374, [ptr_from_optix_id_26377];
              .reg.u64       tmp_26382;
              .reg.s32       optix_buffer_id_26383;
              mov.b64        {_, optix_buffer_id_26383}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26384;
{
              .reg.s32       abstract_26385;
              mov.b32        abstract_26385, 1;
              .reg.u64       const_26386;
              mov.b64        const_26386, 528;
              .reg.u64       const_26387;
              mov.b64        const_26387, 0;
 call (ptr_from_optix_id_26384), _rt_buffer_get_id_64, (optix_buffer_id_26383, abstract_26385, abstract_26385, const_26386, const_26387, const_26387, const_26387); // resolving optix id
}
              ld.u64         tmp_26382, [ptr_from_optix_id_26384];
              .reg.u64       tmp_26388;
              .reg.u64       off_26389;
              mad.wide.u32   off_26389, tmp_26182, 112, 24;
              .reg.s32       optix_buffer_id_26390;
              mov.b64        {_, optix_buffer_id_26390}, tmp_26382;
              .reg.u64       ptr_from_optix_id_26391;
{
              .reg.s32       abstract_26392;
              mov.b32        abstract_26392, 1;
              .reg.u64       const_26393;
              mov.b64        const_26393, 512;
              .reg.u64       off_26394;
              add.u64        off_26394, const_26393, off_26389;
              .reg.u64       const_26395;
              mov.b64        const_26395, 0;
 call (ptr_from_optix_id_26391), _rt_buffer_get_id_64, (optix_buffer_id_26390, abstract_26392, abstract_26392, off_26394, const_26395, const_26395, const_26395); // resolving optix id
}
              ld.u64         tmp_26388, [ptr_from_optix_id_26391];
              .reg.u64       tmp_26396;
              .reg.s32       optix_buffer_id_26397;
              mov.b64        {_, optix_buffer_id_26397}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26398;
{
              .reg.s32       abstract_26399;
              mov.b32        abstract_26399, 1;
              .reg.u64       const_26400;
              mov.b64        const_26400, 512;
              .reg.u64       const_26401;
              mov.b64        const_26401, 0;
 call (ptr_from_optix_id_26398), _rt_buffer_get_id_64, (optix_buffer_id_26397, abstract_26399, abstract_26399, const_26400, const_26401, const_26401, const_26401); // resolving optix id
}
              ld.u64         tmp_26396, [ptr_from_optix_id_26398];
              .reg .s32      tmp_26402_0, tmp_26402_1;
              .reg.u64       off_26403;
              mad.wide.u32   off_26403, tmp_26374, 32, 16;
              .reg.s32       optix_buffer_id_26404;
              mov.b64        {_, optix_buffer_id_26404}, tmp_26396;
              .reg.u64       ptr_from_optix_id_26405;
{
              .reg.s32       abstract_26406;
              mov.b32        abstract_26406, 1;
              .reg.u64       const_26407;
              mov.b64        const_26407, 512;
              .reg.u64       off_26408;
              add.u64        off_26408, const_26407, off_26403;
              .reg.u64       const_26409;
              mov.b64        const_26409, 0;
 call (ptr_from_optix_id_26405), _rt_buffer_get_id_64, (optix_buffer_id_26404, abstract_26406, abstract_26406, off_26408, const_26409, const_26409, const_26409); // resolving optix id
}
              ld.v2.s32      {tmp_26402_0, tmp_26402_1}, [ptr_from_optix_id_26405];
              .reg .f32      temp_24569_0, temp_24569_1;
              cvt.rn.f32.s32 temp_24569_0, tmp_26402_0;
              cvt.rn.f32.s32 temp_24569_1, tmp_26402_1;
              .reg .f32      temp_24570_0, temp_24570_1;
              mul.ftz.f32    temp_24570_0, temp_24569_0, temp_24556_0;
              mul.ftz.f32    temp_24570_1, temp_24569_1, temp_24556_1;
              .reg.f32       temp_24571;
              mul.ftz.f32    temp_24571, temp_24570_0, temp_24570_0;
              fma.rn.ftz.f32 temp_24571, temp_24570_1, temp_24570_1, temp_24571;
              .reg.f32       temp_24572;
              sqrt.approx.f32 temp_24572, temp_24571;
              .reg .f32      temp_24573_0, temp_24573_1;
              mul.ftz.f32    temp_24573_0, temp_24569_0, temp_24558_0;
              mul.ftz.f32    temp_24573_1, temp_24569_1, temp_24558_1;
              .reg.f32       temp_24574;
              mul.ftz.f32    temp_24574, temp_24573_0, temp_24573_0;
              fma.rn.ftz.f32 temp_24574, temp_24573_1, temp_24573_1, temp_24574;
              .reg.f32       temp_24575;
              sqrt.approx.f32 temp_24575, temp_24574;
              .reg.f32       rho_24576;
              max.ftz.f32    rho_24576, temp_24572, temp_24575;
              .reg.f32       rho_24577;
              max.f32        rho_24577, rho_24576, 0F3f800000;
              min.f32        rho_24577, rho_24577, 0F47000000;
              .reg.f32       temp_24578;
              lg2.approx.ftz.f32 temp_24578, rho_24577;
              .reg .f32      rgba_24579_0, rgba_24579_1, rgba_24579_2, rgba_24579_3;
{
              .local .align 16 .b8 result_mem_26410[16] ;
              .reg.u64       result_26411;
              mov.u64        result_26411, result_mem_26410;
              cvta.local.u64 result_26411, result_26411;
              .local .align 8 .b8 param_mem_26412[8] ;
              .reg.u64       param_26413;
              mov.u64        param_26413, param_mem_26412;
              cvta.local.u64 param_26413, param_26413;
              st.u64         [param_26413], tmp_26388;
              .local .align 8 .b8 param_mem_26414[8] ;
              .reg.u64       param_26415;
              mov.u64        param_26415, param_mem_26414;
              cvta.local.u64 param_26415, param_26415;
              st.v2.f32      [param_26415], {temp_24559_0, temp_24559_1};
              .local .align 4 .b8 param_mem_26416[4] ;
              .reg.u64       param_26417;
              mov.u64        param_26417, param_mem_26416;
              cvta.local.u64 param_26417, param_26417;
              st.f32         [param_26417], temp_24578;
              call.uni       optix_texture_lod, (result_26411, param_26413, param_26415, param_26417);
              ld.v4.f32      {rgba_24579_0, rgba_24579_1, rgba_24579_2, rgba_24579_3}, [result_26411];
}
              .reg.u64       tmp_26418;
              .reg.s32       optix_buffer_id_26419;
              mov.b64        {_, optix_buffer_id_26419}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26420;
{
              .reg.s32       abstract_26421;
              mov.b32        abstract_26421, 1;
              .reg.u64       const_26422;
              mov.b64        const_26422, 512;
              .reg.u64       const_26423;
              mov.b64        const_26423, 0;
 call (ptr_from_optix_id_26420), _rt_buffer_get_id_64, (optix_buffer_id_26419, abstract_26421, abstract_26421, const_26422, const_26423, const_26423, const_26423); // resolving optix id
}
              ld.u64         tmp_26418, [ptr_from_optix_id_26420];
              .reg.s32       tmp_26424;
              .reg.u64       off_26425;
              mad.wide.u32   off_26425, tmp_26374, 32, 0;
              .reg.s32       optix_buffer_id_26426;
              mov.b64        {_, optix_buffer_id_26426}, tmp_26418;
              .reg.u64       ptr_from_optix_id_26427;
{
              .reg.s32       abstract_26428;
              mov.b32        abstract_26428, 1;
              .reg.u64       const_26429;
              mov.b64        const_26429, 512;
              .reg.u64       off_26430;
              add.u64        off_26430, const_26429, off_26425;
              .reg.u64       const_26431;
              mov.b64        const_26431, 0;
 call (ptr_from_optix_id_26427), _rt_buffer_get_id_64, (optix_buffer_id_26426, abstract_26428, abstract_26428, off_26430, const_26431, const_26431, const_26431); // resolving optix id
}
              ld.s32         tmp_26424, [ptr_from_optix_id_26427];
              .reg.s32       is_luminance_24581;
              set.lt.s32.s32 is_luminance_24581, tmp_26424, 4;
              .reg .f32      temp_24584_0, temp_24584_1, temp_24584_2, temp_24584_3;
              .reg.pred      is_luminance_24581_26432;
              setp.ne.s32    is_luminance_24581_26432, 0, is_luminance_24581;
              selp.f32       temp_24584_0, rgba_24579_0, rgba_24579_0, is_luminance_24581_26432;
              selp.f32       temp_24584_1, rgba_24579_0, rgba_24579_1, is_luminance_24581_26432;
              selp.f32       temp_24584_2, rgba_24579_0, rgba_24579_2, is_luminance_24581_26432;
              selp.f32       temp_24584_3, 0F3f800000, rgba_24579_3, is_luminance_24581_26432;
              .reg.u64       tmp_26433;
              .reg.s32       optix_buffer_id_26434;
              mov.b64        {_, optix_buffer_id_26434}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26435;
{
              .reg.s32       abstract_26436;
              mov.b32        abstract_26436, 1;
              .reg.u64       const_26437;
              mov.b64        const_26437, 528;
              .reg.u64       const_26438;
              mov.b64        const_26438, 0;
 call (ptr_from_optix_id_26435), _rt_buffer_get_id_64, (optix_buffer_id_26434, abstract_26436, abstract_26436, const_26437, const_26438, const_26438, const_26438); // resolving optix id
}
              ld.u64         tmp_26433, [ptr_from_optix_id_26435];
              .reg.s32       tmp_26439;
              .reg.u64       off_26440;
              mad.wide.u32   off_26440, tmp_26182, 112, 32;
              .reg.s32       optix_buffer_id_26441;
              mov.b64        {_, optix_buffer_id_26441}, tmp_26433;
              .reg.u64       ptr_from_optix_id_26442;
{
              .reg.s32       abstract_26443;
              mov.b32        abstract_26443, 1;
              .reg.u64       const_26444;
              mov.b64        const_26444, 512;
              .reg.u64       off_26445;
              add.u64        off_26445, const_26444, off_26440;
              .reg.u64       const_26446;
              mov.b64        const_26446, 0;
 call (ptr_from_optix_id_26442), _rt_buffer_get_id_64, (optix_buffer_id_26441, abstract_26443, abstract_26443, off_26445, const_26446, const_26446, const_26446); // resolving optix id
}
              ld.s32         tmp_26439, [ptr_from_optix_id_26442];
              .reg.s32       temp_24586;
              set.eq.s32.s32 temp_24586, tmp_26439, 1;
              .reg.f32       fraction_u_24587;
              .reg.pred      temp_24586_26449;
              setp.ne.s32    temp_24586_26449, 0, temp_24586;
  @!temp_24586_26449 bra     else_26447;
              .reg.f32       temp_24612;
              cvt.rn.f32.s32 temp_24612, tmp_26402_0;
              .reg.f32       min_clamp_24613;
              div.approx.ftz.f32 min_clamp_24613, 0F3f000000, temp_24612;
              .reg.f32       max_clamp_24614;
              sub.ftz.f32    max_clamp_24614, 0F3f800000, min_clamp_24613;
              .reg.f32       wrapped_coord_24615;
              max.f32        wrapped_coord_24615, temp_24559_0, min_clamp_24613;
              min.f32        wrapped_coord_24615, wrapped_coord_24615, max_clamp_24614;
              .reg.f32       temp_24616;
              sub.ftz.f32    temp_24616, temp_24559_0, wrapped_coord_24615;
              .reg.f32       temp_24617;
              abs.ftz.f32    temp_24617, temp_24616;
              .reg.f32       temp_24618;
              mul.ftz.f32    temp_24618, temp_24617, temp_24612;
              .reg.f32       temp_24619;
              max.f32        temp_24619, temp_24618, 0F00000000;
              min.f32        temp_24619, temp_24619, 0F3f800000;
              mov.b32        fraction_u_24587, temp_24619;
              bra.uni        merge_26448;
else_26447:
              mov.b32        fraction_u_24587, 0F00000000;
merge_26448:
              .reg.u64       tmp_26450;
              .reg.s32       optix_buffer_id_26451;
              mov.b64        {_, optix_buffer_id_26451}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26452;
{
              .reg.s32       abstract_26453;
              mov.b32        abstract_26453, 1;
              .reg.u64       const_26454;
              mov.b64        const_26454, 528;
              .reg.u64       const_26455;
              mov.b64        const_26455, 0;
 call (ptr_from_optix_id_26452), _rt_buffer_get_id_64, (optix_buffer_id_26451, abstract_26453, abstract_26453, const_26454, const_26455, const_26455, const_26455); // resolving optix id
}
              ld.u64         tmp_26450, [ptr_from_optix_id_26452];
              .reg.s32       tmp_26456;
              .reg.u64       off_26457;
              mad.wide.u32   off_26457, tmp_26182, 112, 36;
              .reg.s32       optix_buffer_id_26458;
              mov.b64        {_, optix_buffer_id_26458}, tmp_26450;
              .reg.u64       ptr_from_optix_id_26459;
{
              .reg.s32       abstract_26460;
              mov.b32        abstract_26460, 1;
              .reg.u64       const_26461;
              mov.b64        const_26461, 512;
              .reg.u64       off_26462;
              add.u64        off_26462, const_26461, off_26457;
              .reg.u64       const_26463;
              mov.b64        const_26463, 0;
 call (ptr_from_optix_id_26459), _rt_buffer_get_id_64, (optix_buffer_id_26458, abstract_26460, abstract_26460, off_26462, const_26463, const_26463, const_26463); // resolving optix id
}
              ld.s32         tmp_26456, [ptr_from_optix_id_26459];
              .reg.s32       temp_24589;
              set.eq.s32.s32 temp_24589, tmp_26456, 1;
              .reg.f32       fraction_v_24590;
              .reg.pred      temp_24589_26466;
              setp.ne.s32    temp_24589_26466, 0, temp_24589;
  @!temp_24589_26466 bra     else_26464;
              .reg.f32       temp_24602;
              cvt.rn.f32.s32 temp_24602, tmp_26402_1;
              .reg.f32       min_clamp_24603;
              div.approx.ftz.f32 min_clamp_24603, 0F3f000000, temp_24602;
              .reg.f32       max_clamp_24604;
              sub.ftz.f32    max_clamp_24604, 0F3f800000, min_clamp_24603;
              .reg.f32       wrapped_coord_24605;
              max.f32        wrapped_coord_24605, temp_24559_1, min_clamp_24603;
              min.f32        wrapped_coord_24605, wrapped_coord_24605, max_clamp_24604;
              .reg.f32       temp_24606;
              sub.ftz.f32    temp_24606, temp_24559_1, wrapped_coord_24605;
              .reg.f32       temp_24607;
              abs.ftz.f32    temp_24607, temp_24606;
              .reg.f32       temp_24608;
              mul.ftz.f32    temp_24608, temp_24607, temp_24602;
              .reg.f32       temp_24609;
              max.f32        temp_24609, temp_24608, 0F00000000;
              min.f32        temp_24609, temp_24609, 0F3f800000;
              mov.b32        fraction_v_24590, temp_24609;
              bra.uni        merge_26465;
else_26464:
              mov.b32        fraction_v_24590, 0F00000000;
merge_26465:
              .reg .f32      color_24592_0, color_24592_1, color_24592_2, color_24592_3;
              sub.rn.ftz.f32 color_24592_0, tmp_26346_0, temp_24584_0;
              fma.rn.f32     color_24592_0, fraction_u_24587, color_24592_0, temp_24584_0;
              sub.rn.ftz.f32 color_24592_1, tmp_26346_1, temp_24584_1;
              fma.rn.f32     color_24592_1, fraction_u_24587, color_24592_1, temp_24584_1;
              sub.rn.ftz.f32 color_24592_2, tmp_26346_2, temp_24584_2;
              fma.rn.f32     color_24592_2, fraction_u_24587, color_24592_2, temp_24584_2;
              sub.rn.ftz.f32 color_24592_3, tmp_26360, temp_24584_3;
              fma.rn.f32     color_24592_3, fraction_u_24587, color_24592_3, temp_24584_3;
              .reg .f32      color_24594_0, color_24594_1, color_24594_2, color_24594_3;
              sub.rn.ftz.f32 color_24594_0, tmp_26346_0, color_24592_0;
              fma.rn.f32     color_24594_0, fraction_v_24590, color_24594_0, color_24592_0;
              sub.rn.ftz.f32 color_24594_1, tmp_26346_1, color_24592_1;
              fma.rn.f32     color_24594_1, fraction_v_24590, color_24594_1, color_24592_1;
              sub.rn.ftz.f32 color_24594_2, tmp_26346_2, color_24592_2;
              fma.rn.f32     color_24594_2, fraction_v_24590, color_24594_2, color_24592_2;
              sub.rn.ftz.f32 color_24594_3, tmp_26360, color_24592_3;
              fma.rn.f32     color_24594_3, fraction_v_24590, color_24594_3, color_24592_3;
              .reg.u64       tmp_26467;
              .reg.s32       optix_buffer_id_26468;
              mov.b64        {_, optix_buffer_id_26468}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26469;
{
              .reg.s32       abstract_26470;
              mov.b32        abstract_26470, 1;
              .reg.u64       const_26471;
              mov.b64        const_26471, 528;
              .reg.u64       const_26472;
              mov.b64        const_26472, 0;
 call (ptr_from_optix_id_26469), _rt_buffer_get_id_64, (optix_buffer_id_26468, abstract_26470, abstract_26470, const_26471, const_26472, const_26472, const_26472); // resolving optix id
}
              ld.u64         tmp_26467, [ptr_from_optix_id_26469];
              .reg.f32       tmp_26473;
              .reg.u64       off_26474;
              mad.wide.u32   off_26474, tmp_26182, 112, 80;
              .reg.s32       optix_buffer_id_26475;
              mov.b64        {_, optix_buffer_id_26475}, tmp_26467;
              .reg.u64       ptr_from_optix_id_26476;
{
              .reg.s32       abstract_26477;
              mov.b32        abstract_26477, 1;
              .reg.u64       const_26478;
              mov.b64        const_26478, 512;
              .reg.u64       off_26479;
              add.u64        off_26479, const_26478, off_26474;
              .reg.u64       const_26480;
              mov.b64        const_26480, 0;
 call (ptr_from_optix_id_26476), _rt_buffer_get_id_64, (optix_buffer_id_26475, abstract_26477, abstract_26477, off_26479, const_26480, const_26480, const_26480); // resolving optix id
}
              ld.f32         tmp_26473, [ptr_from_optix_id_26476];
              .reg .f32      temp_24599_0, temp_24599_1, temp_24599_2;
              mul.ftz.f32    temp_24599_0, tmp_26473, color_24594_0;
              mul.ftz.f32    temp_24599_1, tmp_26473, color_24594_1;
              mul.ftz.f32    temp_24599_2, tmp_26473, color_24594_2;
              mov.b32        scl_24546_0, temp_24599_0;
              mov.b32        scl_24546_1, temp_24599_1;
              mov.b32        scl_24546_2, temp_24599_2;
              mov.b32        scl_24547, color_24594_3;
              bra.uni        merge_26310;
else_26309:
              mov.b32        scl_24546_0, 0F00000000;
              mov.b32        scl_24546_1, 0F00000000;
              mov.b32        scl_24546_2, 0F00000000;
              mov.b32        scl_24547, 0F00000000;
merge_26310:
              mov.b32        scl_21740, scl_24547;
              mov.b32        scl_21741_0, scl_24546_0;
              mov.b32        scl_21741_1, scl_24546_1;
              mov.b32        scl_21741_2, scl_24546_2;
              bra.uni        merge_26218;
else_26217:
              mov.b32        scl_21740, 0F00000000;
              mov.b32        scl_21741_0, 0F00000000;
              mov.b32        scl_21741_1, 0F00000000;
              mov.b32        scl_21741_2, 0F00000000;
merge_26218:
              .reg.s32       temp_20847;
              set.ge.ftz.s32.f32 temp_20847, scl_21740, 0F3f800000;
              .reg.u64       scl_21763;
              .reg.u64       scl_21764;
              .reg.u64       scl_21765;
              .reg .f32      scl_21761_0, scl_21761_1, scl_21761_2;
              .reg.f32       scl_21762;
              .reg.pred      temp_20847_26483;
              setp.ne.s32    temp_20847_26483, 0, temp_20847;
  @!temp_20847_26483 bra     else_26481;
              .reg .f32      temp_24620_0, temp_24620_1, temp_24620_2;
              mul.ftz.f32    temp_24620_0, scl_21741_0, tmp_26200_0_0;
              mul.ftz.f32    temp_24620_1, scl_21741_1, tmp_26200_0_1;
              mul.ftz.f32    temp_24620_2, scl_21741_2, tmp_26200_0_2;
              mov.u64        scl_21763, tmp_26191;
              mov.u64        scl_21764, tmp_26193;
              mov.u64        scl_21765, tmp_26195;
              mov.b32        scl_21761_0, temp_24620_0;
              mov.b32        scl_21761_1, temp_24620_1;
              mov.b32        scl_21761_2, temp_24620_2;
              mov.b32        scl_21762, tmp_26200_1;
              bra.uni        merge_26482;
else_26481:
              .reg.s32       temp_24622;
              and.b32        temp_24622, tmp_26200_5, 32;
              .reg.s32       temp_24623;
              set.gt.s32.s32 temp_24623, temp_24622, 0;
              .reg.u64       scl_21780;
              .reg.u64       scl_21781;
              .reg.u64       scl_21782;
              .reg .f32      scl_21778_0, scl_21778_1, scl_21778_2;
              .reg.f32       scl_21779;
              .reg.pred      temp_24623_26486;
              setp.ne.s32    temp_24623_26486, 0, temp_24623;
  @!temp_24623_26486 bra     else_26484;
              .reg.s32       temp_24625;
              and.b32        temp_24625, tmp_26200_5, 1;
              .reg.s32       temp_24626;
              set.gt.s32.s32 temp_24626, temp_24625, 0;
              .reg.u64       scl_21792;
              .reg.u64       scl_21793;
              .reg.u64       scl_21794;
              .reg .f32      scl_21790_0, scl_21790_1, scl_21790_2;
              .reg.f32       scl_21791;
              .reg.pred      temp_24626_26489;
              setp.ne.s32    temp_24626_26489, 0, temp_24626;
  @!temp_24626_26489 bra     else_26487;
              mov.u64        scl_21792, tmp_26191;
              mov.u64        scl_21793, tmp_26193;
              mov.u64        scl_21794, tmp_26195;
              mov.b32        scl_21790_0, tmp_26200_0_0;
              mov.b32        scl_21790_1, tmp_26200_0_1;
              mov.b32        scl_21790_2, tmp_26200_0_2;
              mov.b32        scl_21791, tmp_26200_1;
              bra.uni        merge_26488;
else_26487:
              mov.u64        scl_21792, tmp_26191;
              mov.u64        scl_21793, tmp_26193;
              mov.u64        scl_21794, tmp_26195;
              mov.b32        scl_21790_0, 0F00000000;
              mov.b32        scl_21790_1, 0F00000000;
              mov.b32        scl_21790_2, 0F00000000;
              mov.b32        scl_21791, 0F00000000;
merge_26488:
              mov.u64        scl_21780, scl_21792;
              mov.u64        scl_21781, scl_21793;
              mov.u64        scl_21782, scl_21794;
              mov.b32        scl_21778_0, scl_21790_0;
              mov.b32        scl_21778_1, scl_21790_1;
              mov.b32        scl_21778_2, scl_21790_2;
              mov.b32        scl_21779, scl_21791;
              bra.uni        merge_26485;
else_26484:
              .reg.s32       temp_24628;
              and.b32        temp_24628, tmp_26200_5, 1;
              .reg.s32       temp_24629;
              set.gt.s32.s32 temp_24629, temp_24628, 0;
              .reg.u64       scl_21819;
              .reg.u64       scl_21820;
              .reg.u64       scl_21821;
              .reg .f32      scl_21817_0, scl_21817_1, scl_21817_2;
              .reg.f32       scl_21818;
              .reg.pred      temp_24629_26492;
              setp.ne.s32    temp_24629_26492, 0, temp_24629;
  @!temp_24629_26492 bra     else_26490;
              .reg.u64       tmp_26493;
              .reg.s32       optix_buffer_id_26494;
              mov.b64        {_, optix_buffer_id_26494}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26495;
{
              .reg.s32       abstract_26496;
              mov.b32        abstract_26496, 1;
              .reg.u64       const_26497;
              mov.b64        const_26497, 520;
              .reg.u64       const_26498;
              mov.b64        const_26498, 0;
 call (ptr_from_optix_id_26495), _rt_buffer_get_id_64, (optix_buffer_id_26494, abstract_26496, abstract_26496, const_26497, const_26498, const_26498, const_26498); // resolving optix id
}
              ld.u64         tmp_26493, [ptr_from_optix_id_26495];
              .reg.s32       tmp_26499;
              .reg.u64       off_26500;
              mad.wide.u32   off_26500, tmp_26200_9, 24, 0;
              .reg.s32       optix_buffer_id_26501;
              mov.b64        {_, optix_buffer_id_26501}, tmp_26493;
              .reg.u64       ptr_from_optix_id_26502;
{
              .reg.s32       abstract_26503;
              mov.b32        abstract_26503, 1;
              .reg.u64       const_26504;
              mov.b64        const_26504, 512;
              .reg.u64       off_26505;
              add.u64        off_26505, const_26504, off_26500;
              .reg.u64       const_26506;
              mov.b64        const_26506, 0;
 call (ptr_from_optix_id_26502), _rt_buffer_get_id_64, (optix_buffer_id_26501, abstract_26503, abstract_26503, off_26505, const_26506, const_26506, const_26506); // resolving optix id
}
              ld.s32         tmp_26499, [ptr_from_optix_id_26502];
              .reg.s32       temp_24635;
              .reg.pred      tmp_26499_26507;
              setp.ne.s32    tmp_26499_26507, 0, tmp_26499;
              selp.s32       temp_24635, 2, 0, tmp_26499_26507;
              .reg.s32       temp_24636;
              or.b32         temp_24636, 1, temp_24635;
              .reg.u64       tmp_26508;
              .reg.s32       optix_buffer_id_26509;
              mov.b64        {_, optix_buffer_id_26509}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26510;
{
              .reg.s32       abstract_26511;
              mov.b32        abstract_26511, 1;
              .reg.u64       const_26512;
              mov.b64        const_26512, 520;
              .reg.u64       const_26513;
              mov.b64        const_26513, 0;
 call (ptr_from_optix_id_26510), _rt_buffer_get_id_64, (optix_buffer_id_26509, abstract_26511, abstract_26511, const_26512, const_26513, const_26513, const_26513); // resolving optix id
}
              ld.u64         tmp_26508, [ptr_from_optix_id_26510];
              .reg.s32       tmp_26514;
              .reg.u64       off_26515;
              mad.wide.u32   off_26515, tmp_26200_9, 24, 4;
              .reg.s32       optix_buffer_id_26516;
              mov.b64        {_, optix_buffer_id_26516}, tmp_26508;
              .reg.u64       ptr_from_optix_id_26517;
{
              .reg.s32       abstract_26518;
              mov.b32        abstract_26518, 1;
              .reg.u64       const_26519;
              mov.b64        const_26519, 512;
              .reg.u64       off_26520;
              add.u64        off_26520, const_26519, off_26515;
              .reg.u64       const_26521;
              mov.b64        const_26521, 0;
 call (ptr_from_optix_id_26517), _rt_buffer_get_id_64, (optix_buffer_id_26516, abstract_26518, abstract_26518, off_26520, const_26521, const_26521, const_26521); // resolving optix id
}
              ld.s32         tmp_26514, [ptr_from_optix_id_26517];
              .reg.s32       temp_24638;
              set.eq.s32.s32 temp_24638, tmp_26514, 1;
              .reg.s32       temp_24639;
              .reg.pred      temp_24638_26522;
              setp.ne.s32    temp_24638_26522, 0, temp_24638;
              selp.s32       temp_24639, 4, 0, temp_24638_26522;
              .reg.s32       temp_24640;
              or.b32         temp_24640, temp_24636, temp_24639;
              .reg.u64       tmp_26523;
              .reg.s32       optix_buffer_id_26524;
              mov.b64        {_, optix_buffer_id_26524}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26525;
{
              .reg.s32       abstract_26526;
              mov.b32        abstract_26526, 1;
              .reg.u64       const_26527;
              mov.b64        const_26527, 520;
              .reg.u64       const_26528;
              mov.b64        const_26528, 0;
 call (ptr_from_optix_id_26525), _rt_buffer_get_id_64, (optix_buffer_id_26524, abstract_26526, abstract_26526, const_26527, const_26528, const_26528, const_26528); // resolving optix id
}
              ld.u64         tmp_26523, [ptr_from_optix_id_26525];
              .reg.s32       tmp_26529;
              .reg.u64       off_26530;
              mad.wide.u32   off_26530, tmp_26200_9, 24, 8;
              .reg.s32       optix_buffer_id_26531;
              mov.b64        {_, optix_buffer_id_26531}, tmp_26523;
              .reg.u64       ptr_from_optix_id_26532;
{
              .reg.s32       abstract_26533;
              mov.b32        abstract_26533, 1;
              .reg.u64       const_26534;
              mov.b64        const_26534, 512;
              .reg.u64       off_26535;
              add.u64        off_26535, const_26534, off_26530;
              .reg.u64       const_26536;
              mov.b64        const_26536, 0;
 call (ptr_from_optix_id_26532), _rt_buffer_get_id_64, (optix_buffer_id_26531, abstract_26533, abstract_26533, off_26535, const_26536, const_26536, const_26536); // resolving optix id
}
              ld.s32         tmp_26529, [ptr_from_optix_id_26532];
              .reg.s32       temp_24642;
              set.eq.s32.s32 temp_24642, tmp_26529, 1;
              .reg.s32       temp_24643;
              .reg.pred      temp_24642_26537;
              setp.ne.s32    temp_24642_26537, 0, temp_24642;
              selp.s32       temp_24643, 8, 0, temp_24642_26537;
              .reg.s32       temp_24644;
              or.b32         temp_24644, temp_24640, temp_24643;
              .reg.u64       tmp_26538;
              .reg.s32       optix_buffer_id_26539;
              mov.b64        {_, optix_buffer_id_26539}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26540;
{
              .reg.s32       abstract_26541;
              mov.b32        abstract_26541, 1;
              .reg.u64       const_26542;
              mov.b64        const_26542, 520;
              .reg.u64       const_26543;
              mov.b64        const_26543, 0;
 call (ptr_from_optix_id_26540), _rt_buffer_get_id_64, (optix_buffer_id_26539, abstract_26541, abstract_26541, const_26542, const_26543, const_26543, const_26543); // resolving optix id
}
              ld.u64         tmp_26538, [ptr_from_optix_id_26540];
              .reg.s32       tmp_26544;
              .reg.u64       off_26545;
              mad.wide.u32   off_26545, tmp_26200_9, 24, 12;
              .reg.s32       optix_buffer_id_26546;
              mov.b64        {_, optix_buffer_id_26546}, tmp_26538;
              .reg.u64       ptr_from_optix_id_26547;
{
              .reg.s32       abstract_26548;
              mov.b32        abstract_26548, 1;
              .reg.u64       const_26549;
              mov.b64        const_26549, 512;
              .reg.u64       off_26550;
              add.u64        off_26550, const_26549, off_26545;
              .reg.u64       const_26551;
              mov.b64        const_26551, 0;
 call (ptr_from_optix_id_26547), _rt_buffer_get_id_64, (optix_buffer_id_26546, abstract_26548, abstract_26548, off_26550, const_26551, const_26551, const_26551); // resolving optix id
}
              ld.s32         tmp_26544, [ptr_from_optix_id_26547];
              .reg.s32       temp_24646;
              set.eq.s32.s32 temp_24646, tmp_26544, 1;
              .reg.s32       temp_24647;
              .reg.pred      temp_24646_26552;
              setp.ne.s32    temp_24646_26552, 0, temp_24646;
              selp.s32       temp_24647, 16, 0, temp_24646_26552;
              .reg.s32       temp_24648;
              or.b32         temp_24648, temp_24644, temp_24647;
              .reg.s32       temp_24650;
              set.eq.s32.s32 temp_24650, tmp_26514, 2;
              .reg.s32       temp_24651;
              .reg.pred      temp_24650_26553;
              setp.ne.s32    temp_24650_26553, 0, temp_24650;
              selp.s32       temp_24651, 64, 0, temp_24650_26553;
              .reg.s32       temp_24652;
              or.b32         temp_24652, temp_24648, temp_24651;
              .reg.s32       temp_24654;
              set.eq.s32.s32 temp_24654, tmp_26529, 2;
              .reg.s32       temp_24655;
              .reg.pred      temp_24654_26554;
              setp.ne.s32    temp_24654_26554, 0, temp_24654;
              selp.s32       temp_24655, 128, 0, temp_24654_26554;
              .reg.s32       temp_24656;
              or.b32         temp_24656, temp_24652, temp_24655;
              .reg.s32       temp_24658;
              set.eq.s32.s32 temp_24658, tmp_26544, 2;
              .reg.s32       temp_24659;
              .reg.pred      temp_24658_26555;
              setp.ne.s32    temp_24658_26555, 0, temp_24658;
              selp.s32       temp_24659, 256, 0, temp_24658_26555;
              .reg.s32       temp_24660;
              or.b32         temp_24660, temp_24656, temp_24659;
              .reg.s32       temp_24661;
              and.b32        temp_24661, tmp_26200_10, temp_24660;
              .reg.s32       temp_24662;
              set.gt.s32.s32 temp_24662, temp_24661, 0;
              .reg.s32       temp_20963;
              and.b32        temp_20963, tmp_26200_10, 2048;
              .reg.s32       temp_20964;
              set.eq.s32.s32 temp_20964, temp_20963, 0;
              .reg.s32       temp_20965;
              and.b32        temp_20965, temp_24662, temp_20964;
              .reg.s32       temp_20966;
              .reg.pred      temp_20965_26558;
              setp.ne.s32    temp_20965_26558, 0, temp_20965;
  @!temp_20965_26558 bra     else_26556;
              .reg.s32       temp_20976;
              and.b32        temp_20976, tmp_26200_10, 32768;
              .reg.s32       temp_20977;
              set.gt.s32.s32 temp_20977, temp_20976, 0;
              .reg.s32       temp_20978;
              .reg.pred      temp_20977_26561;
              setp.ne.s32    temp_20977_26561, 0, temp_20977;
  @!temp_20977_26561 bra     else_26559;
              mov.b32        temp_20978, 0;
              bra.uni        merge_26560;
else_26559:
              .reg.s32       temp_20979;
              and.b32        temp_20979, tmp_26200_10, 65536;
              .reg.s32       temp_20980;
              set.gt.s32.s32 temp_20980, temp_20979, 0;
              .reg.s32       temp_20981;
              .reg.pred      temp_20980_26564;
              setp.ne.s32    temp_20980_26564, 0, temp_20980;
  @!temp_20980_26564 bra     else_26562;
              .reg.u64       tmp_26565;
              .reg.s32       optix_buffer_id_26566;
              mov.b64        {_, optix_buffer_id_26566}, tmp_26173;
              .reg.u64       ptr_from_optix_id_26567;
{
              .reg.s32       abstract_26568;
              mov.b32        abstract_26568, 1;
              .reg.u64       const_26569;
              mov.b64        const_26569, 520;
              .reg.u64       const_26570;
              mov.b64        const_26570, 0;
 call (ptr_from_optix_id_26567), _rt_buffer_get_id_64, (optix_buffer_id_26566, abstract_26568, abstract_26568, const_26569, const_26570, const_26570, const_26570); // resolving optix id
}
              ld.u64         tmp_26565, [ptr_from_optix_id_26567];
              .reg.s32       tmp_26571;
              .reg.u64       off_26572;
              mad.wide.u32   off_26572, tmp_26200_9, 24, 16;
              .reg.s32       optix_buffer_id_26573;
              mov.b64        {_, optix_buffer_id_26573}, tmp_26565;
              .reg.u64       ptr_from_optix_id_26574;
{
              .reg.s32       abstract_26575;
              mov.b32        abstract_26575, 1;
              .reg.u64       const_26576;
              mov.b64        const_26576, 512;
              .reg.u64       off_26577;
              add.u64        off_26577, const_26576, off_26572;
              .reg.u64       const_26578;
              mov.b64        const_26578, 0;
 call (ptr_from_optix_id_26574), _rt_buffer_get_id_64, (optix_buffer_id_26573, abstract_26575, abstract_26575, off_26577, const_26578, const_26578, const_26578); // resolving optix id
}
              ld.s32         tmp_26571, [ptr_from_optix_id_26574];
              .reg.s32       dont_accept_20984;
              not.b32        dont_accept_20984, tmp_26571;
              .reg.s32       temp_20985;
              not.b32        temp_20985, dont_accept_20984;
              mov.b32        temp_20981, temp_20985;
              bra.uni        merge_26563;
else_26562:
              mov.b32        temp_20981, -1;
merge_26563:
              mov.b32        temp_20978, temp_20981;
merge_26560:
              mov.b32        temp_20966, temp_20978;
              bra.uni        merge_26557;
else_26556:
              mov.b32        temp_20966, 0;
merge_26557:
              .reg .f32      w_20967_0, w_20967_1, w_20967_2;
              .reg.pred      temp_20966_26581;
              setp.ne.s32    temp_20966_26581, 0, temp_20966;
  @!temp_20966_26581 bra     else_26579;
              .reg.s32       temp_24665;
              and.b32        temp_24665, tmp_26200_10, 4096;
              .reg.s32       temp_24666;
              set.gt.s32.s32 temp_24666, temp_24665, 0;
              .reg.s32       temp_24671;
              and.b32        temp_24671, tmp_26200_10, 8192;
              .reg.s32       temp_24672;
              set.gt.s32.s32 temp_24672, temp_24671, 0;
              .reg.s32       temp_24677;
              or.b32         temp_24677, temp_24666, temp_24672;
              .reg.f32       powerHeuristik_20972;
              .reg.pred      temp_24677_26584;
              setp.ne.s32    temp_24677_26584, 0, temp_24677;
  @!temp_24677_26584 bra     else_26582;
              mov.b32        powerHeuristik_20972, 0F3f800000;
              bra.uni        merge_26583;
else_26582:
              mov.b32        powerHeuristik_20972, tmp_26200_8;
merge_26583:
              .reg .f32      temp_24680_0, temp_24680_1, temp_24680_2;
              mul.ftz.f32    temp_24680_0, powerHeuristik_20972, tmp_26200_0_0;
              mul.ftz.f32    temp_24680_1, powerHeuristik_20972, tmp_26200_0_1;
              mul.ftz.f32    temp_24680_2, powerHeuristik_20972, tmp_26200_0_2;
              mov.b32        w_20967_0, temp_24680_0;
              mov.b32        w_20967_1, temp_24680_1;
              mov.b32        w_20967_2, temp_24680_2;
              bra.uni        merge_26580;
else_26579:
              mov.b32        w_20967_0, 0F00000000;
              mov.b32        w_20967_1, 0F00000000;
              mov.b32        w_20967_2, 0F00000000;
merge_26580:
              mov.u64        scl_21819, tmp_26191;
              mov.u64        scl_21820, tmp_26193;
              mov.u64        scl_21821, tmp_26195;
              mov.b32        scl_21817_0, w_20967_0;
              mov.b32        scl_21817_1, w_20967_1;
              mov.b32        scl_21817_2, w_20967_2;
              mov.b32        scl_21818, 0F00000000;
              bra.uni        merge_26491;
else_26490:
              .reg .f32      temp_26158_0, temp_26158_1, temp_26158_2;
              mul.ftz.f32    temp_26158_0, scl_21740, scl_21741_0;
              mul.ftz.f32    temp_26158_1, scl_21740, scl_21741_1;
              mul.ftz.f32    temp_26158_2, scl_21740, scl_21741_2;
              .reg .f32      temp_26160_0, temp_26160_1, temp_26160_2;
              mul.ftz.f32    temp_26160_0, temp_26158_0, tmp_26200_0_0;
              mul.ftz.f32    temp_26160_1, temp_26158_1, tmp_26200_0_1;
              mul.ftz.f32    temp_26160_2, temp_26158_2, tmp_26200_0_2;
              mov.u64        scl_21819, tmp_26191;
              mov.u64        scl_21820, tmp_26193;
              mov.u64        scl_21821, tmp_26195;
              mov.b32        scl_21817_0, temp_26160_0;
              mov.b32        scl_21817_1, temp_26160_1;
              mov.b32        scl_21817_2, temp_26160_2;
              mov.b32        scl_21818, tmp_26200_1;
merge_26491:
              mov.u64        scl_21780, scl_21819;
              mov.u64        scl_21781, scl_21820;
              mov.u64        scl_21782, scl_21821;
              mov.b32        scl_21778_0, scl_21817_0;
              mov.b32        scl_21778_1, scl_21817_1;
              mov.b32        scl_21778_2, scl_21817_2;
              mov.b32        scl_21779, scl_21818;
merge_26485:
              mov.u64        scl_21763, scl_21780;
              mov.u64        scl_21764, scl_21781;
              mov.u64        scl_21765, scl_21782;
              mov.b32        scl_21761_0, scl_21778_0;
              mov.b32        scl_21761_1, scl_21778_1;
              mov.b32        scl_21761_2, scl_21778_2;
              mov.b32        scl_21762, scl_21779;
merge_26482:
              .reg.s32       temp_20404;
              .reg.pred      pred_26585;
              testp.notanumber.f32 pred_26585, scl_21761_0;
              selp.s32       temp_20404, -1, 0, pred_26585;
              .reg.s32       temp_20408;
              .reg.pred      pred_26586;
              testp.notanumber.f32 pred_26586, scl_21761_1;
              selp.s32       temp_20408, -1, 0, pred_26586;
              .reg.s32       temp_26163;
              or.b32         temp_26163, temp_20404, temp_20408;
              .reg.s32       temp_20413;
              .reg.pred      pred_26587;
              testp.notanumber.f32 pred_26587, scl_21761_2;
              selp.s32       temp_20413, -1, 0, pred_26587;
              .reg.s32       temp_26165;
              or.b32         temp_26165, temp_26163, temp_20413;
              .reg .f32      color_20417_0, color_20417_1, color_20417_2;
              .reg.pred      temp_26165_26588;
              setp.ne.s32    temp_26165_26588, 0, temp_26165;
              selp.f32       color_20417_0, 0F00000000, scl_21761_0, temp_26165_26588;
              selp.f32       color_20417_1, 0F00000000, scl_21761_1, temp_26165_26588;
              selp.f32       color_20417_2, 0F00000000, scl_21761_2, temp_26165_26588;
              .reg.s32       temp_20418;
              .reg.pred      pred_26589;
              testp.notanumber.f32 pred_26589, scl_21762;
              selp.s32       temp_20418, -1, 0, pred_26589;
              .reg.f32       alpha_20419;
              .reg.pred      temp_20418_26590;
              setp.ne.s32    temp_20418_26590, 0, temp_20418;
              selp.f32       alpha_20419, 0F3f800000, scl_21762, temp_20418_26590;
              .reg.u64       tmp_26591;
              ld.param.u64   tmp_26591, [res_26171];
              st.u64         [tmp_26591], scl_21763;
              st.u64         [tmp_26591+8], scl_21764;
              st.u64         [tmp_26591+16], scl_21765;
              st.v2.f32      [tmp_26591+32], {color_20417_0, color_20417_1};
              st.f32         [tmp_26591+40], color_20417_2;
              st.f32         [tmp_26591+48], alpha_20419;
}

.visible .global .u64 g_main = stlr_main;

