//
// Generated by LWPU LWVM Compiler
// Compiler built on Tue Feb 25 03:01:39 2014 (1393293699)
// Lwca compilation tools, release 6.0, V6.0.1
//

.version 4.0
.target sm_20
.address_size 64

.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 aclwmulation_buffer[1];
.global .align 4 .u32 frame_number;
.global .align 4 .f32 normalization_const;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19normalization_constE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename19normalization_constE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum19normalization_constE = 256;
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19normalization_constE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19normalization_constE[1];

.visible .entry _Z11draw_resultv(

)
{
	.reg .s32 	%r<14>;
	.reg .f32 	%f<20>;
	.reg .s64 	%rd<13>;


	cvta.global.u64 	%rd2, output_buffer;
	ld.global.v2.u32 	{%r5, %r6}, [launch_index];
	cvt.u64.u32	%rd3, %r5;
	cvt.u64.u32	%rd4, %r6;
	mov.u32 	%r3, 2;
	mov.u32 	%r4, 16;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r3, %r4, %rd3, %rd4, %rd12, %rd12);
	// inline asm
	cvta.global.u64 	%rd8, aclwmulation_buffer;
	ld.global.v2.u32 	{%r9, %r10}, [launch_index];
	cvt.u64.u32	%rd9, %r9;
	cvt.u64.u32	%rd10, %r10;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r3, %r4, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.global.u32 	%r13, [frame_number];
	cvt.rn.f32.u32	%f1, %r13;
	rcp.approx.ftz.f32 	%f2, %f1;
	ld.v4.f32 	{%f3, %f4, %f5, %f6}, [%rd7];
	mul.ftz.f32 	%f8, %f3, %f2;
	mul.ftz.f32 	%f10, %f4, %f2;
	mul.ftz.f32 	%f12, %f5, %f2;
	mul.ftz.f32 	%f14, %f6, %f2;
	ld.global.f32 	%f15, [normalization_const];
	mul.ftz.f32 	%f16, %f14, %f15;
	mul.ftz.f32 	%f17, %f12, %f15;
	mul.ftz.f32 	%f18, %f10, %f15;
	mul.ftz.f32 	%f19, %f8, %f15;
	st.v4.f32 	[%rd1], {%f19, %f18, %f17, %f16};
	ret;
}

.visible .entry _Z9exceptiolw(

)
{



	ret;
}


