//
// Generated by LWPU LWVM Compiler
//
// Compiler Build ID: CL-19324607
// Lwca compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_35
.address_size 64

	// .weak	lwdaMalloc
.global .align 4 .b8 geoPropertiesProc[4];
.global .align 4 .u32 fvalue0_type__;
.global .align 4 .f32 fvalue0_const__;
.global .align 4 .u32 fvalue0_texid__;
.global .align 4 .b8 fvalue0_proc__[4];
.global .align 4 .u32 fvalue1_type__;
.global .align 4 .f32 fvalue1_const__;
.global .align 4 .u32 fvalue1_texid__;
.global .align 4 .b8 fvalue1_proc__[4];
.global .align 4 .u32 cvalue0_type__;
.global .align 16 .b8 cvalue0_const__[16];
.global .align 4 .u32 cvalue0_texid__;
.global .align 4 .b8 cvalue0_proc__[4];
.global .align 4 .u32 cvalue1_type__;
.global .align 16 .b8 cvalue1_const__[16];
.global .align 4 .u32 cvalue1_texid__;
.global .align 4 .b8 cvalue1_proc__[4];
.global .align 4 .u32 mix_type__;
.global .align 4 .f32 mix_const__;
.global .align 4 .u32 mix_texid__;
.global .align 4 .b8 mix_proc__[4];
.global .align 4 .f32 milwalue;
.global .align 4 .f32 maxValue;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo17geoPropertiesProcE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14fvalue0_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15fvalue0_const__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15fvalue0_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14fvalue0_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14fvalue1_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15fvalue1_const__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15fvalue1_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14fvalue1_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14cvalue0_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15cvalue0_const__E[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15cvalue0_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14cvalue0_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14cvalue1_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15cvalue1_const__E[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15cvalue1_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14cvalue1_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10mix_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11mix_const__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11mix_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10mix_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8milwalueE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8maxValueE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17geoPropertiesProcE[20] = {71, 101, 111, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 80, 114, 111, 99, 73, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14fvalue0_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15fvalue0_const__E[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15fvalue0_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14fvalue0_proc__E[23] = {102, 118, 97, 108, 117, 101, 48, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14fvalue1_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15fvalue1_const__E[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15fvalue1_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14fvalue1_proc__E[23] = {102, 118, 97, 108, 117, 101, 49, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14cvalue0_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15cvalue0_const__E[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15cvalue0_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14cvalue0_proc__E[23] = {99, 118, 97, 108, 117, 101, 48, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14cvalue1_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15cvalue1_const__E[7] = {102, 108, 111, 97, 116, 52, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15cvalue1_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14cvalue1_proc__E[23] = {99, 118, 97, 108, 117, 101, 49, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10mix_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11mix_const__E[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11mix_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10mix_proc__E[19] = {109, 105, 120, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8milwalueE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8maxValueE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum17geoPropertiesProcE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14fvalue0_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15fvalue0_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15fvalue0_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14fvalue0_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14fvalue1_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15fvalue1_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15fvalue1_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14fvalue1_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14cvalue0_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15cvalue0_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15cvalue0_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14cvalue0_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14cvalue1_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15cvalue1_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum15cvalue1_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14cvalue1_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10mix_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11mix_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11mix_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10mix_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum8milwalueE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8maxValueE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14fvalue0_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15fvalue0_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15fvalue0_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14fvalue0_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14fvalue1_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15fvalue1_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15fvalue1_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14fvalue1_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14cvalue0_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15cvalue0_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15cvalue0_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14cvalue0_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14cvalue1_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15cvalue1_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15cvalue1_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14cvalue1_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10mix_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11mix_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11mix_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10mix_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8milwalueE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8maxValueE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14fvalue0_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15fvalue0_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15fvalue0_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14fvalue0_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14fvalue1_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15fvalue1_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15fvalue1_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14fvalue1_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14cvalue0_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15cvalue0_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15cvalue0_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14cvalue0_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14cvalue1_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15cvalue1_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15cvalue1_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14cvalue1_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10mix_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11mix_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11mix_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10mix_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8milwalueE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8maxValueE[1];

.weak .func  (.param .b32 func_retval0) lwdaMalloc(
	.param .b64 lwdaMalloc_param_0,
	.param .b64 lwdaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) lwdaFuncGetAttributes(
	.param .b64 lwdaFuncGetAttributes_param_0,
	.param .b64 lwdaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) lwdaDeviceGetAttribute(
	.param .b64 lwdaDeviceGetAttribute_param_0,
	.param .b32 lwdaDeviceGetAttribute_param_1,
	.param .b32 lwdaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaGetDevice
.weak .func  (.param .b32 func_retval0) lwdaGetDevice(
	.param .b64 lwdaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z12floatAddProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z12floatAddProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12floatAddProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12floatAddProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<32>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12floatAddProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12floatAddProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB6_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB6_3;
	bra.uni 	BB6_2;

BB6_3:
	ld.global.u32 	%r4, [fvalue0_texid__];
	ld.v2.f32 	{%f17, %f18}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%f9, %f10, %f11, %f12), _rt_texture_get_f_id, (%r4, %r5, %f17, %f18, %f16, %f16);
	// inline asm
	mov.f32 	%f30, %f9;
	bra.uni 	BB6_5;

BB6_4:
	ld.global.f32 	%f30, [fvalue0_const__];
	bra.uni 	BB6_5;

BB6_2:
	ld.global.u32 	%r3, [fvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.f32	%f30, [retval0+0];
	
	//{
	}// Callseq End 0

BB6_5:
	ld.global.u32 	%r2, [fvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB6_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB6_8;
	bra.uni 	BB6_7;

BB6_8:
	ld.global.u32 	%r7, [fvalue1_texid__];
	ld.v2.f32 	{%f27, %f28}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_texture_get_f_id, (%r7, %r8, %f27, %f28, %f26, %f26);
	// inline asm
	mov.f32 	%f31, %f19;
	bra.uni 	BB6_10;

BB6_9:
	ld.global.f32 	%f31, [fvalue1_const__];
	bra.uni 	BB6_10;

BB6_7:
	ld.global.u32 	%r6, [fvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_1;
	ld.param.f32	%f31, [retval0+0];
	
	//{
	}// Callseq End 1

BB6_10:
	add.ftz.f32 	%f29, %f30, %f31;
	st.param.f32	[func_retval0+0], %f29;
	ret;
}

	// .globl	_ZN5optix19rt_texture_get_f_idEiiffff
.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5
)
{
	.reg .f32 	%f<9>;
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];
	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	ret;
}

	// .globl	_Z12colorAddProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12colorAddProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12colorAddProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12colorAddProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<97>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12colorAddProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12colorAddProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB8_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB8_3;
	bra.uni 	BB8_2;

BB8_3:
	ld.global.u32 	%r4, [cvalue0_texid__];
	ld.v2.f32 	{%f65, %f66}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f64, 0f00000000;
	// inline asm
	call (%f57, %f58, %f59, %f60), _rt_texture_get_f_id, (%r4, %r5, %f65, %f66, %f64, %f64);
	// inline asm
	mov.f32 	%f90, %f57;
	mov.f32 	%f91, %f58;
	mov.f32 	%f92, %f59;
	mov.f32 	%f89, %f60;
	bra.uni 	BB8_5;

BB8_4:
	ld.global.v4.f32 	{%f67, %f68, %f69, %f70}, [cvalue0_const__];
	mov.f32 	%f89, %f70;
	mov.f32 	%f17, %f69;
	mov.f32 	%f16, %f68;
	mov.f32 	%f15, %f67;
	mov.f32 	%f90, %f67;
	mov.f32 	%f91, %f68;
	mov.f32 	%f92, %f69;
	bra.uni 	BB8_5;

BB8_2:
	ld.global.u32 	%r3, [cvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_2 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.f32	%f90, [retval0+0];
	ld.param.f32	%f91, [retval0+4];
	ld.param.f32	%f92, [retval0+8];
	ld.param.f32	%f89, [retval0+12];
	
	//{
	}// Callseq End 2

BB8_5:
	ld.global.u32 	%r2, [cvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB8_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB8_8;
	bra.uni 	BB8_7;

BB8_8:
	ld.global.u32 	%r7, [cvalue1_texid__];
	ld.v2.f32 	{%f79, %f80}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f78, 0f00000000;
	// inline asm
	call (%f71, %f72, %f73, %f74), _rt_texture_get_f_id, (%r7, %r8, %f79, %f80, %f78, %f78);
	// inline asm
	mov.f32 	%f94, %f71;
	mov.f32 	%f95, %f72;
	mov.f32 	%f96, %f73;
	mov.f32 	%f93, %f74;
	bra.uni 	BB8_10;

BB8_9:
	ld.global.v4.f32 	{%f81, %f82, %f83, %f84}, [cvalue1_const__];
	mov.f32 	%f93, %f84;
	mov.f32 	%f45, %f83;
	mov.f32 	%f44, %f82;
	mov.f32 	%f43, %f81;
	mov.f32 	%f94, %f81;
	mov.f32 	%f95, %f82;
	mov.f32 	%f96, %f83;
	bra.uni 	BB8_10;

BB8_7:
	ld.global.u32 	%r6, [cvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_3 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_3;
	ld.param.f32	%f94, [retval0+0];
	ld.param.f32	%f95, [retval0+4];
	ld.param.f32	%f96, [retval0+8];
	ld.param.f32	%f93, [retval0+12];
	
	//{
	}// Callseq End 3

BB8_10:
	add.ftz.f32 	%f85, %f89, %f93;
	add.ftz.f32 	%f86, %f90, %f94;
	add.ftz.f32 	%f87, %f91, %f95;
	add.ftz.f32 	%f88, %f92, %f96;
	st.param.f32	[func_retval0+0], %f86;
	st.param.f32	[func_retval0+4], %f87;
	st.param.f32	[func_retval0+8], %f88;
	st.param.f32	[func_retval0+12], %f85;
	ret;
}

	// .globl	_Z12floatSubProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z12floatSubProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12floatSubProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12floatSubProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<32>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12floatSubProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12floatSubProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB9_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB9_3;
	bra.uni 	BB9_2;

BB9_3:
	ld.global.u32 	%r4, [fvalue0_texid__];
	ld.v2.f32 	{%f17, %f18}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%f9, %f10, %f11, %f12), _rt_texture_get_f_id, (%r4, %r5, %f17, %f18, %f16, %f16);
	// inline asm
	mov.f32 	%f30, %f9;
	bra.uni 	BB9_5;

BB9_4:
	ld.global.f32 	%f30, [fvalue0_const__];
	bra.uni 	BB9_5;

BB9_2:
	ld.global.u32 	%r3, [fvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_4 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_4;
	ld.param.f32	%f30, [retval0+0];
	
	//{
	}// Callseq End 4

BB9_5:
	ld.global.u32 	%r2, [fvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB9_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB9_8;
	bra.uni 	BB9_7;

BB9_8:
	ld.global.u32 	%r7, [fvalue1_texid__];
	ld.v2.f32 	{%f27, %f28}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_texture_get_f_id, (%r7, %r8, %f27, %f28, %f26, %f26);
	// inline asm
	mov.f32 	%f31, %f19;
	bra.uni 	BB9_10;

BB9_9:
	ld.global.f32 	%f31, [fvalue1_const__];
	bra.uni 	BB9_10;

BB9_7:
	ld.global.u32 	%r6, [fvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_5;
	ld.param.f32	%f31, [retval0+0];
	
	//{
	}// Callseq End 5

BB9_10:
	sub.ftz.f32 	%f29, %f30, %f31;
	st.param.f32	[func_retval0+0], %f29;
	ret;
}

	// .globl	_Z12colorSubProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12colorSubProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12colorSubProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12colorSubProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<97>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12colorSubProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12colorSubProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB10_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB10_3;
	bra.uni 	BB10_2;

BB10_3:
	ld.global.u32 	%r4, [cvalue0_texid__];
	ld.v2.f32 	{%f65, %f66}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f64, 0f00000000;
	// inline asm
	call (%f57, %f58, %f59, %f60), _rt_texture_get_f_id, (%r4, %r5, %f65, %f66, %f64, %f64);
	// inline asm
	mov.f32 	%f90, %f57;
	mov.f32 	%f91, %f58;
	mov.f32 	%f92, %f59;
	mov.f32 	%f89, %f60;
	bra.uni 	BB10_5;

BB10_4:
	ld.global.v4.f32 	{%f67, %f68, %f69, %f70}, [cvalue0_const__];
	mov.f32 	%f89, %f70;
	mov.f32 	%f17, %f69;
	mov.f32 	%f16, %f68;
	mov.f32 	%f15, %f67;
	mov.f32 	%f90, %f67;
	mov.f32 	%f91, %f68;
	mov.f32 	%f92, %f69;
	bra.uni 	BB10_5;

BB10_2:
	ld.global.u32 	%r3, [cvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_6 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_6;
	ld.param.f32	%f90, [retval0+0];
	ld.param.f32	%f91, [retval0+4];
	ld.param.f32	%f92, [retval0+8];
	ld.param.f32	%f89, [retval0+12];
	
	//{
	}// Callseq End 6

BB10_5:
	ld.global.u32 	%r2, [cvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB10_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB10_8;
	bra.uni 	BB10_7;

BB10_8:
	ld.global.u32 	%r7, [cvalue1_texid__];
	ld.v2.f32 	{%f79, %f80}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f78, 0f00000000;
	// inline asm
	call (%f71, %f72, %f73, %f74), _rt_texture_get_f_id, (%r7, %r8, %f79, %f80, %f78, %f78);
	// inline asm
	mov.f32 	%f94, %f71;
	mov.f32 	%f95, %f72;
	mov.f32 	%f96, %f73;
	mov.f32 	%f93, %f74;
	bra.uni 	BB10_10;

BB10_9:
	ld.global.v4.f32 	{%f81, %f82, %f83, %f84}, [cvalue1_const__];
	mov.f32 	%f93, %f84;
	mov.f32 	%f45, %f83;
	mov.f32 	%f44, %f82;
	mov.f32 	%f43, %f81;
	mov.f32 	%f94, %f81;
	mov.f32 	%f95, %f82;
	mov.f32 	%f96, %f83;
	bra.uni 	BB10_10;

BB10_7:
	ld.global.u32 	%r6, [cvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_7 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_7;
	ld.param.f32	%f94, [retval0+0];
	ld.param.f32	%f95, [retval0+4];
	ld.param.f32	%f96, [retval0+8];
	ld.param.f32	%f93, [retval0+12];
	
	//{
	}// Callseq End 7

BB10_10:
	sub.ftz.f32 	%f85, %f89, %f93;
	sub.ftz.f32 	%f86, %f90, %f94;
	sub.ftz.f32 	%f87, %f91, %f95;
	sub.ftz.f32 	%f88, %f92, %f96;
	st.param.f32	[func_retval0+0], %f86;
	st.param.f32	[func_retval0+4], %f87;
	st.param.f32	[func_retval0+8], %f88;
	st.param.f32	[func_retval0+12], %f85;
	ret;
}

	// .globl	_Z12floatMulProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z12floatMulProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12floatMulProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12floatMulProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<32>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12floatMulProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12floatMulProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB11_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB11_3;
	bra.uni 	BB11_2;

BB11_3:
	ld.global.u32 	%r4, [fvalue0_texid__];
	ld.v2.f32 	{%f17, %f18}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%f9, %f10, %f11, %f12), _rt_texture_get_f_id, (%r4, %r5, %f17, %f18, %f16, %f16);
	// inline asm
	mov.f32 	%f30, %f9;
	bra.uni 	BB11_5;

BB11_4:
	ld.global.f32 	%f30, [fvalue0_const__];
	bra.uni 	BB11_5;

BB11_2:
	ld.global.u32 	%r3, [fvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_8 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_8;
	ld.param.f32	%f30, [retval0+0];
	
	//{
	}// Callseq End 8

BB11_5:
	ld.global.u32 	%r2, [fvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB11_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB11_8;
	bra.uni 	BB11_7;

BB11_8:
	ld.global.u32 	%r7, [fvalue1_texid__];
	ld.v2.f32 	{%f27, %f28}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_texture_get_f_id, (%r7, %r8, %f27, %f28, %f26, %f26);
	// inline asm
	mov.f32 	%f31, %f19;
	bra.uni 	BB11_10;

BB11_9:
	ld.global.f32 	%f31, [fvalue1_const__];
	bra.uni 	BB11_10;

BB11_7:
	ld.global.u32 	%r6, [fvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_9 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_9;
	ld.param.f32	%f31, [retval0+0];
	
	//{
	}// Callseq End 9

BB11_10:
	mul.ftz.f32 	%f29, %f30, %f31;
	st.param.f32	[func_retval0+0], %f29;
	ret;
}

	// .globl	_Z12colorMulProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12colorMulProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12colorMulProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12colorMulProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<97>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12colorMulProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12colorMulProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB12_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB12_3;
	bra.uni 	BB12_2;

BB12_3:
	ld.global.u32 	%r4, [cvalue0_texid__];
	ld.v2.f32 	{%f65, %f66}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f64, 0f00000000;
	// inline asm
	call (%f57, %f58, %f59, %f60), _rt_texture_get_f_id, (%r4, %r5, %f65, %f66, %f64, %f64);
	// inline asm
	mov.f32 	%f90, %f57;
	mov.f32 	%f91, %f58;
	mov.f32 	%f92, %f59;
	mov.f32 	%f89, %f60;
	bra.uni 	BB12_5;

BB12_4:
	ld.global.v4.f32 	{%f67, %f68, %f69, %f70}, [cvalue0_const__];
	mov.f32 	%f89, %f70;
	mov.f32 	%f17, %f69;
	mov.f32 	%f16, %f68;
	mov.f32 	%f15, %f67;
	mov.f32 	%f90, %f67;
	mov.f32 	%f91, %f68;
	mov.f32 	%f92, %f69;
	bra.uni 	BB12_5;

BB12_2:
	ld.global.u32 	%r3, [cvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_10 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_10;
	ld.param.f32	%f90, [retval0+0];
	ld.param.f32	%f91, [retval0+4];
	ld.param.f32	%f92, [retval0+8];
	ld.param.f32	%f89, [retval0+12];
	
	//{
	}// Callseq End 10

BB12_5:
	ld.global.u32 	%r2, [cvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB12_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB12_8;
	bra.uni 	BB12_7;

BB12_8:
	ld.global.u32 	%r7, [cvalue1_texid__];
	ld.v2.f32 	{%f79, %f80}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f78, 0f00000000;
	// inline asm
	call (%f71, %f72, %f73, %f74), _rt_texture_get_f_id, (%r7, %r8, %f79, %f80, %f78, %f78);
	// inline asm
	mov.f32 	%f94, %f71;
	mov.f32 	%f95, %f72;
	mov.f32 	%f96, %f73;
	mov.f32 	%f93, %f74;
	bra.uni 	BB12_10;

BB12_9:
	ld.global.v4.f32 	{%f81, %f82, %f83, %f84}, [cvalue1_const__];
	mov.f32 	%f93, %f84;
	mov.f32 	%f45, %f83;
	mov.f32 	%f44, %f82;
	mov.f32 	%f43, %f81;
	mov.f32 	%f94, %f81;
	mov.f32 	%f95, %f82;
	mov.f32 	%f96, %f83;
	bra.uni 	BB12_10;

BB12_7:
	ld.global.u32 	%r6, [cvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_11 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_11;
	ld.param.f32	%f94, [retval0+0];
	ld.param.f32	%f95, [retval0+4];
	ld.param.f32	%f96, [retval0+8];
	ld.param.f32	%f93, [retval0+12];
	
	//{
	}// Callseq End 11

BB12_10:
	mul.ftz.f32 	%f85, %f89, %f93;
	mul.ftz.f32 	%f86, %f90, %f94;
	mul.ftz.f32 	%f87, %f91, %f95;
	mul.ftz.f32 	%f88, %f92, %f96;
	st.param.f32	[func_retval0+0], %f86;
	st.param.f32	[func_retval0+4], %f87;
	st.param.f32	[func_retval0+8], %f88;
	st.param.f32	[func_retval0+12], %f85;
	ret;
}

	// .globl	_Z12floatDivProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z12floatDivProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12floatDivProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12floatDivProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<32>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12floatDivProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12floatDivProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB13_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB13_3;
	bra.uni 	BB13_2;

BB13_3:
	ld.global.u32 	%r4, [fvalue0_texid__];
	ld.v2.f32 	{%f17, %f18}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f16, 0f00000000;
	// inline asm
	call (%f9, %f10, %f11, %f12), _rt_texture_get_f_id, (%r4, %r5, %f17, %f18, %f16, %f16);
	// inline asm
	mov.f32 	%f30, %f9;
	bra.uni 	BB13_5;

BB13_4:
	ld.global.f32 	%f30, [fvalue0_const__];
	bra.uni 	BB13_5;

BB13_2:
	ld.global.u32 	%r3, [fvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_12 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_12;
	ld.param.f32	%f30, [retval0+0];
	
	//{
	}// Callseq End 12

BB13_5:
	ld.global.u32 	%r2, [fvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB13_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB13_8;
	bra.uni 	BB13_7;

BB13_8:
	ld.global.u32 	%r7, [fvalue1_texid__];
	ld.v2.f32 	{%f27, %f28}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f26, 0f00000000;
	// inline asm
	call (%f19, %f20, %f21, %f22), _rt_texture_get_f_id, (%r7, %r8, %f27, %f28, %f26, %f26);
	// inline asm
	mov.f32 	%f31, %f19;
	bra.uni 	BB13_10;

BB13_9:
	ld.global.f32 	%f31, [fvalue1_const__];
	bra.uni 	BB13_10;

BB13_7:
	ld.global.u32 	%r6, [fvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_13 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_13;
	ld.param.f32	%f31, [retval0+0];
	
	//{
	}// Callseq End 13

BB13_10:
	div.approx.ftz.f32 	%f29, %f30, %f31;
	st.param.f32	[func_retval0+0], %f29;
	ret;
}

	// .globl	_Z12colorDivProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12colorDivProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12colorDivProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12colorDivProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<97>;
	.reg .s32 	%r<9>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd2, [_Z12colorDivProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12colorDivProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB14_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB14_3;
	bra.uni 	BB14_2;

BB14_3:
	ld.global.u32 	%r4, [cvalue0_texid__];
	ld.v2.f32 	{%f65, %f66}, [%rd1];
	mov.u32 	%r5, 2;
	mov.f32 	%f64, 0f00000000;
	// inline asm
	call (%f57, %f58, %f59, %f60), _rt_texture_get_f_id, (%r4, %r5, %f65, %f66, %f64, %f64);
	// inline asm
	mov.f32 	%f90, %f57;
	mov.f32 	%f91, %f58;
	mov.f32 	%f92, %f59;
	mov.f32 	%f89, %f60;
	bra.uni 	BB14_5;

BB14_4:
	ld.global.v4.f32 	{%f67, %f68, %f69, %f70}, [cvalue0_const__];
	mov.f32 	%f89, %f70;
	mov.f32 	%f17, %f69;
	mov.f32 	%f16, %f68;
	mov.f32 	%f15, %f67;
	mov.f32 	%f90, %f67;
	mov.f32 	%f91, %f68;
	mov.f32 	%f92, %f69;
	bra.uni 	BB14_5;

BB14_2:
	ld.global.u32 	%r3, [cvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_14 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_14;
	ld.param.f32	%f90, [retval0+0];
	ld.param.f32	%f91, [retval0+4];
	ld.param.f32	%f92, [retval0+8];
	ld.param.f32	%f89, [retval0+12];
	
	//{
	}// Callseq End 14

BB14_5:
	ld.global.u32 	%r2, [cvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB14_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB14_8;
	bra.uni 	BB14_7;

BB14_8:
	ld.global.u32 	%r7, [cvalue1_texid__];
	ld.v2.f32 	{%f79, %f80}, [%rd1];
	mov.u32 	%r8, 2;
	mov.f32 	%f78, 0f00000000;
	// inline asm
	call (%f71, %f72, %f73, %f74), _rt_texture_get_f_id, (%r7, %r8, %f79, %f80, %f78, %f78);
	// inline asm
	mov.f32 	%f94, %f71;
	mov.f32 	%f95, %f72;
	mov.f32 	%f96, %f73;
	mov.f32 	%f93, %f74;
	bra.uni 	BB14_10;

BB14_9:
	ld.global.v4.f32 	{%f81, %f82, %f83, %f84}, [cvalue1_const__];
	mov.f32 	%f93, %f84;
	mov.f32 	%f45, %f83;
	mov.f32 	%f44, %f82;
	mov.f32 	%f43, %f81;
	mov.f32 	%f94, %f81;
	mov.f32 	%f95, %f82;
	mov.f32 	%f96, %f83;
	bra.uni 	BB14_10;

BB14_7:
	ld.global.u32 	%r6, [cvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_15 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_15;
	ld.param.f32	%f94, [retval0+0];
	ld.param.f32	%f95, [retval0+4];
	ld.param.f32	%f96, [retval0+8];
	ld.param.f32	%f93, [retval0+12];
	
	//{
	}// Callseq End 15

BB14_10:
	div.approx.ftz.f32 	%f85, %f89, %f93;
	div.approx.ftz.f32 	%f86, %f90, %f94;
	div.approx.ftz.f32 	%f87, %f91, %f95;
	div.approx.ftz.f32 	%f88, %f92, %f96;
	st.param.f32	[func_retval0+0], %f86;
	st.param.f32	[func_retval0+4], %f87;
	st.param.f32	[func_retval0+8], %f88;
	st.param.f32	[func_retval0+12], %f85;
	ret;
}

	// .globl	_Z12floatMixProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z12floatMixProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12floatMixProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12floatMixProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<50>;
	.reg .s32 	%r<13>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z12floatMixProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12floatMixProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB15_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB15_3;
	bra.uni 	BB15_2;

BB15_3:
	ld.global.u32 	%r5, [fvalue0_texid__];
	ld.v2.f32 	{%f21, %f22}, [%rd1];
	mov.u32 	%r6, 2;
	mov.f32 	%f20, 0f00000000;
	// inline asm
	call (%f13, %f14, %f15, %f16), _rt_texture_get_f_id, (%r5, %r6, %f21, %f22, %f20, %f20);
	// inline asm
	mov.f32 	%f47, %f13;
	bra.uni 	BB15_5;

BB15_4:
	ld.global.f32 	%f47, [fvalue0_const__];
	bra.uni 	BB15_5;

BB15_2:
	ld.global.u32 	%r4, [fvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r4);
	// inline asm
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_16 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_16;
	ld.param.f32	%f47, [retval0+0];
	
	//{
	}// Callseq End 16

BB15_5:
	ld.global.u32 	%r2, [fvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB15_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB15_8;
	bra.uni 	BB15_7;

BB15_8:
	ld.global.u32 	%r8, [fvalue1_texid__];
	ld.v2.f32 	{%f31, %f32}, [%rd1];
	mov.u32 	%r9, 2;
	mov.f32 	%f30, 0f00000000;
	// inline asm
	call (%f23, %f24, %f25, %f26), _rt_texture_get_f_id, (%r8, %r9, %f31, %f32, %f30, %f30);
	// inline asm
	mov.f32 	%f48, %f23;
	bra.uni 	BB15_10;

BB15_9:
	ld.global.f32 	%f48, [fvalue1_const__];
	bra.uni 	BB15_10;

BB15_7:
	ld.global.u32 	%r7, [fvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_17 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_17;
	ld.param.f32	%f48, [retval0+0];
	
	//{
	}// Callseq End 17

BB15_10:
	ld.global.u32 	%r3, [mix_type__];
	setp.eq.s32	%p5, %r3, 0;
	@%p5 bra 	BB15_14;

	setp.eq.s32	%p6, %r3, 1;
	@%p6 bra 	BB15_13;
	bra.uni 	BB15_12;

BB15_13:
	ld.global.u32 	%r11, [mix_texid__];
	ld.v2.f32 	{%f41, %f42}, [%rd1];
	mov.u32 	%r12, 2;
	mov.f32 	%f40, 0f00000000;
	// inline asm
	call (%f33, %f34, %f35, %f36), _rt_texture_get_f_id, (%r11, %r12, %f41, %f42, %f40, %f40);
	// inline asm
	mov.f32 	%f49, %f33;
	bra.uni 	BB15_15;

BB15_14:
	ld.global.f32 	%f49, [mix_const__];
	bra.uni 	BB15_15;

BB15_12:
	ld.global.u32 	%r10, [mix_proc__];
	// inline asm
	call (%rd6), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_18 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd6, 
	(
	param0, 
	param1
	)
	, prototype_18;
	ld.param.f32	%f49, [retval0+0];
	
	//{
	}// Callseq End 18

BB15_15:
	mov.f32 	%f43, 0f3F800000;
	sub.ftz.f32 	%f44, %f43, %f49;
	mul.ftz.f32 	%f45, %f47, %f44;
	fma.rn.ftz.f32 	%f46, %f48, %f49, %f45;
	st.param.f32	[func_retval0+0], %f46;
	ret;
}

	// .globl	_Z12colorMixProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z12colorMixProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z12colorMixProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z12colorMixProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<118>;
	.reg .s32 	%r<13>;
	.reg .s64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z12colorMixProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd3, [_Z12colorMixProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	add.s64 	%rd1, %rd2, 24;
	@%p1 bra 	BB16_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB16_3;
	bra.uni 	BB16_2;

BB16_3:
	ld.global.u32 	%r5, [cvalue0_texid__];
	ld.v2.f32 	{%f69, %f70}, [%rd1];
	mov.u32 	%r6, 2;
	mov.f32 	%f68, 0f00000000;
	// inline asm
	call (%f61, %f62, %f63, %f64), _rt_texture_get_f_id, (%r5, %r6, %f69, %f70, %f68, %f68);
	// inline asm
	mov.f32 	%f110, %f61;
	mov.f32 	%f111, %f62;
	mov.f32 	%f112, %f63;
	mov.f32 	%f109, %f64;
	bra.uni 	BB16_5;

BB16_4:
	ld.global.v4.f32 	{%f71, %f72, %f73, %f74}, [cvalue0_const__];
	mov.f32 	%f109, %f74;
	mov.f32 	%f17, %f73;
	mov.f32 	%f16, %f72;
	mov.f32 	%f15, %f71;
	mov.f32 	%f110, %f71;
	mov.f32 	%f111, %f72;
	mov.f32 	%f112, %f73;
	bra.uni 	BB16_5;

BB16_2:
	ld.global.u32 	%r4, [cvalue0_proc__];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r4);
	// inline asm
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_19 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1
	)
	, prototype_19;
	ld.param.f32	%f110, [retval0+0];
	ld.param.f32	%f111, [retval0+4];
	ld.param.f32	%f112, [retval0+8];
	ld.param.f32	%f109, [retval0+12];
	
	//{
	}// Callseq End 19

BB16_5:
	ld.global.u32 	%r2, [cvalue1_type__];
	setp.eq.s32	%p3, %r2, 0;
	@%p3 bra 	BB16_9;

	setp.eq.s32	%p4, %r2, 1;
	@%p4 bra 	BB16_8;
	bra.uni 	BB16_7;

BB16_8:
	ld.global.u32 	%r8, [cvalue1_texid__];
	ld.v2.f32 	{%f83, %f84}, [%rd1];
	mov.u32 	%r9, 2;
	mov.f32 	%f82, 0f00000000;
	// inline asm
	call (%f75, %f76, %f77, %f78), _rt_texture_get_f_id, (%r8, %r9, %f83, %f84, %f82, %f82);
	// inline asm
	mov.f32 	%f114, %f75;
	mov.f32 	%f115, %f76;
	mov.f32 	%f116, %f77;
	mov.f32 	%f113, %f78;
	bra.uni 	BB16_10;

BB16_9:
	ld.global.v4.f32 	{%f85, %f86, %f87, %f88}, [cvalue1_const__];
	mov.f32 	%f113, %f88;
	mov.f32 	%f45, %f87;
	mov.f32 	%f44, %f86;
	mov.f32 	%f43, %f85;
	mov.f32 	%f114, %f85;
	mov.f32 	%f115, %f86;
	mov.f32 	%f116, %f87;
	bra.uni 	BB16_10;

BB16_7:
	ld.global.u32 	%r7, [cvalue1_proc__];
	// inline asm
	call (%rd5), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .align 16 .b8 retval0[16];
	prototype_20 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd5, 
	(
	param0, 
	param1
	)
	, prototype_20;
	ld.param.f32	%f114, [retval0+0];
	ld.param.f32	%f115, [retval0+4];
	ld.param.f32	%f116, [retval0+8];
	ld.param.f32	%f113, [retval0+12];
	
	//{
	}// Callseq End 20

BB16_10:
	ld.global.u32 	%r3, [mix_type__];
	setp.eq.s32	%p5, %r3, 0;
	@%p5 bra 	BB16_14;

	setp.eq.s32	%p6, %r3, 1;
	@%p6 bra 	BB16_13;
	bra.uni 	BB16_12;

BB16_13:
	ld.global.u32 	%r11, [mix_texid__];
	ld.v2.f32 	{%f97, %f98}, [%rd1];
	mov.u32 	%r12, 2;
	mov.f32 	%f96, 0f00000000;
	// inline asm
	call (%f89, %f90, %f91, %f92), _rt_texture_get_f_id, (%r11, %r12, %f97, %f98, %f96, %f96);
	// inline asm
	mov.f32 	%f117, %f89;
	bra.uni 	BB16_15;

BB16_14:
	ld.global.f32 	%f117, [mix_const__];
	bra.uni 	BB16_15;

BB16_12:
	ld.global.u32 	%r10, [mix_proc__];
	// inline asm
	call (%rd6), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	prototype_21 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd6, 
	(
	param0, 
	param1
	)
	, prototype_21;
	ld.param.f32	%f117, [retval0+0];
	
	//{
	}// Callseq End 21

BB16_15:
	mov.f32 	%f99, 0f3F800000;
	sub.ftz.f32 	%f100, %f99, %f117;
	mul.ftz.f32 	%f101, %f110, %f100;
	mul.ftz.f32 	%f102, %f111, %f100;
	mul.ftz.f32 	%f103, %f112, %f100;
	mul.ftz.f32 	%f104, %f109, %f100;
	fma.rn.ftz.f32 	%f105, %f114, %f117, %f101;
	fma.rn.ftz.f32 	%f106, %f115, %f117, %f102;
	fma.rn.ftz.f32 	%f107, %f116, %f117, %f103;
	fma.rn.ftz.f32 	%f108, %f113, %f117, %f104;
	st.param.f32	[func_retval0+0], %f105;
	st.param.f32	[func_retval0+4], %f106;
	st.param.f32	[func_retval0+8], %f107;
	st.param.f32	[func_retval0+12], %f108;
	ret;
}

	// .globl	_Z14floatClampProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .b32 func_retval0) _Z14floatClampProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z14floatClampProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z14floatClampProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<20>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [_Z14floatClampProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd2, [_Z14floatClampProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [fvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB17_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB17_3;
	bra.uni 	BB17_2;

BB17_3:
	ld.global.u32 	%r3, [fvalue0_texid__];
	ld.v2.f32 	{%f13, %f14}, [%rd1+24];
	mov.u32 	%r4, 2;
	mov.f32 	%f12, 0f00000000;
	// inline asm
	call (%f5, %f6, %f7, %f8), _rt_texture_get_f_id, (%r3, %r4, %f13, %f14, %f12, %f12);
	// inline asm
	mov.f32 	%f19, %f5;
	bra.uni 	BB17_5;

BB17_4:
	ld.global.f32 	%f19, [fvalue0_const__];
	bra.uni 	BB17_5;

BB17_2:
	ld.global.u32 	%r2, [fvalue0_proc__];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	prototype_22 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1
	)
	, prototype_22;
	ld.param.f32	%f19, [retval0+0];
	
	//{
	}// Callseq End 22

BB17_5:
	ld.global.f32 	%f15, [maxValue];
	min.ftz.f32 	%f16, %f19, %f15;
	ld.global.f32 	%f17, [milwalue];
	max.ftz.f32 	%f18, %f17, %f16;
	st.param.f32	[func_retval0+0], %f18;
	ret;
}

	// .globl	_Z14colorClampProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z14colorClampProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z14colorClampProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z14colorClampProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<57>;
	.reg .s32 	%r<5>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [_Z14colorClampProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd2, [_Z14colorClampProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r1, [cvalue0_type__];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB18_4;

	setp.eq.s32	%p2, %r1, 1;
	@%p2 bra 	BB18_3;
	bra.uni 	BB18_2;

BB18_3:
	ld.global.u32 	%r3, [cvalue0_texid__];
	ld.v2.f32 	{%f37, %f38}, [%rd1+24];
	mov.u32 	%r4, 2;
	mov.f32 	%f36, 0f00000000;
	// inline asm
	call (%f29, %f30, %f31, %f32), _rt_texture_get_f_id, (%r3, %r4, %f37, %f38, %f36, %f36);
	// inline asm
	mov.f32 	%f54, %f29;
	mov.f32 	%f55, %f30;
	mov.f32 	%f56, %f31;
	mov.f32 	%f53, %f32;
	bra.uni 	BB18_5;

BB18_4:
	ld.global.v4.f32 	{%f39, %f40, %f41, %f42}, [cvalue0_const__];
	mov.f32 	%f53, %f42;
	mov.f32 	%f17, %f41;
	mov.f32 	%f16, %f40;
	mov.f32 	%f15, %f39;
	mov.f32 	%f54, %f39;
	mov.f32 	%f55, %f40;
	mov.f32 	%f56, %f41;
	bra.uni 	BB18_5;

BB18_2:
	ld.global.u32 	%r2, [cvalue0_proc__];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .align 16 .b8 retval0[16];
	prototype_23 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1
	)
	, prototype_23;
	ld.param.f32	%f54, [retval0+0];
	ld.param.f32	%f55, [retval0+4];
	ld.param.f32	%f56, [retval0+8];
	ld.param.f32	%f53, [retval0+12];
	
	//{
	}// Callseq End 23

BB18_5:
	ld.global.f32 	%f43, [maxValue];
	min.ftz.f32 	%f44, %f54, %f43;
	ld.global.f32 	%f45, [milwalue];
	max.ftz.f32 	%f46, %f45, %f44;
	min.ftz.f32 	%f47, %f55, %f43;
	max.ftz.f32 	%f48, %f45, %f47;
	min.ftz.f32 	%f49, %f56, %f43;
	max.ftz.f32 	%f50, %f45, %f49;
	min.ftz.f32 	%f51, %f53, %f43;
	max.ftz.f32 	%f52, %f45, %f51;
	st.param.f32	[func_retval0+0], %f46;
	st.param.f32	[func_retval0+4], %f48;
	st.param.f32	[func_retval0+8], %f50;
	st.param.f32	[func_retval0+12], %f52;
	ret;
}

	// .globl	_Z17shadingNormalProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z17shadingNormalProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z17shadingNormalProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z17shadingNormalProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z17shadingNormalProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.f32 	%f1, [%rd1+20];
	ld.f32 	%f2, [%rd1+16];
	ld.f32 	%f3, [%rd1+12];
	st.param.f32	[func_retval0+0], %f3;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f1;
	mov.f32 	%f4, 0f00000000;
	st.param.f32	[func_retval0+12], %f4;
	ret;
}

	// .globl	_ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev
.visible .func _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev
.visible .func _ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix17callableProgramIdIF6float4RK13LocalGeometryR15ProceduralCacheEEC2Ev
.visible .func _ZN5optix17callableProgramIdIF6float4RK13LocalGeometryR15ProceduralCacheEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIF6float4RK13LocalGeometryR15ProceduralCacheEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseI6float4RK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES7_S7_S7_S7_S7_S7_S7_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float4RK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES7_S7_S7_S7_S7_S7_S7_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseI6float4RK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES7_S7_S7_S7_S7_S7_S7_EC2Ev_param_0
)
{



	ret;
}


