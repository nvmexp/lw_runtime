//
// Generated by LWPU LWVM Compiler
//
// Compiler Build ID: CL-19805474
// Lwca compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z15clamp_luminanceRK6float4f
.visible .func  (.param .align 8 .b8 func_retval0[8]) stlr_compute_sub_pixel_pos
(
	.param .b64 stlr_compute_sub_pixel_pos_param_0,
	.param .b32 stlr_compute_sub_pixel_pos_param_1
)
;
.visible .func  (.param .align 8 .b8 func_retval0[56]) stlr_main
(
	.param .b64 stlr_main_param_0,
	.param .align 8 .b8 stlr_main_param_1[24],
	.param .b32 stlr_main_param_2,
	.param .b32 stlr_main_param_3,
	.param .align 8 .b8 stlr_main_param_4[8],
	.param .align 8 .b8 stlr_main_param_5[8],
	.param .align 8 .b8 stlr_main_param_6[8],
	.param .align 8 .b8 stlr_main_param_7[8],
	.param .align 8 .b8 stlr_main_param_8[8]
)
;
.global .align 4 .u32 ray_type;
.global .align 8 .b8 top_object[4];
.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 render_task_data[1];
.global .align 4 .u32 seed_base;
.global .align 4 .u32 frame_number;
.global .align 4 .u32 render_task_id;
.global .align 1 .b8 sub_pixel_positions[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo8ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9seed_baseE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14render_task_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[5] = {105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9seed_baseE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14render_task_idE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9seed_baseE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14render_task_idE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic8ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9seed_baseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14render_task_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9seed_baseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14render_task_idE[1];

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z15clamp_luminanceRK6float4f(
	.param .b64 _Z15clamp_luminanceRK6float4f_param_0,
	.param .b32 _Z15clamp_luminanceRK6float4f_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z15clamp_luminanceRK6float4f_param_0];
	ld.param.f32 	%f18, [_Z15clamp_luminanceRK6float4f_param_1];
	ld.v4.f32 	{%f19, %f20, %f21, %f22}, [%rd1];
	mul.f32 	%f23, %f20, 0f3F371759;
	fma.rn.f32 	%f24, %f19, 0f3E59B3D0, %f23;
	fma.rn.f32 	%f25, %f21, 0f3D93DD98, %f24;
	fma.rn.f32 	%f5, %f22, 0f00000000, %f25;
	setp.gtu.f32	%p1, %f5, %f18;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	div.rn.f32 	%f30, %f18, %f5;
	mul.f32 	%f31, %f30, %f19;
	mul.f32 	%f32, %f30, %f20;
	mul.f32 	%f33, %f30, %f21;
	mov.f32 	%f34, %f22;
	bra.uni 	BB0_3;

BB0_1:
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd1];
	mov.f32 	%f34, %f29;
	mov.f32 	%f33, %f28;
	mov.f32 	%f32, %f27;
	mov.f32 	%f31, %f26;

BB0_3:
	st.param.f32	[func_retval0+0], %f31;
	st.param.f32	[func_retval0+4], %f32;
	st.param.f32	[func_retval0+8], %f33;
	st.param.f32	[func_retval0+12], %f34;
	ret;
}

	// .globl	_Z9trace_rayRN3rtt7stellar8RayStackER7RayData
.visible .func _Z9trace_rayRN3rtt7stellar8RayStackER7RayData(
	.param .b64 _Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_0,
	.param .b64 _Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_1
)
{
	.reg .f32 	%f<9>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd2, [_Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_0];
	ld.param.u64 	%rd1, [_Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_1];
	ld.u32 	%r4, [%rd2+24];
	add.s32 	%r5, %r4, -1;
	mul.wide.s32 	%rd3, %r5, 112;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r6, [%rd4+1828];
	ld.u32 	%r7, [%rd4+1824];
	ld.u32 	%r8, [%rd4+1832];
	ld.f32 	%f2, [%rd4+36];
	ld.f32 	%f3, [%rd4+40];
	ld.f32 	%f5, [%rd4+84];
	ld.f32 	%f4, [%rd4+80];
	ld.f32 	%f6, [%rd4+88];
	ld.f32 	%f8, [%rd4+128];
	st.v2.u32 	[%rd1+24], {%r7, %r6};
	st.u32 	[%rd1+32], %r8;
	ld.f32 	%f1, [%rd4+32];
	ld.global.u32 	%r2, [ray_type];
	ld.global.u32 	%r1, [top_object];
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 80;
	// inline asm
	call _rt_trace_64, (%r1, %f1, %f2, %f3, %f4, %f5, %f6, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	ret;
}

	// .globl	_Z21write_distance_bufferiiRK4int2f
.visible .func _Z21write_distance_bufferiiRK4int2f(
	.param .b32 _Z21write_distance_bufferiiRK4int2f_param_0,
	.param .b32 _Z21write_distance_bufferiiRK4int2f_param_1,
	.param .b64 _Z21write_distance_bufferiiRK4int2f_param_2,
	.param .b32 _Z21write_distance_bufferiiRK4int2f_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r4, [_Z21write_distance_bufferiiRK4int2f_param_0];
	ld.param.u32 	%r5, [_Z21write_distance_bufferiiRK4int2f_param_1];
	ld.param.u64 	%rd2, [_Z21write_distance_bufferiiRK4int2f_param_2];
	ld.param.f32 	%f1, [_Z21write_distance_bufferiiRK4int2f_param_3];
	ld.global.u32 	%r6, [frame_number];
	setp.eq.s32	%p1, %r6, 0;
	ld.global.u64 	%rd3, [launch_index];
	cvt.u32.u64	%r1, %rd3;
	setp.ge.s32	%p2, %r1, %r5;
	and.pred  	%p3, %p1, %p2;
	shr.u64 	%rd4, %rd3, 32;
	cvt.u32.u64	%r2, %rd4;
	@!%p3 bra 	BB2_4;
	bra.uni 	BB2_1;

BB2_1:
	ld.u64 	%rd1, [%rd2];
	cvt.u32.u64	%r3, %rd1;
	add.s32 	%r7, %r3, %r5;
	setp.lt.s32	%p4, %r1, %r7;
	setp.ge.s32	%p5, %r2, %r5;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB2_4;
	bra.uni 	BB2_2;

BB2_2:
	shr.u64 	%rd5, %rd1, 32;
	cvt.u32.u64	%r8, %rd5;
	add.s32 	%r9, %r8, %r5;
	setp.ge.s32	%p7, %r2, %r9;
	@%p7 bra 	BB2_4;

	sub.s32 	%r13, %r1, %r5;
	sub.s32 	%r14, %r2, %r5;
	mad.lo.s32 	%r15, %r14, %r3, %r13;
	cvt.s64.s32	%rd7, %r15;
	mov.u32 	%r11, 1;
	mov.u32 	%r12, 4;
	mov.u64 	%rd10, 0;
	// inline asm
	call (%rd6), _rt_buffer_get_id_64, (%r4, %r11, %r12, %rd7, %rd10, %rd10, %rd10);
	// inline asm
	st.f32 	[%rd6], %f1;

BB2_4:
	ret;
}

	// .globl	_Z6camerav
.visible .entry _Z6camerav(

)
{
	.local .align 16 .b8 	__local_depot3[3696];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .f32 	%f<131>;
	.reg .b32 	%r<100>;
	.reg .b64 	%rd<65>;


	mov.u64 	%rd64, __local_depot3;
	cvta.local.u64 	%SP, %rd64;
	add.u64 	%rd15, %SP, 80;
	cvta.to.local.u64 	%rd1, %rd15;
	ldu.global.u32 	%r35, [render_task_id];
	cvt.s64.s32	%rd11, %r35;
	mov.u64 	%rd16, render_task_data;
	cvta.global.u64 	%rd10, %rd16;
	mov.u32 	%r33, 1;
	mov.u32 	%r34, 272;
	mov.u64 	%rd14, 0;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r33, %r34, %rd11, %rd14, %rd14, %rd14);
	// inline asm
	ld.global.u32 	%r36, [frame_number];
	ld.global.u32 	%r37, [seed_base];
	add.s32 	%r1, %r36, %r37;
	ld.u64 	%rd17, [%rd9+88];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .align 8 .b8 retval0[8];
	call.uni (retval0), 
	stlr_compute_sub_pixel_pos, 
	(
	param0, 
	param1
	);
	ld.param.f32	%f1, [retval0+0];
	ld.param.f32	%f2, [retval0+4];
	
	//{
	}// Callseq End 0
	ld.global.v2.u32 	{%r38, %r39}, [launch_index];
	mov.u32 	%r94, %r38;
	mov.u32 	%r93, %r39;
	neg.s32 	%r40, %r39;
	setp.ne.s32	%p3, %r38, %r40;
	@%p3 bra 	BB3_2;

	ld.global.s32 	%rd20, [render_task_id];
	mov.u64 	%rd24, sub_pixel_positions;
	cvta.global.u64 	%rd19, %rd24;
	mov.u32 	%r42, 8;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd19, %r33, %r42, %rd20, %rd14, %rd14, %rd14);
	// inline asm
	st.v2.f32 	[%rd18], {%f1, %f2};
	ld.global.u64 	%rd25, [launch_index];
	cvt.u32.u64	%r94, %rd25;
	shr.u64 	%rd26, %rd25, 32;
	cvt.u32.u64	%r93, %rd26;

BB3_2:
	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd27;
	add.s64 	%rd4, %rd1, 24;
	mov.u32 	%r96, 0;
	st.local.u32 	[%rd1+24], %r96;
	add.s64 	%rd29, %rd15, 32;
	add.s64 	%rd30, %rd15, 24;
	st.local.v2.u64 	[%rd1], {%rd30, %rd29};
	add.s64 	%rd31, %rd15, 1824;
	st.local.u64 	[%rd1+16], %rd31;
	ld.u32 	%r8, [%rd9];
	sub.s32 	%r45, %r94, %r8;
	cvt.rn.f32.s32	%f22, %r45;
	sub.s32 	%r46, %r93, %r8;
	cvt.rn.f32.s32	%f23, %r46;
	ld.u64 	%rd32, [%rd9+88];
	ld.local.v2.u64 	{%rd33, %rd34}, [%rd1];
	ld.u32 	%r47, [%rd9+40];
	ld.v2.f32 	{%f24, %f25}, [%rd9+16];
	ld.v2.f32 	{%f28, %f29}, [%rd9+24];
	ld.v2.f32 	{%f32, %f33}, [%rd9+32];
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd32;
	.param .align 8 .b8 param1[24];
	st.param.b64	[param1+0], %rd33;
	st.param.b64	[param1+8], %rd34;
	st.param.b64	[param1+16], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b32 param3;
	st.param.b32	[param3+0], %r47;
	.param .align 8 .b8 param4[8];
	st.param.f32	[param4+0], %f22;
	st.param.f32	[param4+4], %f23;
	.param .align 8 .b8 param5[8];
	st.param.f32	[param5+0], %f24;
	st.param.f32	[param5+4], %f25;
	.param .align 8 .b8 param6[8];
	st.param.f32	[param6+0], %f28;
	st.param.f32	[param6+4], %f29;
	.param .align 8 .b8 param7[8];
	st.param.f32	[param7+0], %f32;
	st.param.f32	[param7+4], %f33;
	.param .align 8 .b8 param8[8];
	st.param.f32	[param8+0], %f1;
	st.param.f32	[param8+4], %f2;
	.param .align 8 .b8 retval0[56];
	call.uni (retval0), 
	stlr_main, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8
	);
	ld.param.b64	%rd37, [retval0+0];
	ld.param.b64	%rd38, [retval0+8];
	ld.param.b64	%rd39, [retval0+16];
	ld.param.f32	%f36, [retval0+24];
	ld.param.f32	%f37, [retval0+28];
	ld.param.f32	%f38, [retval0+32];
	ld.param.f32	%f39, [retval0+36];
	ld.param.f32	%f40, [retval0+40];
	ld.param.f32	%f41, [retval0+44];
	ld.param.f32	%f42, [retval0+48];
	ld.param.f32	%f43, [retval0+52];
	
	//{
	}// Callseq End 1
	mov.f32 	%f44, 0f00000000;
	st.local.v4.f32 	[%rd5], {%f44, %f44, %f44, %f44};
	st.local.v2.f32 	[%rd5+40], {%f38, %f39};
	st.local.v4.f32 	[%rd5+48], {%f40, %f41, %f42, %f43};
	st.local.v2.f32 	[%rd5+64], {%f36, %f37};
	mov.u32 	%r48, 2139095040;
	st.local.u32 	[%rd5+72], %r48;
	st.local.u64 	[%rd5+16], %rd15;
	ld.f32 	%f45, [%rd9+16];
	cvt.rzi.s32.f32	%r9, %f45;
	ld.f32 	%f46, [%rd9+20];
	cvt.rzi.s32.f32	%r10, %f46;
	ld.local.u32 	%r95, [%rd1+24];
	mov.u32 	%r99, 128;

BB3_3:
	add.s32 	%r52, %r95, -1;
	mul.wide.s32 	%rd41, %r52, 112;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.v4.u32 	{%r53, %r54, %r55, %r56}, [%rd42+1824];
	ld.local.v4.f32 	{%f55, %f56, %f57, %f58}, [%rd42+32];
	ld.local.v4.f32 	{%f59, %f60, %f61, %f62}, [%rd42+80];
	ld.local.f32 	%f54, [%rd42+128];
	st.local.v2.u32 	[%rd5+24], {%r53, %r54};
	st.local.u32 	[%rd5+32], %r55;
	ld.global.u32 	%r50, [ray_type];
	ld.global.u32 	%r49, [top_object];
	mov.u32 	%r51, 80;
	// inline asm
	call _rt_trace_64, (%r49, %f55, %f56, %f57, %f59, %f60, %f61, %r50, %f44, %f54, %rd27, %r51);
	// inline asm
	add.s32 	%r99, %r99, -1;
	ld.local.u32 	%r95, [%rd4];
	setp.eq.s32	%p5, %r95, 0;
	mov.pred 	%p34, 0;
	@%p5 bra 	BB3_5;

	ld.local.f32 	%f63, [%rd5+72];
	setp.eq.f32	%p34, %f63, 0f7F800000;

BB3_5:
	setp.gt.s32	%p6, %r99, 0;
	and.pred  	%p7, %p34, %p6;
	@%p7 bra 	BB3_3;

	ld.local.f32 	%f3, [%rd5+72];
	add.s64 	%rd6, %rd9, 208;
	add.s32 	%r16, %r10, %r8;

BB3_7:
	mul.wide.u32 	%rd43, %r96, 8;
	add.s64 	%rd8, %rd6, %rd43;
	ld.u32 	%r19, [%rd8];
	setp.gt.s32	%p8, %r19, 1;
	@%p8 bra 	BB3_10;

	setp.eq.s32	%p11, %r19, 1;
	@%p11 bra 	BB3_14;

	setp.eq.s32	%p12, %r19, 0;
	@%p12 bra 	BB3_24;
	bra.uni 	BB3_23;

BB3_10:
	setp.eq.s32	%p9, %r19, 3;
	@%p9 bra 	BB3_14;
	bra.uni 	BB3_11;

BB3_14:
	ld.global.u32 	%r97, [ray_type];
	setp.eq.s32	%p23, %r97, 1;
	setp.eq.s32	%p24, %r19, 3;
	xor.pred  	%p25, %p23, %p24;
	@%p25 bra 	BB3_23;

	ld.local.u32 	%r98, [%rd1+24];
	setp.ne.s32	%p26, %r98, 0;
	setp.gt.s32	%p27, %r99, 0;
	and.pred  	%p28, %p27, %p26;
	@!%p28 bra 	BB3_18;
	bra.uni 	BB3_17;

BB3_16:
	ld.global.u32 	%r97, [ray_type];

BB3_17:
	mov.u32 	%r24, %r97;
	add.s32 	%r75, %r98, -1;
	mul.wide.s32 	%rd50, %r75, 112;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.v4.u32 	{%r76, %r77, %r78, %r79}, [%rd51+1824];
	ld.local.v4.f32 	{%f72, %f73, %f74, %f75}, [%rd51+32];
	ld.local.v4.f32 	{%f76, %f77, %f78, %f79}, [%rd51+80];
	ld.local.f32 	%f71, [%rd51+128];
	st.local.v2.u32 	[%rd5+24], {%r76, %r77};
	st.local.u32 	[%rd5+32], %r78;
	ld.global.u32 	%r72, [top_object];
	// inline asm
	call _rt_trace_64, (%r72, %f72, %f73, %f74, %f76, %f77, %f78, %r24, %f44, %f71, %rd27, %r51);
	// inline asm
	add.s32 	%r99, %r99, -1;
	setp.gt.s32	%p29, %r99, 0;
	ld.local.u32 	%r98, [%rd1+24];
	setp.ne.s32	%p30, %r98, 0;
	and.pred  	%p31, %p29, %p30;
	@%p31 bra 	BB3_16;

BB3_18:
	ld.local.v4.f32 	{%f80, %f81, %f82, %f83}, [%rd5];
	mov.f32 	%f88, 0f3F800000;
	sub.f32 	%f89, %f88, %f83;
	st.local.f32 	[%rd5+12], %f89;
	ld.f32 	%f90, [%rd9+12];
	mul.f32 	%f91, %f90, %f82;
	mul.f32 	%f92, %f90, %f81;
	mul.f32 	%f93, %f90, %f80;
	st.local.v4.f32 	[%rd5], {%f93, %f92, %f91, %f89};
	ld.f32 	%f94, [%rd9+4];
	ld.local.v4.f32 	{%f95, %f96, %f97, %f98}, [%rd5];
	min.f32 	%f103, %f98, %f94;
	min.f32 	%f104, %f97, %f94;
	min.f32 	%f105, %f96, %f94;
	min.f32 	%f106, %f95, %f94;
	st.local.v4.f32 	[%rd5], {%f106, %f105, %f104, %f103};
	ld.local.v4.f32 	{%f107, %f108, %f109, %f110}, [%rd5];
	mul.f32 	%f111, %f108, 0f3F371759;
	fma.rn.f32 	%f112, %f107, 0f3E59B3D0, %f111;
	fma.rn.f32 	%f113, %f109, 0f3D93DD98, %f112;
	fma.rn.f32 	%f8, %f110, 0f00000000, %f113;
	ld.f32 	%f9, [%rd9+8];
	setp.gtu.f32	%p32, %f8, %f9;
	@%p32 bra 	BB3_20;
	bra.uni 	BB3_19;

BB3_20:
	div.rn.f32 	%f118, %f9, %f8;
	mul.f32 	%f127, %f118, %f107;
	mul.f32 	%f128, %f118, %f108;
	mul.f32 	%f129, %f118, %f109;
	mov.f32 	%f130, %f110;
	bra.uni 	BB3_21;

BB3_11:
	setp.ne.s32	%p10, %r19, 2;
	@%p10 bra 	BB3_23;

	ld.global.u32 	%r61, [ray_type];
	setp.ne.s32	%p13, %r61, 0;
	@%p13 bra 	BB3_23;

	ld.global.u32 	%r62, [frame_number];
	setp.eq.s32	%p14, %r62, 0;
	ld.global.v2.u32 	{%r63, %r64}, [launch_index];
	setp.ge.s32	%p15, %r63, %r8;
	and.pred  	%p16, %p14, %p15;
	add.s32 	%r65, %r9, %r8;
	setp.lt.s32	%p17, %r63, %r65;
	and.pred  	%p18, %p16, %p17;
	setp.ge.s32	%p19, %r64, %r8;
	and.pred  	%p20, %p18, %p19;
	setp.lt.s32	%p21, %r64, %r16;
	and.pred  	%p22, %p20, %p21;
	@!%p22 bra 	BB3_23;
	bra.uni 	BB3_22;

BB3_22:
	ld.u32 	%r66, [%rd8+4];
	sub.s32 	%r69, %r64, %r8;
	sub.s32 	%r70, %r63, %r8;
	mad.lo.s32 	%r71, %r69, %r9, %r70;
	cvt.s64.s32	%rd45, %r71;
	mov.u32 	%r68, 4;
	// inline asm
	call (%rd44), _rt_buffer_get_id_64, (%r66, %r33, %r68, %rd45, %rd14, %rd14, %rd14);
	// inline asm
	st.f32 	[%rd44], %f3;
	bra.uni 	BB3_23;

BB3_19:
	ld.local.v4.f32 	{%f114, %f115, %f116, %f117}, [%rd5];
	mov.f32 	%f130, %f117;
	mov.f32 	%f129, %f116;
	mov.f32 	%f128, %f115;
	mov.f32 	%f127, %f114;

BB3_21:
	st.local.v4.f32 	[%rd5], {%f127, %f128, %f129, %f130};
	shl.b32 	%r86, %r8, 1;
	add.s32 	%r87, %r9, %r86;
	ld.global.v2.u32 	{%r88, %r89}, [launch_index];
	mad.lo.s32 	%r92, %r89, %r87, %r88;
	ld.u32 	%r83, [%rd8+4];
	cvt.u64.u32	%rd58, %r92;
	mov.u32 	%r85, 16;
	// inline asm
	call (%rd57), _rt_buffer_get_id_64, (%r83, %r33, %r85, %rd58, %rd14, %rd14, %rd14);
	// inline asm
	ld.local.v4.f32 	{%f119, %f120, %f121, %f122}, [%rd5];
	st.v4.f32 	[%rd57], {%f119, %f120, %f121, %f122};

BB3_23:
	add.s32 	%r96, %r96, 1;
	setp.lt.u32	%p33, %r96, 8;
	@%p33 bra 	BB3_7;

BB3_24:
	ret;
}

	// .globl	_ZNK3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv
.visible .func  (.param .b64 func_retval0) _ZNK3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv(
	.param .b64 _ZNK3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZNK3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0];
	ld.u64 	%rd2, [%rd1];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

	// .globl	_ZN3rtt7stellar6MLCRayC1Ev
.visible .func _ZN3rtt7stellar6MLCRayC1Ev(
	.param .b64 _ZN3rtt7stellar6MLCRayC1Ev_param_0
)
{



	ret;
}


//
// Generated by LLVM LWPTX Back-End
//





	// .globl	stlr_create_for_stellarcheck

.visible .func  (.param .b32 func_retval0) stlr_create_for_stellarcheck(
	.param .b64 stlr_create_for_stellarcheck_param_0,
	.param .b32 stlr_create_for_stellarcheck_param_1
)
{
	.reg .s32 	%r<2>;

	ld.param.u32 	%r1, [stlr_create_for_stellarcheck_param_1];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	stlr_main
.visible .func  (.param .align 8 .b8 func_retval0[56]) stlr_main(
	.param .b64 stlr_main_param_0,
	.param .align 8 .b8 stlr_main_param_1[24],
	.param .b32 stlr_main_param_2,
	.param .b32 stlr_main_param_3,
	.param .align 8 .b8 stlr_main_param_4[8],
	.param .align 8 .b8 stlr_main_param_5[8],
	.param .align 8 .b8 stlr_main_param_6[8],
	.param .align 8 .b8 stlr_main_param_7[8],
	.param .align 8 .b8 stlr_main_param_8[8]
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<282>;
	.reg .s32 	%r<119>;
	.reg .s64 	%rd<112>;

	ld.param.u64 	%rd8, [stlr_main_param_1+16];
	ld.param.u64 	%rd7, [stlr_main_param_1+8];
	ld.param.u64 	%rd4, [stlr_main_param_1];
	ld.param.u64 	%rd64, [stlr_main_param_0];
	ld.param.v2.f32 	{%f88, %f89}, [stlr_main_param_5];
	ld.param.v2.f32 	{%f90, %f91}, [stlr_main_param_7];
	div.approx.ftz.f32 	%f92, %f88, %f90;
	div.approx.ftz.f32 	%f93, %f89, %f91;
	ld.param.v2.f32 	{%f94, %f95}, [stlr_main_param_4];
	ld.param.v2.f32 	{%f96, %f97}, [stlr_main_param_6];
	fma.rn.ftz.f32 	%f2, %f93, %f97, %f95;
	fma.rn.ftz.f32 	%f1, %f92, %f96, %f94;
	ld.param.u32 	%r26, [stlr_main_param_3];
	div.approx.ftz.f32 	%f98, %f1, %f92;
	div.approx.ftz.f32 	%f99, %f2, %f93;
	mul.ftz.f32 	%f100, %f93, %f93;
	mul.ftz.f32 	%f101, %f92, %f92;
	div.approx.ftz.f32 	%f5, %f92, %f101;
	mov.f32 	%f87, 0f00000000;
	div.approx.ftz.f32 	%f6, %f87, %f100;
	ld.param.v2.f32 	{%f102, %f103}, [stlr_main_param_8];
	div.approx.ftz.f32 	%f8, %f93, %f100;
	div.approx.ftz.f32 	%f7, %f87, %f101;
	div.approx.ftz.f32 	%f104, %f90, %f88;
	div.approx.ftz.f32 	%f105, %f91, %f89;
	fma.rn.ftz.f32 	%f4, %f105, %f103, %f99;
	fma.rn.ftz.f32 	%f3, %f104, %f102, %f98;
	// inline asm
	mov.b64 {_,%r9}, %rd64;
	// inline asm
	mov.u32 	%r94, 1;
	mov.u64 	%rd82, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_id_64, (%r9, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.ftz.f32 	%f108, %f3, 0fBF000000;
	add.ftz.f32 	%f109, %f4, 0fBF000000;
	ld.u64 	%rd27, [%rd10+528];
	cvt.s64.s32	%rd1, %r26;
	mul.wide.s32 	%rd41, %r26, 192;
	// inline asm
	mov.b64 {_,%r21}, %rd27;
	// inline asm
	// inline asm
	call (%rd28), _rt_buffer_get_id_64, (%r21, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd2, %rd28, 512;
	add.s64 	%rd42, %rd41, %rd2;
	ld.v2.f32 	{%f110, %f111}, [%rd42+168];
	mul.ftz.f32 	%f11, %f109, %f111;
	mul.ftz.f32 	%f10, %f108, %f110;
	mul.ftz.f32 	%f13, %f5, %f110;
	mul.ftz.f32 	%f14, %f6, %f111;
	mul.ftz.f32 	%f17, %f8, %f111;
	mul.ftz.f32 	%f16, %f7, %f110;
	ld.f32 	%f9, [%rd42+144];
	neg.ftz.f32 	%f12, %f9;
	ld.f32 	%f19, [%rd42+152];
	setp.leu.ftz.f32	%p5, %f19, 0f00000000;
	@%p5 bra 	LBB1_10;
	ld.param.u32 	%r25, [stlr_main_param_2];
	cvt.rni.ftz.f32.f32	%f106, %f1;
	cvt.rzi.ftz.s32.f32	%r27, %f106;
	cvt.rni.ftz.f32.f32	%f107, %f2;
	cvt.rzi.ftz.s32.f32	%r28, %f107;
	abs.s32 	%r29, %r27;
	shr.s32 	%r30, %r29, 31;
	shr.u32 	%r31, %r30, 24;
	add.s32 	%r32, %r29, %r31;
	and.b32  	%r33, %r32, -256;
	sub.s32 	%r34, %r29, %r33;
	setp.gt.s32	%p1, %r27, -1;
	setp.ne.s32	%p2, %r34, 0;
	mov.u32 	%r35, 256;
	sub.s32 	%r36, %r35, %r34;
	selp.b32	%r37, %r36, 0, %p2;
	selp.b32	%r38, %r34, %r37, %p1;
	ld.u64 	%rd15, [%rd10+512];
	mul.wide.s32 	%rd33, %r38, 4;
	// inline asm
	mov.b64 {_,%r13}, %rd15;
	// inline asm
	// inline asm
	call (%rd16), _rt_buffer_get_id_64, (%r13, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd34, %rd33, %rd16;
	ld.u32 	%r39, [%rd34+512];
	abs.s32 	%r40, %r28;
	mul.wide.s32 	%rd35, %r40, -2032597691;
	shr.u64 	%rd36, %rd35, 32;
	cvt.u32.u64	%r41, %rd36;
	add.s32 	%r42, %r41, %r40;
	shr.u32 	%r43, %r42, 31;
	shr.s32 	%r44, %r42, 7;
	add.s32 	%r45, %r44, %r43;
	mul.lo.s32 	%r46, %r45, 243;
	sub.s32 	%r47, %r40, %r46;
	setp.gt.s32	%p3, %r28, -1;
	setp.ne.s32	%p4, %r47, 0;
	mov.u32 	%r48, 243;
	sub.s32 	%r49, %r48, %r47;
	selp.b32	%r50, %r49, 0, %p4;
	selp.b32	%r51, %r47, %r50, %p3;
	ld.u64 	%rd21, [%rd10+520];
	mul.wide.s32 	%rd37, %r51, 4;
	// inline asm
	mov.b64 {_,%r17}, %rd21;
	// inline asm
	// inline asm
	call (%rd22), _rt_buffer_get_id_64, (%r17, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd38, %rd37, %rd22;
	ld.u32 	%r52, [%rd38+512];
	add.s32 	%r53, %r52, %r39;
	mul.wide.s32 	%rd39, %r53, -2032597691;
	shr.u64 	%rd40, %rd39, 32;
	cvt.u32.u64	%r54, %rd40;
	add.s32 	%r55, %r54, %r53;
	shr.u32 	%r56, %r55, 31;
	shr.s32 	%r57, %r55, 15;
	add.s32 	%r58, %r57, %r56;
	mul.lo.s32 	%r59, %r58, 62208;
	sub.s32 	%r60, %r53, %r59;
	mad.lo.s32 	%r117, %r25, 62208, %r60;
	mul.lo.s64 	%rd43, %rd1, 192;
	add.s64 	%rd44, %rd43, %rd2;
	ld.u32 	%r2, [%rd44+156];
	ld.f32 	%f20, [%rd44+160];
	mov.f32 	%f267, 0f00000000;
	setp.lt.s32	%p6, %r117, 1;
	@%p6 bra 	LBB1_14;
	mov.f32 	%f262, 0f3E4CCCCD;
	mov.u32 	%r116, %r117;
	mov.f32 	%f266, %f267;
LBB1_3:
	mul.wide.s32 	%rd45, %r116, 1717986919;
	shr.u64 	%rd46, %rd45, 63;
	cvt.u32.u64	%r62, %rd46;
	shr.s64 	%rd47, %rd45, 33;
	cvt.u32.u64	%r63, %rd47;
	add.s32 	%r4, %r63, %r62;
	mul.lo.s32 	%r64, %r4, 5;
	sub.s32 	%r65, %r116, %r64;
	cvt.rn.f32.s32	%f147, %r65;
	fma.rn.ftz.f32 	%f266, %f262, %f147, %f266;
	mul.ftz.f32 	%f262, %f262, 0f3E4CCCCD;
	setp.gt.s32	%p7, %r4, 0;
	mov.u32 	%r116, %r4;
	@%p7 bra 	LBB1_3;
	mov.f32 	%f264, 0f3E124925;
LBB1_5:
	mul.wide.s32 	%rd48, %r117, -1840700269;
	shr.u64 	%rd49, %rd48, 32;
	cvt.u32.u64	%r66, %rd49;
	add.s32 	%r67, %r66, %r117;
	shr.u32 	%r68, %r67, 31;
	shr.s32 	%r69, %r67, 2;
	add.s32 	%r6, %r69, %r68;
	mul.lo.s32 	%r70, %r6, 7;
	sub.s32 	%r71, %r117, %r70;
	cvt.rn.f32.s32	%f148, %r71;
	fma.rn.ftz.f32 	%f267, %f264, %f148, %f267;
	mul.ftz.f32 	%f264, %f264, 0f3E124925;
	setp.gt.s32	%p8, %r6, 0;
	mov.u32 	%r117, %r6;
	@%p8 bra 	LBB1_5;
	bra.uni 	LBB1_6;
LBB1_10:
	mul.ftz.f32 	%f115, %f11, %f11;
	mul.ftz.f32 	%f116, %f14, %f11;
	fma.rn.ftz.f32 	%f117, %f14, %f11, %f116;
	mul.ftz.f32 	%f118, %f17, %f11;
	fma.rn.ftz.f32 	%f119, %f17, %f11, %f118;
	fma.rn.ftz.f32 	%f120, %f10, %f10, %f115;
	fma.rn.ftz.f32 	%f121, %f13, %f10, %f117;
	fma.rn.ftz.f32 	%f122, %f13, %f10, %f121;
	fma.rn.ftz.f32 	%f123, %f16, %f10, %f119;
	fma.rn.ftz.f32 	%f124, %f16, %f10, %f123;
	fma.rn.ftz.f32 	%f125, %f12, %f12, %f120;
	fma.rn.ftz.f32 	%f126, %f87, %f12, %f122;
	fma.rn.ftz.f32 	%f127, %f87, %f12, %f126;
	fma.rn.ftz.f32 	%f128, %f87, %f12, %f124;
	fma.rn.ftz.f32 	%f129, %f87, %f12, %f128;
	lg2.approx.ftz.f32 	%f130, %f125;
	mul.ftz.f32 	%f131, %f130, 0fBFC00000;
	ex2.approx.ftz.f32 	%f132, %f131;
	mul.ftz.f32 	%f133, %f132, 0fBF000000;
	rsqrt.approx.ftz.f32 	%f134, %f125;
	mul.ftz.f32 	%f135, %f127, %f133;
	mul.ftz.f32 	%f136, %f129, %f133;
	mul.ftz.f32 	%f272, %f12, %f134;
	mul.ftz.f32 	%f271, %f11, %f134;
	mul.ftz.f32 	%f270, %f10, %f134;
	mul.ftz.f32 	%f137, %f10, %f135;
	mul.ftz.f32 	%f138, %f11, %f135;
	mul.ftz.f32 	%f139, %f12, %f135;
	fma.rn.ftz.f32 	%f275, %f87, %f134, %f139;
	fma.rn.ftz.f32 	%f274, %f14, %f134, %f138;
	fma.rn.ftz.f32 	%f273, %f13, %f134, %f137;
	mul.ftz.f32 	%f140, %f10, %f136;
	mul.ftz.f32 	%f141, %f11, %f136;
	mul.ftz.f32 	%f142, %f12, %f136;
	fma.rn.ftz.f32 	%f278, %f87, %f134, %f142;
	fma.rn.ftz.f32 	%f277, %f17, %f134, %f141;
	fma.rn.ftz.f32 	%f276, %f16, %f134, %f140;
	mov.u32 	%r118, 2;
	mov.f32 	%f279, %f87;
	mov.f32 	%f280, %f87;
	mov.f32 	%f281, %f87;
	bra.uni 	LBB1_11;
LBB1_14:
	mov.f32 	%f266, %f267;
LBB1_6:
	setp.gt.s32	%p9, %r2, 2;
	@%p9 bra 	LBB1_8;
	sqrt.approx.ftz.f32 	%f172, %f266;
	mul.ftz.f32 	%f173, %f267, 0f40C90FDB;
	cos.approx.ftz.f32 	%f174, %f173;
	sin.approx.ftz.f32 	%f175, %f173;
	mul.ftz.f32 	%f176, %f172, %f174;
	mul.ftz.f32 	%f177, %f172, %f175;
	mul.ftz.f32 	%f280, %f19, %f177;
	mul.ftz.f32 	%f279, %f19, %f176;
	bra.uni 	LBB1_9;
LBB1_8:
	cvt.rn.f32.s32	%f149, %r2;
	mul.ftz.f32 	%f150, %f149, %f266;
	cvt.rzi.ftz.s32.f32	%r72, %f150;
	setp.ne.s32	%p10, %r2, 0;
	selp.b32	%r73, %r2, %r72, %p10;
	rem.s32 	%r74, %r72, %r73;
	cvt.rn.f32.s32	%f151, %r74;
	div.approx.ftz.f32 	%f152, %f151, %f149;
	sub.ftz.f32 	%f153, %f266, %f152;
	mul.ftz.f32 	%f154, %f149, %f153;
	mov.f32 	%f155, 0f40C90FDB;
	div.approx.ftz.f32 	%f156, %f155, %f149;
	fma.rn.ftz.f32 	%f157, %f151, %f156, %f20;
	cos.approx.ftz.f32 	%f158, %f157;
	sin.approx.ftz.f32 	%f159, %f157;
	add.ftz.f32 	%f160, %f156, %f157;
	cos.approx.ftz.f32 	%f161, %f160;
	sin.approx.ftz.f32 	%f162, %f160;
	sqrt.approx.ftz.f32 	%f163, %f154;
	mov.f32 	%f164, 0f3F800000;
	sub.ftz.f32 	%f165, %f164, %f267;
	mul.ftz.f32 	%f166, %f165, %f163;
	mul.ftz.f32 	%f167, %f267, %f163;
	mul.ftz.f32 	%f168, %f167, %f161;
	mul.ftz.f32 	%f169, %f167, %f162;
	fma.rn.ftz.f32 	%f170, %f159, %f166, %f169;
	fma.rn.ftz.f32 	%f171, %f158, %f166, %f168;
	mul.ftz.f32 	%f280, %f19, %f171;
	mul.ftz.f32 	%f279, %f19, %f170;
LBB1_9:
	mov.f32 	%f281, 0f00000000;
	// inline asm
	mov.b64 {_,%r76}, %rd64;
	// inline asm
	// inline asm
	call (%rd51), _rt_buffer_get_id_64, (%r76, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	ld.u64 	%rd56, [%rd51+528];
	// inline asm
	mov.b64 {_,%r80}, %rd56;
	// inline asm
	// inline asm
	call (%rd57), _rt_buffer_get_id_64, (%r80, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd63, %rd43, %rd57;
	ld.f32 	%f178, [%rd63+660];
	div.approx.ftz.f32 	%f179, %f178, %f9;
	neg.ftz.f32 	%f180, %f279;
	neg.ftz.f32 	%f181, %f280;
	mul.ftz.f32 	%f182, %f87, %f179;
	mul.ftz.f32 	%f183, %f13, %f179;
	mul.ftz.f32 	%f184, %f14, %f179;
	mul.ftz.f32 	%f186, %f16, %f179;
	mul.ftz.f32 	%f187, %f17, %f179;
	fma.rn.ftz.f32 	%f188, %f12, %f179, 0f00000000;
	fma.rn.ftz.f32 	%f189, %f10, %f179, %f180;
	fma.rn.ftz.f32 	%f190, %f11, %f179, %f181;
	mul.ftz.f32 	%f191, %f190, %f190;
	mul.ftz.f32 	%f192, %f184, %f190;
	fma.rn.ftz.f32 	%f193, %f184, %f190, %f192;
	mul.ftz.f32 	%f194, %f187, %f190;
	fma.rn.ftz.f32 	%f195, %f187, %f190, %f194;
	fma.rn.ftz.f32 	%f196, %f189, %f189, %f191;
	fma.rn.ftz.f32 	%f197, %f183, %f189, %f193;
	fma.rn.ftz.f32 	%f198, %f183, %f189, %f197;
	fma.rn.ftz.f32 	%f199, %f186, %f189, %f195;
	fma.rn.ftz.f32 	%f200, %f186, %f189, %f199;
	fma.rn.ftz.f32 	%f201, %f188, %f188, %f196;
	fma.rn.ftz.f32 	%f202, %f182, %f188, %f198;
	fma.rn.ftz.f32 	%f203, %f182, %f188, %f202;
	fma.rn.ftz.f32 	%f204, %f182, %f188, %f200;
	fma.rn.ftz.f32 	%f205, %f182, %f188, %f204;
	lg2.approx.ftz.f32 	%f206, %f201;
	mul.ftz.f32 	%f207, %f206, 0fBFC00000;
	ex2.approx.ftz.f32 	%f208, %f207;
	mul.ftz.f32 	%f209, %f208, 0fBF000000;
	rsqrt.approx.ftz.f32 	%f210, %f201;
	mul.ftz.f32 	%f211, %f209, %f203;
	mul.ftz.f32 	%f212, %f209, %f205;
	mul.ftz.f32 	%f272, %f188, %f210;
	mul.ftz.f32 	%f271, %f190, %f210;
	mul.ftz.f32 	%f270, %f189, %f210;
	mul.ftz.f32 	%f213, %f189, %f211;
	mul.ftz.f32 	%f214, %f190, %f211;
	mul.ftz.f32 	%f215, %f188, %f211;
	fma.rn.ftz.f32 	%f275, %f182, %f210, %f215;
	fma.rn.ftz.f32 	%f274, %f184, %f210, %f214;
	fma.rn.ftz.f32 	%f273, %f183, %f210, %f213;
	mul.ftz.f32 	%f216, %f189, %f212;
	mul.ftz.f32 	%f217, %f190, %f212;
	mul.ftz.f32 	%f218, %f188, %f212;
	fma.rn.ftz.f32 	%f278, %f182, %f210, %f218;
	fma.rn.ftz.f32 	%f277, %f187, %f210, %f217;
	fma.rn.ftz.f32 	%f276, %f186, %f210, %f216;
	mov.u32 	%r118, 4;
LBB1_11:
	ld.u32 	%r8, [%rd4];
	setp.gt.s32	%p11, %r8, 15;
	@%p11 bra 	LBB1_13;
	// inline asm
	mov.b64 {_,%r84}, %rd64;
	// inline asm
	// inline asm
	call (%rd65), _rt_buffer_get_id_64, (%r84, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd3, %rd65, 512;
	ld.u64 	%rd70, [%rd65+528];
	mul.lo.s64 	%rd76, %rd1, 192;
	// inline asm
	mov.b64 {_,%r88}, %rd70;
	// inline asm
	// inline asm
	call (%rd71), _rt_buffer_get_id_64, (%r88, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	add.s64 	%rd77, %rd76, %rd71;
	ld.v4.f32 	{%f70, %f71, %f72, %f219}, [%rd77+528];
	ld.v4.f32 	{%f73, %f74, %f75, %f220}, [%rd77+544];
	ld.v4.f32 	{%f76, %f77, %f78, %f221}, [%rd77+560];
	ld.v4.f32 	{%f222, %f223, %f224, %f225}, [%rd77+576];
	mul.ftz.f32 	%f226, %f280, %f73;
	mul.ftz.f32 	%f227, %f280, %f74;
	mul.ftz.f32 	%f228, %f280, %f75;
	fma.rn.ftz.f32 	%f229, %f279, %f72, %f228;
	fma.rn.ftz.f32 	%f230, %f279, %f71, %f227;
	fma.rn.ftz.f32 	%f231, %f279, %f70, %f226;
	fma.rn.ftz.f32 	%f232, %f281, %f76, %f231;
	fma.rn.ftz.f32 	%f233, %f281, %f77, %f230;
	fma.rn.ftz.f32 	%f234, %f281, %f78, %f229;
	add.ftz.f32 	%f81, %f234, %f224;
	add.ftz.f32 	%f80, %f233, %f223;
	add.ftz.f32 	%f79, %f232, %f222;
	mov.b32 	 %r96, %f87;
	cvt.u64.u32	%rd84, %r96;
	shl.b64 	%rd86, %rd84, 32;
	or.b64  	%rd87, %rd84, %rd86;
	mov.b32 	 %r100, %f79;
	cvt.u64.u32	%rd92, %r100;
	mov.b32 	 %r101, %f80;
	cvt.u64.u32	%rd93, %r101;
	shl.b64 	%rd94, %rd93, 32;
	or.b64  	%rd95, %rd92, %rd94;
	mul.ftz.f32 	%f235, %f271, %f73;
	mul.ftz.f32 	%f236, %f271, %f74;
	mul.ftz.f32 	%f237, %f271, %f75;
	fma.rn.ftz.f32 	%f238, %f270, %f72, %f237;
	fma.rn.ftz.f32 	%f239, %f270, %f71, %f236;
	fma.rn.ftz.f32 	%f240, %f270, %f70, %f235;
	fma.rn.ftz.f32 	%f241, %f272, %f76, %f240;
	mov.b32 	 %r102, %f241;
	cvt.u64.u32	%rd96, %r102;
	fma.rn.ftz.f32 	%f242, %f272, %f77, %f239;
	mov.b32 	 %r103, %f242;
	cvt.u64.u32	%rd97, %r103;
	shl.b64 	%rd98, %rd97, 32;
	or.b64  	%rd99, %rd96, %rd98;
	fma.rn.ftz.f32 	%f243, %f272, %f78, %f238;
	mul.ftz.f32 	%f244, %f274, %f73;
	mul.ftz.f32 	%f245, %f274, %f74;
	mul.ftz.f32 	%f246, %f274, %f75;
	fma.rn.ftz.f32 	%f247, %f273, %f72, %f246;
	fma.rn.ftz.f32 	%f248, %f273, %f71, %f245;
	fma.rn.ftz.f32 	%f249, %f273, %f70, %f244;
	fma.rn.ftz.f32 	%f250, %f275, %f76, %f249;
	mov.b32 	 %r104, %f250;
	cvt.u64.u32	%rd100, %r104;
	fma.rn.ftz.f32 	%f251, %f275, %f77, %f248;
	mov.b32 	 %r105, %f251;
	cvt.u64.u32	%rd101, %r105;
	shl.b64 	%rd102, %rd101, 32;
	or.b64  	%rd103, %rd100, %rd102;
	fma.rn.ftz.f32 	%f252, %f275, %f78, %f247;
	mul.ftz.f32 	%f253, %f277, %f73;
	mul.ftz.f32 	%f254, %f277, %f74;
	mul.ftz.f32 	%f255, %f277, %f75;
	fma.rn.ftz.f32 	%f256, %f276, %f72, %f255;
	fma.rn.ftz.f32 	%f257, %f276, %f71, %f254;
	fma.rn.ftz.f32 	%f258, %f276, %f70, %f253;
	fma.rn.ftz.f32 	%f259, %f278, %f76, %f258;
	mov.b32 	 %r106, %f259;
	cvt.u64.u32	%rd104, %r106;
	fma.rn.ftz.f32 	%f260, %f278, %f77, %f257;
	mov.b32 	 %r107, %f260;
	cvt.u64.u32	%rd105, %r107;
	shl.b64 	%rd106, %rd105, 32;
	or.b64  	%rd107, %rd104, %rd106;
	fma.rn.ftz.f32 	%f261, %f278, %f78, %f256;
	ld.u64 	%rd78, [%rd3+24];
	// inline asm
	mov.b64 {_,%r93}, %rd78;
	// inline asm
	// inline asm
	call (%rd79), _rt_buffer_get_id_64, (%r93, %r94, %r94, %rd82, %rd82, %rd82, %rd82);
	// inline asm
	ld.u32 	%r108, [%rd79+512];
	ld.u32 	%r109, [%rd79+516];
	add.s32 	%r110, %r8, 1;
	st.u32 	[%rd4], %r110;
	mul.wide.s32 	%rd108, %r8, 112;
	add.s64 	%rd109, %rd7, %rd108;
	st.f32 	[%rd109+88], %f261;
	st.f32 	[%rd109+72], %f252;
	st.f32 	[%rd109+56], %f243;
	st.f32 	[%rd109+24], %f87;
	st.f32 	[%rd109+8], %f81;
	st.u64 	[%rd109], %rd95;
	mov.u32 	%r111, 2139095040;
	st.u32 	[%rd109+96], %r111;
	st.u64 	[%rd109+80], %rd107;
	st.u64 	[%rd109+64], %rd103;
	st.u64 	[%rd109+48], %rd99;
	st.f32 	[%rd109+40], %f87;
	st.u64 	[%rd109+16], %rd87;
	st.u64 	[%rd109+32], %rd87;
	add.s64 	%rd110, %rd8, %rd108;
	st.f32 	[%rd110+88], %f87;
	st.u64 	[%rd110+80], %rd87;
	st.f32 	[%rd110+72], %f87;
	st.u64 	[%rd110+64], %rd87;
	st.f32 	[%rd110+56], %f81;
	st.u64 	[%rd110+48], %rd95;
	mov.u32 	%r112, 1065353216;
	st.u32 	[%rd110+24], %r112;
	mov.u64 	%rd111, 4575657222473777152;
	st.u64 	[%rd110+16], %rd111;
	mov.u32 	%r113, -1;
	st.u32 	[%rd110+108], %r113;
	mov.u32 	%r114, 0;
	st.u32 	[%rd110+104], %r114;
	st.u32 	[%rd110+100], %r112;
	st.u32 	[%rd110+96], %r114;
	st.u32 	[%rd110+44], %r118;
	st.u32 	[%rd110+40], %r114;
	st.u32 	[%rd110+36], %r114;
	st.u32 	[%rd110+32], %r112;
	mov.u32 	%r115, 140;
	st.u32 	[%rd110+8], %r115;
	st.u32 	[%rd110+4], %r109;
	st.u32 	[%rd110], %r108;
LBB1_13:
	st.param.b64	[func_retval0+0], %rd4;
	st.param.b64	[func_retval0+8], %rd7;
	st.param.b64	[func_retval0+16], %rd8;
	st.param.f32	[func_retval0+24], %f1;
	st.param.f32	[func_retval0+28], %f2;
	st.param.f32	[func_retval0+32], %f3;
	st.param.f32	[func_retval0+36], %f4;
	st.param.f32	[func_retval0+40], %f5;
	st.param.f32	[func_retval0+44], %f6;
	st.param.f32	[func_retval0+48], %f7;
	st.param.f32	[func_retval0+52], %f8;
	ret;
}

	// .globl	stlr_compute_sub_pixel_pos
.visible .func  (.param .align 8 .b8 func_retval0[8]) stlr_compute_sub_pixel_pos(
	.param .b64 stlr_compute_sub_pixel_pos_param_0,
	.param .b32 stlr_compute_sub_pixel_pos_param_1
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<45>;
	.reg .s32 	%r<42>;
	.reg .s64 	%rd<7>;

	mov.u32 	%r38, 0;
	mov.f32 	%f39, 0f00000000;
	mov.f32 	%f37, 0f3F800000;
	ld.param.u32 	%r40, [stlr_compute_sub_pixel_pos_param_1];
	mov.f32 	%f38, %f37;
	mov.f32 	%f40, %f39;
	mov.u32 	%r39, %r38;
LBB2_1:
	shr.u32 	%r14, %r38, 31;
	add.s32 	%r15, %r38, %r14;
	and.b32  	%r16, %r15, -2;
	sub.s32 	%r17, %r38, %r16;
	mul.wide.s32 	%rd1, %r39, 1431655766;
	shr.u64 	%rd2, %rd1, 63;
	cvt.u32.u64	%r18, %rd2;
	shr.u64 	%rd3, %rd1, 32;
	cvt.u32.u64	%r19, %rd3;
	add.s32 	%r4, %r19, %r18;
	mul.lo.s32 	%r20, %r4, 3;
	sub.s32 	%r21, %r39, %r20;
	mul.ftz.f32 	%f38, %f38, 0f3EAAAAAB;
	mul.ftz.f32 	%f37, %f37, 0f3F000000;
	cvt.rn.f32.s32	%f21, %r21;
	cvt.rn.f32.s32	%f22, %r17;
	fma.rn.ftz.f32 	%f39, %f37, %f22, %f39;
	fma.rn.ftz.f32 	%f40, %f38, %f21, %f40;
	shr.s32 	%r38, %r15, 1;
	setp.gt.s32	%p1, %r4, 0;
	setp.gt.s32	%p2, %r38, 0;
	selp.b32	%r22, -1, 0, %p2;
	selp.b32	%r23, -1, 0, %p1;
	or.b32  	%r24, %r22, %r23;
	and.b32  	%r25, %r24, 1;
	setp.eq.b32	%p3, %r25, 1;
	mov.u32 	%r39, %r4;
	@%p3 bra 	LBB2_1;
	mov.f32 	%f43, 0f00000000;
	mov.f32 	%f41, 0f3F800000;
	mov.f32 	%f42, %f41;
	mov.f32 	%f44, %f43;
	mov.u32 	%r41, %r40;
LBB2_3:
	shr.u32 	%r26, %r40, 31;
	add.s32 	%r27, %r40, %r26;
	and.b32  	%r28, %r27, -2;
	sub.s32 	%r29, %r40, %r28;
	mul.wide.s32 	%rd4, %r41, 1431655766;
	shr.u64 	%rd5, %rd4, 63;
	cvt.u32.u64	%r30, %rd5;
	shr.u64 	%rd6, %rd4, 32;
	cvt.u32.u64	%r31, %rd6;
	add.s32 	%r10, %r31, %r30;
	mul.lo.s32 	%r32, %r10, 3;
	sub.s32 	%r33, %r41, %r32;
	mul.ftz.f32 	%f42, %f42, 0f3EAAAAAB;
	mul.ftz.f32 	%f41, %f41, 0f3F000000;
	cvt.rn.f32.s32	%f27, %r33;
	cvt.rn.f32.s32	%f28, %r29;
	fma.rn.ftz.f32 	%f43, %f41, %f28, %f43;
	fma.rn.ftz.f32 	%f44, %f42, %f27, %f44;
	shr.s32 	%r40, %r27, 1;
	setp.gt.s32	%p4, %r10, 0;
	setp.gt.s32	%p5, %r40, 0;
	selp.b32	%r34, -1, 0, %p5;
	selp.b32	%r35, -1, 0, %p4;
	or.b32  	%r36, %r34, %r35;
	and.b32  	%r37, %r36, 1;
	setp.eq.b32	%p6, %r37, 1;
	mov.u32 	%r41, %r10;
	@%p6 bra 	LBB2_3;
	add.ftz.f32 	%f29, %f43, 0f3F000000;
	add.ftz.f32 	%f30, %f44, 0f3F000000;
	sub.ftz.f32 	%f31, %f30, %f40;
	sub.ftz.f32 	%f32, %f29, %f39;
	cvt.rmi.ftz.f32.f32	%f33, %f32;
	cvt.rmi.ftz.f32.f32	%f34, %f31;
	sub.ftz.f32 	%f35, %f32, %f33;
	sub.ftz.f32 	%f36, %f31, %f34;
	st.param.v2.f32	[func_retval0+0], {%f35, %f36};
	ret;
}

	// .globl	stlr_camera_ilwerse
.visible .func  (.param .align 8 .b8 func_retval0[32]) stlr_camera_ilwerse(
	.param .b64 stlr_camera_ilwerse_param_0,
	.param .b32 stlr_camera_ilwerse_param_1,
	.param .align 16 .b8 stlr_camera_ilwerse_param_2[48],
	.param .align 16 .b8 stlr_camera_ilwerse_param_3[48]
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<94>;
	.reg .s32 	%r<11>;
	.reg .s64 	%rd<15>;

	ld.param.u64 	%rd1, [stlr_camera_ilwerse_param_0];
	ld.param.u32 	%r9, [stlr_camera_ilwerse_param_1];
	// inline asm
	mov.b64 {_,%r2}, %rd1;
	// inline asm
	ld.param.f32 	%f1, [stlr_camera_ilwerse_param_2+8];
	ld.param.f32 	%f2, [stlr_camera_ilwerse_param_2];
	ld.param.f32 	%f3, [stlr_camera_ilwerse_param_2+4];
	mov.u32 	%r7, 1;
	mov.u64 	%rd11, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_id_64, (%r2, %r7, %r7, %rd11, %rd11, %rd11, %rd11);
	// inline asm
	ld.param.f32 	%f4, [stlr_camera_ilwerse_param_3+40];
	ld.param.f32 	%f5, [stlr_camera_ilwerse_param_3+24];
	ld.param.f32 	%f6, [stlr_camera_ilwerse_param_3+8];
	ld.param.f32 	%f7, [stlr_camera_ilwerse_param_3+32];
	ld.param.f32 	%f8, [stlr_camera_ilwerse_param_3+16];
	ld.param.f32 	%f9, [stlr_camera_ilwerse_param_3];
	ld.param.f32 	%f10, [stlr_camera_ilwerse_param_3+36];
	ld.param.f32 	%f11, [stlr_camera_ilwerse_param_3+20];
	ld.param.f32 	%f12, [stlr_camera_ilwerse_param_3+4];
	ld.u64 	%rd7, [%rd2+528];
	mul.wide.s32 	%rd13, %r9, 192;
	// inline asm
	mov.b64 {_,%r6}, %rd7;
	// inline asm
	// inline asm
	call (%rd8), _rt_buffer_get_id_64, (%r6, %r7, %r7, %rd11, %rd11, %rd11, %rd11);
	// inline asm
	add.s64 	%rd14, %rd8, %rd13;
	ld.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd14+592];
	ld.v4.f32 	{%f17, %f18, %f19, %f20}, [%rd14+608];
	mul.ftz.f32 	%f21, %f3, %f19;
	fma.rn.ftz.f32 	%f22, %f2, %f15, %f21;
	ld.v4.f32 	{%f23, %f24, %f25, %f26}, [%rd14+624];
	fma.rn.ftz.f32 	%f27, %f1, %f25, %f22;
	ld.v4.f32 	{%f28, %f29, %f30, %f31}, [%rd14+640];
	add.ftz.f32 	%f32, %f30, %f27;
	mul.ftz.f32 	%f33, %f12, %f17;
	mul.ftz.f32 	%f34, %f12, %f18;
	mul.ftz.f32 	%f35, %f12, %f19;
	mul.ftz.f32 	%f36, %f11, %f17;
	mul.ftz.f32 	%f37, %f11, %f18;
	mul.ftz.f32 	%f38, %f11, %f19;
	mul.ftz.f32 	%f39, %f10, %f17;
	mul.ftz.f32 	%f40, %f10, %f18;
	mul.ftz.f32 	%f41, %f10, %f19;
	fma.rn.ftz.f32 	%f42, %f9, %f15, %f35;
	fma.rn.ftz.f32 	%f43, %f9, %f14, %f34;
	fma.rn.ftz.f32 	%f44, %f9, %f13, %f33;
	fma.rn.ftz.f32 	%f45, %f8, %f15, %f38;
	fma.rn.ftz.f32 	%f46, %f8, %f14, %f37;
	fma.rn.ftz.f32 	%f47, %f8, %f13, %f36;
	fma.rn.ftz.f32 	%f48, %f7, %f15, %f41;
	fma.rn.ftz.f32 	%f49, %f7, %f14, %f40;
	fma.rn.ftz.f32 	%f50, %f7, %f13, %f39;
	fma.rn.ftz.f32 	%f51, %f6, %f23, %f44;
	fma.rn.ftz.f32 	%f52, %f6, %f24, %f43;
	fma.rn.ftz.f32 	%f53, %f6, %f25, %f42;
	fma.rn.ftz.f32 	%f54, %f5, %f23, %f47;
	fma.rn.ftz.f32 	%f55, %f5, %f24, %f46;
	fma.rn.ftz.f32 	%f56, %f5, %f25, %f45;
	fma.rn.ftz.f32 	%f57, %f4, %f23, %f50;
	fma.rn.ftz.f32 	%f58, %f4, %f24, %f49;
	fma.rn.ftz.f32 	%f59, %f4, %f25, %f48;
	ld.f32 	%f60, [%rd14+656];
	neg.ftz.f32 	%f61, %f53;
	div.approx.ftz.f32 	%f62, %f60, %f61;
	mul.ftz.f32 	%f63, %f56, %f60;
	mul.ftz.f32 	%f64, %f53, %f53;
	div.approx.ftz.f32 	%f65, %f63, %f64;
	mul.ftz.f32 	%f66, %f59, %f60;
	div.approx.ftz.f32 	%f67, %f66, %f64;
	mul.ftz.f32 	%f68, %f52, %f62;
	mul.ftz.f32 	%f69, %f51, %f62;
	mul.ftz.f32 	%f70, %f51, %f65;
	mul.ftz.f32 	%f71, %f52, %f65;
	fma.rn.ftz.f32 	%f72, %f55, %f62, %f71;
	fma.rn.ftz.f32 	%f73, %f54, %f62, %f70;
	mul.ftz.f32 	%f74, %f51, %f67;
	mul.ftz.f32 	%f75, %f52, %f67;
	fma.rn.ftz.f32 	%f76, %f58, %f62, %f75;
	fma.rn.ftz.f32 	%f77, %f57, %f62, %f74;
	ld.v2.f32 	{%f78, %f79}, [%rd14+680];
	div.approx.ftz.f32 	%f80, %f69, %f78;
	div.approx.ftz.f32 	%f81, %f68, %f79;
	mul.ftz.f32 	%f82, %f78, %f73;
	mul.ftz.f32 	%f83, %f79, %f72;
	mul.ftz.f32 	%f84, %f78, %f78;
	mul.ftz.f32 	%f85, %f79, %f79;
	div.approx.ftz.f32 	%f86, %f83, %f85;
	div.approx.ftz.f32 	%f87, %f82, %f84;
	mul.ftz.f32 	%f88, %f78, %f77;
	mul.ftz.f32 	%f89, %f79, %f76;
	div.approx.ftz.f32 	%f90, %f89, %f85;
	div.approx.ftz.f32 	%f91, %f88, %f84;
	add.ftz.f32 	%f92, %f81, 0f3F000000;
	add.ftz.f32 	%f93, %f80, 0f3F000000;
	setp.lt.ftz.f32	%p1, %f32, 0f00000000;
	selp.b32	%r10, -1, 0, %p1;
	st.param.f32	[func_retval0+0], %f93;
	st.param.f32	[func_retval0+4], %f92;
	st.param.f32	[func_retval0+8], %f87;
	st.param.f32	[func_retval0+12], %f86;
	st.param.f32	[func_retval0+16], %f91;
	st.param.f32	[func_retval0+20], %f90;
	st.param.b32	[func_retval0+24], %r10;
	ret;
}


