//
// Generated by LWPU LWVM Compiler
//
// Compiler Build ID: CL-19324607
// Lwca compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_35
.address_size 64

	// .weak	lwdaMalloc
.global .align 4 .b8 geoPropertiesProc[4];
.global .align 4 .b8 ray[36];
.global .align 4 .u32 bump_type__;
.global .align 4 .f32 bump_const__;
.global .align 4 .u32 bump_texid__;
.global .align 4 .b8 bump_proc__[4];
.global .align 1 .b8 triangles[1];
.global .align 1 .b8 vertices_p[1];
.global .align 1 .b8 vertexNormals[1];
.global .align 1 .b8 ptexUVs[1];
.global .align 4 .u32 offset;
.global .align 4 .f32 bumpStrength;
.global .align 4 .f32 delta;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo17geoPropertiesProcE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11bump_type__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12bump_const__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12bump_texid__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11bump_proc__E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6offsetE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12bumpStrengthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5deltaE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17geoPropertiesProcE[20] = {71, 101, 111, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 80, 114, 111, 99, 73, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11bump_type__E[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12bump_const__E[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12bump_texid__E[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11bump_proc__E[20] = {98, 117, 109, 112, 95, 99, 97, 108, 108, 97, 98, 108, 101, 84, 121, 112, 101, 95, 95, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6offsetE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12bumpStrengthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5deltaE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum17geoPropertiesProcE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11bump_type__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12bump_const__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12bump_texid__E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11bump_proc__E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum6offsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12bumpStrengthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5deltaE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11bump_type__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12bump_const__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12bump_texid__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11bump_proc__E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6offsetE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12bumpStrengthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5deltaE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11bump_type__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12bump_const__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12bump_texid__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11bump_proc__E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6offsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12bumpStrengthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5deltaE[1];

.weak .func  (.param .b32 func_retval0) lwdaMalloc(
	.param .b64 lwdaMalloc_param_0,
	.param .b64 lwdaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) lwdaFuncGetAttributes(
	.param .b64 lwdaFuncGetAttributes_param_0,
	.param .b64 lwdaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) lwdaDeviceGetAttribute(
	.param .b64 lwdaDeviceGetAttribute_param_0,
	.param .b32 lwdaDeviceGetAttribute_param_1,
	.param .b32 lwdaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaGetDevice
.weak .func  (.param .b32 func_retval0) lwdaGetDevice(
	.param .b64 lwdaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z22IndexOfMinAbsComponent6float3
.visible .func  (.param .b32 func_retval0) _Z22IndexOfMinAbsComponent6float3(
	.param .align 4 .b8 _Z22IndexOfMinAbsComponent6float3_param_0[12]
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<7>;
	.reg .s32 	%r<5>;


	ld.param.f32 	%f3, [_Z22IndexOfMinAbsComponent6float3_param_0+8];
	ld.param.f32 	%f4, [_Z22IndexOfMinAbsComponent6float3_param_0+4];
	ld.param.f32 	%f5, [_Z22IndexOfMinAbsComponent6float3_param_0];
	abs.ftz.f32 	%f6, %f5;
	abs.ftz.f32 	%f1, %f4;
	abs.ftz.f32 	%f2, %f3;
	setp.le.ftz.f32	%p1, %f6, %f2;
	setp.le.ftz.f32	%p2, %f6, %f1;
	and.pred  	%p3, %p2, %p1;
	mov.u32 	%r4, 0;
	@%p3 bra 	BB6_2;

	setp.gtu.ftz.f32	%p4, %f1, %f2;
	selp.b32	%r4, 2, 1, %p4;

BB6_2:
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

	// .globl	_Z19PerpendilwlarVector6float3
.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z19PerpendilwlarVector6float3(
	.param .align 4 .b8 _Z19PerpendilwlarVector6float3_param_0[12]
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<23>;
	.reg .s32 	%r<5>;


	ld.param.f32 	%f4, [_Z19PerpendilwlarVector6float3_param_0+8];
	ld.param.f32 	%f2, [_Z19PerpendilwlarVector6float3_param_0+4];
	ld.param.f32 	%f1, [_Z19PerpendilwlarVector6float3_param_0];
	abs.ftz.f32 	%f19, %f1;
	abs.ftz.f32 	%f3, %f2;
	abs.ftz.f32 	%f5, %f4;
	setp.le.ftz.f32	%p1, %f19, %f5;
	setp.le.ftz.f32	%p2, %f19, %f3;
	and.pred  	%p3, %p2, %p1;
	mov.u32 	%r4, 0;
	@%p3 bra 	BB7_2;

	setp.gtu.ftz.f32	%p4, %f3, %f5;
	selp.b32	%r4, 2, 1, %p4;

BB7_2:
	neg.ftz.f32 	%f6, %f1;
	setp.eq.s32	%p5, %r4, 0;
	@%p5 bra 	BB7_5;
	bra.uni 	BB7_3;

BB7_5:
	neg.ftz.f32 	%f22, %f2;
	mov.f32 	%f21, %f4;
	mov.f32 	%f20, 0f00000000;
	bra.uni 	BB7_7;

BB7_3:
	setp.ne.s32	%p6, %r4, 1;
	@%p6 bra 	BB7_6;

	mov.f32 	%f22, %f6;
	mov.f32 	%f21, 0f00000000;
	mov.f32 	%f20, %f4;
	bra.uni 	BB7_7;

BB7_6:
	mov.f32 	%f22, 0f00000000;
	mov.f32 	%f21, %f6;
	mov.f32 	%f20, %f2;

BB7_7:
	st.param.f32	[func_retval0+0], %f20;
	st.param.f32	[func_retval0+4], %f21;
	st.param.f32	[func_retval0+8], %f22;
	ret;
}

	// .globl	_Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.local .align 16 .b8 	__local_depot8[288];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<362>;
	.reg .s32 	%r<54>;
	.reg .s64 	%rd<85>;


	mov.u64 	%rd84, __local_depot8;
	cvta.local.u64 	%SP, %rd84;
	ld.param.u64 	%rd1, [_Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd2, [_Z19bumpToNormalTextureRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r6, [bump_type__];
	setp.eq.s32	%p1, %r6, 0;
	@%p1 bra 	BB8_27;

	ld.s32 	%rd5, [%rd1+40];
	mov.u64 	%rd63, triangles;
	cvta.global.u64 	%rd4, %rd63;
	mov.u32 	%r25, 1;
	mov.u32 	%r20, 12;
	mov.u64 	%rd62, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r25, %r20, %rd5, %rd62, %rd62, %rd62);
	// inline asm
	ld.u32 	%rd29, [%rd3];
	mov.u64 	%rd64, vertices_p;
	cvta.global.u64 	%rd10, %rd64;
	ld.u32 	%rd35, [%rd3+4];
	ld.u32 	%rd41, [%rd3+8];
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r25, %r20, %rd29, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f1, [%rd9];
	ld.f32 	%f2, [%rd9+4];
	ld.f32 	%f3, [%rd9+8];
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd10, %r25, %r20, %rd35, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f4, [%rd15];
	ld.f32 	%f5, [%rd15+4];
	ld.f32 	%f6, [%rd15+8];
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd10, %r25, %r20, %rd41, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f7, [%rd21];
	ld.f32 	%f8, [%rd21+4];
	ld.f32 	%f9, [%rd21+8];
	mov.u64 	%rd65, vertexNormals;
	cvta.global.u64 	%rd28, %rd65;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r25, %r20, %rd29, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f12, [%rd27+8];
	ld.f32 	%f11, [%rd27+4];
	ld.f32 	%f10, [%rd27];
	// inline asm
	call (%rd33), _rt_buffer_get_64, (%rd28, %r25, %r20, %rd35, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f15, [%rd33+8];
	ld.f32 	%f14, [%rd33+4];
	ld.f32 	%f13, [%rd33];
	// inline asm
	call (%rd39), _rt_buffer_get_64, (%rd28, %r25, %r20, %rd41, %rd62, %rd62, %rd62);
	// inline asm
	ld.f32 	%f18, [%rd39+8];
	ld.f32 	%f17, [%rd39+4];
	ld.f32 	%f16, [%rd39];
	ld.u32 	%r28, [%rd1+40];
	ld.global.u32 	%r29, [offset];
	mad.lo.s32 	%r30, %r28, 3, %r29;
	cvt.s64.s32	%rd47, %r30;
	mov.u64 	%rd66, ptexUVs;
	cvta.global.u64 	%rd46, %rd66;
	mov.u32 	%r26, 8;
	// inline asm
	call (%rd45), _rt_buffer_get_64, (%rd46, %r25, %r26, %rd47, %rd62, %rd62, %rd62);
	// inline asm
	ld.v2.f32 	{%f117, %f118}, [%rd45];
	add.s32 	%r31, %r30, 1;
	cvt.s64.s32	%rd53, %r31;
	// inline asm
	call (%rd51), _rt_buffer_get_64, (%rd46, %r25, %r26, %rd53, %rd62, %rd62, %rd62);
	// inline asm
	ld.v2.f32 	{%f119, %f120}, [%rd51];
	add.s32 	%r32, %r30, 2;
	cvt.s64.s32	%rd59, %r32;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd46, %r25, %r26, %rd59, %rd62, %rd62, %rd62);
	// inline asm
	ld.v2.f32 	{%f121, %f122}, [%rd57];
	ld.f32 	%f123, [%rd1+20];
	ld.f32 	%f124, [%rd1+12];
	ld.f32 	%f125, [%rd1+16];
	mul.ftz.f32 	%f126, %f125, %f125;
	fma.rn.ftz.f32 	%f127, %f124, %f124, %f126;
	fma.rn.ftz.f32 	%f128, %f123, %f123, %f127;
	sqrt.approx.ftz.f32 	%f129, %f128;
	rcp.approx.ftz.f32 	%f130, %f129;
	mul.ftz.f32 	%f25, %f124, %f130;
	mul.ftz.f32 	%f26, %f125, %f130;
	mul.ftz.f32 	%f27, %f123, %f130;
	abs.ftz.f32 	%f131, %f25;
	abs.ftz.f32 	%f28, %f26;
	abs.ftz.f32 	%f29, %f27;
	setp.le.ftz.f32	%p2, %f131, %f29;
	setp.le.ftz.f32	%p3, %f131, %f28;
	and.pred  	%p4, %p3, %p2;
	mov.u32 	%r53, 0;
	@%p4 bra 	BB8_3;

	setp.gtu.ftz.f32	%p5, %f28, %f29;
	selp.b32	%r53, 2, 1, %p5;

BB8_3:
	neg.ftz.f32 	%f30, %f25;
	setp.eq.s32	%p6, %r53, 0;
	@%p6 bra 	BB8_6;
	bra.uni 	BB8_4;

BB8_6:
	neg.ftz.f32 	%f352, %f26;
	mov.f32 	%f351, %f27;
	mov.f32 	%f350, 0f00000000;
	bra.uni 	BB8_8;

BB8_27:
	ld.f32 	%f359, [%rd1+12];
	ld.f32 	%f360, [%rd1+16];
	ld.f32 	%f361, [%rd1+20];
	bra.uni 	BB8_28;

BB8_4:
	setp.ne.s32	%p7, %r53, 1;
	@%p7 bra 	BB8_7;

	mov.f32 	%f352, %f30;
	mov.f32 	%f351, 0f00000000;
	mov.f32 	%f350, %f27;
	bra.uni 	BB8_8;

BB8_7:
	mov.f32 	%f352, 0f00000000;
	mov.f32 	%f351, %f30;
	mov.f32 	%f350, %f26;

BB8_8:
	mul.ftz.f32 	%f132, %f351, %f351;
	fma.rn.ftz.f32 	%f133, %f350, %f350, %f132;
	fma.rn.ftz.f32 	%f134, %f352, %f352, %f133;
	sqrt.approx.ftz.f32 	%f135, %f134;
	rcp.approx.ftz.f32 	%f136, %f135;
	mul.ftz.f32 	%f43, %f350, %f136;
	mul.ftz.f32 	%f44, %f351, %f136;
	mul.ftz.f32 	%f45, %f352, %f136;
	mul.ftz.f32 	%f137, %f26, %f45;
	mul.ftz.f32 	%f138, %f27, %f44;
	sub.ftz.f32 	%f46, %f137, %f138;
	mul.ftz.f32 	%f139, %f27, %f43;
	mul.ftz.f32 	%f140, %f25, %f45;
	sub.ftz.f32 	%f47, %f139, %f140;
	mul.ftz.f32 	%f141, %f25, %f44;
	mul.ftz.f32 	%f142, %f26, %f43;
	sub.ftz.f32 	%f48, %f141, %f142;
	ld.global.u32 	%r3, [bump_type__];
	setp.eq.s32	%p8, %r3, 0;
	@%p8 bra 	BB8_12;

	setp.eq.s32	%p9, %r3, 1;
	@%p9 bra 	BB8_11;
	bra.uni 	BB8_10;

BB8_11:
	ld.global.u32 	%r34, [bump_texid__];
	ld.v2.f32 	{%f151, %f152}, [%rd1+24];
	mov.u32 	%r35, 2;
	mov.f32 	%f150, 0f00000000;
	// inline asm
	call (%f143, %f144, %f145, %f146), _rt_texture_get_f_id, (%r34, %r35, %f151, %f152, %f150, %f150);
	// inline asm
	mov.f32 	%f353, %f143;
	bra.uni 	BB8_13;

BB8_12:
	ld.global.f32 	%f353, [bump_const__];
	bra.uni 	BB8_13;

BB8_10:
	ld.global.u32 	%r33, [bump_proc__];
	// inline asm
	call (%rd67), _rt_callable_program_from_id_64, (%r33);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd67, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.f32	%f353, [retval0+0];
	
	//{
	}// Callseq End 0

BB8_13:
	add.u64 	%rd68, %SP, 48;
	cvta.to.local.u64 	%rd69, %rd68;
	add.u64 	%rd70, %SP, 144;
	cvta.to.local.u64 	%rd71, %rd70;
	ld.global.f32 	%f53, [delta];
	mov.u32 	%r36, 0;
	st.local.v2.u32 	[%rd69], {%r36, %r36};
	ld.v2.f32 	{%f153, %f154}, [%rd1];
	ld.v2.f32 	{%f155, %f156}, [%rd1+8];
	ld.v2.f32 	{%f157, %f158}, [%rd1+16];
	ld.v2.f32 	{%f159, %f160}, [%rd1+24];
	ld.v2.f32 	{%f161, %f162}, [%rd1+32];
	ld.v2.u32 	{%r37, %r38}, [%rd1+40];
	st.local.v2.u32 	[%rd71+40], {%r37, %r38};
	st.local.v2.f32 	[%rd71+32], {%f161, %f162};
	st.local.v2.f32 	[%rd71+24], {%f159, %f160};
	st.local.v2.f32 	[%rd71+16], {%f157, %f158};
	st.local.v2.f32 	[%rd71+8], {%f155, %f156};
	st.local.v2.f32 	[%rd71], {%f153, %f154};
	ld.local.v2.f32 	{%f173, %f174}, [%rd71];
	fma.rn.ftz.f32 	%f176, %f44, %f53, %f174;
	fma.rn.ftz.f32 	%f178, %f43, %f53, %f173;
	ld.local.f32 	%f179, [%rd71+8];
	st.local.v2.f32 	[%rd71], {%f178, %f176};
	fma.rn.ftz.f32 	%f180, %f45, %f53, %f179;
	neg.ftz.f32 	%f181, %f180;
	sub.ftz.f32 	%f182, %f178, %f1;
	sub.ftz.f32 	%f183, %f181, %f2;
	sub.ftz.f32 	%f184, %f176, %f3;
	sub.ftz.f32 	%f54, %f4, %f1;
	sub.ftz.f32 	%f55, %f5, %f2;
	mul.ftz.f32 	%f185, %f55, %f55;
	fma.rn.ftz.f32 	%f186, %f54, %f54, %f185;
	sub.ftz.f32 	%f56, %f6, %f3;
	fma.rn.ftz.f32 	%f57, %f56, %f56, %f186;
	sub.ftz.f32 	%f58, %f7, %f1;
	sub.ftz.f32 	%f59, %f8, %f2;
	mul.ftz.f32 	%f187, %f55, %f59;
	fma.rn.ftz.f32 	%f188, %f54, %f58, %f187;
	sub.ftz.f32 	%f60, %f9, %f3;
	fma.rn.ftz.f32 	%f61, %f56, %f60, %f188;
	mul.ftz.f32 	%f189, %f59, %f59;
	fma.rn.ftz.f32 	%f190, %f58, %f58, %f189;
	fma.rn.ftz.f32 	%f62, %f60, %f60, %f190;
	mul.ftz.f32 	%f191, %f55, %f183;
	fma.rn.ftz.f32 	%f192, %f54, %f182, %f191;
	fma.rn.ftz.f32 	%f193, %f56, %f184, %f192;
	mul.ftz.f32 	%f194, %f59, %f183;
	fma.rn.ftz.f32 	%f195, %f58, %f182, %f194;
	fma.rn.ftz.f32 	%f196, %f60, %f184, %f195;
	mul.ftz.f32 	%f197, %f57, %f62;
	mul.ftz.f32 	%f198, %f61, %f61;
	sub.ftz.f32 	%f199, %f197, %f198;
	rcp.approx.ftz.f32 	%f63, %f199;
	mul.ftz.f32 	%f200, %f62, %f193;
	mul.ftz.f32 	%f201, %f61, %f196;
	sub.ftz.f32 	%f202, %f200, %f201;
	mul.ftz.f32 	%f203, %f57, %f196;
	mul.ftz.f32 	%f204, %f61, %f193;
	sub.ftz.f32 	%f205, %f203, %f204;
	mul.ftz.f32 	%f206, %f63, %f205;
	mul.ftz.f32 	%f207, %f63, %f202;
	mov.f32 	%f208, 0f3F800000;
	sub.ftz.f32 	%f209, %f208, %f207;
	sub.ftz.f32 	%f210, %f209, %f206;
	mul.ftz.f32 	%f211, %f10, %f210;
	fma.rn.ftz.f32 	%f212, %f13, %f207, %f211;
	fma.rn.ftz.f32 	%f213, %f16, %f206, %f212;
	st.local.v2.f32 	[%rd71+8], {%f180, %f213};
	st.local.f32 	[%rd71+36], %f206;
	st.local.f32 	[%rd71+32], %f207;
	mul.ftz.f32 	%f214, %f11, %f210;
	mul.ftz.f32 	%f215, %f12, %f210;
	fma.rn.ftz.f32 	%f216, %f14, %f207, %f214;
	fma.rn.ftz.f32 	%f217, %f15, %f207, %f215;
	fma.rn.ftz.f32 	%f218, %f17, %f206, %f216;
	fma.rn.ftz.f32 	%f219, %f18, %f206, %f217;
	neg.ftz.f32 	%f220, %f218;
	st.local.f32 	[%rd71+20], %f220;
	mul.ftz.f32 	%f221, %f117, %f210;
	mul.ftz.f32 	%f222, %f118, %f210;
	fma.rn.ftz.f32 	%f223, %f119, %f207, %f221;
	fma.rn.ftz.f32 	%f224, %f120, %f207, %f222;
	fma.rn.ftz.f32 	%f79, %f121, %f206, %f223;
	fma.rn.ftz.f32 	%f80, %f122, %f206, %f224;
	st.local.f32 	[%rd71+28], %f80;
	st.local.f32 	[%rd71+24], %f79;
	st.local.f32 	[%rd71+16], %f219;
	ld.global.u32 	%r4, [bump_type__];
	setp.eq.s32	%p10, %r4, 0;
	@%p10 bra 	BB8_17;

	setp.eq.s32	%p11, %r4, 1;
	@%p11 bra 	BB8_16;
	bra.uni 	BB8_15;

BB8_16:
	ld.global.u32 	%r42, [bump_texid__];
	mov.u32 	%r43, 2;
	mov.f32 	%f232, 0f00000000;
	// inline asm
	call (%f225, %f226, %f227, %f228), _rt_texture_get_f_id, (%r42, %r43, %f79, %f80, %f232, %f232);
	// inline asm
	mov.f32 	%f354, %f225;
	bra.uni 	BB8_18;

BB8_17:
	ld.global.f32 	%f354, [bump_const__];
	bra.uni 	BB8_18;

BB8_15:
	add.u64 	%rd83, %SP, 48;
	add.u64 	%rd82, %SP, 144;
	ld.global.u32 	%r41, [bump_proc__];
	// inline asm
	call (%rd72), _rt_callable_program_from_id_64, (%r41);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd83;
	.param .b32 retval0;
	prototype_1 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd72, 
	(
	param0, 
	param1
	)
	, prototype_1;
	ld.param.f32	%f354, [retval0+0];
	
	//{
	}// Callseq End 1

BB8_18:
	mov.u32 	%r52, 0;
	add.u64 	%rd75, %SP, 192;
	cvta.to.local.u64 	%rd76, %rd75;
	add.u64 	%rd77, %SP, 0;
	cvta.to.local.u64 	%rd78, %rd77;
	ld.global.f32 	%f85, [delta];
	st.local.v2.u32 	[%rd76], {%r52, %r52};
	ld.v2.f32 	{%f233, %f234}, [%rd1];
	ld.v2.f32 	{%f235, %f236}, [%rd1+8];
	ld.v2.f32 	{%f237, %f238}, [%rd1+16];
	ld.v2.f32 	{%f239, %f240}, [%rd1+24];
	ld.v2.f32 	{%f241, %f242}, [%rd1+32];
	ld.v2.u32 	{%r45, %r46}, [%rd1+40];
	st.local.v2.u32 	[%rd78+40], {%r45, %r46};
	st.local.v2.f32 	[%rd78+32], {%f241, %f242};
	st.local.v2.f32 	[%rd78+24], {%f239, %f240};
	st.local.v2.f32 	[%rd78+16], {%f237, %f238};
	st.local.v2.f32 	[%rd78+8], {%f235, %f236};
	st.local.v2.f32 	[%rd78], {%f233, %f234};
	ld.local.v2.f32 	{%f253, %f254}, [%rd78];
	fma.rn.ftz.f32 	%f256, %f47, %f85, %f254;
	fma.rn.ftz.f32 	%f258, %f46, %f85, %f253;
	ld.local.f32 	%f259, [%rd78+8];
	st.local.v2.f32 	[%rd78], {%f258, %f256};
	fma.rn.ftz.f32 	%f260, %f48, %f85, %f259;
	neg.ftz.f32 	%f261, %f260;
	sub.ftz.f32 	%f262, %f258, %f1;
	sub.ftz.f32 	%f263, %f261, %f2;
	sub.ftz.f32 	%f264, %f256, %f3;
	mul.ftz.f32 	%f265, %f55, %f263;
	fma.rn.ftz.f32 	%f266, %f54, %f262, %f265;
	fma.rn.ftz.f32 	%f267, %f56, %f264, %f266;
	mul.ftz.f32 	%f268, %f59, %f263;
	fma.rn.ftz.f32 	%f269, %f58, %f262, %f268;
	fma.rn.ftz.f32 	%f270, %f60, %f264, %f269;
	mul.ftz.f32 	%f271, %f62, %f267;
	mul.ftz.f32 	%f272, %f61, %f270;
	sub.ftz.f32 	%f273, %f271, %f272;
	mul.ftz.f32 	%f274, %f57, %f270;
	mul.ftz.f32 	%f275, %f61, %f267;
	sub.ftz.f32 	%f276, %f274, %f275;
	mul.ftz.f32 	%f277, %f63, %f276;
	mul.ftz.f32 	%f278, %f63, %f273;
	sub.ftz.f32 	%f280, %f208, %f278;
	sub.ftz.f32 	%f281, %f280, %f277;
	mul.ftz.f32 	%f282, %f10, %f281;
	fma.rn.ftz.f32 	%f283, %f13, %f278, %f282;
	fma.rn.ftz.f32 	%f284, %f16, %f277, %f283;
	st.local.v2.f32 	[%rd78+8], {%f260, %f284};
	st.local.f32 	[%rd78+36], %f277;
	st.local.f32 	[%rd78+32], %f278;
	mul.ftz.f32 	%f285, %f11, %f281;
	mul.ftz.f32 	%f286, %f12, %f281;
	fma.rn.ftz.f32 	%f287, %f14, %f278, %f285;
	fma.rn.ftz.f32 	%f288, %f15, %f278, %f286;
	fma.rn.ftz.f32 	%f289, %f17, %f277, %f287;
	fma.rn.ftz.f32 	%f290, %f18, %f277, %f288;
	neg.ftz.f32 	%f291, %f289;
	st.local.f32 	[%rd78+20], %f291;
	mul.ftz.f32 	%f292, %f117, %f281;
	mul.ftz.f32 	%f293, %f118, %f281;
	fma.rn.ftz.f32 	%f294, %f119, %f278, %f292;
	fma.rn.ftz.f32 	%f295, %f120, %f278, %f293;
	fma.rn.ftz.f32 	%f86, %f121, %f277, %f294;
	fma.rn.ftz.f32 	%f87, %f122, %f277, %f295;
	st.local.f32 	[%rd78+28], %f87;
	st.local.f32 	[%rd78+24], %f86;
	st.local.f32 	[%rd78+16], %f290;
	ld.global.u32 	%r5, [bump_type__];
	setp.eq.s32	%p12, %r5, 0;
	@%p12 bra 	BB8_22;

	setp.eq.s32	%p13, %r5, 1;
	@%p13 bra 	BB8_21;
	bra.uni 	BB8_20;

BB8_21:
	ld.global.u32 	%r50, [bump_texid__];
	mov.u32 	%r51, 2;
	mov.f32 	%f303, 0f00000000;
	// inline asm
	call (%f296, %f297, %f298, %f299), _rt_texture_get_f_id, (%r50, %r51, %f86, %f87, %f303, %f303);
	// inline asm
	mov.f32 	%f355, %f296;
	bra.uni 	BB8_23;

BB8_22:
	ld.global.f32 	%f355, [bump_const__];
	bra.uni 	BB8_23;

BB8_20:
	ld.global.u32 	%r49, [bump_proc__];
	// inline asm
	call (%rd79), _rt_callable_program_from_id_64, (%r49);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd75;
	.param .b32 retval0;
	prototype_2 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd79, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.f32	%f355, [retval0+0];
	
	//{
	}// Callseq End 2

BB8_23:
	sub.ftz.f32 	%f304, %f354, %f353;
	ld.global.f32 	%f305, [bumpStrength];
	mul.ftz.f32 	%f306, %f304, %f305;
	neg.ftz.f32 	%f307, %f306;
	div.approx.ftz.f32 	%f308, %f307, %f53;
	sub.ftz.f32 	%f309, %f355, %f353;
	mul.ftz.f32 	%f310, %f309, %f305;
	neg.ftz.f32 	%f311, %f310;
	div.approx.ftz.f32 	%f312, %f311, %f85;
	ld.f32 	%f313, [%rd1+12];
	fma.rn.ftz.f32 	%f314, %f43, %f308, %f313;
	ld.f32 	%f315, [%rd1+16];
	fma.rn.ftz.f32 	%f316, %f44, %f308, %f315;
	ld.f32 	%f317, [%rd1+20];
	fma.rn.ftz.f32 	%f318, %f45, %f308, %f317;
	fma.rn.ftz.f32 	%f319, %f46, %f312, %f314;
	fma.rn.ftz.f32 	%f320, %f47, %f312, %f316;
	fma.rn.ftz.f32 	%f321, %f48, %f312, %f318;
	mul.ftz.f32 	%f322, %f320, %f320;
	fma.rn.ftz.f32 	%f323, %f319, %f319, %f322;
	fma.rn.ftz.f32 	%f324, %f321, %f321, %f323;
	sqrt.approx.ftz.f32 	%f325, %f324;
	rcp.approx.ftz.f32 	%f326, %f325;
	mul.ftz.f32 	%f356, %f319, %f326;
	mul.ftz.f32 	%f357, %f320, %f326;
	mul.ftz.f32 	%f358, %f321, %f326;
	ld.global.f32 	%f327, [ray+12];
	neg.ftz.f32 	%f95, %f327;
	ld.global.f32 	%f328, [ray+16];
	neg.ftz.f32 	%f96, %f328;
	ld.global.f32 	%f329, [ray+20];
	neg.ftz.f32 	%f97, %f329;
	mul.ftz.f32 	%f330, %f313, %f95;
	mul.ftz.f32 	%f331, %f315, %f328;
	sub.ftz.f32 	%f332, %f330, %f331;
	mul.ftz.f32 	%f333, %f317, %f329;
	sub.ftz.f32 	%f334, %f332, %f333;
	setp.ltu.ftz.f32	%p14, %f334, 0f00000000;
	@%p14 bra 	BB8_26;

	mul.ftz.f32 	%f335, %f357, %f96;
	fma.rn.ftz.f32 	%f336, %f356, %f95, %f335;
	fma.rn.ftz.f32 	%f98, %f358, %f97, %f336;
	setp.gtu.ftz.f32	%p15, %f98, 0f00000000;
	@%p15 bra 	BB8_26;

	mul.ftz.f32 	%f337, %f98, 0f3F8147AE;
	mul.ftz.f32 	%f338, %f337, %f95;
	mul.ftz.f32 	%f339, %f337, %f96;
	mul.ftz.f32 	%f340, %f337, %f97;
	sub.ftz.f32 	%f341, %f356, %f338;
	sub.ftz.f32 	%f342, %f357, %f339;
	sub.ftz.f32 	%f343, %f358, %f340;
	mul.ftz.f32 	%f344, %f342, %f342;
	fma.rn.ftz.f32 	%f345, %f341, %f341, %f344;
	fma.rn.ftz.f32 	%f346, %f343, %f343, %f345;
	sqrt.approx.ftz.f32 	%f347, %f346;
	rcp.approx.ftz.f32 	%f348, %f347;
	mul.ftz.f32 	%f356, %f341, %f348;
	mul.ftz.f32 	%f357, %f342, %f348;
	mul.ftz.f32 	%f358, %f343, %f348;

BB8_26:
	mov.f32 	%f361, %f358;
	mov.f32 	%f360, %f357;
	mov.f32 	%f359, %f356;

BB8_28:
	st.param.f32	[func_retval0+0], %f359;
	st.param.f32	[func_retval0+4], %f360;
	st.param.f32	[func_retval0+8], %f361;
	mov.f32 	%f349, 0f00000000;
	st.param.f32	[func_retval0+12], %f349;
	ret;
}

	// .globl	_ZN5optix19rt_texture_get_f_idEiiffff
.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5
)
{
	.reg .f32 	%f<9>;
	.reg .s32 	%r<3>;


	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];
	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	ret;
}

	// .globl	_Z11barycentricI6float3ET_ffS1_S1_S1_
.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z11barycentricI6float3ET_ffS1_S1_S1_(
	.param .b32 _Z11barycentricI6float3ET_ffS1_S1_S1__param_0,
	.param .b32 _Z11barycentricI6float3ET_ffS1_S1_S1__param_1,
	.param .align 4 .b8 _Z11barycentricI6float3ET_ffS1_S1_S1__param_2[12],
	.param .align 4 .b8 _Z11barycentricI6float3ET_ffS1_S1_S1__param_3[12],
	.param .align 4 .b8 _Z11barycentricI6float3ET_ffS1_S1_S1__param_4[12]
)
{
	.reg .f32 	%f<24>;


	ld.param.f32 	%f1, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_0];
	ld.param.f32 	%f2, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_1];
	ld.param.f32 	%f3, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_2+8];
	ld.param.f32 	%f4, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_2+4];
	ld.param.f32 	%f5, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_2];
	ld.param.f32 	%f6, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_3+8];
	ld.param.f32 	%f7, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_3+4];
	ld.param.f32 	%f8, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_3];
	ld.param.f32 	%f9, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_4+8];
	ld.param.f32 	%f10, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_4+4];
	ld.param.f32 	%f11, [_Z11barycentricI6float3ET_ffS1_S1_S1__param_4];
	mov.f32 	%f12, 0f3F800000;
	sub.ftz.f32 	%f13, %f12, %f1;
	sub.ftz.f32 	%f14, %f13, %f2;
	mul.ftz.f32 	%f15, %f8, %f1;
	mul.ftz.f32 	%f16, %f7, %f1;
	mul.ftz.f32 	%f17, %f6, %f1;
	fma.rn.ftz.f32 	%f18, %f14, %f5, %f15;
	fma.rn.ftz.f32 	%f19, %f14, %f4, %f16;
	fma.rn.ftz.f32 	%f20, %f14, %f3, %f17;
	fma.rn.ftz.f32 	%f21, %f11, %f2, %f18;
	fma.rn.ftz.f32 	%f22, %f10, %f2, %f19;
	fma.rn.ftz.f32 	%f23, %f9, %f2, %f20;
	st.param.f32	[func_retval0+0], %f21;
	st.param.f32	[func_retval0+4], %f22;
	st.param.f32	[func_retval0+8], %f23;
	ret;
}

	// .globl	_Z11barycentricI6float2ET_ffS1_S1_S1_
.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z11barycentricI6float2ET_ffS1_S1_S1_(
	.param .b32 _Z11barycentricI6float2ET_ffS1_S1_S1__param_0,
	.param .b32 _Z11barycentricI6float2ET_ffS1_S1_S1__param_1,
	.param .align 8 .b8 _Z11barycentricI6float2ET_ffS1_S1_S1__param_2[8],
	.param .align 8 .b8 _Z11barycentricI6float2ET_ffS1_S1_S1__param_3[8],
	.param .align 8 .b8 _Z11barycentricI6float2ET_ffS1_S1_S1__param_4[8]
)
{
	.reg .f32 	%f<18>;


	ld.param.f32 	%f1, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_0];
	ld.param.f32 	%f2, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_1];
	ld.param.f32 	%f3, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_2+4];
	ld.param.f32 	%f4, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_2];
	ld.param.f32 	%f5, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_3+4];
	ld.param.f32 	%f6, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_3];
	ld.param.f32 	%f7, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_4+4];
	ld.param.f32 	%f8, [_Z11barycentricI6float2ET_ffS1_S1_S1__param_4];
	mov.f32 	%f9, 0f3F800000;
	sub.ftz.f32 	%f10, %f9, %f1;
	sub.ftz.f32 	%f11, %f10, %f2;
	mul.ftz.f32 	%f12, %f6, %f1;
	mul.ftz.f32 	%f13, %f5, %f1;
	fma.rn.ftz.f32 	%f14, %f11, %f4, %f12;
	fma.rn.ftz.f32 	%f15, %f11, %f3, %f13;
	fma.rn.ftz.f32 	%f16, %f8, %f2, %f14;
	fma.rn.ftz.f32 	%f17, %f7, %f2, %f15;
	st.param.f32	[func_retval0+0], %f16;
	st.param.f32	[func_retval0+4], %f17;
	ret;
}

	// .globl	_Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache
.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache(
	.param .b64 _Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache_param_0,
	.param .b64 _Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache_param_1
)
{
	.local .align 16 .b8 	__local_depot12[288];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .f32 	%f<362>;
	.reg .s32 	%r<54>;
	.reg .s64 	%rd<89>;


	mov.u64 	%rd88, __local_depot12;
	cvta.local.u64 	%SP, %rd88;
	ld.param.u64 	%rd5, [_Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache_param_0];
	ld.param.u64 	%rd6, [_Z23bumpToNormalTextureProcRK13LocalGeometryR15ProceduralCache_param_1];
	ld.global.u32 	%r6, [bump_type__];
	setp.eq.s32	%p1, %r6, 0;
	@%p1 bra 	BB12_27;

	ld.s32 	%rd9, [%rd5+40];
	mov.u64 	%rd67, triangles;
	cvta.global.u64 	%rd8, %rd67;
	mov.u32 	%r25, 1;
	mov.u32 	%r20, 12;
	mov.u64 	%rd66, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r25, %r20, %rd9, %rd66, %rd66, %rd66);
	// inline asm
	ld.u32 	%rd33, [%rd7];
	mov.u64 	%rd68, vertices_p;
	cvta.global.u64 	%rd14, %rd68;
	ld.u32 	%rd39, [%rd7+4];
	ld.u32 	%rd45, [%rd7+8];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r25, %r20, %rd33, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f1, [%rd13];
	ld.f32 	%f2, [%rd13+4];
	ld.f32 	%f3, [%rd13+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd14, %r25, %r20, %rd39, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f4, [%rd19];
	ld.f32 	%f5, [%rd19+4];
	ld.f32 	%f6, [%rd19+8];
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd14, %r25, %r20, %rd45, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f7, [%rd25];
	ld.f32 	%f8, [%rd25+4];
	ld.f32 	%f9, [%rd25+8];
	mov.u64 	%rd69, vertexNormals;
	cvta.global.u64 	%rd32, %rd69;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r25, %r20, %rd33, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f12, [%rd31+8];
	ld.f32 	%f11, [%rd31+4];
	ld.f32 	%f10, [%rd31];
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd32, %r25, %r20, %rd39, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f15, [%rd37+8];
	ld.f32 	%f14, [%rd37+4];
	ld.f32 	%f13, [%rd37];
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd32, %r25, %r20, %rd45, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f18, [%rd43+8];
	ld.f32 	%f17, [%rd43+4];
	ld.f32 	%f16, [%rd43];
	ld.u32 	%r28, [%rd5+40];
	ld.global.u32 	%r29, [offset];
	mad.lo.s32 	%r30, %r28, 3, %r29;
	cvt.s64.s32	%rd51, %r30;
	mov.u64 	%rd70, ptexUVs;
	cvta.global.u64 	%rd50, %rd70;
	mov.u32 	%r26, 8;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r25, %r26, %rd51, %rd66, %rd66, %rd66);
	// inline asm
	ld.v2.f32 	{%f117, %f118}, [%rd49];
	add.s32 	%r31, %r30, 1;
	cvt.s64.s32	%rd57, %r31;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd50, %r25, %r26, %rd57, %rd66, %rd66, %rd66);
	// inline asm
	ld.v2.f32 	{%f119, %f120}, [%rd55];
	add.s32 	%r32, %r30, 2;
	cvt.s64.s32	%rd63, %r32;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd50, %r25, %r26, %rd63, %rd66, %rd66, %rd66);
	// inline asm
	ld.v2.f32 	{%f121, %f122}, [%rd61];
	ld.f32 	%f123, [%rd5+20];
	ld.f32 	%f124, [%rd5+12];
	ld.f32 	%f125, [%rd5+16];
	mul.ftz.f32 	%f126, %f125, %f125;
	fma.rn.ftz.f32 	%f127, %f124, %f124, %f126;
	fma.rn.ftz.f32 	%f128, %f123, %f123, %f127;
	sqrt.approx.ftz.f32 	%f129, %f128;
	rcp.approx.ftz.f32 	%f130, %f129;
	mul.ftz.f32 	%f25, %f124, %f130;
	mul.ftz.f32 	%f26, %f125, %f130;
	mul.ftz.f32 	%f27, %f123, %f130;
	abs.ftz.f32 	%f131, %f25;
	abs.ftz.f32 	%f28, %f26;
	abs.ftz.f32 	%f29, %f27;
	setp.le.ftz.f32	%p2, %f131, %f29;
	setp.le.ftz.f32	%p3, %f131, %f28;
	and.pred  	%p4, %p3, %p2;
	mov.u32 	%r53, 0;
	@%p4 bra 	BB12_3;

	setp.gtu.ftz.f32	%p5, %f28, %f29;
	selp.b32	%r53, 2, 1, %p5;

BB12_3:
	neg.ftz.f32 	%f30, %f25;
	setp.eq.s32	%p6, %r53, 0;
	@%p6 bra 	BB12_6;
	bra.uni 	BB12_4;

BB12_6:
	neg.ftz.f32 	%f352, %f26;
	mov.f32 	%f351, %f27;
	mov.f32 	%f350, 0f00000000;
	bra.uni 	BB12_8;

BB12_27:
	ld.f32 	%f359, [%rd5+12];
	ld.f32 	%f360, [%rd5+16];
	ld.f32 	%f361, [%rd5+20];
	bra.uni 	BB12_28;

BB12_4:
	setp.ne.s32	%p7, %r53, 1;
	@%p7 bra 	BB12_7;

	mov.f32 	%f352, %f30;
	mov.f32 	%f351, 0f00000000;
	mov.f32 	%f350, %f27;
	bra.uni 	BB12_8;

BB12_7:
	mov.f32 	%f352, 0f00000000;
	mov.f32 	%f351, %f30;
	mov.f32 	%f350, %f26;

BB12_8:
	mul.ftz.f32 	%f132, %f351, %f351;
	fma.rn.ftz.f32 	%f133, %f350, %f350, %f132;
	fma.rn.ftz.f32 	%f134, %f352, %f352, %f133;
	sqrt.approx.ftz.f32 	%f135, %f134;
	rcp.approx.ftz.f32 	%f136, %f135;
	mul.ftz.f32 	%f43, %f350, %f136;
	mul.ftz.f32 	%f44, %f351, %f136;
	mul.ftz.f32 	%f45, %f352, %f136;
	mul.ftz.f32 	%f137, %f26, %f45;
	mul.ftz.f32 	%f138, %f27, %f44;
	sub.ftz.f32 	%f46, %f137, %f138;
	mul.ftz.f32 	%f139, %f27, %f43;
	mul.ftz.f32 	%f140, %f25, %f45;
	sub.ftz.f32 	%f47, %f139, %f140;
	mul.ftz.f32 	%f141, %f25, %f44;
	mul.ftz.f32 	%f142, %f26, %f43;
	sub.ftz.f32 	%f48, %f141, %f142;
	ld.global.u32 	%r3, [bump_type__];
	setp.eq.s32	%p8, %r3, 0;
	@%p8 bra 	BB12_12;

	setp.eq.s32	%p9, %r3, 1;
	@%p9 bra 	BB12_11;
	bra.uni 	BB12_10;

BB12_11:
	ld.global.u32 	%r34, [bump_texid__];
	ld.v2.f32 	{%f151, %f152}, [%rd5+24];
	mov.u32 	%r35, 2;
	mov.f32 	%f150, 0f00000000;
	// inline asm
	call (%f143, %f144, %f145, %f146), _rt_texture_get_f_id, (%r34, %r35, %f151, %f152, %f150, %f150);
	// inline asm
	mov.f32 	%f353, %f143;
	bra.uni 	BB12_13;

BB12_12:
	ld.global.f32 	%f353, [bump_const__];
	bra.uni 	BB12_13;

BB12_10:
	ld.global.u32 	%r33, [bump_proc__];
	// inline asm
	call (%rd71), _rt_callable_program_from_id_64, (%r33);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	prototype_3 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd71, 
	(
	param0, 
	param1
	)
	, prototype_3;
	ld.param.f32	%f353, [retval0+0];
	
	//{
	}// Callseq End 3

BB12_13:
	add.u64 	%rd72, %SP, 0;
	cvta.to.local.u64 	%rd73, %rd72;
	add.u64 	%rd74, %SP, 96;
	cvta.to.local.u64 	%rd75, %rd74;
	ld.global.f32 	%f53, [delta];
	mov.u32 	%r36, 0;
	st.local.v2.u32 	[%rd73], {%r36, %r36};
	ld.v2.f32 	{%f153, %f154}, [%rd5];
	ld.v2.f32 	{%f155, %f156}, [%rd5+8];
	ld.v2.f32 	{%f157, %f158}, [%rd5+16];
	ld.v2.f32 	{%f159, %f160}, [%rd5+24];
	ld.v2.f32 	{%f161, %f162}, [%rd5+32];
	ld.v2.u32 	{%r37, %r38}, [%rd5+40];
	st.local.v2.u32 	[%rd75+40], {%r37, %r38};
	st.local.v2.f32 	[%rd75+32], {%f161, %f162};
	st.local.v2.f32 	[%rd75+24], {%f159, %f160};
	st.local.v2.f32 	[%rd75+16], {%f157, %f158};
	st.local.v2.f32 	[%rd75+8], {%f155, %f156};
	st.local.v2.f32 	[%rd75], {%f153, %f154};
	ld.local.v2.f32 	{%f173, %f174}, [%rd75];
	fma.rn.ftz.f32 	%f176, %f44, %f53, %f174;
	fma.rn.ftz.f32 	%f178, %f43, %f53, %f173;
	ld.local.f32 	%f179, [%rd75+8];
	st.local.v2.f32 	[%rd75], {%f178, %f176};
	fma.rn.ftz.f32 	%f180, %f45, %f53, %f179;
	neg.ftz.f32 	%f181, %f180;
	sub.ftz.f32 	%f182, %f178, %f1;
	sub.ftz.f32 	%f183, %f181, %f2;
	sub.ftz.f32 	%f184, %f176, %f3;
	sub.ftz.f32 	%f54, %f4, %f1;
	sub.ftz.f32 	%f55, %f5, %f2;
	mul.ftz.f32 	%f185, %f55, %f55;
	fma.rn.ftz.f32 	%f186, %f54, %f54, %f185;
	sub.ftz.f32 	%f56, %f6, %f3;
	fma.rn.ftz.f32 	%f57, %f56, %f56, %f186;
	sub.ftz.f32 	%f58, %f7, %f1;
	sub.ftz.f32 	%f59, %f8, %f2;
	mul.ftz.f32 	%f187, %f55, %f59;
	fma.rn.ftz.f32 	%f188, %f54, %f58, %f187;
	sub.ftz.f32 	%f60, %f9, %f3;
	fma.rn.ftz.f32 	%f61, %f56, %f60, %f188;
	mul.ftz.f32 	%f189, %f59, %f59;
	fma.rn.ftz.f32 	%f190, %f58, %f58, %f189;
	fma.rn.ftz.f32 	%f62, %f60, %f60, %f190;
	mul.ftz.f32 	%f191, %f55, %f183;
	fma.rn.ftz.f32 	%f192, %f54, %f182, %f191;
	fma.rn.ftz.f32 	%f193, %f56, %f184, %f192;
	mul.ftz.f32 	%f194, %f59, %f183;
	fma.rn.ftz.f32 	%f195, %f58, %f182, %f194;
	fma.rn.ftz.f32 	%f196, %f60, %f184, %f195;
	mul.ftz.f32 	%f197, %f57, %f62;
	mul.ftz.f32 	%f198, %f61, %f61;
	sub.ftz.f32 	%f199, %f197, %f198;
	rcp.approx.ftz.f32 	%f63, %f199;
	mul.ftz.f32 	%f200, %f62, %f193;
	mul.ftz.f32 	%f201, %f61, %f196;
	sub.ftz.f32 	%f202, %f200, %f201;
	mul.ftz.f32 	%f203, %f57, %f196;
	mul.ftz.f32 	%f204, %f61, %f193;
	sub.ftz.f32 	%f205, %f203, %f204;
	mul.ftz.f32 	%f206, %f63, %f205;
	mul.ftz.f32 	%f207, %f63, %f202;
	mov.f32 	%f208, 0f3F800000;
	sub.ftz.f32 	%f209, %f208, %f207;
	sub.ftz.f32 	%f210, %f209, %f206;
	mul.ftz.f32 	%f211, %f10, %f210;
	fma.rn.ftz.f32 	%f212, %f13, %f207, %f211;
	fma.rn.ftz.f32 	%f213, %f16, %f206, %f212;
	st.local.v2.f32 	[%rd75+8], {%f180, %f213};
	st.local.f32 	[%rd75+36], %f206;
	st.local.f32 	[%rd75+32], %f207;
	mul.ftz.f32 	%f214, %f11, %f210;
	mul.ftz.f32 	%f215, %f12, %f210;
	fma.rn.ftz.f32 	%f216, %f14, %f207, %f214;
	fma.rn.ftz.f32 	%f217, %f15, %f207, %f215;
	fma.rn.ftz.f32 	%f218, %f17, %f206, %f216;
	fma.rn.ftz.f32 	%f219, %f18, %f206, %f217;
	neg.ftz.f32 	%f220, %f218;
	st.local.f32 	[%rd75+20], %f220;
	mul.ftz.f32 	%f221, %f117, %f210;
	mul.ftz.f32 	%f222, %f118, %f210;
	fma.rn.ftz.f32 	%f223, %f119, %f207, %f221;
	fma.rn.ftz.f32 	%f224, %f120, %f207, %f222;
	fma.rn.ftz.f32 	%f79, %f121, %f206, %f223;
	fma.rn.ftz.f32 	%f80, %f122, %f206, %f224;
	st.local.f32 	[%rd75+28], %f80;
	st.local.f32 	[%rd75+24], %f79;
	st.local.f32 	[%rd75+16], %f219;
	ld.global.u32 	%r4, [bump_type__];
	setp.eq.s32	%p10, %r4, 0;
	@%p10 bra 	BB12_17;

	setp.eq.s32	%p11, %r4, 1;
	@%p11 bra 	BB12_16;
	bra.uni 	BB12_15;

BB12_16:
	ld.global.u32 	%r42, [bump_texid__];
	mov.u32 	%r43, 2;
	mov.f32 	%f232, 0f00000000;
	// inline asm
	call (%f225, %f226, %f227, %f228), _rt_texture_get_f_id, (%r42, %r43, %f79, %f80, %f232, %f232);
	// inline asm
	mov.f32 	%f354, %f225;
	bra.uni 	BB12_18;

BB12_17:
	ld.global.f32 	%f354, [bump_const__];
	bra.uni 	BB12_18;

BB12_15:
	add.u64 	%rd87, %SP, 0;
	add.u64 	%rd86, %SP, 96;
	ld.global.u32 	%r41, [bump_proc__];
	// inline asm
	call (%rd76), _rt_callable_program_from_id_64, (%r41);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd87;
	.param .b32 retval0;
	prototype_4 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd76, 
	(
	param0, 
	param1
	)
	, prototype_4;
	ld.param.f32	%f354, [retval0+0];
	
	//{
	}// Callseq End 4

BB12_18:
	mov.u32 	%r52, 0;
	add.u64 	%rd79, %SP, 144;
	cvta.to.local.u64 	%rd80, %rd79;
	add.u64 	%rd81, %SP, 240;
	cvta.to.local.u64 	%rd82, %rd81;
	ld.global.f32 	%f85, [delta];
	st.local.v2.u32 	[%rd80], {%r52, %r52};
	ld.v2.f32 	{%f233, %f234}, [%rd5];
	ld.v2.f32 	{%f235, %f236}, [%rd5+8];
	ld.v2.f32 	{%f237, %f238}, [%rd5+16];
	ld.v2.f32 	{%f239, %f240}, [%rd5+24];
	ld.v2.f32 	{%f241, %f242}, [%rd5+32];
	ld.v2.u32 	{%r45, %r46}, [%rd5+40];
	st.local.v2.u32 	[%rd82+40], {%r45, %r46};
	st.local.v2.f32 	[%rd82+32], {%f241, %f242};
	st.local.v2.f32 	[%rd82+24], {%f239, %f240};
	st.local.v2.f32 	[%rd82+16], {%f237, %f238};
	st.local.v2.f32 	[%rd82+8], {%f235, %f236};
	st.local.v2.f32 	[%rd82], {%f233, %f234};
	ld.local.v2.f32 	{%f253, %f254}, [%rd82];
	fma.rn.ftz.f32 	%f256, %f47, %f85, %f254;
	fma.rn.ftz.f32 	%f258, %f46, %f85, %f253;
	ld.local.f32 	%f259, [%rd82+8];
	st.local.v2.f32 	[%rd82], {%f258, %f256};
	fma.rn.ftz.f32 	%f260, %f48, %f85, %f259;
	neg.ftz.f32 	%f261, %f260;
	sub.ftz.f32 	%f262, %f258, %f1;
	sub.ftz.f32 	%f263, %f261, %f2;
	sub.ftz.f32 	%f264, %f256, %f3;
	mul.ftz.f32 	%f265, %f55, %f263;
	fma.rn.ftz.f32 	%f266, %f54, %f262, %f265;
	fma.rn.ftz.f32 	%f267, %f56, %f264, %f266;
	mul.ftz.f32 	%f268, %f59, %f263;
	fma.rn.ftz.f32 	%f269, %f58, %f262, %f268;
	fma.rn.ftz.f32 	%f270, %f60, %f264, %f269;
	mul.ftz.f32 	%f271, %f62, %f267;
	mul.ftz.f32 	%f272, %f61, %f270;
	sub.ftz.f32 	%f273, %f271, %f272;
	mul.ftz.f32 	%f274, %f57, %f270;
	mul.ftz.f32 	%f275, %f61, %f267;
	sub.ftz.f32 	%f276, %f274, %f275;
	mul.ftz.f32 	%f277, %f63, %f276;
	mul.ftz.f32 	%f278, %f63, %f273;
	sub.ftz.f32 	%f280, %f208, %f278;
	sub.ftz.f32 	%f281, %f280, %f277;
	mul.ftz.f32 	%f282, %f10, %f281;
	fma.rn.ftz.f32 	%f283, %f13, %f278, %f282;
	fma.rn.ftz.f32 	%f284, %f16, %f277, %f283;
	st.local.v2.f32 	[%rd82+8], {%f260, %f284};
	st.local.f32 	[%rd82+36], %f277;
	st.local.f32 	[%rd82+32], %f278;
	mul.ftz.f32 	%f285, %f11, %f281;
	mul.ftz.f32 	%f286, %f12, %f281;
	fma.rn.ftz.f32 	%f287, %f14, %f278, %f285;
	fma.rn.ftz.f32 	%f288, %f15, %f278, %f286;
	fma.rn.ftz.f32 	%f289, %f17, %f277, %f287;
	fma.rn.ftz.f32 	%f290, %f18, %f277, %f288;
	neg.ftz.f32 	%f291, %f289;
	st.local.f32 	[%rd82+20], %f291;
	mul.ftz.f32 	%f292, %f117, %f281;
	mul.ftz.f32 	%f293, %f118, %f281;
	fma.rn.ftz.f32 	%f294, %f119, %f278, %f292;
	fma.rn.ftz.f32 	%f295, %f120, %f278, %f293;
	fma.rn.ftz.f32 	%f86, %f121, %f277, %f294;
	fma.rn.ftz.f32 	%f87, %f122, %f277, %f295;
	st.local.f32 	[%rd82+28], %f87;
	st.local.f32 	[%rd82+24], %f86;
	st.local.f32 	[%rd82+16], %f290;
	ld.global.u32 	%r5, [bump_type__];
	setp.eq.s32	%p12, %r5, 0;
	@%p12 bra 	BB12_22;

	setp.eq.s32	%p13, %r5, 1;
	@%p13 bra 	BB12_21;
	bra.uni 	BB12_20;

BB12_21:
	ld.global.u32 	%r50, [bump_texid__];
	mov.u32 	%r51, 2;
	mov.f32 	%f303, 0f00000000;
	// inline asm
	call (%f296, %f297, %f298, %f299), _rt_texture_get_f_id, (%r50, %r51, %f86, %f87, %f303, %f303);
	// inline asm
	mov.f32 	%f355, %f296;
	bra.uni 	BB12_23;

BB12_22:
	ld.global.f32 	%f355, [bump_const__];
	bra.uni 	BB12_23;

BB12_20:
	ld.global.u32 	%r49, [bump_proc__];
	// inline asm
	call (%rd83), _rt_callable_program_from_id_64, (%r49);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd81;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd79;
	.param .b32 retval0;
	prototype_5 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b64 _);
	call (retval0), 
	%rd83, 
	(
	param0, 
	param1
	)
	, prototype_5;
	ld.param.f32	%f355, [retval0+0];
	
	//{
	}// Callseq End 5

BB12_23:
	sub.ftz.f32 	%f304, %f354, %f353;
	ld.global.f32 	%f305, [bumpStrength];
	mul.ftz.f32 	%f306, %f304, %f305;
	neg.ftz.f32 	%f307, %f306;
	div.approx.ftz.f32 	%f308, %f307, %f53;
	sub.ftz.f32 	%f309, %f355, %f353;
	mul.ftz.f32 	%f310, %f309, %f305;
	neg.ftz.f32 	%f311, %f310;
	div.approx.ftz.f32 	%f312, %f311, %f85;
	ld.f32 	%f313, [%rd5+12];
	fma.rn.ftz.f32 	%f314, %f43, %f308, %f313;
	ld.f32 	%f315, [%rd5+16];
	fma.rn.ftz.f32 	%f316, %f44, %f308, %f315;
	ld.f32 	%f317, [%rd5+20];
	fma.rn.ftz.f32 	%f318, %f45, %f308, %f317;
	fma.rn.ftz.f32 	%f319, %f46, %f312, %f314;
	fma.rn.ftz.f32 	%f320, %f47, %f312, %f316;
	fma.rn.ftz.f32 	%f321, %f48, %f312, %f318;
	mul.ftz.f32 	%f322, %f320, %f320;
	fma.rn.ftz.f32 	%f323, %f319, %f319, %f322;
	fma.rn.ftz.f32 	%f324, %f321, %f321, %f323;
	sqrt.approx.ftz.f32 	%f325, %f324;
	rcp.approx.ftz.f32 	%f326, %f325;
	mul.ftz.f32 	%f356, %f319, %f326;
	mul.ftz.f32 	%f357, %f320, %f326;
	mul.ftz.f32 	%f358, %f321, %f326;
	ld.global.f32 	%f327, [ray+12];
	neg.ftz.f32 	%f95, %f327;
	ld.global.f32 	%f328, [ray+16];
	neg.ftz.f32 	%f96, %f328;
	ld.global.f32 	%f329, [ray+20];
	neg.ftz.f32 	%f97, %f329;
	mul.ftz.f32 	%f330, %f313, %f95;
	mul.ftz.f32 	%f331, %f315, %f328;
	sub.ftz.f32 	%f332, %f330, %f331;
	mul.ftz.f32 	%f333, %f317, %f329;
	sub.ftz.f32 	%f334, %f332, %f333;
	setp.ltu.ftz.f32	%p14, %f334, 0f00000000;
	@%p14 bra 	BB12_26;

	mul.ftz.f32 	%f335, %f357, %f96;
	fma.rn.ftz.f32 	%f336, %f356, %f95, %f335;
	fma.rn.ftz.f32 	%f98, %f358, %f97, %f336;
	setp.gtu.ftz.f32	%p15, %f98, 0f00000000;
	@%p15 bra 	BB12_26;

	mul.ftz.f32 	%f337, %f98, 0f3F8147AE;
	mul.ftz.f32 	%f338, %f337, %f95;
	mul.ftz.f32 	%f339, %f337, %f96;
	mul.ftz.f32 	%f340, %f337, %f97;
	sub.ftz.f32 	%f341, %f356, %f338;
	sub.ftz.f32 	%f342, %f357, %f339;
	sub.ftz.f32 	%f343, %f358, %f340;
	mul.ftz.f32 	%f344, %f342, %f342;
	fma.rn.ftz.f32 	%f345, %f341, %f341, %f344;
	fma.rn.ftz.f32 	%f346, %f343, %f343, %f345;
	sqrt.approx.ftz.f32 	%f347, %f346;
	rcp.approx.ftz.f32 	%f348, %f347;
	mul.ftz.f32 	%f356, %f341, %f348;
	mul.ftz.f32 	%f357, %f342, %f348;
	mul.ftz.f32 	%f358, %f343, %f348;

BB12_26:
	mov.f32 	%f361, %f358;
	mov.f32 	%f360, %f357;
	mov.f32 	%f359, %f356;

BB12_28:
	st.param.f32	[func_retval0+0], %f359;
	st.param.f32	[func_retval0+4], %f360;
	st.param.f32	[func_retval0+8], %f361;
	mov.f32 	%f349, 0f00000000;
	st.param.f32	[func_retval0+12], %f349;
	ret;
}

	// .globl	_ZN5optix3RayC1Ev
.visible .func _ZN5optix3RayC1Ev(
	.param .b64 _ZN5optix3RayC1Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix3RayC2Ev
.visible .func _ZN5optix3RayC2Ev(
	.param .b64 _ZN5optix3RayC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev
.visible .func _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev
.visible .func _ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIFfRK13LocalGeometryR15ProceduralCacheEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseIfRK13LocalGeometryR15ProceduralCacheNS_9CPArgVoidES6_S6_S6_S6_S6_S6_S6_EC2Ev_param_0
)
{



	ret;
}


