//
// Generated by LWPU LWVM Compiler
// Compiler built on Wed Jul 10 21:41:20 2013 (1373485280)
// Lwca compilation tools, release 5.5, V5.5.0
//

.version 3.2
.target sm_20
.address_size 64

	.file	1 "E:/stellar/src/rendering/components/optix/programs/RayGeneration.lw", 1435152383, 5154
	.file	2 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\Textures.h", 1435073305, 1534
	.file	3 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\internal/optix_internal.h", 1434101976, 18808
	.file	4 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\optix-win64-3.8.1-dev-2\\include\\optix_device.h", 1434101976, 118634
	.file	5 "c:\\users\\nikolas_schmitt\\appdata\\local\\temp\\artifactory\\lwca-win64-5.5\\include\\device_functions.h", 1402479048, 191626
	.file	6 "E:/stellar/src\\util/Vec2.hpp", 1429187304, 11203
	.file	7 "e:\\stellar\\src\\rendering\\components\\optix\\programs\\OptixBufferPtr.hpp", 1435073284, 2233
	.file	8 "e:\\stellar\\src\\rendering\\common\\MLCTypedefs.hpp", 1433231743, 13213
.visible .func stlr_compute_sub_pixel_pos
(
	.param .b64 stlr_compute_sub_pixel_pos_param_0,
	.param .b64 stlr_compute_sub_pixel_pos_param_1,
	.param .b64 stlr_compute_sub_pixel_pos_param_2
)
;
.visible .func stlr_main
(
	.param .b64 stlr_main_param_0,
	.param .b64 stlr_main_param_1,
	.param .b64 stlr_main_param_2,
	.param .b64 stlr_main_param_3,
	.param .b64 stlr_main_param_4,
	.param .b64 stlr_main_param_5,
	.param .b64 stlr_main_param_6,
	.param .b64 stlr_main_param_7,
	.param .b64 stlr_main_param_8,
	.param .b64 stlr_main_param_9
)
;
.global .align 4 .u32 radiance_ray_type;
.global .align 8 .b8 top_object[4];
.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 render_task_data[1];
.global .align 4 .u32 frame_number;
.global .align 4 .u32 render_task_id;
.global .align 1 .b8 sub_pixel_positions[1];
.global .align 1 .b8 color_buffer[1];
.global .align 1 .b8 distance_buffer[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo17radiance_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14render_task_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17radiance_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[5] = {105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[4] = {105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14render_task_idE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum17radiance_ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14render_task_idE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14render_task_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17radiance_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14render_task_idE[1];
.global .align 1 .b8 $str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90, 0};

.visible .func  (.param .b32 func_retval0) _Z14colwertPtrToIdRKPKv(
	.param .b64 _Z14colwertPtrToIdRKPKv_param_0
)
{
	.reg .s32 	%r<2>;
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z14colwertPtrToIdRKPKv_param_0];
	.loc 2 8 1
	ld.u32 	%r1, [%rd1];
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

.visible .func optix_texture(
	.param .b64 optix_texture_param_0,
	.param .b64 optix_texture_param_1,
	.param .b64 optix_texture_param_2
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_texture_param_0];
	ld.param.u64 	%rd2, [optix_texture_param_1];
	ld.param.u64 	%rd3, [optix_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.f32 	%f8, 0f00000000;
	.loc 2 17 23
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f9, %f10, %f8, %f8);
	// inline asm
	.loc 2 17 128
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 18 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix19rt_texture_get_f_idEiiffff(
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_0,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_1,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_2,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_3,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_4,
	.param .b32 _ZN5optix19rt_texture_get_f_idEiiffff_param_5
)
{
	.reg .s32 	%r<3>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix19rt_texture_get_f_idEiiffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix19rt_texture_get_f_idEiiffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix19rt_texture_get_f_idEiiffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix19rt_texture_get_f_idEiiffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix19rt_texture_get_f_idEiiffff_param_4];
	ld.param.f32 	%f8, [_ZN5optix19rt_texture_get_f_idEiiffff_param_5];
	.loc 3 157 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_f_id, (%r1, %r2, %f5, %f6, %f7, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 167 1
	ret;
}

.visible .func optix_texture_lod(
	.param .b64 optix_texture_lod_param_0,
	.param .b64 optix_texture_lod_param_1,
	.param .b64 optix_texture_lod_param_2,
	.param .b64 optix_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<11>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 27 50
	ld.f32 	%f8, [%rd4];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 2 27 50
	ld.v2.f32 	{%f9, %f10}, [%rd3];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f9, %f10, %f7, %r3, %f8);
	// inline asm
	.loc 2 27 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 28 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix10rtTex2DLodI6float4EET_ifff(
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix10rtTex2DLodI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_2];
	ld.param.f32 	%f8, [_ZN5optix10rtTex2DLodI6float4EET_ifff_param_3];
	mov.u32 	%r2, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 666 19
	ret;
}

.visible .func optix_texture_grad(
	.param .b64 optix_texture_grad_param_0,
	.param .b64 optix_texture_grad_param_1,
	.param .b64 optix_texture_grad_param_2,
	.param .b64 optix_texture_grad_param_3,
	.param .b64 optix_texture_grad_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<20>;
	.reg .s64 	%rd<6>;


	ld.param.u64 	%rd1, [optix_texture_grad_param_0];
	ld.param.u64 	%rd2, [optix_texture_grad_param_1];
	ld.param.u64 	%rd3, [optix_texture_grad_param_2];
	ld.param.u64 	%rd4, [optix_texture_grad_param_3];
	ld.param.u64 	%rd5, [optix_texture_grad_param_4];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 2 38 60
	ld.v2.f32 	{%f14, %f15}, [%rd3];
	ld.v2.f32 	{%f16, %f17}, [%rd4];
	ld.v2.f32 	{%f18, %f19}, [%rd5];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f14, %f15, %f13, %r3, %f16, %f17, %f13, %f18, %f19, %f13);
	// inline asm
	.loc 2 38 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 39 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3_(
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1,
	.param .b32 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2,
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3[8],
	.param .align 8 .b8 _ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4[8]
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_0];
	ld.param.f32 	%f5, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_1];
	ld.param.f32 	%f6, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_2];
	ld.param.f32 	%f8, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3];
	ld.param.f32 	%f9, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_3+4];
	ld.param.f32 	%f11, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4];
	ld.param.f32 	%f12, [_ZN5optix11rtTex2DGradI6float4EET_iff6float2S3__param_4+4];
	mov.u32 	%r2, 2;
	mov.u32 	%r3, 0;
	mov.f32 	%f13, 0f00000000;
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f13, %r3, %f8, %f9, %f13, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 636 19
	ret;
}

.visible .func optix_lwbe_texture(
	.param .b64 optix_lwbe_texture_param_0,
	.param .b64 optix_lwbe_texture_param_1,
	.param .b64 optix_lwbe_texture_param_2
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;
	.reg .s64 	%rd<4>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_param_2];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 47 52
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	.loc 2 47 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 48 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix12rtTexLwbemapI6float4EET_ifff(
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2,
	.param .b32 _ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_0];
	ld.param.f32 	%f5, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_1];
	ld.param.f32 	%f6, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_2];
	ld.param.f32 	%f7, [_ZN5optix12rtTexLwbemapI6float4EET_ifff_param_3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 702 19
	ret;
}

.visible .func optix_lwbe_texture_lod(
	.param .b64 optix_lwbe_texture_lod_param_0,
	.param .b64 optix_lwbe_texture_lod_param_1,
	.param .b64 optix_lwbe_texture_lod_param_2,
	.param .b64 optix_lwbe_texture_lod_param_3
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd1, [optix_lwbe_texture_lod_param_0];
	ld.param.u64 	%rd2, [optix_lwbe_texture_lod_param_1];
	ld.param.u64 	%rd3, [optix_lwbe_texture_lod_param_2];
	ld.param.u64 	%rd4, [optix_lwbe_texture_lod_param_3];
	.loc 2 8 1
	ld.u32 	%r1, [%rd2];
	.loc 2 57 56
	ld.f32 	%f8, [%rd4];
	ld.f32 	%f7, [%rd3+8];
	ld.f32 	%f6, [%rd3+4];
	ld.f32 	%f5, [%rd3];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	.loc 2 57 11
	st.v4.f32 	[%rd1], {%f1, %f2, %f3, %f4};
	.loc 2 58 2
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix15rtTexLwbemapLodI6float4EET_iffff(
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3,
	.param .b32 _ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_0];
	ld.param.f32 	%f5, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_1];
	ld.param.f32 	%f6, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_2];
	ld.param.f32 	%f7, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_3];
	ld.param.f32 	%f8, [_ZN5optix15rtTexLwbemapLodI6float4EET_iffff_param_4];
	mov.u32 	%r2, 6;
	mov.u32 	%r3, 0;
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 4 714 19
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _Z15clamp_luminanceRK6float4f(
	.param .b64 _Z15clamp_luminanceRK6float4f_param_0,
	.param .b32 _Z15clamp_luminanceRK6float4f_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<35>;
	.reg .s64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z15clamp_luminanceRK6float4f_param_0];
	ld.param.f32 	%f18, [_Z15clamp_luminanceRK6float4f_param_1];
	.loc 1 46 1
	ld.v4.f32 	{%f19, %f20, %f21, %f22}, [%rd1];
	mul.f32 	%f23, %f20, 0f3F371759;
	fma.rn.f32 	%f24, %f19, 0f3E59B3D0, %f23;
	fma.rn.f32 	%f25, %f21, 0f3D93DD98, %f24;
	fma.rn.f32 	%f5, %f22, 0f00000000, %f25;
	.loc 1 47 1
	setp.gtu.f32	%p1, %f5, %f18;
	@%p1 bra 	BB11_2;

	.loc 1 48 1
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd1];
	mov.f32 	%f34, %f29;
	mov.f32 	%f33, %f28;
	mov.f32 	%f32, %f27;
	mov.f32 	%f31, %f26;
	bra.uni 	BB11_3;

BB11_2:
	.loc 5 3608 3
	div.rn.f32 	%f30, %f18, %f5;
	.loc 1 52 1
	mul.f32 	%f31, %f19, %f30;
	mul.f32 	%f32, %f20, %f30;
	mul.f32 	%f33, %f21, %f30;
	mov.f32 	%f34, %f22;

BB11_3:
	st.param.f32	[func_retval0+0], %f31;
	st.param.f32	[func_retval0+4], %f32;
	st.param.f32	[func_retval0+8], %f33;
	st.param.f32	[func_retval0+12], %f34;
	ret;
}

.visible .func _Z9trace_rayRN3rtt7stellar8RayStackER7RayData(
	.param .b64 _Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_0,
	.param .b64 _Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_1
)
{
	.reg .s32 	%r<6>;
	.reg .f32 	%f<17>;
	.reg .s64 	%rd<5>;


	ld.param.u64 	%rd2, [_Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_0];
	ld.param.u64 	%rd1, [_Z9trace_rayRN3rtt7stellar8RayStackER7RayData_param_1];
	.loc 1 58 1
	ld.u32 	%r4, [%rd2+24];
	add.s32 	%r5, %r4, -1;
	mul.wide.s32 	%rd3, %r5, 112;
	ld.global.u32 	%r1, [top_object];
	.loc 1 64 1
	add.s64 	%rd4, %rd3, %rd2;
	ld.f32 	%f8, [%rd4+128];
	ld.global.u32 	%r2, [radiance_ray_type];
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r3, 64;
	.loc 1 64 1
	ld.v4.f32 	{%f9, %f10, %f11, %f12}, [%rd4+32];
	ld.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd4+80];
	.loc 3 306 1
	// inline asm
	call _rt_trace_64, (%r1, %f9, %f10, %f11, %f13, %f14, %f15, %r2, %f7, %f8, %rd1, %r3);
	// inline asm
	.loc 1 67 2
	ret;
}

.visible .func _Z21write_distance_bufferiRK4int2f(
	.param .b32 _Z21write_distance_bufferiRK4int2f_param_0,
	.param .b64 _Z21write_distance_bufferiRK4int2f_param_1,
	.param .b32 _Z21write_distance_bufferiRK4int2f_param_2
)
{
	.reg .pred 	%p<8>;
	.reg .s32 	%r<14>;
	.reg .f32 	%f<2>;
	.reg .s64 	%rd<12>;


	ld.param.u32 	%r5, [_Z21write_distance_bufferiRK4int2f_param_0];
	ld.param.u64 	%rd1, [_Z21write_distance_bufferiRK4int2f_param_1];
	ld.param.f32 	%f1, [_Z21write_distance_bufferiRK4int2f_param_2];
	.loc 1 71 1
	ld.global.u32 	%r6, [frame_number];
	setp.eq.s32	%p1, %r6, 0;
	ld.global.u64 	%rd2, [launch_index];
	cvt.u32.u64	%r1, %rd2;
	setp.ge.s32	%p2, %r1, %r5;
	and.pred  	%p3, %p1, %p2;
	shr.u64 	%rd3, %rd2, 32;
	cvt.u32.u64	%r2, %rd3;
	.loc 1 71 1
	@!%p3 bra 	BB13_4;
	bra.uni 	BB13_1;

BB13_1:
	ld.u64 	%rd4, [%rd1];
	cvt.u32.u64	%r3, %rd4;
	add.s32 	%r7, %r3, %r5;
	setp.lt.s32	%p4, %r1, %r7;
	setp.ge.s32	%p5, %r2, %r5;
	and.pred  	%p6, %p4, %p5;
	shr.u64 	%rd5, %rd4, 32;
	cvt.u32.u64	%r4, %rd5;
	.loc 1 71 1
	@!%p6 bra 	BB13_4;
	bra.uni 	BB13_2;

BB13_2:
	add.s32 	%r8, %r4, %r5;
	setp.ge.s32	%p7, %r2, %r8;
	@%p7 bra 	BB13_4;

	.loc 1 75 1
	sub.s32 	%r11, %r2, %r5;
	sub.s32 	%r12, %r1, %r5;
	.loc 1 76 1
	mad.lo.s32 	%r13, %r11, %r3, %r12;
	.loc 1 77 1
	cvt.s64.s32	%rd8, %r13;
	cvta.global.u64 	%rd7, distance_buffer;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 4;
	mov.u64 	%rd11, 0;
	.loc 3 217 1
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd7, %r9, %r10, %rd8, %rd11, %rd11, %rd11);
	// inline asm
	.loc 1 77 4
	st.f32 	[%rd6], %f1;

BB13_4:
	.loc 1 79 2
	ret;
}

.visible .entry _Z6camerav(

)
{
	.local .align 16 .b8 	__local_depot14[4128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<16>;
	.reg .s32 	%r<86>;
	.reg .f32 	%f<131>;
	.reg .s64 	%rd<62>;


	mov.u64 	%SPL, __local_depot14;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd12, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd12;
	add.u64 	%rd13, %SP, 96;
	cvta.to.local.u64 	%rd14, %rd13;
	add.u64 	%rd15, %SP, 104;
	cvta.to.local.u64 	%rd16, %rd15;
	add.u64 	%rd17, %SP, 112;
	cvta.to.local.u64 	%rd18, %rd17;
	add.u64 	%rd19, %SP, 128;
	cvta.to.local.u64 	%rd2, %rd19;
	.loc 1 83 1
	ldu.global.u32 	%r11, [render_task_id];
	cvt.s64.s32	%rd8, %r11;
	cvta.global.u64 	%rd7, render_task_data;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 96;
	mov.u64 	%rd11, 0;
	.loc 3 217 1
	// inline asm
	call (%rd6), _rt_buffer_get_64, (%rd7, %r9, %r10, %rd8, %rd11, %rd11, %rd11);
	// inline asm
	.loc 1 83 1
	ld.v2.u32 	{%r12, %r13}, [%rd6+8];
	ld.v2.u32 	{%r14, %r15}, [%rd6];
	st.local.v2.u32 	[%rd1], {%r14, %r15};
	st.local.v2.u32 	[%rd1+8], {%r12, %r13};
	ld.u32 	%r1, [%rd6+16];
	.loc 6 55 1
	ld.v2.f32 	{%f20, %f21}, [%rd6+24];
	.loc 1 83 1
	st.local.u32 	[%rd1+16], %r1;
	.loc 6 55 1
	st.local.v2.f32 	[%rd1+24], {%f20, %f21};
	ld.v2.f32 	{%f24, %f25}, [%rd6+40];
	ld.v2.f32 	{%f26, %f27}, [%rd6+32];
	st.local.v2.f32 	[%rd1+32], {%f26, %f27};
	st.local.v2.f32 	[%rd1+40], {%f24, %f25};
	.loc 1 83 1
	ld.v2.u32 	{%r20, %r21}, [%rd6+56];
	ld.v2.f32 	{%f32, %f33}, [%rd6+48];
	st.local.v2.f32 	[%rd1+48], {%f32, %f33};
	st.local.v2.u32 	[%rd1+56], {%r20, %r21};
	ld.u32 	%r24, [%rd6+80];
	ld.v2.u32 	{%r25, %r26}, [%rd6+72];
	ld.v2.u32 	{%r27, %r28}, [%rd6+64];
	st.local.v2.u32 	[%rd1+64], {%r27, %r28};
	st.local.v2.u32 	[%rd1+72], {%r25, %r26};
	st.local.u32 	[%rd1+80], %r24;
	ld.u32 	%r33, [%rd6+84];
	ld.v2.u32 	{%r34, %r35}, [%rd6+88];
	st.local.u32 	[%rd1+84], %r33;
	st.local.v2.u32 	[%rd1+88], {%r34, %r35};
	.loc 1 84 1
	ld.global.u32 	%r38, [frame_number];
	add.s32 	%r39, %r38, %r13;
	st.local.u32 	[%rd14], %r39;
	.loc 1 88 1
	ld.global.v2.u32 	{%r40, %r41}, [launch_index];
	sub.s32 	%r43, %r40, %r1;
	cvt.rn.f32.s32	%f36, %r43;
	sub.s32 	%r45, %r41, %r1;
	cvt.rn.f32.s32	%f37, %r45;
	.loc 1 91 1
	add.s64 	%rd20, %rd19, 24;
	mov.u32 	%r46, 0;
	.loc 6 79 1
	st.local.v2.f32 	[%rd16], {%f36, %f37};
	.loc 6 79 1
	st.local.v2.u32 	[%rd18], {%r46, %r46};
	.loc 1 91 1
	st.local.u32 	[%rd2+24], %r46;
	.loc 5 3251 10
	cvt.rzi.s32.f32	%r2, %f20;
	.loc 5 3251 10
	cvt.rzi.s32.f32	%r3, %f21;
	.loc 1 91 1
	add.s64 	%rd21, %rd19, 32;
	add.s64 	%rd22, %rd19, 1824;
	st.local.v2.u64 	[%rd2], {%rd20, %rd21};
	st.local.u64 	[%rd2+16], %rd22;
	.loc 7 66 1
	ld.local.u64 	%rd23, [%rd1+56];
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd13;
	.loc 1 95 1
	call.uni 
	stlr_compute_sub_pixel_pos, 
	(
	param0, 
	param1, 
	param2
	);
	}
	// Callseq End 0
	.loc 1 96 1
	ld.global.v2.u32 	{%r47, %r48}, [launch_index];
	neg.s32 	%r50, %r48;
	setp.ne.s32	%p1, %r47, %r50;
	@%p1 bra 	BB14_2;

	.loc 1 97 1
	cvta.global.u64 	%rd25, sub_pixel_positions;
	ld.global.s32 	%rd26, [render_task_id];
	mov.u32 	%r53, 8;
	.loc 3 217 1
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r9, %r53, %rd26, %rd11, %rd11, %rd11);
	// inline asm
	.loc 1 97 4
	ld.local.v2.f32 	{%f38, %f39}, [%rd18];
	st.v2.f32 	[%rd24], {%f38, %f39};

BB14_2:
	.loc 1 83 1
	add.s64 	%rd35, %rd12, 8;
	.loc 1 101 87
	add.s64 	%rd36, %rd12, 24;
	add.s64 	%rd37, %rd12, 32;
	add.s64 	%rd38, %rd12, 40;
	.loc 7 66 1
	ld.local.u64 	%rd42, [%rd1+56];
	add.u64 	%rd43, %SP, 4000;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd15;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd36;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd37;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd38;
	.param .b64 param9;
	st.param.b64	[param9+0], %rd17;
	.loc 1 101 1
	call.uni 
	stlr_main, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	}
	// Callseq End 1
	mov.u32 	%r56, 64;
	add.u64 	%rd32, %SP, 4064;
	cvta.to.local.u64 	%rd4, %rd32;
	mov.f32 	%f48, 0f00000000;
	.loc 1 114 1
	st.local.v4.f32 	[%rd4], {%f48, %f48, %f48, %f48};
	.loc 1 115 1
	st.local.u64 	[%rd4+16], %rd19;
	cvta.to.local.u64 	%rd44, %rd43;
	.loc 1 117 1
	ld.local.v2.f32 	{%f50, %f51}, [%rd44+24];
	.loc 1 116 1
	ld.local.v2.f32 	{%f52, %f53}, [%rd44+32];
	ld.local.v2.f32 	{%f54, %f55}, [%rd44+48];
	ld.local.v2.f32 	{%f58, %f59}, [%rd44+40];
	st.local.v4.f32 	[%rd4+32], {%f58, %f59, %f54, %f55};
	st.local.v2.f32 	[%rd4+24], {%f52, %f53};
	.loc 1 117 1
	st.local.v2.f32 	[%rd4+48], {%f50, %f51};
	.loc 1 118 1
	st.local.u32 	[%rd4+56], %r46;
	.loc 1 58 1
	ld.local.u32 	%r58, [%rd2+24];
	add.s32 	%r59, %r58, -1;
	.loc 1 64 1
	mul.wide.s32 	%rd45, %r59, 112;
	ld.global.u32 	%r54, [top_object];
	.loc 1 64 1
	add.s64 	%rd46, %rd45, %rd2;
	ld.local.f32 	%f49, [%rd46+128];
	ld.global.u32 	%r55, [radiance_ray_type];
	ld.local.v4.f32 	{%f66, %f67, %f68, %f69}, [%rd46+32];
	ld.local.v4.f32 	{%f70, %f71, %f72, %f73}, [%rd46+80];
	.loc 3 306 1
	// inline asm
	call _rt_trace_64, (%r54, %f66, %f67, %f68, %f70, %f71, %f72, %r55, %f48, %f49, %rd32, %r56);
	// inline asm
	.loc 1 122 1
	ld.local.u32 	%r60, [%rd1+4];
	setp.eq.s32	%p2, %r60, 0;
	@%p2 bra 	BB14_5;

	.loc 1 123 1
	ld.local.f32 	%f1, [%rd4+56];
	.loc 1 71 1
	ld.global.u32 	%r61, [frame_number];
	setp.eq.s32	%p3, %r61, 0;
	ld.global.v2.u32 	{%r62, %r63}, [launch_index];
	setp.ge.s32	%p4, %r62, %r1;
	and.pred  	%p5, %p3, %p4;
	add.s32 	%r64, %r2, %r1;
	setp.lt.s32	%p6, %r62, %r64;
	and.pred  	%p7, %p5, %p6;
	setp.ge.s32	%p8, %r63, %r1;
	and.pred  	%p9, %p7, %p8;
	add.s32 	%r65, %r3, %r1;
	setp.lt.s32	%p10, %r63, %r65;
	and.pred  	%p11, %p9, %p10;
	@!%p11 bra 	BB14_5;
	bra.uni 	BB14_4;

BB14_4:
	.loc 1 75 1
	sub.s32 	%r68, %r63, %r1;
	sub.s32 	%r69, %r62, %r1;
	.loc 1 76 1
	mad.lo.s32 	%r70, %r68, %r2, %r69;
	.loc 1 77 1
	cvt.s64.s32	%rd49, %r70;
	cvta.global.u64 	%rd48, distance_buffer;
	mov.u32 	%r67, 4;
	.loc 3 217 1
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r9, %r67, %rd49, %rd11, %rd11, %rd11);
	// inline asm
	.loc 1 77 4
	st.f32 	[%rd47], %f1;

BB14_5:
	.loc 1 125 1
	ld.local.u32 	%r71, [%rd1];
	setp.eq.s32	%p12, %r71, 0;
	@%p12 bra 	BB14_12;

	.loc 1 127 1
	ld.local.u32 	%r85, [%rd2+24];
	setp.eq.s32	%p13, %r85, 0;
	@%p13 bra 	BB14_8;

BB14_7:
	.loc 1 58 1
	add.s32 	%r75, %r85, -1;
	.loc 1 64 1
	mul.wide.s32 	%rd54, %r75, 112;
	ld.global.u32 	%r72, [top_object];
	.loc 1 64 1
	add.s64 	%rd55, %rd54, %rd2;
	ld.local.f32 	%f81, [%rd55+128];
	ld.global.u32 	%r73, [radiance_ray_type];
	ld.local.v4.f32 	{%f82, %f83, %f84, %f85}, [%rd55+32];
	ld.local.v4.f32 	{%f86, %f87, %f88, %f89}, [%rd55+80];
	.loc 3 306 1
	// inline asm
	call _rt_trace_64, (%r72, %f82, %f83, %f84, %f86, %f87, %f88, %r73, %f48, %f81, %rd32, %r56);
	// inline asm
	.loc 1 127 1
	ld.local.u32 	%r85, [%rd2+24];
	setp.ne.s32	%p14, %r85, 0;
	@%p14 bra 	BB14_7;

BB14_8:
	mov.f32 	%f90, 0f3F800000;
	.loc 1 135 1
	ld.local.v4.f32 	{%f91, %f92, %f93, %f94}, [%rd4];
	.loc 1 132 1
	sub.f32 	%f96, %f90, %f94;
	st.local.f32 	[%rd4+12], %f96;
	.loc 1 135 1
	ld.local.v2.f32 	{%f97, %f98}, [%rd1+48];
	.loc 5 2765 10
	min.f32 	%f101, %f91, %f97;
	min.f32 	%f103, %f92, %f97;
	min.f32 	%f105, %f93, %f97;
	min.f32 	%f106, %f96, %f97;
	st.local.v4.f32 	[%rd4], {%f101, %f103, %f105, %f106};
	.loc 1 46 1
	ld.local.v4.f32 	{%f107, %f108, %f109, %f110}, [%rd4];
	mul.f32 	%f111, %f108, 0f3F371759;
	fma.rn.f32 	%f112, %f107, 0f3E59B3D0, %f111;
	fma.rn.f32 	%f113, %f109, 0f3D93DD98, %f112;
	fma.rn.f32 	%f6, %f110, 0f00000000, %f113;
	.loc 1 47 1
	setp.gtu.f32	%p15, %f6, %f98;
	@%p15 bra 	BB14_10;

	.loc 1 48 1
	ld.local.v4.f32 	{%f114, %f115, %f116, %f117}, [%rd4];
	mov.f32 	%f130, %f117;
	mov.f32 	%f129, %f116;
	mov.f32 	%f128, %f115;
	mov.f32 	%f127, %f114;
	bra.uni 	BB14_11;

BB14_10:
	.loc 5 3608 3
	div.rn.f32 	%f118, %f98, %f6;
	.loc 1 52 1
	mul.f32 	%f127, %f107, %f118;
	mul.f32 	%f128, %f108, %f118;
	mul.f32 	%f129, %f109, %f118;
	mov.f32 	%f130, %f110;

BB14_11:
	.loc 1 136 54
	st.local.v4.f32 	[%rd4], {%f127, %f128, %f129, %f130};
	.loc 1 139 1
	shl.b32 	%r78, %r1, 1;
	add.s32 	%r79, %r2, %r78;
	ld.global.v2.u32 	{%r80, %r81}, [launch_index];
	mad.lo.s32 	%r84, %r81, %r79, %r80;
	.loc 1 140 1
	cvt.u64.u32	%rd58, %r84;
	cvta.global.u64 	%rd57, color_buffer;
	mov.u32 	%r77, 16;
	.loc 3 217 1
	// inline asm
	call (%rd56), _rt_buffer_get_64, (%rd57, %r9, %r77, %rd58, %rd11, %rd11, %rd11);
	// inline asm
	.loc 1 140 4
	ld.local.v4.f32 	{%f119, %f120, %f121, %f122}, [%rd4];
	st.v4.f32 	[%rd56], {%f119, %f120, %f121, %f122};

BB14_12:
	.loc 1 142 2
	ret;
}

.visible .func _ZN3rtt7stellar6MLCRayC1Ev(
	.param .b64 _ZN3rtt7stellar6MLCRayC1Ev_param_0
)
{



	.loc 8 72 2
	ret;
}

.visible .func  (.param .b64 func_retval0) _ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv(
	.param .b64 _ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0
)
{
	.reg .s64 	%rd<3>;


	ld.param.u64 	%rd1, [_ZN3rtt7stellar14OptixBufferPtrIPKvE9asPointerEv_param_0];
	.loc 7 66 1
	ld.u64 	%rd2, [%rd1];
	st.param.b64	[func_retval0+0], %rd2;
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_base_idEiifffi(
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_0,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_1,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_2,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_3,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_4,
	.param .b32 _ZN5optix22rt_texture_get_base_idEiifffi_param_5
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<8>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_base_idEiifffi_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_base_idEiifffi_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_base_idEiifffi_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_base_idEiifffi_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_base_idEiifffi_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_base_idEiifffi_param_5];
	.loc 3 103 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_base_id, (%r1, %r2, %f5, %f6, %f7, %r3);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 113 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix23rt_texture_get_level_idEiifffif(
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_0,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_1,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_2,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_3,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_4,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_5,
	.param .b32 _ZN5optix23rt_texture_get_level_idEiifffif_param_6
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<9>;


	ld.param.u32 	%r1, [_ZN5optix23rt_texture_get_level_idEiifffif_param_0];
	ld.param.u32 	%r2, [_ZN5optix23rt_texture_get_level_idEiifffif_param_1];
	ld.param.f32 	%f5, [_ZN5optix23rt_texture_get_level_idEiifffif_param_2];
	ld.param.f32 	%f6, [_ZN5optix23rt_texture_get_level_idEiifffif_param_3];
	ld.param.f32 	%f7, [_ZN5optix23rt_texture_get_level_idEiifffif_param_4];
	ld.param.u32 	%r3, [_ZN5optix23rt_texture_get_level_idEiifffif_param_5];
	ld.param.f32 	%f8, [_ZN5optix23rt_texture_get_level_idEiifffif_param_6];
	.loc 3 121 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_level_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 131 1
	ret;
}

.visible .func  (.param .align 16 .b8 func_retval0[16]) _ZN5optix22rt_texture_get_grad_idEiifffiffffff(
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10,
	.param .b32 _ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11
)
{
	.reg .s32 	%r<4>;
	.reg .f32 	%f<14>;


	ld.param.u32 	%r1, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_0];
	ld.param.u32 	%r2, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_1];
	ld.param.f32 	%f5, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_2];
	ld.param.f32 	%f6, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_3];
	ld.param.f32 	%f7, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_4];
	ld.param.u32 	%r3, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_5];
	ld.param.f32 	%f8, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_6];
	ld.param.f32 	%f9, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_7];
	ld.param.f32 	%f10, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_8];
	ld.param.f32 	%f11, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_9];
	ld.param.f32 	%f12, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_10];
	ld.param.f32 	%f13, [_ZN5optix22rt_texture_get_grad_idEiifffiffffff_param_11];
	.loc 3 139 1
	// inline asm
	call (%f1, %f2, %f3, %f4), _rt_texture_get_grad_id, (%r1, %r2, %f5, %f6, %f7, %r3, %f8, %f9, %f10, %f11, %f12, %f13);
	// inline asm
	st.param.f32	[func_retval0+0], %f1;
	st.param.f32	[func_retval0+4], %f2;
	st.param.f32	[func_retval0+8], %f3;
	st.param.f32	[func_retval0+12], %f4;
	.loc 3 149 1
	ret;
}


/*
 * Compiled with
 * MLCC - The StellarCode Compiler
 * Version 0.13-1 - Monocle
 * Copyright 2000-2015 Dassault Systemes 3DExcite GmbH
 */





.visible .func stlr_create_for_stellarcheck( .param.b64 res_17247, .param.b64 externs_17248, .param.b64 seed_910) {
              .reg.u64       tmp_17249;
              ld.param.u64   tmp_17249, [seed_910];
              .reg.s32       tmp_17250;
              ld.s32         tmp_17250, [tmp_17249];
              .reg.u64       tmp_17251;
              ld.param.u64   tmp_17251, [res_17247];
              st.s32         [tmp_17251], tmp_17250;
}

.visible .global .u64 g_create_for_stellarcheck = stlr_create_for_stellarcheck;

.visible .func stlr_main( .param.b64 res_17252, .param.b64 externs_17253, .param.b64 rs_13234, .param.b64 seed_13235, .param.b64 camera_instance_13236, .param.b64 pxPos_13237, .param.b64 imgRes_13238, .param.b64 regionOffset_13239, .param.b64 regionSize_13240, .param.b64 subPixelPos_13241) {
              .reg.u64       tmp_17254;
              ld.param.u64   tmp_17254, [externs_17253];
              .reg.u64       tmp_17255;
              ld.param.u64   tmp_17255, [imgRes_13238];
              .reg .f32      tmp_17256_0, tmp_17256_1;
              ld.v2.f32      {tmp_17256_0, tmp_17256_1}, [tmp_17255];
              .reg.u64       tmp_17257;
              ld.param.u64   tmp_17257, [regionSize_13240];
              .reg .f32      tmp_17258_0, tmp_17258_1;
              ld.v2.f32      {tmp_17258_0, tmp_17258_1}, [tmp_17257];
              .reg .f32      globalImgRes_13242_0, globalImgRes_13242_1;
              div.approx.ftz.f32 globalImgRes_13242_0, tmp_17256_0, tmp_17258_0;
              div.approx.ftz.f32 globalImgRes_13242_1, tmp_17256_1, tmp_17258_1;
              .reg.u64       tmp_17259;
              ld.param.u64   tmp_17259, [regionOffset_13239];
              .reg .f32      tmp_17260_0, tmp_17260_1;
              ld.v2.f32      {tmp_17260_0, tmp_17260_1}, [tmp_17259];
              .reg .f32      temp_13243_0, temp_13243_1;
              mul.ftz.f32    temp_13243_0, globalImgRes_13242_0, tmp_17260_0;
              mul.ftz.f32    temp_13243_1, globalImgRes_13242_1, tmp_17260_1;
              .reg.u64       tmp_17261;
              ld.param.u64   tmp_17261, [pxPos_13237];
              .reg .f32      tmp_17262_0, tmp_17262_1;
              ld.v2.f32      {tmp_17262_0, tmp_17262_1}, [tmp_17261];
              .reg .f32      globalPxPos_13244_0, globalPxPos_13244_1;
              add.ftz.f32    globalPxPos_13244_0, tmp_17262_0, temp_13243_0;
              add.ftz.f32    globalPxPos_13244_1, tmp_17262_1, temp_13243_1;
              .reg .f32      temp_16876_0, temp_16876_1;
              div.approx.ftz.f32 temp_16876_0, globalPxPos_13244_0, globalImgRes_13242_0;
              div.approx.ftz.f32 temp_16876_1, globalPxPos_13244_1, globalImgRes_13242_1;
              .reg .f32      temp_16878_0, temp_16878_1;
              mul.ftz.f32    temp_16878_0, 0F3f800000, globalImgRes_13242_0;
              mul.ftz.f32    temp_16878_1, 0F00000000, globalImgRes_13242_1;
              .reg .f32      temp_16882_0, temp_16882_1;
              mul.ftz.f32    temp_16882_0, globalImgRes_13242_0, globalImgRes_13242_0;
              mul.ftz.f32    temp_16882_1, globalImgRes_13242_1, globalImgRes_13242_1;
              .reg .f32      temp_16883_0, temp_16883_1;
              div.approx.ftz.f32 temp_16883_0, temp_16878_0, temp_16882_0;
              div.approx.ftz.f32 temp_16883_1, temp_16878_1, temp_16882_1;
              .reg .f32      temp_16885_0, temp_16885_1;
              mul.ftz.f32    temp_16885_0, 0F00000000, globalImgRes_13242_0;
              mul.ftz.f32    temp_16885_1, 0F3f800000, globalImgRes_13242_1;
              .reg .f32      temp_16889_0, temp_16889_1;
              div.approx.ftz.f32 temp_16889_0, temp_16885_0, temp_16882_0;
              div.approx.ftz.f32 temp_16889_1, temp_16885_1, temp_16882_1;
              .reg.u64       tmp_17263;
              ld.param.u64   tmp_17263, [regionSize_13240];
              .reg .f32      tmp_17264_0, tmp_17264_1;
              ld.v2.f32      {tmp_17264_0, tmp_17264_1}, [tmp_17263];
              .reg.u64       tmp_17265;
              ld.param.u64   tmp_17265, [imgRes_13238];
              .reg .f32      tmp_17266_0, tmp_17266_1;
              ld.v2.f32      {tmp_17266_0, tmp_17266_1}, [tmp_17265];
              .reg .f32      temp_13254_0, temp_13254_1;
              div.approx.ftz.f32 temp_13254_0, tmp_17264_0, tmp_17266_0;
              div.approx.ftz.f32 temp_13254_1, tmp_17264_1, tmp_17266_1;
              .reg.u64       tmp_17267;
              ld.param.u64   tmp_17267, [subPixelPos_13241];
              .reg .f32      tmp_17268_0, tmp_17268_1;
              ld.v2.f32      {tmp_17268_0, tmp_17268_1}, [tmp_17267];
              .reg .f32      temp_16891_0, temp_16891_1;
              mul.ftz.f32    temp_16891_0, tmp_17268_0, temp_13254_0;
              mul.ftz.f32    temp_16891_1, tmp_17268_1, temp_13254_1;
              .reg .f32      temp_16893_0, temp_16893_1;
              add.ftz.f32    temp_16893_0, temp_16876_0, temp_16891_0;
              add.ftz.f32    temp_16893_1, temp_16876_1, temp_16891_1;
              .reg.f32       temp_16898;
              and.b32        temp_16898, globalPxPos_13244_0, -2147483648;
              or.b32         temp_16898, temp_16898, 0F3f000000;
              add.ftz.f32    temp_16898, globalPxPos_13244_0, temp_16898;
              cvt.rzi.f32.f32 temp_16898, temp_16898;
              .reg.s32       temp_16899;
              cvt.rzi.ftz.s32.f32 temp_16899, temp_16898;
              .reg.f32       temp_16901;
              and.b32        temp_16901, globalPxPos_13244_1, -2147483648;
              or.b32         temp_16901, temp_16901, 0F3f000000;
              add.ftz.f32    temp_16901, globalPxPos_13244_1, temp_16901;
              cvt.rzi.f32.f32 temp_16901, temp_16901;
              .reg.s32       temp_16902;
              cvt.rzi.ftz.s32.f32 temp_16902, temp_16901;
              .reg.s32       temp_16903;
              abs.s32        temp_16903, temp_16899;
              .reg.s32       mod_idx_16904;
              rem.s32        mod_idx_16904, temp_16903, 256;
              .reg.s32       temp_16905;
              set.ge.s32.s32 temp_16905, temp_16899, 0;
              .reg.s32       temp_16906;
              set.ne.s32.s32 temp_16906, mod_idx_16904, 0;
              .reg.s32       temp_16907;
              sub.cc.s32     temp_16907, 256, mod_idx_16904;
              .reg.s32       temp_16908;
              .reg.pred      temp_16906_17269;
              setp.ne.s32    temp_16906_17269, 0, temp_16906;
              selp.s32       temp_16908, temp_16907, 0, temp_16906_17269;
              .reg.s32       temp_16909;
              .reg.pred      temp_16905_17270;
              setp.ne.s32    temp_16905_17270, 0, temp_16905;
              selp.s32       temp_16909, mod_idx_16904, temp_16908, temp_16905_17270;
              .reg.u64       tmp_17271;
              .reg.s32       optix_buffer_id_17272;
              mov.b64        {_, optix_buffer_id_17272}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17273;
{
              .reg.s32       abstract_17274;
              mov.b32        abstract_17274, 1;
              .reg.u64       const_17275;
              mov.b64        const_17275, 512;
              .reg.u64       const_17276;
              mov.b64        const_17276, 0;
 call (ptr_from_optix_id_17273), _rt_buffer_get_id_64, (optix_buffer_id_17272, abstract_17274, abstract_17274, const_17275, const_17276, const_17276, const_17276); // resolving optix id
}
              ld.u64         tmp_17271, [ptr_from_optix_id_17273];
              .reg.s32       tmp_17277;
              .reg.u64       off_17278;
              mad.wide.u32   off_17278, temp_16909, 4, 0;
              .reg.s32       optix_buffer_id_17279;
              mov.b64        {_, optix_buffer_id_17279}, tmp_17271;
              .reg.u64       ptr_from_optix_id_17280;
{
              .reg.s32       abstract_17281;
              mov.b32        abstract_17281, 1;
              .reg.u64       const_17282;
              mov.b64        const_17282, 512;
              .reg.u64       off_17283;
              add.u64        off_17283, const_17282, off_17278;
              .reg.u64       const_17284;
              mov.b64        const_17284, 0;
 call (ptr_from_optix_id_17280), _rt_buffer_get_id_64, (optix_buffer_id_17279, abstract_17281, abstract_17281, off_17283, const_17284, const_17284, const_17284); // resolving optix id
}
              ld.s32         tmp_17277, [ptr_from_optix_id_17280];
              .reg.s32       temp_16911;
              abs.s32        temp_16911, temp_16902;
              .reg.s32       mod_idx_16912;
              rem.s32        mod_idx_16912, temp_16911, 243;
              .reg.s32       temp_16913;
              set.ge.s32.s32 temp_16913, temp_16902, 0;
              .reg.s32       temp_16914;
              set.ne.s32.s32 temp_16914, mod_idx_16912, 0;
              .reg.s32       temp_16915;
              sub.cc.s32     temp_16915, 243, mod_idx_16912;
              .reg.s32       temp_16916;
              .reg.pred      temp_16914_17285;
              setp.ne.s32    temp_16914_17285, 0, temp_16914;
              selp.s32       temp_16916, temp_16915, 0, temp_16914_17285;
              .reg.s32       temp_16917;
              .reg.pred      temp_16913_17286;
              setp.ne.s32    temp_16913_17286, 0, temp_16913;
              selp.s32       temp_16917, mod_idx_16912, temp_16916, temp_16913_17286;
              .reg.u64       tmp_17287;
              .reg.s32       optix_buffer_id_17288;
              mov.b64        {_, optix_buffer_id_17288}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17289;
{
              .reg.s32       abstract_17290;
              mov.b32        abstract_17290, 1;
              .reg.u64       const_17291;
              mov.b64        const_17291, 520;
              .reg.u64       const_17292;
              mov.b64        const_17292, 0;
 call (ptr_from_optix_id_17289), _rt_buffer_get_id_64, (optix_buffer_id_17288, abstract_17290, abstract_17290, const_17291, const_17292, const_17292, const_17292); // resolving optix id
}
              ld.u64         tmp_17287, [ptr_from_optix_id_17289];
              .reg.s32       tmp_17293;
              .reg.u64       off_17294;
              mad.wide.u32   off_17294, temp_16917, 4, 0;
              .reg.s32       optix_buffer_id_17295;
              mov.b64        {_, optix_buffer_id_17295}, tmp_17287;
              .reg.u64       ptr_from_optix_id_17296;
{
              .reg.s32       abstract_17297;
              mov.b32        abstract_17297, 1;
              .reg.u64       const_17298;
              mov.b64        const_17298, 512;
              .reg.u64       off_17299;
              add.u64        off_17299, const_17298, off_17294;
              .reg.u64       const_17300;
              mov.b64        const_17300, 0;
 call (ptr_from_optix_id_17296), _rt_buffer_get_id_64, (optix_buffer_id_17295, abstract_17297, abstract_17297, off_17299, const_17300, const_17300, const_17300); // resolving optix id
}
              ld.s32         tmp_17293, [ptr_from_optix_id_17296];
              .reg.s32       temp_16919;
              add.cc.s32     temp_16919, tmp_17277, tmp_17293;
              .reg.s32       index_16920;
              rem.s32        index_16920, temp_16919, 62208;
              .reg.u64       tmp_17301;
              ld.param.u64   tmp_17301, [seed_13235];
              .reg.s32       tmp_17302;
              ld.s32         tmp_17302, [tmp_17301];
              .reg.s32       temp_16921;
              mul.lo.s32     temp_16921, tmp_17302, 62208;
              .reg.s32       temp_16922;
              add.cc.s32     temp_16922, index_16920, temp_16921;
              .reg .f32      temp_16924_0, temp_16924_1;
              sub.ftz.f32    temp_16924_0, temp_16893_0, 0F3f000000;
              sub.ftz.f32    temp_16924_1, temp_16893_1, 0F3f000000;
              .reg.u64       tmp_17303;
              ld.param.u64   tmp_17303, [camera_instance_13236];
              .reg.s32       tmp_17304;
              ld.s32         tmp_17304, [tmp_17303];
              .reg.u64       tmp_17305;
              .reg.s32       optix_buffer_id_17306;
              mov.b64        {_, optix_buffer_id_17306}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17307;
{
              .reg.s32       abstract_17308;
              mov.b32        abstract_17308, 1;
              .reg.u64       const_17309;
              mov.b64        const_17309, 528;
              .reg.u64       const_17310;
              mov.b64        const_17310, 0;
 call (ptr_from_optix_id_17307), _rt_buffer_get_id_64, (optix_buffer_id_17306, abstract_17308, abstract_17308, const_17309, const_17310, const_17310, const_17310); // resolving optix id
}
              ld.u64         tmp_17305, [ptr_from_optix_id_17307];
              .reg .f32      tmp_17311_0, tmp_17311_1;
              .reg.u64       off_17312;
              mad.wide.u32   off_17312, tmp_17304, 192, 168;
              .reg.s32       optix_buffer_id_17313;
              mov.b64        {_, optix_buffer_id_17313}, tmp_17305;
              .reg.u64       ptr_from_optix_id_17314;
{
              .reg.s32       abstract_17315;
              mov.b32        abstract_17315, 1;
              .reg.u64       const_17316;
              mov.b64        const_17316, 512;
              .reg.u64       off_17317;
              add.u64        off_17317, const_17316, off_17312;
              .reg.u64       const_17318;
              mov.b64        const_17318, 0;
 call (ptr_from_optix_id_17314), _rt_buffer_get_id_64, (optix_buffer_id_17313, abstract_17315, abstract_17315, off_17317, const_17318, const_17318, const_17318); // resolving optix id
}
              ld.v2.f32      {tmp_17311_0, tmp_17311_1}, [ptr_from_optix_id_17314];
              .reg .f32      temp_16926_0, temp_16926_1;
              mul.ftz.f32    temp_16926_0, temp_16924_0, tmp_17311_0;
              mul.ftz.f32    temp_16926_1, temp_16924_1, tmp_17311_1;
              .reg .f32      temp_16927_0, temp_16927_1;
              mul.ftz.f32    temp_16927_0, temp_16883_0, tmp_17311_0;
              mul.ftz.f32    temp_16927_1, temp_16883_1, tmp_17311_1;
              .reg .f32      temp_16928_0, temp_16928_1;
              mul.ftz.f32    temp_16928_0, temp_16889_0, tmp_17311_0;
              mul.ftz.f32    temp_16928_1, temp_16889_1, tmp_17311_1;
              .reg.u64       tmp_17319;
              ld.param.u64   tmp_17319, [camera_instance_13236];
              .reg.s32       tmp_17320;
              ld.s32         tmp_17320, [tmp_17319];
              .reg.u64       tmp_17321;
              .reg.s32       optix_buffer_id_17322;
              mov.b64        {_, optix_buffer_id_17322}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17323;
{
              .reg.s32       abstract_17324;
              mov.b32        abstract_17324, 1;
              .reg.u64       const_17325;
              mov.b64        const_17325, 528;
              .reg.u64       const_17326;
              mov.b64        const_17326, 0;
 call (ptr_from_optix_id_17323), _rt_buffer_get_id_64, (optix_buffer_id_17322, abstract_17324, abstract_17324, const_17325, const_17326, const_17326, const_17326); // resolving optix id
}
              ld.u64         tmp_17321, [ptr_from_optix_id_17323];
              .reg.f32       tmp_17327;
              .reg.u64       off_17328;
              mad.wide.u32   off_17328, tmp_17320, 192, 144;
              .reg.s32       optix_buffer_id_17329;
              mov.b64        {_, optix_buffer_id_17329}, tmp_17321;
              .reg.u64       ptr_from_optix_id_17330;
{
              .reg.s32       abstract_17331;
              mov.b32        abstract_17331, 1;
              .reg.u64       const_17332;
              mov.b64        const_17332, 512;
              .reg.u64       off_17333;
              add.u64        off_17333, const_17332, off_17328;
              .reg.u64       const_17334;
              mov.b64        const_17334, 0;
 call (ptr_from_optix_id_17330), _rt_buffer_get_id_64, (optix_buffer_id_17329, abstract_17331, abstract_17331, off_17333, const_17334, const_17334, const_17334); // resolving optix id
}
              ld.f32         tmp_17327, [ptr_from_optix_id_17330];
              .reg.f32       temp_16936;
              neg.ftz.f32    temp_16936, tmp_17327;
              .reg.u64       tmp_17335;
              ld.param.u64   tmp_17335, [camera_instance_13236];
              .reg.s32       tmp_17336;
              ld.s32         tmp_17336, [tmp_17335];
              .reg.u64       tmp_17337;
              .reg.s32       optix_buffer_id_17338;
              mov.b64        {_, optix_buffer_id_17338}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17339;
{
              .reg.s32       abstract_17340;
              mov.b32        abstract_17340, 1;
              .reg.u64       const_17341;
              mov.b64        const_17341, 528;
              .reg.u64       const_17342;
              mov.b64        const_17342, 0;
 call (ptr_from_optix_id_17339), _rt_buffer_get_id_64, (optix_buffer_id_17338, abstract_17340, abstract_17340, const_17341, const_17342, const_17342, const_17342); // resolving optix id
}
              ld.u64         tmp_17337, [ptr_from_optix_id_17339];
              .reg.f32       tmp_17343;
              .reg.u64       off_17344;
              mad.wide.u32   off_17344, tmp_17336, 192, 152;
              .reg.s32       optix_buffer_id_17345;
              mov.b64        {_, optix_buffer_id_17345}, tmp_17337;
              .reg.u64       ptr_from_optix_id_17346;
{
              .reg.s32       abstract_17347;
              mov.b32        abstract_17347, 1;
              .reg.u64       const_17348;
              mov.b64        const_17348, 512;
              .reg.u64       off_17349;
              add.u64        off_17349, const_17348, off_17344;
              .reg.u64       const_17350;
              mov.b64        const_17350, 0;
 call (ptr_from_optix_id_17346), _rt_buffer_get_id_64, (optix_buffer_id_17345, abstract_17347, abstract_17347, off_17349, const_17350, const_17350, const_17350); // resolving optix id
}
              ld.f32         tmp_17343, [ptr_from_optix_id_17346];
              .reg.s32       temp_16941;
              set.gt.ftz.s32.f32 temp_16941, tmp_17343, 0F00000000;
              .reg.s32       scl_16942;
              .reg .f32      scl_16943_0, scl_16943_1, scl_16943_2;
              .reg .f32      scl_16944_0, scl_16944_1, scl_16944_2;
              .reg .f32      scl_16945_0, scl_16945_1, scl_16945_2;
              .reg .f32      scl_16946_0, scl_16946_1, scl_16946_2;
              .reg .f32      scl_16947_0, scl_16947_1, scl_16947_2;
              .reg .f32      scl_16948_0, scl_16948_1, scl_16948_2;
              .reg.pred      temp_16941_17353;
              setp.ne.s32    temp_16941_17353, 0, temp_16941;
  @!temp_16941_17353 bra     else_17351;
              .reg.u64       tmp_17354;
              ld.param.u64   tmp_17354, [camera_instance_13236];
              .reg.s32       tmp_17355;
              ld.s32         tmp_17355, [tmp_17354];
              .reg.u64       tmp_17356;
              .reg.s32       optix_buffer_id_17357;
              mov.b64        {_, optix_buffer_id_17357}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17358;
{
              .reg.s32       abstract_17359;
              mov.b32        abstract_17359, 1;
              .reg.u64       const_17360;
              mov.b64        const_17360, 528;
              .reg.u64       const_17361;
              mov.b64        const_17361, 0;
 call (ptr_from_optix_id_17358), _rt_buffer_get_id_64, (optix_buffer_id_17357, abstract_17359, abstract_17359, const_17360, const_17361, const_17361, const_17361); // resolving optix id
}
              ld.u64         tmp_17356, [ptr_from_optix_id_17358];
              .reg.s32       tmp_17362;
              .reg.u64       off_17363;
              mad.wide.u32   off_17363, tmp_17355, 192, 156;
              .reg.s32       optix_buffer_id_17364;
              mov.b64        {_, optix_buffer_id_17364}, tmp_17356;
              .reg.u64       ptr_from_optix_id_17365;
{
              .reg.s32       abstract_17366;
              mov.b32        abstract_17366, 1;
              .reg.u64       const_17367;
              mov.b64        const_17367, 512;
              .reg.u64       off_17368;
              add.u64        off_17368, const_17367, off_17363;
              .reg.u64       const_17369;
              mov.b64        const_17369, 0;
 call (ptr_from_optix_id_17365), _rt_buffer_get_id_64, (optix_buffer_id_17364, abstract_17366, abstract_17366, off_17368, const_17369, const_17369, const_17369); // resolving optix id
}
              ld.s32         tmp_17362, [ptr_from_optix_id_17365];
              .reg.u64       tmp_17370;
              ld.param.u64   tmp_17370, [camera_instance_13236];
              .reg.s32       tmp_17371;
              ld.s32         tmp_17371, [tmp_17370];
              .reg.u64       tmp_17372;
              .reg.s32       optix_buffer_id_17373;
              mov.b64        {_, optix_buffer_id_17373}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17374;
{
              .reg.s32       abstract_17375;
              mov.b32        abstract_17375, 1;
              .reg.u64       const_17376;
              mov.b64        const_17376, 528;
              .reg.u64       const_17377;
              mov.b64        const_17377, 0;
 call (ptr_from_optix_id_17374), _rt_buffer_get_id_64, (optix_buffer_id_17373, abstract_17375, abstract_17375, const_17376, const_17377, const_17377, const_17377); // resolving optix id
}
              ld.u64         tmp_17372, [ptr_from_optix_id_17374];
              .reg.f32       tmp_17378;
              .reg.u64       off_17379;
              mad.wide.u32   off_17379, tmp_17371, 192, 160;
              .reg.s32       optix_buffer_id_17380;
              mov.b64        {_, optix_buffer_id_17380}, tmp_17372;
              .reg.u64       ptr_from_optix_id_17381;
{
              .reg.s32       abstract_17382;
              mov.b32        abstract_17382, 1;
              .reg.u64       const_17383;
              mov.b64        const_17383, 512;
              .reg.u64       off_17384;
              add.u64        off_17384, const_17383, off_17379;
              .reg.u64       const_17385;
              mov.b64        const_17385, 0;
 call (ptr_from_optix_id_17381), _rt_buffer_get_id_64, (optix_buffer_id_17380, abstract_17382, abstract_17382, off_17384, const_17385, const_17385, const_17385); // resolving optix id
}
              ld.f32         tmp_17378, [ptr_from_optix_id_17381];
              .reg.s32       temp_17088;
              set.gt.s32.s32 temp_17088, temp_16922, 0;
              .reg.f32       ilwerse_17089;
              .reg.pred      temp_17088_17388;
              setp.ne.s32    temp_17088_17388, 0, temp_17088;
  @!temp_17088_17388 bra     else_17386;
              .reg.f32       digit_17196;
              mov.b32        digit_17196, 0F3e4ccccd;
              .reg.s32       i_17197;
              mov.b32        i_17197, temp_16922;
              .reg.f32       ilwerse_17198;
              mov.b32        ilwerse_17198, 0F00000000;
              .reg.f32       ilwerse_17195;
doloop_17389:
              .reg.s32       temp_17199;
              rem.s32        temp_17199, i_17197, 5;
              .reg.f32       temp_17200;
              cvt.rn.f32.s32 temp_17200, temp_17199;
              .reg.f32       temp_17201;
              mul.ftz.f32    temp_17201, digit_17196, temp_17200;
              .reg.f32       ilwerse_17202;
              add.ftz.f32    ilwerse_17202, ilwerse_17198, temp_17201;
              .reg.f32       digit_17203;
              mul.ftz.f32    digit_17203, digit_17196, 0F3e4ccccd;
              .reg.s32       i_17204;
              div.s32        i_17204, i_17197, 5;
              .reg.s32       temp_17205;
              set.gt.s32.s32 temp_17205, i_17204, 0;
              mov.b32        ilwerse_17195, ilwerse_17202;
              mov.b32        digit_17196, digit_17203;
              mov.b32        i_17197, i_17204;
              mov.b32        ilwerse_17198, ilwerse_17202;
              .reg.pred      temp_17205_17390;
              setp.ne.s32    temp_17205_17390, 0, temp_17205;
  @temp_17205_17390 bra      doloop_17389;
              mov.b32        ilwerse_17089, ilwerse_17195;
              bra.uni        merge_17387;
else_17386:
              mov.b32        ilwerse_17089, 0F00000000;
merge_17387:
              .reg.f32       ilwerse_17090;
              .reg.pred      temp_17088_17393;
              setp.ne.s32    temp_17088_17393, 0, temp_17088;
  @!temp_17088_17393 bra     else_17391;
              .reg.f32       digit_17185;
              mov.b32        digit_17185, 0F3e124925;
              .reg.s32       i_17186;
              mov.b32        i_17186, temp_16922;
              .reg.f32       ilwerse_17187;
              mov.b32        ilwerse_17187, 0F00000000;
              .reg.f32       ilwerse_17184;
doloop_17394:
              .reg.s32       temp_17188;
              rem.s32        temp_17188, i_17186, 7;
              .reg.f32       temp_17189;
              cvt.rn.f32.s32 temp_17189, temp_17188;
              .reg.f32       temp_17190;
              mul.ftz.f32    temp_17190, digit_17185, temp_17189;
              .reg.f32       ilwerse_17191;
              add.ftz.f32    ilwerse_17191, ilwerse_17187, temp_17190;
              .reg.f32       digit_17192;
              mul.ftz.f32    digit_17192, digit_17185, 0F3e124925;
              .reg.s32       i_17193;
              div.s32        i_17193, i_17186, 7;
              .reg.s32       temp_17194;
              set.gt.s32.s32 temp_17194, i_17193, 0;
              mov.b32        ilwerse_17184, ilwerse_17191;
              mov.b32        digit_17185, digit_17192;
              mov.b32        i_17186, i_17193;
              mov.b32        ilwerse_17187, ilwerse_17191;
              .reg.pred      temp_17194_17395;
              setp.ne.s32    temp_17194_17395, 0, temp_17194;
  @temp_17194_17395 bra      doloop_17394;
              mov.b32        ilwerse_17090, ilwerse_17184;
              bra.uni        merge_17392;
else_17391:
              mov.b32        ilwerse_17090, 0F00000000;
merge_17392:
              .reg.s32       temp_17091;
              set.lt.s32.s32 temp_17091, tmp_17362, 3;
              .reg .f32      pos_xy_17092_0, pos_xy_17092_1;
              .reg.pred      temp_17091_17398;
              setp.ne.s32    temp_17091_17398, 0, temp_17091;
  @!temp_17091_17398 bra     else_17396;
              .reg.f32       r_17175;
              sqrt.approx.f32 r_17175, ilwerse_17089;
              .reg.f32       theta_17176;
              mul.ftz.f32    theta_17176, 0F40c90fdb, ilwerse_17090;
              .reg.f32       sin_17177;
              sin.approx.ftz.f32 sin_17177, theta_17176;
              .reg.f32       temp_17178;
              cos.approx.ftz.f32 temp_17178, theta_17176;
              .reg.f32       a_17179;
              mul.ftz.f32    a_17179, r_17175, temp_17178;
              .reg.f32       b_17180;
              mul.ftz.f32    b_17180, r_17175, sin_17177;
              .reg .f32      temp_17183_0, temp_17183_1;
              mul.ftz.f32    temp_17183_0, tmp_17343, a_17179;
              mul.ftz.f32    temp_17183_1, tmp_17343, b_17180;
              mov.b32        pos_xy_17092_0, temp_17183_0;
              mov.b32        pos_xy_17092_1, temp_17183_1;
              bra.uni        merge_17397;
else_17396:
              .reg.f32       temp_17145;
              cvt.rn.f32.s32 temp_17145, tmp_17362;
              .reg.f32       temp_17146;
              mul.ftz.f32    temp_17146, ilwerse_17089, temp_17145;
              .reg.s32       temp_17147;
              cvt.rzi.ftz.s32.f32 temp_17147, temp_17146;
              .reg.s32       triIndex_17148;
              rem.s32        triIndex_17148, temp_17147, tmp_17362;
              .reg.f32       temp_17149;
              cvt.rn.f32.s32 temp_17149, triIndex_17148;
              .reg.f32       temp_17150;
              div.approx.ftz.f32 temp_17150, temp_17149, temp_17145;
              .reg.f32       temp_17151;
              sub.ftz.f32    temp_17151, ilwerse_17089, temp_17150;
              .reg.f32       r0_17152;
              mul.ftz.f32    r0_17152, temp_17151, temp_17145;
              .reg.f32       deltaAngle_17153;
              div.approx.ftz.f32 deltaAngle_17153, 0F40c90fdb, temp_17145;
              .reg.f32       temp_17154;
              mul.ftz.f32    temp_17154, temp_17149, deltaAngle_17153;
              .reg.f32       startAngle_17155;
              add.ftz.f32    startAngle_17155, temp_17154, tmp_17378;
              .reg.f32       temp_17156;
              sin.approx.ftz.f32 temp_17156, startAngle_17155;
              .reg.f32       cos_17157;
              cos.approx.ftz.f32 cos_17157, startAngle_17155;
              .reg.f32       temp_17159;
              add.ftz.f32    temp_17159, startAngle_17155, deltaAngle_17153;
              .reg.f32       temp_17160;
              sin.approx.ftz.f32 temp_17160, temp_17159;
              .reg.f32       cos_17161;
              cos.approx.ftz.f32 cos_17161, temp_17159;
              .reg.f32       r0_17163;
              sqrt.approx.f32 r0_17163, r0_17152;
              .reg.f32       temp_17164;
              sub.ftz.f32    temp_17164, 0F3f800000, ilwerse_17090;
              .reg.f32       u_17165;
              mul.ftz.f32    u_17165, temp_17164, r0_17163;
              .reg.f32       v_17166;
              mul.ftz.f32    v_17166, ilwerse_17090, r0_17163;
              .reg .f32      temp_17168_0, temp_17168_1, temp_17168_2;
              mul.ftz.f32    temp_17168_0, u_17165, temp_17156;
              mul.ftz.f32    temp_17168_1, u_17165, cos_17157;
              mul.ftz.f32    temp_17168_2, u_17165, 0F00000000;
              .reg .f32      temp_17170_0, temp_17170_1, temp_17170_2;
              mul.ftz.f32    temp_17170_0, v_17166, temp_17160;
              mul.ftz.f32    temp_17170_1, v_17166, cos_17161;
              mul.ftz.f32    temp_17170_2, v_17166, 0F00000000;
              .reg .f32      temp_17171_0, temp_17171_1, temp_17171_2;
              add.ftz.f32    temp_17171_0, temp_17168_0, temp_17170_0;
              add.ftz.f32    temp_17171_1, temp_17168_1, temp_17170_1;
              add.ftz.f32    temp_17171_2, temp_17168_2, temp_17170_2;
              .reg .f32      temp_17174_0, temp_17174_1;
              mul.ftz.f32    temp_17174_0, tmp_17343, temp_17171_0;
              mul.ftz.f32    temp_17174_1, tmp_17343, temp_17171_1;
              mov.b32        pos_xy_17092_0, temp_17174_0;
              mov.b32        pos_xy_17092_1, temp_17174_1;
merge_17397:
              .reg.u64       tmp_17399;
              ld.param.u64   tmp_17399, [camera_instance_13236];
              .reg.s32       tmp_17400;
              ld.s32         tmp_17400, [tmp_17399];
              .reg.u64       tmp_17401;
              .reg.s32       optix_buffer_id_17402;
              mov.b64        {_, optix_buffer_id_17402}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17403;
{
              .reg.s32       abstract_17404;
              mov.b32        abstract_17404, 1;
              .reg.u64       const_17405;
              mov.b64        const_17405, 528;
              .reg.u64       const_17406;
              mov.b64        const_17406, 0;
 call (ptr_from_optix_id_17403), _rt_buffer_get_id_64, (optix_buffer_id_17402, abstract_17404, abstract_17404, const_17405, const_17406, const_17406, const_17406); // resolving optix id
}
              ld.u64         tmp_17401, [ptr_from_optix_id_17403];
              .reg.f32       tmp_17407;
              .reg.u64       off_17408;
              mad.wide.u32   off_17408, tmp_17400, 192, 148;
              .reg.s32       optix_buffer_id_17409;
              mov.b64        {_, optix_buffer_id_17409}, tmp_17401;
              .reg.u64       ptr_from_optix_id_17410;
{
              .reg.s32       abstract_17411;
              mov.b32        abstract_17411, 1;
              .reg.u64       const_17412;
              mov.b64        const_17412, 512;
              .reg.u64       off_17413;
              add.u64        off_17413, const_17412, off_17408;
              .reg.u64       const_17414;
              mov.b64        const_17414, 0;
 call (ptr_from_optix_id_17410), _rt_buffer_get_id_64, (optix_buffer_id_17409, abstract_17411, abstract_17411, off_17413, const_17414, const_17414, const_17414); // resolving optix id
}
              ld.f32         tmp_17407, [ptr_from_optix_id_17410];
              .reg.f32       t_17099;
              div.approx.ftz.f32 t_17099, tmp_17407, tmp_17327;
              .reg.f32       temp_17100;
              neg.ftz.f32    temp_17100, pos_xy_17092_0;
              .reg.f32       temp_17101;
              neg.ftz.f32    temp_17101, pos_xy_17092_1;
              .reg .f32      temp_17104_0, temp_17104_1, temp_17104_2;
              mul.ftz.f32    temp_17104_0, temp_16926_0, t_17099;
              mul.ftz.f32    temp_17104_1, temp_16926_1, t_17099;
              mul.ftz.f32    temp_17104_2, temp_16936, t_17099;
              .reg .f32      temp_17105_0, temp_17105_1, temp_17105_2;
              mul.ftz.f32    temp_17105_0, temp_16927_0, t_17099;
              mul.ftz.f32    temp_17105_1, temp_16927_1, t_17099;
              mul.ftz.f32    temp_17105_2, 0F00000000, t_17099;
              .reg .f32      temp_17106_0, temp_17106_1, temp_17106_2;
              mul.ftz.f32    temp_17106_0, temp_16928_0, t_17099;
              mul.ftz.f32    temp_17106_1, temp_16928_1, t_17099;
              mul.ftz.f32    temp_17106_2, 0F00000000, t_17099;
              .reg .f32      temp_17107_0, temp_17107_1, temp_17107_2;
              add.ftz.f32    temp_17107_0, temp_17100, temp_17104_0;
              add.ftz.f32    temp_17107_1, temp_17101, temp_17104_1;
              add.ftz.f32    temp_17107_2, 0F00000000, temp_17104_2;
              .reg .f32      temp_17108_0, temp_17108_1, temp_17108_2;
              mul.ftz.f32    temp_17108_0, temp_17107_0, temp_17107_0;
              mul.ftz.f32    temp_17108_1, temp_17107_1, temp_17107_1;
              mul.ftz.f32    temp_17108_2, temp_17107_2, temp_17107_2;
              .reg .f32      temp_17109_0, temp_17109_1, temp_17109_2;
              mul.ftz.f32    temp_17109_0, temp_17105_0, temp_17107_0;
              mul.ftz.f32    temp_17109_1, temp_17105_1, temp_17107_1;
              mul.ftz.f32    temp_17109_2, temp_17105_2, temp_17107_2;
              .reg .f32      temp_17110_0, temp_17110_1, temp_17110_2;
              mul.ftz.f32    temp_17110_0, temp_17107_0, temp_17105_0;
              mul.ftz.f32    temp_17110_1, temp_17107_1, temp_17105_1;
              mul.ftz.f32    temp_17110_2, temp_17107_2, temp_17105_2;
              .reg .f32      temp_17111_0, temp_17111_1, temp_17111_2;
              add.ftz.f32    temp_17111_0, temp_17109_0, temp_17110_0;
              add.ftz.f32    temp_17111_1, temp_17109_1, temp_17110_1;
              add.ftz.f32    temp_17111_2, temp_17109_2, temp_17110_2;
              .reg .f32      temp_17112_0, temp_17112_1, temp_17112_2;
              mul.ftz.f32    temp_17112_0, temp_17106_0, temp_17107_0;
              mul.ftz.f32    temp_17112_1, temp_17106_1, temp_17107_1;
              mul.ftz.f32    temp_17112_2, temp_17106_2, temp_17107_2;
              .reg .f32      temp_17113_0, temp_17113_1, temp_17113_2;
              mul.ftz.f32    temp_17113_0, temp_17107_0, temp_17106_0;
              mul.ftz.f32    temp_17113_1, temp_17107_1, temp_17106_1;
              mul.ftz.f32    temp_17113_2, temp_17107_2, temp_17106_2;
              .reg .f32      temp_17114_0, temp_17114_1, temp_17114_2;
              add.ftz.f32    temp_17114_0, temp_17112_0, temp_17113_0;
              add.ftz.f32    temp_17114_1, temp_17112_1, temp_17113_1;
              add.ftz.f32    temp_17114_2, temp_17112_2, temp_17113_2;
              .reg.f32       temp_17121;
              add.ftz.f32    temp_17121, temp_17108_0, temp_17108_1;
              .reg.f32       temp_17122;
              add.ftz.f32    temp_17122, temp_17111_0, temp_17111_1;
              .reg.f32       temp_17123;
              add.ftz.f32    temp_17123, temp_17114_0, temp_17114_1;
              .reg.f32       temp_17127;
              add.ftz.f32    temp_17127, temp_17121, temp_17108_2;
              .reg.f32       temp_17128;
              add.ftz.f32    temp_17128, temp_17122, temp_17111_2;
              .reg.f32       temp_17129;
              add.ftz.f32    temp_17129, temp_17123, temp_17114_2;
              .reg.f32       temp_17130;
              lg2.approx.ftz.f32 temp_17130, temp_17127;
              mul.ftz.f32    temp_17130, temp_17130, 0Fbfc00000;
              ex2.approx.ftz.f32 temp_17130, temp_17130;
              .reg.f32       f_17131;
              mul.ftz.f32    f_17131, 0Fbf000000, temp_17130;
              .reg.f32       temp_17132;
              rsqrt.approx.ftz.f32 temp_17132, temp_17127;
              .reg.f32       temp_17133;
              mul.ftz.f32    temp_17133, f_17131, temp_17128;
              .reg.f32       temp_17134;
              mul.ftz.f32    temp_17134, f_17131, temp_17129;
              .reg .f32      temp_17138_0, temp_17138_1, temp_17138_2;
              mul.ftz.f32    temp_17138_0, temp_17107_0, temp_17132;
              mul.ftz.f32    temp_17138_1, temp_17107_1, temp_17132;
              mul.ftz.f32    temp_17138_2, temp_17107_2, temp_17132;
              .reg .f32      temp_17139_0, temp_17139_1, temp_17139_2;
              mul.ftz.f32    temp_17139_0, temp_17105_0, temp_17132;
              mul.ftz.f32    temp_17139_1, temp_17105_1, temp_17132;
              mul.ftz.f32    temp_17139_2, temp_17105_2, temp_17132;
              .reg .f32      temp_17140_0, temp_17140_1, temp_17140_2;
              mul.ftz.f32    temp_17140_0, temp_17107_0, temp_17133;
              mul.ftz.f32    temp_17140_1, temp_17107_1, temp_17133;
              mul.ftz.f32    temp_17140_2, temp_17107_2, temp_17133;
              .reg .f32      temp_17141_0, temp_17141_1, temp_17141_2;
              add.ftz.f32    temp_17141_0, temp_17139_0, temp_17140_0;
              add.ftz.f32    temp_17141_1, temp_17139_1, temp_17140_1;
              add.ftz.f32    temp_17141_2, temp_17139_2, temp_17140_2;
              .reg .f32      temp_17142_0, temp_17142_1, temp_17142_2;
              mul.ftz.f32    temp_17142_0, temp_17106_0, temp_17132;
              mul.ftz.f32    temp_17142_1, temp_17106_1, temp_17132;
              mul.ftz.f32    temp_17142_2, temp_17106_2, temp_17132;
              .reg .f32      temp_17143_0, temp_17143_1, temp_17143_2;
              mul.ftz.f32    temp_17143_0, temp_17107_0, temp_17134;
              mul.ftz.f32    temp_17143_1, temp_17107_1, temp_17134;
              mul.ftz.f32    temp_17143_2, temp_17107_2, temp_17134;
              .reg .f32      temp_17144_0, temp_17144_1, temp_17144_2;
              add.ftz.f32    temp_17144_0, temp_17142_0, temp_17143_0;
              add.ftz.f32    temp_17144_1, temp_17142_1, temp_17143_1;
              add.ftz.f32    temp_17144_2, temp_17142_2, temp_17143_2;
              mov.b32        scl_16942, 4;
              mov.b32        scl_16943_0, temp_17138_0;
              mov.b32        scl_16943_1, temp_17138_1;
              mov.b32        scl_16943_2, temp_17138_2;
              mov.b32        scl_16944_0, temp_17141_0;
              mov.b32        scl_16944_1, temp_17141_1;
              mov.b32        scl_16944_2, temp_17141_2;
              mov.b32        scl_16945_0, temp_17144_0;
              mov.b32        scl_16945_1, temp_17144_1;
              mov.b32        scl_16945_2, temp_17144_2;
              mov.b32        scl_16946_0, pos_xy_17092_0;
              mov.b32        scl_16946_1, pos_xy_17092_1;
              mov.b32        scl_16946_2, 0F00000000;
              mov.b32        scl_16947_0, 0F00000000;
              mov.b32        scl_16947_1, 0F00000000;
              mov.b32        scl_16947_2, 0F00000000;
              mov.b32        scl_16948_0, 0F00000000;
              mov.b32        scl_16948_1, 0F00000000;
              mov.b32        scl_16948_2, 0F00000000;
              bra.uni        merge_17352;
else_17351:
              .reg .f32      temp_17049_0, temp_17049_1, temp_17049_2;
              mul.ftz.f32    temp_17049_0, temp_16926_0, temp_16926_0;
              mul.ftz.f32    temp_17049_1, temp_16926_1, temp_16926_1;
              mul.ftz.f32    temp_17049_2, temp_16936, temp_16936;
              .reg .f32      temp_17050_0, temp_17050_1, temp_17050_2;
              mul.ftz.f32    temp_17050_0, temp_16927_0, temp_16926_0;
              mul.ftz.f32    temp_17050_1, temp_16927_1, temp_16926_1;
              mul.ftz.f32    temp_17050_2, 0F00000000, temp_16936;
              .reg .f32      temp_17051_0, temp_17051_1, temp_17051_2;
              mul.ftz.f32    temp_17051_0, temp_16926_0, temp_16927_0;
              mul.ftz.f32    temp_17051_1, temp_16926_1, temp_16927_1;
              mul.ftz.f32    temp_17051_2, temp_16936, 0F00000000;
              .reg .f32      temp_17052_0, temp_17052_1, temp_17052_2;
              add.ftz.f32    temp_17052_0, temp_17050_0, temp_17051_0;
              add.ftz.f32    temp_17052_1, temp_17050_1, temp_17051_1;
              add.ftz.f32    temp_17052_2, temp_17050_2, temp_17051_2;
              .reg .f32      temp_17053_0, temp_17053_1, temp_17053_2;
              mul.ftz.f32    temp_17053_0, temp_16928_0, temp_16926_0;
              mul.ftz.f32    temp_17053_1, temp_16928_1, temp_16926_1;
              mul.ftz.f32    temp_17053_2, 0F00000000, temp_16936;
              .reg .f32      temp_17054_0, temp_17054_1, temp_17054_2;
              mul.ftz.f32    temp_17054_0, temp_16926_0, temp_16928_0;
              mul.ftz.f32    temp_17054_1, temp_16926_1, temp_16928_1;
              mul.ftz.f32    temp_17054_2, temp_16936, 0F00000000;
              .reg .f32      temp_17055_0, temp_17055_1, temp_17055_2;
              add.ftz.f32    temp_17055_0, temp_17053_0, temp_17054_0;
              add.ftz.f32    temp_17055_1, temp_17053_1, temp_17054_1;
              add.ftz.f32    temp_17055_2, temp_17053_2, temp_17054_2;
              .reg.f32       temp_17062;
              add.ftz.f32    temp_17062, temp_17049_0, temp_17049_1;
              .reg.f32       temp_17063;
              add.ftz.f32    temp_17063, temp_17052_0, temp_17052_1;
              .reg.f32       temp_17064;
              add.ftz.f32    temp_17064, temp_17055_0, temp_17055_1;
              .reg.f32       temp_17068;
              add.ftz.f32    temp_17068, temp_17062, temp_17049_2;
              .reg.f32       temp_17069;
              add.ftz.f32    temp_17069, temp_17063, temp_17052_2;
              .reg.f32       temp_17070;
              add.ftz.f32    temp_17070, temp_17064, temp_17055_2;
              .reg.f32       temp_17071;
              lg2.approx.ftz.f32 temp_17071, temp_17068;
              mul.ftz.f32    temp_17071, temp_17071, 0Fbfc00000;
              ex2.approx.ftz.f32 temp_17071, temp_17071;
              .reg.f32       f_17072;
              mul.ftz.f32    f_17072, 0Fbf000000, temp_17071;
              .reg.f32       temp_17073;
              rsqrt.approx.ftz.f32 temp_17073, temp_17068;
              .reg.f32       temp_17074;
              mul.ftz.f32    temp_17074, f_17072, temp_17069;
              .reg.f32       temp_17075;
              mul.ftz.f32    temp_17075, f_17072, temp_17070;
              .reg .f32      temp_17079_0, temp_17079_1, temp_17079_2;
              mul.ftz.f32    temp_17079_0, temp_16926_0, temp_17073;
              mul.ftz.f32    temp_17079_1, temp_16926_1, temp_17073;
              mul.ftz.f32    temp_17079_2, temp_16936, temp_17073;
              .reg .f32      temp_17080_0, temp_17080_1, temp_17080_2;
              mul.ftz.f32    temp_17080_0, temp_16927_0, temp_17073;
              mul.ftz.f32    temp_17080_1, temp_16927_1, temp_17073;
              mul.ftz.f32    temp_17080_2, 0F00000000, temp_17073;
              .reg .f32      temp_17081_0, temp_17081_1, temp_17081_2;
              mul.ftz.f32    temp_17081_0, temp_16926_0, temp_17074;
              mul.ftz.f32    temp_17081_1, temp_16926_1, temp_17074;
              mul.ftz.f32    temp_17081_2, temp_16936, temp_17074;
              .reg .f32      temp_17082_0, temp_17082_1, temp_17082_2;
              add.ftz.f32    temp_17082_0, temp_17080_0, temp_17081_0;
              add.ftz.f32    temp_17082_1, temp_17080_1, temp_17081_1;
              add.ftz.f32    temp_17082_2, temp_17080_2, temp_17081_2;
              .reg .f32      temp_17083_0, temp_17083_1, temp_17083_2;
              mul.ftz.f32    temp_17083_0, temp_16928_0, temp_17073;
              mul.ftz.f32    temp_17083_1, temp_16928_1, temp_17073;
              mul.ftz.f32    temp_17083_2, 0F00000000, temp_17073;
              .reg .f32      temp_17084_0, temp_17084_1, temp_17084_2;
              mul.ftz.f32    temp_17084_0, temp_16926_0, temp_17075;
              mul.ftz.f32    temp_17084_1, temp_16926_1, temp_17075;
              mul.ftz.f32    temp_17084_2, temp_16936, temp_17075;
              .reg .f32      temp_17085_0, temp_17085_1, temp_17085_2;
              add.ftz.f32    temp_17085_0, temp_17083_0, temp_17084_0;
              add.ftz.f32    temp_17085_1, temp_17083_1, temp_17084_1;
              add.ftz.f32    temp_17085_2, temp_17083_2, temp_17084_2;
              mov.b32        scl_16942, 2;
              mov.b32        scl_16943_0, temp_17079_0;
              mov.b32        scl_16943_1, temp_17079_1;
              mov.b32        scl_16943_2, temp_17079_2;
              mov.b32        scl_16944_0, temp_17082_0;
              mov.b32        scl_16944_1, temp_17082_1;
              mov.b32        scl_16944_2, temp_17082_2;
              mov.b32        scl_16945_0, temp_17085_0;
              mov.b32        scl_16945_1, temp_17085_1;
              mov.b32        scl_16945_2, temp_17085_2;
              mov.b32        scl_16946_0, 0F00000000;
              mov.b32        scl_16946_1, 0F00000000;
              mov.b32        scl_16946_2, 0F00000000;
              mov.b32        scl_16947_0, 0F00000000;
              mov.b32        scl_16947_1, 0F00000000;
              mov.b32        scl_16947_2, 0F00000000;
              mov.b32        scl_16948_0, 0F00000000;
              mov.b32        scl_16948_1, 0F00000000;
              mov.b32        scl_16948_2, 0F00000000;
merge_17352:
              .reg.u64       tmp_17415;
              ld.param.u64   tmp_17415, [camera_instance_13236];
              .reg.s32       tmp_17416;
              ld.s32         tmp_17416, [tmp_17415];
              .reg.u64       tmp_17417;
              .reg.s32       optix_buffer_id_17418;
              mov.b64        {_, optix_buffer_id_17418}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17419;
{
              .reg.s32       abstract_17420;
              mov.b32        abstract_17420, 1;
              .reg.u64       const_17421;
              mov.b64        const_17421, 528;
              .reg.u64       const_17422;
              mov.b64        const_17422, 0;
 call (ptr_from_optix_id_17419), _rt_buffer_get_id_64, (optix_buffer_id_17418, abstract_17420, abstract_17420, const_17421, const_17422, const_17422, const_17422); // resolving optix id
}
              ld.u64         tmp_17417, [ptr_from_optix_id_17419];
              .reg .f32      tmp_17423_0, tmp_17423_1, tmp_17423_2, tmp_17423_3;
              .reg.u64       off_17424;
              mad.wide.u32   off_17424, tmp_17416, 192, 16;
              .reg.s32       optix_buffer_id_17425;
              mov.b64        {_, optix_buffer_id_17425}, tmp_17417;
              .reg.u64       ptr_from_optix_id_17426;
{
              .reg.s32       abstract_17427;
              mov.b32        abstract_17427, 1;
              .reg.u64       const_17428;
              mov.b64        const_17428, 512;
              .reg.u64       off_17429;
              add.u64        off_17429, const_17428, off_17424;
              .reg.u64       const_17430;
              mov.b64        const_17430, 0;
 call (ptr_from_optix_id_17426), _rt_buffer_get_id_64, (optix_buffer_id_17425, abstract_17427, abstract_17427, off_17429, const_17430, const_17430, const_17430); // resolving optix id
}
              ld.v4.f32      {tmp_17423_0, tmp_17423_1, tmp_17423_2, tmp_17423_3}, [ptr_from_optix_id_17426];
              .reg.u64       tmp_17431;
              ld.param.u64   tmp_17431, [camera_instance_13236];
              .reg.s32       tmp_17432;
              ld.s32         tmp_17432, [tmp_17431];
              .reg.u64       tmp_17433;
              .reg.s32       optix_buffer_id_17434;
              mov.b64        {_, optix_buffer_id_17434}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17435;
{
              .reg.s32       abstract_17436;
              mov.b32        abstract_17436, 1;
              .reg.u64       const_17437;
              mov.b64        const_17437, 528;
              .reg.u64       const_17438;
              mov.b64        const_17438, 0;
 call (ptr_from_optix_id_17435), _rt_buffer_get_id_64, (optix_buffer_id_17434, abstract_17436, abstract_17436, const_17437, const_17438, const_17438, const_17438); // resolving optix id
}
              ld.u64         tmp_17433, [ptr_from_optix_id_17435];
              .reg .f32      tmp_17439_0, tmp_17439_1, tmp_17439_2, tmp_17439_3;
              .reg.u64       off_17440;
              mad.wide.u32   off_17440, tmp_17432, 192, 32;
              .reg.s32       optix_buffer_id_17441;
              mov.b64        {_, optix_buffer_id_17441}, tmp_17433;
              .reg.u64       ptr_from_optix_id_17442;
{
              .reg.s32       abstract_17443;
              mov.b32        abstract_17443, 1;
              .reg.u64       const_17444;
              mov.b64        const_17444, 512;
              .reg.u64       off_17445;
              add.u64        off_17445, const_17444, off_17440;
              .reg.u64       const_17446;
              mov.b64        const_17446, 0;
 call (ptr_from_optix_id_17442), _rt_buffer_get_id_64, (optix_buffer_id_17441, abstract_17443, abstract_17443, off_17445, const_17446, const_17446, const_17446); // resolving optix id
}
              ld.v4.f32      {tmp_17439_0, tmp_17439_1, tmp_17439_2, tmp_17439_3}, [ptr_from_optix_id_17442];
              .reg.u64       tmp_17447;
              ld.param.u64   tmp_17447, [camera_instance_13236];
              .reg.s32       tmp_17448;
              ld.s32         tmp_17448, [tmp_17447];
              .reg.u64       tmp_17449;
              .reg.s32       optix_buffer_id_17450;
              mov.b64        {_, optix_buffer_id_17450}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17451;
{
              .reg.s32       abstract_17452;
              mov.b32        abstract_17452, 1;
              .reg.u64       const_17453;
              mov.b64        const_17453, 528;
              .reg.u64       const_17454;
              mov.b64        const_17454, 0;
 call (ptr_from_optix_id_17451), _rt_buffer_get_id_64, (optix_buffer_id_17450, abstract_17452, abstract_17452, const_17453, const_17454, const_17454, const_17454); // resolving optix id
}
              ld.u64         tmp_17449, [ptr_from_optix_id_17451];
              .reg .f32      tmp_17455_0, tmp_17455_1, tmp_17455_2, tmp_17455_3;
              .reg.u64       off_17456;
              mad.wide.u32   off_17456, tmp_17448, 192, 48;
              .reg.s32       optix_buffer_id_17457;
              mov.b64        {_, optix_buffer_id_17457}, tmp_17449;
              .reg.u64       ptr_from_optix_id_17458;
{
              .reg.s32       abstract_17459;
              mov.b32        abstract_17459, 1;
              .reg.u64       const_17460;
              mov.b64        const_17460, 512;
              .reg.u64       off_17461;
              add.u64        off_17461, const_17460, off_17456;
              .reg.u64       const_17462;
              mov.b64        const_17462, 0;
 call (ptr_from_optix_id_17458), _rt_buffer_get_id_64, (optix_buffer_id_17457, abstract_17459, abstract_17459, off_17461, const_17462, const_17462, const_17462); // resolving optix id
}
              ld.v4.f32      {tmp_17455_0, tmp_17455_1, tmp_17455_2, tmp_17455_3}, [ptr_from_optix_id_17458];
              .reg.u64       tmp_17463;
              ld.param.u64   tmp_17463, [camera_instance_13236];
              .reg.s32       tmp_17464;
              ld.s32         tmp_17464, [tmp_17463];
              .reg.u64       tmp_17465;
              .reg.s32       optix_buffer_id_17466;
              mov.b64        {_, optix_buffer_id_17466}, tmp_17254;
              .reg.u64       ptr_from_optix_id_17467;
{
              .reg.s32       abstract_17468;
              mov.b32        abstract_17468, 1;
              .reg.u64       const_17469;
              mov.b64        const_17469, 528;
              .reg.u64       const_17470;
              mov.b64        const_17470, 0;
 call (ptr_from_optix_id_17467), _rt_buffer_get_id_64, (optix_buffer_id_17466, abstract_17468, abstract_17468, const_17469, const_17470, const_17470, const_17470); // resolving optix id
}
              ld.u64         tmp_17465, [ptr_from_optix_id_17467];
              .reg .f32      tmp_17471_0, tmp_17471_1, tmp_17471_2, tmp_17471_3;
              .reg.u64       off_17472;
              mad.wide.u32   off_17472, tmp_17464, 192, 64;
              .reg.s32       optix_buffer_id_17473;
              mov.b64        {_, optix_buffer_id_17473}, tmp_17465;
              .reg.u64       ptr_from_optix_id_17474;
{
              .reg.s32       abstract_17475;
              mov.b32        abstract_17475, 1;
              .reg.u64       const_17476;
              mov.b64        const_17476, 512;
              .reg.u64       off_17477;
              add.u64        off_17477, const_17476, off_17472;
              .reg.u64       const_17478;
              mov.b64        const_17478, 0;
 call (ptr_from_optix_id_17474), _rt_buffer_get_id_64, (optix_buffer_id_17473, abstract_17475, abstract_17475, off_17477, const_17478, const_17478, const_17478); // resolving optix id
}
              ld.v4.f32      {tmp_17471_0, tmp_17471_1, tmp_17471_2, tmp_17471_3}, [ptr_from_optix_id_17474];
              .reg .f32      temp_16963_0, temp_16963_1, temp_16963_2;
              mul.ftz.f32    temp_16963_0, tmp_17423_0, scl_16946_0;
              mul.ftz.f32    temp_16963_1, tmp_17423_1, scl_16946_0;
              mul.ftz.f32    temp_16963_2, tmp_17423_2, scl_16946_0;
              .reg .f32      temp_16964_0, temp_16964_1, temp_16964_2;
              mul.ftz.f32    temp_16964_0, tmp_17423_0, scl_16947_0;
              mul.ftz.f32    temp_16964_1, tmp_17423_1, scl_16947_0;
              mul.ftz.f32    temp_16964_2, tmp_17423_2, scl_16947_0;
              .reg .f32      temp_16965_0, temp_16965_1, temp_16965_2;
              mul.ftz.f32    temp_16965_0, tmp_17423_0, scl_16948_0;
              mul.ftz.f32    temp_16965_1, tmp_17423_1, scl_16948_0;
              mul.ftz.f32    temp_16965_2, tmp_17423_2, scl_16948_0;
              .reg .f32      temp_16972_0, temp_16972_1, temp_16972_2;
              mul.ftz.f32    temp_16972_0, tmp_17439_0, scl_16946_1;
              mul.ftz.f32    temp_16972_1, tmp_17439_1, scl_16946_1;
              mul.ftz.f32    temp_16972_2, tmp_17439_2, scl_16946_1;
              .reg .f32      temp_16973_0, temp_16973_1, temp_16973_2;
              mul.ftz.f32    temp_16973_0, tmp_17439_0, scl_16947_1;
              mul.ftz.f32    temp_16973_1, tmp_17439_1, scl_16947_1;
              mul.ftz.f32    temp_16973_2, tmp_17439_2, scl_16947_1;
              .reg .f32      temp_16974_0, temp_16974_1, temp_16974_2;
              mul.ftz.f32    temp_16974_0, tmp_17439_0, scl_16948_1;
              mul.ftz.f32    temp_16974_1, tmp_17439_1, scl_16948_1;
              mul.ftz.f32    temp_16974_2, tmp_17439_2, scl_16948_1;
              .reg .f32      temp_16975_0, temp_16975_1, temp_16975_2;
              add.ftz.f32    temp_16975_0, temp_16963_0, temp_16972_0;
              add.ftz.f32    temp_16975_1, temp_16963_1, temp_16972_1;
              add.ftz.f32    temp_16975_2, temp_16963_2, temp_16972_2;
              .reg .f32      temp_16976_0, temp_16976_1, temp_16976_2;
              add.ftz.f32    temp_16976_0, temp_16964_0, temp_16973_0;
              add.ftz.f32    temp_16976_1, temp_16964_1, temp_16973_1;
              add.ftz.f32    temp_16976_2, temp_16964_2, temp_16973_2;
              .reg .f32      temp_16977_0, temp_16977_1, temp_16977_2;
              add.ftz.f32    temp_16977_0, temp_16965_0, temp_16974_0;
              add.ftz.f32    temp_16977_1, temp_16965_1, temp_16974_1;
              add.ftz.f32    temp_16977_2, temp_16965_2, temp_16974_2;
              .reg .f32      temp_16984_0, temp_16984_1, temp_16984_2;
              mul.ftz.f32    temp_16984_0, tmp_17455_0, scl_16946_2;
              mul.ftz.f32    temp_16984_1, tmp_17455_1, scl_16946_2;
              mul.ftz.f32    temp_16984_2, tmp_17455_2, scl_16946_2;
              .reg .f32      temp_16985_0, temp_16985_1, temp_16985_2;
              mul.ftz.f32    temp_16985_0, tmp_17455_0, scl_16947_2;
              mul.ftz.f32    temp_16985_1, tmp_17455_1, scl_16947_2;
              mul.ftz.f32    temp_16985_2, tmp_17455_2, scl_16947_2;
              .reg .f32      temp_16986_0, temp_16986_1, temp_16986_2;
              mul.ftz.f32    temp_16986_0, tmp_17455_0, scl_16948_2;
              mul.ftz.f32    temp_16986_1, tmp_17455_1, scl_16948_2;
              mul.ftz.f32    temp_16986_2, tmp_17455_2, scl_16948_2;
              .reg .f32      temp_16987_0, temp_16987_1, temp_16987_2;
              add.ftz.f32    temp_16987_0, temp_16975_0, temp_16984_0;
              add.ftz.f32    temp_16987_1, temp_16975_1, temp_16984_1;
              add.ftz.f32    temp_16987_2, temp_16975_2, temp_16984_2;
              .reg .f32      temp_16988_0, temp_16988_1, temp_16988_2;
              add.ftz.f32    temp_16988_0, temp_16976_0, temp_16985_0;
              add.ftz.f32    temp_16988_1, temp_16976_1, temp_16985_1;
              add.ftz.f32    temp_16988_2, temp_16976_2, temp_16985_2;
              .reg .f32      temp_16989_0, temp_16989_1, temp_16989_2;
              add.ftz.f32    temp_16989_0, temp_16977_0, temp_16986_0;
              add.ftz.f32    temp_16989_1, temp_16977_1, temp_16986_1;
              add.ftz.f32    temp_16989_2, temp_16977_2, temp_16986_2;
              .reg .f32      temp_16990_0, temp_16990_1, temp_16990_2;
              add.ftz.f32    temp_16990_0, temp_16987_0, tmp_17471_0;
              add.ftz.f32    temp_16990_1, temp_16987_1, tmp_17471_1;
              add.ftz.f32    temp_16990_2, temp_16987_2, tmp_17471_2;
              .reg .f32      temp_16999_0, temp_16999_1, temp_16999_2;
              mul.ftz.f32    temp_16999_0, tmp_17423_0, scl_16943_0;
              mul.ftz.f32    temp_16999_1, tmp_17423_1, scl_16943_0;
              mul.ftz.f32    temp_16999_2, tmp_17423_2, scl_16943_0;
              .reg .f32      temp_17000_0, temp_17000_1, temp_17000_2;
              mul.ftz.f32    temp_17000_0, tmp_17423_0, scl_16944_0;
              mul.ftz.f32    temp_17000_1, tmp_17423_1, scl_16944_0;
              mul.ftz.f32    temp_17000_2, tmp_17423_2, scl_16944_0;
              .reg .f32      temp_17001_0, temp_17001_1, temp_17001_2;
              mul.ftz.f32    temp_17001_0, tmp_17423_0, scl_16945_0;
              mul.ftz.f32    temp_17001_1, tmp_17423_1, scl_16945_0;
              mul.ftz.f32    temp_17001_2, tmp_17423_2, scl_16945_0;
              .reg .f32      temp_17008_0, temp_17008_1, temp_17008_2;
              mul.ftz.f32    temp_17008_0, tmp_17439_0, scl_16943_1;
              mul.ftz.f32    temp_17008_1, tmp_17439_1, scl_16943_1;
              mul.ftz.f32    temp_17008_2, tmp_17439_2, scl_16943_1;
              .reg .f32      temp_17009_0, temp_17009_1, temp_17009_2;
              mul.ftz.f32    temp_17009_0, tmp_17439_0, scl_16944_1;
              mul.ftz.f32    temp_17009_1, tmp_17439_1, scl_16944_1;
              mul.ftz.f32    temp_17009_2, tmp_17439_2, scl_16944_1;
              .reg .f32      temp_17010_0, temp_17010_1, temp_17010_2;
              mul.ftz.f32    temp_17010_0, tmp_17439_0, scl_16945_1;
              mul.ftz.f32    temp_17010_1, tmp_17439_1, scl_16945_1;
              mul.ftz.f32    temp_17010_2, tmp_17439_2, scl_16945_1;
              .reg .f32      temp_17011_0, temp_17011_1, temp_17011_2;
              add.ftz.f32    temp_17011_0, temp_16999_0, temp_17008_0;
              add.ftz.f32    temp_17011_1, temp_16999_1, temp_17008_1;
              add.ftz.f32    temp_17011_2, temp_16999_2, temp_17008_2;
              .reg .f32      temp_17012_0, temp_17012_1, temp_17012_2;
              add.ftz.f32    temp_17012_0, temp_17000_0, temp_17009_0;
              add.ftz.f32    temp_17012_1, temp_17000_1, temp_17009_1;
              add.ftz.f32    temp_17012_2, temp_17000_2, temp_17009_2;
              .reg .f32      temp_17013_0, temp_17013_1, temp_17013_2;
              add.ftz.f32    temp_17013_0, temp_17001_0, temp_17010_0;
              add.ftz.f32    temp_17013_1, temp_17001_1, temp_17010_1;
              add.ftz.f32    temp_17013_2, temp_17001_2, temp_17010_2;
              .reg .f32      temp_17020_0, temp_17020_1, temp_17020_2;
              mul.ftz.f32    temp_17020_0, tmp_17455_0, scl_16943_2;
              mul.ftz.f32    temp_17020_1, tmp_17455_1, scl_16943_2;
              mul.ftz.f32    temp_17020_2, tmp_17455_2, scl_16943_2;
              .reg .f32      temp_17021_0, temp_17021_1, temp_17021_2;
              mul.ftz.f32    temp_17021_0, tmp_17455_0, scl_16944_2;
              mul.ftz.f32    temp_17021_1, tmp_17455_1, scl_16944_2;
              mul.ftz.f32    temp_17021_2, tmp_17455_2, scl_16944_2;
              .reg .f32      temp_17022_0, temp_17022_1, temp_17022_2;
              mul.ftz.f32    temp_17022_0, tmp_17455_0, scl_16945_2;
              mul.ftz.f32    temp_17022_1, tmp_17455_1, scl_16945_2;
              mul.ftz.f32    temp_17022_2, tmp_17455_2, scl_16945_2;
              .reg .f32      temp_17023_0, temp_17023_1, temp_17023_2;
              add.ftz.f32    temp_17023_0, temp_17011_0, temp_17020_0;
              add.ftz.f32    temp_17023_1, temp_17011_1, temp_17020_1;
              add.ftz.f32    temp_17023_2, temp_17011_2, temp_17020_2;
              .reg .f32      temp_17024_0, temp_17024_1, temp_17024_2;
              add.ftz.f32    temp_17024_0, temp_17012_0, temp_17021_0;
              add.ftz.f32    temp_17024_1, temp_17012_1, temp_17021_1;
              add.ftz.f32    temp_17024_2, temp_17012_2, temp_17021_2;
              .reg .f32      temp_17025_0, temp_17025_1, temp_17025_2;
              add.ftz.f32    temp_17025_0, temp_17013_0, temp_17022_0;
              add.ftz.f32    temp_17025_1, temp_17013_1, temp_17022_1;
              add.ftz.f32    temp_17025_2, temp_17013_2, temp_17022_2;
              .reg.u64       tmp_17479;
              ld.param.u64   tmp_17479, [rs_13234];
              .reg.u64       tmp_17480;
              ld.u64         tmp_17480, [tmp_17479];
              .reg.u64       tmp_17481;
              ld.param.u64   tmp_17481, [rs_13234];
              .reg.u64       tmp_17482;
              ld.u64         tmp_17482, [tmp_17481+8];
              .reg.u64       tmp_17483;
              ld.param.u64   tmp_17483, [rs_13234];
              .reg.u64       tmp_17484;
              ld.u64         tmp_17484, [tmp_17483+16];
              .reg.s32       tmp_17485;
              ld.s32         tmp_17485, [tmp_17480];
              .reg.s32       temp_17036;
              set.lt.s32.s32 temp_17036, tmp_17485, 16;
              .reg.u64       scl_17037;
              .reg.u64       scl_17038;
              .reg.u64       scl_17039;
              .reg.pred      temp_17036_17488;
              setp.ne.s32    temp_17036_17488, 0, temp_17036;
  @!temp_17036_17488 bra     else_17486;
              .reg.s32       temp_17042;
              add.cc.s32     temp_17042, tmp_17485, 1;
              st.s32         [tmp_17480], temp_17042;
              .reg.u64       off_17489;
              mad.wide.u32   off_17489, tmp_17485, 112, 0;
              .reg.u64       off_17490;
              add.u64        off_17490, tmp_17482, off_17489;
              st.v2.f32      [off_17490], {temp_16990_0, temp_16990_1};
              st.f32         [off_17490+8], temp_16990_2;
              st.v2.f32      [off_17490+16], {temp_16988_0, temp_16988_1};
              st.f32         [off_17490+24], temp_16988_2;
              st.v2.f32      [off_17490+32], {temp_16989_0, temp_16989_1};
              st.f32         [off_17490+40], temp_16989_2;
              st.v2.f32      [off_17490+48], {temp_17023_0, temp_17023_1};
              st.f32         [off_17490+56], temp_17023_2;
              st.v2.f32      [off_17490+64], {temp_17024_0, temp_17024_1};
              st.f32         [off_17490+72], temp_17024_2;
              st.v2.f32      [off_17490+80], {temp_17025_0, temp_17025_1};
              st.f32         [off_17490+88], temp_17025_2;
              .reg.f32       abstract_17491;
              mov.b32        abstract_17491, 0F7f800000;
              st.f32         [off_17490+96], abstract_17491;
              .reg.u64       off_17492;
              mad.wide.u32   off_17492, tmp_17485, 112, 0;
              .reg.u64       off_17493;
              add.u64        off_17493, tmp_17484, off_17492;
              .reg.f32       abstract_17494;
              mov.b32        abstract_17494, 0F3f800000;
              .reg.f32       abstract_17495;
              mov.b32        abstract_17495, 0F3f800000;
              .reg.f32       abstract_17496;
              mov.b32        abstract_17496, 0F3f800000;
              st.v2.f32      [off_17493], {abstract_17494, abstract_17495};
              st.f32         [off_17493+8], abstract_17496;
              .reg.f32       abstract_17497;
              mov.b32        abstract_17497, 0F3f800000;
              st.f32         [off_17493+16], abstract_17497;
              .reg.f32       abstract_17498;
              mov.b32        abstract_17498, 0F00000000;
              st.f32         [off_17493+20], abstract_17498;
              .reg.s32       abstract_17499;
              mov.b32        abstract_17499, 0;
              st.s32         [off_17493+24], abstract_17499;
              st.s32         [off_17493+28], scl_16942;
              .reg.s32       abstract_17500;
              mov.b32        abstract_17500, 140;
              st.s32         [off_17493+32], abstract_17500;
              st.v2.f32      [off_17493+48], {temp_16990_0, temp_16990_1};
              st.f32         [off_17493+56], temp_16990_2;
              st.v2.f32      [off_17493+64], {temp_16988_0, temp_16988_1};
              st.f32         [off_17493+72], temp_16988_2;
              st.v2.f32      [off_17493+80], {temp_16989_0, temp_16989_1};
              st.f32         [off_17493+88], temp_16989_2;
              .reg.f32       abstract_17501;
              mov.b32        abstract_17501, 0F00000000;
              st.f32         [off_17493+96], abstract_17501;
              .reg.f32       abstract_17502;
              mov.b32        abstract_17502, 0F3f800000;
              st.f32         [off_17493+100], abstract_17502;
              .reg.s32       abstract_17503;
              mov.b32        abstract_17503, -1;
              st.s32         [off_17493+104], abstract_17503;
              .reg.s32       abstract_17504;
              mov.b32        abstract_17504, 2;
              st.s32         [off_17493+108], abstract_17504;
              mov.u64        scl_17037, tmp_17480;
              mov.u64        scl_17038, tmp_17482;
              mov.u64        scl_17039, tmp_17484;
              bra.uni        merge_17487;
else_17486:
              mov.u64        scl_17037, tmp_17480;
              mov.u64        scl_17038, tmp_17482;
              mov.u64        scl_17039, tmp_17484;
merge_17487:
              .reg.u64       tmp_17505;
              ld.param.u64   tmp_17505, [res_17252];
              st.u64         [tmp_17505], scl_17037;
              st.u64         [tmp_17505+8], scl_17038;
              st.u64         [tmp_17505+16], scl_17039;
              st.v2.f32      [tmp_17505+24], {globalPxPos_13244_0, globalPxPos_13244_1};
              st.v2.f32      [tmp_17505+32], {temp_16893_0, temp_16893_1};
              st.v2.f32      [tmp_17505+40], {temp_16883_0, temp_16883_1};
              st.v2.f32      [tmp_17505+48], {temp_16889_0, temp_16889_1};
}

.visible .global .u64 g_main = stlr_main;

.visible .func stlr_compute_sub_pixel_pos( .param.b64 res_17506, .param.b64 externs_17507, .param.b64 seed_13261) {
              .reg .f32      e_17235_0, e_17235_1;
              mov.b32        e_17235_0, 0F3f800000;
              mov.b32        e_17235_1, 0F3f800000;
              .reg .f32      f_17236_0, f_17236_1;
              mov.b32        f_17236_0, 0F00000000;
              mov.b32        f_17236_1, 0F00000000;
              .reg .s32      i_17237_0, i_17237_1;
              mov.b32        i_17237_0, 0;
              mov.b32        i_17237_1, 0;
              .reg .f32      f_17211_0, f_17211_1;
doloop_17508:
              .reg .s32      r_17238_0, r_17238_1;
              rem.s32        r_17238_0, i_17237_0, 2;
              rem.s32        r_17238_1, i_17237_1, 3;
              .reg .f32      e_17239_0, e_17239_1;
              mul.ftz.f32    e_17239_0, e_17235_0, 0F3f000000;
              mul.ftz.f32    e_17239_1, e_17235_1, 0F3eaaaaab;
              .reg .f32      temp_17240_0, temp_17240_1;
              cvt.rn.f32.s32 temp_17240_0, r_17238_0;
              cvt.rn.f32.s32 temp_17240_1, r_17238_1;
              .reg .f32      temp_17241_0, temp_17241_1;
              mul.ftz.f32    temp_17241_0, temp_17240_0, e_17239_0;
              mul.ftz.f32    temp_17241_1, temp_17240_1, e_17239_1;
              .reg .f32      f_17242_0, f_17242_1;
              add.ftz.f32    f_17242_0, f_17236_0, temp_17241_0;
              add.ftz.f32    f_17242_1, f_17236_1, temp_17241_1;
              .reg .s32      i_17243_0, i_17243_1;
              div.s32        i_17243_0, i_17237_0, 2;
              div.s32        i_17243_1, i_17237_1, 3;
              .reg .s32      temp_17245_0, temp_17245_1;
              set.gt.s32.s32 temp_17245_0, i_17243_0, 0;
              set.gt.s32.s32 temp_17245_1, i_17243_1, 0;
              .reg.s32       temp_17246;
              mov.b32        temp_17246, temp_17245_0;
              or.b32         temp_17246, temp_17246, temp_17245_1;
              mov.b32        f_17211_0, f_17242_0;
              mov.b32        f_17211_1, f_17242_1;
              mov.b32        e_17235_0, e_17239_0;
              mov.b32        e_17235_1, e_17239_1;
              mov.b32        f_17236_0, f_17242_0;
              mov.b32        f_17236_1, f_17242_1;
              mov.b32        i_17237_0, i_17243_0;
              mov.b32        i_17237_1, i_17243_1;
              .reg.pred      temp_17246_17509;
              setp.ne.s32    temp_17246_17509, 0, temp_17246;
  @temp_17246_17509 bra      doloop_17508;
              .reg.u64       tmp_17510;
              ld.param.u64   tmp_17510, [seed_13261];
              .reg.s32       tmp_17511;
              ld.s32         tmp_17511, [tmp_17510];
              .reg .f32      e_17223_0, e_17223_1;
              mov.b32        e_17223_0, 0F3f800000;
              mov.b32        e_17223_1, 0F3f800000;
              .reg .f32      f_17224_0, f_17224_1;
              mov.b32        f_17224_0, 0F00000000;
              mov.b32        f_17224_1, 0F00000000;
              .reg .s32      i_17225_0, i_17225_1;
              mov.b32        i_17225_0, tmp_17511;
              mov.b32        i_17225_1, tmp_17511;
              .reg .f32      f_17217_0, f_17217_1;
doloop_17512:
              .reg .s32      r_17226_0, r_17226_1;
              rem.s32        r_17226_0, i_17225_0, 2;
              rem.s32        r_17226_1, i_17225_1, 3;
              .reg .f32      e_17227_0, e_17227_1;
              mul.ftz.f32    e_17227_0, e_17223_0, 0F3f000000;
              mul.ftz.f32    e_17227_1, e_17223_1, 0F3eaaaaab;
              .reg .f32      temp_17228_0, temp_17228_1;
              cvt.rn.f32.s32 temp_17228_0, r_17226_0;
              cvt.rn.f32.s32 temp_17228_1, r_17226_1;
              .reg .f32      temp_17229_0, temp_17229_1;
              mul.ftz.f32    temp_17229_0, temp_17228_0, e_17227_0;
              mul.ftz.f32    temp_17229_1, temp_17228_1, e_17227_1;
              .reg .f32      f_17230_0, f_17230_1;
              add.ftz.f32    f_17230_0, f_17224_0, temp_17229_0;
              add.ftz.f32    f_17230_1, f_17224_1, temp_17229_1;
              .reg .s32      i_17231_0, i_17231_1;
              div.s32        i_17231_0, i_17225_0, 2;
              div.s32        i_17231_1, i_17225_1, 3;
              .reg .s32      temp_17233_0, temp_17233_1;
              set.gt.s32.s32 temp_17233_0, i_17231_0, 0;
              set.gt.s32.s32 temp_17233_1, i_17231_1, 0;
              .reg.s32       temp_17234;
              mov.b32        temp_17234, temp_17233_0;
              or.b32         temp_17234, temp_17234, temp_17233_1;
              mov.b32        f_17217_0, f_17230_0;
              mov.b32        f_17217_1, f_17230_1;
              mov.b32        e_17223_0, e_17227_0;
              mov.b32        e_17223_1, e_17227_1;
              mov.b32        f_17224_0, f_17230_0;
              mov.b32        f_17224_1, f_17230_1;
              mov.b32        i_17225_0, i_17231_0;
              mov.b32        i_17225_1, i_17231_1;
              .reg.pred      temp_17234_17513;
              setp.ne.s32    temp_17234_17513, 0, temp_17234;
  @temp_17234_17513 bra      doloop_17512;
              .reg .f32      temp_17219_0, temp_17219_1;
              add.ftz.f32    temp_17219_0, f_17217_0, 0F3f000000;
              add.ftz.f32    temp_17219_1, f_17217_1, 0F3f000000;
              .reg .f32      temp_17220_0, temp_17220_1;
              sub.ftz.f32    temp_17220_0, temp_17219_0, f_17211_0;
              sub.ftz.f32    temp_17220_1, temp_17219_1, f_17211_1;
              .reg .f32      temp_17221_0, temp_17221_1;
              cvt.rmi.f32.f32 temp_17221_0, temp_17220_0;
              cvt.rmi.f32.f32 temp_17221_1, temp_17220_1;
              .reg .f32      temp_17222_0, temp_17222_1;
              sub.ftz.f32    temp_17222_0, temp_17220_0, temp_17221_0;
              sub.ftz.f32    temp_17222_1, temp_17220_1, temp_17221_1;
              .reg.u64       tmp_17514;
              ld.param.u64   tmp_17514, [res_17506];
              st.v2.f32      [tmp_17514], {temp_17222_0, temp_17222_1};
}

.visible .global .u64 g_compute_sub_pixel_pos = stlr_compute_sub_pixel_pos;

