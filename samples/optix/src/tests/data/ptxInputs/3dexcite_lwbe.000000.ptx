//
// Generated by LWPU LWVM Compiler
//
// Compiler Build ID: CL-19805474
// Lwca compilation tools, release 7.5, V7.5.16
// Based on LLVM 3.4svn
//

.version 4.3
.target sm_20
.address_size 64

	// .globl	_Z9exceptiolw
.global .align 8 .b8 launch_index[8];
.global .align 1 .b8 render_task_data[1];
.global .align 4 .u32 render_task_id;
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZTVSt14error_category[72];
.global .align 8 .b8 _ZTVSt23_Generic_error_category[72];
.global .align 8 .b8 _ZTVSt24_Iostream_error_category[72];
.global .align 8 .b8 _ZTVSt22_System_error_category[72];
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14render_task_idE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14render_task_idE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14render_task_idE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14render_task_idE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14render_task_idE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};
.global .align 1 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};
.global .align 1 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.visible .entry _Z9exceptiolw(

)
{
	.local .align 8 .b8 	__local_depot0[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<98>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<522>;
	.reg .b64 	%rd<215>;


	mov.u64 	%rd214, __local_depot0;
	cvta.local.u64 	%SP, %rd214;
	mov.u64 	%rd61, launch_index;
	add.s64 	%rd62, %rd61, 4;
	ldu.global.u32 	%r140, [%rd62];
	setp.ne.s32	%p1, %r140, 0;
	@%p1 bra 	BB0_114;

	// inline asm
	call (%r141), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p2, %r141, 1020;
	@%p2 bra 	BB0_111;
	bra.uni 	BB0_2;

BB0_111:
	ld.volatile.global.u32 	%r136, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r137, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r138, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r432), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p74, %r432, 0;
	@%p74 bra 	BB0_114;

	mov.u64 	%rd147, $str;
	cvta.global.u64 	%rd146, %rd147;
	mov.u32 	%r434, 92;
	// inline asm
	call (%r433), _rt_print_start_64, (%rd146, %r434);
	// inline asm
	setp.eq.s32	%p75, %r433, 0;
	@%p75 bra 	BB0_114;

	mov.u32 	%r443, 0;
	// inline asm
	call (), _rt_print_write32, (%r443, %r433);
	// inline asm
	add.s32 	%r438, %r433, 4;
	// inline asm
	call (), _rt_print_write32, (%r136, %r438);
	// inline asm
	add.s32 	%r440, %r433, 8;
	// inline asm
	call (), _rt_print_write32, (%r443, %r440);
	// inline asm
	add.s32 	%r442, %r433, 12;
	// inline asm
	call (), _rt_print_write32, (%r137, %r442);
	// inline asm
	add.s32 	%r444, %r433, 16;
	// inline asm
	call (), _rt_print_write32, (%r443, %r444);
	// inline asm
	add.s32 	%r446, %r433, 20;
	// inline asm
	call (), _rt_print_write32, (%r138, %r446);
	// inline asm
	bra.uni 	BB0_114;

BB0_2:
	setp.eq.s32	%p3, %r141, 1021;
	@%p3 bra 	BB0_76;
	bra.uni 	BB0_3;

BB0_76:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd24, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd25, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd112, 1;
	setp.lt.u32	%p55, %r68, 2;
	mov.u64 	%rd204, %rd112;
	@%p55 bra 	BB0_78;

	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	mov.u64 	%rd204, %rd26;

BB0_78:
	mov.u64 	%rd27, %rd204;
	setp.lt.u32	%p56, %r68, 3;
	mov.u64 	%rd203, %rd112;
	@%p56 bra 	BB0_80;

	ld.volatile.global.u64 	%rd203, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB0_80:
	add.u64 	%rd116, %SP, 0;
	cvta.to.local.u64 	%rd30, %rd116;
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd31, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd32, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd33, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r352), _rt_print_active, ();
	// inline asm
	mov.u64 	%rd206, $str1;
	cvta.global.u64 	%rd205, %rd206;
	setp.eq.s32	%p57, %r352, 0;
	@%p57 bra 	BB0_114;

BB0_81:
	mov.u64 	%rd35, %rd206;
	add.s64 	%rd205, %rd205, 1;
	add.s64 	%rd206, %rd35, 1;
	ld.global.u8 	%rs3, [%rd35+1];
	setp.ne.s16	%p58, %rs3, 0;
	@%p58 bra 	BB0_81;

	mov.u64 	%rd118, $str1;
	cvta.global.u64 	%rd117, %rd118;
	sub.s64 	%rd119, %rd205, %rd117;
	cvt.u32.u64	%r355, %rd119;
	mov.u32 	%r356, 8;
	mov.u32 	%r357, 4;
	max.u32 	%r358, %r357, %r356;
	add.s32 	%r359, %r355, 76;
	and.b32  	%r360, %r359, -4;
	mad.lo.s32 	%r354, %r358, 7, %r360;
	// inline asm
	call (%r353), _rt_print_start_64, (%rd117, %r354);
	// inline asm
	setp.eq.s32	%p59, %r353, 0;
	@%p59 bra 	BB0_114;

	mov.u32 	%r369, 0;
	// inline asm
	call (), _rt_print_write32, (%r369, %r353);
	// inline asm
	add.s32 	%r364, %r353, 4;
	// inline asm
	call (), _rt_print_write32, (%r69, %r364);
	// inline asm
	add.s32 	%r366, %r353, 8;
	// inline asm
	call (), _rt_print_write32, (%r369, %r366);
	// inline asm
	add.s32 	%r368, %r353, 12;
	// inline asm
	call (), _rt_print_write32, (%r70, %r368);
	// inline asm
	add.s32 	%r370, %r353, 16;
	// inline asm
	call (), _rt_print_write32, (%r369, %r370);
	// inline asm
	add.s32 	%r372, %r353, 20;
	// inline asm
	call (), _rt_print_write32, (%r71, %r372);
	// inline asm
	st.local.u64 	[%rd30], %rd24;
	add.s32 	%r374, %r353, 24;
	mov.u32 	%r521, 1;
	// inline asm
	call (), _rt_print_write32, (%r521, %r374);
	// inline asm
	max.s32 	%r75, %r357, %r356;
	shr.s32 	%r377, %r75, 31;
	shr.u32 	%r378, %r377, 30;
	add.s32 	%r379, %r75, %r378;
	shr.s32 	%r76, %r379, 2;
	setp.lt.s32	%p60, %r75, 4;
	@%p60 bra 	BB0_86;

	cvt.u32.u64	%r502, %rd24;
	add.s32 	%r501, %r353, 28;
	add.s64 	%rd207, %rd30, 4;
	mov.u32 	%r503, 1;
	bra.uni 	BB0_85;

BB0_110:
	ld.local.u32 	%r502, [%rd207];
	add.s32 	%r503, %r503, 1;
	add.s32 	%r501, %r501, 4;
	add.s64 	%rd207, %rd207, 4;

BB0_85:
	mov.u32 	%r80, %r502;
	// inline asm
	call (), _rt_print_write32, (%r80, %r501);
	// inline asm
	setp.lt.s32	%p61, %r503, %r76;
	@%p61 bra 	BB0_110;

BB0_86:
	add.s32 	%r389, %r353, %r75;
	add.s32 	%r82, %r389, 28;
	// inline asm
	call (), _rt_print_write32, (%r369, %r82);
	// inline asm
	add.s32 	%r386, %r389, 32;
	// inline asm
	call (), _rt_print_write32, (%r72, %r386);
	// inline asm
	add.s32 	%r388, %r389, 36;
	st.local.u64 	[%rd30], %rd25;
	// inline asm
	call (), _rt_print_write32, (%r521, %r388);
	// inline asm
	@%p60 bra 	BB0_89;

	cvt.u32.u64	%r505, %rd25;
	add.s32 	%r504, %r389, 40;
	add.s64 	%rd208, %rd30, 4;
	mov.u32 	%r506, 1;
	bra.uni 	BB0_88;

BB0_109:
	ld.local.u32 	%r505, [%rd208];
	add.s32 	%r506, %r506, 1;
	add.s32 	%r504, %r504, 4;
	add.s64 	%rd208, %rd208, 4;

BB0_88:
	mov.u32 	%r86, %r505;
	// inline asm
	call (), _rt_print_write32, (%r86, %r504);
	// inline asm
	setp.lt.s32	%p63, %r506, %r76;
	@%p63 bra 	BB0_109;

BB0_89:
	st.local.u64 	[%rd30], %rd27;
	add.s32 	%r396, %r75, %r82;
	add.s32 	%r88, %r396, -28;
	add.s32 	%r395, %r396, 12;
	// inline asm
	call (), _rt_print_write32, (%r521, %r395);
	// inline asm
	@%p60 bra 	BB0_92;

	cvt.u32.u64	%r508, %rd27;
	mad.lo.s32 	%r398, %r75, 2, %r353;
	add.s32 	%r507, %r398, 44;
	add.s64 	%rd209, %rd30, 4;
	mov.u32 	%r509, 1;
	bra.uni 	BB0_91;

BB0_108:
	ld.local.u32 	%r508, [%rd209];
	add.s32 	%r509, %r509, 1;
	add.s32 	%r507, %r507, 4;
	add.s64 	%rd209, %rd209, 4;

BB0_91:
	mov.u32 	%r92, %r508;
	// inline asm
	call (), _rt_print_write32, (%r92, %r507);
	// inline asm
	setp.lt.s32	%p65, %r509, %r76;
	@%p65 bra 	BB0_108;

BB0_92:
	st.local.u64 	[%rd30], %rd203;
	add.s32 	%r403, %r75, %r88;
	add.s32 	%r402, %r403, 44;
	// inline asm
	call (), _rt_print_write32, (%r521, %r402);
	// inline asm
	@%p60 bra 	BB0_95;

	cvt.u32.u64	%r511, %rd203;
	mad.lo.s32 	%r405, %r75, 3, %r353;
	add.s32 	%r510, %r405, 48;
	add.s64 	%rd210, %rd30, 4;
	mov.u32 	%r512, 1;
	bra.uni 	BB0_94;

BB0_107:
	ld.local.u32 	%r511, [%rd210];
	add.s32 	%r512, %r512, 1;
	add.s32 	%r510, %r510, 4;
	add.s64 	%rd210, %rd210, 4;

BB0_94:
	mov.u32 	%r97, %r511;
	// inline asm
	call (), _rt_print_write32, (%r97, %r510);
	// inline asm
	setp.lt.s32	%p67, %r512, %r76;
	@%p67 bra 	BB0_107;

BB0_95:
	mad.lo.s32 	%r99, %r75, 2, %r88;
	add.s32 	%r409, %r99, 48;
	// inline asm
	call (), _rt_print_write32, (%r369, %r409);
	// inline asm
	add.s32 	%r411, %r99, 52;
	// inline asm
	call (), _rt_print_write32, (%r73, %r411);
	// inline asm
	st.local.u64 	[%rd30], %rd31;
	add.s32 	%r413, %r99, 56;
	// inline asm
	call (), _rt_print_write32, (%r521, %r413);
	// inline asm
	@%p60 bra 	BB0_98;

	cvt.u32.u64	%r514, %rd31;
	mad.lo.s32 	%r415, %r75, 4, %r353;
	add.s32 	%r513, %r415, 60;
	add.s64 	%rd211, %rd30, 4;
	mov.u32 	%r515, 1;
	bra.uni 	BB0_97;

BB0_106:
	ld.local.u32 	%r514, [%rd211];
	add.s32 	%r515, %r515, 1;
	add.s32 	%r513, %r513, 4;
	add.s64 	%rd211, %rd211, 4;

BB0_97:
	mov.u32 	%r103, %r514;
	// inline asm
	call (), _rt_print_write32, (%r103, %r513);
	// inline asm
	setp.lt.s32	%p69, %r515, %r76;
	@%p69 bra 	BB0_106;

BB0_98:
	st.local.u64 	[%rd30], %rd32;
	add.s32 	%r420, %r75, %r99;
	add.s32 	%r419, %r420, 60;
	// inline asm
	call (), _rt_print_write32, (%r521, %r419);
	// inline asm
	@%p60 bra 	BB0_101;

	cvt.u32.u64	%r517, %rd32;
	mad.lo.s32 	%r422, %r75, 5, %r353;
	add.s32 	%r516, %r422, 64;
	add.s64 	%rd212, %rd30, 4;
	mov.u32 	%r518, 1;
	bra.uni 	BB0_100;

BB0_105:
	ld.local.u32 	%r517, [%rd212];
	add.s32 	%r518, %r518, 1;
	add.s32 	%r516, %r516, 4;
	add.s64 	%rd212, %rd212, 4;

BB0_100:
	mov.u32 	%r108, %r517;
	// inline asm
	call (), _rt_print_write32, (%r108, %r516);
	// inline asm
	setp.lt.s32	%p71, %r518, %r76;
	@%p71 bra 	BB0_105;

BB0_101:
	add.u64 	%rd142, %SP, 16;
	cvta.to.local.u64 	%rd143, %rd142;
	st.local.u64 	[%rd143], %rd33;
	mad.lo.s32 	%r427, %r75, 2, %r99;
	add.s32 	%r426, %r427, 64;
	// inline asm
	call (), _rt_print_write32, (%r521, %r426);
	// inline asm
	@%p60 bra 	BB0_114;

	cvt.u32.u64	%r520, %rd33;
	mad.lo.s32 	%r429, %r75, 6, %r353;
	add.s32 	%r519, %r429, 68;
	add.s64 	%rd213, %rd143, 4;
	bra.uni 	BB0_103;

BB0_104:
	ld.local.u32 	%r520, [%rd213];
	add.s32 	%r521, %r521, 1;
	add.s32 	%r519, %r519, 4;
	add.s64 	%rd213, %rd213, 4;

BB0_103:
	mov.u32 	%r113, %r520;
	// inline asm
	call (), _rt_print_write32, (%r113, %r519);
	// inline asm
	setp.ge.s32	%p73, %r521, %r76;
	@%p73 bra 	BB0_114;
	bra.uni 	BB0_104;

BB0_3:
	setp.eq.s32	%p4, %r141, 1006;
	@%p4 bra 	BB0_64;
	bra.uni 	BB0_4;

BB0_64:
	// inline asm
	call (%r335), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p47, %r335, 0;
	@%p47 bra 	BB0_66;

	mov.u64 	%rd105, $str2;
	cvta.global.u64 	%rd104, %rd105;
	mov.u32 	%r337, 44;
	// inline asm
	call (%r336), _rt_print_start_64, (%rd104, %r337);
	// inline asm

BB0_66:
	ld.volatile.global.u32 	%r338, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p48, %r338, 0;
	@%p48 bra 	BB0_74;

	setp.eq.s32	%p49, %r338, 1;
	@%p49 bra 	BB0_71;
	bra.uni 	BB0_68;

BB0_71:
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r342), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p52, %r342, 0;
	@%p52 bra 	BB0_114;

	mov.u64 	%rd109, $str4;
	cvta.global.u64 	%rd108, %rd109;
	mov.u32 	%r344, 68;
	// inline asm
	call (%r343), _rt_print_start_64, (%rd108, %r344);
	// inline asm
	setp.eq.s32	%p53, %r343, 0;
	@%p53 bra 	BB0_114;

	mov.u32 	%r345, 0;
	// inline asm
	call (), _rt_print_write32, (%r345, %r343);
	// inline asm
	add.s32 	%r348, %r343, 4;
	// inline asm
	call (), _rt_print_write32, (%r66, %r348);
	// inline asm
	bra.uni 	BB0_114;

BB0_4:
	setp.eq.s32	%p5, %r141, 1007;
	@%p5 bra 	BB0_50;
	bra.uni 	BB0_5;

BB0_50:
	// inline asm
	call (%r310), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r310, 0;
	@%p37 bra 	BB0_52;

	mov.u64 	%rd97, $str6;
	cvta.global.u64 	%rd96, %rd97;
	mov.u32 	%r312, 44;
	// inline asm
	call (%r311), _rt_print_start_64, (%rd96, %r312);
	// inline asm

BB0_52:
	ld.volatile.global.u32 	%r313, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p38, %r313, 0;
	@%p38 bra 	BB0_61;

	setp.eq.s32	%p39, %r313, 1;
	@%p39 bra 	BB0_58;
	bra.uni 	BB0_54;

BB0_58:
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r321), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p43, %r321, 0;
	@%p43 bra 	BB0_114;

	mov.u64 	%rd101, $str8;
	cvta.global.u64 	%rd100, %rd101;
	mov.u32 	%r323, 68;
	// inline asm
	call (%r322), _rt_print_start_64, (%rd100, %r323);
	// inline asm
	setp.eq.s32	%p44, %r322, 0;
	@%p44 bra 	BB0_114;

	mov.u32 	%r324, 0;
	// inline asm
	call (), _rt_print_write32, (%r324, %r322);
	// inline asm
	add.s32 	%r327, %r322, 4;
	// inline asm
	call (), _rt_print_write32, (%r62, %r327);
	// inline asm
	bra.uni 	BB0_114;

BB0_5:
	setp.eq.s32	%p6, %r141, 1018;
	@%p6 bra 	BB0_38;
	bra.uni 	BB0_6;

BB0_38:
	// inline asm
	call (%r293), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r293, 0;
	@%p29 bra 	BB0_40;

	mov.u64 	%rd89, $str10;
	cvta.global.u64 	%rd88, %rd89;
	mov.u32 	%r295, 44;
	// inline asm
	call (%r294), _rt_print_start_64, (%rd88, %r295);
	// inline asm

BB0_40:
	ld.volatile.global.u32 	%r296, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p30, %r296, 0;
	@%p30 bra 	BB0_48;

	setp.eq.s32	%p31, %r296, 1;
	@%p31 bra 	BB0_45;
	bra.uni 	BB0_42;

BB0_45:
	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r300), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p34, %r300, 0;
	@%p34 bra 	BB0_114;

	mov.u64 	%rd93, $str12;
	cvta.global.u64 	%rd92, %rd93;
	mov.u32 	%r302, 68;
	// inline asm
	call (%r301), _rt_print_start_64, (%rd92, %r302);
	// inline asm
	setp.eq.s32	%p35, %r301, 0;
	@%p35 bra 	BB0_114;

	mov.u32 	%r303, 0;
	// inline asm
	call (), _rt_print_write32, (%r303, %r301);
	// inline asm
	add.s32 	%r306, %r301, 4;
	// inline asm
	call (), _rt_print_write32, (%r58, %r306);
	// inline asm
	bra.uni 	BB0_114;

BB0_74:
	// inline asm
	call (%r349), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p54, %r349, 0;
	@%p54 bra 	BB0_114;

	mov.u64 	%rd111, $str3;
	cvta.global.u64 	%rd110, %rd111;
	mov.u32 	%r351, 52;
	// inline asm
	call (%r350), _rt_print_start_64, (%rd110, %r351);
	// inline asm
	bra.uni 	BB0_114;

BB0_68:
	setp.ne.s32	%p50, %r338, 2;
	@%p50 bra 	BB0_114;

	// inline asm
	call (%r339), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p51, %r339, 0;
	@%p51 bra 	BB0_114;

	mov.u64 	%rd107, $str5;
	cvta.global.u64 	%rd106, %rd107;
	mov.u32 	%r341, 44;
	// inline asm
	call (%r340), _rt_print_start_64, (%rd106, %r341);
	// inline asm
	bra.uni 	BB0_114;

BB0_6:
	setp.eq.s32	%p7, %r141, 1019;
	@%p7 bra 	BB0_23;
	bra.uni 	BB0_7;

BB0_23:
	add.u64 	%rd76, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd76;
	add.u64 	%rd78, %SP, 8;
	cvta.to.local.u64 	%rd7, %rd78;
	ld.volatile.global.u32 	%r248, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r247), _rt_print_active, ();
	// inline asm
	mov.u64 	%rd198, $str14;
	cvta.global.u64 	%rd197, %rd198;
	setp.eq.s32	%p20, %r247, 0;
	@%p20 bra 	BB0_114;

BB0_24:
	mov.u64 	%rd12, %rd198;
	add.s64 	%rd197, %rd197, 1;
	add.s64 	%rd198, %rd12, 1;
	ld.global.u8 	%rs2, [%rd12+1];
	setp.ne.s16	%p21, %rs2, 0;
	@%p21 bra 	BB0_24;

	mov.u64 	%rd80, $str14;
	cvta.global.u64 	%rd79, %rd80;
	sub.s64 	%rd81, %rd197, %rd79;
	cvt.u32.u64	%r251, %rd81;
	mov.u32 	%r252, 8;
	mov.u32 	%r253, 4;
	max.u32 	%r254, %r253, %r252;
	add.s32 	%r255, %r251, 44;
	and.b32  	%r256, %r255, -4;
	mad.lo.s32 	%r250, %r254, 3, %r256;
	// inline asm
	call (%r249), _rt_print_start_64, (%rd79, %r250);
	// inline asm
	setp.eq.s32	%p22, %r249, 0;
	@%p22 bra 	BB0_114;

	mov.u32 	%r265, 0;
	// inline asm
	call (), _rt_print_write32, (%r265, %r249);
	// inline asm
	add.s32 	%r260, %r249, 4;
	// inline asm
	call (), _rt_print_write32, (%r27, %r260);
	// inline asm
	add.s32 	%r262, %r249, 8;
	// inline asm
	call (), _rt_print_write32, (%r265, %r262);
	// inline asm
	add.s32 	%r264, %r249, 12;
	// inline asm
	call (), _rt_print_write32, (%r28, %r264);
	// inline asm
	add.s32 	%r266, %r249, 16;
	// inline asm
	call (), _rt_print_write32, (%r265, %r266);
	// inline asm
	add.s32 	%r268, %r249, 20;
	// inline asm
	call (), _rt_print_write32, (%r29, %r268);
	// inline asm
	st.local.u64 	[%rd5], %rd8;
	add.s32 	%r270, %r249, 24;
	mov.u32 	%r500, 1;
	// inline asm
	call (), _rt_print_write32, (%r500, %r270);
	// inline asm
	max.s32 	%r31, %r253, %r252;
	shr.s32 	%r273, %r31, 31;
	shr.u32 	%r274, %r273, 30;
	add.s32 	%r275, %r31, %r274;
	shr.s32 	%r32, %r275, 2;
	setp.lt.s32	%p23, %r31, 4;
	@%p23 bra 	BB0_29;

	cvt.u32.u64	%r493, %rd8;
	add.s32 	%r492, %r249, 28;
	add.s64 	%rd199, %rd5, 4;
	mov.u32 	%r494, 1;
	bra.uni 	BB0_28;

BB0_37:
	ld.local.u32 	%r493, [%rd199];
	add.s32 	%r494, %r494, 1;
	add.s32 	%r492, %r492, 4;
	add.s64 	%rd199, %rd199, 4;

BB0_28:
	mov.u32 	%r36, %r493;
	// inline asm
	call (), _rt_print_write32, (%r36, %r492);
	// inline asm
	setp.lt.s32	%p24, %r494, %r32;
	@%p24 bra 	BB0_37;

BB0_29:
	add.s32 	%r281, %r249, %r31;
	add.s32 	%r38, %r281, 28;
	st.local.u64 	[%rd5], %rd9;
	// inline asm
	call (), _rt_print_write32, (%r500, %r38);
	// inline asm
	@%p23 bra 	BB0_32;

	cvt.u32.u64	%r496, %rd9;
	add.s32 	%r495, %r281, 32;
	add.s64 	%rd200, %rd5, 4;
	mov.u32 	%r497, 1;
	bra.uni 	BB0_31;

BB0_36:
	ld.local.u32 	%r496, [%rd200];
	add.s32 	%r497, %r497, 1;
	add.s32 	%r495, %r495, 4;
	add.s64 	%rd200, %rd200, 4;

BB0_31:
	mov.u32 	%r42, %r496;
	// inline asm
	call (), _rt_print_write32, (%r42, %r495);
	// inline asm
	setp.lt.s32	%p26, %r497, %r32;
	@%p26 bra 	BB0_36;

BB0_32:
	add.s32 	%r288, %r31, %r38;
	add.s32 	%r287, %r288, 4;
	st.local.u64 	[%rd7], %rd10;
	// inline asm
	call (), _rt_print_write32, (%r500, %r287);
	// inline asm
	@%p23 bra 	BB0_114;

	cvt.u32.u64	%r499, %rd10;
	mad.lo.s32 	%r290, %r31, 2, %r249;
	add.s32 	%r498, %r290, 36;
	add.s64 	%rd201, %rd7, 4;
	bra.uni 	BB0_34;

BB0_35:
	ld.local.u32 	%r499, [%rd201];
	add.s32 	%r500, %r500, 1;
	add.s32 	%r498, %r498, 4;
	add.s64 	%rd201, %rd201, 4;

BB0_34:
	mov.u32 	%r47, %r499;
	// inline asm
	call (), _rt_print_write32, (%r47, %r498);
	// inline asm
	setp.ge.s32	%p28, %r500, %r32;
	@%p28 bra 	BB0_114;
	bra.uni 	BB0_35;

BB0_61:
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r328), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p45, %r328, 0;
	@%p45 bra 	BB0_114;

	mov.u64 	%rd103, $str7;
	cvta.global.u64 	%rd102, %rd103;
	mov.u32 	%r330, 48;
	// inline asm
	call (%r329), _rt_print_start_64, (%rd102, %r330);
	// inline asm
	setp.eq.s32	%p46, %r329, 0;
	@%p46 bra 	BB0_114;

	mov.u32 	%r331, 0;
	// inline asm
	call (), _rt_print_write32, (%r331, %r329);
	// inline asm
	add.s32 	%r334, %r329, 4;
	// inline asm
	call (), _rt_print_write32, (%r64, %r334);
	// inline asm
	bra.uni 	BB0_114;

BB0_54:
	setp.ne.s32	%p40, %r313, 2;
	@%p40 bra 	BB0_114;

	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r314), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r314, 0;
	@%p41 bra 	BB0_114;

	mov.u64 	%rd99, $str9;
	cvta.global.u64 	%rd98, %rd99;
	mov.u32 	%r316, 48;
	// inline asm
	call (%r315), _rt_print_start_64, (%rd98, %r316);
	// inline asm
	setp.eq.s32	%p42, %r315, 0;
	@%p42 bra 	BB0_114;

	mov.u32 	%r317, 0;
	// inline asm
	call (), _rt_print_write32, (%r317, %r315);
	// inline asm
	add.s32 	%r320, %r315, 4;
	// inline asm
	call (), _rt_print_write32, (%r60, %r320);
	// inline asm
	bra.uni 	BB0_114;

BB0_7:
	setp.eq.s32	%p8, %r141, 1022;
	@%p8 bra 	BB0_19;
	bra.uni 	BB0_8;

BB0_19:
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r194), _rt_print_active, ();
	// inline asm
	mov.u64 	%rd196, $str15;
	cvta.global.u64 	%rd195, %rd196;
	setp.eq.s32	%p17, %r194, 0;
	@%p17 bra 	BB0_114;

BB0_20:
	mov.u64 	%rd2, %rd196;
	add.s64 	%rd195, %rd195, 1;
	add.s64 	%rd196, %rd2, 1;
	ld.global.u8 	%rs1, [%rd2+1];
	setp.ne.s16	%p18, %rs1, 0;
	@%p18 bra 	BB0_20;

	mov.u64 	%rd72, $str15;
	cvta.global.u64 	%rd71, %rd72;
	sub.s64 	%rd73, %rd195, %rd71;
	cvt.u32.u64	%r197, %rd73;
	add.s32 	%r198, %r197, 104;
	and.b32  	%r196, %r198, -4;
	// inline asm
	call (%r195), _rt_print_start_64, (%rd71, %r196);
	// inline asm
	setp.eq.s32	%p19, %r195, 0;
	@%p19 bra 	BB0_114;

	mov.u32 	%r235, 0;
	// inline asm
	call (), _rt_print_write32, (%r235, %r195);
	// inline asm
	add.s32 	%r202, %r195, 4;
	// inline asm
	call (), _rt_print_write32, (%r14, %r202);
	// inline asm
	add.s32 	%r204, %r195, 8;
	// inline asm
	call (), _rt_print_write32, (%r235, %r204);
	// inline asm
	add.s32 	%r206, %r195, 12;
	// inline asm
	call (), _rt_print_write32, (%r15, %r206);
	// inline asm
	add.s32 	%r208, %r195, 16;
	// inline asm
	call (), _rt_print_write32, (%r235, %r208);
	// inline asm
	add.s32 	%r210, %r195, 20;
	// inline asm
	call (), _rt_print_write32, (%r16, %r210);
	// inline asm
	add.s32 	%r212, %r195, 24;
	mov.u32 	%r243, 2;
	// inline asm
	call (), _rt_print_write32, (%r243, %r212);
	// inline asm
	add.s32 	%r214, %r195, 28;
	// inline asm
	call (), _rt_print_write32, (%r17, %r214);
	// inline asm
	add.s32 	%r216, %r195, 32;
	// inline asm
	call (), _rt_print_write32, (%r243, %r216);
	// inline asm
	add.s32 	%r218, %r195, 36;
	// inline asm
	call (), _rt_print_write32, (%r18, %r218);
	// inline asm
	add.s32 	%r220, %r195, 40;
	// inline asm
	call (), _rt_print_write32, (%r243, %r220);
	// inline asm
	add.s32 	%r222, %r195, 44;
	// inline asm
	call (), _rt_print_write32, (%r19, %r222);
	// inline asm
	add.s32 	%r224, %r195, 48;
	// inline asm
	call (), _rt_print_write32, (%r243, %r224);
	// inline asm
	add.s32 	%r226, %r195, 52;
	// inline asm
	call (), _rt_print_write32, (%r20, %r226);
	// inline asm
	add.s32 	%r228, %r195, 56;
	// inline asm
	call (), _rt_print_write32, (%r243, %r228);
	// inline asm
	add.s32 	%r230, %r195, 60;
	// inline asm
	call (), _rt_print_write32, (%r21, %r230);
	// inline asm
	add.s32 	%r232, %r195, 64;
	// inline asm
	call (), _rt_print_write32, (%r243, %r232);
	// inline asm
	add.s32 	%r234, %r195, 68;
	// inline asm
	call (), _rt_print_write32, (%r22, %r234);
	// inline asm
	add.s32 	%r236, %r195, 72;
	// inline asm
	call (), _rt_print_write32, (%r235, %r236);
	// inline asm
	add.s32 	%r238, %r195, 76;
	// inline asm
	call (), _rt_print_write32, (%r23, %r238);
	// inline asm
	add.s32 	%r240, %r195, 80;
	// inline asm
	call (), _rt_print_write32, (%r243, %r240);
	// inline asm
	add.s32 	%r242, %r195, 84;
	// inline asm
	call (), _rt_print_write32, (%r24, %r242);
	// inline asm
	add.s32 	%r244, %r195, 88;
	// inline asm
	call (), _rt_print_write32, (%r243, %r244);
	// inline asm
	add.s32 	%r246, %r195, 92;
	// inline asm
	call (), _rt_print_write32, (%r25, %r246);
	// inline asm
	bra.uni 	BB0_114;

BB0_48:
	// inline asm
	call (%r307), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r307, 0;
	@%p36 bra 	BB0_114;

	mov.u64 	%rd95, $str11;
	cvta.global.u64 	%rd94, %rd95;
	mov.u32 	%r309, 48;
	// inline asm
	call (%r308), _rt_print_start_64, (%rd94, %r309);
	// inline asm
	bra.uni 	BB0_114;

BB0_42:
	setp.ne.s32	%p32, %r296, 2;
	@%p32 bra 	BB0_114;

	// inline asm
	call (%r297), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p33, %r297, 0;
	@%p33 bra 	BB0_114;

	mov.u64 	%rd91, $str13;
	cvta.global.u64 	%rd90, %rd91;
	mov.u32 	%r299, 44;
	// inline asm
	call (%r298), _rt_print_start_64, (%rd90, %r299);
	// inline asm
	bra.uni 	BB0_114;

BB0_8:
	setp.eq.s32	%p9, %r141, 1023;
	@%p9 bra 	BB0_16;
	bra.uni 	BB0_9;

BB0_16:
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r175), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r175, 0;
	@%p15 bra 	BB0_114;

	mov.u64 	%rd68, $str16;
	cvta.global.u64 	%rd67, %rd68;
	mov.u32 	%r177, 120;
	// inline asm
	call (%r176), _rt_print_start_64, (%rd67, %r177);
	// inline asm
	setp.eq.s32	%p16, %r176, 0;
	@%p16 bra 	BB0_114;

	mov.u32 	%r190, 0;
	// inline asm
	call (), _rt_print_write32, (%r190, %r176);
	// inline asm
	add.s32 	%r181, %r176, 4;
	// inline asm
	call (), _rt_print_write32, (%r9, %r181);
	// inline asm
	add.s32 	%r183, %r176, 8;
	// inline asm
	call (), _rt_print_write32, (%r190, %r183);
	// inline asm
	add.s32 	%r185, %r176, 12;
	// inline asm
	call (), _rt_print_write32, (%r10, %r185);
	// inline asm
	add.s32 	%r187, %r176, 16;
	// inline asm
	call (), _rt_print_write32, (%r190, %r187);
	// inline asm
	add.s32 	%r189, %r176, 20;
	// inline asm
	call (), _rt_print_write32, (%r11, %r189);
	// inline asm
	add.s32 	%r191, %r176, 24;
	// inline asm
	call (), _rt_print_write32, (%r190, %r191);
	// inline asm
	add.s32 	%r193, %r176, 28;
	// inline asm
	call (), _rt_print_write32, (%r12, %r193);
	// inline asm
	bra.uni 	BB0_114;

BB0_9:
	add.s32 	%r2, %r141, -1024;
	setp.lt.u32	%p10, %r2, 64512;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r142), _rt_print_active, ();
	// inline asm
	@%p10 bra 	BB0_13;
	bra.uni 	BB0_10;

BB0_13:
	setp.eq.s32	%p13, %r142, 0;
	@%p13 bra 	BB0_114;

	mov.u64 	%rd66, $str17;
	cvta.global.u64 	%rd65, %rd66;
	mov.u32 	%r158, 96;
	// inline asm
	call (%r157), _rt_print_start_64, (%rd65, %r158);
	// inline asm
	setp.eq.s32	%p14, %r157, 0;
	@%p14 bra 	BB0_114;

	mov.u32 	%r171, 0;
	// inline asm
	call (), _rt_print_write32, (%r171, %r157);
	// inline asm
	add.s32 	%r162, %r157, 4;
	// inline asm
	call (), _rt_print_write32, (%r2, %r162);
	// inline asm
	add.s32 	%r164, %r157, 8;
	// inline asm
	call (), _rt_print_write32, (%r171, %r164);
	// inline asm
	add.s32 	%r166, %r157, 12;
	// inline asm
	call (), _rt_print_write32, (%r3, %r166);
	// inline asm
	add.s32 	%r168, %r157, 16;
	// inline asm
	call (), _rt_print_write32, (%r171, %r168);
	// inline asm
	add.s32 	%r170, %r157, 20;
	// inline asm
	call (), _rt_print_write32, (%r4, %r170);
	// inline asm
	add.s32 	%r172, %r157, 24;
	// inline asm
	call (), _rt_print_write32, (%r171, %r172);
	// inline asm
	add.s32 	%r174, %r157, 28;
	// inline asm
	call (), _rt_print_write32, (%r5, %r174);
	// inline asm
	bra.uni 	BB0_114;

BB0_10:
	setp.eq.s32	%p11, %r142, 0;
	@%p11 bra 	BB0_114;

	mov.u64 	%rd64, $str18;
	cvta.global.u64 	%rd63, %rd64;
	mov.u32 	%r144, 84;
	// inline asm
	call (%r143), _rt_print_start_64, (%rd63, %r144);
	// inline asm
	setp.eq.s32	%p12, %r143, 0;
	@%p12 bra 	BB0_114;

	mov.u32 	%r153, 0;
	// inline asm
	call (), _rt_print_write32, (%r153, %r143);
	// inline asm
	add.s32 	%r148, %r143, 4;
	// inline asm
	call (), _rt_print_write32, (%r3, %r148);
	// inline asm
	add.s32 	%r150, %r143, 8;
	// inline asm
	call (), _rt_print_write32, (%r153, %r150);
	// inline asm
	add.s32 	%r152, %r143, 12;
	// inline asm
	call (), _rt_print_write32, (%r4, %r152);
	// inline asm
	add.s32 	%r154, %r143, 16;
	// inline asm
	call (), _rt_print_write32, (%r153, %r154);
	// inline asm
	add.s32 	%r156, %r143, 20;
	// inline asm
	call (), _rt_print_write32, (%r5, %r156);
	// inline asm

BB0_114:
	mov.f32 	%f32, 0f48F42400;
	mov.f32 	%f31, %f32;
	mov.f32 	%f30, %f32;
	// inline asm
	call (%r447), _rt_get_exception_code, ();
	// inline asm
	setp.gt.s32	%p76, %r447, 1021;
	@%p76 bra 	BB0_119;

	setp.eq.s32	%p80, %r447, 1019;
	@%p80 bra 	BB0_128;

	setp.eq.s32	%p81, %r447, 1020;
	@%p81 bra 	BB0_125;
	bra.uni 	BB0_117;

BB0_125:
	mov.f32 	%f32, 0f00000000;
	mov.f32 	%f31, 0f49742400;
	mov.f32 	%f30, %f31;
	bra.uni 	BB0_128;

BB0_119:
	setp.eq.s32	%p77, %r447, 1022;
	@%p77 bra 	BB0_124;

	setp.eq.s32	%p78, %r447, 1024;
	@%p78 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	mov.f32 	%f32, 0f49742400;
	mov.f32 	%f31, 0f00000000;
	bra.uni 	BB0_127;

BB0_117:
	setp.eq.s32	%p82, %r447, 1021;
	@%p82 bra 	BB0_118;
	bra.uni 	BB0_126;

BB0_118:
	mov.f32 	%f32, 0f00000000;
	mov.f32 	%f31, %f32;
	mov.f32 	%f30, 0f49742400;
	bra.uni 	BB0_128;

BB0_124:
	mov.f32 	%f32, 0f49742400;
	mov.f32 	%f31, %f32;
	mov.f32 	%f30, 0f00000000;
	bra.uni 	BB0_128;

BB0_121:
	setp.ne.s32	%p79, %r447, 1025;
	@%p79 bra 	BB0_126;

	mov.f32 	%f32, 0f494F8500;
	mov.f32 	%f31, 0f49127C00;
	mov.f32 	%f30, 0f00000000;
	bra.uni 	BB0_128;

BB0_126:
	mov.f32 	%f32, 0f00000000;
	mov.f32 	%f31, %f32;

BB0_127:
	mov.f32 	%f30, %f32;

BB0_128:
	ld.global.s32 	%rd150, [render_task_id];
	mov.u64 	%rd154, render_task_data;
	cvta.global.u64 	%rd149, %rd154;
	mov.u32 	%r449, 1;
	mov.u32 	%r450, 272;
	mov.u64 	%rd153, 0;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r449, %r450, %rd150, %rd153, %rd153, %rd153);
	// inline asm
	ld.f32 	%f29, [%rd148+16];
	cvt.rzi.s32.f32	%r452, %f29;
	ld.u32 	%r453, [%rd148];
	shl.b32 	%r454, %r453, 1;
	add.s32 	%r455, %r452, %r454;
	ld.global.v2.u32 	{%r456, %r457}, [launch_index];
	mad.lo.s32 	%r460, %r457, %r455, %r456;
	cvt.u64.u32	%rd60, %r460;
	mov.f32 	%f7, 0f3F800000;
	ld.u32 	%r451, [%rd148+208];
	setp.eq.s32	%p83, %r451, 0;
	@%p83 bra 	BB0_151;

	setp.ne.s32	%p84, %r451, 1;
	@%p84 bra 	BB0_131;

	ld.u32 	%r461, [%rd148+212];
	mov.u32 	%r463, 16;
	// inline asm
	call (%rd155), _rt_buffer_get_id_64, (%r461, %r449, %r463, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd155], {%f30, %f31, %f32, %f7};

BB0_131:
	ld.u32 	%r464, [%rd148+216];
	setp.eq.s32	%p85, %r464, 0;
	@%p85 bra 	BB0_151;

	setp.ne.s32	%p86, %r464, 1;
	@%p86 bra 	BB0_134;

	ld.u32 	%r465, [%rd148+220];
	mov.u32 	%r467, 16;
	// inline asm
	call (%rd160), _rt_buffer_get_id_64, (%r465, %r449, %r467, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd160], {%f30, %f31, %f32, %f7};

BB0_134:
	ld.u32 	%r468, [%rd148+224];
	setp.eq.s32	%p87, %r468, 0;
	@%p87 bra 	BB0_151;

	setp.ne.s32	%p88, %r468, 1;
	@%p88 bra 	BB0_137;

	ld.u32 	%r469, [%rd148+228];
	mov.u32 	%r471, 16;
	// inline asm
	call (%rd165), _rt_buffer_get_id_64, (%r469, %r449, %r471, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd165], {%f30, %f31, %f32, %f7};

BB0_137:
	ld.u32 	%r472, [%rd148+232];
	setp.eq.s32	%p89, %r472, 0;
	@%p89 bra 	BB0_151;

	setp.ne.s32	%p90, %r472, 1;
	@%p90 bra 	BB0_140;

	ld.u32 	%r473, [%rd148+236];
	mov.u32 	%r475, 16;
	// inline asm
	call (%rd170), _rt_buffer_get_id_64, (%r473, %r449, %r475, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd170], {%f30, %f31, %f32, %f7};

BB0_140:
	ld.u32 	%r476, [%rd148+240];
	setp.eq.s32	%p91, %r476, 0;
	@%p91 bra 	BB0_151;

	setp.ne.s32	%p92, %r476, 1;
	@%p92 bra 	BB0_143;

	ld.u32 	%r477, [%rd148+244];
	mov.u32 	%r479, 16;
	// inline asm
	call (%rd175), _rt_buffer_get_id_64, (%r477, %r449, %r479, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd175], {%f30, %f31, %f32, %f7};

BB0_143:
	ld.u32 	%r480, [%rd148+248];
	setp.eq.s32	%p93, %r480, 0;
	@%p93 bra 	BB0_151;

	setp.ne.s32	%p94, %r480, 1;
	@%p94 bra 	BB0_146;

	ld.u32 	%r481, [%rd148+252];
	mov.u32 	%r483, 16;
	// inline asm
	call (%rd180), _rt_buffer_get_id_64, (%r481, %r449, %r483, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd180], {%f30, %f31, %f32, %f7};

BB0_146:
	ld.u32 	%r484, [%rd148+256];
	setp.eq.s32	%p95, %r484, 0;
	@%p95 bra 	BB0_151;

	setp.ne.s32	%p96, %r484, 1;
	@%p96 bra 	BB0_149;

	ld.u32 	%r485, [%rd148+260];
	mov.u32 	%r487, 16;
	// inline asm
	call (%rd185), _rt_buffer_get_id_64, (%r485, %r449, %r487, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd185], {%f30, %f31, %f32, %f7};

BB0_149:
	ld.u32 	%r488, [%rd148+264];
	setp.ne.s32	%p97, %r488, 1;
	@%p97 bra 	BB0_151;

	ld.u32 	%r489, [%rd148+268];
	mov.u32 	%r491, 16;
	// inline asm
	call (%rd190), _rt_buffer_get_id_64, (%r489, %r449, %r491, %rd60, %rd153, %rd153, %rd153);
	// inline asm
	st.v4.f32 	[%rd190], {%f30, %f31, %f32, %f7};

BB0_151:
	ret;
}


