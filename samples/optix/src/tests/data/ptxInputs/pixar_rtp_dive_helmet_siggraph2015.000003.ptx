//
// Generated by LWPU LWVM Compiler
//
// Compiler Build ID: CL-19324607
// Lwca compilation tools, release 7.0, V7.0.27
// Based on LLVM 3.4svn
//

.version 4.2
.target sm_35
.address_size 64

	// .weak	lwdaMalloc
.global .align 4 .b8 geoPropertiesProc[4];
.global .align 4 .u32 oreNumLightComponents;
.global .align 4 .u32 oreNumLightMaxComponents;
.global .align 1 .b8 oreComponentsBuffer[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typeinfo17geoPropertiesProcE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21oreNumLightComponentsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo24oreNumLightMaxComponentsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17geoPropertiesProcE[20] = {71, 101, 111, 80, 114, 111, 112, 101, 114, 116, 105, 101, 115, 80, 114, 111, 99, 73, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename21oreNumLightComponentsE[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_typename24oreNumLightMaxComponentsE[9] = {117, 110, 115, 105, 103, 110, 101, 100, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum17geoPropertiesProcE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum21oreNumLightComponentsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum24oreNumLightMaxComponentsE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic21oreNumLightComponentsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic24oreNumLightMaxComponentsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17geoPropertiesProcE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation21oreNumLightComponentsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation24oreNumLightMaxComponentsE[1];

.weak .func  (.param .b32 func_retval0) lwdaMalloc(
	.param .b64 lwdaMalloc_param_0,
	.param .b64 lwdaMalloc_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) lwdaFuncGetAttributes(
	.param .b64 lwdaFuncGetAttributes_param_0,
	.param .b64 lwdaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) lwdaDeviceGetAttribute(
	.param .b64 lwdaDeviceGetAttribute_param_0,
	.param .b32 lwdaDeviceGetAttribute_param_1,
	.param .b32 lwdaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaGetDevice
.weak .func  (.param .b32 func_retval0) lwdaGetDevice(
	.param .b64 lwdaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 lwdaOclwpancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z16fresnelConductorf6float3S_
.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z16fresnelConductorf6float3S_(
	.param .b32 _Z16fresnelConductorf6float3S__param_0,
	.param .align 4 .b8 _Z16fresnelConductorf6float3S__param_1[12],
	.param .align 4 .b8 _Z16fresnelConductorf6float3S__param_2[12]
)
{
	.reg .f32 	%f<60>;


	ld.param.f32 	%f1, [_Z16fresnelConductorf6float3S__param_0];
	ld.param.f32 	%f2, [_Z16fresnelConductorf6float3S__param_1+8];
	ld.param.f32 	%f3, [_Z16fresnelConductorf6float3S__param_1+4];
	ld.param.f32 	%f4, [_Z16fresnelConductorf6float3S__param_1];
	ld.param.f32 	%f5, [_Z16fresnelConductorf6float3S__param_2+8];
	ld.param.f32 	%f6, [_Z16fresnelConductorf6float3S__param_2+4];
	ld.param.f32 	%f7, [_Z16fresnelConductorf6float3S__param_2];
	mul.ftz.f32 	%f8, %f1, %f1;
	mul.ftz.f32 	%f9, %f7, %f7;
	mul.ftz.f32 	%f10, %f6, %f6;
	mul.ftz.f32 	%f11, %f5, %f5;
	fma.rn.ftz.f32 	%f12, %f4, %f4, %f9;
	fma.rn.ftz.f32 	%f13, %f3, %f3, %f10;
	fma.rn.ftz.f32 	%f14, %f2, %f2, %f11;
	mul.ftz.f32 	%f15, %f8, %f12;
	mul.ftz.f32 	%f16, %f8, %f13;
	mul.ftz.f32 	%f17, %f8, %f14;
	add.ftz.f32 	%f18, %f4, %f4;
	add.ftz.f32 	%f19, %f3, %f3;
	add.ftz.f32 	%f20, %f2, %f2;
	mul.ftz.f32 	%f21, %f18, %f1;
	mul.ftz.f32 	%f22, %f19, %f1;
	mul.ftz.f32 	%f23, %f20, %f1;
	sub.ftz.f32 	%f24, %f15, %f21;
	sub.ftz.f32 	%f25, %f16, %f22;
	sub.ftz.f32 	%f26, %f17, %f23;
	add.ftz.f32 	%f27, %f24, 0f3F800000;
	add.ftz.f32 	%f28, %f25, 0f3F800000;
	add.ftz.f32 	%f29, %f26, 0f3F800000;
	add.ftz.f32 	%f30, %f21, %f15;
	add.ftz.f32 	%f31, %f22, %f16;
	add.ftz.f32 	%f32, %f23, %f17;
	add.ftz.f32 	%f33, %f30, 0f3F800000;
	add.ftz.f32 	%f34, %f31, 0f3F800000;
	add.ftz.f32 	%f35, %f32, 0f3F800000;
	div.approx.ftz.f32 	%f36, %f27, %f33;
	div.approx.ftz.f32 	%f37, %f28, %f34;
	div.approx.ftz.f32 	%f38, %f29, %f35;
	sub.ftz.f32 	%f39, %f12, %f21;
	sub.ftz.f32 	%f40, %f13, %f22;
	sub.ftz.f32 	%f41, %f14, %f23;
	add.ftz.f32 	%f42, %f8, %f39;
	add.ftz.f32 	%f43, %f8, %f40;
	add.ftz.f32 	%f44, %f8, %f41;
	add.ftz.f32 	%f45, %f21, %f12;
	add.ftz.f32 	%f46, %f22, %f13;
	add.ftz.f32 	%f47, %f23, %f14;
	add.ftz.f32 	%f48, %f8, %f45;
	add.ftz.f32 	%f49, %f8, %f46;
	add.ftz.f32 	%f50, %f8, %f47;
	div.approx.ftz.f32 	%f51, %f42, %f48;
	div.approx.ftz.f32 	%f52, %f43, %f49;
	div.approx.ftz.f32 	%f53, %f44, %f50;
	add.ftz.f32 	%f54, %f36, %f51;
	add.ftz.f32 	%f55, %f37, %f52;
	add.ftz.f32 	%f56, %f38, %f53;
	mul.ftz.f32 	%f57, %f54, 0f3F000000;
	mul.ftz.f32 	%f58, %f55, 0f3F000000;
	mul.ftz.f32 	%f59, %f56, 0f3F000000;
	st.param.f32	[func_retval0+0], %f57;
	st.param.f32	[func_retval0+4], %f58;
	st.param.f32	[func_retval0+8], %f59;
	ret;
}

	// .globl	_Z16fresnelConductorfff
.visible .func  (.param .b32 func_retval0) _Z16fresnelConductorfff(
	.param .b32 _Z16fresnelConductorfff_param_0,
	.param .b32 _Z16fresnelConductorfff_param_1,
	.param .b32 _Z16fresnelConductorfff_param_2
)
{
	.reg .f32 	%f<22>;


	ld.param.f32 	%f1, [_Z16fresnelConductorfff_param_0];
	ld.param.f32 	%f2, [_Z16fresnelConductorfff_param_1];
	ld.param.f32 	%f3, [_Z16fresnelConductorfff_param_2];
	mul.ftz.f32 	%f4, %f1, %f1;
	mul.ftz.f32 	%f5, %f3, %f3;
	fma.rn.ftz.f32 	%f6, %f2, %f2, %f5;
	mul.ftz.f32 	%f7, %f4, %f6;
	add.ftz.f32 	%f8, %f2, %f2;
	mul.ftz.f32 	%f9, %f8, %f1;
	sub.ftz.f32 	%f10, %f7, %f9;
	add.ftz.f32 	%f11, %f10, 0f3F800000;
	add.ftz.f32 	%f12, %f9, %f7;
	add.ftz.f32 	%f13, %f12, 0f3F800000;
	div.approx.ftz.f32 	%f14, %f11, %f13;
	sub.ftz.f32 	%f15, %f6, %f9;
	add.ftz.f32 	%f16, %f4, %f15;
	add.ftz.f32 	%f17, %f9, %f6;
	add.ftz.f32 	%f18, %f4, %f17;
	div.approx.ftz.f32 	%f19, %f16, %f18;
	add.ftz.f32 	%f20, %f14, %f19;
	mul.ftz.f32 	%f21, %f20, 0f3F000000;
	st.param.f32	[func_retval0+0], %f21;
	ret;
}

	// .globl	_Z17fresnelDielectricffff
.visible .func  (.param .b32 func_retval0) _Z17fresnelDielectricffff(
	.param .b32 _Z17fresnelDielectricffff_param_0,
	.param .b32 _Z17fresnelDielectricffff_param_1,
	.param .b32 _Z17fresnelDielectricffff_param_2,
	.param .b32 _Z17fresnelDielectricffff_param_3
)
{
	.reg .f32 	%f<18>;


	ld.param.f32 	%f1, [_Z17fresnelDielectricffff_param_0];
	ld.param.f32 	%f2, [_Z17fresnelDielectricffff_param_1];
	ld.param.f32 	%f3, [_Z17fresnelDielectricffff_param_2];
	ld.param.f32 	%f4, [_Z17fresnelDielectricffff_param_3];
	mul.ftz.f32 	%f5, %f1, %f4;
	mul.ftz.f32 	%f6, %f2, %f3;
	sub.ftz.f32 	%f7, %f5, %f6;
	add.ftz.f32 	%f8, %f6, %f5;
	div.approx.ftz.f32 	%f9, %f7, %f8;
	mul.ftz.f32 	%f10, %f1, %f3;
	mul.ftz.f32 	%f11, %f2, %f4;
	sub.ftz.f32 	%f12, %f10, %f11;
	add.ftz.f32 	%f13, %f10, %f11;
	div.approx.ftz.f32 	%f14, %f12, %f13;
	mul.ftz.f32 	%f15, %f14, %f14;
	fma.rn.ftz.f32 	%f16, %f9, %f9, %f15;
	mul.ftz.f32 	%f17, %f16, 0f3F000000;
	st.param.f32	[func_retval0+0], %f17;
	ret;
}

	// .globl	_Z14fresnelSchlickff
.visible .func  (.param .b32 func_retval0) _Z14fresnelSchlickff(
	.param .b32 _Z14fresnelSchlickff_param_0,
	.param .b32 _Z14fresnelSchlickff_param_1
)
{
	.reg .f32 	%f<14>;


	ld.param.f32 	%f1, [_Z14fresnelSchlickff_param_0];
	ld.param.f32 	%f2, [_Z14fresnelSchlickff_param_1];
	mov.f32 	%f3, 0f3F800000;
	sub.ftz.f32 	%f4, %f3, %f2;
	add.ftz.f32 	%f5, %f2, 0f3F800000;
	div.approx.ftz.f32 	%f6, %f4, %f5;
	mul.ftz.f32 	%f7, %f6, %f6;
	sub.ftz.f32 	%f8, %f3, %f1;
	mul.ftz.f32 	%f9, %f8, %f8;
	sub.ftz.f32 	%f10, %f3, %f7;
	mul.ftz.f32 	%f11, %f9, %f9;
	mul.ftz.f32 	%f12, %f8, %f11;
	fma.rn.ftz.f32 	%f13, %f12, %f10, %f7;
	st.param.f32	[func_retval0+0], %f13;
	ret;
}

	// .globl	_Z22fresnelSchlickExtendedffff
.visible .func  (.param .b32 func_retval0) _Z22fresnelSchlickExtendedffff(
	.param .b32 _Z22fresnelSchlickExtendedffff_param_0,
	.param .b32 _Z22fresnelSchlickExtendedffff_param_1,
	.param .b32 _Z22fresnelSchlickExtendedffff_param_2,
	.param .b32 _Z22fresnelSchlickExtendedffff_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<16>;


	ld.param.f32 	%f3, [_Z22fresnelSchlickExtendedffff_param_0];
	ld.param.f32 	%f4, [_Z22fresnelSchlickExtendedffff_param_1];
	ld.param.f32 	%f5, [_Z22fresnelSchlickExtendedffff_param_2];
	ld.param.f32 	%f6, [_Z22fresnelSchlickExtendedffff_param_3];
	setp.gt.ftz.f32	%p1, %f6, %f5;
	setp.lt.ftz.f32	%p2, %f3, 0f3F800000;
	and.pred  	%p3, %p1, %p2;
	mov.f32 	%f15, %f5;
	@!%p3 bra 	BB10_3;
	bra.uni 	BB10_1;

BB10_1:
	setp.leu.ftz.f32	%p4, %f3, 0f00000000;
	mov.f32 	%f15, %f6;
	@%p4 bra 	BB10_3;

	sub.ftz.f32 	%f7, %f6, %f5;
	mov.f32 	%f8, 0f3F800000;
	sub.ftz.f32 	%f9, %f8, %f3;
	lg2.approx.ftz.f32 	%f10, %f9;
	mul.ftz.f32 	%f11, %f10, %f4;
	ex2.approx.ftz.f32 	%f12, %f11;
	fma.rn.ftz.f32 	%f15, %f7, %f12, %f5;

BB10_3:
	mov.f32 	%f13, 0f00000000;
	max.ftz.f32 	%f14, %f15, %f13;
	st.param.f32	[func_retval0+0], %f14;
	ret;
}

	// .globl	_Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params
.visible .func _Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params(
	.param .b64 _Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_0,
	.param .b64 _Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_1,
	.param .b64 _Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_2
)
{
	.local .align 8 .b8 	__local_depot11[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<23>;
	.reg .f32 	%f<157>;
	.reg .s32 	%r<26>;
	.reg .s64 	%rd<30>;


	mov.u64 	%rd29, __local_depot11;
	cvta.local.u64 	%SP, %rd29;
	ld.param.u64 	%rd6, [_Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_0];
	ld.param.u64 	%rd7, [_Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_1];
	ld.param.u64 	%rd8, [_Z26RunComponentsAndApplyMultsRK17RtpShadingContextRfR17LightExtra_params_param_2];
	ld.f32 	%f61, [%rd7];
	setp.eq.ftz.f32	%p3, %f61, 0f00000000;
	@%p3 bra 	BB11_16;

	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd9;
	ld.global.u32 	%r12, [oreNumLightComponents];
	setp.eq.s32	%p4, %r12, 0;
	mov.f32 	%f151, 0f3F800000;
	mov.f32 	%f152, %f151;
	mov.f32 	%f153, %f151;
	mov.f32 	%f154, %f151;
	mov.f32 	%f155, %f151;
	mov.f32 	%f156, %f151;
	mov.f32 	%f143, %f151;
	mov.u32 	%r25, 0;
	mov.u32 	%r24, %r25;
	@%p4 bra 	BB11_4;

	mov.f32 	%f151, 0f3F800000;
	mov.f32 	%f152, %f151;
	mov.f32 	%f153, %f151;
	mov.f32 	%f154, %f151;
	mov.f32 	%f155, %f151;
	mov.f32 	%f156, %f151;
	mov.f32 	%f143, %f151;
	mov.u32 	%r25, 0;

BB11_3:
	mov.u32 	%r17, 1065353216;
	st.local.u32 	[%rd1], %r17;
	st.local.u32 	[%rd1+4], %r17;
	st.local.u32 	[%rd1+8], %r17;
	st.local.u32 	[%rd1+12], %r17;
	st.local.u32 	[%rd1+16], %r17;
	st.local.u32 	[%rd1+24], %r17;
	st.local.u32 	[%rd1+20], %r17;
	st.local.u32 	[%rd1+28], %r17;
	cvt.s64.s32	%rd12, %r25;
	mov.u64 	%rd17, oreComponentsBuffer;
	cvta.global.u64 	%rd11, %rd17;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 4;
	mov.u64 	%rd15, 0;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r14, %r15, %rd12, %rd15, %rd15, %rd15);
	// inline asm
	ld.u32 	%r16, [%rd10];
	// inline asm
	call (%rd16), _rt_callable_program_from_id_64, (%r16);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	prototype_0 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd16, 
	(
	param0, 
	param1
	)
	, prototype_0;
	
	//{
	}// Callseq End 0
	ld.local.f32 	%f76, [%rd1+4];
	add.ftz.f32 	%f77, %f76, 0fBF800000;
	ld.local.f32 	%f78, [%rd1+8];
	add.ftz.f32 	%f79, %f78, 0fBF800000;
	ld.local.f32 	%f80, [%rd1+12];
	add.ftz.f32 	%f81, %f80, 0fBF800000;
	ld.local.f32 	%f82, [%rd1];
	fma.rn.ftz.f32 	%f83, %f82, %f77, 0f3F800000;
	fma.rn.ftz.f32 	%f84, %f82, %f79, 0f3F800000;
	fma.rn.ftz.f32 	%f85, %f82, %f81, 0f3F800000;
	mul.ftz.f32 	%f151, %f151, %f83;
	mul.ftz.f32 	%f152, %f152, %f84;
	mul.ftz.f32 	%f153, %f153, %f85;
	ld.local.f32 	%f86, [%rd1+16];
	add.ftz.f32 	%f87, %f86, 0fBF800000;
	ld.local.f32 	%f88, [%rd1+20];
	add.ftz.f32 	%f89, %f88, 0fBF800000;
	ld.local.f32 	%f90, [%rd1+24];
	add.ftz.f32 	%f91, %f90, 0fBF800000;
	fma.rn.ftz.f32 	%f92, %f82, %f87, 0f3F800000;
	fma.rn.ftz.f32 	%f93, %f82, %f89, 0f3F800000;
	fma.rn.ftz.f32 	%f94, %f82, %f91, 0f3F800000;
	mul.ftz.f32 	%f154, %f154, %f92;
	mul.ftz.f32 	%f155, %f155, %f93;
	mul.ftz.f32 	%f156, %f156, %f94;
	ld.local.f32 	%f95, [%rd1+28];
	add.ftz.f32 	%f96, %f95, 0fBF800000;
	fma.rn.ftz.f32 	%f97, %f82, %f96, 0f3F800000;
	mul.ftz.f32 	%f143, %f143, %f97;
	ld.global.u32 	%r24, [oreNumLightComponents];
	add.s32 	%r25, %r25, 1;
	setp.lt.u32	%p5, %r25, %r24;
	@%p5 bra 	BB11_3;

BB11_4:
	ld.global.u32 	%r6, [oreNumLightMaxComponents];
	setp.eq.s32	%p6, %r6, 0;
	@%p6 bra 	BB11_13;

	add.s32 	%r7, %r6, %r24;
	mov.pred 	%p22, -1;
	mov.f32 	%f150, 0f00000000;
	mov.f32 	%f149, %f150;
	mov.f32 	%f148, %f150;
	mov.f32 	%f147, %f150;
	mov.f32 	%f146, %f150;
	mov.f32 	%f145, %f150;
	setp.ge.u32	%p8, %r25, %r7;
	@%p8 bra 	BB11_11;

	cvt.s64.s32	%rd28, %r25;
	mov.f32 	%f144, 0fBF800000;
	mov.f32 	%f150, 0f00000000;
	mov.f32 	%f149, %f150;
	mov.f32 	%f148, %f150;
	mov.f32 	%f147, %f150;
	mov.f32 	%f146, %f150;
	mov.f32 	%f145, %f150;

BB11_7:
	mov.u32 	%r21, -1082130432;
	st.local.u32 	[%rd1], %r21;
	mov.u32 	%r22, 1065353216;
	st.local.u32 	[%rd1+4], %r22;
	st.local.u32 	[%rd1+8], %r22;
	st.local.u32 	[%rd1+12], %r22;
	st.local.u32 	[%rd1+16], %r22;
	st.local.u32 	[%rd1+24], %r22;
	st.local.u32 	[%rd1+20], %r22;
	st.local.u32 	[%rd1+28], %r22;
	mov.u64 	%rd26, oreComponentsBuffer;
	cvta.global.u64 	%rd20, %rd26;
	mov.u32 	%r18, 1;
	mov.u32 	%r19, 4;
	mov.u64 	%rd24, 0;
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r18, %r19, %rd28, %rd24, %rd24, %rd24);
	// inline asm
	ld.u32 	%r20, [%rd19];
	// inline asm
	call (%rd25), _rt_callable_program_from_id_64, (%r20);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	prototype_1 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd25, 
	(
	param0, 
	param1
	)
	, prototype_1;
	
	//{
	}// Callseq End 1
	ld.local.f32 	%f29, [%rd1];
	setp.ltu.ftz.f32	%p9, %f29, 0f00000000;
	@%p9 bra 	BB11_9;

	ld.local.f32 	%f111, [%rd1+4];
	max.ftz.f32 	%f112, %f150, %f111;
	ld.local.f32 	%f113, [%rd1+8];
	max.ftz.f32 	%f114, %f149, %f113;
	ld.local.f32 	%f115, [%rd1+12];
	max.ftz.f32 	%f116, %f148, %f115;
	sub.ftz.f32 	%f117, %f112, %f150;
	sub.ftz.f32 	%f118, %f114, %f149;
	sub.ftz.f32 	%f119, %f116, %f148;
	fma.rn.ftz.f32 	%f150, %f117, %f29, %f150;
	fma.rn.ftz.f32 	%f149, %f118, %f29, %f149;
	fma.rn.ftz.f32 	%f148, %f119, %f29, %f148;
	ld.local.f32 	%f120, [%rd1+16];
	max.ftz.f32 	%f121, %f147, %f120;
	ld.local.f32 	%f122, [%rd1+20];
	max.ftz.f32 	%f123, %f146, %f122;
	ld.local.f32 	%f124, [%rd1+24];
	max.ftz.f32 	%f125, %f145, %f124;
	sub.ftz.f32 	%f126, %f121, %f147;
	sub.ftz.f32 	%f127, %f123, %f146;
	sub.ftz.f32 	%f128, %f125, %f145;
	fma.rn.ftz.f32 	%f147, %f126, %f29, %f147;
	fma.rn.ftz.f32 	%f146, %f127, %f29, %f146;
	fma.rn.ftz.f32 	%f145, %f128, %f29, %f145;

BB11_9:
	max.ftz.f32 	%f144, %f144, %f29;
	add.s64 	%rd28, %rd28, 1;
	add.s32 	%r25, %r25, 1;
	setp.lt.u32	%p10, %r25, %r7;
	@%p10 bra 	BB11_7;

	setp.ltu.ftz.f32	%p22, %f144, 0f00000000;

BB11_11:
	@%p22 bra 	BB11_13;

	mul.ftz.f32 	%f151, %f151, %f150;
	mul.ftz.f32 	%f152, %f152, %f149;
	mul.ftz.f32 	%f153, %f153, %f148;
	mul.ftz.f32 	%f154, %f154, %f147;
	mul.ftz.f32 	%f155, %f155, %f146;
	mul.ftz.f32 	%f156, %f156, %f145;

BB11_13:
	add.s64 	%rd5, %rd8, 4;
	ld.f32 	%f129, [%rd8+4];
	mul.ftz.f32 	%f130, %f151, %f129;
	ld.f32 	%f131, [%rd8+8];
	ld.f32 	%f132, [%rd8+12];
	ld.f32 	%f133, [%rd8+16];
	st.f32 	[%rd8+4], %f130;
	mul.ftz.f32 	%f134, %f152, %f131;
	st.f32 	[%rd8+8], %f134;
	mul.ftz.f32 	%f135, %f153, %f132;
	st.f32 	[%rd8+12], %f135;
	mul.ftz.f32 	%f136, %f154, %f133;
	st.f32 	[%rd8+16], %f136;
	ld.f32 	%f137, [%rd8+20];
	mul.ftz.f32 	%f138, %f155, %f137;
	ld.f32 	%f139, [%rd8+24];
	st.f32 	[%rd8+20], %f138;
	mul.ftz.f32 	%f140, %f156, %f139;
	st.f32 	[%rd8+24], %f140;
	setp.eq.ftz.f32	%p11, %f130, 0f00000000;
	setp.eq.ftz.f32	%p12, %f134, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	setp.eq.ftz.f32	%p14, %f135, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	setp.eq.ftz.f32	%p16, %f136, 0f00000000;
	and.pred  	%p17, %p15, %p16;
	setp.eq.ftz.f32	%p18, %f138, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.ftz.f32	%p20, %f140, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	@%p21 bra 	BB11_15;
	bra.uni 	BB11_14;

BB11_15:
	mov.u32 	%r23, 0;
	st.u32 	[%rd7], %r23;
	bra.uni 	BB11_16;

BB11_14:
	mov.f32 	%f141, 0f00000000;
	max.ftz.f32 	%f142, %f143, %f141;
	st.f32 	[%rd5+-4], %f142;

BB11_16:
	ret;
}

	// .globl	_ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev
.visible .func _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev(
	.param .b64 _ZN5optix17callableProgramIdIFvR20ShadingLocalGeometryiEEC2Ev_param_0
)
{



	ret;
}

	// .globl	_ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev
.visible .func _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev(
	.param .b64 _ZN28rti_internal_callableprogram21callableProgramIdBaseIvR20ShadingLocalGeometryiNS_9CPArgVoidES3_S3_S3_S3_S3_S3_S3_EC2Ev_param_0
)
{



	ret;
}


