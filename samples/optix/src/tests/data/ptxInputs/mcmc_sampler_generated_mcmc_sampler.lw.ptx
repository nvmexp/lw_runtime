//
// Generated by LWPU LWVM Compiler
// Compiler built on Tue Feb 25 03:01:39 2014 (1393293699)
// Lwca compilation tools, release 6.0, V6.0.1
//

.version 4.0
.target sm_20
.address_size 64

.global .align 4 .f32 overcast;
.global .align 4 .b8 sun_direction[12];
.global .align 8 .b8 sun_color[12];
.global .align 4 .b8 sky_up[12];
.global .align 4 .b8 ilw_divisor_Yxy[12];
.global .align 4 .b8 c0[12];
.global .align 4 .b8 c1[12];
.global .align 4 .b8 c2[12];
.global .align 4 .b8 c3[12];
.global .align 4 .b8 c4[12];
.global .align 4 .f32 sun_scale;
.global .align 4 .f32 sky_scale;
.global .align 4 .f32 scene_epsilon;
.global .align 8 .b8 top_object[4];
.global .align 4 .u32 initial_sampling;
.global .align 4 .b8 directional_light[12];
.global .align 4 .b8 directional_light_col[12];
.global .align 4 .u32 sampler_type;
.global .align 8 .b8 eye[12];
.global .align 4 .b8 U[12];
.global .align 4 .b8 V[12];
.global .align 4 .b8 W[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .u32 frame_number;
.global .align 4 .u32 frame_width;
.global .align 4 .u32 frame_height;
.global .align 4 .u32 num_chains;
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 seed_buffer[1];
.global .align 1 .b8 init_seed_buffer[1];
.global .align 1 .b8 aclwmulation_buffer[1];
.global .align 1 .b8 state_buffer[1];
.global .align 4 .u32 mcmctrace_ray_type;
.global .align 4 .u32 mcmctrace_shadow_ray_type;
.global .align 4 .b8 geometric_normal[12];
.global .align 4 .b8 shading_normal[12];
.global .align 8 .b8 lwrrent_prd[208];
.global .align 4 .b8 ray[36];
.global .align 4 .f32 t_hit;
.global .align 4 .u32 launch_index;
.global .align 8 .b8 bg_color[12];
.global .align 4 .f32 phong_exp;
.global .align 4 .b8 emissive[12];
.global .align 4 .b8 texcoord[12];
.global .texref ambient_map;
.global .texref diffuse_map;
.global .texref spelwlar_map;
.global .align 1 .b8 light_buffer[1];
.global .align 1 .b8 lwrrent_prd_shadow[1];
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .f32 solid_angle = 0f3BC49BA6;
.global .align 4 .b8 _ZN21rti_internal_typeinfo8overcastE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13sun_directionE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9sun_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sky_upE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo15ilw_divisor_YxyE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c0E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c1E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c2E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c3E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2c4E[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9sun_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9sky_scaleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11solid_angleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16initial_samplingE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17directional_lightE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21directional_light_colE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12sampler_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3eyeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo1WE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_numberE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11frame_widthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12frame_heightE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10num_chainsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18mcmctrace_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo25mcmctrace_shadow_ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16geometric_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11lwrrent_prdE[8] = {82, 97, 121, 0, 208, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5t_hitE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8bg_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9phong_expE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8emissiveE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8texcoordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18lwrrent_prd_shadowE[8] = {82, 97, 121, 0, 1, 0, 0, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8overcastE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13sun_directionE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9sun_colorE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename6sky_upE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename15ilw_divisor_YxyE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c0E[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c1E[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c2E[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c3E[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename2c4E[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9sun_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9sky_scaleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11solid_angleE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16initial_samplingE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename17directional_lightE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename21directional_light_colE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12sampler_typeE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3eyeE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename1WE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_numberE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11frame_widthE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12frame_heightE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename10num_chainsE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18mcmctrace_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename25mcmctrace_shadow_ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename16geometric_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename11lwrrent_prdE[23] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 109, 99, 109, 99, 115, 97, 109, 112, 108, 101, 114, 0};
.global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_typename5t_hitE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename12launch_indexE[5] = {117, 105, 110, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8bg_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename9phong_expE[6] = {102, 108, 111, 97, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8emissiveE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename8texcoordE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 1 .b8 _ZN21rti_internal_typename18lwrrent_prd_shadowE[30] = {80, 101, 114, 82, 97, 121, 68, 97, 116, 97, 95, 109, 99, 109, 99, 115, 97, 109, 112, 108, 101, 114, 95, 115, 104, 97, 100, 111, 119, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum8overcastE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum13sun_directionE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum9sun_colorE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum6sky_upE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum15ilw_divisor_YxyE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c0E = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c1E = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c2E = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c3E = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum2c4E = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum9sun_scaleE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum9sky_scaleE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum11solid_angleE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum16initial_samplingE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum17directional_lightE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum21directional_light_colE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum12sampler_typeE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum3eyeE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum1UE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum1VE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum1WE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_numberE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum11frame_widthE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum12frame_heightE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum10num_chainsE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum18mcmctrace_ray_typeE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum25mcmctrace_shadow_ray_typeE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum16geometric_normalE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum11lwrrent_prdE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum5t_hitE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum8bg_colorE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum9phong_expE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum8emissiveE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum8texcoordE = 256;
.global .align 4 .u32 _ZN21rti_internal_typeenum18lwrrent_prd_shadowE = 256;
.global .align 1 .b8 _ZN21rti_internal_semantic8overcastE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13sun_directionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9sun_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6sky_upE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic15ilw_divisor_YxyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c0E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c3E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic2c4E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9sun_scaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9sky_scaleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11solid_angleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16initial_samplingE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17directional_lightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic21directional_light_colE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12sampler_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic3eyeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic1WE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_numberE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11frame_widthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12frame_heightE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10num_chainsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18mcmctrace_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic25mcmctrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16geometric_normalE[27] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 101, 116, 114, 105, 99, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11lwrrent_prdE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic5t_hitE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic8bg_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9phong_expE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8emissiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8texcoordE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 99, 111, 111, 114, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic18lwrrent_prd_shadowE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation8overcastE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13sun_directionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9sun_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6sky_upE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation15ilw_divisor_YxyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c0E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c3E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2c4E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9sun_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9sky_scaleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11solid_angleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16initial_samplingE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17directional_lightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation21directional_light_colE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12sampler_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3eyeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation1WE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_numberE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11frame_widthE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12frame_heightE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10num_chainsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18mcmctrace_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation25mcmctrace_shadow_ray_typeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16geometric_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11lwrrent_prdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5t_hitE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8bg_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9phong_expE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8emissiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8texcoordE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18lwrrent_prd_shadowE[1];
.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str7[29] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 10, 0};
.global .align 1 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str9[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 1 .b8 $str10[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str11[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 1 .b8 $str12[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 1 .b8 $str13[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 1 .b8 $str14[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 1 .b8 $str15[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str16[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str17[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.visible .entry _Z12trace_camerav(

)
{
	.local .align 8 .b8 	__local_depot0[320];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .s32 	%r<911>;
	.reg .f32 	%f<666>;
	.reg .s64 	%rd<127>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd17, %SP, 112;
	cvta.to.local.u64 	%rd1, %rd17;
	add.u64 	%rd18, %SPL, 0;
	ldu.global.u32 	%r43, [launch_index];
	cvt.u64.u32	%rd13, %r43;
	cvta.global.u64 	%rd12, seed_buffer;
	mov.u32 	%r41, 1;
	mov.u32 	%r42, 8;
	mov.u64 	%rd16, 0;
	// inline asm
	call (%rd11), _rt_buffer_get_64, (%rd12, %r41, %r42, %rd13, %rd16, %rd16, %rd16);
	// inline asm
	ld.v2.u32 	{%r44, %r45}, [%rd11];
	ld.global.u32 	%r46, [sampler_type];
	setp.ne.s32	%p1, %r46, 0;
	ld.global.u32 	%r903, [frame_number];
	setp.eq.s32	%p2, %r903, 1;
	and.pred  	%p3, %p1, %p2;
	mov.u32 	%r908, %r45;
	mov.u32 	%r907, %r44;
	@!%p3 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_1:
	cvta.global.u64 	%rd20, init_seed_buffer;
	ld.global.u32 	%rd21, [launch_index];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd20, %r41, %r42, %rd21, %rd16, %rd16, %rd16);
	// inline asm
	ld.v2.u32 	{%r49, %r50}, [%rd19];
	ld.global.u32 	%r903, [frame_number];
	mov.u32 	%r908, %r50;
	mov.u32 	%r907, %r49;

BB0_2:
	setp.gt.u32	%p4, %r903, 1;
	@%p4 bra 	BB0_6;

	mov.u32 	%r904, 0;
	mov.u64 	%rd125, %rd1;

BB0_4:
	shl.b32 	%r52, %r908, 4;
	add.s32 	%r53, %r52, -1556008596;
	shr.u32 	%r54, %r908, 5;
	add.s32 	%r55, %r54, -939442524;
	xor.b32  	%r56, %r53, %r55;
	add.s32 	%r57, %r908, -1640531527;
	xor.b32  	%r58, %r56, %r57;
	add.s32 	%r59, %r907, %r58;
	shl.b32 	%r60, %r59, 4;
	add.s32 	%r61, %r60, -1383041155;
	shr.u32 	%r62, %r59, 5;
	add.s32 	%r63, %r62, 2123724318;
	add.s32 	%r64, %r59, -1640531527;
	xor.b32  	%r65, %r63, %r64;
	xor.b32  	%r66, %r65, %r61;
	add.s32 	%r67, %r66, %r908;
	shl.b32 	%r68, %r67, 4;
	add.s32 	%r69, %r68, -1556008596;
	shr.u32 	%r70, %r67, 5;
	add.s32 	%r71, %r70, -939442524;
	xor.b32  	%r72, %r69, %r71;
	add.s32 	%r73, %r67, 1013904242;
	xor.b32  	%r74, %r72, %r73;
	add.s32 	%r75, %r59, %r74;
	shl.b32 	%r76, %r75, 4;
	add.s32 	%r77, %r76, -1383041155;
	shr.u32 	%r78, %r75, 5;
	add.s32 	%r79, %r78, 2123724318;
	add.s32 	%r80, %r75, 1013904242;
	xor.b32  	%r81, %r79, %r80;
	xor.b32  	%r82, %r81, %r77;
	add.s32 	%r83, %r82, %r67;
	shl.b32 	%r84, %r83, 4;
	add.s32 	%r85, %r84, -1556008596;
	shr.u32 	%r86, %r83, 5;
	add.s32 	%r87, %r86, -939442524;
	xor.b32  	%r88, %r85, %r87;
	add.s32 	%r89, %r83, -626627285;
	xor.b32  	%r90, %r88, %r89;
	add.s32 	%r91, %r75, %r90;
	shl.b32 	%r92, %r91, 4;
	add.s32 	%r93, %r92, -1383041155;
	shr.u32 	%r94, %r91, 5;
	add.s32 	%r95, %r94, 2123724318;
	add.s32 	%r96, %r91, -626627285;
	xor.b32  	%r97, %r95, %r96;
	xor.b32  	%r98, %r97, %r93;
	add.s32 	%r99, %r98, %r83;
	shl.b32 	%r100, %r99, 4;
	add.s32 	%r101, %r100, -1556008596;
	shr.u32 	%r102, %r99, 5;
	add.s32 	%r103, %r102, -939442524;
	xor.b32  	%r104, %r101, %r103;
	add.s32 	%r105, %r99, 2027808484;
	xor.b32  	%r106, %r104, %r105;
	add.s32 	%r107, %r91, %r106;
	shl.b32 	%r108, %r107, 4;
	add.s32 	%r109, %r108, -1383041155;
	shr.u32 	%r110, %r107, 5;
	add.s32 	%r111, %r110, 2123724318;
	add.s32 	%r112, %r107, 2027808484;
	xor.b32  	%r113, %r111, %r112;
	xor.b32  	%r114, %r113, %r109;
	add.s32 	%r115, %r114, %r99;
	shl.b32 	%r116, %r115, 4;
	add.s32 	%r117, %r116, -1556008596;
	shr.u32 	%r118, %r115, 5;
	add.s32 	%r119, %r118, -939442524;
	xor.b32  	%r120, %r117, %r119;
	add.s32 	%r121, %r115, 387276957;
	xor.b32  	%r122, %r120, %r121;
	add.s32 	%r123, %r107, %r122;
	shl.b32 	%r124, %r123, 4;
	add.s32 	%r125, %r124, -1383041155;
	shr.u32 	%r126, %r123, 5;
	add.s32 	%r127, %r126, 2123724318;
	add.s32 	%r128, %r123, 387276957;
	xor.b32  	%r129, %r127, %r128;
	xor.b32  	%r130, %r129, %r125;
	add.s32 	%r131, %r130, %r115;
	shl.b32 	%r132, %r131, 4;
	add.s32 	%r133, %r132, -1556008596;
	shr.u32 	%r134, %r131, 5;
	add.s32 	%r135, %r134, -939442524;
	xor.b32  	%r136, %r133, %r135;
	add.s32 	%r137, %r131, -1253254570;
	xor.b32  	%r138, %r136, %r137;
	add.s32 	%r139, %r123, %r138;
	shl.b32 	%r140, %r139, 4;
	add.s32 	%r141, %r140, -1383041155;
	shr.u32 	%r142, %r139, 5;
	add.s32 	%r143, %r142, 2123724318;
	add.s32 	%r144, %r139, -1253254570;
	xor.b32  	%r145, %r143, %r144;
	xor.b32  	%r146, %r145, %r141;
	add.s32 	%r147, %r146, %r131;
	shl.b32 	%r148, %r147, 4;
	add.s32 	%r149, %r148, -1556008596;
	shr.u32 	%r150, %r147, 5;
	add.s32 	%r151, %r150, -939442524;
	xor.b32  	%r152, %r149, %r151;
	add.s32 	%r153, %r147, 1401181199;
	xor.b32  	%r154, %r152, %r153;
	add.s32 	%r155, %r139, %r154;
	shl.b32 	%r156, %r155, 4;
	add.s32 	%r157, %r156, -1383041155;
	shr.u32 	%r158, %r155, 5;
	add.s32 	%r159, %r158, 2123724318;
	add.s32 	%r160, %r155, 1401181199;
	xor.b32  	%r161, %r159, %r160;
	xor.b32  	%r162, %r161, %r157;
	add.s32 	%r163, %r162, %r147;
	shl.b32 	%r164, %r163, 4;
	add.s32 	%r165, %r164, -1556008596;
	shr.u32 	%r166, %r163, 5;
	add.s32 	%r167, %r166, -939442524;
	xor.b32  	%r168, %r165, %r167;
	add.s32 	%r169, %r163, -239350328;
	xor.b32  	%r170, %r168, %r169;
	add.s32 	%r907, %r170, %r155;
	shl.b32 	%r171, %r907, 4;
	add.s32 	%r172, %r171, -1383041155;
	shr.u32 	%r173, %r907, 5;
	add.s32 	%r174, %r173, 2123724318;
	add.s32 	%r175, %r907, -239350328;
	xor.b32  	%r176, %r174, %r175;
	xor.b32  	%r177, %r176, %r172;
	add.s32 	%r908, %r177, %r163;
	cvt.rn.f32.u32	%f116, %r907;
	add.ftz.f32 	%f117, %f116, 0f3F800000;
	mov.f32 	%f118, 0f4F800000;
	div.approx.ftz.f32 	%f119, %f117, %f118;
	st.local.f32 	[%rd125+72], %f119;
	add.s64 	%rd125, %rd125, 4;
	add.s32 	%r904, %r904, 1;
	setp.ne.s32	%p5, %r904, 27;
	@%p5 bra 	BB0_4;

	mov.u32 	%r178, 0;
	st.local.u32 	[%rd1+180], %r178;
	st.local.u32 	[%rd1+192], %r178;
	mov.f32 	%f120, 0f00000000;
	st.local.v2.f32 	[%rd1+184], {%f120, %f120};
	ld.local.f32 	%f630, [%rd1+192];
	ld.local.v2.f32 	{%f121, %f122}, [%rd1+72];
	ld.local.v2.f32 	{%f123, %f124}, [%rd1+80];
	ld.local.v2.f32 	{%f125, %f126}, [%rd1+88];
	ld.local.v2.f32 	{%f127, %f128}, [%rd1+96];
	ld.local.v2.f32 	{%f129, %f130}, [%rd1+104];
	ld.local.v2.f32 	{%f131, %f132}, [%rd1+112];
	ld.local.v2.f32 	{%f133, %f134}, [%rd1+120];
	ld.local.v2.f32 	{%f135, %f136}, [%rd1+128];
	ld.local.v2.f32 	{%f137, %f138}, [%rd1+136];
	ld.local.v2.f32 	{%f139, %f140}, [%rd1+144];
	ld.local.v2.f32 	{%f141, %f142}, [%rd1+152];
	ld.local.v2.f32 	{%f143, %f144}, [%rd1+160];
	ld.local.v2.f32 	{%f145, %f146}, [%rd1+168];
	ld.local.v2.f32 	{%f147, %f148}, [%rd1+176];
	ld.local.v2.f32 	{%f149, %f150}, [%rd1+184];
	mov.f32 	%f631, %f150;
	mov.f32 	%f632, %f149;
	mov.f32 	%f633, %f148;
	mov.f32 	%f634, %f147;
	mov.f32 	%f635, %f146;
	mov.f32 	%f636, %f145;
	mov.f32 	%f637, %f144;
	mov.f32 	%f638, %f143;
	mov.f32 	%f639, %f142;
	mov.f32 	%f640, %f141;
	mov.f32 	%f641, %f140;
	mov.f32 	%f642, %f139;
	mov.f32 	%f643, %f138;
	mov.f32 	%f644, %f137;
	mov.f32 	%f645, %f136;
	mov.f32 	%f646, %f135;
	mov.f32 	%f647, %f134;
	mov.f32 	%f648, %f133;
	mov.f32 	%f649, %f132;
	mov.f32 	%f650, %f131;
	mov.f32 	%f651, %f130;
	mov.f32 	%f652, %f129;
	mov.f32 	%f653, %f128;
	mov.f32 	%f654, %f127;
	mov.f32 	%f655, %f126;
	mov.f32 	%f656, %f125;
	mov.f32 	%f657, %f124;
	mov.f32 	%f658, %f123;
	mov.f32 	%f659, %f122;
	mov.f32 	%f660, %f121;
	bra.uni 	BB0_13;

BB0_6:
	cvta.global.u64 	%rd26, state_buffer;
	ld.global.u32 	%rd27, [launch_index];
	mov.u32 	%r180, 124;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r41, %r180, %rd27, %rd16, %rd16, %rd16);
	// inline asm
	ld.f32 	%f630, [%rd25+120];
	ld.f32 	%f631, [%rd25+116];
	ld.f32 	%f632, [%rd25+112];
	ld.f32 	%f633, [%rd25+108];
	ld.f32 	%f634, [%rd25+104];
	ld.f32 	%f635, [%rd25+100];
	ld.f32 	%f636, [%rd25+96];
	ld.f32 	%f637, [%rd25+92];
	ld.f32 	%f638, [%rd25+88];
	ld.f32 	%f639, [%rd25+84];
	ld.f32 	%f640, [%rd25+80];
	ld.f32 	%f641, [%rd25+76];
	ld.f32 	%f642, [%rd25+72];
	ld.f32 	%f643, [%rd25+68];
	ld.f32 	%f644, [%rd25+64];
	ld.f32 	%f645, [%rd25+60];
	ld.f32 	%f646, [%rd25+56];
	ld.f32 	%f647, [%rd25+52];
	ld.f32 	%f648, [%rd25+48];
	ld.f32 	%f649, [%rd25+44];
	ld.f32 	%f650, [%rd25+40];
	ld.f32 	%f651, [%rd25+36];
	ld.f32 	%f652, [%rd25+32];
	ld.f32 	%f653, [%rd25+28];
	ld.f32 	%f654, [%rd25+24];
	ld.f32 	%f655, [%rd25+20];
	ld.f32 	%f656, [%rd25+16];
	ld.f32 	%f657, [%rd25+12];
	ld.f32 	%f658, [%rd25+8];
	ld.f32 	%f659, [%rd25+4];
	ld.f32 	%f660, [%rd25];
	ld.global.u32 	%r16, [sampler_type];
	setp.ne.s32	%p6, %r16, 1;
	@%p6 bra 	BB0_10;

	mov.f32 	%f629, 0f00000000;
	mov.u32 	%r906, 0;

BB0_8:
	shl.b32 	%r309, %r908, 4;
	add.s32 	%r310, %r309, -1556008596;
	shr.u32 	%r311, %r908, 5;
	add.s32 	%r312, %r311, -939442524;
	xor.b32  	%r313, %r310, %r312;
	add.s32 	%r314, %r908, -1640531527;
	xor.b32  	%r315, %r313, %r314;
	add.s32 	%r316, %r907, %r315;
	shl.b32 	%r317, %r316, 4;
	add.s32 	%r318, %r317, -1383041155;
	shr.u32 	%r319, %r316, 5;
	add.s32 	%r320, %r319, 2123724318;
	add.s32 	%r321, %r316, -1640531527;
	xor.b32  	%r322, %r320, %r321;
	xor.b32  	%r323, %r322, %r318;
	add.s32 	%r324, %r323, %r908;
	shl.b32 	%r325, %r324, 4;
	add.s32 	%r326, %r325, -1556008596;
	shr.u32 	%r327, %r324, 5;
	add.s32 	%r328, %r327, -939442524;
	xor.b32  	%r329, %r326, %r328;
	add.s32 	%r330, %r324, 1013904242;
	xor.b32  	%r331, %r329, %r330;
	add.s32 	%r332, %r316, %r331;
	shl.b32 	%r333, %r332, 4;
	add.s32 	%r334, %r333, -1383041155;
	shr.u32 	%r335, %r332, 5;
	add.s32 	%r336, %r335, 2123724318;
	add.s32 	%r337, %r332, 1013904242;
	xor.b32  	%r338, %r336, %r337;
	xor.b32  	%r339, %r338, %r334;
	add.s32 	%r340, %r339, %r324;
	shl.b32 	%r341, %r340, 4;
	add.s32 	%r342, %r341, -1556008596;
	shr.u32 	%r343, %r340, 5;
	add.s32 	%r344, %r343, -939442524;
	xor.b32  	%r345, %r342, %r344;
	add.s32 	%r346, %r340, -626627285;
	xor.b32  	%r347, %r345, %r346;
	add.s32 	%r348, %r332, %r347;
	shl.b32 	%r349, %r348, 4;
	add.s32 	%r350, %r349, -1383041155;
	shr.u32 	%r351, %r348, 5;
	add.s32 	%r352, %r351, 2123724318;
	add.s32 	%r353, %r348, -626627285;
	xor.b32  	%r354, %r352, %r353;
	xor.b32  	%r355, %r354, %r350;
	add.s32 	%r356, %r355, %r340;
	shl.b32 	%r357, %r356, 4;
	add.s32 	%r358, %r357, -1556008596;
	shr.u32 	%r359, %r356, 5;
	add.s32 	%r360, %r359, -939442524;
	xor.b32  	%r361, %r358, %r360;
	add.s32 	%r362, %r356, 2027808484;
	xor.b32  	%r363, %r361, %r362;
	add.s32 	%r364, %r348, %r363;
	shl.b32 	%r365, %r364, 4;
	add.s32 	%r366, %r365, -1383041155;
	shr.u32 	%r367, %r364, 5;
	add.s32 	%r368, %r367, 2123724318;
	add.s32 	%r369, %r364, 2027808484;
	xor.b32  	%r370, %r368, %r369;
	xor.b32  	%r371, %r370, %r366;
	add.s32 	%r372, %r371, %r356;
	shl.b32 	%r373, %r372, 4;
	add.s32 	%r374, %r373, -1556008596;
	shr.u32 	%r375, %r372, 5;
	add.s32 	%r376, %r375, -939442524;
	xor.b32  	%r377, %r374, %r376;
	add.s32 	%r378, %r372, 387276957;
	xor.b32  	%r379, %r377, %r378;
	add.s32 	%r380, %r364, %r379;
	shl.b32 	%r381, %r380, 4;
	add.s32 	%r382, %r381, -1383041155;
	shr.u32 	%r383, %r380, 5;
	add.s32 	%r384, %r383, 2123724318;
	add.s32 	%r385, %r380, 387276957;
	xor.b32  	%r386, %r384, %r385;
	xor.b32  	%r387, %r386, %r382;
	add.s32 	%r388, %r387, %r372;
	shl.b32 	%r389, %r388, 4;
	add.s32 	%r390, %r389, -1556008596;
	shr.u32 	%r391, %r388, 5;
	add.s32 	%r392, %r391, -939442524;
	xor.b32  	%r393, %r390, %r392;
	add.s32 	%r394, %r388, -1253254570;
	xor.b32  	%r395, %r393, %r394;
	add.s32 	%r396, %r380, %r395;
	shl.b32 	%r397, %r396, 4;
	add.s32 	%r398, %r397, -1383041155;
	shr.u32 	%r399, %r396, 5;
	add.s32 	%r400, %r399, 2123724318;
	add.s32 	%r401, %r396, -1253254570;
	xor.b32  	%r402, %r400, %r401;
	xor.b32  	%r403, %r402, %r398;
	add.s32 	%r404, %r403, %r388;
	shl.b32 	%r405, %r404, 4;
	add.s32 	%r406, %r405, -1556008596;
	shr.u32 	%r407, %r404, 5;
	add.s32 	%r408, %r407, -939442524;
	xor.b32  	%r409, %r406, %r408;
	add.s32 	%r410, %r404, 1401181199;
	xor.b32  	%r411, %r409, %r410;
	add.s32 	%r412, %r396, %r411;
	shl.b32 	%r413, %r412, 4;
	add.s32 	%r414, %r413, -1383041155;
	shr.u32 	%r415, %r412, 5;
	add.s32 	%r416, %r415, 2123724318;
	add.s32 	%r417, %r412, 1401181199;
	xor.b32  	%r418, %r416, %r417;
	xor.b32  	%r419, %r418, %r414;
	add.s32 	%r420, %r419, %r404;
	shl.b32 	%r421, %r420, 4;
	add.s32 	%r422, %r421, -1556008596;
	shr.u32 	%r423, %r420, 5;
	add.s32 	%r424, %r423, -939442524;
	xor.b32  	%r425, %r422, %r424;
	add.s32 	%r426, %r420, -239350328;
	xor.b32  	%r427, %r425, %r426;
	add.s32 	%r428, %r412, %r427;
	shl.b32 	%r429, %r428, 4;
	add.s32 	%r430, %r429, -1383041155;
	shr.u32 	%r431, %r428, 5;
	add.s32 	%r432, %r431, 2123724318;
	add.s32 	%r433, %r428, -239350328;
	xor.b32  	%r434, %r432, %r433;
	xor.b32  	%r435, %r434, %r430;
	add.s32 	%r436, %r435, %r420;
	cvt.rn.f32.u32	%f156, %r428;
	add.ftz.f32 	%f157, %f156, 0f3F800000;
	mov.f32 	%f158, 0f4F800000;
	div.approx.ftz.f32 	%f159, %f157, %f158;
	lg2.approx.ftz.f32 	%f160, %f159;
	mul.ftz.f32 	%f161, %f160, 0f3F317218;
	mul.ftz.f32 	%f162, %f161, 0fC0000000;
	shl.b32 	%r437, %r436, 4;
	add.s32 	%r438, %r437, -1556008596;
	shr.u32 	%r439, %r436, 5;
	add.s32 	%r440, %r439, -939442524;
	xor.b32  	%r441, %r438, %r440;
	add.s32 	%r442, %r436, -1640531527;
	xor.b32  	%r443, %r441, %r442;
	add.s32 	%r444, %r428, %r443;
	shl.b32 	%r445, %r444, 4;
	add.s32 	%r446, %r445, -1383041155;
	shr.u32 	%r447, %r444, 5;
	add.s32 	%r448, %r447, 2123724318;
	add.s32 	%r449, %r444, -1640531527;
	xor.b32  	%r450, %r448, %r449;
	xor.b32  	%r451, %r450, %r446;
	add.s32 	%r452, %r451, %r436;
	shl.b32 	%r453, %r452, 4;
	add.s32 	%r454, %r453, -1556008596;
	shr.u32 	%r455, %r452, 5;
	add.s32 	%r456, %r455, -939442524;
	xor.b32  	%r457, %r454, %r456;
	add.s32 	%r458, %r452, 1013904242;
	xor.b32  	%r459, %r457, %r458;
	add.s32 	%r460, %r444, %r459;
	shl.b32 	%r461, %r460, 4;
	add.s32 	%r462, %r461, -1383041155;
	shr.u32 	%r463, %r460, 5;
	add.s32 	%r464, %r463, 2123724318;
	add.s32 	%r465, %r460, 1013904242;
	xor.b32  	%r466, %r464, %r465;
	xor.b32  	%r467, %r466, %r462;
	add.s32 	%r468, %r467, %r452;
	shl.b32 	%r469, %r468, 4;
	add.s32 	%r470, %r469, -1556008596;
	shr.u32 	%r471, %r468, 5;
	add.s32 	%r472, %r471, -939442524;
	xor.b32  	%r473, %r470, %r472;
	add.s32 	%r474, %r468, -626627285;
	xor.b32  	%r475, %r473, %r474;
	add.s32 	%r476, %r460, %r475;
	shl.b32 	%r477, %r476, 4;
	add.s32 	%r478, %r477, -1383041155;
	shr.u32 	%r479, %r476, 5;
	add.s32 	%r480, %r479, 2123724318;
	add.s32 	%r481, %r476, -626627285;
	xor.b32  	%r482, %r480, %r481;
	xor.b32  	%r483, %r482, %r478;
	add.s32 	%r484, %r483, %r468;
	shl.b32 	%r485, %r484, 4;
	add.s32 	%r486, %r485, -1556008596;
	shr.u32 	%r487, %r484, 5;
	add.s32 	%r488, %r487, -939442524;
	xor.b32  	%r489, %r486, %r488;
	add.s32 	%r490, %r484, 2027808484;
	xor.b32  	%r491, %r489, %r490;
	add.s32 	%r492, %r476, %r491;
	shl.b32 	%r493, %r492, 4;
	add.s32 	%r494, %r493, -1383041155;
	shr.u32 	%r495, %r492, 5;
	add.s32 	%r496, %r495, 2123724318;
	add.s32 	%r497, %r492, 2027808484;
	xor.b32  	%r498, %r496, %r497;
	xor.b32  	%r499, %r498, %r494;
	add.s32 	%r500, %r499, %r484;
	shl.b32 	%r501, %r500, 4;
	add.s32 	%r502, %r501, -1556008596;
	shr.u32 	%r503, %r500, 5;
	add.s32 	%r504, %r503, -939442524;
	xor.b32  	%r505, %r502, %r504;
	add.s32 	%r506, %r500, 387276957;
	xor.b32  	%r507, %r505, %r506;
	add.s32 	%r508, %r492, %r507;
	shl.b32 	%r509, %r508, 4;
	add.s32 	%r510, %r509, -1383041155;
	shr.u32 	%r511, %r508, 5;
	add.s32 	%r512, %r511, 2123724318;
	add.s32 	%r513, %r508, 387276957;
	xor.b32  	%r514, %r512, %r513;
	xor.b32  	%r515, %r514, %r510;
	add.s32 	%r516, %r515, %r500;
	shl.b32 	%r517, %r516, 4;
	add.s32 	%r518, %r517, -1556008596;
	shr.u32 	%r519, %r516, 5;
	add.s32 	%r520, %r519, -939442524;
	xor.b32  	%r521, %r518, %r520;
	add.s32 	%r522, %r516, -1253254570;
	xor.b32  	%r523, %r521, %r522;
	add.s32 	%r524, %r508, %r523;
	shl.b32 	%r525, %r524, 4;
	add.s32 	%r526, %r525, -1383041155;
	shr.u32 	%r527, %r524, 5;
	add.s32 	%r528, %r527, 2123724318;
	add.s32 	%r529, %r524, -1253254570;
	xor.b32  	%r530, %r528, %r529;
	xor.b32  	%r531, %r530, %r526;
	add.s32 	%r532, %r531, %r516;
	shl.b32 	%r533, %r532, 4;
	add.s32 	%r534, %r533, -1556008596;
	shr.u32 	%r535, %r532, 5;
	add.s32 	%r536, %r535, -939442524;
	xor.b32  	%r537, %r534, %r536;
	add.s32 	%r538, %r532, 1401181199;
	xor.b32  	%r539, %r537, %r538;
	add.s32 	%r540, %r524, %r539;
	shl.b32 	%r541, %r540, 4;
	add.s32 	%r542, %r541, -1383041155;
	shr.u32 	%r543, %r540, 5;
	add.s32 	%r544, %r543, 2123724318;
	add.s32 	%r545, %r540, 1401181199;
	xor.b32  	%r546, %r544, %r545;
	xor.b32  	%r547, %r546, %r542;
	add.s32 	%r548, %r547, %r532;
	shl.b32 	%r549, %r548, 4;
	add.s32 	%r550, %r549, -1556008596;
	shr.u32 	%r551, %r548, 5;
	add.s32 	%r552, %r551, -939442524;
	xor.b32  	%r553, %r550, %r552;
	add.s32 	%r554, %r548, -239350328;
	xor.b32  	%r555, %r553, %r554;
	add.s32 	%r907, %r555, %r540;
	shl.b32 	%r556, %r907, 4;
	add.s32 	%r557, %r556, -1383041155;
	shr.u32 	%r558, %r907, 5;
	add.s32 	%r559, %r558, 2123724318;
	add.s32 	%r560, %r907, -239350328;
	xor.b32  	%r561, %r559, %r560;
	xor.b32  	%r562, %r561, %r557;
	add.s32 	%r908, %r562, %r548;
	sqrt.approx.ftz.f32 	%f163, %f162;
	cvt.rn.f32.u32	%f164, %r907;
	add.ftz.f32 	%f165, %f164, 0f3F800000;
	div.approx.ftz.f32 	%f166, %f165, %f158;
	mul.ftz.f32 	%f167, %f166, 0f40C90FDB;
	cos.approx.ftz.f32 	%f168, %f167;
	mul.ftz.f32 	%f169, %f163, %f168;
	st.local.f32 	[%rd18], %f169;
	fma.rn.ftz.f32 	%f629, %f169, %f169, %f629;
	add.s64 	%rd18, %rd18, 4;
	add.s32 	%r906, %r906, 1;
	setp.ne.s32	%p9, %r906, 27;
	@%p9 bra 	BB0_8;

	mov.f32 	%f628, 0f4F800000;
	add.u64 	%rd120, %SP, 0;
	cvta.to.local.u64 	%rd119, %rd120;
	shl.b32 	%r563, %r908, 4;
	add.s32 	%r564, %r563, -1556008596;
	shr.u32 	%r565, %r908, 5;
	add.s32 	%r566, %r565, -939442524;
	xor.b32  	%r567, %r564, %r566;
	add.s32 	%r568, %r908, -1640531527;
	xor.b32  	%r569, %r567, %r568;
	add.s32 	%r570, %r907, %r569;
	shl.b32 	%r571, %r570, 4;
	add.s32 	%r572, %r571, -1383041155;
	shr.u32 	%r573, %r570, 5;
	add.s32 	%r574, %r573, 2123724318;
	add.s32 	%r575, %r570, -1640531527;
	xor.b32  	%r576, %r574, %r575;
	xor.b32  	%r577, %r576, %r572;
	add.s32 	%r578, %r577, %r908;
	shl.b32 	%r579, %r578, 4;
	add.s32 	%r580, %r579, -1556008596;
	shr.u32 	%r581, %r578, 5;
	add.s32 	%r582, %r581, -939442524;
	xor.b32  	%r583, %r580, %r582;
	add.s32 	%r584, %r578, 1013904242;
	xor.b32  	%r585, %r583, %r584;
	add.s32 	%r586, %r570, %r585;
	shl.b32 	%r587, %r586, 4;
	add.s32 	%r588, %r587, -1383041155;
	shr.u32 	%r589, %r586, 5;
	add.s32 	%r590, %r589, 2123724318;
	add.s32 	%r591, %r586, 1013904242;
	xor.b32  	%r592, %r590, %r591;
	xor.b32  	%r593, %r592, %r588;
	add.s32 	%r594, %r593, %r578;
	shl.b32 	%r595, %r594, 4;
	add.s32 	%r596, %r595, -1556008596;
	shr.u32 	%r597, %r594, 5;
	add.s32 	%r598, %r597, -939442524;
	xor.b32  	%r599, %r596, %r598;
	add.s32 	%r600, %r594, -626627285;
	xor.b32  	%r601, %r599, %r600;
	add.s32 	%r602, %r586, %r601;
	shl.b32 	%r603, %r602, 4;
	add.s32 	%r604, %r603, -1383041155;
	shr.u32 	%r605, %r602, 5;
	add.s32 	%r606, %r605, 2123724318;
	add.s32 	%r607, %r602, -626627285;
	xor.b32  	%r608, %r606, %r607;
	xor.b32  	%r609, %r608, %r604;
	add.s32 	%r610, %r609, %r594;
	shl.b32 	%r611, %r610, 4;
	add.s32 	%r612, %r611, -1556008596;
	shr.u32 	%r613, %r610, 5;
	add.s32 	%r614, %r613, -939442524;
	xor.b32  	%r615, %r612, %r614;
	add.s32 	%r616, %r610, 2027808484;
	xor.b32  	%r617, %r615, %r616;
	add.s32 	%r618, %r602, %r617;
	shl.b32 	%r619, %r618, 4;
	add.s32 	%r620, %r619, -1383041155;
	shr.u32 	%r621, %r618, 5;
	add.s32 	%r622, %r621, 2123724318;
	add.s32 	%r623, %r618, 2027808484;
	xor.b32  	%r624, %r622, %r623;
	xor.b32  	%r625, %r624, %r620;
	add.s32 	%r626, %r625, %r610;
	shl.b32 	%r627, %r626, 4;
	add.s32 	%r628, %r627, -1556008596;
	shr.u32 	%r629, %r626, 5;
	add.s32 	%r630, %r629, -939442524;
	xor.b32  	%r631, %r628, %r630;
	add.s32 	%r632, %r626, 387276957;
	xor.b32  	%r633, %r631, %r632;
	add.s32 	%r634, %r618, %r633;
	shl.b32 	%r635, %r634, 4;
	add.s32 	%r636, %r635, -1383041155;
	shr.u32 	%r637, %r634, 5;
	add.s32 	%r638, %r637, 2123724318;
	add.s32 	%r639, %r634, 387276957;
	xor.b32  	%r640, %r638, %r639;
	xor.b32  	%r641, %r640, %r636;
	add.s32 	%r642, %r641, %r626;
	shl.b32 	%r643, %r642, 4;
	add.s32 	%r644, %r643, -1556008596;
	shr.u32 	%r645, %r642, 5;
	add.s32 	%r646, %r645, -939442524;
	xor.b32  	%r647, %r644, %r646;
	add.s32 	%r648, %r642, -1253254570;
	xor.b32  	%r649, %r647, %r648;
	add.s32 	%r650, %r634, %r649;
	shl.b32 	%r651, %r650, 4;
	add.s32 	%r652, %r651, -1383041155;
	shr.u32 	%r653, %r650, 5;
	add.s32 	%r654, %r653, 2123724318;
	add.s32 	%r655, %r650, -1253254570;
	xor.b32  	%r656, %r654, %r655;
	xor.b32  	%r657, %r656, %r652;
	add.s32 	%r658, %r657, %r642;
	shl.b32 	%r659, %r658, 4;
	add.s32 	%r660, %r659, -1556008596;
	shr.u32 	%r661, %r658, 5;
	add.s32 	%r662, %r661, -939442524;
	xor.b32  	%r663, %r660, %r662;
	add.s32 	%r664, %r658, 1401181199;
	xor.b32  	%r665, %r663, %r664;
	add.s32 	%r666, %r650, %r665;
	shl.b32 	%r667, %r666, 4;
	add.s32 	%r668, %r667, -1383041155;
	shr.u32 	%r669, %r666, 5;
	add.s32 	%r670, %r669, 2123724318;
	add.s32 	%r671, %r666, 1401181199;
	xor.b32  	%r672, %r670, %r671;
	xor.b32  	%r673, %r672, %r668;
	add.s32 	%r674, %r673, %r658;
	shl.b32 	%r675, %r674, 4;
	add.s32 	%r676, %r675, -1556008596;
	shr.u32 	%r677, %r674, 5;
	add.s32 	%r678, %r677, -939442524;
	xor.b32  	%r679, %r676, %r678;
	add.s32 	%r680, %r674, -239350328;
	xor.b32  	%r681, %r679, %r680;
	add.s32 	%r907, %r681, %r666;
	shl.b32 	%r682, %r907, 4;
	add.s32 	%r683, %r682, -1383041155;
	shr.u32 	%r684, %r907, 5;
	add.s32 	%r685, %r684, 2123724318;
	add.s32 	%r686, %r907, -239350328;
	xor.b32  	%r687, %r685, %r686;
	xor.b32  	%r688, %r687, %r683;
	add.s32 	%r908, %r688, %r674;
	cvt.rn.f32.u32	%f170, %r907;
	add.ftz.f32 	%f171, %f170, 0f3F800000;
	div.approx.ftz.f32 	%f173, %f171, %f628;
	add.ftz.f32 	%f174, %f173, 0fBF000000;
	mul.ftz.f32 	%f175, %f174, 0f40490FDB;
	sin.approx.ftz.f32 	%f176, %f175;
	cos.approx.ftz.f32 	%f177, %f175;
	div.approx.ftz.f32 	%f178, %f176, %f177;
	mul.ftz.f32 	%f179, %f178, 0f3CF5C28F;
	sqrt.approx.ftz.f32 	%f180, %f629;
	div.approx.ftz.f32 	%f181, %f179, %f180;
	ld.local.f32 	%f182, [%rd119];
	fma.rn.ftz.f32 	%f183, %f181, %f182, %f660;
	cvt.rmi.ftz.f32.f32	%f184, %f183;
	ld.local.f32 	%f185, [%rd119+4];
	fma.rn.ftz.f32 	%f186, %f181, %f185, %f659;
	cvt.rmi.ftz.f32.f32	%f187, %f186;
	ld.local.f32 	%f188, [%rd119+8];
	ld.local.f32 	%f189, [%rd119+12];
	sub.ftz.f32 	%f190, %f186, %f187;
	sub.ftz.f32 	%f191, %f183, %f184;
	st.local.v2.f32 	[%rd1+72], {%f191, %f190};
	fma.rn.ftz.f32 	%f192, %f181, %f188, %f658;
	cvt.rmi.ftz.f32.f32	%f193, %f192;
	fma.rn.ftz.f32 	%f194, %f181, %f189, %f657;
	cvt.rmi.ftz.f32.f32	%f195, %f194;
	sub.ftz.f32 	%f196, %f194, %f195;
	sub.ftz.f32 	%f197, %f192, %f193;
	st.local.v2.f32 	[%rd1+80], {%f197, %f196};
	ld.local.f32 	%f198, [%rd119+16];
	fma.rn.ftz.f32 	%f199, %f181, %f198, %f656;
	cvt.rmi.ftz.f32.f32	%f200, %f199;
	ld.local.f32 	%f201, [%rd119+20];
	fma.rn.ftz.f32 	%f202, %f181, %f201, %f655;
	cvt.rmi.ftz.f32.f32	%f203, %f202;
	ld.local.f32 	%f204, [%rd119+24];
	ld.local.f32 	%f205, [%rd119+28];
	sub.ftz.f32 	%f206, %f202, %f203;
	sub.ftz.f32 	%f207, %f199, %f200;
	st.local.v2.f32 	[%rd1+88], {%f207, %f206};
	fma.rn.ftz.f32 	%f208, %f181, %f204, %f654;
	cvt.rmi.ftz.f32.f32	%f209, %f208;
	fma.rn.ftz.f32 	%f210, %f181, %f205, %f653;
	cvt.rmi.ftz.f32.f32	%f211, %f210;
	sub.ftz.f32 	%f212, %f210, %f211;
	sub.ftz.f32 	%f213, %f208, %f209;
	st.local.v2.f32 	[%rd1+96], {%f213, %f212};
	ld.local.f32 	%f214, [%rd119+32];
	fma.rn.ftz.f32 	%f215, %f181, %f214, %f652;
	cvt.rmi.ftz.f32.f32	%f216, %f215;
	ld.local.f32 	%f217, [%rd119+36];
	fma.rn.ftz.f32 	%f218, %f181, %f217, %f651;
	cvt.rmi.ftz.f32.f32	%f219, %f218;
	ld.local.f32 	%f220, [%rd119+40];
	ld.local.f32 	%f221, [%rd119+44];
	sub.ftz.f32 	%f222, %f218, %f219;
	sub.ftz.f32 	%f223, %f215, %f216;
	st.local.v2.f32 	[%rd1+104], {%f223, %f222};
	fma.rn.ftz.f32 	%f224, %f181, %f220, %f650;
	cvt.rmi.ftz.f32.f32	%f225, %f224;
	fma.rn.ftz.f32 	%f226, %f181, %f221, %f649;
	cvt.rmi.ftz.f32.f32	%f227, %f226;
	sub.ftz.f32 	%f228, %f226, %f227;
	sub.ftz.f32 	%f229, %f224, %f225;
	st.local.v2.f32 	[%rd1+112], {%f229, %f228};
	ld.local.f32 	%f230, [%rd119+48];
	fma.rn.ftz.f32 	%f231, %f181, %f230, %f648;
	cvt.rmi.ftz.f32.f32	%f232, %f231;
	ld.local.f32 	%f233, [%rd119+52];
	fma.rn.ftz.f32 	%f234, %f181, %f233, %f647;
	cvt.rmi.ftz.f32.f32	%f235, %f234;
	ld.local.f32 	%f236, [%rd119+56];
	ld.local.f32 	%f237, [%rd119+60];
	sub.ftz.f32 	%f238, %f234, %f235;
	sub.ftz.f32 	%f239, %f231, %f232;
	st.local.v2.f32 	[%rd1+120], {%f239, %f238};
	fma.rn.ftz.f32 	%f240, %f181, %f236, %f646;
	cvt.rmi.ftz.f32.f32	%f241, %f240;
	fma.rn.ftz.f32 	%f242, %f181, %f237, %f645;
	cvt.rmi.ftz.f32.f32	%f243, %f242;
	sub.ftz.f32 	%f244, %f242, %f243;
	sub.ftz.f32 	%f245, %f240, %f241;
	st.local.v2.f32 	[%rd1+128], {%f245, %f244};
	ld.local.f32 	%f246, [%rd119+64];
	fma.rn.ftz.f32 	%f247, %f181, %f246, %f644;
	cvt.rmi.ftz.f32.f32	%f248, %f247;
	ld.local.f32 	%f249, [%rd119+68];
	fma.rn.ftz.f32 	%f250, %f181, %f249, %f643;
	cvt.rmi.ftz.f32.f32	%f251, %f250;
	ld.local.f32 	%f252, [%rd119+72];
	ld.local.f32 	%f253, [%rd119+76];
	sub.ftz.f32 	%f254, %f250, %f251;
	sub.ftz.f32 	%f255, %f247, %f248;
	st.local.v2.f32 	[%rd1+136], {%f255, %f254};
	fma.rn.ftz.f32 	%f256, %f181, %f252, %f642;
	cvt.rmi.ftz.f32.f32	%f257, %f256;
	fma.rn.ftz.f32 	%f258, %f181, %f253, %f641;
	cvt.rmi.ftz.f32.f32	%f259, %f258;
	sub.ftz.f32 	%f260, %f258, %f259;
	sub.ftz.f32 	%f261, %f256, %f257;
	st.local.v2.f32 	[%rd1+144], {%f261, %f260};
	ld.local.f32 	%f262, [%rd119+80];
	fma.rn.ftz.f32 	%f263, %f181, %f262, %f640;
	cvt.rmi.ftz.f32.f32	%f264, %f263;
	ld.local.f32 	%f265, [%rd119+84];
	fma.rn.ftz.f32 	%f266, %f181, %f265, %f639;
	cvt.rmi.ftz.f32.f32	%f267, %f266;
	ld.local.f32 	%f268, [%rd119+88];
	ld.local.f32 	%f269, [%rd119+92];
	sub.ftz.f32 	%f270, %f266, %f267;
	sub.ftz.f32 	%f271, %f263, %f264;
	st.local.v2.f32 	[%rd1+152], {%f271, %f270};
	fma.rn.ftz.f32 	%f272, %f181, %f268, %f638;
	cvt.rmi.ftz.f32.f32	%f273, %f272;
	fma.rn.ftz.f32 	%f274, %f181, %f269, %f637;
	cvt.rmi.ftz.f32.f32	%f275, %f274;
	sub.ftz.f32 	%f276, %f274, %f275;
	sub.ftz.f32 	%f277, %f272, %f273;
	st.local.v2.f32 	[%rd1+160], {%f277, %f276};
	ld.local.f32 	%f278, [%rd119+96];
	fma.rn.ftz.f32 	%f279, %f181, %f278, %f636;
	cvt.rmi.ftz.f32.f32	%f280, %f279;
	ld.local.f32 	%f281, [%rd119+100];
	fma.rn.ftz.f32 	%f282, %f181, %f281, %f635;
	cvt.rmi.ftz.f32.f32	%f283, %f282;
	ld.local.f32 	%f284, [%rd119+104];
	sub.ftz.f32 	%f285, %f282, %f283;
	sub.ftz.f32 	%f286, %f279, %f280;
	st.local.v2.f32 	[%rd1+168], {%f286, %f285};
	fma.rn.ftz.f32 	%f287, %f181, %f284, %f634;
	cvt.rmi.ftz.f32.f32	%f288, %f287;
	sub.ftz.f32 	%f289, %f287, %f288;
	st.local.f32 	[%rd1+176], %f289;
	bra.uni 	BB0_13;

BB0_10:
	setp.ne.s32	%p7, %r16, 0;
	@%p7 bra 	BB0_13;

	mov.u32 	%r905, 0;
	mov.u64 	%rd124, %rd1;

BB0_12:
	mov.u64 	%rd6, %rd124;
	shl.b32 	%r182, %r908, 4;
	add.s32 	%r183, %r182, -1556008596;
	shr.u32 	%r184, %r908, 5;
	add.s32 	%r185, %r184, -939442524;
	xor.b32  	%r186, %r183, %r185;
	add.s32 	%r187, %r908, -1640531527;
	xor.b32  	%r188, %r186, %r187;
	add.s32 	%r189, %r907, %r188;
	shl.b32 	%r190, %r189, 4;
	add.s32 	%r191, %r190, -1383041155;
	shr.u32 	%r192, %r189, 5;
	add.s32 	%r193, %r192, 2123724318;
	add.s32 	%r194, %r189, -1640531527;
	xor.b32  	%r195, %r193, %r194;
	xor.b32  	%r196, %r195, %r191;
	add.s32 	%r197, %r196, %r908;
	shl.b32 	%r198, %r197, 4;
	add.s32 	%r199, %r198, -1556008596;
	shr.u32 	%r200, %r197, 5;
	add.s32 	%r201, %r200, -939442524;
	xor.b32  	%r202, %r199, %r201;
	add.s32 	%r203, %r197, 1013904242;
	xor.b32  	%r204, %r202, %r203;
	add.s32 	%r205, %r189, %r204;
	shl.b32 	%r206, %r205, 4;
	add.s32 	%r207, %r206, -1383041155;
	shr.u32 	%r208, %r205, 5;
	add.s32 	%r209, %r208, 2123724318;
	add.s32 	%r210, %r205, 1013904242;
	xor.b32  	%r211, %r209, %r210;
	xor.b32  	%r212, %r211, %r207;
	add.s32 	%r213, %r212, %r197;
	shl.b32 	%r214, %r213, 4;
	add.s32 	%r215, %r214, -1556008596;
	shr.u32 	%r216, %r213, 5;
	add.s32 	%r217, %r216, -939442524;
	xor.b32  	%r218, %r215, %r217;
	add.s32 	%r219, %r213, -626627285;
	xor.b32  	%r220, %r218, %r219;
	add.s32 	%r221, %r205, %r220;
	shl.b32 	%r222, %r221, 4;
	add.s32 	%r223, %r222, -1383041155;
	shr.u32 	%r224, %r221, 5;
	add.s32 	%r225, %r224, 2123724318;
	add.s32 	%r226, %r221, -626627285;
	xor.b32  	%r227, %r225, %r226;
	xor.b32  	%r228, %r227, %r223;
	add.s32 	%r229, %r228, %r213;
	shl.b32 	%r230, %r229, 4;
	add.s32 	%r231, %r230, -1556008596;
	shr.u32 	%r232, %r229, 5;
	add.s32 	%r233, %r232, -939442524;
	xor.b32  	%r234, %r231, %r233;
	add.s32 	%r235, %r229, 2027808484;
	xor.b32  	%r236, %r234, %r235;
	add.s32 	%r237, %r221, %r236;
	shl.b32 	%r238, %r237, 4;
	add.s32 	%r239, %r238, -1383041155;
	shr.u32 	%r240, %r237, 5;
	add.s32 	%r241, %r240, 2123724318;
	add.s32 	%r242, %r237, 2027808484;
	xor.b32  	%r243, %r241, %r242;
	xor.b32  	%r244, %r243, %r239;
	add.s32 	%r245, %r244, %r229;
	shl.b32 	%r246, %r245, 4;
	add.s32 	%r247, %r246, -1556008596;
	shr.u32 	%r248, %r245, 5;
	add.s32 	%r249, %r248, -939442524;
	xor.b32  	%r250, %r247, %r249;
	add.s32 	%r251, %r245, 387276957;
	xor.b32  	%r252, %r250, %r251;
	add.s32 	%r253, %r237, %r252;
	shl.b32 	%r254, %r253, 4;
	add.s32 	%r255, %r254, -1383041155;
	shr.u32 	%r256, %r253, 5;
	add.s32 	%r257, %r256, 2123724318;
	add.s32 	%r258, %r253, 387276957;
	xor.b32  	%r259, %r257, %r258;
	xor.b32  	%r260, %r259, %r255;
	add.s32 	%r261, %r260, %r245;
	shl.b32 	%r262, %r261, 4;
	add.s32 	%r263, %r262, -1556008596;
	shr.u32 	%r264, %r261, 5;
	add.s32 	%r265, %r264, -939442524;
	xor.b32  	%r266, %r263, %r265;
	add.s32 	%r267, %r261, -1253254570;
	xor.b32  	%r268, %r266, %r267;
	add.s32 	%r269, %r253, %r268;
	shl.b32 	%r270, %r269, 4;
	add.s32 	%r271, %r270, -1383041155;
	shr.u32 	%r272, %r269, 5;
	add.s32 	%r273, %r272, 2123724318;
	add.s32 	%r274, %r269, -1253254570;
	xor.b32  	%r275, %r273, %r274;
	xor.b32  	%r276, %r275, %r271;
	add.s32 	%r277, %r276, %r261;
	shl.b32 	%r278, %r277, 4;
	add.s32 	%r279, %r278, -1556008596;
	shr.u32 	%r280, %r277, 5;
	add.s32 	%r281, %r280, -939442524;
	xor.b32  	%r282, %r279, %r281;
	add.s32 	%r283, %r277, 1401181199;
	xor.b32  	%r284, %r282, %r283;
	add.s32 	%r285, %r269, %r284;
	shl.b32 	%r286, %r285, 4;
	add.s32 	%r287, %r286, -1383041155;
	shr.u32 	%r288, %r285, 5;
	add.s32 	%r289, %r288, 2123724318;
	add.s32 	%r290, %r285, 1401181199;
	xor.b32  	%r291, %r289, %r290;
	xor.b32  	%r292, %r291, %r287;
	add.s32 	%r293, %r292, %r277;
	shl.b32 	%r294, %r293, 4;
	add.s32 	%r295, %r294, -1556008596;
	shr.u32 	%r296, %r293, 5;
	add.s32 	%r297, %r296, -939442524;
	xor.b32  	%r298, %r295, %r297;
	add.s32 	%r299, %r293, -239350328;
	xor.b32  	%r300, %r298, %r299;
	add.s32 	%r907, %r300, %r285;
	shl.b32 	%r301, %r907, 4;
	add.s32 	%r302, %r301, -1383041155;
	shr.u32 	%r303, %r907, 5;
	add.s32 	%r304, %r303, 2123724318;
	add.s32 	%r305, %r907, -239350328;
	xor.b32  	%r306, %r304, %r305;
	xor.b32  	%r307, %r306, %r302;
	add.s32 	%r908, %r307, %r293;
	cvt.rn.f32.u32	%f151, %r907;
	add.ftz.f32 	%f152, %f151, 0f3F800000;
	mov.f32 	%f153, 0f4F800000;
	div.approx.ftz.f32 	%f154, %f152, %f153;
	st.local.f32 	[%rd6+72], %f154;
	add.s64 	%rd7, %rd6, 4;
	add.s32 	%r905, %r905, 1;
	setp.eq.s32	%p8, %r905, 27;
	mov.u64 	%rd124, %rd7;
	@%p8 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	cvta.global.u64 	%rd35, output_buffer;
	mov.u32 	%r689, 2;
	mov.u32 	%r690, 16;
	// inline asm
	call (%rd31, %rd32, %rd33, %rd34), _rt_buffer_get_size_64, (%rd35, %r689, %r690);
	// inline asm
	ld.local.v2.f32 	{%f298, %f299}, [%rd1+72];
	mov.f32 	%f301, 0f3F800000;
	sub.ftz.f32 	%f302, %f301, %f298;
	min.ftz.f32 	%f303, %f298, %f302;
	add.ftz.f32 	%f304, %f303, %f303;
	sub.ftz.f32 	%f306, %f301, %f299;
	min.ftz.f32 	%f307, %f299, %f306;
	add.ftz.f32 	%f308, %f307, %f307;
	fma.rn.ftz.f32 	%f309, %f304, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f310, %f308, 0f40000000, 0fBF800000;
	ld.global.f32 	%f292, [eye+8];
	ld.global.v2.f32 	{%f311, %f312}, [eye];
	ld.global.f32 	%f313, [U];
	ld.global.f32 	%f314, [U+4];
	ld.global.f32 	%f315, [U+8];
	ld.global.f32 	%f316, [V];
	mul.ftz.f32 	%f317, %f316, %f310;
	ld.global.f32 	%f318, [V+4];
	mul.ftz.f32 	%f319, %f318, %f310;
	ld.global.f32 	%f320, [V+8];
	mul.ftz.f32 	%f321, %f320, %f310;
	fma.rn.ftz.f32 	%f322, %f313, %f309, %f317;
	fma.rn.ftz.f32 	%f323, %f314, %f309, %f319;
	fma.rn.ftz.f32 	%f324, %f315, %f309, %f321;
	ld.global.f32 	%f325, [W];
	add.ftz.f32 	%f326, %f322, %f325;
	ld.global.f32 	%f327, [W+4];
	add.ftz.f32 	%f328, %f323, %f327;
	ld.global.f32 	%f329, [W+8];
	add.ftz.f32 	%f330, %f324, %f329;
	mul.ftz.f32 	%f331, %f328, %f328;
	fma.rn.ftz.f32 	%f332, %f326, %f326, %f331;
	fma.rn.ftz.f32 	%f333, %f330, %f330, %f332;
	sqrt.approx.ftz.f32 	%f334, %f333;
	rcp.approx.ftz.f32 	%f335, %f334;
	mul.ftz.f32 	%f293, %f326, %f335;
	mul.ftz.f32 	%f294, %f328, %f335;
	mul.ftz.f32 	%f295, %f330, %f335;
	mov.u32 	%r694, 0;
	st.local.u32 	[%rd1+8], %r694;
	mov.f32 	%f665, 0f00000000;
	st.local.v2.f32 	[%rd1], {%f665, %f665};
	mov.u32 	%r695, 1065353216;
	st.local.u32 	[%rd1+32], %r695;
	st.local.v2.f32 	[%rd1+24], {%f301, %f301};
	st.local.v2.u32 	[%rd1+64], {%r41, %r694};
	st.local.u32 	[%rd1+60], %r694;
	st.local.v2.u32 	[%rd1+200], {%r907, %r908};
	ld.global.u32 	%r691, [top_object];
	ld.global.f32 	%f296, [scene_epsilon];
	ld.global.u32 	%r692, [mcmctrace_ray_type];
	mov.f32 	%f297, 0f6C4ECB8F;
	mov.u32 	%r693, 208;
	// inline asm
	call _rt_trace_64, (%r691, %f311, %f312, %f292, %f293, %f294, %f295, %r692, %f296, %f297, %rd17, %r693);
	// inline asm
	ld.local.v2.f32 	{%f337, %f338}, [%rd1+8];
	ld.local.v2.f32 	{%f339, %f340}, [%rd1+24];
	ld.local.f32 	%f341, [%rd1+32];
	ld.local.v2.f32 	{%f342, %f343}, [%rd1+16];
	ld.local.v2.f32 	{%f344, %f345}, [%rd1];
	fma.rn.ftz.f32 	%f662, %f342, %f340, %f345;
	fma.rn.ftz.f32 	%f352, %f338, %f339, %f344;
	st.local.v2.f32 	[%rd1], {%f352, %f662};
	fma.rn.ftz.f32 	%f661, %f343, %f341, %f337;
	st.local.f32 	[%rd1+8], %f661;
	ld.local.u32 	%r697, [%rd1+68];
	setp.ne.s32	%p10, %r697, 0;
	@%p10 bra 	BB0_19;

	ld.local.u32 	%r701, [%rd1+60];
	add.s32 	%r702, %r701, 1;
	ld.local.f32 	%f360, [%rd1+56];
	ld.local.v2.f32 	{%f363, %f364}, [%rd1+48];
	st.local.u32 	[%rd1+60], %r702;
	ld.global.u32 	%r698, [top_object];
	ld.local.f32 	%f357, [%rd1+44];
	ld.local.f32 	%f356, [%rd1+40];
	ld.local.f32 	%f355, [%rd1+36];
	ld.global.f32 	%f361, [scene_epsilon];
	ld.global.u32 	%r699, [mcmctrace_ray_type];
	// inline asm
	call _rt_trace_64, (%r698, %f355, %f356, %f357, %f363, %f364, %f360, %r699, %f361, %f297, %rd17, %r693);
	// inline asm
	ld.local.v2.f32 	{%f365, %f366}, [%rd1+8];
	ld.local.v2.f32 	{%f367, %f368}, [%rd1+24];
	ld.local.f32 	%f369, [%rd1+32];
	ld.local.v2.f32 	{%f370, %f371}, [%rd1+16];
	ld.local.v2.f32 	{%f372, %f373}, [%rd1];
	fma.rn.ftz.f32 	%f662, %f370, %f368, %f373;
	fma.rn.ftz.f32 	%f380, %f366, %f367, %f372;
	st.local.v2.f32 	[%rd1], {%f380, %f662};
	fma.rn.ftz.f32 	%f661, %f371, %f369, %f365;
	st.local.f32 	[%rd1+8], %f661;
	ld.local.u32 	%r703, [%rd1+68];
	setp.ne.s32	%p11, %r703, 0;
	@%p11 bra 	BB0_19;

	ld.local.u32 	%r707, [%rd1+60];
	add.s32 	%r708, %r707, 1;
	ld.local.f32 	%f388, [%rd1+56];
	ld.local.v2.f32 	{%f391, %f392}, [%rd1+48];
	st.local.u32 	[%rd1+60], %r708;
	ld.global.u32 	%r704, [top_object];
	ld.local.f32 	%f385, [%rd1+44];
	ld.local.f32 	%f384, [%rd1+40];
	ld.local.f32 	%f383, [%rd1+36];
	ld.global.f32 	%f389, [scene_epsilon];
	ld.global.u32 	%r705, [mcmctrace_ray_type];
	// inline asm
	call _rt_trace_64, (%r704, %f383, %f384, %f385, %f391, %f392, %f388, %r705, %f389, %f297, %rd17, %r693);
	// inline asm
	ld.local.v2.f32 	{%f393, %f394}, [%rd1+8];
	ld.local.v2.f32 	{%f395, %f396}, [%rd1+24];
	ld.local.f32 	%f397, [%rd1+32];
	ld.local.v2.f32 	{%f398, %f399}, [%rd1+16];
	ld.local.v2.f32 	{%f400, %f401}, [%rd1];
	fma.rn.ftz.f32 	%f662, %f398, %f396, %f401;
	fma.rn.ftz.f32 	%f408, %f394, %f395, %f400;
	st.local.v2.f32 	[%rd1], {%f408, %f662};
	fma.rn.ftz.f32 	%f661, %f399, %f397, %f393;
	st.local.f32 	[%rd1+8], %f661;
	ld.local.u32 	%r709, [%rd1+68];
	setp.ne.s32	%p12, %r709, 0;
	@%p12 bra 	BB0_19;

	ld.local.u32 	%r713, [%rd1+60];
	add.s32 	%r714, %r713, 1;
	ld.local.f32 	%f416, [%rd1+56];
	ld.local.v2.f32 	{%f419, %f420}, [%rd1+48];
	st.local.u32 	[%rd1+60], %r714;
	ld.global.u32 	%r710, [top_object];
	ld.local.f32 	%f413, [%rd1+44];
	ld.local.f32 	%f412, [%rd1+40];
	ld.local.f32 	%f411, [%rd1+36];
	ld.global.f32 	%f417, [scene_epsilon];
	ld.global.u32 	%r711, [mcmctrace_ray_type];
	// inline asm
	call _rt_trace_64, (%r710, %f411, %f412, %f413, %f419, %f420, %f416, %r711, %f417, %f297, %rd17, %r693);
	// inline asm
	ld.local.v2.f32 	{%f421, %f422}, [%rd1+8];
	ld.local.v2.f32 	{%f423, %f424}, [%rd1+24];
	ld.local.f32 	%f425, [%rd1+32];
	ld.local.v2.f32 	{%f426, %f427}, [%rd1+16];
	ld.local.v2.f32 	{%f428, %f429}, [%rd1];
	fma.rn.ftz.f32 	%f662, %f426, %f424, %f429;
	fma.rn.ftz.f32 	%f436, %f422, %f423, %f428;
	st.local.v2.f32 	[%rd1], {%f436, %f662};
	fma.rn.ftz.f32 	%f661, %f427, %f425, %f421;
	st.local.f32 	[%rd1+8], %f661;
	ld.local.u32 	%r715, [%rd1+68];
	setp.ne.s32	%p13, %r715, 0;
	@%p13 bra 	BB0_19;

	ld.local.u32 	%r719, [%rd1+60];
	add.s32 	%r720, %r719, 1;
	ld.local.f32 	%f444, [%rd1+56];
	ld.local.v2.f32 	{%f447, %f448}, [%rd1+48];
	st.local.u32 	[%rd1+60], %r720;
	ld.global.u32 	%r716, [top_object];
	ld.local.f32 	%f441, [%rd1+44];
	ld.local.f32 	%f440, [%rd1+40];
	ld.local.f32 	%f439, [%rd1+36];
	ld.global.f32 	%f445, [scene_epsilon];
	ld.global.u32 	%r717, [mcmctrace_ray_type];
	// inline asm
	call _rt_trace_64, (%r716, %f439, %f440, %f441, %f447, %f448, %f444, %r717, %f445, %f297, %rd17, %r693);
	// inline asm
	ld.local.v2.f32 	{%f449, %f450}, [%rd1+8];
	ld.local.v2.f32 	{%f451, %f452}, [%rd1+24];
	ld.local.f32 	%f453, [%rd1+32];
	ld.local.v2.f32 	{%f454, %f455}, [%rd1+16];
	ld.local.v2.f32 	{%f456, %f457}, [%rd1];
	fma.rn.ftz.f32 	%f662, %f454, %f452, %f457;
	fma.rn.ftz.f32 	%f464, %f450, %f451, %f456;
	st.local.v2.f32 	[%rd1], {%f464, %f662};
	fma.rn.ftz.f32 	%f661, %f455, %f453, %f449;
	st.local.f32 	[%rd1+8], %f661;
	ld.local.u32 	%r721, [%rd1+68];
	setp.ne.s32	%p14, %r721, 0;
	@%p14 bra 	BB0_19;

	ld.local.u32 	%r722, [%rd1+60];
	add.s32 	%r723, %r722, 1;
	st.local.u32 	[%rd1+60], %r723;

BB0_19:
	ld.local.v2.u32 	{%r724, %r725}, [%rd1+200];
	ld.local.f32 	%f467, [%rd1+8];
	ld.local.v2.f32 	{%f468, %f469}, [%rd1];
	max.ftz.f32 	%f472, %f468, %f469;
	max.ftz.f32 	%f473, %f472, %f467;
	ld.global.u32 	%r726, [sampler_type];
	setp.eq.s32	%p15, %r726, 0;
	selp.f32	%f108, 0f3F800000, %f473, %p15;
	ld.global.u32 	%r727, [frame_number];
	setp.gt.u32	%p16, %r727, 1;
	@%p16 bra 	BB0_24;

	setp.neu.ftz.f32	%p17, %f108, 0f00000000;
	st.local.f32 	[%rd1+180], %f108;
	mov.u32 	%r909, %r724;
	mov.u32 	%r910, %r725;
	@%p17 bra 	BB0_22;

	st.local.u32 	[%rd1+192], %r694;
	st.local.v2.f32 	[%rd1+184], {%f665, %f665};
	bra.uni 	BB0_23;

BB0_22:
	rcp.approx.ftz.f32 	%f475, %f108;
	ld.local.f32 	%f476, [%rd1];
	mul.ftz.f32 	%f477, %f661, %f475;
	mul.ftz.f32 	%f478, %f662, %f475;
	mul.ftz.f32 	%f479, %f476, %f475;
	st.local.v2.f32 	[%rd1+184], {%f479, %f478};
	st.local.f32 	[%rd1+192], %f477;

BB0_23:
	ld.global.u32 	%r735, [initial_sampling];
	setp.eq.s32	%p18, %r735, 1;
	selp.f32	%f480, %f108, 0f3F800000, %p18;
	ld.local.v2.f32 	{%f482, %f483}, [%rd1+184];
	mul.ftz.f32 	%f485, %f482, %f480;
	mul.ftz.f32 	%f487, %f483, %f480;
	ld.local.f32 	%f488, [%rd1+192];
	mul.ftz.f32 	%f489, %f488, %f480;
	ld.local.v2.f32 	{%f490, %f491}, [%rd1+72];
	sub.ftz.f32 	%f493, %f301, %f490;
	min.ftz.f32 	%f494, %f490, %f493;
	add.ftz.f32 	%f495, %f494, %f494;
	sub.ftz.f32 	%f497, %f301, %f491;
	min.ftz.f32 	%f498, %f491, %f497;
	add.ftz.f32 	%f499, %f498, %f498;
	ld.global.u32 	%r736, [frame_width];
	cvt.rn.f32.u32	%f500, %r736;
	mul.ftz.f32 	%f501, %f500, %f495;
	cvt.rzi.ftz.u32.f32	%r737, %f501;
	ld.global.u32 	%r738, [frame_height];
	cvt.rn.f32.u32	%f502, %r738;
	mul.ftz.f32 	%f503, %f502, %f499;
	cvt.rzi.ftz.u32.f32	%r739, %f503;
	rem.u32 	%r740, %r737, %r736;
	rem.u32 	%r741, %r739, %r738;
	cvt.u64.u32	%rd55, %r740;
	cvt.u64.u32	%rd56, %r741;
	cvta.global.u64 	%rd54, aclwmulation_buffer;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd54, %r689, %r690, %rd55, %rd56, %rd16, %rd16);
	// inline asm
	atom.add.f32 	%f504, [%rd41], %f485;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd54, %r689, %r690, %rd55, %rd56, %rd16, %rd16);
	// inline asm
	add.s64 	%rd59, %rd47, 4;
	atom.add.f32 	%f505, [%rd59], %f487;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r689, %r690, %rd55, %rd56, %rd16, %rd16);
	// inline asm
	add.s64 	%rd60, %rd53, 8;
	atom.add.f32 	%f506, [%rd60], %f489;
	bra.uni 	BB0_32;

BB0_24:
	setp.neu.ftz.f32	%p19, %f108, 0f00000000;
	div.approx.ftz.f32 	%f507, %f108, %f633;
	min.ftz.f32 	%f109, %f301, %f507;
	@%p19 bra 	BB0_26;

	mov.f32 	%f664, %f665;
	mov.f32 	%f663, %f665;
	bra.uni 	BB0_27;

BB0_26:
	rcp.approx.ftz.f32 	%f512, %f108;
	ld.local.f32 	%f513, [%rd1];
	mul.ftz.f32 	%f663, %f513, %f512;
	mul.ftz.f32 	%f664, %f662, %f512;
	mul.ftz.f32 	%f665, %f661, %f512;

BB0_27:
	setp.eq.ftz.f32	%p20, %f633, 0f00000000;
	selp.f32	%f514, 0f3F800000, %f109, %p20;
	ld.local.v2.f32 	{%f516, %f517}, [%rd1+72];
	sub.ftz.f32 	%f519, %f301, %f516;
	min.ftz.f32 	%f520, %f516, %f519;
	add.ftz.f32 	%f521, %f520, %f520;
	sub.ftz.f32 	%f523, %f301, %f517;
	min.ftz.f32 	%f524, %f517, %f523;
	add.ftz.f32 	%f525, %f524, %f524;
	ld.global.u32 	%r754, [frame_width];
	cvt.rn.f32.u32	%f526, %r754;
	mul.ftz.f32 	%f527, %f526, %f521;
	cvt.rzi.ftz.u32.f32	%r755, %f527;
	ld.global.u32 	%r756, [frame_height];
	cvt.rn.f32.u32	%f528, %r756;
	mul.ftz.f32 	%f529, %f528, %f525;
	cvt.rzi.ftz.u32.f32	%r757, %f529;
	rem.u32 	%r758, %r755, %r754;
	rem.u32 	%r759, %r757, %r756;
	cvt.u64.u32	%rd75, %r758;
	cvt.u64.u32	%rd76, %r759;
	cvta.global.u64 	%rd92, aclwmulation_buffer;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd75, %rd76, %rd16, %rd16);
	// inline asm
	mul.ftz.f32 	%f530, %f663, %f514;
	atom.add.f32 	%f531, [%rd61], %f530;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd75, %rd76, %rd16, %rd16);
	// inline asm
	add.s64 	%rd97, %rd67, 4;
	mul.ftz.f32 	%f532, %f664, %f514;
	atom.add.f32 	%f533, [%rd97], %f532;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd75, %rd76, %rd16, %rd16);
	// inline asm
	add.s64 	%rd98, %rd73, 8;
	mul.ftz.f32 	%f534, %f665, %f514;
	atom.add.f32 	%f535, [%rd98], %f534;
	sub.ftz.f32 	%f536, %f301, %f660;
	min.ftz.f32 	%f537, %f660, %f536;
	add.ftz.f32 	%f538, %f537, %f537;
	sub.ftz.f32 	%f539, %f301, %f659;
	min.ftz.f32 	%f540, %f659, %f539;
	add.ftz.f32 	%f541, %f540, %f540;
	ld.global.u32 	%r760, [frame_width];
	cvt.rn.f32.u32	%f542, %r760;
	mul.ftz.f32 	%f543, %f542, %f538;
	cvt.rzi.ftz.u32.f32	%r761, %f543;
	ld.global.u32 	%r762, [frame_height];
	cvt.rn.f32.u32	%f544, %r762;
	mul.ftz.f32 	%f545, %f544, %f541;
	cvt.rzi.ftz.u32.f32	%r763, %f545;
	rem.u32 	%r764, %r761, %r760;
	rem.u32 	%r765, %r763, %r762;
	sub.ftz.f32 	%f546, %f301, %f514;
	mul.ftz.f32 	%f547, %f632, %f546;
	mul.ftz.f32 	%f548, %f631, %f546;
	mul.ftz.f32 	%f549, %f630, %f546;
	cvt.u64.u32	%rd93, %r764;
	cvt.u64.u32	%rd94, %r765;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd93, %rd94, %rd16, %rd16);
	// inline asm
	atom.add.f32 	%f550, [%rd79], %f547;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd93, %rd94, %rd16, %rd16);
	// inline asm
	add.s64 	%rd99, %rd85, 4;
	atom.add.f32 	%f551, [%rd99], %f548;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd92, %r689, %r690, %rd93, %rd94, %rd16, %rd16);
	// inline asm
	add.s64 	%rd100, %rd91, 8;
	atom.add.f32 	%f552, [%rd100], %f549;
	shl.b32 	%r766, %r725, 4;
	add.s32 	%r767, %r766, -1556008596;
	shr.u32 	%r768, %r725, 5;
	add.s32 	%r769, %r768, -939442524;
	xor.b32  	%r770, %r767, %r769;
	add.s32 	%r771, %r725, -1640531527;
	xor.b32  	%r772, %r770, %r771;
	add.s32 	%r773, %r724, %r772;
	shl.b32 	%r774, %r773, 4;
	add.s32 	%r775, %r774, -1383041155;
	shr.u32 	%r776, %r773, 5;
	add.s32 	%r777, %r776, 2123724318;
	add.s32 	%r778, %r773, -1640531527;
	xor.b32  	%r779, %r777, %r778;
	xor.b32  	%r780, %r779, %r775;
	add.s32 	%r781, %r780, %r725;
	shl.b32 	%r782, %r781, 4;
	add.s32 	%r783, %r782, -1556008596;
	shr.u32 	%r784, %r781, 5;
	add.s32 	%r785, %r784, -939442524;
	xor.b32  	%r786, %r783, %r785;
	add.s32 	%r787, %r781, 1013904242;
	xor.b32  	%r788, %r786, %r787;
	add.s32 	%r789, %r773, %r788;
	shl.b32 	%r790, %r789, 4;
	add.s32 	%r791, %r790, -1383041155;
	shr.u32 	%r792, %r789, 5;
	add.s32 	%r793, %r792, 2123724318;
	add.s32 	%r794, %r789, 1013904242;
	xor.b32  	%r795, %r793, %r794;
	xor.b32  	%r796, %r795, %r791;
	add.s32 	%r797, %r796, %r781;
	shl.b32 	%r798, %r797, 4;
	add.s32 	%r799, %r798, -1556008596;
	shr.u32 	%r800, %r797, 5;
	add.s32 	%r801, %r800, -939442524;
	xor.b32  	%r802, %r799, %r801;
	add.s32 	%r803, %r797, -626627285;
	xor.b32  	%r804, %r802, %r803;
	add.s32 	%r805, %r789, %r804;
	shl.b32 	%r806, %r805, 4;
	add.s32 	%r807, %r806, -1383041155;
	shr.u32 	%r808, %r805, 5;
	add.s32 	%r809, %r808, 2123724318;
	add.s32 	%r810, %r805, -626627285;
	xor.b32  	%r811, %r809, %r810;
	xor.b32  	%r812, %r811, %r807;
	add.s32 	%r813, %r812, %r797;
	shl.b32 	%r814, %r813, 4;
	add.s32 	%r815, %r814, -1556008596;
	shr.u32 	%r816, %r813, 5;
	add.s32 	%r817, %r816, -939442524;
	xor.b32  	%r818, %r815, %r817;
	add.s32 	%r819, %r813, 2027808484;
	xor.b32  	%r820, %r818, %r819;
	add.s32 	%r821, %r805, %r820;
	shl.b32 	%r822, %r821, 4;
	add.s32 	%r823, %r822, -1383041155;
	shr.u32 	%r824, %r821, 5;
	add.s32 	%r825, %r824, 2123724318;
	add.s32 	%r826, %r821, 2027808484;
	xor.b32  	%r827, %r825, %r826;
	xor.b32  	%r828, %r827, %r823;
	add.s32 	%r829, %r828, %r813;
	shl.b32 	%r830, %r829, 4;
	add.s32 	%r831, %r830, -1556008596;
	shr.u32 	%r832, %r829, 5;
	add.s32 	%r833, %r832, -939442524;
	xor.b32  	%r834, %r831, %r833;
	add.s32 	%r835, %r829, 387276957;
	xor.b32  	%r836, %r834, %r835;
	add.s32 	%r837, %r821, %r836;
	shl.b32 	%r838, %r837, 4;
	add.s32 	%r839, %r838, -1383041155;
	shr.u32 	%r840, %r837, 5;
	add.s32 	%r841, %r840, 2123724318;
	add.s32 	%r842, %r837, 387276957;
	xor.b32  	%r843, %r841, %r842;
	xor.b32  	%r844, %r843, %r839;
	add.s32 	%r845, %r844, %r829;
	shl.b32 	%r846, %r845, 4;
	add.s32 	%r847, %r846, -1556008596;
	shr.u32 	%r848, %r845, 5;
	add.s32 	%r849, %r848, -939442524;
	xor.b32  	%r850, %r847, %r849;
	add.s32 	%r851, %r845, -1253254570;
	xor.b32  	%r852, %r850, %r851;
	add.s32 	%r853, %r837, %r852;
	shl.b32 	%r854, %r853, 4;
	add.s32 	%r855, %r854, -1383041155;
	shr.u32 	%r856, %r853, 5;
	add.s32 	%r857, %r856, 2123724318;
	add.s32 	%r858, %r853, -1253254570;
	xor.b32  	%r859, %r857, %r858;
	xor.b32  	%r860, %r859, %r855;
	add.s32 	%r861, %r860, %r845;
	shl.b32 	%r862, %r861, 4;
	add.s32 	%r863, %r862, -1556008596;
	shr.u32 	%r864, %r861, 5;
	add.s32 	%r865, %r864, -939442524;
	xor.b32  	%r866, %r863, %r865;
	add.s32 	%r867, %r861, 1401181199;
	xor.b32  	%r868, %r866, %r867;
	add.s32 	%r869, %r853, %r868;
	shl.b32 	%r870, %r869, 4;
	add.s32 	%r871, %r870, -1383041155;
	shr.u32 	%r872, %r869, 5;
	add.s32 	%r873, %r872, 2123724318;
	add.s32 	%r874, %r869, 1401181199;
	xor.b32  	%r875, %r873, %r874;
	xor.b32  	%r876, %r875, %r871;
	add.s32 	%r877, %r876, %r861;
	shl.b32 	%r878, %r877, 4;
	add.s32 	%r879, %r878, -1556008596;
	shr.u32 	%r880, %r877, 5;
	add.s32 	%r881, %r880, -939442524;
	xor.b32  	%r882, %r879, %r881;
	add.s32 	%r883, %r877, -239350328;
	xor.b32  	%r884, %r882, %r883;
	add.s32 	%r909, %r884, %r869;
	shl.b32 	%r885, %r909, 4;
	add.s32 	%r886, %r885, -1383041155;
	shr.u32 	%r887, %r909, 5;
	add.s32 	%r888, %r887, 2123724318;
	add.s32 	%r889, %r909, -239350328;
	xor.b32  	%r890, %r888, %r889;
	xor.b32  	%r891, %r890, %r886;
	add.s32 	%r910, %r891, %r877;
	cvt.rn.f32.u32	%f553, %r909;
	add.ftz.f32 	%f554, %f553, 0f3F800000;
	mov.f32 	%f555, 0f4F800000;
	div.approx.ftz.f32 	%f556, %f554, %f555;
	setp.gt.ftz.f32	%p21, %f514, %f556;
	@%p21 bra 	BB0_29;

	st.local.v2.f32 	[%rd1+184], {%f632, %f631};
	st.local.v2.f32 	[%rd1+176], {%f634, %f633};
	st.local.v2.f32 	[%rd1+168], {%f636, %f635};
	st.local.v2.f32 	[%rd1+160], {%f638, %f637};
	st.local.v2.f32 	[%rd1+152], {%f640, %f639};
	st.local.v2.f32 	[%rd1+144], {%f642, %f641};
	st.local.v2.f32 	[%rd1+136], {%f644, %f643};
	st.local.v2.f32 	[%rd1+128], {%f646, %f645};
	st.local.v2.f32 	[%rd1+120], {%f648, %f647};
	st.local.v2.f32 	[%rd1+112], {%f650, %f649};
	st.local.v2.f32 	[%rd1+104], {%f652, %f651};
	st.local.v2.f32 	[%rd1+96], {%f654, %f653};
	st.local.v2.f32 	[%rd1+88], {%f656, %f655};
	st.local.v2.f32 	[%rd1+80], {%f658, %f657};
	st.local.v2.f32 	[%rd1+72], {%f660, %f659};
	st.local.f32 	[%rd1+192], %f630;
	bra.uni 	BB0_32;

BB0_29:
	st.local.f32 	[%rd1+180], %f108;
	@%p19 bra 	BB0_31;

	st.local.u32 	[%rd1+192], %r694;
	mov.f32 	%f557, 0f00000000;
	st.local.v2.f32 	[%rd1+184], {%f557, %f557};
	bra.uni 	BB0_32;

BB0_31:
	rcp.approx.ftz.f32 	%f558, %f108;
	ld.local.v2.f32 	{%f559, %f560}, [%rd1];
	ld.local.f32 	%f561, [%rd1+8];
	mul.ftz.f32 	%f562, %f561, %f558;
	mul.ftz.f32 	%f564, %f560, %f558;
	mul.ftz.f32 	%f566, %f559, %f558;
	st.local.v2.f32 	[%rd1+184], {%f566, %f564};
	st.local.f32 	[%rd1+192], %f562;

BB0_32:
	ld.global.u32 	%r893, [sampler_type];
	setp.eq.s32	%p23, %r893, 0;
	@%p23 bra 	BB0_35;

	ld.global.u32 	%r894, [frame_number];
	setp.eq.s32	%p24, %r894, 1;
	@%p24 bra 	BB0_36;

	cvta.global.u64 	%rd121, seed_buffer;
	mov.u32 	%r901, 8;
	ld.global.u32 	%rd103, [launch_index];
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd121, %r41, %r901, %rd103, %rd16, %rd16, %rd16);
	// inline asm
	st.v2.u32 	[%rd101], {%r909, %r910};
	bra.uni 	BB0_36;

BB0_35:
	cvta.global.u64 	%rd122, seed_buffer;
	mov.u32 	%r902, 8;
	ld.global.u32 	%rd109, [launch_index];
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd122, %r41, %r902, %rd109, %rd16, %rd16, %rd16);
	// inline asm
	st.v2.u32 	[%rd107], {%r909, %r910};

BB0_36:
	cvta.global.u64 	%rd114, state_buffer;
	ld.global.u32 	%rd115, [launch_index];
	mov.u32 	%r900, 124;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd114, %r41, %r900, %rd115, %rd16, %rd16, %rd16);
	// inline asm
	ld.local.v2.f32 	{%f567, %f568}, [%rd1+72];
	ld.local.v2.f32 	{%f569, %f570}, [%rd1+80];
	ld.local.v2.f32 	{%f571, %f572}, [%rd1+88];
	ld.local.v2.f32 	{%f573, %f574}, [%rd1+96];
	ld.local.v2.f32 	{%f575, %f576}, [%rd1+104];
	ld.local.v2.f32 	{%f577, %f578}, [%rd1+112];
	ld.local.v2.f32 	{%f579, %f580}, [%rd1+120];
	ld.local.v2.f32 	{%f581, %f582}, [%rd1+128];
	ld.local.v2.f32 	{%f583, %f584}, [%rd1+136];
	ld.local.v2.f32 	{%f585, %f586}, [%rd1+144];
	ld.local.v2.f32 	{%f587, %f588}, [%rd1+152];
	ld.local.v2.f32 	{%f589, %f590}, [%rd1+160];
	ld.local.v2.f32 	{%f591, %f592}, [%rd1+168];
	ld.local.v2.f32 	{%f593, %f594}, [%rd1+176];
	ld.local.v2.f32 	{%f595, %f596}, [%rd1+184];
	ld.local.f32 	%f597, [%rd1+192];
	st.f32 	[%rd113+120], %f597;
	st.f32 	[%rd113+116], %f596;
	st.f32 	[%rd113+112], %f595;
	st.f32 	[%rd113+108], %f594;
	st.f32 	[%rd113+104], %f593;
	st.f32 	[%rd113+100], %f592;
	st.f32 	[%rd113+96], %f591;
	st.f32 	[%rd113+92], %f590;
	st.f32 	[%rd113+88], %f589;
	st.f32 	[%rd113+84], %f588;
	st.f32 	[%rd113+80], %f587;
	st.f32 	[%rd113+76], %f586;
	st.f32 	[%rd113+72], %f585;
	st.f32 	[%rd113+68], %f584;
	st.f32 	[%rd113+64], %f583;
	st.f32 	[%rd113+60], %f582;
	st.f32 	[%rd113+56], %f581;
	st.f32 	[%rd113+52], %f580;
	st.f32 	[%rd113+48], %f579;
	st.f32 	[%rd113+44], %f578;
	st.f32 	[%rd113+40], %f577;
	st.f32 	[%rd113+36], %f576;
	st.f32 	[%rd113+32], %f575;
	st.f32 	[%rd113+28], %f574;
	st.f32 	[%rd113+24], %f573;
	st.f32 	[%rd113+20], %f572;
	st.f32 	[%rd113+16], %f571;
	st.f32 	[%rd113+12], %f570;
	st.f32 	[%rd113+8], %f569;
	st.f32 	[%rd113+4], %f568;
	st.f32 	[%rd113], %f567;
	ret;
}

.visible .entry _Z13uber_materialv(

)
{
	.local .align 8 .b8 	__local_depot1[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .s16 	%rs<9>;
	.reg .s32 	%r<65>;
	.reg .f32 	%f<796>;
	.reg .s64 	%rd<69>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd5, shading_normal;
	add.s64 	%rd6, %rd5, 8;
	ldu.global.f32 	%f93, [%rd6];
	add.s64 	%rd7, %rd5, 4;
	ldu.global.f32 	%f92, [%rd7];
	ldu.global.f32 	%f91, [shading_normal];
	mov.u32 	%r6, 7937;
	mov.f32 	%f791, 0f00000000;
	// inline asm
	call (%f87, %f88, %f89, %f90), _rt_transform_tuple, (%r6, %f91, %f92, %f93, %f791);
	// inline asm
	mul.ftz.f32 	%f115, %f88, %f88;
	fma.rn.ftz.f32 	%f116, %f87, %f87, %f115;
	fma.rn.ftz.f32 	%f117, %f89, %f89, %f116;
	sqrt.approx.ftz.f32 	%f118, %f117;
	rcp.approx.ftz.f32 	%f119, %f118;
	mul.ftz.f32 	%f1, %f87, %f119;
	mul.ftz.f32 	%f2, %f88, %f119;
	mul.ftz.f32 	%f3, %f89, %f119;
	ld.global.f32 	%f101, [geometric_normal+8];
	ld.global.f32 	%f100, [geometric_normal+4];
	ld.global.f32 	%f99, [geometric_normal];
	// inline asm
	call (%f95, %f96, %f97, %f98), _rt_transform_tuple, (%r6, %f99, %f100, %f101, %f791);
	// inline asm
	mul.ftz.f32 	%f120, %f96, %f96;
	fma.rn.ftz.f32 	%f121, %f95, %f95, %f120;
	fma.rn.ftz.f32 	%f122, %f97, %f97, %f121;
	sqrt.approx.ftz.f32 	%f123, %f122;
	rcp.approx.ftz.f32 	%f124, %f123;
	mul.ftz.f32 	%f4, %f95, %f124;
	mul.ftz.f32 	%f5, %f96, %f124;
	mul.ftz.f32 	%f6, %f97, %f124;
	ld.global.f32 	%f7, [ray+12];
	neg.ftz.f32 	%f125, %f7;
	ld.global.f32 	%f8, [ray+16];
	ld.global.f32 	%f9, [ray+20];
	mul.ftz.f32 	%f126, %f4, %f125;
	mul.ftz.f32 	%f127, %f5, %f8;
	sub.ftz.f32 	%f128, %f126, %f127;
	mul.ftz.f32 	%f129, %f6, %f9;
	sub.ftz.f32 	%f130, %f128, %f129;
	mov.b32 	 %r7, %f130;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r8, 1065353216;
	mov.b32 	 %f131, %r9;
	ld.global.f32 	%f107, [texcoord];
	ld.global.f32 	%f108, [texcoord+4];
	ld.global.f32 	%f132, [t_hit];
	ld.global.f32 	%f133, [ray];
	fma.rn.ftz.f32 	%f10, %f7, %f132, %f133;
	ld.global.f32 	%f134, [ray+4];
	fma.rn.ftz.f32 	%f11, %f8, %f132, %f134;
	ld.global.f32 	%f135, [ray+8];
	fma.rn.ftz.f32 	%f12, %f9, %f132, %f135;
	st.global.f32 	[lwrrent_prd+44], %f12;
	st.global.f32 	[lwrrent_prd+40], %f11;
	st.global.f32 	[lwrrent_prd+36], %f10;
	mov.u32 	%r10, 0;
	st.global.u32 	[lwrrent_prd+20], %r10;
	st.global.u32 	[lwrrent_prd+16], %r10;
	st.global.u32 	[lwrrent_prd+12], %r10;
	// inline asm
	tex.2d.v4.f32.f32 {%f103, %f104, %f105, %f106}, [diffuse_map, {%f107, %f108}];
	// inline asm
	// inline asm
	tex.2d.v4.f32.f32 {%f109, %f110, %f111, %f112}, [spelwlar_map, {%f107, %f108}];
	// inline asm
	mul.ftz.f32 	%f24, %f1, %f131;
	mul.ftz.f32 	%f25, %f2, %f131;
	mul.ftz.f32 	%f26, %f3, %f131;
	ld.global.f32 	%f27, [emissive+4];
	ld.global.f32 	%f28, [emissive];
	max.ftz.f32 	%f136, %f28, %f27;
	ld.global.f32 	%f29, [emissive+8];
	max.ftz.f32 	%f137, %f136, %f29;
	setp.leu.ftz.f32	%p1, %f137, 0f00000000;
	@%p1 bra 	BB1_2;

	mov.u32 	%r64, 4;
	bra.uni 	BB1_3;

BB1_2:
	max.ftz.f32 	%f138, %f109, %f110;
	max.ftz.f32 	%f139, %f138, %f111;
	setp.gt.ftz.f32	%p2, %f139, 0f00000000;
	ld.global.f32 	%f140, [phong_exp];
	setp.eq.ftz.f32	%p3, %f140, 0f00000000;
	selp.b32	%r11, 2, 1, %p3;
	selp.b32	%r12, 0, 3, %p3;
	selp.b32	%r64, %r11, %r12, %p2;

BB1_3:
	setp.eq.s32	%p4, %r64, 4;
	@%p4 bra 	BB1_35;

	setp.eq.s32	%p5, %r64, 1;
	@%p5 bra 	BB1_34;

	setp.eq.s32	%p6, %r64, 2;
	@%p6 bra 	BB1_27;

	setp.eq.s32	%p7, %r64, 0;
	@%p7 bra 	BB1_18;

	setp.ne.s32	%p8, %r64, 3;
	@%p8 bra 	BB1_41;

	ld.global.u32 	%r16, [lwrrent_prd+60];
	mad.lo.s32 	%r17, %r16, 5, 2;
	mul.wide.s32 	%rd15, %r17, 4;
	mov.u64 	%rd16, lwrrent_prd;
	add.s64 	%rd17, %rd16, %rd15;
	ld.global.f32 	%f141, [%rd17+72];
	mov.f32 	%f142, 0f3F800000;
	sub.ftz.f32 	%f143, %f142, %f141;
	min.ftz.f32 	%f144, %f141, %f143;
	add.ftz.f32 	%f145, %f144, %f144;
	mov.f32 	%f146, 0f40000000;
	ld.global.f32 	%f147, [phong_exp];
	add.ftz.f32 	%f148, %f147, 0f3F800000;
	div.approx.ftz.f32 	%f149, %f146, %f148;
	lg2.approx.ftz.f32 	%f150, %f145;
	mul.ftz.f32 	%f151, %f150, %f149;
	ex2.approx.ftz.f32 	%f152, %f151;
	sub.ftz.f32 	%f153, %f142, %f152;
	sqrt.approx.ftz.f32 	%f154, %f153;
	sqrt.approx.ftz.f32 	%f155, %f152;
	ld.global.f32 	%f156, [%rd17+76];
	mul.ftz.f32 	%f157, %f156, 0f40C90FDB;
	cos.approx.ftz.f32 	%f158, %f157;
	mul.ftz.f32 	%f159, %f158, %f154;
	sin.approx.ftz.f32 	%f160, %f157;
	mul.ftz.f32 	%f161, %f160, %f154;
	mul.ftz.f32 	%f162, %f25, 0f00000000;
	sub.ftz.f32 	%f163, %f162, %f26;
	mul.ftz.f32 	%f164, %f24, 0f00000000;
	mul.ftz.f32 	%f165, %f26, 0f00000000;
	sub.ftz.f32 	%f166, %f165, %f164;
	sub.ftz.f32 	%f167, %f24, %f162;
	mul.ftz.f32 	%f168, %f166, %f166;
	fma.rn.ftz.f32 	%f169, %f163, %f163, %f168;
	fma.rn.ftz.f32 	%f170, %f167, %f167, %f169;
	setp.lt.ftz.f32	%p9, %f170, 0f3A83126F;
	sub.ftz.f32 	%f171, %f162, %f165;
	sub.ftz.f32 	%f172, %f26, %f164;
	sub.ftz.f32 	%f173, %f164, %f25;
	selp.f32	%f174, %f171, %f163, %p9;
	selp.f32	%f175, %f172, %f166, %p9;
	selp.f32	%f176, %f173, %f167, %p9;
	mul.ftz.f32 	%f177, %f175, %f175;
	fma.rn.ftz.f32 	%f178, %f174, %f174, %f177;
	fma.rn.ftz.f32 	%f179, %f176, %f176, %f178;
	sqrt.approx.ftz.f32 	%f180, %f179;
	rcp.approx.ftz.f32 	%f181, %f180;
	mul.ftz.f32 	%f182, %f174, %f181;
	mul.ftz.f32 	%f183, %f175, %f181;
	mul.ftz.f32 	%f184, %f176, %f181;
	mul.ftz.f32 	%f185, %f25, %f184;
	mul.ftz.f32 	%f186, %f26, %f183;
	sub.ftz.f32 	%f187, %f185, %f186;
	mul.ftz.f32 	%f188, %f26, %f182;
	mul.ftz.f32 	%f189, %f24, %f184;
	sub.ftz.f32 	%f190, %f188, %f189;
	mul.ftz.f32 	%f191, %f24, %f183;
	mul.ftz.f32 	%f192, %f25, %f182;
	sub.ftz.f32 	%f193, %f191, %f192;
	mul.ftz.f32 	%f194, %f182, %f159;
	mul.ftz.f32 	%f195, %f183, %f159;
	mul.ftz.f32 	%f196, %f184, %f159;
	fma.rn.ftz.f32 	%f197, %f24, %f155, %f194;
	fma.rn.ftz.f32 	%f198, %f25, %f155, %f195;
	fma.rn.ftz.f32 	%f199, %f26, %f155, %f196;
	fma.rn.ftz.f32 	%f200, %f187, %f161, %f197;
	fma.rn.ftz.f32 	%f201, %f190, %f161, %f198;
	fma.rn.ftz.f32 	%f202, %f193, %f161, %f199;
	add.ftz.f32 	%f203, %f200, %f200;
	add.ftz.f32 	%f204, %f201, %f201;
	add.ftz.f32 	%f205, %f202, %f202;
	mul.ftz.f32 	%f206, %f201, %f8;
	fma.rn.ftz.f32 	%f207, %f200, %f7, %f206;
	fma.rn.ftz.f32 	%f208, %f202, %f9, %f207;
	mul.ftz.f32 	%f209, %f203, %f208;
	mul.ftz.f32 	%f210, %f204, %f208;
	mul.ftz.f32 	%f211, %f205, %f208;
	sub.ftz.f32 	%f212, %f9, %f211;
	sub.ftz.f32 	%f213, %f8, %f210;
	sub.ftz.f32 	%f214, %f7, %f209;
	st.global.v2.f32 	[lwrrent_prd+48], {%f214, %f213};
	st.global.f32 	[lwrrent_prd+56], %f212;
	st.global.u32 	[lwrrent_prd+64], %r10;
	ld.global.v2.f32 	{%f215, %f216}, [lwrrent_prd+24];
	ld.global.f32 	%f217, [lwrrent_prd+32];
	mul.ftz.f32 	%f218, %f217, %f105;
	mul.ftz.f32 	%f220, %f216, %f104;
	mul.ftz.f32 	%f222, %f215, %f103;
	st.global.v2.f32 	[lwrrent_prd+24], {%f222, %f220};
	st.global.f32 	[lwrrent_prd+32], %f218;
	cvta.global.u64 	%rd14, light_buffer;
	mov.u32 	%r14, 1;
	mov.u32 	%r15, 60;
	// inline asm
	call (%rd10, %rd11, %rd12, %rd13), _rt_buffer_get_size_64, (%rd14, %r14, %r15);
	// inline asm
	cvt.u32.u64	%r3, %rd10;
	setp.eq.s32	%p10, %r3, 0;
	@%p10 bra 	BB1_14;

	cvt.rn.f32.u32	%f30, %r3;
	ld.global.u32 	%r21, [lwrrent_prd+60];
	mad.lo.s32 	%r22, %r21, 5, 6;
	add.s64 	%rd25, %rd16, 72;
	mul.wide.s32 	%rd26, %r22, 4;
	add.s64 	%rd27, %rd25, %rd26;
	ld.global.f32 	%f223, [%rd27];
	mul.ftz.f32 	%f224, %f30, %f223;
	cvt.rzi.ftz.s32.f32	%r23, %f224;
	cvt.s64.s32	%rd20, %r23;
	mov.u64 	%rd23, 0;
	// inline asm
	call (%rd18), _rt_buffer_get_64, (%rd14, %r14, %r15, %rd20, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f33, [%rd18+56];
	ld.f32 	%f32, [%rd18+52];
	ld.f32 	%f31, [%rd18+48];
	ld.f32 	%f225, [%rd18+44];
	ld.f32 	%f226, [%rd18+36];
	ld.f32 	%f227, [%rd18+40];
	ld.f32 	%f228, [%rd18+20];
	ld.f32 	%f229, [%rd18+16];
	ld.f32 	%f230, [%rd18+12];
	ld.f32 	%f231, [%rd18+32];
	ld.f32 	%f232, [%rd18+28];
	ld.f32 	%f233, [%rd18+24];
	ld.f32 	%f234, [%rd18+8];
	ld.f32 	%f235, [%rd18+4];
	ld.f32 	%f236, [%rd18];
	ld.global.u32 	%r24, [lwrrent_prd+60];
	mad.lo.s32 	%r25, %r24, 5, 4;
	mul.wide.s32 	%rd28, %r25, 4;
	add.s64 	%rd29, %rd25, %rd28;
	ld.global.f32 	%f237, [%rd29];
	sub.ftz.f32 	%f239, %f142, %f237;
	min.ftz.f32 	%f240, %f237, %f239;
	add.ftz.f32 	%f241, %f240, %f240;
	sqrt.approx.ftz.f32 	%f242, %f241;
	sub.ftz.f32 	%f243, %f142, %f242;
	add.s64 	%rd30, %rd28, %rd16;
	ld.global.f32 	%f244, [%rd30+76];
	sub.ftz.f32 	%f245, %f142, %f244;
	min.ftz.f32 	%f246, %f244, %f245;
	add.ftz.f32 	%f247, %f246, %f246;
	sub.ftz.f32 	%f248, %f142, %f247;
	mul.ftz.f32 	%f249, %f248, %f242;
	mul.ftz.f32 	%f250, %f247, %f242;
	mul.ftz.f32 	%f251, %f236, %f243;
	mul.ftz.f32 	%f252, %f235, %f243;
	mul.ftz.f32 	%f253, %f234, %f243;
	fma.rn.ftz.f32 	%f254, %f233, %f250, %f251;
	fma.rn.ftz.f32 	%f255, %f232, %f250, %f252;
	fma.rn.ftz.f32 	%f256, %f231, %f250, %f253;
	fma.rn.ftz.f32 	%f257, %f230, %f249, %f254;
	fma.rn.ftz.f32 	%f258, %f229, %f249, %f255;
	fma.rn.ftz.f32 	%f259, %f228, %f249, %f256;
	sub.ftz.f32 	%f260, %f257, %f10;
	sub.ftz.f32 	%f261, %f258, %f11;
	sub.ftz.f32 	%f262, %f259, %f12;
	mul.ftz.f32 	%f263, %f261, %f261;
	fma.rn.ftz.f32 	%f264, %f260, %f260, %f263;
	fma.rn.ftz.f32 	%f265, %f262, %f262, %f264;
	sqrt.approx.ftz.f32 	%f34, %f265;
	rcp.approx.ftz.f32 	%f266, %f34;
	mul.ftz.f32 	%f35, %f260, %f266;
	mul.ftz.f32 	%f36, %f261, %f266;
	mul.ftz.f32 	%f37, %f262, %f266;
	mul.ftz.f32 	%f267, %f25, %f36;
	fma.rn.ftz.f32 	%f268, %f24, %f35, %f267;
	fma.rn.ftz.f32 	%f269, %f26, %f37, %f268;
	mul.ftz.f32 	%f270, %f227, %f36;
	fma.rn.ftz.f32 	%f271, %f226, %f35, %f270;
	fma.rn.ftz.f32 	%f38, %f225, %f37, %f271;
	sub.ftz.f32 	%f272, %f230, %f233;
	sub.ftz.f32 	%f273, %f229, %f232;
	sub.ftz.f32 	%f274, %f228, %f231;
	sub.ftz.f32 	%f275, %f236, %f233;
	sub.ftz.f32 	%f276, %f235, %f232;
	sub.ftz.f32 	%f277, %f234, %f231;
	mul.ftz.f32 	%f278, %f273, %f277;
	mul.ftz.f32 	%f279, %f274, %f276;
	sub.ftz.f32 	%f280, %f278, %f279;
	mul.ftz.f32 	%f281, %f274, %f275;
	mul.ftz.f32 	%f282, %f272, %f277;
	sub.ftz.f32 	%f283, %f281, %f282;
	mul.ftz.f32 	%f284, %f272, %f276;
	mul.ftz.f32 	%f285, %f273, %f275;
	sub.ftz.f32 	%f286, %f284, %f285;
	mul.ftz.f32 	%f287, %f283, %f283;
	fma.rn.ftz.f32 	%f288, %f280, %f280, %f287;
	fma.rn.ftz.f32 	%f39, %f286, %f286, %f288;
	setp.gt.ftz.f32	%p11, %f269, 0f00000000;
	setp.gt.ftz.f32	%p12, %f38, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB1_11;

BB1_10:
	mov.f32 	%f790, %f791;
	mov.f32 	%f789, %f791;
	bra.uni 	BB1_17;

BB1_11:
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd32], %rs1;
	ld.global.u32 	%r26, [top_object];
	ld.global.f32 	%f298, [scene_epsilon];
	ld.global.u32 	%r27, [mcmctrace_shadow_ray_type];
	// inline asm
	call _rt_trace_64, (%r26, %f10, %f11, %f12, %f35, %f36, %f37, %r27, %f298, %f34, %rd31, %r14);
	// inline asm
	ld.local.u8 	%rs2, [%rd32];
	setp.eq.s16	%p14, %rs2, 0;
	@%p14 bra 	BB1_13;

BB1_12:
	mov.f32 	%f791, 0f00000000;
	bra.uni 	BB1_10;

BB1_13:
	sqrt.approx.ftz.f32 	%f303, %f39;
	ld.global.f32 	%f304, [ray+12];
	sub.ftz.f32 	%f305, %f35, %f304;
	ld.global.f32 	%f306, [ray+16];
	sub.ftz.f32 	%f307, %f36, %f306;
	ld.global.f32 	%f308, [ray+20];
	sub.ftz.f32 	%f309, %f37, %f308;
	mul.ftz.f32 	%f310, %f307, %f307;
	fma.rn.ftz.f32 	%f311, %f305, %f305, %f310;
	fma.rn.ftz.f32 	%f312, %f309, %f309, %f311;
	sqrt.approx.ftz.f32 	%f313, %f312;
	rcp.approx.ftz.f32 	%f314, %f313;
	mul.ftz.f32 	%f315, %f305, %f314;
	mul.ftz.f32 	%f316, %f307, %f314;
	mul.ftz.f32 	%f317, %f309, %f314;
	mul.ftz.f32 	%f318, %f25, %f316;
	fma.rn.ftz.f32 	%f319, %f24, %f315, %f318;
	fma.rn.ftz.f32 	%f320, %f26, %f317, %f319;
	mul.ftz.f32 	%f321, %f34, 0f40490FDB;
	mul.ftz.f32 	%f322, %f321, %f34;
	div.approx.ftz.f32 	%f323, %f38, %f322;
	mul.ftz.f32 	%f324, %f323, %f303;
	mov.f32 	%f325, 0f00000000;
	max.ftz.f32 	%f326, %f320, %f325;
	lg2.approx.ftz.f32 	%f327, %f326;
	ld.global.f32 	%f328, [phong_exp];
	mul.ftz.f32 	%f329, %f327, %f328;
	ex2.approx.ftz.f32 	%f330, %f329;
	mul.ftz.f32 	%f331, %f324, %f330;
	add.ftz.f32 	%f332, %f328, 0f40000000;
	mul.ftz.f32 	%f333, %f331, %f332;
	mov.f32 	%f334, 0f40C90FDB;
	div.approx.ftz.f32 	%f335, %f333, %f334;
	mul.ftz.f32 	%f336, %f31, %f30;
	mul.ftz.f32 	%f337, %f32, %f30;
	mul.ftz.f32 	%f338, %f33, %f30;
	fma.rn.ftz.f32 	%f789, %f336, %f335, 0f00000000;
	fma.rn.ftz.f32 	%f790, %f337, %f335, 0f00000000;
	fma.rn.ftz.f32 	%f791, %f338, %f335, 0f00000000;
	bra.uni 	BB1_17;

BB1_14:
	ld.global.f32 	%f339, [directional_light];
	ld.global.f32 	%f340, [directional_light+4];
	mul.ftz.f32 	%f341, %f340, %f340;
	fma.rn.ftz.f32 	%f342, %f339, %f339, %f341;
	ld.global.f32 	%f343, [directional_light+8];
	fma.rn.ftz.f32 	%f344, %f343, %f343, %f342;
	sqrt.approx.ftz.f32 	%f345, %f344;
	rcp.approx.ftz.f32 	%f346, %f345;
	mul.ftz.f32 	%f348, %f339, %f346;
	mul.ftz.f32 	%f349, %f340, %f346;
	mul.ftz.f32 	%f350, %f343, %f346;
	ld.global.u32 	%r29, [lwrrent_prd+60];
	mad.lo.s32 	%r30, %r29, 5, 4;
	mul.wide.s32 	%rd33, %r30, 4;
	ld.global.f32 	%f351, [solid_angle];
	mov.f32 	%f352, 0f40C90FDB;
	div.approx.ftz.f32 	%f353, %f351, %f352;
	sub.ftz.f32 	%f354, %f142, %f353;
	add.s64 	%rd35, %rd16, %rd33;
	ld.global.f32 	%f355, [%rd35+76];
	sub.ftz.f32 	%f356, %f142, %f355;
	min.ftz.f32 	%f357, %f355, %f356;
	sub.ftz.f32 	%f358, %f142, %f354;
	mul.ftz.f32 	%f359, %f357, 0fC0000000;
	fma.rn.ftz.f32 	%f360, %f359, %f358, 0f3F800000;
	mul.ftz.f32 	%f361, %f360, %f360;
	sub.ftz.f32 	%f362, %f142, %f361;
	sqrt.approx.ftz.f32 	%f363, %f362;
	ld.global.f32 	%f364, [%rd35+72];
	mul.ftz.f32 	%f365, %f364, 0f40C90FDB;
	cos.approx.ftz.f32 	%f366, %f365;
	mul.ftz.f32 	%f367, %f366, %f363;
	sin.approx.ftz.f32 	%f368, %f365;
	mul.ftz.f32 	%f369, %f368, %f363;
	mul.ftz.f32 	%f370, %f349, 0f00000000;
	sub.ftz.f32 	%f371, %f370, %f350;
	mul.ftz.f32 	%f372, %f350, 0f00000000;
	mul.ftz.f32 	%f373, %f348, 0f00000000;
	sub.ftz.f32 	%f374, %f372, %f373;
	sub.ftz.f32 	%f375, %f348, %f370;
	mul.ftz.f32 	%f376, %f374, %f374;
	fma.rn.ftz.f32 	%f377, %f371, %f371, %f376;
	fma.rn.ftz.f32 	%f378, %f375, %f375, %f377;
	setp.lt.ftz.f32	%p15, %f378, 0f3A83126F;
	sub.ftz.f32 	%f379, %f370, %f372;
	sub.ftz.f32 	%f380, %f350, %f373;
	sub.ftz.f32 	%f381, %f373, %f349;
	selp.f32	%f382, %f379, %f371, %p15;
	selp.f32	%f383, %f380, %f374, %p15;
	selp.f32	%f384, %f381, %f375, %p15;
	mul.ftz.f32 	%f385, %f383, %f383;
	fma.rn.ftz.f32 	%f386, %f382, %f382, %f385;
	fma.rn.ftz.f32 	%f387, %f384, %f384, %f386;
	sqrt.approx.ftz.f32 	%f388, %f387;
	rcp.approx.ftz.f32 	%f389, %f388;
	mul.ftz.f32 	%f390, %f382, %f389;
	mul.ftz.f32 	%f391, %f383, %f389;
	mul.ftz.f32 	%f392, %f384, %f389;
	mul.ftz.f32 	%f393, %f349, %f392;
	mul.ftz.f32 	%f394, %f350, %f391;
	sub.ftz.f32 	%f395, %f393, %f394;
	mul.ftz.f32 	%f396, %f350, %f390;
	mul.ftz.f32 	%f397, %f348, %f392;
	sub.ftz.f32 	%f398, %f396, %f397;
	mul.ftz.f32 	%f399, %f348, %f391;
	mul.ftz.f32 	%f400, %f349, %f390;
	sub.ftz.f32 	%f401, %f399, %f400;
	mul.ftz.f32 	%f402, %f390, %f367;
	mul.ftz.f32 	%f403, %f391, %f367;
	mul.ftz.f32 	%f404, %f392, %f367;
	fma.rn.ftz.f32 	%f405, %f348, %f361, %f402;
	fma.rn.ftz.f32 	%f406, %f349, %f361, %f403;
	fma.rn.ftz.f32 	%f407, %f350, %f361, %f404;
	fma.rn.ftz.f32 	%f43, %f395, %f369, %f405;
	fma.rn.ftz.f32 	%f44, %f398, %f369, %f406;
	fma.rn.ftz.f32 	%f45, %f401, %f369, %f407;
	mul.ftz.f32 	%f408, %f25, %f44;
	fma.rn.ftz.f32 	%f409, %f24, %f43, %f408;
	fma.rn.ftz.f32 	%f410, %f26, %f45, %f409;
	setp.gt.ftz.f32	%p16, %f410, 0f00000000;
	@%p16 bra 	BB1_15;
	bra.uni 	BB1_12;

BB1_15:
	add.u64 	%rd36, %SP, 24;
	cvta.to.local.u64 	%rd37, %rd36;
	mov.u16 	%rs3, 0;
	st.local.u8 	[%rd37], %rs3;
	ld.global.u32 	%r31, [top_object];
	ld.global.f32 	%f420, [scene_epsilon];
	ld.global.u32 	%r32, [mcmctrace_shadow_ray_type];
	mov.f32 	%f421, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r31, %f10, %f11, %f12, %f43, %f44, %f45, %r32, %f420, %f421, %rd36, %r14);
	// inline asm
	ld.local.u8 	%rs4, [%rd37];
	setp.eq.s16	%p17, %rs4, 0;
	@%p17 bra 	BB1_16;
	bra.uni 	BB1_12;

BB1_16:
	ld.global.f32 	%f425, [ray+12];
	sub.ftz.f32 	%f426, %f43, %f425;
	ld.global.f32 	%f427, [ray+16];
	sub.ftz.f32 	%f428, %f44, %f427;
	ld.global.f32 	%f429, [ray+20];
	sub.ftz.f32 	%f430, %f45, %f429;
	mul.ftz.f32 	%f431, %f428, %f428;
	fma.rn.ftz.f32 	%f432, %f426, %f426, %f431;
	fma.rn.ftz.f32 	%f433, %f430, %f430, %f432;
	sqrt.approx.ftz.f32 	%f434, %f433;
	rcp.approx.ftz.f32 	%f435, %f434;
	mul.ftz.f32 	%f436, %f426, %f435;
	mul.ftz.f32 	%f437, %f428, %f435;
	mul.ftz.f32 	%f438, %f430, %f435;
	mul.ftz.f32 	%f439, %f25, %f437;
	fma.rn.ftz.f32 	%f440, %f24, %f436, %f439;
	fma.rn.ftz.f32 	%f441, %f26, %f438, %f440;
	mov.f32 	%f442, 0f00000000;
	max.ftz.f32 	%f443, %f441, %f442;
	lg2.approx.ftz.f32 	%f444, %f443;
	ld.global.f32 	%f445, [phong_exp];
	mul.ftz.f32 	%f446, %f444, %f445;
	ex2.approx.ftz.f32 	%f447, %f446;
	add.ftz.f32 	%f448, %f445, 0f40000000;
	mul.ftz.f32 	%f449, %f447, %f448;
	div.approx.ftz.f32 	%f451, %f449, %f352;
	ld.global.f32 	%f452, [directional_light_col];
	ld.global.f32 	%f453, [directional_light_col+4];
	ld.global.f32 	%f454, [directional_light_col+8];
	fma.rn.ftz.f32 	%f789, %f452, %f451, 0f00000000;
	fma.rn.ftz.f32 	%f790, %f453, %f451, 0f00000000;
	fma.rn.ftz.f32 	%f791, %f454, %f451, 0f00000000;

BB1_17:
	st.global.f32 	[lwrrent_prd+20], %f791;
	st.global.f32 	[lwrrent_prd+16], %f790;
	st.global.f32 	[lwrrent_prd+12], %f789;
	bra.uni 	BB1_41;

BB1_18:
	ld.global.u32 	%r36, [lwrrent_prd+60];
	mad.lo.s32 	%r37, %r36, 5, 2;
	mul.wide.s32 	%rd43, %r37, 4;
	mov.u64 	%rd44, lwrrent_prd;
	add.s64 	%rd45, %rd44, %rd43;
	ld.global.f32 	%f455, [%rd45+72];
	mov.f32 	%f456, 0f3F800000;
	sub.ftz.f32 	%f457, %f456, %f455;
	min.ftz.f32 	%f458, %f455, %f457;
	add.ftz.f32 	%f459, %f458, %f458;
	lg2.approx.ftz.f32 	%f460, %f459;
	ex2.approx.ftz.f32 	%f461, %f460;
	sub.ftz.f32 	%f462, %f456, %f461;
	sqrt.approx.ftz.f32 	%f463, %f462;
	sqrt.approx.ftz.f32 	%f464, %f461;
	ld.global.f32 	%f465, [%rd45+76];
	mul.ftz.f32 	%f466, %f465, 0f40C90FDB;
	cos.approx.ftz.f32 	%f467, %f466;
	mul.ftz.f32 	%f468, %f467, %f463;
	sin.approx.ftz.f32 	%f469, %f466;
	mul.ftz.f32 	%f470, %f469, %f463;
	mul.ftz.f32 	%f471, %f25, 0f00000000;
	sub.ftz.f32 	%f472, %f471, %f26;
	mul.ftz.f32 	%f473, %f24, 0f00000000;
	mul.ftz.f32 	%f474, %f26, 0f00000000;
	sub.ftz.f32 	%f475, %f474, %f473;
	sub.ftz.f32 	%f476, %f24, %f471;
	mul.ftz.f32 	%f477, %f475, %f475;
	fma.rn.ftz.f32 	%f478, %f472, %f472, %f477;
	fma.rn.ftz.f32 	%f479, %f476, %f476, %f478;
	setp.lt.ftz.f32	%p18, %f479, 0f3A83126F;
	sub.ftz.f32 	%f480, %f471, %f474;
	sub.ftz.f32 	%f481, %f26, %f473;
	sub.ftz.f32 	%f482, %f473, %f25;
	selp.f32	%f483, %f480, %f472, %p18;
	selp.f32	%f484, %f481, %f475, %p18;
	selp.f32	%f485, %f482, %f476, %p18;
	mul.ftz.f32 	%f486, %f484, %f484;
	fma.rn.ftz.f32 	%f487, %f483, %f483, %f486;
	fma.rn.ftz.f32 	%f488, %f485, %f485, %f487;
	sqrt.approx.ftz.f32 	%f489, %f488;
	rcp.approx.ftz.f32 	%f490, %f489;
	mul.ftz.f32 	%f491, %f483, %f490;
	mul.ftz.f32 	%f492, %f484, %f490;
	mul.ftz.f32 	%f493, %f485, %f490;
	mul.ftz.f32 	%f494, %f25, %f493;
	mul.ftz.f32 	%f495, %f26, %f492;
	sub.ftz.f32 	%f496, %f494, %f495;
	mul.ftz.f32 	%f497, %f26, %f491;
	mul.ftz.f32 	%f498, %f24, %f493;
	sub.ftz.f32 	%f499, %f497, %f498;
	mul.ftz.f32 	%f500, %f24, %f492;
	mul.ftz.f32 	%f501, %f25, %f491;
	sub.ftz.f32 	%f502, %f500, %f501;
	mul.ftz.f32 	%f503, %f491, %f468;
	mul.ftz.f32 	%f504, %f492, %f468;
	mul.ftz.f32 	%f505, %f493, %f468;
	fma.rn.ftz.f32 	%f506, %f24, %f464, %f503;
	fma.rn.ftz.f32 	%f507, %f25, %f464, %f504;
	fma.rn.ftz.f32 	%f508, %f26, %f464, %f505;
	fma.rn.ftz.f32 	%f509, %f502, %f470, %f508;
	fma.rn.ftz.f32 	%f510, %f499, %f470, %f507;
	fma.rn.ftz.f32 	%f511, %f496, %f470, %f506;
	st.global.v2.f32 	[lwrrent_prd+48], {%f511, %f510};
	st.global.f32 	[lwrrent_prd+56], %f509;
	st.global.u32 	[lwrrent_prd+64], %r10;
	ld.global.v2.f32 	{%f512, %f513}, [lwrrent_prd+24];
	ld.global.f32 	%f514, [lwrrent_prd+32];
	mul.ftz.f32 	%f515, %f514, %f105;
	mul.ftz.f32 	%f517, %f513, %f104;
	mul.ftz.f32 	%f519, %f512, %f103;
	st.global.v2.f32 	[lwrrent_prd+24], {%f519, %f517};
	st.global.f32 	[lwrrent_prd+32], %f515;
	cvta.global.u64 	%rd42, light_buffer;
	mov.u32 	%r34, 1;
	mov.u32 	%r35, 60;
	// inline asm
	call (%rd38, %rd39, %rd40, %rd41), _rt_buffer_get_size_64, (%rd42, %r34, %r35);
	// inline asm
	cvt.u32.u64	%r4, %rd38;
	setp.eq.s32	%p19, %r4, 0;
	@%p19 bra 	BB1_23;

	cvt.rn.f32.u32	%f52, %r4;
	ld.global.u32 	%r41, [lwrrent_prd+60];
	mad.lo.s32 	%r42, %r41, 5, 6;
	add.s64 	%rd53, %rd44, 72;
	mul.wide.s32 	%rd54, %r42, 4;
	add.s64 	%rd55, %rd53, %rd54;
	ld.global.f32 	%f520, [%rd55];
	mul.ftz.f32 	%f521, %f52, %f520;
	cvt.rzi.ftz.s32.f32	%r43, %f521;
	cvt.s64.s32	%rd48, %r43;
	mov.u64 	%rd51, 0;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd42, %r34, %r35, %rd48, %rd51, %rd51, %rd51);
	// inline asm
	ld.f32 	%f55, [%rd46+56];
	ld.f32 	%f54, [%rd46+52];
	ld.f32 	%f53, [%rd46+48];
	ld.f32 	%f522, [%rd46+44];
	ld.f32 	%f523, [%rd46+36];
	ld.f32 	%f524, [%rd46+40];
	ld.f32 	%f525, [%rd46+20];
	ld.f32 	%f526, [%rd46+16];
	ld.f32 	%f527, [%rd46+12];
	ld.f32 	%f528, [%rd46+32];
	ld.f32 	%f529, [%rd46+28];
	ld.f32 	%f530, [%rd46+24];
	ld.f32 	%f531, [%rd46+8];
	ld.f32 	%f532, [%rd46+4];
	ld.f32 	%f533, [%rd46];
	ld.global.u32 	%r44, [lwrrent_prd+60];
	mad.lo.s32 	%r45, %r44, 5, 4;
	mul.wide.s32 	%rd56, %r45, 4;
	add.s64 	%rd57, %rd53, %rd56;
	ld.global.f32 	%f534, [%rd57];
	sub.ftz.f32 	%f536, %f456, %f534;
	min.ftz.f32 	%f537, %f534, %f536;
	add.ftz.f32 	%f538, %f537, %f537;
	sqrt.approx.ftz.f32 	%f539, %f538;
	sub.ftz.f32 	%f540, %f456, %f539;
	add.s64 	%rd58, %rd56, %rd44;
	ld.global.f32 	%f541, [%rd58+76];
	sub.ftz.f32 	%f542, %f456, %f541;
	min.ftz.f32 	%f543, %f541, %f542;
	add.ftz.f32 	%f544, %f543, %f543;
	sub.ftz.f32 	%f545, %f456, %f544;
	mul.ftz.f32 	%f546, %f545, %f539;
	mul.ftz.f32 	%f547, %f544, %f539;
	mul.ftz.f32 	%f548, %f533, %f540;
	mul.ftz.f32 	%f549, %f532, %f540;
	mul.ftz.f32 	%f550, %f531, %f540;
	fma.rn.ftz.f32 	%f551, %f530, %f547, %f548;
	fma.rn.ftz.f32 	%f552, %f529, %f547, %f549;
	fma.rn.ftz.f32 	%f553, %f528, %f547, %f550;
	fma.rn.ftz.f32 	%f554, %f527, %f546, %f551;
	fma.rn.ftz.f32 	%f555, %f526, %f546, %f552;
	fma.rn.ftz.f32 	%f556, %f525, %f546, %f553;
	sub.ftz.f32 	%f557, %f554, %f10;
	sub.ftz.f32 	%f558, %f555, %f11;
	sub.ftz.f32 	%f559, %f556, %f12;
	mul.ftz.f32 	%f560, %f558, %f558;
	fma.rn.ftz.f32 	%f561, %f557, %f557, %f560;
	fma.rn.ftz.f32 	%f562, %f559, %f559, %f561;
	sqrt.approx.ftz.f32 	%f56, %f562;
	rcp.approx.ftz.f32 	%f563, %f56;
	mul.ftz.f32 	%f57, %f557, %f563;
	mul.ftz.f32 	%f58, %f558, %f563;
	mul.ftz.f32 	%f59, %f559, %f563;
	mul.ftz.f32 	%f564, %f25, %f58;
	fma.rn.ftz.f32 	%f565, %f24, %f57, %f564;
	fma.rn.ftz.f32 	%f60, %f26, %f59, %f565;
	mul.ftz.f32 	%f566, %f524, %f58;
	fma.rn.ftz.f32 	%f567, %f523, %f57, %f566;
	fma.rn.ftz.f32 	%f61, %f522, %f59, %f567;
	sub.ftz.f32 	%f568, %f527, %f530;
	sub.ftz.f32 	%f569, %f526, %f529;
	sub.ftz.f32 	%f570, %f525, %f528;
	sub.ftz.f32 	%f571, %f533, %f530;
	sub.ftz.f32 	%f572, %f532, %f529;
	sub.ftz.f32 	%f573, %f531, %f528;
	mul.ftz.f32 	%f574, %f569, %f573;
	mul.ftz.f32 	%f575, %f570, %f572;
	sub.ftz.f32 	%f576, %f574, %f575;
	mul.ftz.f32 	%f577, %f570, %f571;
	mul.ftz.f32 	%f578, %f568, %f573;
	sub.ftz.f32 	%f579, %f577, %f578;
	mul.ftz.f32 	%f580, %f568, %f572;
	mul.ftz.f32 	%f581, %f569, %f571;
	sub.ftz.f32 	%f582, %f580, %f581;
	mul.ftz.f32 	%f583, %f579, %f579;
	fma.rn.ftz.f32 	%f584, %f576, %f576, %f583;
	fma.rn.ftz.f32 	%f62, %f582, %f582, %f584;
	setp.gt.ftz.f32	%p20, %f60, 0f00000000;
	setp.gt.ftz.f32	%p21, %f61, 0f00000000;
	and.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB1_21;

BB1_20:
	mov.f32 	%f794, 0f00000000;
	mov.f32 	%f793, %f794;
	mov.f32 	%f792, %f794;
	bra.uni 	BB1_26;

BB1_21:
	add.u64 	%rd59, %SP, 16;
	cvta.to.local.u64 	%rd60, %rd59;
	mov.u16 	%rs5, 0;
	st.local.u8 	[%rd60], %rs5;
	ld.global.u32 	%r46, [top_object];
	ld.global.f32 	%f594, [scene_epsilon];
	ld.global.u32 	%r47, [mcmctrace_shadow_ray_type];
	// inline asm
	call _rt_trace_64, (%r46, %f10, %f11, %f12, %f57, %f58, %f59, %r47, %f594, %f56, %rd59, %r34);
	// inline asm
	ld.local.u8 	%rs6, [%rd60];
	setp.eq.s16	%p23, %rs6, 0;
	@%p23 bra 	BB1_22;
	bra.uni 	BB1_20;

BB1_22:
	sqrt.approx.ftz.f32 	%f599, %f62;
	mul.ftz.f32 	%f600, %f60, %f61;
	mul.ftz.f32 	%f601, %f56, 0f40490FDB;
	mul.ftz.f32 	%f602, %f601, %f56;
	div.approx.ftz.f32 	%f603, %f600, %f602;
	mul.ftz.f32 	%f604, %f603, %f599;
	mul.ftz.f32 	%f605, %f53, %f52;
	mul.ftz.f32 	%f606, %f54, %f52;
	mul.ftz.f32 	%f607, %f55, %f52;
	fma.rn.ftz.f32 	%f792, %f605, %f604, 0f00000000;
	fma.rn.ftz.f32 	%f793, %f606, %f604, 0f00000000;
	fma.rn.ftz.f32 	%f794, %f607, %f604, 0f00000000;
	bra.uni 	BB1_26;

BB1_23:
	ld.global.f32 	%f608, [directional_light];
	ld.global.f32 	%f609, [directional_light+4];
	mul.ftz.f32 	%f610, %f609, %f609;
	fma.rn.ftz.f32 	%f611, %f608, %f608, %f610;
	ld.global.f32 	%f612, [directional_light+8];
	fma.rn.ftz.f32 	%f613, %f612, %f612, %f611;
	sqrt.approx.ftz.f32 	%f614, %f613;
	rcp.approx.ftz.f32 	%f615, %f614;
	mul.ftz.f32 	%f617, %f608, %f615;
	mul.ftz.f32 	%f618, %f609, %f615;
	mul.ftz.f32 	%f619, %f612, %f615;
	ld.global.u32 	%r49, [lwrrent_prd+60];
	mad.lo.s32 	%r50, %r49, 5, 4;
	mul.wide.s32 	%rd61, %r50, 4;
	ld.global.f32 	%f620, [solid_angle];
	mov.f32 	%f621, 0f40C90FDB;
	div.approx.ftz.f32 	%f622, %f620, %f621;
	sub.ftz.f32 	%f623, %f456, %f622;
	add.s64 	%rd63, %rd44, %rd61;
	ld.global.f32 	%f624, [%rd63+76];
	sub.ftz.f32 	%f625, %f456, %f624;
	min.ftz.f32 	%f626, %f624, %f625;
	sub.ftz.f32 	%f627, %f456, %f623;
	mul.ftz.f32 	%f628, %f626, 0fC0000000;
	fma.rn.ftz.f32 	%f629, %f628, %f627, 0f3F800000;
	mul.ftz.f32 	%f630, %f629, %f629;
	sub.ftz.f32 	%f631, %f456, %f630;
	sqrt.approx.ftz.f32 	%f632, %f631;
	ld.global.f32 	%f633, [%rd63+72];
	mul.ftz.f32 	%f634, %f633, 0f40C90FDB;
	cos.approx.ftz.f32 	%f635, %f634;
	mul.ftz.f32 	%f636, %f635, %f632;
	sin.approx.ftz.f32 	%f637, %f634;
	mul.ftz.f32 	%f638, %f637, %f632;
	mul.ftz.f32 	%f639, %f618, 0f00000000;
	sub.ftz.f32 	%f640, %f639, %f619;
	mul.ftz.f32 	%f641, %f619, 0f00000000;
	mul.ftz.f32 	%f642, %f617, 0f00000000;
	sub.ftz.f32 	%f643, %f641, %f642;
	sub.ftz.f32 	%f644, %f617, %f639;
	mul.ftz.f32 	%f645, %f643, %f643;
	fma.rn.ftz.f32 	%f646, %f640, %f640, %f645;
	fma.rn.ftz.f32 	%f647, %f644, %f644, %f646;
	setp.lt.ftz.f32	%p24, %f647, 0f3A83126F;
	sub.ftz.f32 	%f648, %f639, %f641;
	sub.ftz.f32 	%f649, %f619, %f642;
	sub.ftz.f32 	%f650, %f642, %f618;
	selp.f32	%f651, %f648, %f640, %p24;
	selp.f32	%f652, %f649, %f643, %p24;
	selp.f32	%f653, %f650, %f644, %p24;
	mul.ftz.f32 	%f654, %f652, %f652;
	fma.rn.ftz.f32 	%f655, %f651, %f651, %f654;
	fma.rn.ftz.f32 	%f656, %f653, %f653, %f655;
	sqrt.approx.ftz.f32 	%f657, %f656;
	rcp.approx.ftz.f32 	%f658, %f657;
	mul.ftz.f32 	%f659, %f651, %f658;
	mul.ftz.f32 	%f660, %f652, %f658;
	mul.ftz.f32 	%f661, %f653, %f658;
	mul.ftz.f32 	%f662, %f618, %f661;
	mul.ftz.f32 	%f663, %f619, %f660;
	sub.ftz.f32 	%f664, %f662, %f663;
	mul.ftz.f32 	%f665, %f619, %f659;
	mul.ftz.f32 	%f666, %f617, %f661;
	sub.ftz.f32 	%f667, %f665, %f666;
	mul.ftz.f32 	%f668, %f617, %f660;
	mul.ftz.f32 	%f669, %f618, %f659;
	sub.ftz.f32 	%f670, %f668, %f669;
	mul.ftz.f32 	%f671, %f659, %f636;
	mul.ftz.f32 	%f672, %f660, %f636;
	mul.ftz.f32 	%f673, %f661, %f636;
	fma.rn.ftz.f32 	%f674, %f617, %f630, %f671;
	fma.rn.ftz.f32 	%f675, %f618, %f630, %f672;
	fma.rn.ftz.f32 	%f676, %f619, %f630, %f673;
	fma.rn.ftz.f32 	%f66, %f664, %f638, %f674;
	fma.rn.ftz.f32 	%f67, %f667, %f638, %f675;
	fma.rn.ftz.f32 	%f68, %f670, %f638, %f676;
	mul.ftz.f32 	%f677, %f25, %f67;
	fma.rn.ftz.f32 	%f678, %f24, %f66, %f677;
	fma.rn.ftz.f32 	%f69, %f26, %f68, %f678;
	setp.gt.ftz.f32	%p25, %f69, 0f00000000;
	@%p25 bra 	BB1_24;
	bra.uni 	BB1_20;

BB1_24:
	add.u64 	%rd64, %SP, 8;
	cvta.to.local.u64 	%rd65, %rd64;
	mov.u16 	%rs7, 0;
	st.local.u8 	[%rd65], %rs7;
	ld.global.u32 	%r51, [top_object];
	ld.global.f32 	%f688, [scene_epsilon];
	ld.global.u32 	%r52, [mcmctrace_shadow_ray_type];
	mov.f32 	%f689, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r51, %f10, %f11, %f12, %f66, %f67, %f68, %r52, %f688, %f689, %rd64, %r34);
	// inline asm
	ld.local.u8 	%rs8, [%rd65];
	setp.eq.s16	%p26, %rs8, 0;
	@%p26 bra 	BB1_25;
	bra.uni 	BB1_20;

BB1_25:
	ld.global.f32 	%f693, [directional_light_col];
	ld.global.f32 	%f694, [directional_light_col+4];
	ld.global.f32 	%f695, [directional_light_col+8];
	fma.rn.ftz.f32 	%f792, %f693, %f69, 0f00000000;
	fma.rn.ftz.f32 	%f793, %f694, %f69, 0f00000000;
	fma.rn.ftz.f32 	%f794, %f695, %f69, 0f00000000;

BB1_26:
	st.global.f32 	[lwrrent_prd+20], %f794;
	st.global.f32 	[lwrrent_prd+16], %f793;
	st.global.f32 	[lwrrent_prd+12], %f792;
	bra.uni 	BB1_41;

BB1_27:
	st.global.f32 	[lwrrent_prd+36], %f10;
	st.global.f32 	[lwrrent_prd+40], %f11;
	st.global.f32 	[lwrrent_prd+44], %f12;
	mov.u32 	%r54, 1;
	st.global.u32 	[lwrrent_prd+64], %r54;
	st.global.u32 	[lwrrent_prd+20], %r10;
	st.global.u32 	[lwrrent_prd+16], %r10;
	st.global.u32 	[lwrrent_prd+12], %r10;
	mul.ftz.f32 	%f696, %f2, %f8;
	fma.rn.ftz.f32 	%f697, %f1, %f7, %f696;
	fma.rn.ftz.f32 	%f698, %f3, %f9, %f697;
	add.ftz.f32 	%f699, %f1, %f1;
	mul.ftz.f32 	%f700, %f699, %f698;
	add.ftz.f32 	%f701, %f2, %f2;
	mul.ftz.f32 	%f702, %f701, %f698;
	add.ftz.f32 	%f703, %f3, %f3;
	mul.ftz.f32 	%f704, %f703, %f698;
	sub.ftz.f32 	%f76, %f7, %f700;
	sub.ftz.f32 	%f77, %f8, %f702;
	sub.ftz.f32 	%f78, %f9, %f704;
	fma.rn.ftz.f32 	%f705, %f7, %f1, %f696;
	fma.rn.ftz.f32 	%f706, %f9, %f3, %f705;
	setp.lt.ftz.f32	%p27, %f706, 0f00000000;
	@%p27 bra 	BB1_29;

	mov.f32 	%f707, 0f3F800000;
	mov.f32 	%f708, 0f3FC00000;
	div.approx.ftz.f32 	%f795, %f708, %f707;
	bra.uni 	BB1_30;

BB1_29:
	mov.f32 	%f709, 0f3FC00000;
	mov.f32 	%f710, 0f3F800000;
	div.approx.ftz.f32 	%f795, %f710, %f709;

BB1_30:
	mul.ftz.f32 	%f711, %f8, %f25;
	fma.rn.ftz.f32 	%f712, %f7, %f24, %f711;
	fma.rn.ftz.f32 	%f82, %f9, %f26, %f712;
	mul.ftz.f32 	%f713, %f82, %f82;
	mov.f32 	%f714, 0f3F800000;
	sub.ftz.f32 	%f715, %f714, %f713;
	mul.ftz.f32 	%f716, %f795, %f795;
	mul.ftz.f32 	%f717, %f716, %f715;
	sub.ftz.f32 	%f83, %f714, %f717;
	setp.lt.ftz.f32	%p28, %f83, 0f00000000;
	@%p28 bra 	BB1_33;

	mul.ftz.f32 	%f718, %f7, %f795;
	sqrt.approx.ftz.f32 	%f719, %f83;
	fma.rn.ftz.f32 	%f720, %f82, %f795, %f719;
	mul.ftz.f32 	%f721, %f24, %f720;
	mul.ftz.f32 	%f722, %f25, %f720;
	mul.ftz.f32 	%f723, %f26, %f720;
	sub.ftz.f32 	%f724, %f718, %f721;
	mul.ftz.f32 	%f725, %f8, %f795;
	sub.ftz.f32 	%f726, %f725, %f722;
	mul.ftz.f32 	%f727, %f9, %f795;
	sub.ftz.f32 	%f728, %f727, %f723;
	mul.ftz.f32 	%f729, %f726, %f726;
	fma.rn.ftz.f32 	%f730, %f724, %f724, %f729;
	fma.rn.ftz.f32 	%f731, %f728, %f728, %f730;
	sqrt.approx.ftz.f32 	%f732, %f731;
	rcp.approx.ftz.f32 	%f733, %f732;
	mul.ftz.f32 	%f84, %f724, %f733;
	mul.ftz.f32 	%f85, %f726, %f733;
	mul.ftz.f32 	%f86, %f728, %f733;
	mul.ftz.f32 	%f735, %f85, %f2;
	fma.rn.ftz.f32 	%f736, %f84, %f1, %f735;
	fma.rn.ftz.f32 	%f737, %f86, %f3, %f736;
	abs.ftz.f32 	%f738, %f82;
	mul.ftz.f32 	%f739, %f795, %f738;
	abs.ftz.f32 	%f740, %f737;
	sub.ftz.f32 	%f741, %f739, %f740;
	fma.rn.ftz.f32 	%f742, %f795, %f738, %f740;
	div.approx.ftz.f32 	%f743, %f741, %f742;
	mul.ftz.f32 	%f744, %f795, %f740;
	sub.ftz.f32 	%f745, %f744, %f738;
	add.ftz.f32 	%f746, %f744, %f738;
	div.approx.ftz.f32 	%f747, %f745, %f746;
	mul.ftz.f32 	%f748, %f747, %f747;
	fma.rn.ftz.f32 	%f749, %f743, %f743, %f748;
	mul.ftz.f32 	%f750, %f749, 0f3F000000;
	ld.global.u32 	%r56, [lwrrent_prd+60];
	mad.lo.s32 	%r57, %r56, 5, 2;
	mul.wide.s32 	%rd66, %r57, 4;
	mov.u64 	%rd67, lwrrent_prd;
	add.s64 	%rd68, %rd67, %rd66;
	ld.global.f32 	%f751, [%rd68+72];
	sub.ftz.f32 	%f752, %f714, %f751;
	min.ftz.f32 	%f753, %f751, %f752;
	add.ftz.f32 	%f754, %f753, %f753;
	setp.lt.ftz.f32	%p29, %f754, %f750;
	@%p29 bra 	BB1_33;

	ld.global.v2.f32 	{%f755, %f756}, [lwrrent_prd+24];
	ld.global.f32 	%f757, [lwrrent_prd+32];
	mul.ftz.f32 	%f758, %f757, %f105;
	mul.ftz.f32 	%f760, %f756, %f104;
	mul.ftz.f32 	%f762, %f755, %f103;
	st.global.v2.f32 	[lwrrent_prd+24], {%f762, %f760};
	st.global.f32 	[lwrrent_prd+32], %f758;
	st.global.v2.f32 	[lwrrent_prd+48], {%f84, %f85};
	st.global.f32 	[lwrrent_prd+56], %f86;
	bra.uni 	BB1_41;

BB1_33:
	st.global.v2.f32 	[lwrrent_prd+48], {%f76, %f77};
	st.global.f32 	[lwrrent_prd+56], %f78;
	bra.uni 	BB1_41;

BB1_34:
	st.global.v2.f32 	[lwrrent_prd+40], {%f11, %f12};
	st.global.f32 	[lwrrent_prd+36], %f10;
	mov.u32 	%r58, 1;
	mul.ftz.f32 	%f763, %f2, %f8;
	fma.rn.ftz.f32 	%f764, %f1, %f7, %f763;
	fma.rn.ftz.f32 	%f765, %f3, %f9, %f764;
	add.ftz.f32 	%f766, %f1, %f1;
	mul.ftz.f32 	%f767, %f766, %f765;
	add.ftz.f32 	%f768, %f2, %f2;
	mul.ftz.f32 	%f769, %f768, %f765;
	add.ftz.f32 	%f770, %f3, %f3;
	mul.ftz.f32 	%f771, %f770, %f765;
	sub.ftz.f32 	%f772, %f9, %f771;
	sub.ftz.f32 	%f773, %f8, %f769;
	sub.ftz.f32 	%f774, %f7, %f767;
	st.global.v2.f32 	[lwrrent_prd+48], {%f774, %f773};
	st.global.f32 	[lwrrent_prd+56], %f772;
	st.global.u32 	[lwrrent_prd+64], %r58;
	st.global.u32 	[lwrrent_prd+20], %r10;
	st.global.u32 	[lwrrent_prd+16], %r10;
	st.global.u32 	[lwrrent_prd+12], %r10;
	ld.global.v2.f32 	{%f775, %f776}, [lwrrent_prd+24];
	ld.global.f32 	%f777, [lwrrent_prd+32];
	mul.ftz.f32 	%f778, %f777, %f105;
	mul.ftz.f32 	%f780, %f776, %f104;
	mul.ftz.f32 	%f782, %f775, %f103;
	st.global.v2.f32 	[lwrrent_prd+24], {%f782, %f780};
	st.global.f32 	[lwrrent_prd+32], %f778;
	bra.uni 	BB1_41;

BB1_35:
	ld.global.u32 	%r60, [lwrrent_prd+64];
	setp.eq.s32	%p30, %r60, 0;
	@%p30 bra 	BB1_37;

	add.ftz.f32 	%f783, %f28, %f28;
	add.ftz.f32 	%f784, %f27, %f27;
	add.ftz.f32 	%f785, %f29, %f29;
	st.global.f32 	[lwrrent_prd+20], %f785;
	st.global.f32 	[lwrrent_prd+16], %f784;
	st.global.f32 	[lwrrent_prd+12], %f783;
	bra.uni 	BB1_38;

BB1_37:
	st.global.u32 	[lwrrent_prd+20], %r10;
	st.global.u32 	[lwrrent_prd+16], %r10;
	st.global.u32 	[lwrrent_prd+12], %r10;

BB1_38:
	fma.rn.ftz.f32 	%f787, %f4, %f7, %f127;
	fma.rn.ftz.f32 	%f788, %f6, %f9, %f787;
	setp.leu.ftz.f32	%p31, %f788, 0f00000000;
	@%p31 bra 	BB1_40;

	st.global.u32 	[lwrrent_prd+20], %r10;
	st.global.u32 	[lwrrent_prd+16], %r10;
	st.global.u32 	[lwrrent_prd+12], %r10;

BB1_40:
	mov.u32 	%r63, 1;
	st.global.u32 	[lwrrent_prd+68], %r63;

BB1_41:
	ret;
}

.visible .entry _Z9exceptiolw(

)
{
	.local .align 8 .b8 	__local_depot2[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<87>;
	.reg .s16 	%rs<19>;
	.reg .s32 	%r<503>;
	.reg .f32 	%f<62>;
	.reg .s64 	%rd<263>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd139, %SP, 0;
	cvta.to.local.u64 	%rd227, %rd139;
	add.u64 	%rd140, %SP, 8;
	cvta.to.local.u64 	%rd226, %rd140;
	ldu.global.u32 	%r143, [launch_index];
	cvt.u64.u32	%rd135, %r143;
	cvta.global.u64 	%rd134, state_buffer;
	mov.u32 	%r481, 1;
	mov.u32 	%r141, 124;
	mov.u64 	%rd138, 0;
	// inline asm
	call (%rd133), _rt_buffer_get_64, (%rd134, %r481, %r141, %rd135, %rd138, %rd138, %rd138);
	// inline asm
	ld.global.v2.f32 	{%f1, %f2}, [lwrrent_prd+72];
	ld.global.v2.f32 	{%f3, %f4}, [lwrrent_prd+80];
	ld.global.v2.f32 	{%f5, %f6}, [lwrrent_prd+88];
	ld.global.v2.f32 	{%f7, %f8}, [lwrrent_prd+96];
	ld.global.v2.f32 	{%f9, %f10}, [lwrrent_prd+104];
	ld.global.v2.f32 	{%f11, %f12}, [lwrrent_prd+112];
	ld.global.v2.f32 	{%f13, %f14}, [lwrrent_prd+120];
	ld.global.v2.f32 	{%f15, %f16}, [lwrrent_prd+128];
	ld.global.v2.f32 	{%f17, %f18}, [lwrrent_prd+136];
	ld.global.v2.f32 	{%f19, %f20}, [lwrrent_prd+144];
	ld.global.v2.f32 	{%f21, %f22}, [lwrrent_prd+152];
	ld.global.v2.f32 	{%f23, %f24}, [lwrrent_prd+160];
	ld.global.v2.f32 	{%f25, %f26}, [lwrrent_prd+168];
	ld.global.v2.f32 	{%f27, %f28}, [lwrrent_prd+176];
	ld.global.v2.f32 	{%f29, %f30}, [lwrrent_prd+184];
	ld.global.f32 	%f31, [lwrrent_prd+192];
	st.f32 	[%rd133+120], %f31;
	st.f32 	[%rd133+116], %f30;
	st.f32 	[%rd133+112], %f29;
	st.f32 	[%rd133+108], %f28;
	st.f32 	[%rd133+104], %f27;
	st.f32 	[%rd133+100], %f26;
	st.f32 	[%rd133+96], %f25;
	st.f32 	[%rd133+92], %f24;
	st.f32 	[%rd133+88], %f23;
	st.f32 	[%rd133+84], %f22;
	st.f32 	[%rd133+80], %f21;
	st.f32 	[%rd133+76], %f20;
	st.f32 	[%rd133+72], %f19;
	st.f32 	[%rd133+68], %f18;
	st.f32 	[%rd133+64], %f17;
	st.f32 	[%rd133+60], %f16;
	st.f32 	[%rd133+56], %f15;
	st.f32 	[%rd133+52], %f14;
	st.f32 	[%rd133+48], %f13;
	st.f32 	[%rd133+44], %f12;
	st.f32 	[%rd133+40], %f11;
	st.f32 	[%rd133+36], %f10;
	st.f32 	[%rd133+32], %f9;
	st.f32 	[%rd133+28], %f8;
	st.f32 	[%rd133+24], %f7;
	st.f32 	[%rd133+20], %f6;
	st.f32 	[%rd133+16], %f5;
	st.f32 	[%rd133+12], %f4;
	st.f32 	[%rd133+8], %f3;
	st.f32 	[%rd133+4], %f2;
	st.f32 	[%rd133], %f1;
	// inline asm
	call (%r142), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r142, 1020;
	mov.u64 	%rd225, %rd227;
	mov.u64 	%rd260, %rd227;
	@%p1 bra 	BB2_138;

	setp.eq.s32	%p2, %r142, 1021;
	@%p2 bra 	BB2_101;

	setp.eq.s32	%p3, %r142, 1006;
	@%p3 bra 	BB2_81;

	setp.eq.s32	%p4, %r142, 1007;
	@%p4 bra 	BB2_65;

	setp.eq.s32	%p5, %r142, 1018;
	@%p5 bra 	BB2_45;

	setp.eq.s32	%p6, %r142, 1019;
	@%p6 bra 	BB2_29;

	setp.eq.s32	%p7, %r142, 1022;
	@%p7 bra 	BB2_24;

	setp.eq.s32	%p8, %r142, 1023;
	@%p8 bra 	BB2_19;

	add.s32 	%r2, %r142, -1024;
	setp.lt.u32	%p9, %r2, 64512;
	@%p9 bra 	BB2_14;

	cvta.global.u64 	%rd5, $str17;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r144), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p10, %r144, 0;
	mov.u64 	%rd216, $str17;
	@%p10 bra 	BB2_143;

	mov.u64 	%rd215, %rd5;

BB2_11:
	mov.u64 	%rd7, %rd216;
	mov.u64 	%rd6, %rd215;
	add.s64 	%rd8, %rd6, 1;
	add.s64 	%rd216, %rd7, 1;
	ld.global.u8 	%rs1, [%rd7+1];
	setp.ne.s16	%p11, %rs1, 0;
	mov.u64 	%rd215, %rd8;
	@%p11 bra 	BB2_11;

	sub.s64 	%rd143, %rd8, %rd5;
	cvt.u32.u64	%r147, %rd143;
	add.s32 	%r148, %r147, 32;
	and.b32  	%r146, %r148, -4;
	// inline asm
	call (%r145), _rt_print_start_64, (%rd5, %r146);
	// inline asm
	setp.eq.s32	%p12, %r145, 0;
	@%p12 bra 	BB2_143;

	mov.u32 	%r157, 0;
	// inline asm
	call (), _rt_print_write32, (%r157, %r145);
	// inline asm
	add.s32 	%r152, %r145, 4;
	// inline asm
	call (), _rt_print_write32, (%r3, %r152);
	// inline asm
	add.s32 	%r154, %r145, 8;
	// inline asm
	call (), _rt_print_write32, (%r157, %r154);
	// inline asm
	add.s32 	%r156, %r145, 12;
	// inline asm
	call (), _rt_print_write32, (%r4, %r156);
	// inline asm
	add.s32 	%r158, %r145, 16;
	// inline asm
	call (), _rt_print_write32, (%r157, %r158);
	// inline asm
	add.s32 	%r160, %r145, 20;
	// inline asm
	call (), _rt_print_write32, (%r5, %r160);
	// inline asm
	bra.uni 	BB2_143;

BB2_14:
	cvta.global.u64 	%rd10, $str16;
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r161), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r161, 0;
	mov.u64 	%rd218, $str16;
	@%p13 bra 	BB2_143;

	mov.u64 	%rd217, %rd10;

BB2_16:
	mov.u64 	%rd12, %rd218;
	mov.u64 	%rd11, %rd217;
	add.s64 	%rd13, %rd11, 1;
	add.s64 	%rd218, %rd12, 1;
	ld.global.u8 	%rs2, [%rd12+1];
	setp.ne.s16	%p14, %rs2, 0;
	mov.u64 	%rd217, %rd13;
	@%p14 bra 	BB2_16;

	sub.s64 	%rd146, %rd13, %rd10;
	cvt.u32.u64	%r164, %rd146;
	add.s32 	%r165, %r164, 40;
	and.b32  	%r163, %r165, -4;
	// inline asm
	call (%r162), _rt_print_start_64, (%rd10, %r163);
	// inline asm
	setp.eq.s32	%p15, %r162, 0;
	@%p15 bra 	BB2_143;

	mov.u32 	%r178, 0;
	// inline asm
	call (), _rt_print_write32, (%r178, %r162);
	// inline asm
	add.s32 	%r169, %r162, 4;
	// inline asm
	call (), _rt_print_write32, (%r2, %r169);
	// inline asm
	add.s32 	%r171, %r162, 8;
	// inline asm
	call (), _rt_print_write32, (%r178, %r171);
	// inline asm
	add.s32 	%r173, %r162, 12;
	// inline asm
	call (), _rt_print_write32, (%r7, %r173);
	// inline asm
	add.s32 	%r175, %r162, 16;
	// inline asm
	call (), _rt_print_write32, (%r178, %r175);
	// inline asm
	add.s32 	%r177, %r162, 20;
	// inline asm
	call (), _rt_print_write32, (%r8, %r177);
	// inline asm
	add.s32 	%r179, %r162, 24;
	// inline asm
	call (), _rt_print_write32, (%r178, %r179);
	// inline asm
	add.s32 	%r181, %r162, 28;
	// inline asm
	call (), _rt_print_write32, (%r9, %r181);
	// inline asm
	bra.uni 	BB2_143;

BB2_19:
	cvta.global.u64 	%rd15, $str15;
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r182), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r182, 0;
	mov.u64 	%rd220, $str15;
	@%p16 bra 	BB2_143;

	mov.u64 	%rd219, %rd15;

BB2_21:
	mov.u64 	%rd17, %rd220;
	mov.u64 	%rd16, %rd219;
	add.s64 	%rd18, %rd16, 1;
	add.s64 	%rd220, %rd17, 1;
	ld.global.u8 	%rs3, [%rd17+1];
	setp.ne.s16	%p17, %rs3, 0;
	mov.u64 	%rd219, %rd18;
	@%p17 bra 	BB2_21;

	sub.s64 	%rd149, %rd18, %rd15;
	cvt.u32.u64	%r185, %rd149;
	add.s32 	%r186, %r185, 40;
	and.b32  	%r184, %r186, -4;
	// inline asm
	call (%r183), _rt_print_start_64, (%rd15, %r184);
	// inline asm
	setp.eq.s32	%p18, %r183, 0;
	@%p18 bra 	BB2_143;

	mov.u32 	%r199, 0;
	// inline asm
	call (), _rt_print_write32, (%r199, %r183);
	// inline asm
	add.s32 	%r190, %r183, 4;
	// inline asm
	call (), _rt_print_write32, (%r11, %r190);
	// inline asm
	add.s32 	%r192, %r183, 8;
	// inline asm
	call (), _rt_print_write32, (%r199, %r192);
	// inline asm
	add.s32 	%r194, %r183, 12;
	// inline asm
	call (), _rt_print_write32, (%r12, %r194);
	// inline asm
	add.s32 	%r196, %r183, 16;
	// inline asm
	call (), _rt_print_write32, (%r199, %r196);
	// inline asm
	add.s32 	%r198, %r183, 20;
	// inline asm
	call (), _rt_print_write32, (%r13, %r198);
	// inline asm
	add.s32 	%r200, %r183, 24;
	// inline asm
	call (), _rt_print_write32, (%r199, %r200);
	// inline asm
	add.s32 	%r202, %r183, 28;
	// inline asm
	call (), _rt_print_write32, (%r14, %r202);
	// inline asm
	bra.uni 	BB2_143;

BB2_24:
	cvta.global.u64 	%rd20, $str14;
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r203), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r203, 0;
	mov.u64 	%rd222, $str14;
	@%p19 bra 	BB2_143;

	mov.u64 	%rd221, %rd20;

BB2_26:
	mov.u64 	%rd22, %rd222;
	mov.u64 	%rd21, %rd221;
	add.s64 	%rd23, %rd21, 1;
	add.s64 	%rd222, %rd22, 1;
	ld.global.u8 	%rs4, [%rd22+1];
	setp.ne.s16	%p20, %rs4, 0;
	mov.u64 	%rd221, %rd23;
	@%p20 bra 	BB2_26;

	sub.s64 	%rd152, %rd23, %rd20;
	cvt.u32.u64	%r206, %rd152;
	add.s32 	%r207, %r206, 104;
	and.b32  	%r205, %r207, -4;
	// inline asm
	call (%r204), _rt_print_start_64, (%rd20, %r205);
	// inline asm
	setp.eq.s32	%p21, %r204, 0;
	@%p21 bra 	BB2_143;

	mov.u32 	%r244, 0;
	// inline asm
	call (), _rt_print_write32, (%r244, %r204);
	// inline asm
	add.s32 	%r211, %r204, 4;
	// inline asm
	call (), _rt_print_write32, (%r16, %r211);
	// inline asm
	add.s32 	%r213, %r204, 8;
	// inline asm
	call (), _rt_print_write32, (%r244, %r213);
	// inline asm
	add.s32 	%r215, %r204, 12;
	// inline asm
	call (), _rt_print_write32, (%r17, %r215);
	// inline asm
	add.s32 	%r217, %r204, 16;
	// inline asm
	call (), _rt_print_write32, (%r244, %r217);
	// inline asm
	add.s32 	%r219, %r204, 20;
	// inline asm
	call (), _rt_print_write32, (%r18, %r219);
	// inline asm
	add.s32 	%r221, %r204, 24;
	mov.u32 	%r252, 2;
	// inline asm
	call (), _rt_print_write32, (%r252, %r221);
	// inline asm
	add.s32 	%r223, %r204, 28;
	// inline asm
	call (), _rt_print_write32, (%r19, %r223);
	// inline asm
	add.s32 	%r225, %r204, 32;
	// inline asm
	call (), _rt_print_write32, (%r252, %r225);
	// inline asm
	add.s32 	%r227, %r204, 36;
	// inline asm
	call (), _rt_print_write32, (%r20, %r227);
	// inline asm
	add.s32 	%r229, %r204, 40;
	// inline asm
	call (), _rt_print_write32, (%r252, %r229);
	// inline asm
	add.s32 	%r231, %r204, 44;
	// inline asm
	call (), _rt_print_write32, (%r21, %r231);
	// inline asm
	add.s32 	%r233, %r204, 48;
	// inline asm
	call (), _rt_print_write32, (%r252, %r233);
	// inline asm
	add.s32 	%r235, %r204, 52;
	// inline asm
	call (), _rt_print_write32, (%r22, %r235);
	// inline asm
	add.s32 	%r237, %r204, 56;
	// inline asm
	call (), _rt_print_write32, (%r252, %r237);
	// inline asm
	add.s32 	%r239, %r204, 60;
	// inline asm
	call (), _rt_print_write32, (%r23, %r239);
	// inline asm
	add.s32 	%r241, %r204, 64;
	// inline asm
	call (), _rt_print_write32, (%r252, %r241);
	// inline asm
	add.s32 	%r243, %r204, 68;
	// inline asm
	call (), _rt_print_write32, (%r24, %r243);
	// inline asm
	add.s32 	%r245, %r204, 72;
	// inline asm
	call (), _rt_print_write32, (%r244, %r245);
	// inline asm
	add.s32 	%r247, %r204, 76;
	// inline asm
	call (), _rt_print_write32, (%r25, %r247);
	// inline asm
	add.s32 	%r249, %r204, 80;
	// inline asm
	call (), _rt_print_write32, (%r252, %r249);
	// inline asm
	add.s32 	%r251, %r204, 84;
	// inline asm
	call (), _rt_print_write32, (%r26, %r251);
	// inline asm
	add.s32 	%r253, %r204, 88;
	// inline asm
	call (), _rt_print_write32, (%r252, %r253);
	// inline asm
	add.s32 	%r255, %r204, 92;
	// inline asm
	call (), _rt_print_write32, (%r27, %r255);
	// inline asm
	bra.uni 	BB2_143;

BB2_29:
	ld.volatile.global.u32 	%r257, [_ZN21rti_internal_register21reg_exception_detail0E];
	cvta.global.u64 	%rd25, $str13;
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd27, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd28, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r256), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p22, %r256, 0;
	mov.u64 	%rd224, $str13;
	@%p22 bra 	BB2_143;

	mov.u64 	%rd223, %rd25;

BB2_31:
	mov.u64 	%rd30, %rd224;
	mov.u64 	%rd29, %rd223;
	add.s64 	%rd31, %rd29, 1;
	add.s64 	%rd224, %rd30, 1;
	ld.global.u8 	%rs5, [%rd30+1];
	setp.ne.s16	%p23, %rs5, 0;
	mov.u64 	%rd223, %rd31;
	@%p23 bra 	BB2_31;

	sub.s64 	%rd155, %rd31, %rd25;
	cvt.u32.u64	%r260, %rd155;
	mov.u32 	%r261, 8;
	mov.u32 	%r262, 4;
	max.u32 	%r263, %r262, %r261;
	add.s32 	%r264, %r260, 44;
	and.b32  	%r265, %r264, -4;
	mad.lo.s32 	%r259, %r263, 3, %r265;
	// inline asm
	call (%r258), _rt_print_start_64, (%rd25, %r259);
	// inline asm
	setp.eq.s32	%p24, %r258, 0;
	@%p24 bra 	BB2_143;

	mov.u32 	%r274, 0;
	// inline asm
	call (), _rt_print_write32, (%r274, %r258);
	// inline asm
	add.s32 	%r269, %r258, 4;
	// inline asm
	call (), _rt_print_write32, (%r29, %r269);
	// inline asm
	add.s32 	%r271, %r258, 8;
	// inline asm
	call (), _rt_print_write32, (%r274, %r271);
	// inline asm
	add.s32 	%r273, %r258, 12;
	// inline asm
	call (), _rt_print_write32, (%r30, %r273);
	// inline asm
	add.s32 	%r275, %r258, 16;
	// inline asm
	call (), _rt_print_write32, (%r274, %r275);
	// inline asm
	add.s32 	%r277, %r258, 20;
	// inline asm
	call (), _rt_print_write32, (%r31, %r277);
	// inline asm
	st.local.u64 	[%rd227], %rd26;
	add.s32 	%r279, %r258, 24;
	// inline asm
	call (), _rt_print_write32, (%r481, %r279);
	// inline asm
	max.s32 	%r33, %r262, %r261;
	shr.s32 	%r282, %r33, 31;
	shr.u32 	%r283, %r282, 30;
	add.s32 	%r284, %r33, %r283;
	shr.s32 	%r34, %r284, 2;
	setp.lt.s32	%p25, %r33, 4;
	@%p25 bra 	BB2_36;

	cvt.u32.u64	%r474, %rd26;
	add.s32 	%r473, %r258, 28;
	mov.u32 	%r475, 1;

BB2_35:
	mov.u32 	%r38, %r474;
	mov.u64 	%rd33, %rd225;
	// inline asm
	call (), _rt_print_write32, (%r38, %r473);
	// inline asm
	setp.lt.s32	%p26, %r475, %r34;
	@%p26 bra 	BB2_44;

BB2_36:
	add.s32 	%r290, %r258, %r33;
	add.s32 	%r40, %r290, 28;
	st.local.u64 	[%rd226], %rd27;
	// inline asm
	call (), _rt_print_write32, (%r481, %r40);
	// inline asm
	@%p25 bra 	BB2_39;

	cvt.u32.u64	%r477, %rd27;
	add.s32 	%r476, %r290, 32;
	mov.u32 	%r478, 1;

BB2_38:
	mov.u32 	%r44, %r477;
	mov.u64 	%rd34, %rd226;
	// inline asm
	call (), _rt_print_write32, (%r44, %r476);
	// inline asm
	setp.lt.s32	%p28, %r478, %r34;
	@%p28 bra 	BB2_43;

BB2_39:
	add.s32 	%r297, %r33, %r40;
	add.s32 	%r296, %r297, 4;
	st.local.u64 	[%rd227], %rd28;
	// inline asm
	call (), _rt_print_write32, (%r481, %r296);
	// inline asm
	@%p25 bra 	BB2_143;

	cvt.u32.u64	%r480, %rd28;
	mad.lo.s32 	%r299, %r33, 2, %r258;
	add.s32 	%r479, %r299, 36;

BB2_41:
	mov.u32 	%r49, %r480;
	mov.u64 	%rd35, %rd227;
	// inline asm
	call (), _rt_print_write32, (%r49, %r479);
	// inline asm
	setp.ge.s32	%p30, %r481, %r34;
	@%p30 bra 	BB2_143;

	add.s64 	%rd227, %rd35, 4;
	ld.local.u32 	%r480, [%rd35+4];
	add.s32 	%r481, %r481, 1;
	add.s32 	%r479, %r479, 4;
	bra.uni 	BB2_41;

BB2_43:
	add.s64 	%rd226, %rd34, 4;
	ld.local.u32 	%r477, [%rd34+4];
	add.s32 	%r478, %r478, 1;
	add.s32 	%r476, %r476, 4;
	bra.uni 	BB2_38;

BB2_44:
	add.s64 	%rd225, %rd33, 4;
	ld.local.u32 	%r474, [%rd33+4];
	add.s32 	%r475, %r475, 1;
	add.s32 	%r473, %r473, 4;
	bra.uni 	BB2_35;

BB2_45:
	cvta.global.u64 	%rd39, $str9;
	// inline asm
	call (%r302), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r302, 0;
	mov.u64 	%rd229, $str9;
	@%p31 bra 	BB2_49;

	mov.u64 	%rd228, %rd39;

BB2_47:
	mov.u64 	%rd41, %rd229;
	mov.u64 	%rd40, %rd228;
	add.s64 	%rd42, %rd40, 1;
	add.s64 	%rd229, %rd41, 1;
	ld.global.u8 	%rs6, [%rd41+1];
	setp.ne.s16	%p32, %rs6, 0;
	mov.u64 	%rd228, %rd42;
	@%p32 bra 	BB2_47;

	sub.s64 	%rd158, %rd42, %rd39;
	cvt.u32.u64	%r305, %rd158;
	add.s32 	%r306, %r305, 8;
	and.b32  	%r304, %r306, -4;
	// inline asm
	call (%r303), _rt_print_start_64, (%rd39, %r304);
	// inline asm

BB2_49:
	ld.volatile.global.u32 	%r307, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p33, %r307, 0;
	@%p33 bra 	BB2_61;

	setp.eq.s32	%p34, %r307, 1;
	@%p34 bra 	BB2_56;

	setp.ne.s32	%p35, %r307, 2;
	@%p35 bra 	BB2_143;

	cvta.global.u64 	%rd44, $str12;
	// inline asm
	call (%r308), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r308, 0;
	mov.u64 	%rd231, $str12;
	@%p36 bra 	BB2_143;

	mov.u64 	%rd230, %rd44;

BB2_54:
	mov.u64 	%rd46, %rd231;
	mov.u64 	%rd45, %rd230;
	add.s64 	%rd47, %rd45, 1;
	add.s64 	%rd231, %rd46, 1;
	ld.global.u8 	%rs7, [%rd46+1];
	setp.ne.s16	%p37, %rs7, 0;
	mov.u64 	%rd230, %rd47;
	@%p37 bra 	BB2_54;

	sub.s64 	%rd161, %rd47, %rd44;
	cvt.u32.u64	%r311, %rd161;
	add.s32 	%r312, %r311, 8;
	and.b32  	%r310, %r312, -4;
	// inline asm
	call (%r309), _rt_print_start_64, (%rd44, %r310);
	// inline asm
	bra.uni 	BB2_143;

BB2_56:
	cvta.global.u64 	%rd49, $str11;
	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r313), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r313, 0;
	mov.u64 	%rd233, $str11;
	@%p38 bra 	BB2_143;

	mov.u64 	%rd232, %rd49;

BB2_58:
	mov.u64 	%rd51, %rd233;
	mov.u64 	%rd50, %rd232;
	add.s64 	%rd52, %rd50, 1;
	add.s64 	%rd233, %rd51, 1;
	ld.global.u8 	%rs8, [%rd51+1];
	setp.ne.s16	%p39, %rs8, 0;
	mov.u64 	%rd232, %rd52;
	@%p39 bra 	BB2_58;

	sub.s64 	%rd164, %rd52, %rd49;
	cvt.u32.u64	%r316, %rd164;
	add.s32 	%r317, %r316, 16;
	and.b32  	%r315, %r317, -4;
	// inline asm
	call (%r314), _rt_print_start_64, (%rd49, %r315);
	// inline asm
	setp.eq.s32	%p40, %r314, 0;
	@%p40 bra 	BB2_143;

	mov.u32 	%r318, 0;
	// inline asm
	call (), _rt_print_write32, (%r318, %r314);
	// inline asm
	add.s32 	%r321, %r314, 4;
	// inline asm
	call (), _rt_print_write32, (%r60, %r321);
	// inline asm
	bra.uni 	BB2_143;

BB2_61:
	cvta.global.u64 	%rd54, $str10;
	// inline asm
	call (%r322), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r322, 0;
	mov.u64 	%rd235, $str10;
	@%p41 bra 	BB2_143;

	mov.u64 	%rd234, %rd54;

BB2_63:
	mov.u64 	%rd56, %rd235;
	mov.u64 	%rd55, %rd234;
	add.s64 	%rd57, %rd55, 1;
	add.s64 	%rd235, %rd56, 1;
	ld.global.u8 	%rs9, [%rd56+1];
	setp.ne.s16	%p42, %rs9, 0;
	mov.u64 	%rd234, %rd57;
	@%p42 bra 	BB2_63;

	sub.s64 	%rd167, %rd57, %rd54;
	cvt.u32.u64	%r325, %rd167;
	add.s32 	%r326, %r325, 8;
	and.b32  	%r324, %r326, -4;
	// inline asm
	call (%r323), _rt_print_start_64, (%rd54, %r324);
	// inline asm
	bra.uni 	BB2_143;

BB2_65:
	cvta.global.u64 	%rd59, $str6;
	// inline asm
	call (%r327), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p43, %r327, 0;
	mov.u64 	%rd237, $str6;
	@%p43 bra 	BB2_69;

	mov.u64 	%rd236, %rd59;

BB2_67:
	mov.u64 	%rd61, %rd237;
	mov.u64 	%rd60, %rd236;
	add.s64 	%rd62, %rd60, 1;
	add.s64 	%rd237, %rd61, 1;
	ld.global.u8 	%rs10, [%rd61+1];
	setp.ne.s16	%p44, %rs10, 0;
	mov.u64 	%rd236, %rd62;
	@%p44 bra 	BB2_67;

	sub.s64 	%rd170, %rd62, %rd59;
	cvt.u32.u64	%r330, %rd170;
	add.s32 	%r331, %r330, 8;
	and.b32  	%r329, %r331, -4;
	// inline asm
	call (%r328), _rt_print_start_64, (%rd59, %r329);
	// inline asm

BB2_69:
	ld.volatile.global.u32 	%r332, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p45, %r332, 0;
	@%p45 bra 	BB2_76;

	setp.ne.s32	%p46, %r332, 1;
	@%p46 bra 	BB2_143;

	cvta.global.u64 	%rd64, $str8;
	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r333), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p47, %r333, 0;
	mov.u64 	%rd239, $str8;
	@%p47 bra 	BB2_143;

	mov.u64 	%rd238, %rd64;

BB2_73:
	mov.u64 	%rd66, %rd239;
	mov.u64 	%rd65, %rd238;
	add.s64 	%rd67, %rd65, 1;
	add.s64 	%rd239, %rd66, 1;
	ld.global.u8 	%rs11, [%rd66+1];
	setp.ne.s16	%p48, %rs11, 0;
	mov.u64 	%rd238, %rd67;
	@%p48 bra 	BB2_73;

	sub.s64 	%rd173, %rd67, %rd64;
	cvt.u32.u64	%r336, %rd173;
	add.s32 	%r337, %r336, 16;
	and.b32  	%r335, %r337, -4;
	// inline asm
	call (%r334), _rt_print_start_64, (%rd64, %r335);
	// inline asm
	setp.eq.s32	%p49, %r334, 0;
	@%p49 bra 	BB2_143;

	mov.u32 	%r338, 0;
	// inline asm
	call (), _rt_print_write32, (%r338, %r334);
	// inline asm
	add.s32 	%r341, %r334, 4;
	// inline asm
	call (), _rt_print_write32, (%r62, %r341);
	// inline asm
	bra.uni 	BB2_143;

BB2_76:
	cvta.global.u64 	%rd69, $str7;
	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r342), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p50, %r342, 0;
	mov.u64 	%rd241, $str7;
	@%p50 bra 	BB2_143;

	mov.u64 	%rd240, %rd69;

BB2_78:
	mov.u64 	%rd71, %rd241;
	mov.u64 	%rd70, %rd240;
	add.s64 	%rd72, %rd70, 1;
	add.s64 	%rd241, %rd71, 1;
	ld.global.u8 	%rs12, [%rd71+1];
	setp.ne.s16	%p51, %rs12, 0;
	mov.u64 	%rd240, %rd72;
	@%p51 bra 	BB2_78;

	sub.s64 	%rd176, %rd72, %rd69;
	cvt.u32.u64	%r345, %rd176;
	add.s32 	%r346, %r345, 16;
	and.b32  	%r344, %r346, -4;
	// inline asm
	call (%r343), _rt_print_start_64, (%rd69, %r344);
	// inline asm
	setp.eq.s32	%p52, %r343, 0;
	@%p52 bra 	BB2_143;

	mov.u32 	%r347, 0;
	// inline asm
	call (), _rt_print_write32, (%r347, %r343);
	// inline asm
	add.s32 	%r350, %r343, 4;
	// inline asm
	call (), _rt_print_write32, (%r64, %r350);
	// inline asm
	bra.uni 	BB2_143;

BB2_81:
	cvta.global.u64 	%rd74, $str2;
	// inline asm
	call (%r351), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p53, %r351, 0;
	mov.u64 	%rd243, $str2;
	@%p53 bra 	BB2_85;

	mov.u64 	%rd242, %rd74;

BB2_83:
	mov.u64 	%rd76, %rd243;
	mov.u64 	%rd75, %rd242;
	add.s64 	%rd77, %rd75, 1;
	add.s64 	%rd243, %rd76, 1;
	ld.global.u8 	%rs13, [%rd76+1];
	setp.ne.s16	%p54, %rs13, 0;
	mov.u64 	%rd242, %rd77;
	@%p54 bra 	BB2_83;

	sub.s64 	%rd179, %rd77, %rd74;
	cvt.u32.u64	%r354, %rd179;
	add.s32 	%r355, %r354, 8;
	and.b32  	%r353, %r355, -4;
	// inline asm
	call (%r352), _rt_print_start_64, (%rd74, %r353);
	// inline asm

BB2_85:
	ld.volatile.global.u32 	%r356, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p55, %r356, 0;
	@%p55 bra 	BB2_97;

	setp.eq.s32	%p56, %r356, 1;
	@%p56 bra 	BB2_92;

	setp.ne.s32	%p57, %r356, 2;
	@%p57 bra 	BB2_143;

	cvta.global.u64 	%rd79, $str5;
	// inline asm
	call (%r357), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p58, %r357, 0;
	mov.u64 	%rd245, $str5;
	@%p58 bra 	BB2_143;

	mov.u64 	%rd244, %rd79;

BB2_90:
	mov.u64 	%rd81, %rd245;
	mov.u64 	%rd80, %rd244;
	add.s64 	%rd82, %rd80, 1;
	add.s64 	%rd245, %rd81, 1;
	ld.global.u8 	%rs14, [%rd81+1];
	setp.ne.s16	%p59, %rs14, 0;
	mov.u64 	%rd244, %rd82;
	@%p59 bra 	BB2_90;

	sub.s64 	%rd182, %rd82, %rd79;
	cvt.u32.u64	%r360, %rd182;
	add.s32 	%r361, %r360, 8;
	and.b32  	%r359, %r361, -4;
	// inline asm
	call (%r358), _rt_print_start_64, (%rd79, %r359);
	// inline asm
	bra.uni 	BB2_143;

BB2_92:
	cvta.global.u64 	%rd84, $str4;
	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r362), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p60, %r362, 0;
	mov.u64 	%rd247, $str4;
	@%p60 bra 	BB2_143;

	mov.u64 	%rd246, %rd84;

BB2_94:
	mov.u64 	%rd86, %rd247;
	mov.u64 	%rd85, %rd246;
	add.s64 	%rd87, %rd85, 1;
	add.s64 	%rd247, %rd86, 1;
	ld.global.u8 	%rs15, [%rd86+1];
	setp.ne.s16	%p61, %rs15, 0;
	mov.u64 	%rd246, %rd87;
	@%p61 bra 	BB2_94;

	sub.s64 	%rd185, %rd87, %rd84;
	cvt.u32.u64	%r365, %rd185;
	add.s32 	%r366, %r365, 16;
	and.b32  	%r364, %r366, -4;
	// inline asm
	call (%r363), _rt_print_start_64, (%rd84, %r364);
	// inline asm
	setp.eq.s32	%p62, %r363, 0;
	@%p62 bra 	BB2_143;

	mov.u32 	%r367, 0;
	// inline asm
	call (), _rt_print_write32, (%r367, %r363);
	// inline asm
	add.s32 	%r370, %r363, 4;
	// inline asm
	call (), _rt_print_write32, (%r66, %r370);
	// inline asm
	bra.uni 	BB2_143;

BB2_97:
	cvta.global.u64 	%rd89, $str3;
	// inline asm
	call (%r371), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p63, %r371, 0;
	mov.u64 	%rd249, $str3;
	@%p63 bra 	BB2_143;

	mov.u64 	%rd248, %rd89;

BB2_99:
	mov.u64 	%rd91, %rd249;
	mov.u64 	%rd90, %rd248;
	add.s64 	%rd92, %rd90, 1;
	add.s64 	%rd249, %rd91, 1;
	ld.global.u8 	%rs16, [%rd91+1];
	setp.ne.s16	%p64, %rs16, 0;
	mov.u64 	%rd248, %rd92;
	@%p64 bra 	BB2_99;

	sub.s64 	%rd188, %rd92, %rd89;
	cvt.u32.u64	%r374, %rd188;
	add.s32 	%r375, %r374, 8;
	and.b32  	%r373, %r375, -4;
	// inline asm
	call (%r372), _rt_print_start_64, (%rd89, %r373);
	// inline asm
	bra.uni 	BB2_143;

BB2_101:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd94, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd95, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	setp.gt.u32	%p65, %r68, 1;
	@%p65 bra 	BB2_103;

	mov.u64 	%rd250, 1;
	bra.uni 	BB2_104;

BB2_103:
	ld.volatile.global.u64 	%rd250, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB2_104:
	setp.gt.u32	%p66, %r68, 2;
	@%p66 bra 	BB2_106;

	mov.u64 	%rd251, 1;
	bra.uni 	BB2_107;

BB2_106:
	ld.volatile.global.u64 	%rd251, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB2_107:
	cvta.global.u64 	%rd252, $str1;
	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd101, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd102, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd103, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r376), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p67, %r376, 0;
	mov.u64 	%rd253, $str1;
	@%p67 bra 	BB2_143;

BB2_108:
	mov.u64 	%rd105, %rd253;
	add.s64 	%rd252, %rd252, 1;
	add.s64 	%rd253, %rd105, 1;
	ld.global.u8 	%rs17, [%rd105+1];
	setp.ne.s16	%p68, %rs17, 0;
	@%p68 bra 	BB2_108;

	cvta.global.u64 	%rd192, $str1;
	sub.s64 	%rd193, %rd252, %rd192;
	cvt.u32.u64	%r379, %rd193;
	mov.u32 	%r380, 8;
	mov.u32 	%r381, 4;
	max.u32 	%r382, %r381, %r380;
	add.s32 	%r383, %r379, 76;
	and.b32  	%r384, %r383, -4;
	mad.lo.s32 	%r378, %r382, 7, %r384;
	// inline asm
	call (%r377), _rt_print_start_64, (%rd192, %r378);
	// inline asm
	setp.eq.s32	%p69, %r377, 0;
	@%p69 bra 	BB2_143;

	cvta.to.local.u64 	%rd258, %rd139;
	mov.u32 	%r393, 0;
	// inline asm
	call (), _rt_print_write32, (%r393, %r377);
	// inline asm
	add.s32 	%r388, %r377, 4;
	// inline asm
	call (), _rt_print_write32, (%r69, %r388);
	// inline asm
	add.s32 	%r390, %r377, 8;
	// inline asm
	call (), _rt_print_write32, (%r393, %r390);
	// inline asm
	add.s32 	%r392, %r377, 12;
	// inline asm
	call (), _rt_print_write32, (%r70, %r392);
	// inline asm
	add.s32 	%r394, %r377, 16;
	// inline asm
	call (), _rt_print_write32, (%r393, %r394);
	// inline asm
	add.s32 	%r396, %r377, 20;
	// inline asm
	call (), _rt_print_write32, (%r71, %r396);
	// inline asm
	st.local.u64 	[%rd258], %rd94;
	add.s32 	%r398, %r377, 24;
	mov.u32 	%r502, 1;
	// inline asm
	call (), _rt_print_write32, (%r502, %r398);
	// inline asm
	max.s32 	%r75, %r381, %r380;
	shr.s32 	%r401, %r75, 31;
	shr.u32 	%r402, %r401, 30;
	add.s32 	%r403, %r75, %r402;
	shr.s32 	%r76, %r403, 2;
	setp.lt.s32	%p70, %r75, 4;
	@%p70 bra 	BB2_113;

	cvt.u32.u64	%r483, %rd94;
	add.s32 	%r482, %r377, 28;
	cvta.to.local.u64 	%rd254, %rd139;
	mov.u32 	%r484, 1;

BB2_112:
	mov.u32 	%r80, %r483;
	mov.u64 	%rd109, %rd254;
	// inline asm
	call (), _rt_print_write32, (%r80, %r482);
	// inline asm
	setp.lt.s32	%p71, %r484, %r76;
	@%p71 bra 	BB2_137;

BB2_113:
	cvta.to.local.u64 	%rd259, %rd140;
	add.s32 	%r413, %r377, %r75;
	add.s32 	%r82, %r413, 28;
	// inline asm
	call (), _rt_print_write32, (%r393, %r82);
	// inline asm
	add.s32 	%r410, %r413, 32;
	// inline asm
	call (), _rt_print_write32, (%r72, %r410);
	// inline asm
	add.s32 	%r412, %r413, 36;
	st.local.u64 	[%rd259], %rd95;
	// inline asm
	call (), _rt_print_write32, (%r502, %r412);
	// inline asm
	@%p70 bra 	BB2_116;

	cvt.u32.u64	%r486, %rd95;
	add.s32 	%r485, %r413, 40;
	cvta.to.local.u64 	%rd255, %rd140;
	mov.u32 	%r487, 1;

BB2_115:
	mov.u32 	%r86, %r486;
	mov.u64 	%rd111, %rd255;
	// inline asm
	call (), _rt_print_write32, (%r86, %r485);
	// inline asm
	setp.lt.s32	%p73, %r487, %r76;
	@%p73 bra 	BB2_136;

BB2_116:
	st.local.u64 	[%rd258], %rd250;
	add.s32 	%r420, %r75, %r82;
	add.s32 	%r88, %r420, -28;
	add.s32 	%r419, %r420, 12;
	// inline asm
	call (), _rt_print_write32, (%r502, %r419);
	// inline asm
	@%p70 bra 	BB2_119;

	cvt.u32.u64	%r489, %rd250;
	mad.lo.s32 	%r422, %r75, 2, %r377;
	add.s32 	%r488, %r422, 44;
	cvta.to.local.u64 	%rd256, %rd139;
	mov.u32 	%r490, 1;

BB2_118:
	mov.u32 	%r92, %r489;
	mov.u64 	%rd113, %rd256;
	// inline asm
	call (), _rt_print_write32, (%r92, %r488);
	// inline asm
	setp.lt.s32	%p75, %r490, %r76;
	@%p75 bra 	BB2_135;

BB2_119:
	st.local.u64 	[%rd259], %rd251;
	add.s32 	%r427, %r75, %r88;
	add.s32 	%r426, %r427, 44;
	// inline asm
	call (), _rt_print_write32, (%r502, %r426);
	// inline asm
	@%p70 bra 	BB2_122;

	cvt.u32.u64	%r492, %rd251;
	mad.lo.s32 	%r429, %r75, 3, %r377;
	add.s32 	%r491, %r429, 48;
	cvta.to.local.u64 	%rd257, %rd140;
	mov.u32 	%r493, 1;

BB2_121:
	mov.u32 	%r97, %r492;
	mov.u64 	%rd115, %rd257;
	// inline asm
	call (), _rt_print_write32, (%r97, %r491);
	// inline asm
	setp.lt.s32	%p77, %r493, %r76;
	@%p77 bra 	BB2_134;

BB2_122:
	mad.lo.s32 	%r99, %r75, 2, %r88;
	add.s32 	%r433, %r99, 48;
	// inline asm
	call (), _rt_print_write32, (%r393, %r433);
	// inline asm
	add.s32 	%r435, %r99, 52;
	// inline asm
	call (), _rt_print_write32, (%r73, %r435);
	// inline asm
	st.local.u64 	[%rd258], %rd101;
	add.s32 	%r437, %r99, 56;
	// inline asm
	call (), _rt_print_write32, (%r502, %r437);
	// inline asm
	@%p70 bra 	BB2_125;

	cvt.u32.u64	%r495, %rd101;
	mad.lo.s32 	%r439, %r75, 4, %r377;
	add.s32 	%r494, %r439, 60;
	mov.u32 	%r496, 1;

BB2_124:
	mov.u32 	%r103, %r495;
	mov.u64 	%rd117, %rd258;
	// inline asm
	call (), _rt_print_write32, (%r103, %r494);
	// inline asm
	setp.lt.s32	%p79, %r496, %r76;
	@%p79 bra 	BB2_133;

BB2_125:
	st.local.u64 	[%rd259], %rd102;
	add.s32 	%r444, %r75, %r99;
	add.s32 	%r443, %r444, 60;
	// inline asm
	call (), _rt_print_write32, (%r502, %r443);
	// inline asm
	@%p70 bra 	BB2_128;

	cvt.u32.u64	%r498, %rd102;
	mad.lo.s32 	%r446, %r75, 5, %r377;
	add.s32 	%r497, %r446, 64;
	mov.u32 	%r499, 1;

BB2_127:
	mov.u32 	%r108, %r498;
	mov.u64 	%rd119, %rd259;
	// inline asm
	call (), _rt_print_write32, (%r108, %r497);
	// inline asm
	setp.lt.s32	%p81, %r499, %r76;
	@%p81 bra 	BB2_132;

BB2_128:
	st.local.u64 	[%rd227], %rd103;
	mad.lo.s32 	%r451, %r75, 2, %r99;
	add.s32 	%r450, %r451, 64;
	// inline asm
	call (), _rt_print_write32, (%r502, %r450);
	// inline asm
	@%p70 bra 	BB2_143;

	cvt.u32.u64	%r501, %rd103;
	mad.lo.s32 	%r453, %r75, 6, %r377;
	add.s32 	%r500, %r453, 68;

BB2_130:
	mov.u32 	%r113, %r501;
	mov.u64 	%rd120, %rd260;
	// inline asm
	call (), _rt_print_write32, (%r113, %r500);
	// inline asm
	setp.ge.s32	%p83, %r502, %r76;
	@%p83 bra 	BB2_143;

	add.s64 	%rd260, %rd120, 4;
	ld.local.u32 	%r501, [%rd120+4];
	add.s32 	%r502, %r502, 1;
	add.s32 	%r500, %r500, 4;
	bra.uni 	BB2_130;

BB2_132:
	add.s64 	%rd259, %rd119, 4;
	ld.local.u32 	%r498, [%rd119+4];
	add.s32 	%r499, %r499, 1;
	add.s32 	%r497, %r497, 4;
	bra.uni 	BB2_127;

BB2_133:
	add.s64 	%rd258, %rd117, 4;
	ld.local.u32 	%r495, [%rd117+4];
	add.s32 	%r496, %r496, 1;
	add.s32 	%r494, %r494, 4;
	bra.uni 	BB2_124;

BB2_134:
	add.s64 	%rd257, %rd115, 4;
	ld.local.u32 	%r492, [%rd115+4];
	add.s32 	%r493, %r493, 1;
	add.s32 	%r491, %r491, 4;
	bra.uni 	BB2_121;

BB2_135:
	add.s64 	%rd256, %rd113, 4;
	ld.local.u32 	%r489, [%rd113+4];
	add.s32 	%r490, %r490, 1;
	add.s32 	%r488, %r488, 4;
	bra.uni 	BB2_118;

BB2_136:
	add.s64 	%rd255, %rd111, 4;
	ld.local.u32 	%r486, [%rd111+4];
	add.s32 	%r487, %r487, 1;
	add.s32 	%r485, %r485, 4;
	bra.uni 	BB2_115;

BB2_137:
	add.s64 	%rd254, %rd109, 4;
	ld.local.u32 	%r483, [%rd109+4];
	add.s32 	%r484, %r484, 1;
	add.s32 	%r482, %r482, 4;
	bra.uni 	BB2_112;

BB2_138:
	cvta.global.u64 	%rd128, $str;
	ld.volatile.global.u32 	%r136, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r137, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r138, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r456), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p84, %r456, 0;
	mov.u64 	%rd262, $str;
	@%p84 bra 	BB2_143;

	mov.u64 	%rd261, %rd128;

BB2_140:
	mov.u64 	%rd130, %rd262;
	mov.u64 	%rd129, %rd261;
	add.s64 	%rd131, %rd129, 1;
	add.s64 	%rd262, %rd130, 1;
	ld.global.u8 	%rs18, [%rd130+1];
	setp.ne.s16	%p85, %rs18, 0;
	mov.u64 	%rd261, %rd131;
	@%p85 bra 	BB2_140;

	sub.s64 	%rd214, %rd131, %rd128;
	cvt.u32.u64	%r459, %rd214;
	add.s32 	%r460, %r459, 32;
	and.b32  	%r458, %r460, -4;
	// inline asm
	call (%r457), _rt_print_start_64, (%rd128, %r458);
	// inline asm
	setp.eq.s32	%p86, %r457, 0;
	@%p86 bra 	BB2_143;

	mov.u32 	%r469, 0;
	// inline asm
	call (), _rt_print_write32, (%r469, %r457);
	// inline asm
	add.s32 	%r464, %r457, 4;
	// inline asm
	call (), _rt_print_write32, (%r136, %r464);
	// inline asm
	add.s32 	%r466, %r457, 8;
	// inline asm
	call (), _rt_print_write32, (%r469, %r466);
	// inline asm
	add.s32 	%r468, %r457, 12;
	// inline asm
	call (), _rt_print_write32, (%r137, %r468);
	// inline asm
	add.s32 	%r470, %r457, 16;
	// inline asm
	call (), _rt_print_write32, (%r469, %r470);
	// inline asm
	add.s32 	%r472, %r457, 20;
	// inline asm
	call (), _rt_print_write32, (%r138, %r472);
	// inline asm

BB2_143:
	ret;
}

.visible .entry _Z4missv(

)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<206>;
	.reg .s64 	%rd<6>;


	ld.global.v2.f32 	{%f33, %f34}, [bg_color];
	ld.global.f32 	%f35, [bg_color+8];
	st.global.f32 	[lwrrent_prd+20], %f35;
	st.global.f32 	[lwrrent_prd+16], %f34;
	st.global.f32 	[lwrrent_prd+12], %f33;
	mov.u32 	%r1, 1;
	st.global.u32 	[lwrrent_prd+68], %r1;
	cvta.global.u64 	%rd5, light_buffer;
	mov.u32 	%r2, 60;
	// inline asm
	call (%rd1, %rd2, %rd3, %rd4), _rt_buffer_get_size_64, (%rd5, %r1, %r2);
	// inline asm
	cvt.u32.u64	%r3, %rd1;
	setp.ne.s32	%p1, %r3, 0;
	@%p1 bra 	BB3_12;

	ld.global.f32 	%f205, [ray+12];
	ld.global.f32 	%f2, [sky_up];
	ld.global.f32 	%f3, [sky_up+4];
	ld.global.f32 	%f4, [ray+16];
	mul.ftz.f32 	%f38, %f4, %f3;
	fma.rn.ftz.f32 	%f39, %f205, %f2, %f38;
	ld.global.f32 	%f5, [sky_up+8];
	ld.global.f32 	%f6, [ray+20];
	fma.rn.ftz.f32 	%f40, %f6, %f5, %f39;
	setp.leu.ftz.f32	%p2, %f40, 0f00000000;
	@%p2 bra 	BB3_8;

	ld.global.f32 	%f7, [overcast];
	setp.lt.ftz.f32	%p3, %f7, 0f3F800000;
	@%p3 bra 	BB3_4;

	mov.f32 	%f204, 0f00000000;
	mov.f32 	%f203, %f204;
	mov.f32 	%f202, %f204;
	bra.uni 	BB3_7;

BB3_4:
	ld.global.f32 	%f200, [ray+20];
	ld.global.f32 	%f198, [ray+12];
	ld.global.f32 	%f199, [ray+16];
	mul.ftz.f32 	%f44, %f199, %f3;
	fma.rn.ftz.f32 	%f45, %f198, %f2, %f44;
	fma.rn.ftz.f32 	%f46, %f200, %f5, %f45;
	rcp.approx.ftz.f32 	%f201, %f46;
	setp.geu.ftz.f32	%p4, %f201, 0f00000000;
	@%p4 bra 	BB3_6;

	add.ftz.f32 	%f47, %f2, %f2;
	mul.ftz.f32 	%f48, %f3, %f199;
	fma.rn.ftz.f32 	%f49, %f2, %f198, %f48;
	fma.rn.ftz.f32 	%f50, %f5, %f200, %f49;
	mul.ftz.f32 	%f51, %f47, %f50;
	add.ftz.f32 	%f52, %f3, %f3;
	mul.ftz.f32 	%f53, %f52, %f50;
	add.ftz.f32 	%f54, %f5, %f5;
	mul.ftz.f32 	%f55, %f54, %f50;
	sub.ftz.f32 	%f198, %f198, %f51;
	sub.ftz.f32 	%f199, %f199, %f53;
	sub.ftz.f32 	%f200, %f200, %f55;
	neg.ftz.f32 	%f201, %f201;

BB3_6:
	ld.global.f32 	%f56, [sun_direction];
	ld.global.f32 	%f57, [sun_direction+4];
	mul.ftz.f32 	%f58, %f57, %f199;
	fma.rn.ftz.f32 	%f59, %f56, %f198, %f58;
	ld.global.f32 	%f60, [sun_direction+8];
	fma.rn.ftz.f32 	%f61, %f60, %f200, %f59;
	abs.ftz.f32 	%f62, %f61;
	mov.f32 	%f63, 0f3F800000;
	sub.ftz.f32 	%f64, %f63, %f62;
	mul.ftz.f32 	%f65, %f64, 0f3F000000;
	sqrt.approx.ftz.f32 	%f66, %f65;
	setp.gt.ftz.f32	%p5, %f62, 0f3F11EB85;
	selp.f32	%f67, %f66, %f62, %p5;
	mul.ftz.f32 	%f68, %f67, %f67;
	mov.f32 	%f69, 0f3C94D2E9;
	mov.f32 	%f70, 0f3D53F941;
	fma.rn.ftz.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3D3F841F;
	fma.rn.ftz.f32 	%f73, %f71, %f68, %f72;
	mov.f32 	%f74, 0f3D994929;
	fma.rn.ftz.f32 	%f75, %f73, %f68, %f74;
	mov.f32 	%f76, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f77, %f75, %f68, %f76;
	mul.ftz.f32 	%f78, %f77, %f68;
	fma.rn.ftz.f32 	%f79, %f78, %f67, %f67;
	add.ftz.f32 	%f80, %f79, %f79;
	mov.f32 	%f81, 0f3FC90FDB;
	sub.ftz.f32 	%f82, %f81, %f79;
	selp.f32	%f83, %f80, %f82, %p5;
	setp.lt.ftz.f32	%p6, %f61, 0f00000000;
	mov.f32 	%f84, 0f40490FDB;
	sub.ftz.f32 	%f85, %f84, %f83;
	selp.f32	%f86, %f85, %f83, %p6;
	ld.global.f32 	%f87, [c1];
	mul.ftz.f32 	%f88, %f87, %f201;
	ld.global.f32 	%f89, [c1+4];
	mul.ftz.f32 	%f90, %f89, %f201;
	ld.global.f32 	%f91, [c1+8];
	mul.ftz.f32 	%f92, %f91, %f201;
	ld.global.f32 	%f93, [c3];
	mul.ftz.f32 	%f94, %f93, %f86;
	ld.global.f32 	%f95, [c3+4];
	mul.ftz.f32 	%f96, %f95, %f86;
	ld.global.f32 	%f97, [c3+8];
	mul.ftz.f32 	%f98, %f97, %f86;
	mul.ftz.f32 	%f99, %f88, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f100, %f99;
	mul.ftz.f32 	%f101, %f90, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f102, %f101;
	mul.ftz.f32 	%f103, %f92, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f104, %f103;
	ld.global.f32 	%f105, [c0];
	ld.global.f32 	%f106, [c0+4];
	ld.global.f32 	%f107, [c0+8];
	fma.rn.ftz.f32 	%f108, %f105, %f100, 0f3F800000;
	fma.rn.ftz.f32 	%f109, %f106, %f102, 0f3F800000;
	fma.rn.ftz.f32 	%f110, %f107, %f104, 0f3F800000;
	mul.ftz.f32 	%f111, %f94, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f112, %f111;
	mul.ftz.f32 	%f113, %f96, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f114, %f113;
	mul.ftz.f32 	%f115, %f98, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f116, %f115;
	ld.global.f32 	%f117, [c2];
	ld.global.f32 	%f118, [c2+4];
	ld.global.f32 	%f119, [c2+8];
	fma.rn.ftz.f32 	%f120, %f117, %f112, 0f3F800000;
	fma.rn.ftz.f32 	%f121, %f118, %f114, 0f3F800000;
	fma.rn.ftz.f32 	%f122, %f119, %f116, 0f3F800000;
	ld.global.f32 	%f123, [c4];
	mul.ftz.f32 	%f124, %f123, %f61;
	ld.global.f32 	%f125, [c4+4];
	mul.ftz.f32 	%f126, %f125, %f61;
	ld.global.f32 	%f127, [c4+8];
	mul.ftz.f32 	%f128, %f127, %f61;
	fma.rn.ftz.f32 	%f129, %f124, %f61, %f120;
	fma.rn.ftz.f32 	%f130, %f126, %f61, %f121;
	fma.rn.ftz.f32 	%f131, %f128, %f61, %f122;
	mul.ftz.f32 	%f132, %f108, %f129;
	mul.ftz.f32 	%f133, %f109, %f130;
	mul.ftz.f32 	%f134, %f110, %f131;
	ld.global.f32 	%f135, [ilw_divisor_Yxy];
	mul.ftz.f32 	%f136, %f132, %f135;
	ld.global.f32 	%f137, [ilw_divisor_Yxy+4];
	ld.global.f32 	%f138, [ilw_divisor_Yxy+8];
	fma.rn.ftz.f32 	%f139, %f133, %f137, 0fBEA8F5C3;
	fma.rn.ftz.f32 	%f140, %f139, 0f3F99999A, 0f3EA8F5C3;
	fma.rn.ftz.f32 	%f141, %f134, %f138, 0fBEA8F5C3;
	fma.rn.ftz.f32 	%f142, %f141, 0f3F99999A, 0f3EA8F5C3;
	div.approx.ftz.f32 	%f143, %f136, %f142;
	mul.ftz.f32 	%f144, %f140, %f143;
	sub.ftz.f32 	%f145, %f63, %f140;
	sub.ftz.f32 	%f146, %f145, %f142;
	mul.ftz.f32 	%f147, %f146, %f143;
	mul.ftz.f32 	%f148, %f136, 0fBFC4C986;
	fma.rn.ftz.f32 	%f149, %f144, 0f404F6C8B, %f148;
	fma.rn.ftz.f32 	%f150, %f147, 0fBEFF4880, %f149;
	mul.ftz.f32 	%f151, %f136, 0f3FF020C5;
	fma.rn.ftz.f32 	%f152, %f144, 0fBF781D7E, %f151;
	fma.rn.ftz.f32 	%f153, %f147, 0f3D2A64C3, %f152;
	mul.ftz.f32 	%f154, %f136, 0fBE50E560;
	fma.rn.ftz.f32 	%f155, %f144, 0f3D63BCD3, %f154;
	fma.rn.ftz.f32 	%f156, %f147, 0f3F874BC7, %f155;
	mul.ftz.f32 	%f202, %f150, 0f3A83126F;
	mul.ftz.f32 	%f203, %f153, 0f3A83126F;
	mul.ftz.f32 	%f204, %f156, 0f3A83126F;
	ld.global.f32 	%f205, [ray+12];

BB3_7:
	abs.ftz.f32 	%f157, %f4;
	fma.rn.ftz.f32 	%f158, %f157, 0f40000000, 0f3F800000;
	mov.f32 	%f159, 0f40400000;
	div.approx.ftz.f32 	%f160, %f158, %f159;
	mul.ftz.f32 	%f161, %f160, 0f41700000;
	sub.ftz.f32 	%f162, %f161, %f202;
	sub.ftz.f32 	%f163, %f161, %f203;
	sub.ftz.f32 	%f164, %f161, %f204;
	fma.rn.ftz.f32 	%f165, %f162, %f7, %f202;
	fma.rn.ftz.f32 	%f166, %f163, %f7, %f203;
	fma.rn.ftz.f32 	%f167, %f164, %f7, %f204;
	ld.global.f32 	%f168, [sky_scale];
	mul.ftz.f32 	%f169, %f165, %f168;
	mul.ftz.f32 	%f170, %f166, %f168;
	mul.ftz.f32 	%f171, %f167, %f168;
	st.global.f32 	[lwrrent_prd+20], %f171;
	st.global.f32 	[lwrrent_prd+16], %f170;
	st.global.f32 	[lwrrent_prd+12], %f169;

BB3_8:
	ld.global.f32 	%f172, [directional_light];
	ld.global.f32 	%f173, [directional_light+4];
	mul.ftz.f32 	%f174, %f173, %f173;
	fma.rn.ftz.f32 	%f175, %f172, %f172, %f174;
	ld.global.f32 	%f176, [directional_light+8];
	fma.rn.ftz.f32 	%f177, %f176, %f176, %f175;
	sqrt.approx.ftz.f32 	%f178, %f177;
	rcp.approx.ftz.f32 	%f179, %f178;
	mov.f32 	%f180, 0f3F800000;
	mul.ftz.f32 	%f181, %f172, %f179;
	mul.ftz.f32 	%f182, %f173, %f179;
	mul.ftz.f32 	%f183, %f176, %f179;
	mul.ftz.f32 	%f184, %f4, %f182;
	fma.rn.ftz.f32 	%f185, %f205, %f181, %f184;
	fma.rn.ftz.f32 	%f186, %f6, %f183, %f185;
	ld.global.f32 	%f32, [solid_angle];
	mov.f32 	%f187, 0f40C90FDB;
	div.approx.ftz.f32 	%f188, %f32, %f187;
	sub.ftz.f32 	%f189, %f180, %f188;
	setp.leu.ftz.f32	%p7, %f186, %f189;
	@%p7 bra 	BB3_12;

	ld.global.u32 	%r4, [lwrrent_prd+64];
	setp.eq.s32	%p8, %r4, 0;
	@%p8 bra 	BB3_11;

	mov.f32 	%f190, 0f40490FDB;
	div.approx.ftz.f32 	%f191, %f190, %f32;
	ld.global.f32 	%f192, [directional_light_col];
	mul.ftz.f32 	%f193, %f192, %f191;
	ld.global.f32 	%f194, [directional_light_col+4];
	mul.ftz.f32 	%f195, %f194, %f191;
	ld.global.f32 	%f196, [directional_light_col+8];
	mul.ftz.f32 	%f197, %f196, %f191;
	st.global.f32 	[lwrrent_prd+20], %f197;
	st.global.f32 	[lwrrent_prd+16], %f195;
	st.global.f32 	[lwrrent_prd+12], %f193;
	bra.uni 	BB3_12;

BB3_11:
	mov.u32 	%r5, 0;
	st.global.u32 	[lwrrent_prd+20], %r5;
	st.global.u32 	[lwrrent_prd+16], %r5;
	st.global.u32 	[lwrrent_prd+12], %r5;

BB3_12:
	ret;
}

.visible .entry _Z6shadowv(

)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .f32 	%f<6>;
	.reg .s64 	%rd<4>;


	ldu.global.f32 	%f1, [emissive];
	mov.u64 	%rd1, emissive;
	add.s64 	%rd2, %rd1, 4;
	ldu.global.f32 	%f2, [%rd2];
	max.ftz.f32 	%f3, %f1, %f2;
	add.s64 	%rd3, %rd1, 8;
	ldu.global.f32 	%f4, [%rd3];
	max.ftz.f32 	%f5, %f3, %f4;
	setp.neu.ftz.f32	%p1, %f5, 0f00000000;
	@%p1 bra 	BB4_2;

	mov.u16 	%rs1, 1;
	st.global.u8 	[lwrrent_prd_shadow], %rs1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm

BB4_2:
	ret;
}


