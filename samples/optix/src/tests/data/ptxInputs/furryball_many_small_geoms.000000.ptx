//

// Generated by LWPU LWVM Compiler

//

// Compiler Build ID: CL-19324574

// Lwca compilation tools, release 7.0, V7.0.27

// Based on LLVM 3.4svn

//



.version 4.2

.target sm_20

.address_size 64



	// .globl	_Z9exceptiolw

.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;

.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;

.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;

.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;

.global .align 1 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.global .align 1 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};

.global .align 1 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};

.global .align 1 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};

.global .align 1 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};

.global .align 1 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};

.global .align 1 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};

.global .align 1 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};

.global .align 1 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};

.global .align 1 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};

.global .align 1 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};

.global .align 1 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};

.global .align 1 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};

.global .align 1 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};

.global .align 1 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};

.global .align 1 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};

.global .align 1 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};

.global .align 1 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.global .align 1 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};



.visible .entry _Z9exceptiolw(



)

{

	.local .align 8 .b8 	__local_depot0[24];

	.reg .b64 	%SP;

	.reg .b64 	%SPL;

	.reg .pred 	%p<75>;

	.reg .s16 	%rs<4>;

	.reg .s32 	%r<476>;

	.reg .s64 	%rd<157>;





	mov.u64 	%rd156, __local_depot0;

	cvta.local.u64 	%SP, %rd156;

	// inline asm

	call (%r140), _rt_get_exception_code, ();

	// inline asm

	setp.eq.s32	%p1, %r140, 1020;

	@%p1 bra 	BB0_110;

	bra.uni 	BB0_1;



BB0_110:

	ld.volatile.global.u32 	%r136, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r137, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r138, [_ZN21rti_internal_register14reg_rayIndex_zE];

	// inline asm

	call (%r431), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p73, %r431, 0;

	@%p73 bra 	BB0_113;



	mov.u64 	%rd136, $str;

	cvta.global.u64 	%rd135, %rd136;

	mov.u32 	%r433, 92;

	// inline asm

	call (%r432), _rt_print_start_64, (%rd135, %r433);

	// inline asm

	setp.eq.s32	%p74, %r432, 0;

	@%p74 bra 	BB0_113;



	mov.u32 	%r442, 0;

	// inline asm

	call (), _rt_print_write32, (%r442, %r432);

	// inline asm

	add.s32 	%r437, %r432, 4;

	// inline asm

	call (), _rt_print_write32, (%r136, %r437);

	// inline asm

	add.s32 	%r439, %r432, 8;

	// inline asm

	call (), _rt_print_write32, (%r442, %r439);

	// inline asm

	add.s32 	%r441, %r432, 12;

	// inline asm

	call (), _rt_print_write32, (%r137, %r441);

	// inline asm

	add.s32 	%r443, %r432, 16;

	// inline asm

	call (), _rt_print_write32, (%r442, %r443);

	// inline asm

	add.s32 	%r445, %r432, 20;

	// inline asm

	call (), _rt_print_write32, (%r138, %r445);

	// inline asm

	bra.uni 	BB0_113;



BB0_1:

	setp.eq.s32	%p2, %r140, 1021;

	@%p2 bra 	BB0_75;

	bra.uni 	BB0_2;



BB0_75:

	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail0E];

	ld.volatile.global.u32 	%r69, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r70, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r71, [_ZN21rti_internal_register14reg_rayIndex_zE];

	ld.volatile.global.u64 	%rd26, [_ZN21rti_internal_register24reg_exception_64_detail0E];

	ld.volatile.global.u32 	%r72, [_ZN21rti_internal_register21reg_exception_detail0E];

	ld.volatile.global.u64 	%rd27, [_ZN21rti_internal_register24reg_exception_64_detail1E];

	mov.u64 	%rd113, 1;

	setp.lt.u32	%p54, %r68, 2;

	mov.u64 	%rd146, %rd113;

	@%p54 bra 	BB0_77;



	ld.volatile.global.u64 	%rd28, [_ZN21rti_internal_register24reg_exception_64_detail2E];

	mov.u64 	%rd146, %rd28;



BB0_77:

	mov.u64 	%rd29, %rd146;

	setp.lt.u32	%p55, %r68, 3;

	mov.u64 	%rd145, %rd113;

	@%p55 bra 	BB0_79;



	ld.volatile.global.u64 	%rd145, [_ZN21rti_internal_register24reg_exception_64_detail3E];



BB0_79:

	add.u64 	%rd117, %SP, 0;

	cvta.to.local.u64 	%rd154, %rd117;

	ld.volatile.global.u32 	%r73, [_ZN21rti_internal_register21reg_exception_detail1E];

	ld.volatile.global.u64 	%rd33, [_ZN21rti_internal_register24reg_exception_64_detail4E];

	ld.volatile.global.u64 	%rd34, [_ZN21rti_internal_register24reg_exception_64_detail5E];

	ld.volatile.global.u64 	%rd35, [_ZN21rti_internal_register24reg_exception_64_detail6E];

	// inline asm

	call (%r351), _rt_print_active, ();

	// inline asm

	mov.u64 	%rd148, $str1;

	cvta.global.u64 	%rd147, %rd148;

	setp.eq.s32	%p56, %r351, 0;

	@%p56 bra 	BB0_113;



BB0_80:

	mov.u64 	%rd37, %rd148;

	add.s64 	%rd147, %rd147, 1;

	add.s64 	%rd148, %rd37, 1;

	ld.global.u8 	%rs3, [%rd37+1];

	setp.ne.s16	%p57, %rs3, 0;

	@%p57 bra 	BB0_80;



	mov.u64 	%rd119, $str1;

	cvta.global.u64 	%rd118, %rd119;

	sub.s64 	%rd120, %rd147, %rd118;

	cvt.u32.u64	%r354, %rd120;

	mov.u32 	%r355, 8;

	mov.u32 	%r356, 4;

	max.u32 	%r357, %r356, %r355;

	add.s32 	%r358, %r354, 76;

	and.b32  	%r359, %r358, -4;

	mad.lo.s32 	%r353, %r357, 7, %r359;

	// inline asm

	call (%r352), _rt_print_start_64, (%rd118, %r353);

	// inline asm

	setp.eq.s32	%p58, %r352, 0;

	@%p58 bra 	BB0_113;



	mov.u32 	%r368, 0;

	// inline asm

	call (), _rt_print_write32, (%r368, %r352);

	// inline asm

	add.s32 	%r363, %r352, 4;

	// inline asm

	call (), _rt_print_write32, (%r69, %r363);

	// inline asm

	add.s32 	%r365, %r352, 8;

	// inline asm

	call (), _rt_print_write32, (%r368, %r365);

	// inline asm

	add.s32 	%r367, %r352, 12;

	// inline asm

	call (), _rt_print_write32, (%r70, %r367);

	// inline asm

	add.s32 	%r369, %r352, 16;

	// inline asm

	call (), _rt_print_write32, (%r368, %r369);

	// inline asm

	add.s32 	%r371, %r352, 20;

	// inline asm

	call (), _rt_print_write32, (%r71, %r371);

	// inline asm

	st.local.u64 	[%rd154], %rd26;

	add.s32 	%r373, %r352, 24;

	mov.u32 	%r475, 1;

	// inline asm

	call (), _rt_print_write32, (%r475, %r373);

	// inline asm

	max.s32 	%r75, %r356, %r355;

	shr.s32 	%r376, %r75, 31;

	shr.u32 	%r377, %r376, 30;

	add.s32 	%r378, %r75, %r377;

	shr.s32 	%r76, %r378, 2;

	setp.lt.s32	%p59, %r75, 4;

	@%p59 bra 	BB0_85;



	cvta.to.local.u64 	%rd149, %rd117;

	cvt.u32.u64	%r456, %rd26;

	add.s32 	%r455, %r352, 28;

	mov.u32 	%r457, 1;

	bra.uni 	BB0_84;



BB0_109:

	add.s64 	%rd149, %rd42, 4;

	ld.local.u32 	%r456, [%rd42+4];

	add.s32 	%r457, %r457, 1;

	add.s32 	%r455, %r455, 4;



BB0_84:

	mov.u32 	%r80, %r456;

	mov.u64 	%rd42, %rd149;

	// inline asm

	call (), _rt_print_write32, (%r80, %r455);

	// inline asm

	setp.lt.s32	%p60, %r457, %r76;

	@%p60 bra 	BB0_109;



BB0_85:

	add.s32 	%r388, %r352, %r75;

	add.s32 	%r82, %r388, 28;

	// inline asm

	call (), _rt_print_write32, (%r368, %r82);

	// inline asm

	add.s32 	%r385, %r388, 32;

	// inline asm

	call (), _rt_print_write32, (%r72, %r385);

	// inline asm

	add.s32 	%r387, %r388, 36;

	st.local.u64 	[%rd154], %rd27;

	// inline asm

	call (), _rt_print_write32, (%r475, %r387);

	// inline asm

	@%p59 bra 	BB0_88;



	cvta.to.local.u64 	%rd150, %rd117;

	cvt.u32.u64	%r459, %rd27;

	add.s32 	%r458, %r388, 40;

	mov.u32 	%r460, 1;

	bra.uni 	BB0_87;



BB0_108:

	add.s64 	%rd150, %rd45, 4;

	ld.local.u32 	%r459, [%rd45+4];

	add.s32 	%r460, %r460, 1;

	add.s32 	%r458, %r458, 4;



BB0_87:

	mov.u32 	%r86, %r459;

	mov.u64 	%rd45, %rd150;

	// inline asm

	call (), _rt_print_write32, (%r86, %r458);

	// inline asm

	setp.lt.s32	%p62, %r460, %r76;

	@%p62 bra 	BB0_108;



BB0_88:

	st.local.u64 	[%rd154], %rd29;

	add.s32 	%r395, %r75, %r82;

	add.s32 	%r88, %r395, -28;

	add.s32 	%r394, %r395, 12;

	// inline asm

	call (), _rt_print_write32, (%r475, %r394);

	// inline asm

	@%p59 bra 	BB0_91;



	cvta.to.local.u64 	%rd151, %rd117;

	cvt.u32.u64	%r462, %rd29;

	mad.lo.s32 	%r397, %r75, 2, %r352;

	add.s32 	%r461, %r397, 44;

	mov.u32 	%r463, 1;

	bra.uni 	BB0_90;



BB0_107:

	add.s64 	%rd151, %rd48, 4;

	ld.local.u32 	%r462, [%rd48+4];

	add.s32 	%r463, %r463, 1;

	add.s32 	%r461, %r461, 4;



BB0_90:

	mov.u32 	%r92, %r462;

	mov.u64 	%rd48, %rd151;

	// inline asm

	call (), _rt_print_write32, (%r92, %r461);

	// inline asm

	setp.lt.s32	%p64, %r463, %r76;

	@%p64 bra 	BB0_107;



BB0_91:

	st.local.u64 	[%rd154], %rd145;

	add.s32 	%r402, %r75, %r88;

	add.s32 	%r401, %r402, 44;

	// inline asm

	call (), _rt_print_write32, (%r475, %r401);

	// inline asm

	@%p59 bra 	BB0_94;



	cvta.to.local.u64 	%rd152, %rd117;

	cvt.u32.u64	%r465, %rd145;

	mad.lo.s32 	%r404, %r75, 3, %r352;

	add.s32 	%r464, %r404, 48;

	mov.u32 	%r466, 1;

	bra.uni 	BB0_93;



BB0_106:

	add.s64 	%rd152, %rd51, 4;

	ld.local.u32 	%r465, [%rd51+4];

	add.s32 	%r466, %r466, 1;

	add.s32 	%r464, %r464, 4;



BB0_93:

	mov.u32 	%r97, %r465;

	mov.u64 	%rd51, %rd152;

	// inline asm

	call (), _rt_print_write32, (%r97, %r464);

	// inline asm

	setp.lt.s32	%p66, %r466, %r76;

	@%p66 bra 	BB0_106;



BB0_94:

	mad.lo.s32 	%r99, %r75, 2, %r88;

	add.s32 	%r408, %r99, 48;

	// inline asm

	call (), _rt_print_write32, (%r368, %r408);

	// inline asm

	add.s32 	%r410, %r99, 52;

	// inline asm

	call (), _rt_print_write32, (%r73, %r410);

	// inline asm

	st.local.u64 	[%rd154], %rd33;

	add.s32 	%r412, %r99, 56;

	// inline asm

	call (), _rt_print_write32, (%r475, %r412);

	// inline asm

	@%p59 bra 	BB0_97;



	cvta.to.local.u64 	%rd153, %rd117;

	cvt.u32.u64	%r468, %rd33;

	mad.lo.s32 	%r414, %r75, 4, %r352;

	add.s32 	%r467, %r414, 60;

	mov.u32 	%r469, 1;

	bra.uni 	BB0_96;



BB0_105:

	add.s64 	%rd153, %rd54, 4;

	ld.local.u32 	%r468, [%rd54+4];

	add.s32 	%r469, %r469, 1;

	add.s32 	%r467, %r467, 4;



BB0_96:

	mov.u32 	%r103, %r468;

	mov.u64 	%rd54, %rd153;

	// inline asm

	call (), _rt_print_write32, (%r103, %r467);

	// inline asm

	setp.lt.s32	%p68, %r469, %r76;

	@%p68 bra 	BB0_105;



BB0_97:

	st.local.u64 	[%rd154], %rd34;

	add.s32 	%r419, %r75, %r99;

	add.s32 	%r418, %r419, 60;

	// inline asm

	call (), _rt_print_write32, (%r475, %r418);

	// inline asm

	@%p59 bra 	BB0_100;



	cvt.u32.u64	%r471, %rd34;

	mad.lo.s32 	%r421, %r75, 5, %r352;

	add.s32 	%r470, %r421, 64;

	mov.u32 	%r472, 1;

	bra.uni 	BB0_99;



BB0_104:

	add.s64 	%rd154, %rd57, 4;

	ld.local.u32 	%r471, [%rd57+4];

	add.s32 	%r472, %r472, 1;

	add.s32 	%r470, %r470, 4;



BB0_99:

	mov.u32 	%r108, %r471;

	mov.u64 	%rd57, %rd154;

	// inline asm

	call (), _rt_print_write32, (%r108, %r470);

	// inline asm

	setp.lt.s32	%p70, %r472, %r76;

	@%p70 bra 	BB0_104;



BB0_100:

	add.u64 	%rd132, %SP, 16;

	cvta.to.local.u64 	%rd155, %rd132;

	st.local.u64 	[%rd155], %rd35;

	mad.lo.s32 	%r426, %r75, 2, %r99;

	add.s32 	%r425, %r426, 64;

	// inline asm

	call (), _rt_print_write32, (%r475, %r425);

	// inline asm

	@%p59 bra 	BB0_113;



	cvt.u32.u64	%r474, %rd35;

	mad.lo.s32 	%r428, %r75, 6, %r352;

	add.s32 	%r473, %r428, 68;

	bra.uni 	BB0_102;



BB0_103:

	add.s64 	%rd155, %rd59, 4;

	ld.local.u32 	%r474, [%rd59+4];

	add.s32 	%r475, %r475, 1;

	add.s32 	%r473, %r473, 4;



BB0_102:

	mov.u32 	%r113, %r474;

	mov.u64 	%rd59, %rd155;

	// inline asm

	call (), _rt_print_write32, (%r113, %r473);

	// inline asm

	setp.ge.s32	%p72, %r475, %r76;

	@%p72 bra 	BB0_113;

	bra.uni 	BB0_103;



BB0_2:

	setp.eq.s32	%p3, %r140, 1006;

	@%p3 bra 	BB0_63;

	bra.uni 	BB0_3;



BB0_63:

	// inline asm

	call (%r334), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p46, %r334, 0;

	@%p46 bra 	BB0_65;



	mov.u64 	%rd106, $str2;

	cvta.global.u64 	%rd105, %rd106;

	mov.u32 	%r336, 44;

	// inline asm

	call (%r335), _rt_print_start_64, (%rd105, %r336);

	// inline asm



BB0_65:

	ld.volatile.global.u32 	%r337, [_ZN21rti_internal_register21reg_exception_detail1E];

	setp.eq.s32	%p47, %r337, 0;

	@%p47 bra 	BB0_73;



	setp.eq.s32	%p48, %r337, 1;

	@%p48 bra 	BB0_70;

	bra.uni 	BB0_67;



BB0_70:

	ld.volatile.global.u32 	%r66, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r341), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p51, %r341, 0;

	@%p51 bra 	BB0_113;



	mov.u64 	%rd110, $str4;

	cvta.global.u64 	%rd109, %rd110;

	mov.u32 	%r343, 68;

	// inline asm

	call (%r342), _rt_print_start_64, (%rd109, %r343);

	// inline asm

	setp.eq.s32	%p52, %r342, 0;

	@%p52 bra 	BB0_113;



	mov.u32 	%r344, 0;

	// inline asm

	call (), _rt_print_write32, (%r344, %r342);

	// inline asm

	add.s32 	%r347, %r342, 4;

	// inline asm

	call (), _rt_print_write32, (%r66, %r347);

	// inline asm

	bra.uni 	BB0_113;



BB0_3:

	setp.eq.s32	%p4, %r140, 1007;

	@%p4 bra 	BB0_49;

	bra.uni 	BB0_4;



BB0_49:

	// inline asm

	call (%r309), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p36, %r309, 0;

	@%p36 bra 	BB0_51;



	mov.u64 	%rd98, $str6;

	cvta.global.u64 	%rd97, %rd98;

	mov.u32 	%r311, 44;

	// inline asm

	call (%r310), _rt_print_start_64, (%rd97, %r311);

	// inline asm



BB0_51:

	ld.volatile.global.u32 	%r312, [_ZN21rti_internal_register21reg_exception_detail1E];

	setp.eq.s32	%p37, %r312, 0;

	@%p37 bra 	BB0_60;



	setp.eq.s32	%p38, %r312, 1;

	@%p38 bra 	BB0_57;

	bra.uni 	BB0_53;



BB0_57:

	ld.volatile.global.u32 	%r62, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r320), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p42, %r320, 0;

	@%p42 bra 	BB0_113;



	mov.u64 	%rd102, $str8;

	cvta.global.u64 	%rd101, %rd102;

	mov.u32 	%r322, 68;

	// inline asm

	call (%r321), _rt_print_start_64, (%rd101, %r322);

	// inline asm

	setp.eq.s32	%p43, %r321, 0;

	@%p43 bra 	BB0_113;



	mov.u32 	%r323, 0;

	// inline asm

	call (), _rt_print_write32, (%r323, %r321);

	// inline asm

	add.s32 	%r326, %r321, 4;

	// inline asm

	call (), _rt_print_write32, (%r62, %r326);

	// inline asm

	bra.uni 	BB0_113;



BB0_4:

	setp.eq.s32	%p5, %r140, 1018;

	@%p5 bra 	BB0_37;

	bra.uni 	BB0_5;



BB0_37:

	// inline asm

	call (%r292), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p28, %r292, 0;

	@%p28 bra 	BB0_39;



	mov.u64 	%rd90, $str10;

	cvta.global.u64 	%rd89, %rd90;

	mov.u32 	%r294, 44;

	// inline asm

	call (%r293), _rt_print_start_64, (%rd89, %r294);

	// inline asm



BB0_39:

	ld.volatile.global.u32 	%r295, [_ZN21rti_internal_register21reg_exception_detail1E];

	setp.eq.s32	%p29, %r295, 0;

	@%p29 bra 	BB0_47;



	setp.eq.s32	%p30, %r295, 1;

	@%p30 bra 	BB0_44;

	bra.uni 	BB0_41;



BB0_44:

	ld.volatile.global.u32 	%r58, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r299), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p33, %r299, 0;

	@%p33 bra 	BB0_113;



	mov.u64 	%rd94, $str12;

	cvta.global.u64 	%rd93, %rd94;

	mov.u32 	%r301, 68;

	// inline asm

	call (%r300), _rt_print_start_64, (%rd93, %r301);

	// inline asm

	setp.eq.s32	%p34, %r300, 0;

	@%p34 bra 	BB0_113;



	mov.u32 	%r302, 0;

	// inline asm

	call (), _rt_print_write32, (%r302, %r300);

	// inline asm

	add.s32 	%r305, %r300, 4;

	// inline asm

	call (), _rt_print_write32, (%r58, %r305);

	// inline asm

	bra.uni 	BB0_113;



BB0_73:

	// inline asm

	call (%r348), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p53, %r348, 0;

	@%p53 bra 	BB0_113;



	mov.u64 	%rd112, $str3;

	cvta.global.u64 	%rd111, %rd112;

	mov.u32 	%r350, 52;

	// inline asm

	call (%r349), _rt_print_start_64, (%rd111, %r350);

	// inline asm

	bra.uni 	BB0_113;



BB0_67:

	setp.ne.s32	%p49, %r337, 2;

	@%p49 bra 	BB0_113;



	// inline asm

	call (%r338), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p50, %r338, 0;

	@%p50 bra 	BB0_113;



	mov.u64 	%rd108, $str5;

	cvta.global.u64 	%rd107, %rd108;

	mov.u32 	%r340, 44;

	// inline asm

	call (%r339), _rt_print_start_64, (%rd107, %r340);

	// inline asm

	bra.uni 	BB0_113;



BB0_5:

	setp.eq.s32	%p6, %r140, 1019;

	@%p6 bra 	BB0_22;

	bra.uni 	BB0_6;



BB0_22:

	add.u64 	%rd80, %SP, 0;

	cvta.to.local.u64 	%rd142, %rd80;

	add.u64 	%rd82, %SP, 8;

	cvta.to.local.u64 	%rd143, %rd82;

	ld.volatile.global.u32 	%r247, [_ZN21rti_internal_register21reg_exception_detail0E];

	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register14reg_rayIndex_zE];

	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];

	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail1E];

	ld.volatile.global.u64 	%rd10, [_ZN21rti_internal_register24reg_exception_64_detail2E];

	// inline asm

	call (%r246), _rt_print_active, ();

	// inline asm

	mov.u64 	%rd140, $str14;

	cvta.global.u64 	%rd139, %rd140;

	setp.eq.s32	%p19, %r246, 0;

	@%p19 bra 	BB0_113;



BB0_23:

	mov.u64 	%rd12, %rd140;

	add.s64 	%rd139, %rd139, 1;

	add.s64 	%rd140, %rd12, 1;

	ld.global.u8 	%rs2, [%rd12+1];

	setp.ne.s16	%p20, %rs2, 0;

	@%p20 bra 	BB0_23;



	mov.u64 	%rd84, $str14;

	cvta.global.u64 	%rd83, %rd84;

	sub.s64 	%rd85, %rd139, %rd83;

	cvt.u32.u64	%r250, %rd85;

	mov.u32 	%r251, 8;

	mov.u32 	%r252, 4;

	max.u32 	%r253, %r252, %r251;

	add.s32 	%r254, %r250, 44;

	and.b32  	%r255, %r254, -4;

	mad.lo.s32 	%r249, %r253, 3, %r255;

	// inline asm

	call (%r248), _rt_print_start_64, (%rd83, %r249);

	// inline asm

	setp.eq.s32	%p21, %r248, 0;

	@%p21 bra 	BB0_113;



	mov.u32 	%r264, 0;

	// inline asm

	call (), _rt_print_write32, (%r264, %r248);

	// inline asm

	add.s32 	%r259, %r248, 4;

	// inline asm

	call (), _rt_print_write32, (%r27, %r259);

	// inline asm

	add.s32 	%r261, %r248, 8;

	// inline asm

	call (), _rt_print_write32, (%r264, %r261);

	// inline asm

	add.s32 	%r263, %r248, 12;

	// inline asm

	call (), _rt_print_write32, (%r28, %r263);

	// inline asm

	add.s32 	%r265, %r248, 16;

	// inline asm

	call (), _rt_print_write32, (%r264, %r265);

	// inline asm

	add.s32 	%r267, %r248, 20;

	// inline asm

	call (), _rt_print_write32, (%r29, %r267);

	// inline asm

	st.local.u64 	[%rd142], %rd8;

	add.s32 	%r269, %r248, 24;

	mov.u32 	%r454, 1;

	// inline asm

	call (), _rt_print_write32, (%r454, %r269);

	// inline asm

	max.s32 	%r31, %r252, %r251;

	shr.s32 	%r272, %r31, 31;

	shr.u32 	%r273, %r272, 30;

	add.s32 	%r274, %r31, %r273;

	shr.s32 	%r32, %r274, 2;

	setp.lt.s32	%p22, %r31, 4;

	@%p22 bra 	BB0_28;



	cvta.to.local.u64 	%rd141, %rd80;

	cvt.u32.u64	%r447, %rd8;

	add.s32 	%r446, %r248, 28;

	mov.u32 	%r448, 1;

	bra.uni 	BB0_27;



BB0_36:

	add.s64 	%rd141, %rd17, 4;

	ld.local.u32 	%r447, [%rd17+4];

	add.s32 	%r448, %r448, 1;

	add.s32 	%r446, %r446, 4;



BB0_27:

	mov.u32 	%r36, %r447;

	mov.u64 	%rd17, %rd141;

	// inline asm

	call (), _rt_print_write32, (%r36, %r446);

	// inline asm

	setp.lt.s32	%p23, %r448, %r32;

	@%p23 bra 	BB0_36;



BB0_28:

	add.s32 	%r280, %r248, %r31;

	add.s32 	%r38, %r280, 28;

	st.local.u64 	[%rd142], %rd9;

	// inline asm

	call (), _rt_print_write32, (%r454, %r38);

	// inline asm

	@%p22 bra 	BB0_31;



	cvt.u32.u64	%r450, %rd9;

	add.s32 	%r449, %r280, 32;

	mov.u32 	%r451, 1;

	bra.uni 	BB0_30;



BB0_35:

	add.s64 	%rd142, %rd20, 4;

	ld.local.u32 	%r450, [%rd20+4];

	add.s32 	%r451, %r451, 1;

	add.s32 	%r449, %r449, 4;



BB0_30:

	mov.u32 	%r42, %r450;

	mov.u64 	%rd20, %rd142;

	// inline asm

	call (), _rt_print_write32, (%r42, %r449);

	// inline asm

	setp.lt.s32	%p25, %r451, %r32;

	@%p25 bra 	BB0_35;



BB0_31:

	add.s32 	%r287, %r31, %r38;

	add.s32 	%r286, %r287, 4;

	st.local.u64 	[%rd143], %rd10;

	// inline asm

	call (), _rt_print_write32, (%r454, %r286);

	// inline asm

	@%p22 bra 	BB0_113;



	cvt.u32.u64	%r453, %rd10;

	mad.lo.s32 	%r289, %r31, 2, %r248;

	add.s32 	%r452, %r289, 36;

	bra.uni 	BB0_33;



BB0_34:

	add.s64 	%rd143, %rd22, 4;

	ld.local.u32 	%r453, [%rd22+4];

	add.s32 	%r454, %r454, 1;

	add.s32 	%r452, %r452, 4;



BB0_33:

	mov.u32 	%r47, %r453;

	mov.u64 	%rd22, %rd143;

	// inline asm

	call (), _rt_print_write32, (%r47, %r452);

	// inline asm

	setp.ge.s32	%p27, %r454, %r32;

	@%p27 bra 	BB0_113;

	bra.uni 	BB0_34;



BB0_60:

	ld.volatile.global.u32 	%r64, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r327), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p44, %r327, 0;

	@%p44 bra 	BB0_113;



	mov.u64 	%rd104, $str7;

	cvta.global.u64 	%rd103, %rd104;

	mov.u32 	%r329, 48;

	// inline asm

	call (%r328), _rt_print_start_64, (%rd103, %r329);

	// inline asm

	setp.eq.s32	%p45, %r328, 0;

	@%p45 bra 	BB0_113;



	mov.u32 	%r330, 0;

	// inline asm

	call (), _rt_print_write32, (%r330, %r328);

	// inline asm

	add.s32 	%r333, %r328, 4;

	// inline asm

	call (), _rt_print_write32, (%r64, %r333);

	// inline asm

	bra.uni 	BB0_113;



BB0_53:

	setp.ne.s32	%p39, %r312, 2;

	@%p39 bra 	BB0_113;



	ld.volatile.global.u32 	%r60, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r313), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p40, %r313, 0;

	@%p40 bra 	BB0_113;



	mov.u64 	%rd100, $str9;

	cvta.global.u64 	%rd99, %rd100;

	mov.u32 	%r315, 48;

	// inline asm

	call (%r314), _rt_print_start_64, (%rd99, %r315);

	// inline asm

	setp.eq.s32	%p41, %r314, 0;

	@%p41 bra 	BB0_113;



	mov.u32 	%r316, 0;

	// inline asm

	call (), _rt_print_write32, (%r316, %r314);

	// inline asm

	add.s32 	%r319, %r314, 4;

	// inline asm

	call (), _rt_print_write32, (%r60, %r319);

	// inline asm

	bra.uni 	BB0_113;



BB0_6:

	setp.eq.s32	%p7, %r140, 1022;

	@%p7 bra 	BB0_18;

	bra.uni 	BB0_7;



BB0_18:

	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register14reg_rayIndex_zE];

	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail0E];

	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail1E];

	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail2E];

	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail3E];

	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail4E];

	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register21reg_exception_detail5E];

	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register21reg_exception_detail6E];

	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register21reg_exception_detail7E];

	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail8E];

	// inline asm

	call (%r193), _rt_print_active, ();

	// inline asm

	mov.u64 	%rd138, $str15;

	cvta.global.u64 	%rd137, %rd138;

	setp.eq.s32	%p16, %r193, 0;

	@%p16 bra 	BB0_113;



BB0_19:

	mov.u64 	%rd2, %rd138;

	add.s64 	%rd137, %rd137, 1;

	add.s64 	%rd138, %rd2, 1;

	ld.global.u8 	%rs1, [%rd2+1];

	setp.ne.s16	%p17, %rs1, 0;

	@%p17 bra 	BB0_19;



	mov.u64 	%rd76, $str15;

	cvta.global.u64 	%rd75, %rd76;

	sub.s64 	%rd77, %rd137, %rd75;

	cvt.u32.u64	%r196, %rd77;

	add.s32 	%r197, %r196, 104;

	and.b32  	%r195, %r197, -4;

	// inline asm

	call (%r194), _rt_print_start_64, (%rd75, %r195);

	// inline asm

	setp.eq.s32	%p18, %r194, 0;

	@%p18 bra 	BB0_113;



	mov.u32 	%r234, 0;

	// inline asm

	call (), _rt_print_write32, (%r234, %r194);

	// inline asm

	add.s32 	%r201, %r194, 4;

	// inline asm

	call (), _rt_print_write32, (%r14, %r201);

	// inline asm

	add.s32 	%r203, %r194, 8;

	// inline asm

	call (), _rt_print_write32, (%r234, %r203);

	// inline asm

	add.s32 	%r205, %r194, 12;

	// inline asm

	call (), _rt_print_write32, (%r15, %r205);

	// inline asm

	add.s32 	%r207, %r194, 16;

	// inline asm

	call (), _rt_print_write32, (%r234, %r207);

	// inline asm

	add.s32 	%r209, %r194, 20;

	// inline asm

	call (), _rt_print_write32, (%r16, %r209);

	// inline asm

	add.s32 	%r211, %r194, 24;

	mov.u32 	%r242, 2;

	// inline asm

	call (), _rt_print_write32, (%r242, %r211);

	// inline asm

	add.s32 	%r213, %r194, 28;

	// inline asm

	call (), _rt_print_write32, (%r17, %r213);

	// inline asm

	add.s32 	%r215, %r194, 32;

	// inline asm

	call (), _rt_print_write32, (%r242, %r215);

	// inline asm

	add.s32 	%r217, %r194, 36;

	// inline asm

	call (), _rt_print_write32, (%r18, %r217);

	// inline asm

	add.s32 	%r219, %r194, 40;

	// inline asm

	call (), _rt_print_write32, (%r242, %r219);

	// inline asm

	add.s32 	%r221, %r194, 44;

	// inline asm

	call (), _rt_print_write32, (%r19, %r221);

	// inline asm

	add.s32 	%r223, %r194, 48;

	// inline asm

	call (), _rt_print_write32, (%r242, %r223);

	// inline asm

	add.s32 	%r225, %r194, 52;

	// inline asm

	call (), _rt_print_write32, (%r20, %r225);

	// inline asm

	add.s32 	%r227, %r194, 56;

	// inline asm

	call (), _rt_print_write32, (%r242, %r227);

	// inline asm

	add.s32 	%r229, %r194, 60;

	// inline asm

	call (), _rt_print_write32, (%r21, %r229);

	// inline asm

	add.s32 	%r231, %r194, 64;

	// inline asm

	call (), _rt_print_write32, (%r242, %r231);

	// inline asm

	add.s32 	%r233, %r194, 68;

	// inline asm

	call (), _rt_print_write32, (%r22, %r233);

	// inline asm

	add.s32 	%r235, %r194, 72;

	// inline asm

	call (), _rt_print_write32, (%r234, %r235);

	// inline asm

	add.s32 	%r237, %r194, 76;

	// inline asm

	call (), _rt_print_write32, (%r23, %r237);

	// inline asm

	add.s32 	%r239, %r194, 80;

	// inline asm

	call (), _rt_print_write32, (%r242, %r239);

	// inline asm

	add.s32 	%r241, %r194, 84;

	// inline asm

	call (), _rt_print_write32, (%r24, %r241);

	// inline asm

	add.s32 	%r243, %r194, 88;

	// inline asm

	call (), _rt_print_write32, (%r242, %r243);

	// inline asm

	add.s32 	%r245, %r194, 92;

	// inline asm

	call (), _rt_print_write32, (%r25, %r245);

	// inline asm

	bra.uni 	BB0_113;



BB0_47:

	// inline asm

	call (%r306), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p35, %r306, 0;

	@%p35 bra 	BB0_113;



	mov.u64 	%rd96, $str11;

	cvta.global.u64 	%rd95, %rd96;

	mov.u32 	%r308, 48;

	// inline asm

	call (%r307), _rt_print_start_64, (%rd95, %r308);

	// inline asm

	bra.uni 	BB0_113;



BB0_41:

	setp.ne.s32	%p31, %r295, 2;

	@%p31 bra 	BB0_113;



	// inline asm

	call (%r296), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p32, %r296, 0;

	@%p32 bra 	BB0_113;



	mov.u64 	%rd92, $str13;

	cvta.global.u64 	%rd91, %rd92;

	mov.u32 	%r298, 44;

	// inline asm

	call (%r297), _rt_print_start_64, (%rd91, %r298);

	// inline asm

	bra.uni 	BB0_113;



BB0_7:

	setp.eq.s32	%p8, %r140, 1023;

	@%p8 bra 	BB0_15;

	bra.uni 	BB0_8;



BB0_15:

	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_zE];

	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register21reg_exception_detail0E];

	// inline asm

	call (%r174), _rt_print_active, ();

	// inline asm

	setp.eq.s32	%p14, %r174, 0;

	@%p14 bra 	BB0_113;



	mov.u64 	%rd72, $str16;

	cvta.global.u64 	%rd71, %rd72;

	mov.u32 	%r176, 120;

	// inline asm

	call (%r175), _rt_print_start_64, (%rd71, %r176);

	// inline asm

	setp.eq.s32	%p15, %r175, 0;

	@%p15 bra 	BB0_113;



	mov.u32 	%r189, 0;

	// inline asm

	call (), _rt_print_write32, (%r189, %r175);

	// inline asm

	add.s32 	%r180, %r175, 4;

	// inline asm

	call (), _rt_print_write32, (%r9, %r180);

	// inline asm

	add.s32 	%r182, %r175, 8;

	// inline asm

	call (), _rt_print_write32, (%r189, %r182);

	// inline asm

	add.s32 	%r184, %r175, 12;

	// inline asm

	call (), _rt_print_write32, (%r10, %r184);

	// inline asm

	add.s32 	%r186, %r175, 16;

	// inline asm

	call (), _rt_print_write32, (%r189, %r186);

	// inline asm

	add.s32 	%r188, %r175, 20;

	// inline asm

	call (), _rt_print_write32, (%r11, %r188);

	// inline asm

	add.s32 	%r190, %r175, 24;

	// inline asm

	call (), _rt_print_write32, (%r189, %r190);

	// inline asm

	add.s32 	%r192, %r175, 28;

	// inline asm

	call (), _rt_print_write32, (%r12, %r192);

	// inline asm

	bra.uni 	BB0_113;



BB0_8:

	add.s32 	%r2, %r140, -1024;

	setp.lt.u32	%p9, %r2, 64512;

	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];

	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];

	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];

	// inline asm

	call (%r141), _rt_print_active, ();

	// inline asm

	@%p9 bra 	BB0_12;

	bra.uni 	BB0_9;



BB0_12:

	setp.eq.s32	%p12, %r141, 0;

	@%p12 bra 	BB0_113;



	mov.u64 	%rd70, $str17;

	cvta.global.u64 	%rd69, %rd70;

	mov.u32 	%r157, 96;

	// inline asm

	call (%r156), _rt_print_start_64, (%rd69, %r157);

	// inline asm

	setp.eq.s32	%p13, %r156, 0;

	@%p13 bra 	BB0_113;



	mov.u32 	%r170, 0;

	// inline asm

	call (), _rt_print_write32, (%r170, %r156);

	// inline asm

	add.s32 	%r161, %r156, 4;

	// inline asm

	call (), _rt_print_write32, (%r2, %r161);

	// inline asm

	add.s32 	%r163, %r156, 8;

	// inline asm

	call (), _rt_print_write32, (%r170, %r163);

	// inline asm

	add.s32 	%r165, %r156, 12;

	// inline asm

	call (), _rt_print_write32, (%r3, %r165);

	// inline asm

	add.s32 	%r167, %r156, 16;

	// inline asm

	call (), _rt_print_write32, (%r170, %r167);

	// inline asm

	add.s32 	%r169, %r156, 20;

	// inline asm

	call (), _rt_print_write32, (%r4, %r169);

	// inline asm

	add.s32 	%r171, %r156, 24;

	// inline asm

	call (), _rt_print_write32, (%r170, %r171);

	// inline asm

	add.s32 	%r173, %r156, 28;

	// inline asm

	call (), _rt_print_write32, (%r5, %r173);

	// inline asm

	bra.uni 	BB0_113;



BB0_9:

	setp.eq.s32	%p10, %r141, 0;

	@%p10 bra 	BB0_113;



	mov.u64 	%rd68, $str18;

	cvta.global.u64 	%rd67, %rd68;

	mov.u32 	%r143, 84;

	// inline asm

	call (%r142), _rt_print_start_64, (%rd67, %r143);

	// inline asm

	setp.eq.s32	%p11, %r142, 0;

	@%p11 bra 	BB0_113;



	mov.u32 	%r152, 0;

	// inline asm

	call (), _rt_print_write32, (%r152, %r142);

	// inline asm

	add.s32 	%r147, %r142, 4;

	// inline asm

	call (), _rt_print_write32, (%r3, %r147);

	// inline asm

	add.s32 	%r149, %r142, 8;

	// inline asm

	call (), _rt_print_write32, (%r152, %r149);

	// inline asm

	add.s32 	%r151, %r142, 12;

	// inline asm

	call (), _rt_print_write32, (%r4, %r151);

	// inline asm

	add.s32 	%r153, %r142, 16;

	// inline asm

	call (), _rt_print_write32, (%r152, %r153);

	// inline asm

	add.s32 	%r155, %r142, 20;

	// inline asm

	call (), _rt_print_write32, (%r5, %r155);

	// inline asm



BB0_113:

	ret;

}





