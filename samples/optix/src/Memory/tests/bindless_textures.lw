#include <optix_device.h>
#include <optix_world.h>

using namespace optix;


rtBuffer<int, 1>   outputInt;
rtBuffer<float, 1> outputFloat;
rtDeclareVariable( int, texId, , );
rtDeclareVariable( int, x, , );
rtDeclareVariable( int, y, , );
rtDeclareVariable( int, z, , );
rtTextureSampler<int, 1, lwdaReadModeElementType> boundTexSampler;

RT_PROGRAM void readFromBoundTextureInt1D()
{
    outputInt[0] = 0;
    int value    = tex1D( boundTexSampler, x );
    outputInt[0] = value;
}

RT_PROGRAM void readFromBindlessTextureInt1D()
{
    outputInt[0] = 0;
    int value    = rtTex1D<int>( texId, x );
    outputInt[0] = value;
}

RT_PROGRAM void readFromBindlessTextureInt2D()
{
    outputInt[0] = 0;
    int value    = rtTex2D<int>( texId, x, y );
    outputInt[0] = value;
}

RT_PROGRAM void readFromBindlessTextureInt3D()
{
    outputInt[0] = 0;
    int value    = rtTex3D<int>( texId, x, y, z );
    outputInt[0] = value;
}

RT_PROGRAM void readFromBindlessTextureFloat1D()
{
    outputFloat[0] = 0;
    float value    = rtTex1D<float>( texId, x );
    outputFloat[0] = value;
}

RT_PROGRAM void readFromBindlessTextureFloat2D()
{
    outputFloat[0] = 0;
    float value    = rtTex2D<float>( texId, x, y );
    outputFloat[0] = value;
}

RT_PROGRAM void readFromBindlessTextureFloat3D()
{
    outputFloat[0] = 0;
    float value    = rtTex3D<float>( texId, x, y, z );
    outputFloat[0] = value;
}
