// Copyright (c) 2017, LWPU CORPORATION.
// TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED
// *AS IS* AND LWPU AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS
// OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY
// AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL LWPU OR ITS SUPPLIERS
// BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES
// WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS,
// BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY OTHER PELWNIARY LOSS)
// ARISING OUT OF THE USE OF OR INABILITY TO USE THIS SOFTWARE, EVEN IF LWPU HAS
// BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES

#include <optix_world.h>

using namespace optix;

rtBuffer<int, 1> buf0;
rtBuffer<int, 1> buf1;
rtBuffer<int, 1> result;
rtDeclareVariable( float3, shading_normal, attribute shading_normal, );
rtTextureSampler<uchar4, 2, lwdaReadModeNormalizedFloat> tex0;

rtDeclareVariable( uint2, launch_index, rtLaunchIndex, );
rtDeclareVariable( float3, draw_color, , );

RT_PROGRAM void test_prog()
{
    result[1] = buf0.size();
    result[0] = buf0[0] + buf0[launch_index.x] + buf1[launch_index.x] + launch_index.x
                + (int)( draw_color.x * tex2D( tex0, 0.0f, 0.0f ).x * 255 );
}
