
// PTX file begin
.version 4.0
.target sm_30
.target texmode_independent

.extern .func (.param .b32 retval) vprintf(.param .b32 param0, .param .b32 param1);

.const .align 8 .b8 __internal_i2opi_d[144] = { 0x6BFB5FB11F8D5D08, 0x6BFB5FB11F8D5D, 0x6BFB5FB11F8D, 0x6BFB5FB11F, 0x6BFB5FB1, 0x6BFB5F, 0x6BFB, 0x6B, 0x3D0739F78A5292EA, 0x3D0739F78A5292, 0x3D0739F78A52, 0x3D0739F78A, 0x3D0739F7, 0x3D0739, 0x3D07, 0x3D, 0x7527BAC7EBE5F17B, 0x7527BAC7EBE5F1, 0x7527BAC7EBE5, 0x7527BAC7EB, 0x7527BAC7, 0x7527BA, 0x7527, 0x75, 0x4F463F669E5FEA2D, 0x4F463F669E5FEA, 0x4F463F669E5F, 0x4F463F669E, 0x4F463F66, 0x4F463F, 0x4F46, 0x4F, 0x6D367ECF27CB09B7, 0x6D367ECF27CB09, 0x6D367ECF27CB, 0x6D367ECF27, 0x6D367ECF, 0x6D367E, 0x6D36, 0x6D, 0xEF2F118B5A0A6D1F, 0xEF2F118B5A0A6D, 0xEF2F118B5A0A, 0xEF2F118B5A, 0xEF2F118B, 0xEF2F11, 0xEF2F, 0xEF, 0x1FF897FFDE05980F, 0x1FF897FFDE0598, 0x1FF897FFDE05, 0x1FF897FFDE, 0x1FF897FF, 0x1FF897, 0x1FF8, 0x1F, 0x9C845F8BBDF9283B, 0x9C845F8BBDF928, 0x9C845F8BBDF9, 0x9C845F8BBD, 0x9C845F8B, 0x9C845F, 0x9C84, 0x9C, 0x3991D639835339F4, 0x3991D639835339, 0x3991D6398353, 0x3991D63983, 0x3991D639, 0x3991D6, 0x3991, 0x39, 0xE99C7026B45F7E41, 0xE99C7026B45F7E, 0xE99C7026B45F, 0xE99C7026B4, 0xE99C7026, 0xE99C70, 0xE99C, 0xE9, 0xE88235F52EBB4484, 0xE88235F52EBB44, 0xE88235F52EBB, 0xE88235F52E, 0xE88235F5, 0xE88235, 0xE882, 0xE8, 0xFE1DEB1CB129A73E, 0xFE1DEB1CB129A7, 0xFE1DEB1CB129, 0xFE1DEB1CB1, 0xFE1DEB1C, 0xFE1DEB, 0xFE1D, 0xFE, 0x6492EEA09D1921C, 0x6492EEA09D192, 0x6492EEA09D1, 0x6492EEA09, 0x6492EEA, 0x6492E, 0x649, 0x6, 0xB7246E3A424DD2E0, 0xB7246E3A424DD2, 0xB7246E3A424D, 0xB7246E3A42, 0xB7246E3A, 0xB7246E, 0xB724, 0xB7, 0xFE5163ABDEBBC561, 0xFE5163ABDEBBC5, 0xFE5163ABDEBB, 0xFE5163ABDE, 0xFE5163AB, 0xFE5163, 0xFE51, 0xFE, 0xDB6295993C439041, 0xDB6295993C4390, 0xDB6295993C43, 0xDB6295993C, 0xDB629599, 0xDB6295, 0xDB62, 0xDB, 0xFC2757D1F534DDC0, 0xFC2757D1F534DD, 0xFC2757D1F534, 0xFC2757D1F5, 0xFC2757D1, 0xFC2757, 0xFC27, 0xFC, 0xA2F9836E4E441529, 0xA2F9836E4E4415, 0xA2F9836E4E44, 0xA2F9836E4E, 0xA2F9836E, 0xA2F983, 0xA2F9, 0xA2 };
.extern .shared .align 1 .b8 Precompute_shared[];
.global .texref Precompute_tex_0;
.global .texref Precompute_tex_1;
.global .surfref Precompute_surf_2;
.global .samplerref Precompute_samp_0 = { addr_mode_0 = clamp_to_edge, addr_mode_1 = clamp_to_edge, filter_mode = nearest };
.const .align 1 .b8 Precompute_info[144];
.const .align 4 .b8 Precompute_gid_base[64];
.entry Precompute(
	.param .b32 Precompute_surf_array_2,
	.param.b32.ptr.const Precompute_3  /* psf */,
	.param.f32 Precompute_4  /* sum */,
	.param.b32 Precompute_5  /* width */,
	.param.b32 Precompute_6  /* height */,
	.param.b32 Precompute_7  /* shared */
) {
	.reg .b32   r<512>;
	.reg .b64   x<512>;
	.reg .b32   f<512>;
	.reg .pred  p<32>;
	.reg .u32  pp, sp;
	.reg .b64   d<512>;
	mov.u32 r0, %tid.x;
	mov.u32 r1, %ntid.x;
	mov.u32 r2, %ctaid.x;
	mad.lo.u32 r0, r2, r1, r0;
	mov.u32 r1, 0;
	shl.b32 r3, r1, 2;
	mov.u32 r2, Precompute_gid_base;
	add.u32 r3, r3, r2;
	ld.const.u32 r3, [r3 + 0];
	add.u32 r0, r0, r3;
	mov.u32 r3, %tid.y;
	mov.u32 r4, %ntid.y;
	mov.u32 r5, %ctaid.y;
	mad.lo.u32 r4, r5, r4, r3;
	mov.u32 r3, 1;
	shl.b32 r5, r3, 2;
	add.u32 r2, r5, r2;
	ld.const.u32 r2, [r2 + 0];
	add.u32 r2, r4, r2;
	mov.u32 r4, Precompute_info;
	ld.const.u32 r4, [r4];
	mov.u32 r5, Precompute_info;
	setp.ge.s32 p0, r0, r4;
	ld.param.f32 f0, [Precompute_4 + 0];
	ld.param.u32 r4, [Precompute_3 + 0];
	@p0 bra	LBB0_106;
LBB0_1:
	add.u32 r5, r5, 4;
	ld.const.u32 r5, [r5];
	setp.ge.s32 p0, r2, r5;
	@p0 bra	LBB0_106;
LBB0_2:
	ld.const.u32 r7, [r4+8];
	setp.eq.s32 p0, r7, r1;
	mov.f32 f1, 0f00000000 /* 0.000000e+00 */;
	@p0 bra	LBB0_3;
LBB0_4:
	mov.u32 r5, 2;
	mov.u32 r6, 0;
	mov.f32 f2, f1;
	mov.f32 f3, f1;
LBB0_5:
	shl.b32 r8, r1, 2;
	add.u32 r8, r4, r8;
	ld.const.u32 r10, [r8+0];
	ld.const.u32 r9, [r8+4];
	add.u32 r9, r9, r0;
	add.u32 r10, r10, r2;
	cvt.rn.f32.s32 f5, r9;
	cvt.rn.f32.s32 f4, r10;
	tex.2d.v4.f32.f32 {f5, f6, f7, f8}, [Precompute_tex_0, Precompute_samp_0, {f5, f4}];
	add.rn.f32 f3, f3, f7;
	add.rn.f32 f2, f2, f6;
	add.rn.f32 f1, f1, f5;
	setp.lt.s32 p0, r7, r5;
	@p0 bra	LBB0_8;
LBB0_6:
	add.u32 r10, r9, 1;
	mov.u32 r11, r3;
LBB0_7:
	add.u32 r12, r11, r9;
	cvt.rn.f32.s32 f5, r12;
	tex.2d.v4.f32.f32 {f9, f7, f5, f6}, [Precompute_tex_0, Precompute_samp_0, {f5, f4}];
	add.u32 r12, r10, r11;
	cvt.rn.f32.s32 f6, r12;
	tex.2d.v4.f32.f32 {f6, f8, f10, f11}, [Precompute_tex_0, Precompute_samp_0, {f6, f4}];
	add.rn.f32 f1, f1, f9;
	add.rn.f32 f2, f2, f7;
	add.rn.f32 f3, f3, f5;
	add.rn.f32 f3, f3, f10;
	add.rn.f32 f2, f2, f8;
	add.rn.f32 f1, f1, f6;
	add.u32 r11, r11, 2;
	setp.lt.s32 p0, r11, r7;
	@p0 bra	LBB0_7;
LBB0_8:
	add.u32 r1, r1, 3;
	ld.const.u32 r7, [r8+20];
	setp.ne.s32 p0, r7, r6;
	@p0 bra	LBB0_5;
	bra	LBB0_9;
LBB0_3:
	mov.f32 f2, f1;
	mov.f32 f3, f1;
LBB0_9:
	mul.rn.f32 f3, f0, f3;
	mul.rn.f32 f2, f0, f2;
	mul.rn.f32 f0, f0, f1;
	mov.f32 f4, 0f3727C5AC /* 1.000000e-05 */;
	max.f32 f0, f0, f4;
	max.f32 f1, f2, f4;
	max.f32 f3, f3, f4;
	cvt.rn.f32.s32 f2, r0;
	cvt.rn.f32.s32 f4, r2;
	tex.2d.v4.f32.f32 {f2, f5, f4, f6}, [Precompute_tex_1, Precompute_samp_0, {f2, f4}];
	div.approx.f32 f2, f2, f0;
	div.approx.f32 f1, f5, f1;
	div.approx.f32 f0, f4, f3;
	mov.u32 r1, Precompute_info;
	add.u32 r1, r1, 112;
	ld.const.u32 r4, [r1];
	ld.param.u32 r1, [Precompute_surf_array_2];
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB0_99;
LBB0_10:
	mov.u32 r1, Precompute_info;
	add.u32 r1, r1, 108;
	ld.const.u32 r5, [r1];
	mov.u32 r1, Precompute_info;
	add.u32 r1, r1, 132;
	ld.const.u32 r1, [r1];
	mov.u32 r6, Precompute_info;
	add.u32 r6, r6, 120;
	ld.const.u32 r6, [r6];
	and.b32 r6, r6, 31;
	shl.b32 r0, r0, r6;
	mad24.lo.u32 r0, r2, r5, r0;
	ld.param.u32 r2, [Precompute_surf_array_2];
	add.u32 r0, r2, r0;
	mov.u32 r2, 2;
	setp.hi.u32 p0, r4, r2;
	@p0 bra	LBB0_18;
LBB0_11:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r4, r3;
	@p0 bra	LBB0_83;
LBB0_12:
	mov.u32 r5, 1;
	setp.eq.s32 p0, r4, r5;
	@!p0 bra	LBB0_13;
LBB0_45:
	mov.u32 r4, 5;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB0_52;
LBB0_46:
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB0_58;
LBB0_47:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_48;
LBB0_59:
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	st.global.v2.b8 [r0+0], {r1, r2};
	ret;
LBB0_99:
	mov.u32 r1, Precompute_info;
	add.u32 r1, r1, 132;
	ld.const.u32 r1, [r1];
	mov.u32 r3, Precompute_info;
	add.u32 r3, r3, 140;
	ld.const.u32 r3, [r3];
	mov.u32 r5, 0;
	setp.eq.s32 p0, r3, r5;
	@p0 bra	LBB0_103;
LBB0_100:
	mov.u32 r3, 1;
	setp.ne.s32 p0, r4, r3;
	@p0 bra	LBB0_103;
LBB0_101:
	mov.u32 r3, 7;
	setp.ne.s32 p0, r1, r3;
	@p0 bra	LBB0_103;
LBB0_102:
	mov.f32 f3, 0f3F800000 /* 1.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Precompute_surf_2, {r0, r2}], {f0, f1, f2, f3};}
	ret;
LBB0_103:
	mov.u32 r1, 19;
	setp.ne.s32 p0, r4, r1;
	@p0 bra	LBB0_105;
LBB0_104:
	mov.f32 f3, 0f00000000 /* 0.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Precompute_surf_2, {r0, r2}], {f0, f1, f2, f3};}
	ret;
LBB0_18:
	mov.u32 r5, 4;
	setp.hi.u32 p0, r4, r5;
	@p0 bra	LBB0_25;
LBB0_19:
	mov.u32 r3, 3;
	setp.eq.s32 p0, r4, r3;
	@!p0 bra	LBB0_20;
LBB0_62:
	setp.hi.u32 p0, r1, r3;
	@p0 bra	LBB0_66;
LBB0_63:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB0_69;
LBB0_64:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_70;
LBB0_65:
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f0;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB0_105:
	mov.f32 f3, 0f3F800000 /* 1.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Precompute_surf_2, {r0, r2}], {f2, f1, f0, f3};}
	bra	LBB0_106;
LBB0_25:
	mov.u32 r6, 19;
	setp.eq.s32 p0, r4, r6;
	@!p0 bra	LBB0_26;
LBB0_73:
	mov.f32 f3, 0f00000000 /* 0.000000e+00 */;
	setp.lt.f32 p0, f2, f3;
	mov.u32 r1, r3;
	@p0 bra	LBB0_76;
LBB0_74:
	mov.f32 f4, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f2, f4;
	mov.u32 r1, 1072693248;
	@p0 bra	LBB0_76;
LBB0_75:
	mul.rn.f32 f2, f2, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r1, f2;
	shl.b32 r1, r1, 20;
	and.b32 r1, r1, 1072693248;
LBB0_76:
	setp.lt.f32 p0, f1, f3;
	mov.u32 r2, r3;
	@p0 bra	LBB0_79;
LBB0_77:
	mov.f32 f2, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f1, f2;
	mov.u32 r2, 1047552;
	@p0 bra	LBB0_79;
LBB0_78:
	mul.rn.f32 f1, f1, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r2, f1;
	shl.b32 r2, r2, 10;
	and.b32 r2, r2, 1047552;
LBB0_79:
	or.b32 r1, r2, r1;
	setp.lt.f32 p0, f0, f3;
	@p0 bra	LBB0_82;
LBB0_80:
	mov.f32 f1, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f0, f1;
	mov.u32 r3, 1023;
	@p0 bra	LBB0_82;
LBB0_81:
	mul.rn.f32 f0, f0, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r2, f0;
	and.b32 r3, r2, 1023;
LBB0_82:
	or.b32 r1, r1, r3;
	st.global.u32 [r0+0], r1;
	ret;
LBB0_83:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB0_87;
LBB0_84:
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB0_85;
LBB0_90:
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	st.global.u8 [r0+0], r1;
	ret;
LBB0_13:
	setp.eq.s32 p0, r4, r2;
	@!p0 bra	LBB0_106;
LBB0_14:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB0_93;
LBB0_15:
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB0_16;
LBB0_96:
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	st.global.u16 [r0+0], r1;
	ret;
LBB0_20:
	setp.eq.s32 p0, r4, r5;
	@!p0 bra	LBB0_106;
LBB0_21:
	setp.hi.u32 p0, r1, r3;
	@p0 bra	LBB0_38;
LBB0_22:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB0_41;
LBB0_23:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_42;
LBB0_24:
	cvt.rz.f16.f32 r1, f2;
	cvt.rz.f16.f32 r2, f1;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB0_26:
	mov.u32 r6, 5;
	setp.ne.s32 p0, r4, r6;
	@p0 bra	LBB0_106;
LBB0_27:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB0_31;
LBB0_28:
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB0_33;
LBB0_29:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_36;
LBB0_30:
	mov.b32 r1, f2;
	mov.b32 r2, f1;
	st.global.v2.b32 [r0+0], {r1, r2};
	ret;
LBB0_106:
	ret;
LBB0_52:
	mov.u32 r2, 7;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB0_56;
LBB0_53:
	mov.u32 r3, 6;
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB0_54;
LBB0_60:
	mov.f32 f3, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f3;
	mul.rn.f32 f2, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f2;
	mul.rn.f32 f1, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r3, f1;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB0_51;
LBB0_87:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB0_91;
LBB0_88:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_91;
LBB0_89:
	mul.rn.f32 f0, f0, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	bra	LBB0_92;
LBB0_66:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB0_72;
LBB0_67:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB0_70;
LBB0_68:
	add.u32 r1, r1, -8;
	mov.u32 r2, 1;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB0_70;
LBB0_69:
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	st.global.u16 [r0+0], r1;
	ret;
LBB0_85:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_91;
LBB0_86:
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f0;
	st.global.v2.b8 [r0+0], {r1, r2};
	ret;
LBB0_91:
	mul.rn.f32 f2, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f42FE0000 /* 1.270000e+02 */;
LBB0_92:
	cvt.rni.sat.s8.f32 r3, f0;
	mov.f32 f0, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r4, f0;
	st.global.v4.b8 [r0+0], {r1, r2, r3, r4};
	ret;
LBB0_93:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB0_97;
LBB0_94:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_97;
LBB0_95:
	mul.rn.f32 f0, f0, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	bra	LBB0_98;
LBB0_56:
	mov.u32 r2, 19;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB0_61;
LBB0_57:
	add.u32 r1, r1, -8;
	setp.hi.u32 p0, r1, r5;
	@p0 bra	LBB0_49;
LBB0_58:
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	st.global.u8 [r0+0], r1;
	ret;
LBB0_38:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB0_44;
LBB0_39:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB0_42;
LBB0_40:
	add.u32 r1, r1, -8;
	mov.u32 r2, 1;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB0_42;
LBB0_41:
	cvt.rz.f16.f32 r1, f2;
	st.global.u16 [r0+0], r1;
	ret;
LBB0_31:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB0_34;
LBB0_32:
	add.u32 r2, r1, -8;
	mov.u32 r3, 1;
	setp.hi.u32 p0, r2, r3;
	@p0 bra	LBB0_36;
LBB0_33:
	st.global.f32 [r0+0], f2;
	ret;
LBB0_70:
	mul.rn.f32 f2, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f477FFF00 /* 6.553500e+04 */;
	bra	LBB0_71;
LBB0_48:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	bra	LBB0_49;
LBB0_16:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_97;
LBB0_17:
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f0;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB0_97:
	mul.rn.f32 f2, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f46FFFE00 /* 3.276700e+04 */;
LBB0_98:
	cvt.rni.sat.s16.f32 r3, f0;
	mov.f32 f0, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
LBB0_54:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB0_49;
LBB0_55:
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB0_50;
LBB0_49:
	mul.rn.f32 f2, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
LBB0_50:
	cvt.rni.sat.u8.f32 r3, f0;
	mov.f32 f0, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB0_51;
LBB0_72:
	mul.rn.f32 f0, f0, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
LBB0_71:
	cvt.rni.sat.u16.f32 r3, f0;
	mov.f32 f0, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
LBB0_61:
	mov.f32 f3, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f3;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r3, f0;
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
LBB0_51:
	cvt.rni.sat.u8.f32 r4, f0;
	st.global.v4.b8 [r0+0], {r1, r2, r3, r4};
	ret;
LBB0_42:
	cvt.rz.f16.f32 r1, f2;
	cvt.rz.f16.f32 r2, f1;
	cvt.rz.f16.f32 r3, f0;
	bra	LBB0_43;
LBB0_36:
	mov.u32 r2, 7;
	setp.ne.s32 p0, r1, r2;
	@p0 bra	LBB0_34;
LBB0_37:
	mov.b32 r1, f0;
	mov.b32 r2, f1;
	mov.b32 r3, f2;
	bra	LBB0_35;
LBB0_34:
	mov.b32 r1, f2;
	mov.b32 r2, f1;
	mov.b32 r3, f0;
LBB0_35:
	mov.u32 r4, 1065353216;
	st.global.v4.b32 [r0+0], {r1, r2, r3, r4};
	ret;
LBB0_44:
	cvt.rz.f16.f32 r1, f0;
	cvt.rz.f16.f32 r2, f1;
	cvt.rz.f16.f32 r3, f2;
LBB0_43:
	mov.f32 f0, 0f3F800000 /* 1.000000e+00 */;
	cvt.rz.f16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
}
.global .texref Decolwolute_tex_0;
.global .texref Decolwolute_tex_1;
.global .surfref Decolwolute_surf_2;
.global .samplerref Decolwolute_samp_0 = { addr_mode_0 = clamp_to_edge, addr_mode_1 = clamp_to_edge, filter_mode = nearest };
.const .align 1 .b8 Decolwolute_info[144];
.const .align 4 .b8 Decolwolute_gid_base[64];
.entry Decolwolute(
	.param .b32 Decolwolute_surf_array_2,
	.param.b32.ptr.const Decolwolute_3  /* psf */,
	.param.f32 Decolwolute_4  /* psfsum */
) {
	.reg .b32   r<512>;
	.reg .b64   x<512>;
	.reg .b32   f<512>;
	.reg .pred  p<32>;
	.reg .u32  pp, sp;
	.reg .b64   d<512>;
	ld.param.f32 f0, [Decolwolute_4 + 0];
	ld.param.u32 r1, [Decolwolute_3 + 0];
	mov.u32 r0, %tid.x;
	mov.u32 r2, %ntid.x;
	mov.u32 r3, %ctaid.x;
	mad.lo.u32 r0, r3, r2, r0;
	mov.u32 r3, 0;
	shl.b32 r4, r3, 2;
	mov.u32 r2, Decolwolute_gid_base;
	add.u32 r4, r4, r2;
	ld.const.u32 r4, [r4 + 0];
	add.u32 r0, r0, r4;
	mov.u32 r4, %tid.y;
	mov.u32 r5, %ntid.y;
	mov.u32 r6, %ctaid.y;
	mad.lo.u32 r5, r6, r5, r4;
	mov.u32 r4, 1;
	shl.b32 r6, r4, 2;
	add.u32 r2, r6, r2;
	ld.const.u32 r2, [r2 + 0];
	add.u32 r2, r5, r2;
	mov.u32 r5, Decolwolute_info;
	ld.const.u32 r6, [r5];
	mov.u32 r5, Decolwolute_info;
	setp.ge.s32 p0, r0, r6;
	@p0 bra	LBB1_106;
LBB1_1:
	add.u32 r5, r5, 4;
	ld.const.u32 r5, [r5];
	setp.ge.s32 p0, r2, r5;
	@p0 bra	LBB1_106;
LBB1_2:
	ld.const.u32 r7, [r1+8];
	setp.eq.s32 p0, r7, r3;
	mov.f32 f1, 0f00000000 /* 0.000000e+00 */;
	@p0 bra	LBB1_3;
LBB1_4:
	mov.u32 r5, 2;
	mov.u32 r6, 0;
	mov.f32 f2, f1;
	mov.f32 f3, f1;
LBB1_5:
	shl.b32 r8, r3, 2;
	add.u32 r8, r1, r8;
	ld.const.u32 r10, [r8+0];
	ld.const.u32 r9, [r8+4];
	add.u32 r9, r9, r0;
	add.u32 r10, r10, r2;
	cvt.rn.f32.s32 f5, r9;
	cvt.rn.f32.s32 f4, r10;
	tex.2d.v4.f32.f32 {f5, f6, f7, f8}, [Decolwolute_tex_1, Decolwolute_samp_0, {f5, f4}];
	add.rn.f32 f3, f3, f7;
	add.rn.f32 f2, f2, f6;
	add.rn.f32 f1, f1, f5;
	setp.lt.s32 p0, r7, r5;
	@p0 bra	LBB1_8;
LBB1_6:
	add.u32 r10, r9, 1;
	mov.u32 r11, r4;
LBB1_7:
	add.u32 r12, r11, r9;
	cvt.rn.f32.s32 f5, r12;
	tex.2d.v4.f32.f32 {f9, f7, f5, f6}, [Decolwolute_tex_1, Decolwolute_samp_0, {f5, f4}];
	add.u32 r12, r10, r11;
	cvt.rn.f32.s32 f6, r12;
	tex.2d.v4.f32.f32 {f6, f8, f10, f11}, [Decolwolute_tex_1, Decolwolute_samp_0, {f6, f4}];
	add.rn.f32 f1, f1, f9;
	add.rn.f32 f2, f2, f7;
	add.rn.f32 f3, f3, f5;
	add.rn.f32 f3, f3, f10;
	add.rn.f32 f2, f2, f8;
	add.rn.f32 f1, f1, f6;
	add.u32 r11, r11, 2;
	setp.lt.s32 p0, r11, r7;
	@p0 bra	LBB1_7;
LBB1_8:
	add.u32 r3, r3, 3;
	ld.const.u32 r7, [r8+20];
	setp.ne.s32 p0, r7, r6;
	@p0 bra	LBB1_5;
	bra	LBB1_9;
LBB1_3:
	mov.f32 f2, f1;
	mov.f32 f3, f1;
LBB1_9:
	cvt.rn.f32.s32 f4, r0;
	cvt.rn.f32.s32 f5, r2;
	tex.2d.v4.f32.f32 {f5, f6, f4, f7}, [Decolwolute_tex_0, Decolwolute_samp_0, {f4, f5}];
	mul.rn.f32 f3, f0, f3;
	mul.rn.f32 f7, f0, f1;
	mul.rn.f32 f0, f0, f2;
	mul.rn.f32 f1, f0, f6;
	mul.rn.f32 f2, f7, f5;
	mul.rn.f32 f0, f3, f4;
	mov.u32 r1, Decolwolute_info;
	add.u32 r1, r1, 112;
	ld.const.u32 r4, [r1];
	ld.param.u32 r1, [Decolwolute_surf_array_2];
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB1_99;
LBB1_10:
	mov.u32 r1, Decolwolute_info;
	add.u32 r1, r1, 108;
	ld.const.u32 r5, [r1];
	mov.u32 r1, Decolwolute_info;
	add.u32 r1, r1, 132;
	ld.const.u32 r1, [r1];
	mov.u32 r6, Decolwolute_info;
	add.u32 r6, r6, 120;
	ld.const.u32 r6, [r6];
	and.b32 r6, r6, 31;
	shl.b32 r0, r0, r6;
	mad24.lo.u32 r0, r2, r5, r0;
	ld.param.u32 r2, [Decolwolute_surf_array_2];
	add.u32 r0, r2, r0;
	mov.u32 r2, 2;
	setp.hi.u32 p0, r4, r2;
	@p0 bra	LBB1_18;
LBB1_11:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r4, r3;
	@p0 bra	LBB1_83;
LBB1_12:
	mov.u32 r5, 1;
	setp.eq.s32 p0, r4, r5;
	@!p0 bra	LBB1_13;
LBB1_45:
	mov.u32 r4, 5;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB1_52;
LBB1_46:
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB1_58;
LBB1_47:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_48;
LBB1_59:
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	st.global.v2.b8 [r0+0], {r1, r2};
	ret;
LBB1_99:
	mov.u32 r1, Decolwolute_info;
	add.u32 r1, r1, 132;
	ld.const.u32 r1, [r1];
	mov.u32 r3, Decolwolute_info;
	add.u32 r3, r3, 140;
	ld.const.u32 r3, [r3];
	mov.u32 r5, 0;
	setp.eq.s32 p0, r3, r5;
	@p0 bra	LBB1_103;
LBB1_100:
	mov.u32 r3, 1;
	setp.ne.s32 p0, r4, r3;
	@p0 bra	LBB1_103;
LBB1_101:
	mov.u32 r3, 7;
	setp.ne.s32 p0, r1, r3;
	@p0 bra	LBB1_103;
LBB1_102:
	mov.f32 f3, 0f3F800000 /* 1.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Decolwolute_surf_2, {r0, r2}], {f0, f1, f2, f3};}
	ret;
LBB1_103:
	mov.u32 r1, 19;
	setp.ne.s32 p0, r4, r1;
	@p0 bra	LBB1_105;
LBB1_104:
	mov.f32 f3, 0f00000000 /* 0.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Decolwolute_surf_2, {r0, r2}], {f0, f1, f2, f3};}
	ret;
LBB1_18:
	mov.u32 r5, 4;
	setp.hi.u32 p0, r4, r5;
	@p0 bra	LBB1_25;
LBB1_19:
	mov.u32 r3, 3;
	setp.eq.s32 p0, r4, r3;
	@!p0 bra	LBB1_20;
LBB1_62:
	setp.hi.u32 p0, r1, r3;
	@p0 bra	LBB1_66;
LBB1_63:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB1_69;
LBB1_64:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_70;
LBB1_65:
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f0;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB1_105:
	mov.f32 f3, 0f3F800000 /* 1.000000e+00 */;
	{sust.p.2d.v4.b32.trap [Decolwolute_surf_2, {r0, r2}], {f2, f1, f0, f3};}
	bra	LBB1_106;
LBB1_25:
	mov.u32 r6, 19;
	setp.eq.s32 p0, r4, r6;
	@!p0 bra	LBB1_26;
LBB1_73:
	mov.f32 f3, 0f00000000 /* 0.000000e+00 */;
	setp.lt.f32 p0, f2, f3;
	mov.u32 r1, r3;
	@p0 bra	LBB1_76;
LBB1_74:
	mov.f32 f4, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f2, f4;
	mov.u32 r1, 1072693248;
	@p0 bra	LBB1_76;
LBB1_75:
	mul.rn.f32 f2, f2, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r1, f2;
	shl.b32 r1, r1, 20;
	and.b32 r1, r1, 1072693248;
LBB1_76:
	setp.lt.f32 p0, f1, f3;
	mov.u32 r2, r3;
	@p0 bra	LBB1_79;
LBB1_77:
	mov.f32 f2, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f1, f2;
	mov.u32 r2, 1047552;
	@p0 bra	LBB1_79;
LBB1_78:
	mul.rn.f32 f1, f1, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r2, f1;
	shl.b32 r2, r2, 10;
	and.b32 r2, r2, 1047552;
LBB1_79:
	or.b32 r1, r2, r1;
	setp.lt.f32 p0, f0, f3;
	@p0 bra	LBB1_82;
LBB1_80:
	mov.f32 f1, 0f3F800000 /* 1.000000e+00 */;
	setp.gt.f32 p0, f0, f1;
	mov.u32 r3, 1023;
	@p0 bra	LBB1_82;
LBB1_81:
	mul.rn.f32 f0, f0, 0f447FC000 /* 1.023000e+03 */;
	cvt.rni.u32.f32 r2, f0;
	and.b32 r3, r2, 1023;
LBB1_82:
	or.b32 r1, r1, r3;
	st.global.u32 [r0+0], r1;
	ret;
LBB1_83:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB1_87;
LBB1_84:
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB1_85;
LBB1_90:
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	st.global.u8 [r0+0], r1;
	ret;
LBB1_13:
	setp.eq.s32 p0, r4, r2;
	@!p0 bra	LBB1_106;
LBB1_14:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB1_93;
LBB1_15:
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB1_16;
LBB1_96:
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	st.global.u16 [r0+0], r1;
	ret;
LBB1_20:
	setp.eq.s32 p0, r4, r5;
	@!p0 bra	LBB1_106;
LBB1_21:
	setp.hi.u32 p0, r1, r3;
	@p0 bra	LBB1_38;
LBB1_22:
	mov.u32 r3, 0;
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB1_41;
LBB1_23:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_42;
LBB1_24:
	cvt.rz.f16.f32 r1, f2;
	cvt.rz.f16.f32 r2, f1;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB1_26:
	mov.u32 r6, 5;
	setp.ne.s32 p0, r4, r6;
	@p0 bra	LBB1_106;
LBB1_27:
	mov.u32 r4, 3;
	setp.hi.u32 p0, r1, r4;
	@p0 bra	LBB1_31;
LBB1_28:
	setp.eq.s32 p0, r1, r3;
	@p0 bra	LBB1_33;
LBB1_29:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_36;
LBB1_30:
	mov.b32 r1, f2;
	mov.b32 r2, f1;
	st.global.v2.b32 [r0+0], {r1, r2};
	ret;
LBB1_106:
	ret;
LBB1_52:
	mov.u32 r2, 7;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB1_56;
LBB1_53:
	mov.u32 r3, 6;
	setp.eq.s32 p0, r1, r3;
	@!p0 bra	LBB1_54;
LBB1_60:
	mov.f32 f3, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f3;
	mul.rn.f32 f2, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f2;
	mul.rn.f32 f1, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r3, f1;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB1_51;
LBB1_87:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB1_91;
LBB1_88:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_91;
LBB1_89:
	mul.rn.f32 f0, f0, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	bra	LBB1_92;
LBB1_66:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB1_72;
LBB1_67:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB1_70;
LBB1_68:
	add.u32 r1, r1, -8;
	mov.u32 r2, 1;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB1_70;
LBB1_69:
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	st.global.u16 [r0+0], r1;
	ret;
LBB1_85:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_91;
LBB1_86:
	mul.rn.f32 f0, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f0;
	st.global.v2.b8 [r0+0], {r1, r2};
	ret;
LBB1_91:
	mul.rn.f32 f2, f2, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f42FE0000 /* 1.270000e+02 */;
LBB1_92:
	cvt.rni.sat.s8.f32 r3, f0;
	mov.f32 f0, 0f42FE0000 /* 1.270000e+02 */;
	cvt.rni.sat.s8.f32 r4, f0;
	st.global.v4.b8 [r0+0], {r1, r2, r3, r4};
	ret;
LBB1_93:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB1_97;
LBB1_94:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_97;
LBB1_95:
	mul.rn.f32 f0, f0, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	bra	LBB1_98;
LBB1_56:
	mov.u32 r2, 19;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB1_61;
LBB1_57:
	add.u32 r1, r1, -8;
	setp.hi.u32 p0, r1, r5;
	@p0 bra	LBB1_49;
LBB1_58:
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	st.global.u8 [r0+0], r1;
	ret;
LBB1_38:
	mov.u32 r2, 7;
	setp.eq.s32 p0, r1, r2;
	@p0 bra	LBB1_44;
LBB1_39:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB1_42;
LBB1_40:
	add.u32 r1, r1, -8;
	mov.u32 r2, 1;
	setp.hi.u32 p0, r1, r2;
	@p0 bra	LBB1_42;
LBB1_41:
	cvt.rz.f16.f32 r1, f2;
	st.global.u16 [r0+0], r1;
	ret;
LBB1_31:
	setp.eq.s32 p0, r1, r5;
	@p0 bra	LBB1_34;
LBB1_32:
	add.u32 r2, r1, -8;
	mov.u32 r3, 1;
	setp.hi.u32 p0, r2, r3;
	@p0 bra	LBB1_36;
LBB1_33:
	st.global.f32 [r0+0], f2;
	ret;
LBB1_70:
	mul.rn.f32 f2, f2, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f477FFF00 /* 6.553500e+04 */;
	bra	LBB1_71;
LBB1_48:
	mov.u32 r2, 4;
	setp.eq.s32 p0, r1, r2;
	bra	LBB1_49;
LBB1_16:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_97;
LBB1_17:
	mul.rn.f32 f0, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f0;
	st.global.v2.b16 [r0+0], {r1, r2};
	ret;
LBB1_97:
	mul.rn.f32 f2, f2, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f46FFFE00 /* 3.276700e+04 */;
LBB1_98:
	cvt.rni.sat.s16.f32 r3, f0;
	mov.f32 f0, 0f46FFFE00 /* 3.276700e+04 */;
	cvt.rni.sat.s16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
LBB1_54:
	setp.eq.s32 p0, r1, r2;
	@!p0 bra	LBB1_49;
LBB1_55:
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB1_50;
LBB1_49:
	mul.rn.f32 f2, f2, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f2;
	mul.rn.f32 f1, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f1;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
LBB1_50:
	cvt.rni.sat.u8.f32 r3, f0;
	mov.f32 f0, 0f437F0000 /* 2.550000e+02 */;
	bra	LBB1_51;
LBB1_72:
	mul.rn.f32 f0, f0, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r1, f0;
	mul.rn.f32 f0, f1, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r2, f0;
	mul.rn.f32 f0, f2, 0f477FFF00 /* 6.553500e+04 */;
LBB1_71:
	cvt.rni.sat.u16.f32 r3, f0;
	mov.f32 f0, 0f477FFF00 /* 6.553500e+04 */;
	cvt.rni.sat.u16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
LBB1_61:
	mov.f32 f3, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r1, f3;
	mul.rn.f32 f0, f0, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r2, f0;
	mul.rn.f32 f0, f1, 0f437F0000 /* 2.550000e+02 */;
	cvt.rni.sat.u8.f32 r3, f0;
	mul.rn.f32 f0, f2, 0f437F0000 /* 2.550000e+02 */;
LBB1_51:
	cvt.rni.sat.u8.f32 r4, f0;
	st.global.v4.b8 [r0+0], {r1, r2, r3, r4};
	ret;
LBB1_42:
	cvt.rz.f16.f32 r1, f2;
	cvt.rz.f16.f32 r2, f1;
	cvt.rz.f16.f32 r3, f0;
	bra	LBB1_43;
LBB1_36:
	mov.u32 r2, 7;
	setp.ne.s32 p0, r1, r2;
	@p0 bra	LBB1_34;
LBB1_37:
	mov.b32 r1, f0;
	mov.b32 r2, f1;
	mov.b32 r3, f2;
	bra	LBB1_35;
LBB1_34:
	mov.b32 r1, f2;
	mov.b32 r2, f1;
	mov.b32 r3, f0;
LBB1_35:
	mov.u32 r4, 1065353216;
	st.global.v4.b32 [r0+0], {r1, r2, r3, r4};
	ret;
LBB1_44:
	cvt.rz.f16.f32 r1, f0;
	cvt.rz.f16.f32 r2, f1;
	cvt.rz.f16.f32 r3, f2;
LBB1_43:
	mov.f32 f0, 0f3F800000 /* 1.000000e+00 */;
	cvt.rz.f16.f32 r4, f0;
	st.global.v4.b16 [r0+0], {r1, r2, r3, r4};
	ret;
}


// PTX file end
