!!LWgp5.0
OPTION LW_gpu_program_fp64;
#Created for frRnd003000
#Simple_template
#Num Primitives out:1
PRIMITIVE_IN TRIANGLES;
PRIMITIVE_OUT POINTS;
VERTICES_OUT 9;
PARAM pgmElw[256] = { program.elw[0..255] };
CBUFFER cbuf[] = { program.buffer[0] };
TEMP tmpR0;
TEMP tmpR1;
TEMP tmpR2;
TEMP tmpR3;
TEMP tmpR4;
LONG TEMP tmpR6;
TEMP tmpR9;
TEMP tmpR12;
TEMP tmpR13;
INT TEMP tmpA128;
TEMP tmpArray[4];
main:
 MOV.U tmpA128, pgmElw[14]; # random whole numbers 0..128
 INT TEMP i;
 MOV.S i.x, 3;
 REP;
  MOV tmpArray[i.x], pgmElw[i.x + 22];
  ADD.S.CC0 i.x, i.x, -1;
  BRK (LT0.x);
 ENDREP;
 MOV result.pointsize.x, vertex[0].pointsize;
 SIN result.texcoord[4], vertex[0].texcoord[1].z;
 AND.U tmpA128.z, tmpA128.z, 0xfffffffc;
 LDC.F32 tmpR0, cbuf[tmpA128.z + 92];
 DP2A result.texcoord[1], vertex[0].texcoord[3].x, vertex[0].fogcoord.xxxx, -|vertex[0].attrib[6].zyxx|;
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV result.position, vertex[0].position;
 EMIT;
 MOV result.pointsize.x, vertex[0].pointsize;
 SHR.U tmpR9, vertex[0].color.primary.ywyx, vertex[0].pointsize.x;
 TXD.CC0 result.texcoord[1], -vertex[0].texcoord[0], vertex[0].texcoord[4].x, vertex[0].color.back.secondary.y, texture[8], LWBE;
 DST.CC1 result.texcoord[4], vertex[0].texcoord[0], -vertex[0].texcoord[6];
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV tmpR0, {0.167,0.167,0.167,1.000};
 MOV tmpR1, vertex[0].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[1].position;
 MUL tmpR0, tmpR0, {1.005,1.001,0.996,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[0].pointsize;
 SHL result.texcoord[4], vertex[0].color.primary, -vertex[0].color.secondary.x;
 MOV tmpR13, {-1,-8,5,0};
 TXL.CC1 result.texcoord[1], pgmElw[tmpA128.w + 58].xwyz, texture[1], 3D, offset(tmpR13);
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV tmpR0, {0.333,0.333,0.333,1.000};
 MOV tmpR1, vertex[0].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[1].position;
 MUL tmpR0, tmpR0, {1.005,0.996,0.997,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[0].pointsize;
 DPH result.texcoord[1], tmpR1.x, -|tmpR1.wzyx|;
 COS result.texcoord[4], vertex[0].color.back.secondary.w;
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV tmpR0, {0.500,0.500,0.500,1.000};
 MOV tmpR1, vertex[0].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[1].position;
 MUL tmpR0, tmpR0, {1.001,0.998,1.000,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[0].pointsize;
 PK4UB tmpR4.z, |vertex[0].color.primary|;
 #Applying WAR630560 (sanitize TXD inputs)
 MOV tmpR1, vertex[0].texcoord[7];
 ADD.CC0 tmpR3, -tmpR1, tmpR1;
 MOV tmpR1(NE0.xyzw), 0.000;
 MOV tmpR2, vertex[0].color.back.primary.zxwy;
 ADD.CC0 tmpR3, -tmpR2, tmpR2;
 MOV tmpR2(NE0.xyzw), 0.000;
 TXD.U result.texcoord[1], vertex[0].color.secondary.z, tmpR1, tmpR2.zxwy, texture[7], 2D, (6,2,0);
 X2D.CC0 result.texcoord[4], |tmpR4.zzzz|, tmpR3, tmpR0.z;
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV tmpR0, {0.667,0.667,0.667,1.000};
 MOV tmpR1, vertex[0].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[1].position;
 MUL tmpR0, tmpR0, {1.004,0.996,1.003,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[0].pointsize;
 TXB result.texcoord[4], vertex[0].color.back.primary, texture[8], LWBE;
 SLE.F64 tmpR6, |tmpR0|, -vertex[0].texcoord[0].xyzw;
 I2F result.texcoord[1], vertex[0].texcoord[3].xyzw;
 MOV result.texcoord[4], vertex[0].texcoord[4];
 MOV tmpR0, {0.833,0.833,0.833,1.000};
 MOV tmpR1, vertex[0].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[1].position;
 MUL tmpR0, tmpR0, {0.998,0.999,0.997,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[1].pointsize;
 RCP result.texcoord[1], -vertex[1].texcoord[6].x;
 RCP result.texcoord[4], |vertex[1].texcoord[0].x|;
 MOV result.texcoord[4], vertex[1].texcoord[4];
 MOV result.position, vertex[1].position;
 EMIT;
 MOV result.pointsize.x, vertex[1].pointsize;
 #Applying WAR630560 (sanitize TXD inputs)
 MOV tmpR1, tmpR2.y;
 ADD.CC0 tmpR3, -tmpR1, tmpR1;
 MOV tmpR1(NE0.xyzw), 0.000;
 MOV tmpR2, -vertex[1].color.back.primary.wyyw;
 ADD.CC0 tmpR3, -tmpR2, tmpR2;
 MOV tmpR2(NE0.xyzw), 0.000;
 TXD.S tmpR12, -|tmpR1|, tmpR1.y, -tmpR2.wyyw, texture[3], 2D;
 BFR.CC0 result.texcoord[1], vertex[1].texcoord[6];
 LG2 result.texcoord[4], tmpR3.y;
 MOV result.texcoord[4], vertex[1].texcoord[4];
 MOV tmpR0, {0.500,0.500,0.500,1.000};
 MOV tmpR1, vertex[1].position;
 LRP tmpR0, tmpR0, tmpR1, vertex[2].position;
 MUL tmpR0, tmpR0, {0.996,1.005,1.002,1.000};
 MOV result.position, tmpR0;
 EMIT;
 MOV result.pointsize.x, vertex[2].pointsize;
 AND.CC0 result.texcoord[1], |tmpArray[  0]|, vertex[2].color.primary.y;
 ADD.S64.CC0 tmpR1, -tmpR1.xyzw, -vertex[2].texcoord[1].x;
 X2D.CC1 result.texcoord[4], vertex[2].texcoord[1].y, |tmpR12.xyzw|, |vertex[2].texcoord[6]|;
 MOV result.texcoord[4], vertex[2].texcoord[4];
 MOV result.position, vertex[2].position;
 EMIT;
 ENDPRIM;
END