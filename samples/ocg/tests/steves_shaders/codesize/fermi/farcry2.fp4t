        shaderType: pixel
        inputRegUsage: 45:
        (0x3 0 4 "POS" 28)
        (0x4 0 0 "PID" 24)
        (0x0 0 0 "CLIPLWLL0" 176)
        (0x0 0 0 "CLIPLWLL1" 180)
        (0x4 0 0 "RTIDX" 25)
        (0x4 0 0 "VPIDX" 26)
        (0x4 0 0 "SSA" 255)
        (0x0 0 0 "DEPTH" 65535)
        (0x0 0 0 "ATTR00" 32)
        (0x0 0 2 "ATTR01" 36)
        (0x0 0 0 "ATTR02" 40)
        (0x0 0 0 "ATTR03" 44)
        (0x0 0 0 "ATTR04" 48)
        (0x0 0 0 "ATTR05" 52)
        (0x0 0 0 "ATTR06" 56)
        (0x0 0 0 "ATTR07" 60)
        (0x0 0 0 "ATTR08" 64)
        (0x0 0 0 "ATTR09" 68)
        (0x0 0 0 "ATTR10" 72)
        (0x0 0 0 "ATTR11" 76)
        (0x0 0 0 "ATTR12" 80)
        (0x0 0 0 "ATTR13" 84)
        (0x0 0 0 "ATTR14" 88)
        (0x0 0 0 "ATTR15" 92)
        (0x0 0 0 "ATTR16" 96)
        (0x0 0 0 "ATTR17" 100)
        (0x0 0 0 "ATTR18" 104)
        (0x0 0 0 "ATTR19" 108)
        (0x0 0 0 "ATTR20" 112)
        (0x0 0 0 "ATTR21" 116)
        (0x0 0 0 "ATTR22" 120)
        (0x0 0 0 "ATTR23" 124)
        (0x0 0 0 "ATTR24" 128)
        (0x0 0 0 "ATTR25" 132)
        (0x0 0 0 "ATTR26" 136)
        (0x0 0 0 "ATTR27" 140)
        (0x0 0 0 "ATTR28" 144)
        (0x0 0 0 "ATTR29" 148)
        (0x0 0 0 "ATTR30" 152)
        (0x0 0 0 "ATTR31" 156)
        (0x0 0 0 "VID" 191)
        (0x0 0 0 "IID" 190)
        (0x4 0 0 "SID" 65535)
        (0x0 0 0 "COVERAGE" 65535)
        (0x0 0 0 "UV" 188)
        outputRegUsage: 45:
        (0x0 0 0 "POS" 28)
        (0x0 0 0 "PID" 24)
        (0x0 0 0 "CLIPLWLL0" 176)
        (0x0 0 0 "CLIPLWLL1" 180)
        (0x0 0 0 "RTIDX" 25)
        (0x0 0 0 "VPIDX" 26)
        (0x0 0 0 "SSA" 255)
        (0x0 0 0 "DEPTH" 65535)
        (0x0 0 1 "ATTR00" 32)
        (0x0 0 0 "ATTR01" 36)
        (0x0 0 0 "ATTR02" 40)
        (0x0 0 0 "ATTR03" 44)
        (0x0 0 0 "ATTR04" 48)
        (0x0 0 0 "ATTR05" 52)
        (0x0 0 0 "ATTR06" 56)
        (0x0 0 0 "ATTR07" 60)
        (0x0 0 0 "ATTR08" 64)
        (0x0 0 0 "ATTR09" 68)
        (0x0 0 0 "ATTR10" 72)
        (0x0 0 0 "ATTR11" 76)
        (0x0 0 0 "ATTR12" 80)
        (0x0 0 0 "ATTR13" 84)
        (0x0 0 0 "ATTR14" 88)
        (0x0 0 0 "ATTR15" 92)
        (0x0 0 0 "ATTR16" 96)
        (0x0 0 0 "ATTR17" 100)
        (0x0 0 0 "ATTR18" 104)
        (0x0 0 0 "ATTR19" 108)
        (0x0 0 0 "ATTR20" 112)
        (0x0 0 0 "ATTR21" 116)
        (0x0 0 0 "ATTR22" 120)
        (0x0 0 0 "ATTR23" 124)
        (0x0 0 0 "ATTR24" 128)
        (0x0 0 0 "ATTR25" 132)
        (0x0 0 0 "ATTR26" 136)
        (0x0 0 0 "ATTR27" 140)
        (0x0 0 0 "ATTR28" 144)
        (0x0 0 0 "ATTR29" 148)
        (0x0 0 0 "ATTR30" 152)
        (0x0 0 0 "ATTR31" 156)
        (0x0 0 0 "VID" 191)
        (0x0 0 0 "IID" 190)
        (0x0 0 0 "SID" 65535)
        (0x0 0 0 "COVERAGE" 65535)
        (0x0 0 0 "UV" 188)
        numCtaRegTargets: 0
        eOutputMode: R0
        optFlags: 0x5
        optLevel: 0
        oriControl: 0
        bAssume0: 0
        bInitOutputs: 0
        bCanPromoteFixed: 0
        bCanPromoteHalf: 0
        bCanReorderFixedWithCheck: 0
        bCanReorderHalf: 0
        bCanReorderFloat: 0
        bCanIgnoreNan: 0
        bCanDemoteNonFP32Targets: 0
        bCanUseNrmhAlways: 0
        bCanFudgeSqrtSign: 0
        dwOutputMask: 0x1
        bUseDepth: 0
        bUseCoverage: 0
        dwNumCombiners: 0
        dwLevel: 0
        dwSupportsSignedRemap: 0x0
        dwTextureRange: 0x0
        dwPartialTexType: 0x0
        numTextures: 1
        bUsingLRPD: 0
        dwConstIsInZeroOneRange: 0x0
        bNeedsFogHoist: 0
        bAssumeDemotedTXP: 0
        bOptimizeBranches: 1
        bUseDX10SAT: 0
        bUseDX10AddressInRange: 1
        maxCallDepthAllowed: 0
        maxDivergenceLevelAllowed: 0
        regAllocationMode: 2
        ApplyTXLLODWar: 1
        AddDummyCRead: 0
        Force2IBUFSlots: 0
        NoFloatMAD: 0
        SFUFloatMUL: 0
        InhibitBRXGeneration: 0
        ForceFMZ: 0
        fmtFlags: 0x0
        IsOGL: 0
        paramFlags: 0x0
        optimizerConstBank: 16
        deadOutputMask: 0x0 0x0
        mrtMask: 0x0
        maxRRegsAllowed: 0x0
        wTextureRemap: 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210 0x3210
        normalizationLwbemap: 0 
	numSamplers: 8
        samplerProperties:         (1 1)         (1 1)         (1 1)         (1 1)         (1 1)         (1 1)         (1 1)         (1 1)
        textureProperties:         (1 1 2)
        movr (s32) r9.xy, (r) v0.xyxx
        movu32 (u32) r9.zw, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4109, (u32) c[17][209].y
        movu32 (u32) r4109.x, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(2, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][209].z
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r10, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movu32 (u32) r4109, (u32) c[17][209].w
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][210].x
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) r11.x
        movu32 (u32) r4109, (u32) c[17][210].y
        movu32 (u32) r4109.x, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(3, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][210].z
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) r11.x
        movu32 (u32) r4109, (u32) c[17][210].w
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][211].x
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) r11.x
        movu32 (u32) r4109, (u32) c[17][211].y
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][211].z
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) r11.x
        movu32 (u32) r4109, (u32) c[17][211].w
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][212].x
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        maxr (r) r10.x, (r) r10.x, (r) r11.x
        movu32 (u32) r4109, (u32) c[17][212].y
        movu32 (u32) r4109.x, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(2, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(2, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][212].z
        movu32 (u32) r4109.x, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(1, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(1, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9.xyww, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r11, (r) r4105
        movu32 (u32) r4109, (u32) c[17][212].w
        movu32 (u32) r4109.x, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(3, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(3, 0, 0, 0).x
        movu32_precise (u32) r4108.x, (u32) r4109
        movu32 (u32) r4109, (u32) c[17][213].x
        movu32 (u32) r4109.x, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.y, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.z, (u32) constant(0, 0, 0, 0).x
        movu32 (u32) r4109.w, (u32) constant(0, 0, 0, 0).x
        movu32_precise (u32) r4108.y, (u32) r4109
        adds32 (s32) r4106.xyz, (s32) r9, (s32) constant(0, 0, 0, 0)
        mads32 (s32) r4106.xy, (s32) r4106, (s32) constant(4, 2, 1, 1), (s32) r4108.xyyy
        movu32 (u32) r4106.w, (u32) constant(0, 0, 0, 0)
        movu32 (u32) r4107, (u32) constant(0, 0, 0, 0)
        txgu32 (r) r4105, (u32) r4106, (u32) r4107, #0, #2, 2D, LOAD
        movr (r) r9, (r) r4105
        maxr (r) r9.y, (r) r10.x, (r) r11.x
        maxr (r) r9.z, (r) r9.x, (r) r9.y
        movu32 (u32) r9.xy, (u32) v9.xyxx
        movu32 (u32) r9.w, (u32) constant(1065353216, 0, 0, 0).x
        movr (r) r4110, (r) c[0][18]
        movr (r) r4110.x, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.y, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.z, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.w, (r) constant(-1.00000000, 0.00000000, 0.00000000, 0.00000000).x
        dp4r (r) r10.x, (r) r9, (r) r4110
        movr (r) r4110, (r) c[0][19]
        movr (r) r4110.x, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.y, (r) constant(0.00000000, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.z, (r) constant(-3.99899983, 0.00000000, 0.00000000, 0.00000000).x
        movr (r) r4110.w, (r) constant(4.00000000, 0.00000000, 0.00000000, 0.00000000).x
        dp4r (r) r9.x, (r) r9, (r) r4110
        divr (r) r4105.x, (r) r10.x, (r) r9.x
        movr (r) r9.x, (r) r4105
        movr (r) r0.x, (r) -r9.x
        ret 
	end
