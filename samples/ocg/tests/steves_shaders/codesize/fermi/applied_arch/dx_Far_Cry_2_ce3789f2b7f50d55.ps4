ps_4_0
dcl_input v1.xyzw, linear
dcl_input v2.xyzw, linear
dcl_input v3.xyzw, linear
dcl_input v4.xyz, linear
dcl_input v5.xyz, linear
dcl_input v6.xyz, linear
dcl_input v7.xyzw, linear
dcl_input v8.xy, linear
dcl_output o0.xyzw
dcl_constantbuffer cb0[58].xyzw, immediateindexed
dcl_constantbuffer cb1[6].xyzw, immediateindexed
dcl_constantbuffer cb2[9].xyzw, immediateindexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource t0, texture2d, (float, float, float, float)
dcl_resource t1, texture2d, (float, float, float, float)
dcl_resource t2, texture2d, (float, float, float, float)
dcl_resource t3, texture2d, (float, float, float, float)
dcl_temps 7 
div r0.xy, v4.xyxx, v4.zzzz
sample r0.xyzw, r0.xyxx, t0.xyzw, s0
mul r0.x, r0.x, cb0[40].z
dp3 r0.y, v2.xyzx, v2.xyzx
sqrt r0.y, r0.y
div r0.z, v2.z, r0.y
div r0.x, -r0.x, r0.z
add r0.x, -r0.y, r0.x
lt r0.y, r0.x, l(0.00000000)
if_nz r0.y
discard_sat l(0xffffffff)
endif 
mul r1.xyzw, cb2[6].xyzz, cb2[8].xxxx
add r0.y, -cb2[7].z, l(1.00000000)
mul_sat r0.xz, r0.xxxx, v8.xxyx
log r0.x, r0.x
mul r0.x, r0.x, cb2[7].y
exp r0.x, r0.x
sample r2.xyzw, v1.xyxx, t1.xyzw, s1
mad r2.xy, r2.wyww, l(2.00000000, 2.00000000, 0.00000000, 0.00000000), l(-1.00000000, -1.00000000, 0.00000000, 0.00000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.00000000)
add r0.w, -r0.w, l(1.00000000)
sqrt r2.z, r0.w
sample r3.xyzw, v1.zwzz, t1.xyzw, s1
mad r3.xy, r3.wyww, l(2.00000000, 2.00000000, 0.00000000, 0.00000000), l(-1.00000000, -1.00000000, 0.00000000, 0.00000000)
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.00000000)
add r0.w, -r0.w, l(1.00000000)
sqrt r3.z, r0.w
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r2.xyzx, r0.wwww
mad r3.xy, r2.xyxx, cb2[0].xxxx, v3.xyxx
mov r3.z, v3.z
add r3.xyz, -r3.xyzx, cb0[45].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyw, r3.xyxz, r0.wwww
mad r0.w, -r3.z, r0.w, l(1.00000000)
mad r2.xyz, r2.xyzx, r0.wwww, l(0.00000000, 0.00000000, 1.00000000, 0.00000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r4.xyz, r2.xyzx, r0.wwww
dp3_sat r2.w, r4.xyzx, r3.xywx
add r2.w, -r2.w, l(1.00000000)
log r2.w, r2.w
mul r2.w, r2.w, cb2[7].w
exp r2.w, r2.w
mad r0.y, r0.y, r2.w, cb2[7].z
dp3 r2.w, v5.xyzx, v5.xyzx
mad_sat r3.x, -r2.w, cb1[4].x, l(1.00000000)
mul r3.xyzw, r3.xxxx, cb1[5].xyzz
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v5.zxyz
dp3 r2.w, v6.xyzx, v6.xyzx
rsq r2.w, r2.w
mad r6.xyz, v6.xyzx, r2.wwww, -r5.yzxy
mul r6.xyz, r6.xyzx, l(0.50000000, 0.50000000, 0.50000000, 0.00000000)
dp3_sat r2.w, r4.zxyz, -r5.xyzx
mul r4.xyzw, r3.xyww, r2.wwww
mov_sat r5.x, -r5.x
mul r5.xyzw, r3.xyww, r5.xxxx
mad r2.xyz, r2.xyzx, r0.wwww, l(0.00000000, 0.00000000, 1.00000000, 0.00000000)
mul r2.xyz, r2.xyzx, l(0.50000000, 0.50000000, 0.50000000, 0.00000000)
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r6.xyzx, r0.wwww
dp3_sat r0.w, r6.xyzx, r2.xyzx
log r0.w, r0.w
mul r0.w, r0.w, cb2[8].y
exp r0.w, r0.w
mul r2.xyzw, r3.xyzw, r0.wwww
mul r1.xyzw, r1.xyzw, r2.xyzw
sample r2.xyzw, v7.xyxx, t2.xyzw, s2
sample r3.xyzw, v7.zwzz, t3.xyzw, s3
mul r6.xyzw, r2.xyzz, r3.xyzz
add_sat r6.xyzw, r6.xyzw, r6.xyzw
add_sat r0.w, r3.w, l(-0.50000000)
dp2 r0.w, r0.wwww, r2.wwww
mul r2.xyz, r1.xywx, l(6.00000000, 6.00000000, 6.00000000, 0.00000000)
dp3 r2.x, r2.xyzx, l(0.05978000, 0.11740000, 0.02280000, 0.00000000)
add_sat r0.y, r0.y, r2.x
mul r2.xyzw, r4.xyzw, cb2[6].xyzz
mul r2.xyzw, r0.xxxx, r2.xyzw
mad r1.xyzw, r1.xyzw, l(6.00000000, 6.00000000, 6.00000000, 6.00000000), -r2.xyww
mad r1.xyzw, r0.yyyy, r1.xyzw, r2.xyzw
mad r2.xyzw, r6.xyzw, r5.xyzw, -r1.xyww
mad r1.xyzw, r0.wwww, r2.xyzw, r1.xyzw
mul r0.x, r0.z, v3.w
mad r1.xyzw, r1.xyzw, v2.wwww, l(0.00000000, 0.00000000, 0.00000000, -1.00000000)
mad r0.xyzw, r0.xxxx, r1.xyzw, l(0.00000000, 0.00000000, 0.00000000, 1.00000000)
mul o0.xyz, r0.xyzx, cb0[57].wwww
mov o0.w, r0.w
ret 
