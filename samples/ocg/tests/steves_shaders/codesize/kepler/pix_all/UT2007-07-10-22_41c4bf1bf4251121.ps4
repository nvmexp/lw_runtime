ps_4_0
dcl_input v0.xy, linear
dcl_input v1.z, linear
dcl_input v2.xyzw, linear
dcl_input v3.xyzw, linear
dcl_output o0.xyzw
dcl_constantbuffer cb0[8].xyzw, immediateindexed
dcl_sampler s0, mode_default
dcl_resource t0, texture2d, (float, float, float, float)
dcl_temps 3 
sample r0.xyzw, v0.xyxx, t0.xyzw, s0
max r0.x, r0.w, l(1.00000000)
min r0.x, r0.x, l(65535.00000000)
add r0.y, r0.x, -cb0[7].x
lt r0.y, r0.y, l(0.00000000)
discard_sat r0.y
if_nz r0.y
mov o0.xyzw, l(0, 0, 0, 0x3f800000)
else 
mul r0.y, r0.x, v1.z
ge r0.z, l(0.00100000), |r0.y|
movc r0.y, r0.z, l(0x3a83126f), r0.y
div_sat r1.xyzw, v2.xyzw, r0.yyyy
div_sat r2.xyzw, v3.xyzw, r0.yyyy
add r0.xyzw, r0.xxxx, -cb0[6].xyzw
max r0.xyzw, r0.xyzw, l(0.00000000, 0.00000000, 0.00000000, 0.00000000)
add r1.xyzw, -r1.xyzw, r2.xyzw
mul r0.xyzw, r0.xyzw, |r1.xyzw|
lt r1.xyzw, r0.xyzw, cb0[1].xyzw
mul r0.xyzw, r0.xyzw, cb0[0].xyzw
exp r0.xyzw, r0.xyzw
and r0.xyzw, r1.xyzw, r0.xyzw
add r1.xyzw, r0.xyzw, l(-1.00000000, -1.00000000, -1.00000000, -1.00000000)
mul r0.z, r0.z, r0.w
mul r0.y, r0.y, r0.z
mul o0.w, r0.x, r0.y
mul r0.x, r0.w, r1.z
mul r2.xyz, r0.xxxx, cb0[4].xyzx
mad r2.xyz, r1.wwww, cb0[5].xyzx, r2.xyzx
mul r0.x, r1.y, r0.z
mad r0.xzw, r0.xxxx, cb0[3].xxyz, r2.xxyz
mul r0.y, r1.x, r0.y
mad o0.xyz, r0.yyyy, cb0[2].xyzx, r0.xzwx
endif 
ret 
