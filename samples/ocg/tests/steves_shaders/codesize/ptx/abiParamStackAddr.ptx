.version 3.1
.target sm_20

.global .u32 x;

.func (.param .u32 out) myadd (.param .u32 k, .reg .u32 a, .param .u32 fill[10], .reg .u32 b, .param .u32 l)
{
    .reg .u32 r, s, u, v, y, addr, addrk;
    .local .u32 t, z;

    add.u32       r, a, b;
    ld.param.u32  v, [l];
    ld.param.u32  u, [k];
    st.local.u32  [z], v;
    ld.local.u32  y, [z];
    add.u32       r, u, y;
    st.local.u32  [t], r;
    ld.local.u32  s, [t];
    mov.u32       addr, l;
	mov.u32       addrk, k;
    ld.local.u32  u, [addr];
    ld.local.u32  s, [addrk];
    add.u32       r, s, u;
    st.param.u32  [out], r;
    ret;
}

.entry main(.param .u32 output, .param .u32 output1)
{
    .reg .u32 t, o, addr;
    .param .u32 z[10];
	
	st.param.u32  [z], 20;
    call (t), myadd, (2, 4, z, 6, 28);
    ld.param.u32  o, [output];
    st.b32        [o], t;

	st.param.u32  [z], 20;

    call (t), myadd, (10, t, z, t, 28);
    ld.param.u32  o, [output1];
    st.b32        [o], t;

    exit;
}
 
