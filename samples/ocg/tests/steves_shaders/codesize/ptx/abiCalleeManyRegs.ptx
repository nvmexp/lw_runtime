.version 3.1
.target sm_20

.func (.param .u32 out) myadd (.reg .u32 a, .reg .u32 b, .reg .u32 c, .reg .u32 d,
                               .reg .u32 e, .reg .u32 f, .reg .u32 g, .reg .u32 h,
                               .reg .u32 i, .reg .u32 j, .reg .u32 k, .reg .u32 l,
                               .reg .u32 m, .reg .u32 n, .reg .u32 o, .reg .u32 p)
{
    .reg .u32 r<60>;
    .reg .u32 r;

    add.u32       r0, a, b;
    add.u32       r1, c, d;
    add.u32       r2, e, f;
    add.u32       r3, g, h;
    add.u32       r4, i, j;
    add.u32       r5, k, l;
    add.u32       r6, m, n;
    add.u32       r7, o, p;
    add.u32       r8, a, c;
    add.u32       r9, a, d;
    add.u32       r10, a, e;
    add.u32       r11, a, f;
    add.u32       r12, a, g;
    add.u32       r13, a, h;
    add.u32       r14, a, i;
    add.u32       r15, a, j;
    add.u32       r16, a, k;
    add.u32       r17, a, l;
    add.u32       r18, a, m;
    add.u32       r19, a, n;
    add.u32       r20, b, e;
    add.u32       r21, b, f;
    add.u32       r22, b, g;
    add.u32       r23, b, h;
    add.u32       r24, b, i;
    add.u32       r25, b, j;
    add.u32       r26, b, k;
    add.u32       r27, b, l;
    add.u32       r28, b, m;
    add.u32       r29, b, n;
    add.u32       r30, c, e;
    add.u32       r31, c, f;
    add.u32       r32, c, g;
    add.u32       r33, c, h;
    add.u32       r34, c, i;
    add.u32       r35, c, j;
    add.u32       r36, c, k;
    add.u32       r37, c, l;
    add.u32       r38, c, m;
    add.u32       r39, c, n;
    add.u32       r40, d, e;
    add.u32       r41, d, f;
    add.u32       r42, d, g;
    add.u32       r43, d, h;
    add.u32       r44, d, i;
    add.u32       r45, d, j;
    add.u32       r46, d, k;
    add.u32       r47, d, l;
    add.u32       r48, d, m;
    add.u32       r49, d, n;
    add.u32       r50, e, o;
    add.u32       r51, e, p;
    add.u32       r52, e, g;
    add.u32       r53, e, h;
    add.u32       r54, e, i;
    add.u32       r55, e, j;
    add.u32       r56, e, k;
    add.u32       r57, e, l;
    add.u32       r58, e, m;
    add.u32       r59, e, n;

    bar.sync      a;

    add.u32       r, r0, r1;
    add.u32       r, r, r2;
    add.u32       r, r, r3;
    add.u32       r, r, r4;
    add.u32       r, r, r5;
    add.u32       r, r, r6;
    add.u32       r, r, r7;
    add.u32       r, r, r8;
    add.u32       r, r, r9;
    add.u32       r, r, r10;
    add.u32       r, r, r11;
    add.u32       r, r, r12;
    add.u32       r, r, r13;
    add.u32       r, r, r14;
    add.u32       r, r, r15;
    add.u32       r, r, r16;
    add.u32       r, r, r17;
    add.u32       r, r, r18;
    add.u32       r, r, r19;
    add.u32       r, r, r20;
    add.u32       r, r, r21;
    add.u32       r, r, r22;
    add.u32       r, r, r23;
    add.u32       r, r, r24;
    add.u32       r, r, r25;
    add.u32       r, r, r26;
    add.u32       r, r, r27;
    add.u32       r, r, r28;
    add.u32       r, r, r29;
    add.u32       r, r, r30;
    add.u32       r, r, r31;
    add.u32       r, r, r32;
    add.u32       r, r, r33;
    add.u32       r, r, r34;
    add.u32       r, r, r35;
    add.u32       r, r, r36;
    add.u32       r, r, r37;
    add.u32       r, r, r38;
    add.u32       r, r, r39;
    add.u32       r, r, r40;
    add.u32       r, r, r41;
    add.u32       r, r, r42;
    add.u32       r, r, r43;
    add.u32       r, r, r44;
    add.u32       r, r, r45;
    add.u32       r, r, r46;
    add.u32       r, r, r47;
    add.u32       r, r, r48;
    add.u32       r, r, r49;
    add.u32       r, r, r50;
    add.u32       r, r, r51;
    add.u32       r, r, r52;
    add.u32       r, r, r53;
    add.u32       r, r, r54;
    add.u32       r, r, r55;
    add.u32       r, r, r56;
    add.u32       r, r, r57;
    add.u32       r, r, r58;
    add.u32       r, r, r59;
    st.param.u32  [out], r;
    ret;
}

.func (.reg .u32 out) myNotSoSimpleAdd (.reg .u32 a, .reg .u32 b)
{
    call (out), myadd, (a, a, a, b, b, b, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36);
    ret;
}

.entry main(.param .u32 output, .param .u32 output1)
{
    .reg .u32 t, o;

    call (t), myNotSoSimpleAdd, (4, 6);
    ld.param.u32  o, [output];
    st.b32        [o], t;

    call (t), myNotSoSimpleAdd, (t, t);
    ld.param.u32  o, [output1];
    st.b32        [o], t;

    exit;
}
