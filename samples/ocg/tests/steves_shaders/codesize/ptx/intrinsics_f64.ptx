	.version 3.1
	.target sm_20

        .global .f64 mem0;
        .global .f64 mem1;

	.entry main 
	{
           .reg .f64 a, b, c;
           .reg .f32 f;
           .reg .u32 addr;
           .reg .pred p;
           

           ld.global.f64  a, [mem0];
           ld.global.f64  b, [mem1];
           div.f64        a, a, b;
           st.global.f64  [mem0], a;
           div.rn.f64        a, a, b;
           st.global.f64  [mem0], a;
           div.rz.f64        a, a, b;
           st.global.f64  [mem0], a;
           div.rp.f64        a, a, b;
           st.global.f64  [mem0], a;
           div.rm.f64        a, a, b;
           st.global.f64  [mem0], a;

           ld.global.f64  a, [mem0];
           rcp.approx.f64.ftz a, a;
           st.global.f64  [mem0 + 8], a;
           rcp.rn.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           rcp.rz.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           rcp.rp.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           rcp.rm.f64        a, a;
           st.global.f64  [mem0 + 8], a;

           ld.global.f64  a, [mem0];
           sqrt.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           sqrt.rn.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           sqrt.rz.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           sqrt.rm.f64        a, a;
           st.global.f64  [mem0 + 8], a;
           sqrt.rp.f64        a, a;
           st.global.f64  [mem0 + 8], a;

           ld.global.f64  a, [mem0];
           rsqrt.approx.f64  a, a;
           st.global.f64  [mem0 + 8], a;

           exit;
        }

