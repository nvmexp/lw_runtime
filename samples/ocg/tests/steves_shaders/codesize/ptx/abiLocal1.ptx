.version 3.1
.target sm_20

.global .u32 x;

.func (.param .u32 out) myadd (.reg .u32 a, .reg .u32 b, .reg .u32 c, .reg .u32 e,
                               .reg .u64 d, .reg .u32 f, .reg .u32 g, .reg .u32 h,
                               .reg .u32 i, .reg .u32 j, .reg .u32 k)
{
    .reg .u32 cc, r;
    .reg .u32 z<16>;
    .local .u8 u1;
    .local .u16 u2;
    .local .u32 u3;
    .local .u64 u4;
    .local .align 4 .b8 s1[20];
    .local .align 8 .b8 s2[100];
    .local .align 16 .b8 s3[2000];
    .local .align 4 .b8 s4[4];
    .local .align 8 .b8 s5[4];
    .local .v2 .u8 v1;
    .local .v2 .u16 v2;
    .local .v2 .u32 v3;
    .local .v2 .u64 v4;
    .local .v4 .u8 v5;
    .local .v4 .u16 v6;
    .local .v4 .u32 v7;

    st.local.u8   [u1], a;
    ld.local.u32  z0, [u1];
    st.local.u16  [u2], b;
    ld.local.u32  z1, [u2];
    add.u32       r, z0, z1;
    st.local.u32  [u3], c;
    ld.local.u32  z2, [u3];
    add.u32       r, r, z2;
    st.local.u64  [u4], d;
    ld.local.u32  z3, [u4];
    add.u32       r, r, z3;
    st.local.u32  [s1+8], e;
    ld.local.u32  z4, [s1+8];
    add.u32       r, r, z4;
    st.local.u32  [s2+32], f;
    ld.local.u32  z5, [s2+32];
    add.u32       r, r, z5;
    st.local.u32  [s3+1024], g;
    ld.local.u32  z6, [s3+1024];
    add.u32       r, r, z6;
    st.local.u32  [s4+0], h;
    ld.local.u32  z7, [s4+0];
    add.u32       r, r, z7;
    st.local.u32  [s5+0], i;
    ld.local.u32  z8, [s5+0];
    add.u32       r, r, z8;
    st.local.v2.u8 [v1], {j,j};
    ld.local.u32  z9, [v1];
    add.u32       r, r, z9;
    st.local.v2.u16 [v2], {k,k};
    ld.local.u32  z10, [v2];
    add.u32       r, r, z10;
    st.local.v2.u32 [v3], {i,i};
    ld.local.u32  z11, [v3];
    add.u32       r, r, z11;
    st.local.v2.u64 [v4], {d,d};
    ld.local.u32  z12, [v4];
    add.u32       r, r, z12;
    st.local.v4.u8 [v5], {g,g,g,g};
    ld.local.u32  z13, [v5];
    add.u32       r, r, z13;
    st.local.v4.u16 [v6], {f,f,f,f};
    ld.local.u32  z14, [v6];
    add.u32       r, r, z14;
    st.local.v4.u32 [v7], {e,e,e,e};
    ld.local.u32  z15, [v7];
    add.u32       r, r, z15;
    st.param.u32  [out], r;
    ret;
}

.entry main(.param .u32 output, .param .u32 output1)
{
    .reg .u32 t, o;

    call (t), myadd, (4, 6, 8, 12, 14, 16, 18, 20, 22, 24, 26);
    ld.param.u32  o, [output];
    st.b32        [o], t;

    call (t), myadd, (t, t, t, 12, 14, 16, 18, 20, 22, 24, 26);
    ld.param.u32  o, [output1];
    st.b32        [o], t;

    exit;
}
 
