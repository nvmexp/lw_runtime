.version 3.1
.target sm_20

.func (.param .align 4 .b8 r[16]) myadd2 (.param .align 4 .b8 i1[4],
                                          .param .align 4 .b8 i2[200])
{
    .reg .u16 inu<2>;
    .reg .s16 ins<2>;
    .reg .b16 inb<2>;
    .reg .f16 inf<2>;
    .reg .f32 f<2>, fo;
    .reg .b16 res<2>;

    ld.param.v2.u16 {inu0, inu1}, [i1+0];
    ld.param.v2.s16 {ins0, ins1}, [i1+0];
    ld.param.v2.b16 {inb0, inb1}, [i1+0];
    ld.param.v2.b16 {inf0, inf1}, [i1+0];
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+0], {res0, res1};
    add.u16 res0, inb0, inb1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+4], {res0, res1};

    ld.param.v2.u16 {inu0, inu1}, [i2+40];
    ld.param.v2.s16 {ins0, ins1}, [i2+80];
    ld.param.v2.b16 {inb0, inb1}, [i2+120];
    ld.param.v2.b16 {inf0, inf1}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+8], {res0, res1};
    add.u16 res0, inb0, inb1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+12], {res0, res1};

    ret;
}

.func (.param .align 4 .b8 r[16]) myadd2a (.param .align 4 .b8 i1[4],
                                           .param .align 4 .b8 i2[200])
{
    .reg .u16 inu<2>;
    .reg .s16 ins<2>;
    .reg .b16 inb<2>;
    .reg .f16 inf<2>;
    .reg .f32 f<2>, fo;
    .reg .b16 res<2>;
    .reg .u32 addr;

    ld.param.v2.u16 {inu0, inu1}, [i1+0];
    ld.param.v2.s16 {ins0, ins1}, [i1+0];
    ld.param.v2.b16 {inb0, inb1}, [i1+0];
    mov.u32 addr, i1;
    ld.local.v2.b16 {inf0, inf1}, [addr];
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+0], {res0, res1};
    add.u16 res0, inb0, inb1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+4], {res0, res1};

    ld.param.v2.u16 {inu0, inu1}, [i2+40];
    ld.param.v2.s16 {ins0, ins1}, [i2+80];
    ld.param.v2.b16 {inb0, inb1}, [i2+120];
    ld.param.v2.b16 {inf0, inf1}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+8], {res0, res1};
    add.u16 res0, inb0, inb1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+12], {res0, res1};

    ret;
}

.func (.param .align 4 .b8 r[16]) myadd2b (.param .align 4 .b8 i1[4],
                                           .param .align 4 .b8 i2[200])
{
    .reg .u16 inu<2>;
    .reg .s16 ins<2>;
    .reg .b16 inb<2>;
    .reg .f16 inf<2>;
    .reg .f32 f<2>, fo;
    .reg .b16 local<2>;
    .reg .b16 res<2>;
    .local .align 4 .b8 l[16];

    ld.param.v2.u16 {inu0, inu1}, [i1+0];
    ld.param.v2.s16 {ins0, ins1}, [i1+0];
    ld.param.v2.b16 {inb0, inb1}, [i1+0];
    ld.param.v2.b16 {inf0, inf1}, [i1+0];
    st.local.v2.b16 [l+16], {inb0, inb1};
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+0], {res0, res1};
    add.u16 res0, inb0, inb1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+4], {res0, res1};

    ld.param.v2.u16 {inu0, inu1}, [i2+40];
    ld.param.v2.s16 {ins0, ins1}, [i2+80];
    ld.param.v2.b16 {inb0, inb1}, [i2+120];
    ld.param.v2.b16 {inf0, inf1}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.s16 res1, ins0, ins1;
    st.param.v2.b16 [r+8], {res0, res1};
    ld.local.v2.b16 {local0, local1}, [l+16];
    add.u16 res0, inb0, inb1;
    add.u16 res0, res0, local0;
    add.u16 res0, res0, local1;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    add.f32 fo, f0, f1;
    cvt.rn.f16.f32 res1, fo;
    st.param.v2.b16 [r+12], {res0, res1};

    ret;
}

.func (.param .align 8 .b8 r[200]) myadd4 (.param .align 8 .b8 i1[8],
                                           .param .align 8 .b8 i2[200])
{
    .reg .u16 inu<4>;
    .reg .s16 ins<4>;
    .reg .b16 inb<4>;
    .reg .f16 inf<4>;
    .reg .f32 f<4>, fo;
    .reg .b16 res<4>;

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i1+0];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i1+0];
    ld.param.v4.b16 {inb0, inb1, inb2, inb3}, [i1+0];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i1+0];
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+0], {res0, res1, res2, res3};

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i2+40];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i2+80];
    ld.param.v4.b16 {inb0, inb1, inb2, inb3}, [i2+120];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+8], {res0, res1, res2, res3};

    ret;
}

.func (.param .align 8 .b8 r[200]) myadd4a (.param .align 8 .b8 i1[8],
                                            .param .align 8 .b8 i2[200])
{
    .reg .u16 inu<4>;
    .reg .s16 ins<4>;
    .reg .b16 inb<4>;
    .reg .f16 inf<4>;
    .reg .f32 f<4>, fo;
    .reg .b16 res<4>;
    .reg .u32 addr;

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i1+0];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i1+0];
    mov.u32 addr, i1;
    ld.local.v4.b16 {inb0, inb1, inb2, inb3}, [addr];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i1+0];
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+0], {res0, res1, res2, res3};

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i2+40];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i2+80];
    ld.param.v4.b16 {inb0, inb1, inb2, inb3}, [i2+120];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+8], {res0, res1, res2, res3};

    ret;
}

.func (.param .align 8 .b8 r[200]) myadd4b (.param .align 8 .b8 i1[8],
                                            .param .align 8 .b8 i2[200])
{
    .reg .u16 inu<4>;
    .reg .s16 ins<4>;
    .reg .b16 inb<4>;
    .reg .f16 inf<4>;
    .reg .f32 f<4>, fo;
    .reg .b16 local<4>;
    .reg .b16 res<4>;
    .local .align 4 .b8 l[16];

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i1+0];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i1+0];
    ld.param.v4.b16 {inb0, inb1, inb2, inb3}, [i1+0];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i1+0];
    st.local.v4.b16 [l+16], {inb0, inb1, inb2, inb3};
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+0], {res0, res1, res2, res3};

    ld.param.v4.u16 {inu0, inu1, inu2, inu3}, [i2+40];
    ld.param.v4.s16 {ins0, ins1, ins2, ins3}, [i2+80];
    ld.param.v4.b16 {inb0, inb1, inb2, inb3}, [i2+120];
    ld.param.v4.b16 {inf0, inf1, inf2, inf3}, [i2+160];
    add.u16 res0, inu0, inu1;
    add.u16 res0, res0, inu2;
    add.u16 res0, res0, inu3;
    add.s16 res1, ins0, ins1;
    add.u16 res1, res1, ins2;
    add.u16 res1, res1, ins3;
    ld.local.v4.b16 {local0, local1, local2, local3}, [l+16];
    add.u16 res2, inb0, inb1;
    add.u16 res2, res2, inb2;
    add.u16 res2, res2, inb3;
    add.u16 res2, res2, local0;
    add.u16 res2, res2, local1;
    add.u16 res2, res2, local2;
    add.u16 res2, res2, local3;
    cvt.f32.f16 f0, inf0;
    cvt.f32.f16 f1, inf1;
    cvt.f32.f16 f2, inf2;
    cvt.f32.f16 f3, inf3;
    add.f32 fo, f0, f1;
    add.f32 fo, fo, f2;
    add.f32 fo, fo, f3;
    cvt.rn.f16.f32 res3, fo;
    st.param.v4.b16 [r+8], {res0, res1, res2, res3};

    ret;
}

.entry main(.param .u32 output, .param .u32 output1, .param .u32 output2, .param .u32 output3,
            .param .u32 output4, .param .u32 output5)
{
    .param .align 4 .b8 result2[16];
    .param .align 4 .b8 insmall2[4];
    .param .align 4 .b8 inbig2[200];
    .param .align 8 .b8 result4[200];
    .param .align 8 .b8 insmall4[8];
    .param .align 8 .b8 inbig4[200];
    .reg .b16 in<4>, out<8>, realout;
    .reg .u32 o;

    mov.b16 in0, 0;
    mov.b16 in1, 1;
    mov.b16 in2, 2;
    mov.b16 in3, 3;

    st.param.v2.b16 [insmall2], {in0, in1};
    st.param.v2.b16 [inbig2+40], {in2, in3};
    st.param.v2.b16 [inbig2+80], {in1, in3};
    st.param.v2.b16 [inbig2+120], {in0, in3};
    st.param.v2.b16 [inbig2+160], {in2, in1};
    call (result2), myadd2, (insmall2, inbig2);
    ld.param.v2.b16 {out0, out1}, [result2+0];
    ld.param.v2.b16 {out2, out3}, [result2+4];
    ld.param.v2.b16 {out4, out5}, [result2+8];
    ld.param.v2.b16 {out6, out7}, [result2+12];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output];
    st.b16 [o], realout;

    st.param.v4.b16 [insmall4], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+40], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+80], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+120], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+160], {in0, in1, in2, in3};
    call (result4), myadd4, (insmall4, inbig4);
    ld.param.v4.b16 {out0, out1, out2, out3}, [result4+0];
    ld.param.v4.b16 {out4, out5, out6, out7}, [result4+8];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output1];
    st.b16 [o], realout;

    st.param.v2.b16 [insmall2], {in0, in1};
    st.param.v2.b16 [inbig2+40], {in2, in3};
    st.param.v2.b16 [inbig2+80], {in1, in3};
    st.param.v2.b16 [inbig2+120], {in0, in3};
    st.param.v2.b16 [inbig2+160], {in2, in1};
    call (result2), myadd2a, (insmall2, inbig2);
    ld.param.v2.b16 {out0, out1}, [result2+0];
    ld.param.v2.b16 {out2, out3}, [result2+4];
    ld.param.v2.b16 {out4, out5}, [result2+8];
    ld.param.v2.b16 {out6, out7}, [result2+12];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output2];
    st.b16 [o], realout;

    st.param.v4.b16 [insmall4], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+40], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+80], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+120], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+160], {in0, in1, in2, in3};
    call (result4), myadd4a, (insmall4, inbig4);
    ld.param.v4.b16 {out0, out1, out2, out3}, [result4+0];
    ld.param.v4.b16 {out4, out5, out6, out7}, [result4+8];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output3];
    st.b16 [o], realout;

    st.param.v2.b16 [insmall2], {in0, in1};
    st.param.v2.b16 [inbig2+40], {in2, in3};
    st.param.v2.b16 [inbig2+80], {in1, in3};
    st.param.v2.b16 [inbig2+120], {in0, in3};
    st.param.v2.b16 [inbig2+160], {in2, in1};
    call (result2), myadd2b, (insmall2, inbig2);
    ld.param.v2.b16 {out0, out1}, [result2+0];
    ld.param.v2.b16 {out2, out3}, [result2+4];
    ld.param.v2.b16 {out4, out5}, [result2+8];
    ld.param.v2.b16 {out6, out7}, [result2+12];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output4];
    st.b16 [o], realout;

    st.param.v4.b16 [insmall4], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+40], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+80], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+120], {in0, in1, in2, in3};
    st.param.v4.b16 [inbig4+160], {in0, in1, in2, in3};
    call (result4), myadd4b, (insmall4, inbig4);
    ld.param.v4.b16 {out0, out1, out2, out3}, [result4+0];
    ld.param.v4.b16 {out4, out5, out6, out7}, [result4+8];

    add.u16 realout, out0, out1;
    add.u16 realout, realout, out2;
    add.u16 realout, realout, out3;
    add.u16 realout, realout, out4;
    add.u16 realout, realout, out5;
    add.u16 realout, realout, out6;
    add.u16 realout, realout, out7;
    ld.param.u32 o, [output5];
    st.b16 [o], realout;
}
