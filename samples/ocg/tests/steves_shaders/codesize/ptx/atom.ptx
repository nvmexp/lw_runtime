	.version 3.1
	.target sm_20
	.global .s32 b;
        .global .s32 c;

	.entry main (.param .u32 t_param) 
	{
	.reg .u32 $r1,$r2,$r3,$r4, $rv1, $rv2;
	mov.s32 	$r1, 1;
	st.global.s32 	[b], $r1;
	ld.param.u32 	$r2, [t_param];
	mov.s32 	$r3, 2;
	atom.global.add.s32 $rv1, [$r2], $r3;
	mov.s32 	$r4, 1;
	atom.global.min.s32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 3;
	atom.global.max.s32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 4;
	atom.global.min.u32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 6;
	atom.global.max.u32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 7;
	atom.global.inc.u32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 8;
	atom.global.dec.u32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 9;
	atom.global.exch.b32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 8;
	atom.global.and.b32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 6;
	atom.global.or.b32 $rv2, [$r2], $r4;
	mov.s32 	$r4, 2;
	atom.global.xor.b32 $rv2, [$r2], $r4;
	exit;
	}


