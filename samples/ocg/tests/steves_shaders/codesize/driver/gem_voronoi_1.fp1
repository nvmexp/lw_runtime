!!FP1.0
# LW_fragment_program generated by LWPU Cg compiler
# cgc version 1.2.0310 NDA Release, build date Dec  8 2003 12:07:59
# command line args: -profile fp30
# source file: gem_voronoi_1.cg
#vendor LWPU Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.whocares : SAMPLER0
#semantic main.whocares2 : SAMPLER1
#semantic main.randomTex : SAMPLER2
#semantic main.imageTex : SAMPLER3
#var fixed4 color : $vin.COL0 : COL0 : 0 : 1
#var float4 UV : $vin.TEX1 : TEX1 : 1 : 1
#var sampler2D whocares : SAMPLER0 : texunit 0 : 2 : 0
#var sampler2D whocares2 : SAMPLER1 : texunit 1 : 3 : 0
#var sampler2D randomTex : SAMPLER2 : texunit 2 : 4 : 1
#var sampler2D imageTex : SAMPLER3 : texunit 3 : 5 : 0
#var float4 main : $vout.COL : COL : -1 : 1
MULR  R0.xy, f[TEX1], {10, 0, 0, 0}.x;   # [ 08] 00.0 (10)( 0)( 0)
FLRR  R0.zw, R0.xyxy;                    # [ 11] 02.0 (11)(10)
ADDR  R1.xy, R0.zwzw, {-1, 0, 0, 0}.x;   # [ 63] 03.0 (51)(11)( 0)
MULR  R1.xy, R1, {0.037, 0.119, 0, 0};   # [ 62] 04.0 (50)(51)( 0)
ADDR  R0.xy, R0, -R0.zwzw;               # [ 07] 05.0 ( 9)(10)(11)
TEX   H1, R1, TEX2, 2D;                  # [ 61] 06.0 (49)( 0)(50)
MOVX  H1.xy, H1;                         # [ 60] 06.1 (48)(49)
ADDR  R1.xy, R1, {0.03, 0.17, 0, 0};     # [ 95] 07.0 (66)(50)( 0)
ADDR  R1.xy, R1, {0.13, 0.4, 0, 0};      # [ 94] 08.0 (65)(66)( 0)
TEX   H0, R1, TEX2, 2D;                  # [ 93] 09.0 (64)( 0)(65)
ADDR  R1.zw, H1.xyxy, {0.5, 0, 0, 0}.x;  # [ 59] 10.0 (47)(48)( 0)
ADDR  R1.xy, R0, {1, 0, 0, 0}.x;         # [ 57] 11.0 (46)( 9)( 0)
ADDR  R1.xy, R1, -R1.zwzw;               # [ 56] 12.0 (45)(46)(47)
MULR  R1.xy, R1, R1;                     # [ 55] 13.0 (44)(45)(45)
ADDR  R1.x, R1, R1.y;                    # [ 54] 14.0 (43)(44)(44)
SLTR  H1.x, R1, {999, 0, 0, 0};          # [ 53] 15.0 (42)(43)( 0)
MOVXC HC.x, H1;                          # [ 92] 15.1 (63)(42)
MOVX  o[COLR], f[COL0];                  # [ 98] 16.0 ( 1)( 0)
MOVX  o[COLR](GT.x), H0;                 # [ 91] 17.0 ( 1)(63)(64)( 1)
MOVXC HC.x, H1;                          # [ 52] 17.1 (41)(42)
MOVR  R2.z, {999, 0, 0, 0}.x;            # [ 68] 18.0 (40)( 0)
MOVR  R2.z(GT.x), R1.x;                  # [ 51] 19.0 (40)(41)(43)(40)
ADDR  R1.xy, R0.zwzw, {-1, 0, 0, 0};     # [ 47] 20.0 (39)(11)( 0)
MULR  R2.xy, R1, {0.037, 0.119, 0, 0};   # [ 46] 21.0 (38)(39)( 0)
TEX   H0, R2, TEX2, 2D;                  # [ 45] 22.0 (37)( 0)(38)
MOVX  H0.xy, H0;                         # [ 44] 22.1 (36)(37)
ADDR  R1.xy, R0, {1, 0, 0, 0};           # [ 41] 23.0 (34)( 9)( 0)
ADDR  R1.zw, H0.xyxy, {0.5, 0, 0, 0}.x;  # [ 43] 24.0 (35)(36)( 0)
ADDR  R1.xy, R1, -R1.zwzw;               # [ 40] 25.0 (33)(34)(35)
MULR  R1.xy, R1, R1;                     # [ 39] 26.0 (32)(33)(33)
ADDR  R1.z, R1.x, R1.y;                  # [ 38] 27.0 (31)(32)(32)
SLTR  H1.x, R1.z, R2.z;                  # [ 37] 28.0 (30)(31)(40)
MOVXC HC.x, H1;                          # [ 85] 28.1 (59)(30)
ADDR  R1.xy, R2, {0.03, 0.17, 0, 0};     # [ 88] 29.0 (62)(38)( 0)
ADDR  R1.xy, R1, {0.13, 0.4, 0, 0};      # [ 87] 30.0 (61)(62)( 0)
TEX   H0, R1, TEX2, 2D;                  # [ 86] 31.0 (60)( 0)(61)
MOVX  o[COLR](GT.x), H0;                 # [ 84] 32.0 ( 1)(59)(60)( 1)
MOVXC HC.x, H1;                          # [ 36] 32.1 (29)(30)
MOVR  R2.z, R2;                          # [ 70] 33.0 (28)(40)
ADDR  R1.xy, R0.zwzw, {0, -1, 0, 0};     # [ 31] 34.0 (27)(11)( 0)
MULR  R2.xy, R1, {0.037, 0.119, 0, 0};   # [ 30] 35.0 (26)(27)( 0)
MOVR  R2.z(GT.x), R1;                    # [ 35] 36.0 (28)(29)(31)(28)
TEX   H0, R2, TEX2, 2D;                  # [ 29] 37.0 (25)( 0)(26)
MOVX  H0.xy, H0;                         # [ 28] 37.1 (24)(25)
ADDR  R1.xy, R0, {0, 1, 0, 0};           # [ 25] 38.0 (22)( 9)( 0)
ADDR  R1.zw, H0.xyxy, {0.5, 0, 0, 0}.x;  # [ 27] 39.0 (23)(24)( 0)
ADDR  R1.xy, R1, -R1.zwzw;               # [ 24] 40.0 (21)(22)(23)
MULR  R1.xy, R1, R1;                     # [ 23] 41.0 (20)(21)(21)
ADDR  R1.z, R1.x, R1.y;                  # [ 22] 42.0 (19)(20)(20)
SLTR  H1.x, R1.z, R2.z;                  # [ 21] 43.0 (18)(19)(28)
MOVXC HC.x, H1;                          # [ 78] 43.1 (55)(18)
ADDR  R1.xy, R2, {0.03, 0.17, 0, 0};     # [ 81] 44.0 (58)(26)( 0)
ADDR  R1.xy, R1, {0.13, 0.4, 0, 0};      # [ 80] 45.0 (57)(58)( 0)
TEX   H0, R1, TEX2, 2D;                  # [ 79] 46.0 (56)( 0)(57)
MOVX  o[COLR](GT.x), H0;                 # [ 77] 47.0 ( 1)(55)(56)( 1)
MOVXC HC.x, H1;                          # [ 20] 47.1 (17)(18)
MOVR  R1.w, R2.z;                        # [ 71] 48.0 (16)(28)
MULR  R1.xy, R0.zwzw, {0.037, 0.119, 0, 0}; # [ 16] 49.0 (15)(11)( 0)
TEX   H0, R1, TEX2, 2D;                  # [ 14] 50.0 (14)( 0)(15)
MOVX  H0.xy, H0;                         # [ 13] 50.1 (13)(14)
MOVR  R1.w(GT.x), R1.z;                  # [ 19] 51.0 (16)(17)(19)(16)
ADDR  R0.zw, H0.xyxy, {0.5, 0, 0, 0}.x;  # [ 12] 52.0 (12)(13)( 0)
ADDR  R0.xy, R0, -R0.zwzw;               # [ 06] 53.0 ( 8)( 9)(12)
MULR  R0.xy, R0, R0;                     # [ 05] 54.0 ( 7)( 8)( 8)
ADDR  R0.x, R0, R0.y;                    # [ 04] 55.0 ( 6)( 7)( 7)
SLTR  H1.x, R0, R1.w;                    # [ 03] 56.0 ( 5)( 6)(16)
MOVXC HC.x, H1;                          # [ 02] 56.1 ( 4)( 5)
ADDR  R0.xy, R1, {0.03, 0.17, 0, 0};     # [ 74] 57.0 (54)(15)( 0)
ADDR  R0.xy, R0, {0.13, 0.4, 0, 0};      # [ 73] 58.0 (53)(54)( 0)
TEX   H0, R0, TEX2, 2D;                  # [ 72] 59.0 (52)( 0)(53)
MOVX  o[COLR](GT.x), H0;                 # [ 01] 60.0 ( 1)( 4)(52)( 1)
END
# 71 instructions, 3 R-regs, 2 H-regs
# 71 inst, (8 mov, 8 tex, 0 complex, 55 math)
# non-mov args: 0 18 41 0 4
# mov args:     0 3 4 0 1
