!!FP1.0
# cgc version 1.2.1001, build date Apr  7 2004 15:05:10
# command line args: -profile fp30
# source file: gem_voronoi_4.cg
#vendor LWPU Corporation
#version 1.0.02
#profile fp30
#program main
#semantic main.whocares : SAMPLER0
#semantic main.whocares2 : SAMPLER1
#semantic main.randomTex : SAMPLER2
#semantic main.imageTex : SAMPLER3
#var fixed4 color : $vin.COL0 : COL0 : 0 : 1
#var float4 UV : $vin.TEX1 : TEX1 : 1 : 1
#var sampler2D whocares : SAMPLER0 : texunit 0 : 2 : 0
#var sampler2D whocares2 : SAMPLER1 : texunit 1 : 3 : 0
#var sampler2D randomTex : SAMPLER2 : texunit 2 : 4 : 1
#var sampler2D imageTex : SAMPLER3 : texunit 3 : 5 : 0
#var float4 main : $vout.COL : COL : -1 : 1
MULR  R0.xy, f[TEX1], {5.77367, 0, 0, 0}.x;
FLRR  R0.zw, R0.xyxy;
ADDR  R1.xy, R0, -R0.zwzw;
ADDR  R0.xy, R0.zwzw, {-1, 0, 0, 0}.x;
MULR  R0.xy, R0, {0.037, 0.119, 0, 0};
TEX   R2.xy, R0, TEX2, 2D;
ADDR  R1.zw, R1.xyxy, {1, 0, 0, 0}.x;
ADDR  R2.xy, -R2, R1.zwzw;
ADDR  R2.xy, R2, {-0.5, 0, 0, 0}.x;
MULR  R2.xy, R2, R2;
ADDR  R2.x, R2, R2.y;
SLTR  H0.x, R2, {999, 0, 0, 0};
MOVRC HC.x, H0;
MOVR  R2.y, R2.x;
MOVR  R2.y(GT.x), {999, 0, 0, 0}.x;
SLTRC HC.x, R2.y, {999, 0, 0, 0};
MOVR  R2.z, R2.y;
MOVR  R2.z(LE.x), {999, 0, 0, 0}.x;
MOVRC HC.x, H0;
MOVR  R2.w, R2.x;
ADDR  R2.xy, R0, {0.03, 0.17, 0, 0};
TEX   R0.xy, R2, TEX2, 2D;
MOVR  R2.w(LE.x), {999, 0, 0, 0}.x;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
SLTRC HC.x, R0.y, R2.z;
MOVR  R3.x, R2.z;
MOVR  R3.x(GT), R0.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R0.x;
ADDR  R0.xy, R2, {0.03, 0.17, 0, 0};
TEX   R0.xy, R0, TEX2, 2D;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
MOVR  R2.z, R3.x;
SLTRC HC.x, R0.y, R3;
MOVR  R2.z(GT.x), R0.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R0.x;
ADDR  R0.xy, R0.zwzw, {-1, 0, 0, 0};
MULR  R0.xy, R0, {0.037, 0.119, 0, 0};
ADDR  R1.zw, R1.xyxy, {1, 0, 0, 0}.xyxy;
TEX   R2.xy, R0, TEX2, 2D;
ADDR  R2.xy, -R2, R1.zwzw;
ADDR  R2.xy, R2, {-0.5, 0, 0, 0}.x;
MULR  R2.xy, R2, R2;
ADDR  R2.x, R2, R2.y;
SLTR  H0.x, R2, R2.w;
MOVRC HC.x, H0;
MOVR  R2.y, R2.x;
MOVR  R2.y(GT.x), R2.w;
SLTRC HC.x, R2.y, R2.z;
MOVR  R2.z(GT.x), R2.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R2.x;
ADDR  R2.xy, R0, {0.03, 0.17, 0, 0};
TEX   R0.xy, R2, TEX2, 2D;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
SLTRC HC.x, R0.y, R2.z;
MOVR  R3.x, R2.z;
MOVR  R3.x(GT), R0.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R0.x;
ADDR  R0.xy, R2, {0.03, 0.17, 0, 0};
TEX   R0.xy, R0, TEX2, 2D;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
MOVR  R2.z, R3.x;
SLTRC HC.x, R0.y, R3;
MOVR  R2.z(GT.x), R0.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R0.x;
ADDR  R0.xy, R0.zwzw, {0, -1, 0, 0};
MULR  R0.xy, R0, {0.037, 0.119, 0, 0};
ADDR  R1.zw, R1.xyxy, {0, 1, 0, 0}.xyxy;
TEX   R2.xy, R0, TEX2, 2D;
ADDR  R2.xy, -R2, R1.zwzw;
ADDR  R2.xy, R2, {-0.5, 0, 0, 0}.x;
MULR  R2.xy, R2, R2;
ADDR  R2.x, R2, R2.y;
SLTR  H0.x, R2, R2.w;
MOVRC HC.x, H0;
MOVR  R2.y, R2.x;
MOVR  R2.y(GT.x), R2.w;
SLTRC HC.x, R2.y, R2.z;
MOVR  R2.z(GT.x), R2.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R2.x;
ADDR  R2.xy, R0, {0.03, 0.17, 0, 0};
TEX   R0.xy, R2, TEX2, 2D;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
SLTRC HC.x, R0.y, R2.z;
MOVR  R2.z(GT.x), R0.y;
MOVRC HC.x, H0;
MOVR  R2.w(GT.x), R0.x;
ADDR  R0.xy, R2, {0.03, 0.17, 0, 0};
TEX   R0.xy, R0, TEX2, 2D;
ADDR  R0.xy, -R0, R1.zwzw;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R2.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R2.w;
MOVR  R1.z, R2;
SLTRC HC.x, R0.y, R2.z;
MOVR  R1.z(GT.x), R0.y;
MOVRC HC.x, H0;
MOVR  R1.w, R2;
MOVR  R1.w(GT.x), R0.x;
MULR  R0.xy, R0.zwzw, {0.037, 0.119, 0, 0};
TEX   R2.xy, R0, TEX2, 2D;
ADDR  R0.zw, -R2.xyxy, R1.xyxy;
ADDR  R0.zw, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.zw, R0, R0;
ADDR  R2.x, R0.z, R0.w;
SLTR  H0.x, R2, R1.w;
MOVRC HC.x, H0;
MOVR  R0.w, R2.x;
MOVR  R0.w(GT.x), R1;
MOVR  R0.z, R1;
SLTRC HC.x, R0.w, R1.z;
MOVR  R0.z(GT.x), R0.w;
MOVRC HC.x, H0;
MOVR  R0.w, R1;
MOVR  R0.w(GT.x), R2.x;
ADDR  R2.xy, R0, {0.03, 0.17, 0, 0};
TEX   R0.xy, R2, TEX2, 2D;
ADDR  R0.xy, -R0, R1;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.x, R0, R0.y;
SLTR  H0.x, R0, R0.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.x;
MOVR  R0.y(GT.x), R0.w;
MOVR  R1.z, R0;
SLTRC HC.x, R0.y, R0.z;
MOVR  R1.z(GT.x), R0.y;
MOVRC HC.x, H0;
MOVR  R1.w, R0;
MOVR  R1.w(GT.x), R0.x;
ADDR  R0.xy, R2, {0.03, 0.17, 0, 0};
TEX   R0, R0, TEX2, 2D;
ADDR  R0.xy, -R0, R1;
ADDR  R0.xy, R0, {-0.5, 0, 0, 0}.x;
MULR  R0.xy, R0, R0;
ADDR  R0.z, R0.x, R0.y;
SLTR  H0.x, R0.z, R1.w;
MOVRC HC.x, H0;
MOVR  R0.y, R0.z;
MOVR  R0.y(GT.x), R1.w;
MOVR  R0.x, R1.z;
SLTRC HC.x, R0.y, R1.z;
MOVR  R0.x(GT), R0.y;
MOVRC HC.x, H0;
MOVX  H0, {0, 1, 0, 0}.xxxy;
MOVR  R0.y, R1.w;
MOVR  R0.y(GT.x), R0.z;
RSQR  R0.x, R0.x;
RSQR  R0.y, R0.y;
RCPR  R0.x, R0.x;
RCPR  R0.y, R0.y;
ADDR  R0.z, R0.x, -R0.y;
SLTRC HC.x, R0.z, {0.025, 0, 0, 0};
MOVX  H0(LE.x), f[COL0];
SLTRC HC.x, R0.y, {0.025, 0, 0, 0};
MOVX  H0(GT.x), {1, 0, 0, 0}.x;
MOVX  o[COLR].x, H0;
SLTRC HC.x, R0, R0.y;
MOVX  o[COLR].x(GT), {1, 0, 0, 0};
MOVX  o[COLR].yzw, H0;
END
# 205 instructions, 4 R-regs, 1 H-regs
# 205 inst, (29 mov, 12 tex, 4 complex, 160 math)
# non-mov args: 0 105 69 0 2
# mov args:     0 27 0 1 1
