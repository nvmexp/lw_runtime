!!FP1.0
# LW_fragment_program generated by LWPU Cg compiler
# cgc version 2.0.0001 NDA Release, build date Nov 12 2003  13:12:16
# command line args: -profile fp30_optx
#vendor LWPU Corporation
#version 1.0.02
#profile fp30_optx
#program main
#semantic main.whocares : SAMPLER0
#semantic main.whocares2 : SAMPLER1
#semantic main.random : SAMPLER2
#semantic time : TIME
#semantic ksec : KSEC
#semantic ksec10 : KSEC10
#semantic frames : FRAMES
#var float4 inColor : $vin.COL0 : COL0 : 0 : 1
#var float4 texcoord0 : $vin.TEX1 : TEX1 : 1 : 1
#var sampler2D whocares : SAMPLER0 : texunit 0 : 2 : 0
#var sampler2D whocares2 : SAMPLER1 : texunit 1 : 3 : 0
#var sampler2D random : SAMPLER2 : texunit 2 : 4 : 1
#var float4 main : $vout.COL : COL : -1 : 1
#var float time : TIME :  : -1 : 0
#var float ksec : KSEC :  : -1 : 1
#var float ksec10 : KSEC10 :  : -1 : 1
#var float frames : FRAMES :  : -1 : 0
DECLARE ksec;
DECLARE ksec10;
#opt=x
MOVR  R0.xy, f[TEX1];                    # [ 15] 00.0 (17)( 0)
MULR  R1.xy, R0, {5, 0, 0, 0}.x;         # [ 14] 01.0 (16)(17)( 0)
FLRR  R2.zw, R1.xyxy;                    # [ 18] 02.0 (18)(16)
ADDR  R0.xy, R1, -R2.zwzw;               # [ 13] 03.0 (15)(16)(18)
ADDR  R2.xy, R0, {0.5, 0, 0, 0}.x;       # [ 12] 04.0 (14)(15)( 0)
MULR  R3.xy, R2.zwzw, {0.037, 0.119, 0, 0}; # [ 95] 05.0 (67)(18)( 0)
ADDR  R0.xy, R3, ksec.x;                 # [ 94] 06.0 (66)(67)( 0)
TEX   R1, R0, TEX2, 2D;                  # [ 93] 07.0 (65)( 0)(66)
MULR  R0.xy, R1, {0.8, 0, 0, 0}.x;       # [ 92] 08.0 (64)(65)( 0)
ADDR  R3.zw, R0.xyxy, {0.1, 0, 0, 0}.x;  # [ 91] 09.0 (63)(64)( 0)
ADDR  R0.xy, R2, -R3.zwzw;               # [ 90] 10.0 (62)(14)(63)
MULR  R0.xy, R0, R0;                     # [ 89] 11.0 (61)(62)(62)
ADDR  R0.x, R0, R0.y;                    # [ 88] 12.0 (60)(61)(61)
SLTR  H7.x, R0, {0.25, 0, 0, 0};         # [ 87] 13.0 (59)(60)( 0)
MOVXC HC.x, H7;                          # [103] 13.1 (70)(59)
MOVR  R0, {0.45, 1, 0, 0}.xxxy;          # [104] 14.0 ( 7)( 0)
MOVR  R0(GT.x), R1;                      # [102] 15.0 ( 7)(70)(65)( 7)
MOVXC HC.x, H7;                          # [ 86] 15.1 (58)(59)
ADDR  R1.xy, R3, ksec10.x;               # [101] 16.0 (69)(67)( 0)
TEX   R1, R1, TEX2, 2D;                  # [100] 17.0 (68)( 0)(69)
MOVR  R0(GT.x), R1;                      # [ 85] 18.0 ( 7)(58)(68)( 7)
ADDR  R1.xy, R2.zwzw, {0, 1, 0, 0};      # [ 75] 19.0 (54)(18)( 0)
MULR  R4.xy, R1, {0.037, 0.119, 0, 0};   # [ 74] 20.0 (53)(54)( 0)
ADDR  R1.xy, R4, ksec.x;                 # [ 73] 21.0 (52)(53)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 72] 22.0 (51)( 0)(52)
MULR  R3.zw, R1.xyxy, {0.8, 0, 0, 0}.x;  # [ 71] 23.0 (50)(51)( 0)
ADDR  R3.xy, R2, {0, -1, 0, 0};          # [ 68] 24.0 (48)(14)( 0)
ADDR  R3.zw, R3, {0.1, 0, 0, 0}.x;       # [ 70] 25.0 (49)(50)( 0)
ADDR  R3.xy, R3, -R3.zwzw;               # [ 67] 26.0 (47)(48)(49)
MULR  R3.xy, R3, R3;                     # [ 66] 27.0 (46)(47)(47)
ADDR  R3.x, R3, R3.y;                    # [ 65] 28.0 (45)(46)(46)
SLTR  H6.x, R3, {0.25, 0, 0, 0};         # [ 64] 29.0 (44)(45)( 0)
MOVXC HC.x, H6;                          # [ 84] 29.1 (57)(44)
MOVR  R0(GT.x), R1;                      # [ 83] 31.0 ( 7)(57)(51)( 7)
MOVXC HC.x, H6;                          # [ 63] 31.1 (43)(44)
ADDR  R1.xy, R4, ksec10.x;               # [ 82] 32.0 (56)(53)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 81] 33.0 (55)( 0)(56)
MOVR  R0(GT.x), R1;                      # [ 62] 34.0 ( 7)(43)(55)( 7)
ADDR  R3.xy, R2, {-1, 0, 0, 0};          # [ 45] 35.0 (33)(14)( 0)
ADDR  R1.xy, R2.zwzw, {1, 0, 0, 0};      # [ 52] 36.0 (39)(18)( 0)
MULR  R4.xy, R1, {0.037, 0.119, 0, 0};   # [ 51] 37.0 (38)(39)( 0)
ADDR  R1.xy, R4, ksec.x;                 # [ 50] 38.0 (37)(38)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 49] 39.0 (36)( 0)(37)
MULR  R3.zw, R1.xyxy, {0.8, 0, 0, 0}.x;  # [ 48] 40.0 (35)(36)( 0)
ADDR  R3.zw, R3, {0.1, 0, 0, 0}.x;       # [ 47] 41.0 (34)(35)( 0)
ADDR  R3.xy, R3, -R3.zwzw;               # [ 44] 42.0 (32)(33)(34)
MULR  R3.xy, R3, R3;                     # [ 43] 43.0 (31)(32)(32)
ADDR  R3.x, R3, R3.y;                    # [ 42] 44.0 (30)(31)(31)
SLTR  H6.x, R3, {0.25, 0, 0, 0};         # [ 41] 45.0 (29)(30)( 0)
MOVXC HC.x, H6;                          # [ 61] 45.1 (42)(29)
ADDR  R2.xy, R2, {-1, 0, 0, 0}.x;        # [ 11] 46.0 (13)(14)( 0)
MOVR  R0(GT.x), R1;                      # [ 60] 47.0 ( 7)(42)(36)( 7)
MOVXC HC.x, H6;                          # [ 40] 47.1 (28)(29)
ADDR  R1.xy, R4, ksec10.x;               # [ 59] 48.0 (41)(38)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 58] 49.0 (40)( 0)(41)
MOVR  R0(GT.x), R1;                      # [ 39] 50.0 ( 7)(28)(40)( 7)
ADDR  R1.xy, R2.zwzw, {1, 0, 0, 0}.x;    # [ 27] 51.0 (24)(18)( 0)
MULR  R3.xy, R1, {0.037, 0.119, 0, 0};   # [ 26] 52.0 (23)(24)( 0)
ADDR  R1.xy, R3, ksec.x;                 # [ 25] 53.0 (22)(23)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 23] 54.0 (21)( 0)(22)
MULR  R2.zw, R1.xyxy, {0.8, 0, 0, 0}.x;  # [ 22] 55.0 (20)(21)( 0)
ADDR  R2.zw, R2, {0.1, 0, 0, 0}.x;       # [ 21] 56.0 (19)(20)( 0)
ADDR  R2.xy, R2, -R2.zwzw;               # [ 10] 57.0 (12)(13)(19)
MULR  R2.xy, R2, R2;                     # [ 09] 58.0 (11)(12)(12)
ADDR  R2.x, R2, R2.y;                    # [ 08] 59.0 (10)(11)(11)
SLTR  H4.x, R2, {0.25, 0, 0, 0};         # [ 07] 60.0 ( 9)(10)( 0)
MOVXC HC.x, H4;                          # [ 38] 60.1 (27)( 9)
MOVR  R0(GT.x), R1;                      # [ 37] 61.0 ( 7)(27)(21)( 7)
MOVXC HC.x, H4;                          # [ 06] 61.1 ( 8)( 9)
ADDR  R1.xy, R3, ksec10.x;               # [ 35] 62.0 (26)(23)( 0)
TEX   R1, R1, TEX2, 2D;                  # [ 34] 63.0 (25)( 0)(26)
MOVR  R0(GT.x), R1;                      # [ 05] 64.0 ( 7)( 8)(25)( 7)
ADDR  R0, R0, {-0.5, 0, 0, 0}.x;         # [ 04] 65.0 ( 6)( 7)( 0)
MULR  R0, R0, {3, 0, 0, 0}.x;            # [ 03] 66.0 ( 5)( 6)( 0)
ADDR  R0, R0, {0.5, 0, 0, 0}.x;          # [ 02] 67.0 ( 4)( 5)( 0)
MULR  o[COLR], R0, f[COL0];              # [ 01] 68.0 ( 1)( 4)( 0)
END
# 76 instructions, 5 R-regs, 0 H-regs
# 76 inst, (1 mov, 8 tex, 0 complex, 67 math)
# non-mov args: 0 16 47 0 12
# mov args:     0 0 0 0 1
# End of program
