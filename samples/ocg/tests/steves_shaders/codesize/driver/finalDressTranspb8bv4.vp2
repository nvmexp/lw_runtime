!!VP2.0
# cgc version 1.3.0001, build date Aug 18 2004 14:28:11
# command line args: -profile vp30
# source file: finalDressTranspb8bv4.vp30.cg
#vendor LWPU Corporation
#version 1.0.02
#profile vp30
#program main
#semantic main.model
#semantic main.globalCamPos
#semantic main.view
#semantic main.proj
#var float4 a2v.coord : $vin.ATTR0 : ATTR0 : 0 : 1
#var float4 a2v.normal : $vin.ATTR1 : ATTR1 : 0 : 1
#var float4 a2v.tangent : $vin.ATTR2 : ATTR2 : 0 : 1
#var float4 a2v.boneWeight0_3 : $vin.ATTR3 : ATTR3 : 0 : 1
#var float4 a2v.boneIndex0_3 : $vin.ATTR4 : ATTR4 : 0 : 1
#var float4 a2v.diffCol : $vin.ATTR5 : ATTR5 : 0 : 1
#var float4x4 model[0] :  : c[0], 4 : 1 : 1
#var float4x4 model[1] :  : c[4], 4 : 1 : 1
#var float4x4 model[2] :  : c[8], 4 : 1 : 1
#var float4x4 model[3] :  : c[12], 4 : 1 : 1
#var float4x4 model[4] :  : c[16], 4 : 1 : 1
#var float4x4 model[5] :  : c[20], 4 : 1 : 1
#var float4x4 model[6] :  : c[24], 4 : 1 : 1
#var float4x4 model[7] :  : c[28], 4 : 1 : 1
#var float4 globalCamPos :  : c[41] : 2 : 1
#var float4x4 view :  : c[32], 4 : 3 : 1
#var float4x4 proj :  : c[36], 4 : 4 : 1
#var float4 main.HPOS : $vout.HPOS : HPOS : -1 : 1
#var float4 main.diffCol : $vout.TEX0 : TEX0 : -1 : 1
#var float3 main.worldEyeDir : $vout.TEX1 : TEX1 : -1 : 1
#var float3 main.worldTanMatrixX : $vout.TEX5 : TEX5 : -1 : 1
#var float3 main.worldTanMatrixY : $vout.TEX6 : TEX6 : -1 : 1
#var float3 main.worldTanMatrixZ : $vout.TEX7 : TEX7 : -1 : 1
#var float4 main.SkinSilouetteVec : $vout.TEX2 : TEX2 : -1 : 1
#const c[40] = 4 1
BB1:
MOV   o[TEX0], v[5];
MOV   o[TEX2].x, v[1].w;
MOV   o[TEX2].w, R0.x;
FLR   R0.w, v[4].y;
FLR   R0.x, v[4].w;
FLR   R0.z, v[4].x;
FLR   R0.y, v[4].z;
MUL   R0.y, R0, c[40].x;
MUL   R0.z, R0, c[40].x;
MUL   R0.x, R0, c[40];
MUL   R0.w, R0, c[40].x;
ARL   A0.w, R0;
ARL   A0.x, R0;
ARL   A0.z, R0;
ARL   A0.y, R0;
DP4   R0.w, c[A0.x + 3], v[0];
DP4   R0.z, c[A0.x + 2], v[0];
DP4   R0.y, c[A0.x + 1], v[0];
DP4   R0.x, c[A0.x], v[0];
DP3   R4.x, v[2], c[A0.x];
DP3   R4.y, v[2], c[A0.x + 1];
DP3   R4.z, v[2], c[A0.x + 2];
DP3   R8.x, v[1], c[A0.x];
DP3   R8.y, v[1], c[A0.x + 1];
DP3   R8.z, v[1], c[A0.x + 2];
DP3   R9.x, v[1], c[A0.y];
DP3   R9.y, v[1], c[A0.y + 1];
DP3   R9.z, v[1], c[A0.y + 2];
DP3   R5.x, v[2], c[A0.y];
DP3   R5.y, v[2], c[A0.y + 1];
DP3   R5.z, v[2], c[A0.y + 2];
DP4   R1.w, c[A0.y + 3], v[0];
DP4   R1.z, c[A0.y + 2], v[0];
DP4   R1.y, c[A0.y + 1], v[0];
DP4   R1.x, c[A0.y], v[0];
DP4   R2.w, c[A0.z + 3], v[0];
DP4   R2.z, c[A0.z + 2], v[0];
DP4   R2.y, c[A0.z + 1], v[0];
DP4   R2.x, c[A0.z], v[0];
DP3   R6.x, v[2], c[A0.z];
DP3   R6.y, v[2], c[A0.z + 1];
DP3   R6.z, v[2], c[A0.z + 2];
DP3   R10.x, v[1], c[A0.z];
DP3   R10.y, v[1], c[A0.z + 1];
DP3   R10.z, v[1], c[A0.z + 2];
DP3   R11.x, v[1], c[A0.w];
DP3   R11.y, v[1], c[A0.w + 1];
DP3   R11.z, v[1], c[A0.w + 2];
DP3   R7.x, v[2], c[A0.w];
DP3   R7.y, v[2], c[A0.w + 1];
DP4   R3.w, c[A0.w + 3], v[0];
DP4   R3.z, c[A0.w + 2], v[0];
DP4   R3.y, c[A0.w + 1], v[0];
DP4   R3.x, c[A0.w], v[0];
DP3   R7.z, v[2], c[A0.w + 2];
MUL   R3, v[3].y, R3;
MUL   R7.xyz, v[3].y, R7;
MUL   R11.xyz, v[3].y, R11;
MAD   R10.xyz, v[3].x, R10, R11;
MAD   R6.xyz, v[3].x, R6, R7;
MAD   R2, v[3].x, R2, R3;
MAD   R1, v[3].z, R1, R2;
MAD   R2.xyz, v[3].z, R5, R6;
MAD   R3.xyz, v[3].z, R9, R10;
MAD   R3.xyz, v[3].w, R8, R3;
MAD   R2.xyz, v[3].w, R4, R2;
MAD   R1, v[3].w, R0, R1;
DP3   R2.w, R2, R2;
ADD   R4.xyz, R1, -c[41];
DP4   R0.w, R1, c[35];
DP4   R0.z, R1, c[34];
DP4   R0.y, R1, c[33];
DP4   R0.x, R1, c[32];
DP3   R1.x, R3, R3;
DP4   o[HPOS].w, R0, c[39];
DP4   o[HPOS].z, R0, c[38];
DP4   o[HPOS].y, R0, c[37];
DP4   o[HPOS].x, R0, c[36];
RSQ   R3.w, R1.x;
DP3   R0.w, R4, R4;
DP3   R1.y, -R0, -R0;
RSQ   R1.x, R2.w;
RSQ   R0.w, R0.w;
RSQ   R1.w, R1.y;
MUL   R1.xyz, R1.x, R2;
MUL   R3.xyz, R3.w, R3;
MOV   o[TEX5].x, R1;
MOV   o[TEX5].z, R3.x;
MOV   o[TEX6].x, R1.y;
MOV   o[TEX6].z, R3.y;
MOV   o[TEX7].x, R1.z;
MOV   o[TEX7].z, R3;
DP3   R2.x, R3, c[32];
DP3   R2.y, R3, c[33];
DP3   R2.z, R3, c[34];
MUL   R5.xyz, R3.zxyw, R1.yzxw;
MAD   R1.xyz, R3.yzxw, R1.zxyw, -R5;
MUL   R0.xyz, R1.w, -R0;
DP3   R0.y, R0, R2;
DP3   R0.x, R1, R1;
ADD   R0.y, -|R0|, c[40];
MUL   o[TEX1].xyz, R0.w, R4;
RSQ   R0.x, R0.x;
MOV   o[TEX2].z, R0.y;
MUL   o[TEX2].y, R0, R0;
MUL   R0.xyz, R0.x, R1;
MUL   R0.xyz, v[2].w, R0;
MOV   o[TEX5].y, R0.x;
MOV   o[TEX6].y, R0;
MOV   o[TEX7].y, R0.z;
END
# 110 instructions, 13 R-regs
