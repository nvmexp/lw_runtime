# Suffix to use while searching the 'OBJ_PATH' for make depend files.
MAKE_DEP_SUFFIX  = '_dep.lwmk'

# Suffix to use while searching the 'OBJ_PATH' for cl param files.
CL_PARAMS_SUFFIX = '.obj_cl_params'

# Project generation file names and variable substitutions.
#
# One project file is emitted per 'PROJECT_INFO' entry.  Builds are run per project.
<PROJECT_INFO>
  <cop_parseasm>
    PROJECT_PATH     = 'cop_parseasm.vcxproj'
    FILTERS_PATH     = 'cop_parseasm.vcxproj.filters'
    TEMPLATE_PATH    = 'cop_parseasm.vcxproj.template'

    # Variables to substitute for this project into any fields in the 'BUILD_INFO' or
    # in the template file
    <VARIABLES>
    </VARIABLES>

  </cop_parseasm>
</PROJECT_INFO>


# Base directory modifications to search when a file is specified as a relative path.
<RELATIVE_SEARCH_BASES>
    '..'
</RELATIVE_SEARCH_BASES>


# Build Information:
#  Instruct the script how to perform a rebuild of the specified build configuration(s) as well as
#  how to fetch relevant information from results of the build.
#
#  Note: 'debug' configuration is always assumed to be defined.  If a particular build configuration
#        is not specified in this section, 'debug' results will be used in place.
#
#  Note: defining more build configurations here implies more builds must be performed in order to
#        generate project files.  This can extend runtime of the script considerably.
<BUILD_INFO>
  <debug>
    BUILD_CMD = 'vcproj_lwmake.bat wddm2 amd64 debug parseasm clobber build LINK=echo LIBEXE=echo -j10'
    OBJ_PATH  = '../_out/wddm2_amd64_debug'
  </debug>
  <develop>
    BUILD_CMD = 'vcproj_lwmake.bat wddm2 amd64 develop parseasm clobber build LINK=echo LIBEXE=echo -j10'
    OBJ_PATH  = '../_out/wddm2_amd64_develop'
  </develop>
  <release>
    BUILD_CMD = 'vcproj_lwmake.bat wddm2 amd64 release parseasm clobber build LINK=echo LIBEXE=echo -j10'
    OBJ_PATH  = '../_out/wddm2_amd64_release'
  </release>
</BUILD_INFO>


# Filter format:
#  '<RelativeDirPath>' => '<FilterLabel>'
#
#  Directories on LHS must be unique, however multiple paths may imply the same
#   filter label.
#
#  Order in which filters are specified implies precedence (stronger precedence
#   first).
#
#  An empty string ('') is a catch-all case.  Any file which does not fit another
#   filter will be bound to the catch-all label.
<FILTERS>
    '../../../../drivers/common/utils/merlwry'          => 'Merlwry utils'
    '../../../../drivers/common/merlwry'                => 'Merlwry'
    '../../../../drivers/common/cop/ori/merlwry'        => 'Merlwry ori'
    '../../../../drivers/common/utils'                  => 'Common Utils'
    '../../../../drivers/OpenGL'                        => 'OpenGL'
    '../../../../drivers/common/cop/ori'                => 'COP ori'
    '../../../../drivers/common/cop'                    => 'COP'
    '../../../../drivers/wgf2um'                        => 'DX'
    '../../../../drivers/common'                        => 'Driver Common'
    '../_out/wddm2_amd64_debug'                         => 'Generated'
    '../_out/wddm2_amd64_develop'                       => 'Generated'
    '../_out/wddm2_amd64_release'                       => 'Generated'
    '..'                                                => 'Parseasm App Files'
    ''                                                  => 'Other'
</FILTERS>


# Extra Sources:
#  Specify relative paths to extra sources here.  These are sources that we would
#  like included in the project, but are not specifically listed as build
#  dependences by any build output.
<EXTRA_SOURCES>
    '../makefile.lwmk'
</EXTRA_SOURCES>

<VISUALIZERS>
    '../../../../drivers/common/cop/ori/plugin/OriVisualizers.natvis'
    '../../../../drivers/common/utils/generic/visualizers/genericVisualizers.natvis'
    '../../../../drivers/common/utils/lwstl/visualizers/lwstlVisualizers.natvis'
</VISUALIZERS>


# Extra Includes:
#  Specify relative paths to add to the include search paths.  These are include
#  paths which are not referenced by any build output dependence file, but
#  nevertheless contribute to parsing headers by Intellisense.
<EXTRA_INCLUDES>
    '../../../../drivers/common/utils/generic/impl'
    '../../../../drivers/common/utils/lwstl/impl'
</EXTRA_INCLUDES>
