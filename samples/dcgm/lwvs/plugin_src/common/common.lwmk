##############################################################################
# define LOCAL_SOURCES
##############################################################################

LW_CXX_EXCEPTIONS := 0
LW_CXX_RTTI := 0
LW_BUILD_PIC := 1

LWRRENT_DIR := $(LWVS_DIR)/plugin_src/common

LOCAL_SOURCES :=
LOCAL_SOURCES += DcgmRecorder.cpp
LOCAL_SOURCES += PluginCommon.cpp
LOCAL_SOURCES += DcgmValuesSinceHolder.cpp

LOCAL_SOURCES := $(addprefix $(LWRRENT_DIR)/,$(LOCAL_SOURCES))

LOCAL_OBJECTS := $(call BUILD_OBJECT_LIST,$(LOCAL_SOURCES))

###############################################################################
## define LOCAL_CFLAGS
###############################################################################

LOCAL_INCLUDES := $(LWRRENT_DIR)
LOCAL_INCLUDES += $(LWVS_PLUGIN_INCLUDES)

LOCAL_CFLAGS := $(DCGM_GLOBAL_CFLAGS)
LOCAL_CFLAGS += $(addprefix -I,$(LOCAL_INCLUDES))
LOCAL_CFLAGS += -fopenmp -Wno-sign-compare

LWVS_PLUGIN_LIB_NAME := libpluginCommon.so

###############################################################################
## define LOCAL_LD_FLAGS
###############################################################################

LOCAL9_LDFLAGS := $(DCGM_GLOBAL_LDFLAGS)
LOCAL9_LDFLAGS += -L $(LOCAL_LWDA9_DIR)/lib/$(LW_TARGET_ARCH) -l$(LWDART) -lstdc++ -lc

LOCAL10_LDFLAGS := $(DCGM_GLOBAL_LDFLAGS)
LOCAL10_LDFLAGS += -L $(LOCAL_LWDA10_DIR)/lib/$(LW_TARGET_ARCH) -l$(LWDART) -lstdc++ -lc

# Make the two directories for the different builds of the plugins
plugin_dirs:
	@$(MKDIR) -p $(OUTPUTDIR)/lwda9
	@$(MKDIR) -p $(OUTPUTDIR)/lwda10

common9_TARGET  := $(OUTPUTDIR)/lwda9/$(LWVS_PLUGIN_LIB_NAME)
common9_SONAME  := $(LWVS_PLUGIN_LIB_NAME)
common9_OBJECTS := $(LOCAL_OBJECTS)
common9_CFLAGS  := $(LOCAL_CFLAGS) $(addprefix -I,$(LOCAL_LWDA9_DIR)/include)
ifndef VULCAN
common9_LDFLAGS := $(LOCAL9_LDFLAGS)
else
common9_LDFLAGS := 
endif
common9_DEPENDS ?= $(LWML_H_OUT) $(LWML_GRID_H_OUT) plugin_dirs

common10_TARGET  := $(OUTPUTDIR)/lwda10/$(LWVS_PLUGIN_LIB_NAME)
common10_SONAME  := $(LWVS_PLUGIN_LIB_NAME)
common10_OBJECTS := $(LOCAL_OBJECTS)
common10_CFLAGS  := $(LOCAL_CFLAGS) $(addprefix -I,$(LOCAL_LWDA10_DIR)/include)
ifndef VULCAN
common10_LDFLAGS := $(LOCAL10_LDFLAGS)
else
common10_LDFLAGS := 
endif
common10_DEPENDS ?= $(LWML_H_OUT) $(LWML_GRID_H_OUT) plugin_dirs

# C++11 produces a ctor/dtor for basic_string that RedHat and CentOS do not
# like; use the default C++ dialect.
CXX_STD =

build: $(common10_TARGET) $(common9_TARGET) plugin_dirs
$(eval $(call MAKE_SHARED_LIBRARY,common10))
$(eval $(call MAKE_SHARED_LIBRARY,common9))

###############################################################################
## End of nested lwmk
###############################################################################
ALL_LWML_SOURCES += $(LOCAL_SOURCES)
