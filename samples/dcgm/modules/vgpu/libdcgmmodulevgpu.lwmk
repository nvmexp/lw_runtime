##############################################################################
# define LOCAL_SOURCES
##############################################################################


LW_CXX_EXCEPTIONS := 0
LW_CXX_RTTI := 0

LWRRENT_DIR := $(LW_SOURCE)/apps/dcgm/modules/vgpu

LOCAL_SOURCES :=
LOCAL_SOURCES += DcgmModuleVgpu.cpp

LOCAL_SOURCES := $(addprefix $(LWRRENT_DIR)/,$(LOCAL_SOURCES))

LOCAL_OBJECTS := $(call BUILD_OBJECT_LIST,$(LOCAL_SOURCES))

LOCAL_INCLUDES := $(LWRRENT_DIR)
LOCAL_INCLUDES += $(OUTPUTDIR)
LOCAL_INCLUDES += $(DCGM_DIR)/common/protobuf
LOCAL_INCLUDES += $(DCGM_DIR)/libs/protobuf-2.6.0/include/
LOCAL_INCLUDES += $(DCGM_DIR)/common
LOCAL_INCLUDES += $(DCGM_DIR)/dcgmlib/src/
LOCAL_INCLUDES += $(DCGM_DIR)/dcgmlib/
LOCAL_INCLUDES += $(DCGM_DIR)/modules/
LOCAL_INCLUDES += $(DCGM_DIR)/common/transport
LOCAL_INCLUDES += $(DCGM_DIR)/modules/vgpu
#We should probably get rid of the below eventually
LOCAL_INCLUDES += $(LWMLCOMMON_DIR)
LOCAL_INCLUDES += $(DCGM_DIR)/libs/libevent-2.0.22-stable/include/
LOCAL_INCLUDES += $(DCGM_DIR)/libs/libevent-2.0.22-stable/include/event2/
LOCAL_INCLUDES += $(LWVS_DIR)/libs/jsoncpp-0.10.6/include
LOCAL_INCLUDES += $(LW_SOURCE)/drivers/common/inc/
LOCAL_INCLUDES += $(LW_SOURCE)/sdk/lwpu/inc
LOCAL_INCLUDES += $(LWML_DIR)

LOCAL_CFLAGS := $(DCGM_GLOBAL_CFLAGS)
LOCAL_CFLAGS += $(addprefix -I,$(LOCAL_INCLUDES))
ifeq ($(LW_HOST_OS_FAMILY_LOWER_CASE), unix)
LOCAL_CFLAGS += -fPIC
endif

DCGMVGPU_SHARED_LIBRARY_NAME:=libdcgmmodulevgpu.so

LOCAL_LDFLAGS := $(DCGM_GLOBAL_LDFLAGS)
LOCAL_LDFLAGS += $(COMMON_LDFLAGS)
    
LOCAL_LDFLAGS += -rdynamic
LOCAL_LDFLAGS += $(COMMON_LDFLAGS) -lstdc++ -ldcgm -lgcc_s
#backup flags -levent -lc -lz -ljsonc -lprotobuf -llwcmproto -lm -lrt

dcgmmodulevgpu_TARGET  := $(OUTPUTDIR)/$(DCGMVGPU_SHARED_LIBRARY_NAME)
dcgmmodulevgpu_SONAME  := $(DCGMVGPU_SHARED_LIBRARY_NAME)
dcgmmodulevgpu_OBJECTS := $(LOCAL_OBJECTS)
dcgmmodulevgpu_CFLAGS  := $(LOCAL_CFLAGS)
dcgmmodulevgpu_LDFLAGS := $(LOCAL_LDFLAGS)
dcgmmodulevgpu_DEPENDS ?= $(dcgm_TARGET)


DCGMMODULEVGPU_DECODE_DB := $(OUTPUTDIR)/dcgmmodulevgpu_decode_db.txt
$(DCGMMODULEVGPU_DECODE_DB) : $(LOCAL_SOURCES)
	$(GREP) -n -B 1 -A 4 -e '^\s*PRINT_' -e 'DEBUG_' $^ > $@

build: $(dcgmmodulevgpu_TARGET)
dcgmbuildsyncpoint:: $(dcgmmodulevgpu_TARGET)
$(eval $(call MAKE_SHARED_LIBRARY,dcgmmodulevgpu))
build: $(dcgmmodulevgpu_TARGET).guardwords

#################################################################################
# Finish
#################################################################################
ALL_LWML_SOURCES += $(LOCAL_SOURCES)
