##############################################################################
#
# lwmk for the hostengine
#
##############################################################################

##############################################################################
# define SOURCES
##############################################################################

LW_MODULE_LOGGING_NAME = "lw-hostengine"

LWRRENT_DIR = $(LW_SOURCE)/apps/dcgm/hostengine
LWMLCOMMON_DIR = $(LW_SOURCE)/apps/lwml/common

LOCAL_SOURCES :=
LOCAL_SOURCES += src/main.cpp
LOCAL_SOURCES += src/he_cmd_parser.cpp
LOCAL_SOURCES += ../../../drivers/resman/src/libraries/commandline/commandline.c

LOCAL_SOURCES := $(addprefix $(LWRRENT_DIR)/,$(LOCAL_SOURCES))

LOCAL_OBJECTS := $(call BUILD_OBJECT_LIST,$(LOCAL_SOURCES))
#LOCAL_OBJECTS += $(dcgm_loader_TARGET)
#LOCAL_SOURCES += $(LW_SOURCE)/drivers/resman/src/libraries/commandline/commandline.c


##############################################################################
## define LOCAL_CFLAGS
###############################################################################
LOCAL_INCLUDES :=
LOCAL_INCLUDES += $(LWRRENT_DIR)
LOCAL_INCLUDES += $(DCGM_DIR)/$(OUTPUTDIR)
LOCAL_INCLUDES += $(DCGM_DIR)/common/
LOCAL_INCLUDES += $(LW_SOURCE)/drivers/common/inc/
LOCAL_INCLUDES += $(LW_SOURCE)/sdk/lwpu/inc
LOCAL_INCLUDES += $(LWMLCOMMON_DIR)
LOCAL_INCLUDES += $(DCGM_DIR)/dcgmlib/
LOCAL_INCLUDES += $(DCGM_DIR)/modules

ifdef DCGM_BUILD_LWSWITCH_MODULE
    LOCAL_INCLUDES += $(DCGM_DIR)/modules/lwswitch
endif

ifdef VULCAN
LOCAL_INCLUDES += $(LWML_INC_DIR)
else
LOCAL_INCLUDES += $(LWML_DIR)/$(OUTPUTDIR)
endif
LOCAL_INCLUDES += $(LW_SOURCE)/drivers/resman/inc/libraries

LOCAL_CFLAGS := $(DCGM_GLOBAL_CFLAGS)
ifeq ($(LW_HOST_OS_FAMILY_LOWER_CASE), windows)
    LOCAL_CFLAGS += /EHsc -D_SCL_SELWRE_NO_WARNINGS
endif
LOCAL_CFLAGS += -Wno-write-strings
LOCAL_CFLAGS += -DDRIVER_MAJOR_VERSION=\"$(DRIVER_VERSION)\"
LOCAL_CFLAGS += $(addprefix -I,$(LOCAL_INCLUDES))

ifdef DCGM_BUILD_LWSWITCH_MODULE
    LOCAL_CFLAGS += -DDCGM_BUILD_LWSWITCH_MODULE
endif

##############################################################################
## define LOCAL_LDFLAGS
###############################################################################
LOCAL_LDFLAGS := $(DCGM_GLOBAL_LDFLAGS)
ifeq ($(LW_HOST_OS_FAMILY_LOWER_CASE), windows)
    LOCAL_LDFLAGS += $(LWML_DIR)/$(OUTPUTDIR)/lwml.lib $(LWML_DIR)/$(OUTPUTDIR)/zlib.lib
else
    LOCAL_LDFLAGS += -L $(LWML_DIR)/$(OUTPUTDIR) -rdynamic
    LOCAL_LDFLAGS += $(COMMON_LDFLAGS)
    LOCAL_LDFLAGS += -L $(DCGM_DIR)/$(OUTPUTDIR) -ldcgm -lstdc++ -lgcc_s
endif

##############################################################################
# build
##############################################################################
lwpu-he_TARGET  := $(OUTPUTDIR)/lw-hostengine$(BINSUFFIX)
lwpu-he_OBJECTS := $(LOCAL_OBJECTS)
lwpu-he_CFLAGS  := $(LOCAL_CFLAGS)
lwpu-he_LDFLAGS := $(LOCAL_LDFLAGS)
lwpu-he_DEPENDS ?= $(dcgm_TARGET)

build: $(lwpu-he_TARGET) $(LW_VER_H)
dcgmbuildsyncpoint:: $(lwpu-he_TARGET) $(LW_VER_H)


#build: $(lwpu-he_TARGET)
$(eval $(call MAKE_EXELWTABLE,lwpu-he))
build: $(lwpu-he_TARGET).guardwords

#clean:
    #-$(RM) $(lwpu-he_TARGET) $(LOCAL_OBJECTS)

#################################################################################
## End of nested lwmk
##################################################################################
ALL_LWML_SOURCES += $(LOCAL_SOURCES)
